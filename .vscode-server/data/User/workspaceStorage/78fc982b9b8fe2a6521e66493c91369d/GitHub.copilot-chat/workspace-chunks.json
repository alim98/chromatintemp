{"version":"1.0.0","entries":{"file:///teamspace/studios/this_studio/dataloader/lowres_image_dataloader.py":{"hash":"658d293bafe690b5ba9dea6f9df4dfb2f6ec7d06c4d15f3d8410ecd56e9a99ba","entries":[{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\ndef load_chromatin_classes(csv_path, ignore_unclassified=True):\n    \"\"\"\n    Load chromatin class information from CSV file.\n    \n    Args:\n        csv_path (str): Path to the CSV file containing chromatin class information.\n        ignore_unclassified (bool): Whether to ignore entries with class_name \"Unclassified\".\n        \n    Returns:\n        dict: Dictionary mapping sample_id to class information (id and name).\n    \"\"\"\n    if not os.path.exists(csv_path):\n        print(f\"Warning: Chromatin class CSV file not found: {csv_path}\")\n        return {}\n    \n    df = pd.read_csv(csv_path)\n    \n    sample_to_class = {}\n    for _, row in df.iterrows():\n        if ignore_unclassified and (row['class_name'] == 'Unclassified' or row['class_id'] == 19):\n            continue\n        sample_to_class[str(row['sample_id'])] = {\n            'class_id': row['class_id'],\n            'class_name': row['class_name']\n        }\n    \n    return sample_to_class\n#...\n```","range":{"startLineNumber":16,"startColumn":0,"endLineNumber":42,"endColumn":26},"embedding":"AIDpPACAHLwAAJI8AABQvQAATjsA4DC9AACAuQAQrr0AoL69AGBBPQAADbwAoDU9AKAyPQCAzzwAQOs8AICuPABAwTwAgPs8AIAbvADQzz0AgP48AACBuwDAozwAQOq8AAA+OwAAtLoAAJi7AMAePQAAUjsAAIi7AIAsPADAB70AgBU8AAAcOwBA77wAgK28AAACvADApT0AIBW9AKBZvQAAGLoA4A69AABkPQAgHj0AoDU9AECOvACgGz0AALs7AAC3OwCgEb0AQAC9AMBJPQAAmLoAgKK8AEBDvQDQnz0AwJ28AEC3PAAgU70AQGa9AGADPQAgML0AwFI9AIDpPAAAZL0AwDg9AMChvACgBL0AgJS8AEAlvQDAZD0AAAAAAICevABQkb0AAHM8AACtvADgAr0AQCY9AGBwvQCAFL0AgCu8ADCBPQCAvzwAAFm8AACGvACAFL0AAPy6AMCTvAAASjwAYC69ACAVPQAAG7wAwGS9AKBKPQAAqDsAAIM7AAAmPQBw0L0AALs8AOBwPQAAGD0AMKM9AMD8PADAvLwAAE67AOCEvQDgEb0A0KO9ACBXvQCAyrwAADu8AADwuwAAwDwAAOQ7AECgPACgRb0A4AO+AABnPABAgbwAwDc9AODHvQAAXLsAALQ6AICmvADgMb0AAKA8AMBgPQAAkLkAAIC8AABPvQBwsz0AwKC8AADMuwCgO70AYBq9AACruwCAV7wAACC9ABCpvQAAvTwAgDQ8AADAuAAAtzwAAF67AMDZvAAAILwAQLm8ANCPPQAA1zsAAGw9AECGPABgCT0AAIU8AMBEvQDgOL0AgPO8AAA3PABgdD0AAJA8AAAjvQDANj0AgKU8AKCYPQAATrwAcJC9AECCvABgFL0AAE08AMBhvQAgKb0AAJO8AADROwDAfj0AADM8AMALvQCAljwAwEO9ACB3PQAg9b0AMNS9AADhuwCABb0AAFQ8ADCyvQAgcb0AQJe9AIASPQAA0LkAgOO8AMAePQCARjwAAMC7AAC4PAAAFr0AAC47AEBBPQDQjz0AwMM8AIBgvAAATjsAAEe9AEC0PQAAE7wA8Jq9AABpPAAAQrwAgBs9AADquwAgdL0AABA7AABfPACgYL0AkLe9ADC3PQBgBL0AAIw7AMDhvABAPD0AwIk9AADrOwCAkDwAoAC9AACNuwCA9jwAQLm9ACAOvQCAcTwA4CG9AAALvQAARrwAIEk9AMChvACALjwAABe9AAAdPQAgfb0AAA09AMDdvADAuzwAAGS8AGB4vQAAzjsAgGw8AIB/PQDgYD0AADo7AADauwBQGr4A4E09AIAmPABwij0AgBA9AHCHPQBQ8r0AEIy9AOA6PQDA4rwAoGu9AMDivAAAp7wAwCq9AKAVPQDgX70AALu7AMAWPQCgPL0AgGE8AIAzPAAApDoAAC47AGAsPQAAQL0AACI8AKAjvQAQnr0AgGQ8AEDjvABAcT0AwJE8AIDXPADQhr0AQM48AEDSvACwpz0AACK9AOACPQCAUb0AALs8ACCCvQBgfL0AALI8AAAyvQAgB70A4L69AGCTvQCgCj0AQC+9AKAhPQDAhDwAAHa8AKC5vQAgGL0AwO48AIBAPAAAprwAgJ48AIDwvAAA37wAoIw9AAAAuQBAFb0AwKU9AEC5PABAx7wAAIu8AIByvAAAKzwAgOS8AEDgPACAbz0AAJy9AADUOgDgRz0AoH89ALCdvQDAdD0AcI+9AIBcPAAAjj0AgI29AECJvAAAIb0AwNA8AIDuvADgBz0AgHw8AAA0vQCgRT0AIBq9AICNPQCAxLwAwKk8AIDJvADwiz0AAFY8AEDCPAAAg7sAwO49AABMuwBAlDwAIIQ9AAAOvQAAPjwAgHU8AAAauwCAkjwAQGC9AAAAuwAA1bsAAIY8AMAqvQCAcbwAAGc8AGBHvQCACz0AAGq7AACyvAAgAT0AYEM9AKBDvQCArjwAEKO9AMCXPACAab0AoHS9AEAzvQAgYD0AAIE9AADuOwDwij0AAEM8ACAZPQBgIj0AYH69AKAqPQAgBD0AgFW8AADquwCAv7wAwBI9AMCrPAAAaL0A4HI9AAA5vABAIL0AQGc9AEABvQBAFj0AIHM9AIAqvACgCj0AgDi9AED4PAAAHbwAgFa8APCivQDgYr0AwPY8AIBOPQCApDwAAKU8AICkPACAaz0AgBK9AIAwPADADL0AYPS9AGAzPQDgDb0AYHY9AIDHPAAAnTsAAOo7AMCMPACAcrwA8J09ABCbPQCgNb0AAM08AMAAvQDAvrwA4Ak9AAAuvAAALrsAAHk8AADFvACA6zwAIBg9AEAbPQBgRb0AgPk8AOBePQBAlrwAQPA8AABVPAAAeTwAQGq9AADrPAAAFLwAAAy7AOAlPQAAujsAQMU8AKCDPQAwnz0AIH+9ANDsvQBA770AsKg9ANCZvQAAOjwAYJw9AMCTPAAAhLoAAMu8ADCPPQAgTL0AQMy8AEBWPQAgjb0AAM49AGB5PQCAJDwAAGW8AIDLPADgHL0AgI09AKA8vQBAvLwAIIS9ACArvQBApb0AcIC9AAAbvAAAKDwAAGY9AMCGvACA6bwAsLw9AEAtvQCA67wAAA47AABgvAAAK7wAYBa9AAAYuwAA/rwAgGC8AOCBPQAgSb0AAC68ALCavQBQhz0AgOg8AECOvACwhb0AAIq8AKALvQCA+rwAAK+7AADQOQDwkz0=","chunkHash":"3f65d60136188e8ec3909d5952eb628620e170301562338685bc8281182d6389"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\ndef default_transform(image):\n    \"\"\"\n    Default transform for 3D volume processing (no resizing).\n    \n    Args:\n        image (numpy.ndarray): Input volume of shape [Z, H, W] or [H, W]\n        \n    Returns:\n        torch.Tensor: Processed volume tensor of shape [Z, 1, H, W] or [1, H, W]\n    \"\"\"\n    if len(image.shape) == 3:  # If it's a 3D volume\n        transformed_slices = []\n        for z in range(image.shape[0]):\n            slice_img = Image.fromarray(image[z].astype(np.uint8))\n            transform = transforms.Compose([\n                transforms.ToTensor(),\n                transforms.Normalize(mean=[0.485], std=[0.229])\n            ])\n            transformed_slices.append(transform(slice_img))\n        return torch.stack(transformed_slices, dim=0)  # Stack along first dimension\n    else:  # If it's a 2D image\n        if isinstance(image, np.ndarray):\n            image = Image.fromarray(image.astype(np.uint8))\n        transform = transforms.Compose([\n            #...\n```","range":{"startLineNumber":46,"startColumn":0,"endLineNumber":69,"endColumn":0},"embedding":"AAA9vACgC70AQEs9AABlvACAorwAgLG9AIBGPQAArzsAYJe9AADdvADggb0AoL49AABEPAAAYLkAAKQ7AKAxPQAAIDsAADW8AOAlvQAAE7wAALS6AOATvQAAILkAgC08AAAUvAAA4jwAAJ47AECOvACAqzwAAM+7AKAAvQBA47wAwEe9AKBYvQAAcrwAAMO8AGBcvQCAvT0AgDw8AEAaPQCgej0AoAq9AECuPAAAAT0A4K89AICiPAAA+jsAAM28AIAXvAAAiLsAwJy8ALCNPQBgnj0AgGW9AECFvADgdj0AAG68AKBLvQAAmLoAwJy8AECXPABgL70AAAC4AMAGPQCAB7wAYEY9APCNvQBAjbwAIAm9AACBvAAA3bwAALa7AAB0PAAADr0AwDs9AADcuwAAKbwAAGw9AKAJvQCgLr0AgDq8AECPvAAABj0AEMc9AEANvQAgKD0AAAI8ALDUvQAAjTwAYDa9AED8vAAArLoAgJ+8AABSPQAAfL0AACw9AGCRPQAAgDkAgDU9ACBIPQBAirwAoMk9AAAaPABAzjwAgMk8AHCmvQCAOj0AQF69ACCKPQCAoz0AAIC7ACBPvQAAIrwAAFU8AMApvQDwhb0AADC8AECMPACwpr0AAFC8AIAAvgAAubsAAAC5AEAaPQCAPjwAgCO9AOCqPQCAqb0AACm9AAAHvADAxT0AAIG8AABzPAAIGL4AABM8ANCLvQBAFT0AAHg7AIB9vABQpj0AgNm8AMDMPAAAujwAAPM7AIDAvADgez0A8LK9AKDKPQBAizwAoII9AEDJvACAPT0AkIW9AMDNvACAOb0AgNe8AECcPQBQ4z0AgHc9AAApvQCAtrwAwOU8AIBXPAAgTD0AoIO9AADmOwAACbwAwNS8AGCpvQDgnL0AQIc8AICQvAAgBb0AAIu9ACAhPQAAODoAgFq9AMDvvABgI70AAFu8AECVPAAAabwAsIe9ACC/vQDgUb0AwO08AKC8vQBA9DwAoFi9AOB+PQBwhr0AwDA9AECzvAAAjDoAAJg7AGAKPQDALz0AUIY9AAAFPQCAULwAwPI8AAAoPQAASj0AEIa9AIDePACAM7wAgFI8AECKvACgjr0AAE28AABlvAAAK70AIFo9AAAxPAAAU70AADC7AICAvADgeT0AwBq9AABgOwAAT7wAgL09AACdPQCAEbwAcLW9ANC1vQCgDr0AELy9AABVvADArbwAgHI8AACUOgAA2DsAABA8AKAEvQDAq70AAKm8AAB6vADgUT0AAB68AEAcvQBAwbwAAEg6AIALPAAAqrsAwKC8AACQugDgBr0AsK09AIAAvADAgjwAgJa9AADVvACAS70AgBS8AIDZvAAgQr0AAIS7AEDGvQAADD0AQAQ9AACruwAASjsAgJE8AMC4PAAAcrsAIAw9AAC4ugAAsDkAgKo9AGCpPQCA9jwAAKC8AMC0vABAab0AAIO7AGCXPQAA3TsAADe8AMCKPAAAZbwAAIA5AKB5vQDA0jwAgAO8AMDCPACATL0AAK88AGBmvQCoGL4A4Ko9AKCvvQDA/bwAANi8AACgOgBAsD0AQDq9AIB9vACAT70AEJq9AIBIvAAAgbwAgH08AGAhPQBgBL0AgC89AABCPABASr0AANI7AKAHPQAA5bsA8Jk9AKBpPQCAErwAABQ9AAC5vAAAnTsAAAw7AIB2PACAAjwAoGS9ADCGvQCAojwAQKK8AABUOwCAPLwAIIu9AAATPACA17wAAKO9AABIvABgHz0AAIE7AMB1vQDAsDwAABy9AACJuwCALj0A4FS9AIBUPADgjr0AQEO9AECyvACAhLwAAD09ANCZPQBgWT0AANM8AIBJPADAsrwAgFW8AGAavQDgNr0AwL28AEC9vACAAD0AgPU8AOBjvQDgRL0AAHu8APC5vQCATrwAwNA9AMDMPABAlr0AwCg9ACBTPQAAIDoAQKY8AADmOwAAOT0AwJy8AABevACAkrwAAHa9AIBVvQDQrT0AYHo9AEC7vADgFD0AABg8AGADPQBAAD0A4Fs9AGAJvQBAOT0AAKY7AMD8vACAsbwAAEO8AABoPADAI70A4FG9AKBfPQDA3jwAgOk8AAAAOgCAeTwAwAc9AECSPAAAMTwAwME8AACQuwDgj70AABY7AADAuQAAUDoAALQ8AICWvADAjDwAgPk8AOB9vQAApTwAAMi8AMCXvACAHL0AIAe9AAAwPQBAhL0A4H49AND0vQDQuT0AADQ8AMBEvQAgPL0AgBY9AKATPQBAF70AAAC7AKBCvQAAtTwAAAK9AABOuwCAA7wA4AM9AABIvAAAmLoAAME8AEBUPQAAvDsAgBk8AECDPACQkr0AwPu8AIBdPACAUbwAIGi9AMAYPQAgYb0AQOe8AGBOPQAAGDwAgNY8AACJPABgKz0AILa9AAAAPABgFb0AACS7AIC4PAAAFzwAMIy9AKAVPQCAqbwAQKe8AECAPAAAcDwA4DG9AMCPvQBAMb0AQKA8AMCCPQAgyz0AQFw9AIA0PABAFr0AAMg6AADquwDA5bwAAPy8AADrPQBAxrwA4HS9AGBcvQCAWD0AAJY9AMCoPACANbwAgIc8AADgOgCAprwAAAC7AAD4OgCAGrwAAL88AACSPACw270AgIw8AMCpvADAt7wAwBY9AEDSvAAg3z0AAPi8AIBrPABgF70AgIg8AADoOwCAEbwAgB49AEAWPQAAuzw=","chunkHash":"b4ef52644e47f25613ee3a289d0229d63833a8a23de3d6900274ab7c461077f5"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\ndef default_transform(image):\n    #...\n            transforms.ToTensor(),\n            transforms.Normalize(mean=[0.485], std=[0.229])\n        ])\n        return transform(image)\n#...\n```","range":{"startLineNumber":69,"startColumn":0,"endLineNumber":72,"endColumn":31},"embedding":"AACIOwBA2LwAIAQ9AIBdvAAAlLsAAN69AEBWPQAA0DsAwKa9AIBMPABwu70AYGQ9AIABvADgK70AAKs7AIDQPAAAzzwA4Dm9ANCBvQAA2TwAAAm8AEA0vQBAw7wAAM+7AAAYPQDAszwAQM68AMA4vQBAzDwAAPM7AOCXvQCAv7wAwGC9AGBpvQDAxTwAAAq9AIBDPADAyT0AAMQ6AACmPADA1DwAwKi9AEAFPQBArjwA4BI9AAAouwBgJz0AACK9AIBjPAAABjsAAMy7AMDgPABgkj0AAIM7AMC/vAAwjD0AQIo8AAAEPADADb0AoCC9AAA9PQAAt7sAQJ48AIBTPACAFrwAgNk8APCevQAAP7wAoAi9AMCgvAAAYrwAAPa7AMClPAAAJ70AwFA9AMCRPAAAODsAaAI+AMCRvACAXL0AQJC8AIADPAAA5LwA4L49AABYuwAAszsAIA+9ANDuvQCADT0AAMm7AABtvAAA4LsAANy6AEBOPQAAdL0AwA89AKC6PQCAVLwAgBQ9AKBCPQBAJD0AYB09AACauwDArDwAAJa7AJClvQCANT0AgKy9AEAtPQBw/T0AAIC4ABCAvQAADLwAAKQ8AOANPQBAcL0AgHO9AMChPABger0AAG67ADCvvQAA1bsAAPI7AIByPAAA/LoAAJG7AKAdPQAwlb0AQIm9AACAvAAwlT0AwOu8AICJPADgl70AALk7AKB8vQAAqDwAQLo8AAD4uwCQkT0AAOI7AMCDPADA8LwAADM8AEBZvQDAUT0AYN+9ANC0PQDgSz0AoHA9AACEOgAApLoAYH+9AABevAAw2b0AAGy9AGA/PQBgrj0AQIA8AEBVvQAAJbwAwM88AABgPQAAVD0AwGG9AADeuwAgAL0AgIS9ADDHvQBQq70AADw8ACAAPQBAzbwAsJy9AABgOQAAMLsAAMy7AGBNvQBgaL0AQJG8AIAlvACA2LwAwJK9AHDtvQAgJ70AgCy9ACAMvQCAVz0AICu9AEBYPQBgP70AIFY9AABRvADAeb0AQBk9AACAOwCAFTwAgCw8ACACPQDgNj0AACg8AFCePQBAST0AQFW9AGABvQBAZb0AAKu7AACsOwDggL0AgPM8AAA2PABArLwAAM48AACkOgAAzDsAgIC8AIAPvAAATT0AwJ28AADJuwCADrwAAPo8AEDJPQDAyrwA4H69ABCHvQCAKr0A0IO9AADAvACgKr0AYA89ACAHvQCAKj0AAP67AADcOgAwtL0AAL07AIDmvABAvDwAQNe8AFDFvQCAR7wAAMI7AIDFPAAAG7wAgGe8AABuuwCAFb0AkME9AACXOwAABrsAwA29AIDfvADwmr0AgAm8AMCIvACgBb0AAKy8AEDPvQAAwDwAAFw8AIAVPABAw7wAwPm8AGCDPQBALL0AgDa8AADuuwAA/DsAQEE9AIBdPQBA2TwAABS8AIBCPAAgTL0AAI88AMBdPQCADT0AABC7AADFPABAQL0AoCC9AGBWvQCATj0AgBO8AADPvAAgWL0AoA09AMBwvQCQ3L0AAIg9ALCcvQDgFr0AQBy9AADVvADAxTwAYIa9AACEOgDAC70AII29AADUugBAoLwAQP28AABIOgDAWL0AgKk8AOBFPQDA8LwAgCQ9AEC8PACAwrwAQBM9AJCMPQBAVT0AAIc7AAAmPQDAwjwAQPu8AADhOwAAFzwAIDK9AGDSvQAgKr0AgIO8AHCGvQDAs7wAoMW9AEA5vQCAnbwAQHO9AIACPABAqzwAANm7AAAgOwAAkTsAgGG8AKAPvQBAnjwAwCC9AIB7PABgy70AAHa9AABKuwAANLsAIFg9AGBAPQCgPj0AAIc9AAALPAAA1DoAAKY8AICZvACAR7wAwGI9AJCFvQAAZjsAQKs8APChvQDgQr0AgNW8ACCfvQCAZLwAMOg9AACMugAApb0AYBY9AOAvPQAA1LoAYGo9AAD3OwAAMLoAAC28AKAdvQCAarwAQIW8AMCSvQBwtD0AwDc9AMDQvADQhD0AACi8AEAfPQAAnD0AgOA8AAB2PABwkT0AYCk9AMDsvACAq7wAgLI8AIBIPADAobwAYGa9AICLPAAAWrsAcJU9AIBRvAAAMD0AANw8ACB0PQAA27wAAFW8AICKvADgRb0AAKc8AACBuwAAHbwAgCg8AIBlPACgHz0AAEA7AKAsvQAAEzwAYC+9AIDcvAAA67sAQIG8AMA1PQAAz70AsLA9ADC/vQAgaz0AwJS8AKB5vQAAM70AwIE9AIDrPAAAfbwAAMs8AGAtvQCARz0AoAe9AABOPACAcb0A4Fc9AABnvAAAbLwAAEU8AGCUPQAA3bwA4Ak9AGAJPQCARL0AgNC8AIAQvAAAsTsAYDq9APCAPQBA5LwAIB49AOB6PQBA1bwAoBo9AIA2PABgjT0AoKq9AEDZvABAf70AQEk9AKAGPQAA9zwAAP+8AIAuPQAAaTwAALI7AAABPQAAmDsAADm9AMA9vQCALr0AAAW8ADCtPQCAkD0A4HA9AEC/PACAebwAQIQ9AKBNvQAAcrwAAIA7AOAdPQDAI70AoHe9AEC3vQCAX7wAkLA9AKCBPQCAObwAAJQ8AMDNvAAA3bwAQIW8AMCmPAAAVbwAgAi8AADOvAAAG70AgAM8AIDFvADAB70AAMC4AHCMvQBAWT0AAK87AACQuQBA17wAgNM8AECEPAAAAAAAAMC6AABXPACwpz0=","chunkHash":"9b4f9b0e50bd5d9887177648a282fe921cb298de249fcd4b6a6fb519f0574dca"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                #  target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=80 , # Now represents desired number of frames\n                 debug=False):\n        \"\"\"\n        Args:\n            root_dir (str): Root directory containing the samples.\n            transform (callable, optional): Transform to apply to the images.\n            sample_ids (list, optional): List of sample IDs to include.\n            class_csv_path (str, optional): Path to CSV file with class information.\n            filter_by_class (int or list, optional): Class ID(s) to include.\n            ignore_unclassified (bool): Whether to ignore unclassified samples.\n            target_size (tuple): Target image size (height, width).\n            sample_percent (int): Percentage of samples to load per class (1-100).\n        #...\n```","range":{"startLineNumber":90,"startColumn":0,"endLineNumber":100,"endColumn":0},"embedding":"AEDNPACAhbwAwNc8ABC1vQAAALwAoBO9AKBGvQAAbLsAsJC9AHCBPQBgCr0A4Cm9AACBvAAAWrwAwNs8AIAyPQDA9jwAwJE8ABDNvQBA/DwAoEo9AECzvQAAKDsAkMm9AKB0PQBAID0AAFA8AMCovADACz0AgDe8AIB8vQDAqbwAgN69ACA4vQBAMr0AgK28AKCCPQDgXD0AgC08ACASvQDgJT0AQD69AIAjPQCArbwAgGE8AACwvACgET0AgEW8AIB9PQAAjDwAoHG9AACTPQBgAD0AIGC9AIBjvACAHj0AAME7AACwOgAAFb0AACm9AEB8PQAAK7wAgCM8AABBPAAAjrwAAGg7AKBPvQCAFLwAcIe9AABzvAAA4DkAgCu9AACAOgAwlb0AoCU9AACpOwBA2LwAMLA9AICkvQAgZ70AAK+7AAAEPQAwlb0AAOA7AAD7uwDARr0AgDa9ALCivQCA0DwAQFW9AIAJvAAAGDoAQOa8AAAxPQBAw7wAgEW8AAALPQBAqLwAUI89AEBDPQCAEzwAQIo8AIABvABAIL0AIEq9AGB9vQDA7rwAIEi9AIALvAAA8zwAwCu9AKCJvQDA0zwAAIQ7AOBpPQAAbr0AwIe9AECaPACAM70AwFO9ALDCvQAAuLoAAFG8AMCJvABAAj0AAOy7AOCfPQCA3rwAQMM8AKAfvQBAwD0AQMu8AABAvQCAjr0AgBW9AICjvAAAXDsAAJa8AIA/vQAAojsAgLG8AABdPABASj0AAM08AAAjvACgHz0A4K69ADC2PQCgDj0AAGI9AEDTvADAojwAQOQ8AOB6vQAAe7wAQOK8AIC/vADgkj0AAFG8AOCEvQDA3zwAAFo8AFCsPQCAoTwAAO28AAAnPABgRb0AAJq7AADFvQAAETwAAKg7AOAnPQBA/zwAQHa9AIAVvACAmrwAgDG9AKBVPQAAvLsAAIS9AADtuwDApL0AoC69AGCpvQAAZ70AsKe9AIAlvADACz0AAFm9AMCJvAAAKLwAgJ48ANCKvQAAybwAQIY8AABPPABA4DwAIBI9AABaPACAWjwAYCG9AACmPQCAb7wAsKO9AACYPAAACjwAYG+9AACVuwAA4bwAQMy8AAA+OwAAxDsAgHy8AIBPPAAAzjwAAOk7AAAQPAAAwDgAgGU8AAAuvACAlrwAACa8AECYPAAAKrsAwMC8AOAHvQBAl70AwDC9AIBdvACAKr0AQOS8AFCnvQAAkLkAwNK8AIA2PABA6rwAALu7AJCdvQAANDsAgBs8AODJvQAAGrwAYC29AICWPACADz0AgBg8AOAqvQAIA74A0Jk9AAAAvQDwnT0AwAm9AIBMPADwlL0AgFo8AACAOACgKL0AIC69AEDVvQAArTwAgGg8AMCtvAAAhbwAQMu8AKCyPQAAzLoAAPo7AADougBAHr0AIFw9AGBVPQAAJz0AAJy8AECtvADQhr0AsLU9AADIPAAAeLsAQMY8AADgPAAAWb0AAKm8AAAvvACwzT0AQJE8AACPvADgMb0AAJW8AIDCvABAobwAYCM9AADQvQAAR70AsIG9AKAovQDgN70AAHC8AAC5OwAANDsAEJ69AADSOwCABjwAwEa9AAAtvACARzwAgPk8AOAHPQAAeL0AoCs9AACJPADgW70AAPq7AIAZvACAELwAgGu8AIDTPAAAaLoAgM28AIA9PQAArz0AYCC9ANCvvQCALbwAwIc9AAB6vQDA8LwA0JO9AIAwvAAAHL0AALO9AGAqPQAAajsAAC68AADRuwAArDoAoAK9AAAHPABAxbwAAEC9AGBQPQAwp70AAEI7AOAJvQAAHLsAADY8AMC9PQBAFj0AkNY9AAAoOgAgDr0A4BE9AAC0vABAe70AAPE8AMBmvQAAUDwAAJi6APDNvQCADL0AgHG8AKBHvQAAVD0A8L09AACwOgDAcr0AAJQ7AMDZvACAIjwA4Go9AADFuwDAdj0AALa7AOAhvQCAyrwA4EO9AAADvACQ8j0AwEU9APCLvQAgbz0AwBW9AKAjPQDAlDwAgGu8AEAJPQBgED0AAMI7AIDBPAAgar0AAF47AMDEPADgYL0AwJm8AAC8OgAQhj0AQEs9AABivAAAYjwA4HQ9AICYPAAA/rwAQKG8AABzvACALbwAgOY8AMD5PADAbT0AwJs9AABOPQAAf7wA4F29AIDavAAA2DsAABO9AIBkvAAAPrwAQJ+9AECDPABAIr0AAKU9AADzOwBACT0AQMW8AEAavQBAszwAsKc9AFCVPQBAkbwAgAO9AEC+PACgFz0AALC7AIAPPQAA4LoAQJy8AAAPvAAAPzwAwKG8AAB2PACAbLwAANQ8AECcPAAA6DoAgEi8AACQPAAAgDsAANE8AAArPQDgUL0AAOO8AECCPAAAqTwAAM08AAAougDw9j0AoNC9AECkvACQur0AgE48AEBZvQAA2zwAwB89AIBOPQCAET0AAGu8AADVPABAIr0AoCO9AKBDvQAA0L0AIDc9AMCXPQAAUDsAAPY8AECjPAAwo70AAFg9AIAuvQCABbwAgEm8AIBDPABAF70AQJu9AADHOwCgID0AsJ09AACQOQBAsrwAIFk9AKCcvQDgcb0AgKk8AEANPQCAA7wAgCy9AAAIOwAgnL0AQOE8AIC5PAAAUDsAgAo8AIBFvQBAhD0AgGQ9AKAjvQAg1L0AwIi8AEDuvACAarwAABG8AADEOgCQDz4=","chunkHash":"6847b18faae8091c34e7f7d2dd56208b162e7f6c6fa620208b4ee58b4b3339c3"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                #  target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=80 , # Now represents desired number of frames\n                 debug=False):\n        #...\n            z_window_size (int): Desired number of frames in output.\n            debug (bool): Whether to print debug information.\n        \"\"\"\n        self.root_dir = root_dir\n        self.transform = transform if transform else lambda x: default_transform(x, target_size)\n        self.target_size = target_size\n        self.debug = debug\n        self.sample_percent = min(max(1, sample_percent), 100)\n        self.z_window_size = z_window_size\n        \n        self.samples = []\n        \n        # Directory-based loading\n        print(f\"Loading samples from directory structure: {root_dir}\")\n        #...\n```","range":{"startLineNumber":100,"startColumn":0,"endLineNumber":114,"endColumn":0},"embedding":"AAAaPQAAKrwAAH48AJCsvQCAXbwAwM28AMDovAAAIDkAEIq9AGAKPQCA8rwAABK9AECivAAA8bsAwC09AED+PABAET0AQN48AAC/vQBART0AIEw9AHDCvQAAqLoA4Km9AGB1PQAgQT0AABo8AACkvACAED0AAMq7ALCqvQBA3LwAEMm9AEA7vQAAU70AwMW8AICNPQBgRj0AgBs8AEAIvQAAGT0AYD29AKA/PQCAlLwAgNg8AMDGvAAAsjwAgGm8AOBvPQDAuDwAwIS9ADCTPQDAmzwAAHC9AABjvACA+jwAAKM8AIA6vADAIb0AwAC9AMCPPQAAyLoAgEc8AAB2OwBAm7wAgHa8AEAOvQAAADoA4F29AADpuwCADjwA4DG9AABEPAAwjr0AwDk9AIAgPACAFbwA8KM9ALCvvQCAP70AgJG8AAAzPQCQkL0AAAs8AADfuwAAQb0AYFW9APCLvQBADz0AgFy9AIBsvACAnjwAwN+8AKAlPQBAtLwAANG7AEDvPADAy7wA8J09AOBrPQAADjsAABw8AIAWvABA9rwA4Fi9ADCVvQBgDb0AIDy9AACwOgBAGT0AQAG9ALCHvQBAnDwAgJs8AHCVPQCAib0AMIy9AICmPACAH70AIFO9AMC6vQDgCj0AgOC8AKAzvQBAOj0AADG8AACDPQBAE70AgGI8AEAzvQAw4z0AQLu8AOAYvQDQrL0AQD29AECVvAAA+jsAgCm9AEBovQAA0rsAwIK8AAAeOwCgcD0AQKc8AMCgvACAKT0AoLK9AJCvPQBAmzwAgIQ9AACDuwBAlDwAIBs9AKCgvQAAKLwAYCe9AABOvACAcT0AgEO8AABcvQBArTwAgEY8ACC0PQBAzDwAQMW8AIB0PABwhr0AANC7AIDdvQAAwLkAgIY8AGBIPQDAzDwAMJO9AAAUPAAAxLwAABi9AMAsPQBA5LwAQGy9AADmuwDgk70AoCe9AFCZvQDgRr0AQMq9AABPvADAsDwAYCS9AIBXvADA+7wAwL48AIBuvQDA27wAwAQ9AABFvAAA/DwAQAQ9AABaOwAAmLsAwPS8AHCzPQAAYLsAkJ29AEDJPACAHDwAEIq9AABKvABgGL0AQFK9AADEOgAApDoAANs7AAByOwBA/DwAAHG8AMCXPAAAHLsAAIk8AAC2vADA+LwAAJq7AIApPACAcjwAADK8AAA1vQDgYb0AoG29AAC7uwDA8bwAIBq9ABCZvQAAB7wAAN28AAAuPABA3LwAAHA7AOCTvQAAdDwAwJ88AJC3vQDAvLwAABq9AIBEPAAAAz0AAEo8AMAUvQAg9r0AIGY9AAA6vQDQlj0AABq9AACVuwBQlb0AgCU8AADAOwBAJr0AwAe9AODMvQAA1jwAQKk8AICLvABAC70AAH28ADC4PQCAMbwAgKk8AABQOgBgQr0AEJk9AMAwPQBgCj0AAG+8AIACPABgXr0A4K09AICtPAAAvrwAQIk8AADvPAAgSb0AAI68AIC0vABg4D0AQK08AADcvABATb0AADS8AIAIvADgAL0AQDE9AEDOvQCAKb0A4Ba9AKAXvQDATr0AQKi8AADUOwCAYTwAELa9AAC/PAAAJrwAwPK8AIB7vAAADbwAwKk8AIAPPQDAbr0AIFI9AIDHPAAAIr0AAEe8AABEuwCAO7wAgMK8AIAkPQAAHzwAAHa8AIBaPQDAVD0AYDO9ALCXvQAAwDgAQFE9AKCNvQDADb0AUJu9AACtuwAA+rwAkKK9AMCfPADA2jwAABO8AABcuwAABLwAgEi9AICePAAAt7wAwHa9AOAyPQAArL0AADS7AIDUvAAAqrsAgL88APDCPQAAMj0AkOE9AAC1uwAgHb0AACw9AICVvACgRr0AQOA8AEBbvQCARTwAAMA6ADDSvQBAoLwAADQ7ACBQvQBASD0AMMU9AADYuwCwl70AgDQ8AIAMvACA9jwA4Fs9AECyPABAiT0AAPE7AED3vAAAzLoAQEG9AMDLvAAQ6D0AwEU9AMCIvQBgAz0AoC+9AEA+PQBAHT0AAJC8AIAZPQAA1TwAAPw7AEAIPQBAib0AQIO8AICsPABgRr0AAKa7AIBYvABgjz0AADY9AADjvAAAlzwAgGY9AGAkPQBA+bwAAD28AACcOwCAgbwAwJo8AGA4PQDARj0AQHs9AEBnPQAA5LoAYEa9AEDKvACAF7wAYF29AADEuwAAALsAcJC9AACwPADABb0AQLc9AICiPAAAGj0AgKi8AIDavACA1TwAUMs9AIAVPQDA77wAwMi8AMC6PACgSz0AgEa8AKAZPQCAWDwAwNC8AIAMPAAACrsAIE69AIDRPAAAgLwAwO48AIAwPADAh7wAwNS8AIAGPQAABLsAQIw8AMA5PQBAW70AIBq9AMCWPADgET0AQPA8AADtuwAw4z0AMMW9AIBivAAgrL0AgII8AEAsvQBA2TwAoBc9AIDTPABAIT0AAAS8AAAMPABAvrwAoAW9AKAlvQDA370AIBI9ABCZPQAAfrsAgIE8AADAPADAVr0AYHA9AAD5vACAxbwAAJ+8AMCZPAAgSb0AwI+9AADsuwDgXj0A8LU9AACiPACAd7wAoCc9ANCAvQDgML0AAPM8AEA2PQAAOLwAYES9AACluwBwrb0AwPU8AAC0OgAAxDsAANA5AEAzvQBgTT0AoD49AMArvQCAw70AgEm8AMC4vACAQ7wAAPs7AIB3PAAgCz4=","chunkHash":"e7a8386d315729e3f079237514e4be4cf3c45a0a9891f324731ae0f7d6386f5a"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                #  target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=80 , # Now represents desired number of frames\n                 debug=False):\n        #...\n        class_dirs = [d for d in os.listdir(root_dir) if os.path.isdir(os.path.join(root_dir, d))]\n        class_id_map = {name: idx for idx, name in enumerate(sorted(class_dirs))}\n        for class_name in class_dirs:\n            if ignore_unclassified and class_name.lower() == 'unclassified':\n                continue\n            if filter_by_class is not None:\n                # If filter_by_class is a list of class names or ids\n                if isinstance(filter_by_class, int):\n                    allowed = [filter_by_class]\n                else:\n                    allowed = filter_by_class\n                #...\n```","range":{"startLineNumber":114,"startColumn":0,"endLineNumber":125,"endColumn":0},"embedding":"AKAMPQAAe7wAAAi6ABC1vQAAyLwAAIy8AEC4vAAA5LsAgGa9AKAKPQDAprwAgPG8AECBvAAAhDoAIEY9ACAIPQBAMz0AgJA8ANDYvQCgUD0AoEA9AGC3vQAAeLoA0KW9ANCAPQCAVj0AgDc8AEC5vACgEj0AAOw6AOCUvQBAmrwAsMa9AKBJvQCAR70AgLm8AABnPQCwgj0AAJY7AEAGvQBAGT0AwLu8AKBRPQDAo7wAAJc8AEC9vABAzjwAACC8AGA1PQBAxTwAMIW9ABCrPQAAsjwAgHy9AAA0vABAnzwAAHI7AADEuwCgCb0AwA29AIBwPQAA4LoAACE8AAASOwBAy7wAgIa8AKAzvQAAu7sAAFO9AADnuwAA4zsAIEe9AMDuPABwi70AgG09AIA3PABAorwAMKk9AGCYvQAARr0AwLy8AGAyPQCAnr0AgB88AABWvAAAS70A4Eq9ALCAvQBAHz0AQES9AMCAvAAAxDwAoBy9AMBHPQBAmrwAACi6AADdPACAy7wA4KM9AMBmPQAAu7sAgG88AAChuwDA8LwAICu9ACCyvQBgFb0A4AC9AACHuwCgAz0AgP68ACCYvQBAnTwAAKU8AMCePQBghL0AAJC9AIAEPQBAJL0AwE+9ACC3vQAA/jwAwOK8AAAwvQDgGT0AgEC8AGByPQCABr0AAGU8AGBdvQCw1j0AgMm8AGBHvQCQlb0AoDu9AABqvAAASjsAQC+9ACBGvQAA5DsAQIy8AACAOgCgZj0AAMQ8AAAlvABA4DwAkLm9AHCiPQAAGz0AkJc9AAA8uwCAVTwAoDA9ADCavQAArrsAwD+9AIAbvADAQz0AgAG8AOBTvQAAXzwAADY7AFC4PQBA9TwAQP68AABAPACgiL0AABo7AEDMvQAAnDsAANY7AMBSPQAAdDwAMI+9AIArPAAgCL0AQPm8AABJPQCA8LwAQI69AAD2uwCQmL0AgAa9ACCdvQBgSr0AMLG9AAD/uwDAmjwA4Cm9AIAxvAAgCb0AgKc8AGBYvQCAQLwAQB49AABougDgAD0AgOk8AIA0vAAA17sAoBa9ALCxPQBAnLwAsJi9AMDbPAAAqTwA4Fi9AIADvACgOr0AwEC9AACpuwAAajsAgBe8AABNPAAAzDwAQKq8AIB9PAAAELsAgBg8AADXvADA3LwAAF67AAD9OwDAhTwAgKG8AOA2vQCgV70AIFq9AADUuwBA/LwAACy9ADCmvQAAILwAgBe9AIBZPAAAXrwAgBk8AICWvQCAYjwAQLg8AAC8vQCAcbwAgDq9AABJPADA8TwAAP47AAA9vQBQ8b0AYIc9AIAivQAgcz0AgAK9AABhvABgo70AgBo8AAA8OwBAOb0AQAe9ACDOvQBA0zwAgMk8AAAavAAAv7wAgLm8ACClPQCAKbwAgK08AAAivAAgSb0AgJQ9AKAJPQBgOT0AQLC8AAAQugDgZb0AkJo9AAA2PABAw7wAAMY7AIDGPADgQL0AgDa8AMCdvABA5j0AgDI8AIDdvACwib0AwJO8AMCNvABAE70AoEc9APDZvQCAH70AwBW9ACA3vQBgIr0AQBq9AAAlPABA8zwAQK+9AAArPADAsLwAgLu8AADeuwAAnrsAwLA8AOAxPQAAVb0AwFA9AACuPABAQb0AADC8AADQuwCADbwAQNu8AIDKPAAAILsAQLa8AIBoPQAgaj0AQEK9AECyvQDAt7wAAJA9ALCYvQAA1LwAsJi9AADwugAA6rwAELi9AECePACgFj0AACa8AADJuwAAL7wA4Em9AABZPAAAirwAwHy9AEAoPQAwkr0AAAy8AIAAvQAAB7wAgNE8AFCnPQCA8jwAAPU9AABauwDAIL0AYDo9AADAvACgNr0AgM88AIAwvQAAaDsAABy8ACDZvQCAYbwAANg6AOAjvQAAQT0AANE9AADQuwDAg70AADQ7AECMvABA9jwAQGU9AMChPAAggD0AANc7AOAIvQAALDsAQDW9AAAzvADQ0D0AAD49AKCEvQCAND0AQP68AMA6PQCAHD0AQL28AGALPQDAAz0AALw6AECDPACwpb0AQIy8AIDvPABgSr0AAOw6AABJvADAcT0AQDI9AMDtvABAhjwAwFw9AOAaPQBA9rwAAKi7AACpOwAAprwAAKc8AGBAPQBAJD0AMIQ9ACAGPQAAejsAIDG9AECHvAAAqrsA4A+9AACvuwAA+zsAcJW9AAAIPQAAGb0AgLU9AMCyPABA5zwAgGC8AKAQvQCAuDwA0Lk9AOAhPQAA/rwA4BS9AACGPACAHT0AgAy8AAC3PABAizwAIAi9AICCPAAAmDoA4A+9AEDiPACAg7wAwOo8AIBHPAAAYbwAgOS8AMDxPAAAQDkAwII8AED1PACgU70AABW9AIA6PADA4DwAYAQ9AACMuwDgAT4AoMC9AEACvQCAq70AgJI8AMAJvQAAED0AIDU9AMCkPABA1zwAANu7AEC5PAAAv7wAQOe8AMAPvQCQ9L0AIE09AEC3PQAAoDoAAO47AMDlPABAYb0AYHA9AADrvAAA0bwAAFu8AMCnPADgY70A0I69AADKuwDAXD0AsNA9AIB9PAAAOrwAIAg9AAAuvQAAar0AAMM8AMAgPQAAPbwAIEO9AADeuwDQmr0AAAA9AAALPAAAqjsAALM7AKBjvQDAPj0AwEk9AMDovABwwL0AALG8AAC9vACAQbwAAGA5AICLPABAGz4=","chunkHash":"6da308d436e3abc7f3a76921f50c2e4d17b01637a14cd7b5db40a1eebdcfe64d"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                #  target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=80 , # Now represents desired number of frames\n                 debug=False):\n        #...\n                if class_name not in allowed and class_id_map[class_name] not in allowed:\n                    continue\n            class_path = os.path.join(root_dir, class_name)\n            sample_names = [d for d in os.listdir(class_path) if os.path.isdir(os.path.join(class_path, d))]\n            if sample_ids is not None:\n                sample_names = [s for s in sample_names if s in sample_ids or s.zfill(4) in sample_ids]\n            if self.sample_percent < 100:\n                n_keep = max(1, int(len(sample_names) * self.sample_percent / 100.0))\n                #...\n```","range":{"startLineNumber":125,"startColumn":0,"endLineNumber":133,"endColumn":0},"embedding":"AIAbPQDAgbwAAJA7ANC1vQDA0bwAwMG8AMDPvAAAm7sAAGS9AEABPQCAgbwA4AO9AAC/vAAAwDgAoDM9AADuPACAOj0AAIo8ALDJvQDAPT0AwCo9ALCivQCATLwAQKa9AAB/PQBgOj0AAFE8AADkvABAJj0AAP27AECZvQBAr7wAINW9AMBovQDgRr0AALe8AEBdPQBgfD0AADS7ACAGvQDACD0AQK28ACA/PQCAdrwAQKg8AAB9vABA5TwAgB+8ACA1PQCA1TwAkIC9AFCaPQCAdzwAEJq9AACyuwAAwDwAgCU8AABSuwAAGb0A4CO9AOB/PQAABjsAgAU8AABaOwAA6rwAANq7AKA/vQAADLwAIHO9AAADvAAALjsAwEe9AAC9PAAQjb0A4EA9AIAaPAAAcbwAwKM9AGCPvQAAYL0AwJq8ACAsPQAQoL0AgAQ8AIBXvABAUL0AwGm9AGCHvQDAHz0AYFG9AICYvADAuTwAgAW9ACAuPQCAbbwAAAq7AEDtPAAAybwAQKY9AGBsPQCADrwAgFI8AADquwCAy7wAIBa9AHC0vQBgBr0AgMu8AAC2uwBgCj0AABS9AECYvQAAtTwAQOQ8AJCVPQCQjr0A0Iu9AOALPQDgKb0AgFa9ANC5vQAABT0AwOG8AEBCvQBgHD0AgDi8AICGPQDgJr0AQKw8AKBYvQAA1j0AQMG8AIA2vQCglr0AwDe9AMDMvAAAmjsAQCK9AMBVvQAApTsAAJe8AACsOwDAez0AQLM8AAAMvADABD0A0Ku9AICcPQDAAD0A4Jc9AABwOgCAQDwAQD49AOCXvQAAjbsAYEy9AAD9uwDgUD0AADa8AEBXvQAA9DsAALw7AGC2PQAAEj0AwPC8AAAPPACQg70AAAAAAMDavQAANDsAANk7ACBDPQAAejwA4I29AIBGPABADL0AgMu8AIBBPQCA5LwAgIW9AIBJvADwmL0AIBW9AECMvQCAKr0A4LS9AIA0vADAtTwAwCa9AABZvACgEL0AgI48AKBgvQDAj7wAwOw8AAAdvACA/DwAwMo8AIAKvACAK7wAgBm9AFCxPQCAfbwAQJm9AIDjPABA0TwAAF69AABBvACgW70AADe9AADAuAAAALgAAL27AAB2OwAAxTwAAG28AIB5PAAAPrsAgBU8AADCvADAEL0AAE47AIA6PAAAnjwAAI68AKBDvQBALr0AgEy9AAD1uwBgAL0AYE29AJClvQAAQLwAwCK9AMCRPABAv7wAgBk8AMCQvQCAAjwAgIw8AGC8vQCANrwAAC+9AADzOwAgBD0AABs8AOA0vQDA9L0AgG49AIAevQAggT0AQPi8AIAlvADwqb0AAKA5AAC1OwBgN70AAPS8AADMvQCAvzwAAN08AAAMvAAAvrwAwLS8AOCqPQAA6rsAwKk8AIAsvABgTb0AsJQ9AID9PADAOj0AgI+8AADguwAgWr0AgJ89AMCWPACAvbwAANA7AAC6PACAUr0AQL68AMDzvADg1z0AAIE8AMDavABAYr0AwL+8AAAxvABAC70AICA9AFDXvQCA/LwAwBG9AAD7vADgQb0AIBe9AABlPABA1jwA8La9AECJPAAAlbwAALu8AAB7vAAAfLsAwJs8ACAZPQDAUL0AIE89AECkPABgP70AgGW8AAAIvACAU7wAgNa8AEDIPAAAlzsAwLy8AKCEPQDgbD0AAEO9ACCyvQBAw7wAIJw9AFCgvQBgBr0AoJ29AABQOgCA8rwAYKy9AICfPACAED0AAFS8AAAMvAAAPLwAIFi9AAAfPABAk7wA4HW9AGAQPQAgm70AABS7ACADvQAAHrsAwAA9AECvPQCgIT0A4Pc9AADwugDACb0AQBA9AICkvABAJr0AQMQ8AKBNvQAANDsAAGy7AMDdvQCAvLwAAAA8AKAWvQDgOD0A8NA9AAANvAAwkL0AAOC6AAAqvAAA2jwAIGY9AIBmPACggj0AAMI7AGAPvQAAoDsAoDa9AMCAvACAxj0AwDc9AOBzvQAAGD0A4A69AOBfPQAgEz0AQPO8AIAEPQAADj0AAIE7AMDSPAAgq70AwIm8AADcPAAgS70AAHi6AMCAvABQhD0AgDw9AMDqvABAmzwAYFc9AKAiPQDA37wAgBa8AABYOwCAurwAQKs8AOAvPQBAIz0AAIk9AEAmPQAA0DkA4BO9AACivAAAOrsAQBy9AAC0ugAAGzwAwIG9AEAIPQBgEL0AALg9AEC6PABgCj0AgJ68AGASvQBA4TwAQMI9AGAoPQDA4rwAwB29AABXPADgMT0AAJa7AEDEPABAhjwAYAu9AIBXPACAJDwAICe9AEDoPAAAZrwAALY8AAC3OwCAb7wAAPK8AIDrPAAAdLsAAGA8AOAxPQCASb0AYB29AAAMPACA7zwAwB09AADsugDQ/z0AgL29AMD6vACAtr0AQLM8AAD4vAAgGT0A4Bo9AIDSPADAyjwAAOy7AIClPACAq7wAgOm8AIAnvQAQ9L0A4Dk9ADCwPQAAPDsAABo7AMDhPABgbL0AgHo9AAAHvQDAnrwAgIK8AIC1PABAZr0A4Ia9AAA1vADgbj0AwMo9AIDOPABAo7wAgP88AMBWvQBgSL0AgIw8AGAYPQCATrwAYES9AADVuwDwor0AgNI8AACeOwAA6DsAANE7ACBPvQAgGz0AYHE9AMAevQCAwL0AwIm8AAC7vAAAVLwAALA6AAD4OwAwED4=","chunkHash":"2faee01b1cbca54315a459bd5d6604e3bbf43c235d80445e61cb200529e316a5"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                #  target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=80 , # Now represents desired number of frames\n                 debug=False):\n        #...\n                sample_names = random.sample(sample_names, n_keep)\n            for sample_name in sample_names:\n                sample_dir = os.path.join(class_path, sample_name)\n                raw_dir = os.path.join(sample_dir, 'raw')\n                if not os.path.exists(raw_dir):\n                    if self.debug:\n                        print(f\"Warning: Raw directory not found for sample {sample_name} in class {class_name}\")\n                    continue\n                raw_files = sorted(glob.glob(os.path.join(raw_dir, '*.tif')))\n                if not raw_files:\n                    if self.debug:\n                        #...\n```","range":{"startLineNumber":133,"startColumn":0,"endLineNumber":144,"endColumn":0},"embedding":"AMDUPACAQbwAgA88AAC0vQCAMLwAwAG9AADVvAAAzbsAwHG9AGACPQBAhLwAgP28AMCpvACAirwA4Bw9AID4PADgSz0AwJg8APDWvQBAUz0A4Dw9AGC1vQAAKbwA8Kq9AMBmPQAgED0AgG88AIC/vABgOD0AACC5ACCbvQDAr7wAgNm9AAAkvQAgQr0AwKO8AACHPQBAaz0AAM07AIAIvQDAMz0AAOq8AKAvPQDAgbwAAJ88AKAcvQAAHT0AAAy8AABpPQBAnDwAcIG9ANCTPQCAODwAkJq9AADjvACAuzwAgBI8AAByOwDAv7wAoC69AOCHPQAAyLsAgGo8AABIOgAA7LwAADi6AABKvQAAkDsA4HG9AAD+uwAAIDoAIBa9AMDRPADAnr0AoCA9AAC6OwBAh7wAsKo9ALCnvQAAZb0AgAq8AMBnPQBAoL0AAK08AIB7vAAgYL0AgHS9AGCUvQAA8jwAYHu9AIAUvABAwDwAIAS9AABHPQBAl7wAAPi6AADPPACAv7wAEKE9AABEPQAANLwAwJc8AACZuwDA4rwAgDy9AICWvQAAB70AgCa9AAAGvACgLT0AACO9AHCQvQAgCD0AgJ88AMCZPQAggb0AoGC9AEAWPQCAH70AgFm9AMCuvQDA7DwAQAu9AEAnvQCA1TwAgJq8ABCBPQCgKr0AQIk8AEA/vQCA1D0AgLO8AMAbvQAgoL0AwAW9AMC+vAAAJTwAIAq9ACBUvQAA1DoAAIC8AAAmOwDAcT0AAI88AIB9vACA/jwAALm9AACqPQBA6zwAcKc9AABFvACAiTwAIC89AOCBvQAA37sAoD69AECQvABAQT0AgFS8ACBpvQCAcTwAAD88AGCoPQAgIz0AQMi8AIBHPACAab0AAJu7AIDHvQAArjsAAEY8AIA3PQDABD0A4HK9AAAVPACAzbwAAPi8ACBzPQDAkrwAIHe9AIBhvAAggL0AwC29ADCVvQBAUL0AsL69AABavAAAsDwAwBK9AAAQuwDgBL0AIAw9AIBNvQAAdLwAAAk9AADkOgCA4jwAwAc9AAByuwAASrsAwBa9AJCsPQBAh7wAsJO9AECoPACAsTwAQHq9AAAjvADAVr0AoCa9AABUOwAAoDsAAHC7AAA8OwBA5zwAgGq8AIB7PAAAfjsAgH08AACIvABA8LwAAG47AADkOwBAkDwAQJW8AOAhvQBAar0AQF69AIAkvACAD70AgDq9ALCtvQCAbbwA4B69AAAkPAAA5LwAAEI7ACCqvQCAPTwAAHY8ALC0vQAAabwA4CS9AABIPADAzzwAAAs8AOA2vQDQ8r0AwIE9AKAjvQCAhz0AICK9AADougAAor0AQIg8AACPOwAgJr0AYAe9AHDGvQDA+TwAgOk8AIA5vAAA2LwAwI+8AMCpPQCAFrwAALM8AIBcvABAOr0AEKk9AADePADgSD0AQI+8AABWuwCAT70AkKU9AADAPACA8bwAgBY8AIDZPADgIb0AgHG8AMDmvADA9j0AgBE8AOAGvQAQir0AAH68AIBLvAAA+LwAoC49ABDAvQBAGL0A4Cm9AAAZvQDARr0AgPm8AICQPABAkTwAYK29AAAAAADAu7wAAJ+8AECGvACAXbwAwJw8AID8PADwi70AYEM9AIC5PACgJr0AgFK8AACUOgAAVLsAgIu8AADhPAAAGLsAgL68ABCFPQAgYz0AwDK9AKCpvQAAfLsAwIU9AFCnvQDA1rwA0JC9AAAoOgDA9LwA8KK9AAByPAAAJT0AgCK8AIAAvAAALrwAwDi9AIBIPAAAlbwAYIi9AIAdPQCApr0AAIa7AIDJvAAAkLoAAPQ8ANCvPQAAJj0AcPI9AACEugCgNr0AgBg9AAAWvADgFr0AQNY8AOBXvQCAeTwAADO8AHDgvQDAvbwAAEC6AKApvQBgbT0AAME9AADIuwAgib0AAEg8AAC0vACA2TwAYGo9AACkPAAghT0AgFI8AMD6vAAAHjwAIDG9AIC6vABg3j0AQCg9AABZvQCABj0AABe9AIBNPQCABD0AgKO8AOAKPQAgDz0AAD67AACnPABgjr0AgIu8AEAPPQCAVL0AACa8AAAuvABAUj0AoCY9AMDrvAAAvTwAgDI9AEAjPQDAsLwAgGq8AACOOwCAp7wAwII8AMBTPQCAST0AoIw9AABhPQAAC7wAgEy9AEDQvAAA0DoAwBG9AAC6uwCACDwAgI+9AEDuPACgLL0AcME9AMClPADADz0AAIe8AKAMvQAAhDwAMM09AOAePQCA0bwAAO28AICbPAAgPT0AgF+8AMCbPACAuzwAoAu9AAByOwCATTwAQGK9AAB2PAAAxLsAQO88AADcOwBAl7wAwLe8AGAOPQAATLsAQKU8AED5PACgXb0AIBC9AAA4OwBAAz0AAAI9AIBPvABQ9D0AEKa9AAC9vABAtb0AANM8AMBEvQCgDj0AQEE9AMDOPAAAGj0AAD28AABBPACA4LwAgPK8AAADvQDw8r0AwDM9ALCaPQAAPLsAAAA4AIDfPAAgY70AoG89AIDgvABAsLwAQJ+8AEDKPAAAL70A4Jm9AAD2uwAAQT0AgL09AMDDPAAA0rwAoB89AIB3vQBgYL0AAIw8AOAiPQAAQLwAIFe9AACUOgDQnb0AwMs8AAByOwAAZrsAAGo7AAAivQAgNT0AwFI9AAAqvQDgs70AAFy7AACUvAAADLwAAJA5AACHPABICz4=","chunkHash":"ecb3198b299b99aade6b0a310231bd589e6fab10031f868e946eba7c30ac05ef"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                #  target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=80 , # Now represents desired number of frames\n                 debug=False):\n        #...\n                        print(f\"Warning: No raw files found for sample {sample_name} in class {class_name}\")\n                    continue\n                self.samples.append({\n                    'sample_id': sample_name,\n                    'class_id': class_id_map[class_name],\n                    'class_name': class_name,\n                    'window_files': raw_files,\n                    'window_desc': f\"0-{len(raw_files)-1}\"\n                })\n        print(f\"Total number of samples to process: {len(self.samples)}\")\n    #...\n```","range":{"startLineNumber":144,"startColumn":0,"endLineNumber":153,"endColumn":73},"embedding":"AIAOPQAAw7sAgJA8ACC6vQCAkrwAgBa9AMD2vAAA0bsAgHu9AMDUPAAAXrwAwPy8AEC4vAAA37sA4Ao9AOAQPQBAOT0AgLw8ANDEvQBgTD0AQEU9AEC1vQAA07sA0LS9AKCGPQDAHz0AgBc8AIBlvAAAGT0AAKi6ADCmvQBA0LwAcM69AOAvvQCAgL0AwP+8AACBPQCAej0AALc7AIAIvQAgEz0AwBy9AGAzPQAAUbwAgKo8AACsvACACT0AAPa7AABgPQCAzjwAIIO9ANCkPQCADDwAcJq9AMCKvADAmjwAAAA8AAAmOwDgBb0AYBK9ALCfPQAAYDkAgBE8AACoOgCA1bwAAAa8AMBWvQAAVrsA4Ei9AICDvAAAVDsAYC+9AACAPAAwjL0AYCU9AABePAAADrwAYKA9AMCpvQDAQr0AwIC8AKBlPQAArb0AAPw7AACAvABgQr0AYGa9AACVvQAgKT0AAFi9AMCJvAAAoDwAIAm9AAA9PQDAsLwAAHi6AACoPABAwLwAAKQ9AGBXPQAAULwAAKg8AAC3uwBA47wAgEG9AFCkvQAA0rwAADm9AACouwDAGD0AQPW8ABCZvQDAtTwAgHM8AKCbPQCgeb0AgHS9AADpPABgJb0AwEa9AMC4vQBgBT0AANG8AMAtvQAgIT0AANW7ANCKPQCgML0AQIA8AEA4vQCg2j0AwLC8AOATvQBglb0AQCC9AADZvAAAEjwAwAa9AABxvQAAFDsAgCy8AACNOwCAdD0AQJ88AECNvACgDD0AYLW9AKCgPQCA9jwAsJc9AAAUPABAnDwA4Ck9AACLvQAADrwAwCe9AAAwvAAgTz0AAIq8AGBnvQCAgjwAAP07ALC+PQAAEz0AgKS8AIA1PADAc70AAO+7AADMvQAAEDsAQKY8AEA8PQCA7TwAEI69AAAxPACA7bwAYAe9AABPPQCAw7wAEIy9AICDvADQjb0AwDG9AKCMvQAgVr0A4Mu9AABcuwCALDwAoA+9AICnvACA/LwAAL08AKBVvQAAg7wAIBU9AABAvACAxzwAAAw9AAAoOwAAoLoAAES9AECyPQCAP7wAUJG9AMCpPABAkTwA4GK9AAA2vAAAOb0AgAa9AADAOgCATjwAAES7AACFuwAA4DwAAFC8AMDPPAAAnLoAQJ08AICMvABA37wAAEC6AIAMPAAAgjwAQIq8AEAdvQAAU70A4Ea9AMCAvADA7LwAIEK9AKCgvQAAYbwAgAS9AIA+PADA37wAQKs8ACCgvQAAJjwAgHk8AKDFvQBAyLwA4Ay9AMCIPABADj0AAJc8AAAivQB4AL4AgIY9AIAavQAAiz0AwAS9AABEuwAgmL0AgCk8AABmOwAgKr0AANq8ACDOvQDAvDwAgOY8AIA3vACgCb0AAJO8AGCqPQAAHbwAQJo8AABGuwBgSb0AQKg9AMDpPABgGT0AwJy8AADwOgDgSr0AAKU9AEDCPABAwbwAACo7AMDmPACgM70AgIu8AED0vABA+D0AwLo8AADdvADgdr0AgC+8AIAnvADAjbwAgCg9AADHvQCgGr0AYBa9AAAUvQBALL0AwM+8AADSOwDAnDwA0Ky9AABLPAAAnLwAwKq8AIBVvAAA27sAAI88AADWPADghL0AAEw9AEDrPADgM70AgEy8AACVuwAA6rsAwK28AADRPAAAWjsAAL68ADCHPQDAXz0AwDe9AOCmvQAA1LsAAIM9AGCjvQAAvLwAsKK9AAASOwCAsbwAoJ69AECMPADgLj0AAGK8AIBdvAAACbwAgDq9AADYOwBA1bwAgHy9AEAePQBwnL0AAIy7AEDRvAAASrsAgP48ANCyPQDALj0AoO89AADjuwAgLL0AoBc9AMCDvAAAML0AALg8AAA2vQCAMDwAAA67ANDPvQAAyrwAABi7AOBNvQAAXj0AcMY9AIAEvAAwg70AABw8AIBUvAAAkzwAwGM9AMCTPACAiz0AgBk8AEAcvQAASjsA4Dq9AMDPvABw0D0AICQ9AMBavQDABD0AoD+9AABqPQDgAT0AwMa8ACAFPQDgIz0AAHy7AEDDPAAAiL0AQMi8AIDePABgTr0AABA6AABrvADgXz0A4DM9AICfvACApjwAQFI9AIAgPQBArrwAAHy8AAAAPADAjLwAwKg8AOBYPQDgLT0AkJc9AABzPQAAOrsAwDu9AIDGvAAA8DkAYDy9AADQOQAAojsAoIu9ACANPQCgRb0AELg9AECGPACgEz0AAOe8AAA0vADA3TwAsLc9ACAjPQDA+rwAQLq8AECrPABACj0AAO+7AADtPABAlDwAAOi8AIAMPAAArjsAAFe9AAAyPAAAMbwAQO08AADxOwAARbwAgH28AGAfPQAATLsAgGQ8AOAnPQDgRb0A4Bm9AADVOwCA1DwAgBk9AIAevAAQ7T0AgMW9AADjvACwsb0AgFo8ACAsvQDAEz0AwEw9AECBPADgGD0AAJa8AECcPAAA87wAQJG8AMD4vACA/r0AIDg9AOB/PQAAKrsAgAY8AIDTPACAg70AwFk9AMAKvQAApLwAgEy8AECVPACAS70AQJC9AAAAvACARD0AAME9AECNPABAjrwAABs9AIApvQAAab0AgJY8AAAdPQCAP7wAIES9AAC6uwDQn70AgLM8AACrOwAA9zsAADo7AABHvQCAUT0AwEE9AOAvvQCgur0AwIm8AACrvAAAz7sAACw7AECUPAAoDz4=","chunkHash":"8211c36268e1756ebe6667b05c2e68a72b1756afaf088b18bad5f8a5fa62b87a"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    #...\n    def __len__(self):\n        return len(self.samples)\n    #...\n```","range":{"startLineNumber":155,"startColumn":4,"endLineNumber":156,"endColumn":32},"embedding":"AMAkPQAAmDsAwNw8ANCbvQAAtbwAgMW8AIDzvACAL7wA0Ie9AABUOwCAOL0AAOi8AEDZvACACDwAwOM8AIBWPADAwjwAANo7AKCzvQDAGT0AwF09AACxvQCAObwAQMe9AOCaPQBgBT0AAG08AABgugAA3TwAgB+8AOCOvQCgBr0AYLa9ACBAvQAgZb0AAPS8ALCcPQDghD0AwKM8AIAOvQBAnDwAAHK9AMAdPQAASrwAgNo8AAC3uwDA6zwAAFu8AAB1PQDAhjwAgIS9AABxPQAA4LsAIMu9AICWvADAmzwAgIk8AAASPACAjLwAwF69AOBePQCAIDwAgGM8AICOvADAD70AAMM8AED4vAAAADoAwG29AMDFvAAARrwAACa9AAAQuwBgh70AwBI9AIBJPAAApLoAULo9AOCfvQBA6rwAgBe9AHCbPQCgdr0AAEg6AACNuwBgYr0A4Ce9AFCTvQCAKT0AwAy9AABQugDAiDwAgAm8AGALPQAAsLoAAOS6ACBFPQAA2LwAYH09AGBePQCAYrwAIBY9AMDPvADA4bwAYC29ADCGvQDA97wA4CS9AAB3vABAcD0AgCG9APCbvQBgCT0AACQ9AAChPQAAT70AgI69AEDgPABgLL0AwDC9AHDLvQCgLT0AwMe8AMBtvQCA9jwAAKq7AEBYPQAAZL0AAK48AOAmvQDQ8T0AQB+9AIDGvAAggr0AALy8AMCQvAAAzbsA4Cq9AOBGvQAAkLoAAMQ7AECXPACgNz0AwKw8AIAGvACgNT0AkNS9AMBzPQCAJz0AILU9AIB2PABArTwAgDY9AKBDvQAgEL0AwFG9AAAguwAAID0AwMu8AJCLvQCACTwAAGw8AKDnPQBgMj0AQLW8AAAMPAAwiL0AgFO8AKCpvQCABLwAAIg8AECHPQAAmjwAULO9AAC6uwAA9LsAAI+8AABMPQCA2bwAwE69AACMvABAkL0AgIy8ABCBvQBgFL0AwPi9AIA4vAAA1TsAgEy9AICsvAAA07wA4AQ9AOBSvQAA37sA4AQ9AICovAAAfjwAIA49AADQugAA6rsAYCa9AGC9PQAAo7sAgGS9AAAOPQAAoDkA0JK9AADZuwCgHr0AIBa9AADCuwCABjwAAMS6AAAgvAAAbDwAAFg6AOALPQAA6jwAALI8AACluwAAV7wAgD28AACYPADAlzwAQI68AABJvQBATL0A4Em9AADBuwAgJr0AAHK8ACBsvQAAM7wAQNm8AADHPACA1bwAgFU8ABCUvQCACzwAAI+8AOC+vQCAn7wAID29AKAhPQAAkjwAgBg8AADmvAAQ070AEJQ9AAA3vQCQhz0AQCq9AIBtvABgor0AAI87AIB0PABAAr0AgDe8ACDXvQDAwDwAQPI8AACuvABAyrwAgAG8ABCkPQCABLwAwKE8AEC/vAAgDr0A8Jc9AMCXPADAlTwAAJw7AACHuwAgEb0AcKA9AEC+PACA5LwAAEA7AABsPACgJL0AAJy6AKAvvQCA4z0AABo9ACAwvQDgYr0AAI47AADkuwDAvLwAIFU9ADDEvQBgOr0AQKu8AAAwvQAgCr0AQIa8AACNuwAAWjwAUMO9AABAOwAAWDoAAJG8AIAfvQCAwrwAgMU8AABoPACA17wA4Do9AAD9PAAgWb0AAPA5AICIvAAAtLsAQCy9AAAdPQAAkDkAgOS8AKCYPQBAxjwAoA29ADCevQCAfrwAwAM9ACCXvQCgH70A0NC9AIAHvADgBr0AQKu9AACDPADAEz0AgFK8AADruwAAIr0AALO8AABAOwDgAr0AQE69AAA5PQCAmL0AgEi8AIASvAAAFzwAID09ALCxPQCgTj0AUOo9AIAhPACgW70AYCM9AIDDvAAAxLwAAN87AMB6vQAAhLsAABg8ADD4vQCA2bwAAJa7AABevQBAwzwAsNY9AIBpvACger0AACY8AABvvAAAxTsAcII9AADzPAAgBD0AgLU8AAAkvQAAHLwAgA+9AACRuwCwsT0AwE09AECOvQCgLD0AQI69AJCGPQAALD0AACC9AOBgPQDgJj0AAP+7AADDPADQob0AgLW8AIDDPABgGr0AgBE8AABdvABAXz0AYBc9AGAlvQBgDD0AQPQ8ACAYPQDA67wAAA28AECdPACAGjwAQIw8AADvPADgZT0AAHE9AECcPQAAGjwAABu9AADsugAAgbwAwCG9AMAFvQAAm7sAgBu9ACBNPQCAH70A0Ks9AIAEPADAyjwAAIu8AABivAAAXD0A0LI9AGAjPQAA1LwAIES9AIDAPABA2jwAADC7AEDVPABArTwAAIO8AACePADAijwAQOe8AAAoPAAAEr0A4Dk9AAAgOQCAY7wAgEK8AOApPQAAhbwAAKk7ACAZPQCgIb0AAH47AIDiPACA3zwAgCI8AACAOABg9z0AEL29AMCdvACAkr0AgKQ8AAB8vQBAFz0AQM88AACSPADAIj0AgFC8AOAKPQBAm7wAACO8AIB2vAAgqr0AQIM9AABtPQCAPDwAwA89AAAgPQCAKL0AgEg9AADYvADgDr0AAIg8AIAkvAAACb0AoJ29AACsuwDgeD0AoPg9AMAuPQAAUrwAANw8AABSvQDgqr0AANI8AAA1PQAAXrwAIGe9AMCwPADgQ70AgL88AICoPAAAQLwAgBq8ACBnvQDgUz0AICE9AMAkvQAQrb0AwMe8AIA6vADAj7wAgKa8AAA4uwAIFD4=","chunkHash":"23445135d4961b8b769624726848050e8b5843e31ad4d9a1350da2b6f1044ed1"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    #...\n    def _load_and_average_window(self, window_files):\n        \"\"\"\n        Load a set of image files to create a 3D volume, dynamically selecting frames\n        to match the desired z_window_size.\n        \n        Args:\n            window_files (list): List of file paths to load\n            \n        Returns:\n            numpy.ndarray: 3D volume of shape [z_window_size, H, W]\n        \"\"\"\n        if len(window_files) == 0:\n            return np.zeros((self.z_window_size, 64, 64), dtype=np.float32)\n        \n        # Calculate stride to get exactly z_window_size frames\n        total_frames = len(window_files)\n        if total_frames <= self.z_window_size:\n            # If we have fewer frames than needed, use all and pad\n            indices = list(range(total_frames))\n            # Pad indices by repeating the last frame\n            indices.extend([indices[-1]] * (self.z_window_size - total_frames))\n        else:\n            #...\n```","range":{"startLineNumber":159,"startColumn":0,"endLineNumber":180,"endColumn":0},"embedding":"AAD2PACALzwAwFQ9ABC9vQAAWL0AwIG9AAC5uwAAh7sAwIW9AACXuwBAwbwAABO8AABGuwCAQzwAwAY9ACAsPQCA7DwAQNE8AHCovQAAEj0AgDU9AFCevQCAiDwA8Jq9AAADPQDAez0AQOk8AMCfPACgIT0AACu8AGBTvQDAqbwAALW9AKAbvQCwq70AAH+8AAAUuwAwwj0AAIy7AMBcvQDAjjwAIBO9APCAPQBAhrwAIJw9AABgvAAAjjwAABi7AABYPQDAHz0AwLO9AAC+PQCAbjwAYKS9AACUOgBACD0AAJ07AIAQvQCA+rwAACK7AGCuPQAANjwAgMY8AEDmPABA2rwAANC7AACNvAAASbwAgMK8AADUugCADr0AwA29AIAFPADAMr0A4E49AAASPABAnbwAQM48AMDOvQCAOr0AgG+8AICAPABgWb0AgGc8AMDpvADgZr0AgKW8AEASvQCA6TwAYHy9AMDjvACAuDwAgCO9AEBvPQCAC70AgA+8AECHPABgXr0AYME9AGAdPQCAQrwAgEc9AICpvACAbrwAAOy6AOASvQBAjLwAgP+8AEAhPQCAij0AIGu9AAA/vQDAzTwAAHC8AGAiPQBwlL0AcJS9AIDiPACAO70AgBi9ALC0vQCAmz0AQMW8AMC4vACwgj0AgAO9AEDhPACgcb0AgFO8AAAsvACA5j0AAMO8AAABPAAgtb0AAAW9AHCSvQCAO7wAwEO9AFCAvQAAHD0AwJ28AMCDPACgyT0AAHo8AAAovACASz0AAIq9AACOPQBAuDwAcII9AEDAvABgCj0AYEs9ACC3vQAASLoAwBe9AACYugBwhT0AgN48AABNvQAAQr0AQOo8ABC2PQCA9jwAgGS8AIADPQBgV70AQMo8AMDCvQBAHr0AgGc8ACBUPQAAzDsAwIy9ACB/PQAAIr0AgE29AEA/PQCANbwA4E29AEDmvADgcb0AICy9AKBdvQDAbb0AAH69AAByvAAABbwAIHe9AIBqvADgJL0AAL88AIAOvQBA/TwAAES7AIArvQAA/DsAwKU9AMD1PAAA8LsAgFi9ANCtPQAA5LoAQLO9AKAmPQAAgDkA4Be9AIBSPABwib0AAMa8AIACvAAAYjsAgB49AMDfvAAA37sAgPa8AAAaPAAADrsAAGg6AADDuwBA7rwAQD89AIByPAAAZzwAgHy8AGBMvQBgUb0AwF29AIBEPQAAQbwAgDC9AKCHvQBAtLwAACA6AAAYOwAAHLwAAMA7AGBVvQBAjTwAQJk8AABAugAA9rsAAEm9AAANPADADD0AQPY8AKABvQDQsL0AgDI9AIAtvQAwmT0AAKm9AABkvAAgVL0AgC48AAAiPAAgbr0AADW8ACDjvQDAszwAgOo8AIC4vAAgJr0AAGs8AECaPQCABzwAgFY8AAA2vAAAbL0AwLY9AEDVPABACz0AgJm8AABIOwDgB70AYD89AICuPAAgRb0AgK28AAC6PACgIb0AAGC6ACAovQAQuD0AgMY8AECbvABgfL0AAII7AABsOwAgVb0A4HA9AADUvQDgQ70AAAC5AAB4ugAAprwA4Dm9AIDHvACAvDwA0Ii9AAA1PACAYLwAAPe7AACIuwCAobwAANE7AIAjPAAgTr0AAFI9AEDlPAAATrsAYAk9AACEuwBArbwA4Ae9AIBKvAAgHD0AACK8ABCxPQCAQTwAgDK9AIBwvQCAWDwAQCg9AOBmvQDAF70AQIm9AICWPADAjbwAEA++AADPuwAAGj0AwOi8AJCtvQBAlrwAAKG9AGAdPQAArLsAQDa9AIDAPADQlb0AAFI7AEA4vQCAN7wA4Ec9ANC3PQBQgD0AsL49AABgugBAzbwAAO07ACAQvQBgaL0AANg7AICMvAAA7LoAgGY8AFDivQBgGr0AACq8AEBVvQDgGD0AENY9AAAvvACgcr0AAOI7AAAsPABAmzwAALi6AOAHPQDQkD0AALg8AABvvQBADD0AgG29AMDhvAAg7T0AYEI9AKA1vQDAuzwAIFq9ACAYPQBAhDwAAOq8AIC7PACAeDwAAMQ7AKBJPQAgkL0AgJq8AABhPABgWL0AABa8AADuOwAgnD0AAGi7AACQOwAAtbsA4G49AADuPACgQb0AgFa8AMCVPADgBL0AwJg8AGAbPQCAQT0A0JA9AKBFPQAACDsAgMG8AACRvACAM7wAQOy8AECevAAAwjwAkIG9AAAFPABAxbwAsPY9AACyvACAYT0AAIe7AMCjvACgKj0AoMc9AICpPACAHb0AAOW8AICGPADA7zwAAGU8ACAgPQDAizwAgEW8AAC4OwAAsjsAgGC9AGAnPQAA/TsAgCM8AEC/PAAA5LwAAEY7AEAnPQCAarwAAEY8AJCePQCgPr0AAB67AIBwPACAbTwAQJw8AAAfvABA3D0AAHm9AACwOQDAqr0AgAE8AIAYvQDgGj0AgBk9AACgugCAMTwAQPC8AACaOwAAsrsAQLK8AGAlvQCAur0AYCo9AICKPQDAuzwAwPY8AADfOwBAUL0AgBs8AAAQOwCAerwAQK28AEA8PQBAT70AoGy9AADQOQDQlT0AEKA9AMDVPAAALr0A4HA9AMA5vQAgOr0AgEQ9AMBOPQAARbwAwPu8AAAYOgCwub0AQJ48AAAWuwAArzwAYAQ9AOBrvQCgTT0AQOs8AAAlvQDAUL0AYEa9AECQvADAu7wAoBQ9AEDxPACA4T0=","chunkHash":"a991258545ea47f7c20c9d56841fc202c8928e762f369c7def9638c959fbdef0"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    #...\n    def _load_and_average_window(self, window_files):\n        #...\n            # Calculate indices to get exactly z_window_size frames\n            stride = (total_frames - 1) / (self.z_window_size - 1)\n            indices = [int(i * stride) for i in range(self.z_window_size)]\n        \n        images = []\n        for idx in indices:\n            try:\n                img = np.array(Image.open(window_files[idx]), dtype=np.float32)\n                images.append(img)\n            except Exception as e:\n                print(f\"Error loading image {window_files[idx]}: {e}\")\n                # On error, append a blank frame\n                images.append(np.zeros_like(images[0]) if images else np.zeros((64, 64), dtype=np.float32))\n        \n        # Stack images along first dimension to create 3D volume\n        volume = np.stack(images, axis=0)\n        return volume\n    #...\n```","range":{"startLineNumber":180,"startColumn":0,"endLineNumber":196,"endColumn":21},"embedding":"AMAAPQCAMjwAgII8ANC+vQAArLwAYBa9AIB1vAAAgDoA4F69AAAIPABAgrwAQIK8AEDQvACAkDwA4Ao9AAAJPQBAjjwAgNI8AFDevQBAYT0AQOs8AEDNvQAAybsAUJu9AIBOPQBgeT0AQNo8AACAOwAAEj0AgAg8AABtvQCAoLwAEKy9AMAPvQBgXL0AgN68AMATPQCwkj0AgDQ8AMDkvACAAD0AwNO8AMBoPQAA+rwAQCg9AAAAvACA4DwAAOu7AIA3PQCABT0A8Ja9AKC6PQCAVjwAcLK9AABovABA0DwAwMc8AIAAvABArbwAAJ28AHCKPQAATDsAAIY8AABsOwBA+LwAwKe8AGAQvQAAh7wAQNi8AIAqvACAKrwAYCO9AIAiPACAMr0AAGo9AACZOwAAWjsAAGI9AKDAvQDgN70AAPe8AGAUPQAAjL0AAAg8AACMOgBATL0AwEO9AIAkvQCA4jwAoEi9AGAHvQBAsTwAYBy9AAAwPQDAtrwAAMA5AACIPADAB70AgK49AGAfPQDAr7wAYCA9AABHvAAA+rwAAJK8AGCTvQCAX7wAgL28AAAoPAAgYT0AADu9AGB3vQDAlzwAgLo8AMCBPQAAhb0AAHe9AAAVPQDAOr0AAAu9ALC8vQAQhj0AQBG9AOAuvQCAVD0AwKS8AIBLPQBAUL0AABs8AAD5vABg+j0AwBm9AMCkvADAnb0AoBG9AKAGvQBAnDwAoEy9AKB9vQAAoDoAgCe8AAAIuwCAnz0AgDM8AIBvvADARD0A4LG9AGB3PQCAIT0AgI09AADYOwAA3TwAoFI9AACzvQAAvLsAQDi9AACQPAAgMz0AABY7AMBjvQAASrsAgI88APCwPQBAJz0AACC9AAD7PADQlb0AgBs8AGDIvQAAYLwAAEQ7AGB3PQAASjwAQKq9AIAmPQDgA70AoB29AKAIPQDAzbwAAIa9AEDWvACwhr0A4Bi9ABCAvQAAcL0AwMO9AAAIOwAA0DkAIGO9AAAPvADAOr0AAMU8AEAlvQCAPzwAQKY8AAAYvQCATTwA4FM9AECRPAAAq7wAYBq9ABC3PQCAFbwAIJ69AABLPQCADDwAIDu9AAAAOgCAa70AgFW9AAAUOwAAkDwAACo8AIDtvAAA9DsAgJy8AAC6PABAgzwAAMY7AABjvADAs7wAwM48AAAguwCApDwAgB+8AGAmvQDgGb0AIHi9AIDEPAAA+rwAYFO9ANCAvQCgAb0AgEi8AIBlPAAAAbwAgM88AMCpvQCAQjwAALY8AMAuvQAADLwAYBa9AAAdPADArjwAwKY8AOATvQBQ270A8JM9AKBbvQCAcj0AgGu9AACSvABgib0AAAQ8AABAuwDAOL0AgFO8APDfvQBAqjwAQAg9AADYvAAgDL0AAIO7AMC0PQCAbLwAgM88AICKvACgZr0AgMM9AMDrPAAgEz0AgH68AADVPAAA5LwA0I09AAAqOwBANL0AACu8AMDyPABANL0AgJO8AKAEvQAg6D0AgE48AMDRvADQmb0AgOq8AADpuwCgMb0A4FQ9AHDPvQAgLr0AAEY7AAClvAAAPr0A4A69AIAbvACgHT0AQKi9AABnPAAAcrwAAOG7AIBZvACAu7wAgCM8AMCyPACgMb0A4FU9AMDbPAAA7bwAAOQ7AAAGuwAAzLoA4Fa9AICoPABAmjwAQIq8AECHPQBAET0AwB29ADCPvQAA2zsAoFc9AFCbvQDAHb0AgKu9AAAxvADAsbwAYNy9AIATPABgbD0AAMi8AOA0vQDA9LwAQGK9AACIuwBAhLwAoGa9AMDuPABAk70AADC8AMAjvQAAAjsAwDk9ALCkPQBgTT0AAOE9AAA6uwDAJr0AANs8AIDuvABgFL0AAJs8AIAZvQAAATwAAOo7ACDKvQAgBL0AAMc7AIBsvQDA2zwAML49AAAQuwBgar0AANQ7AABPPACAFj0AwDs9AGAsPQCAkz0AQJw8AIAzvQAAODwAAHq9AACXvAAA0D0A4DU9AOB7vQCAyzwAYDq9AOB1PQBAyjwAgMW8AGA4PQBA+jwAAF08AADvPACgo70AQLW8AICGPADAT70AgJm8AADPuwDgdz0AgIQ8AAADvQAA7DsAoE49AAANPQBA+7wAgAC8AEDmPAAA9bwAgLM8AKA6PQAgSz0AsIk9ACBePQAAhDoAwDu9AICBvADAt7wAYFC9AIDEvAAAwTsAgFi9AEDqPACAJb0AQOU9AIBtPACgbD0AAMK7AMDhvADADz0AwN09AIBwPACAQL0AgLe8AACAuADgKj0AAFG8AEAFPQAAvTsAAJG8AMCqPAAAIDwA4ES9AMCmPACADrwAgGI8AADwuwCACL0AQLG8AMD5PAAAcDoAgBs8AIBHPQDAGr0AwOi8AIDCPABAKD0AwD09AECevAAQ2z0AoLS9AIAhvABwoL0AgAM8AEBBvQDA+TwAQOE8AAAyOwDgKz0AAFq8AACbPAAAorwAAMq8AIAOvQBA2r0AgD89AICcPQAAxTsAAJw6AICyPADgRb0AwEw9AABbvACAfLwAQJC8AADSPADAQb0AoJ+9AMC3vAAwlD0AULI9AADpPABABr0AICg9ACALvQBAQ70AoAo9ACAPPQCASrwAYDC9AADAOADArr0AgOo8AADAOACAbjwAgMM8AKBSvQDgPT0AQDU9AIAyvQCAX70AYA+9AAD1uwDAy7wAgHk8ACACPQBwBj4=","chunkHash":"f5aaf945f575f77f970fdca659426298a72728caec6044ce1c04eaccdcca2641"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    #...\n    def __getitem__(self, idx):\n        \"\"\"\n        Get a sample by index.\n        \n        Args:\n            idx (int): Index\n            \n        Returns:\n            dict: Sample dictionary with image, label, and metadata\n        \"\"\"\n        try:\n            sample = self.samples[idx]\n            sample_id = sample['sample_id']\n            window_files = sample['window_files']\n            \n            \n            try:\n                avg_image = self._load_and_average_window(window_files)\n                image_tensor = self.transform(avg_image)\n            except Exception as e:\n                print(f\"Error processing window for sample {sample_id}: {e}\")\n                \n                image_tensor = torch.zeros((1, *self.target_size), dtype=torch.float32)\n            \n            \n            metadata = {\n                'sample_id': sample_id,\n                'class_name': sample['class_name'],\n                'window_desc': sample['window_desc']\n            }\n            \n            return {\n                'image': image_tensor,\n                'label': sample['class_id'],\n                #...\n```","range":{"startLineNumber":199,"startColumn":0,"endLineNumber":232,"endColumn":0},"embedding":"AMBXPQBAC70AgC48AGCovQAAmLwAAMK8AIDEvAAAQLsAgIW9AACguQDAzbwAQBq9AMC7vAAADbwAoAk9AECEPACAgbwAALC5ALDuvQAgVj0AgKg8ABCRvQAALrwAgGe9ADCjPQBAFD0AAFM8AIDPvADAfD0AgHO8AHCJvQCApbwAQKi9ACBGvQDAR70AAKu7AKCMPQDAPj0AAAA7AOACvQDA+jwAAC69AKBbPQBAv7wAAPQ8AADQvADABT0AgJS8AGAhPQBAaT0AwJC9AJCXPQBAprwA0J69AIDCPACAOjwAACI7AAAhvAAAlLoAwLu8AEA5PQAA47sAAJ47AABVPACAC70AAGq7AABwvABA6DwAIA29AIDSvAAA3jsAQL+8AADMOgCgV70AoAM9AIACPAAA9bsA8Iw9ACDLvQDgOb0AAMq7AIDLPABQnr0AAEY8AACDuwAAY70AwJi9AABnvQDA+TwAIGe9AED9vAAAELoA4Ae9AOAXPQDAlzwAgDs8AADDOwAACrwA0Io9AGAjPQAAkbsAAA89AAAAOAAAML0AgPO8AFCnvQCAoLwAgCO8AACXuwAABz0AAIi9AJCavQCAAzwA4BY9ABCNPQCgOr0AAG29AMAsPQAALb0AAD+9AED6vQCgUj0AQLS8AOBovQBgAz0AgCS8AOBJPQBAUL0AAFy7AADsvABg/D0A4Bm9AIBZvQBAeb0AwPC8AIDwvACAOT0AAIa9AKB0vQAArzsAgAy9AABdvABAXD0AgC08AACHvACARTwA8MS9AGCMPQCALD0AMMw9AADrPAAALjwA4C49AFCDvQBAhDwAgFq9AACavACA9DwAAGi8AIBBvQAANTwAgEs8ABCRPQAACT0AgFO9AIDbPACgnb0AAAi8AOCwvQAAoDsAAN07AMBQPQCAWzwAIIi9AIDWPADA37wAgMK8AGAJPQAAh7wAoFO9AEBXvQAwgL0AAMO8AOBIvQCAvbwAcM29AABaOwAAWjwAoIS9AIBvvAAAYL0AQME8ACBTvQAAx7wAAAI9AAA5vADgKj0AoBo9AMDQPADgDb0AMJG9AADNPQAAp7wAoEW9AIDvPACAqjwA4GS9AIAMvABAIL0A4FW9AAD3OwCAtLwAAH68AIA2vACAzDwAAMU7AICFvAAAWLoAgDS8AECuvAAAnLwAAOQ7AADwuwCAXDwAAFS7AIDAvADgaL0AwF69AAAoOgDAHb0AQE+9ACB4vQCAI7wAAEK9AAB7PACAibwAADg8AIC3vQCAKTwAAE+8AGCqvQCgGr0AwGa9AACnuwAgAj0AgHo8AIDyvABw+b0AkJc9AGASvQDghD0AoA29AIBovACwj70AgCs8AIBgPAAAdLwAAIS8AOCavQCAwDwA4BY9AABAuwCAkLwAAE+8AKBkPQAgFb0AALE8AEDFvACAer0A8Ks9AIAsPAAACj0AgJq8AAA0OwDAtbwAcJE9AACsOgDA17wAAD48AACgOwCADr0AANm8AIAHvQCgsj0AACo9AIBevQDQj70AoDK9AABIPAAAubwAYEI9AODIvQBAsLwAACO9AEDWvAAAO70AQIe8AADeOwBgCz0AwLK9AIAMPAAAuLwAAGg6AMCavAAAmLsAgDS8AIABPQAAarsAwHo9AICBPADAprwAAJY7AABRvADApjwAYAS9AAAePQDgFj0AgNC8AMBdPQDAZT0A4D29ACCMvQDA5DwAAKo9ACCvvQBA3LwAIJe9AMD3vACAwrwAoMG9AMD4PAAATD0AgPK8AACtuwAAqrsAgDq8AEAEPQCgBr0AAG+9ACAyPQCggb0AQIO8AMD2vACAp7wAADg8AMCwPQDAJj0A0Os9AIAJPAAgnb0AgEU9AEATvQAAGr0AgCc9AABovQAAbLwAAIA7ANDevQCAF70AgGS8AOB+vQCAJjwAkNQ9AECSvACAzbwAgAu8AICHPAAAKjsA8KA9AEC5PACAUj0AQO48AIDVvACARLwAgAW9AABuvAAQwz0A4C89AOA3vQDgdD0AwDG9AOA3PQCAazwAQI+8ADCUPQAgSj0AALg7AABmPABwi70AAEa8AAC0PADga70AAGO8AIC8vABAiD0AgFw9AAAavQCAZjwAgDs9AKApPQBgI70AAHS8AADJPADAML0AwJs8AEBIPQDA0zwAsJc9AICFPQAAgTsAAEy9AAA1vAAAi7wAgEG9AADbuwAAj7wAQEO9ACBGPQCAFrwAEKM9AADbuwCAgzwAAPo7AGAevQCAODwAEM49ACASPQCAOb0AABm9AAABPACADj0AALi7AAAIuwCARLwAQK28AAAQugDAAz0AALa8AAAfPACAvrwAgK48AIDovAAgIb0AwK+8AMAKPQCAQLwAgIg8AICJPACAAL0AQJ28AIDjPADANz0AgBA9AACIugCQ4T0AsN69AKA2vQBQuL0AQKM8AMBAvQBAmDwAANM7AADFPADAwTwAAKs7AMCpPADAtrwAAHC8AEDAvAAw0L0AoA89ABCCPQAAErsAAPo7AECtPABgZb0AQJc9AIAvvACAUrwAAI27AADPuwCAZL0AwKq9AACHuwCADj0AgLA9AMAlPQAALbwAYIM9AMB4vQBAt70AgN08AIBSPQAANbwAwDi9AIAEPADALb0AoAA9AIAvPAAAfjwAAIA4AAACvQCA0zwAgL89ACB1vQAwkb0AAOi6AACYuwBAsrwAACE8AAAoOwAAFT4=","chunkHash":"5b957e8d78b33291537a963396cdd5397c8a60a2c52ff34727b464af8dd22108"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    #...\n    def __getitem__(self, idx):\n        #...\n                'metadata': metadata\n            }\n            \n        except Exception as e:\n            print(f\"Error in __getitem__ for idx={idx}: {e}\")\n            import traceback\n            traceback.print_exc()\n            raise\n#...\n```","range":{"startLineNumber":232,"startColumn":0,"endLineNumber":239,"endColumn":17},"embedding":"AIDZPAAAJzwAgJw8APCtvQCAurwAgNy8AAD5uwCAPzwAwJm9AACRuwAAwrwAALm8ACAmvQAA3rsAgKo8AAD6OwDA2jwAAAe8AKDWvQAgej0AIC49AFCOvQAAGrwA0KC9AABoPQAgFj0AQM48AADTOwCgDj0AwKs8AKCdvQBABb0AwIm9AEBQvQDgEb0AYD29AMBuPQBAfj0AAGM8AEA+vQBgJT0AAHC9AIAoPQAA/LsAAJQ6AAAevAAgCz0AAEq7ALCbPQAAOrsAAIa9ACBDPQAANDsAoLq9AECnvAAAtzsAAFU8AADKOwDAprwAwCu9AABCPQAAEbwAAAa7AIAcvAAgHL0AAAQ7AID0vAAAVDsAABC9AICpvACAm7wAACS9AICMPADAUL0AoDs9AIA8vAAAvDoAMMw9AKDGvQCgUr0A4Aa9AFCNPQDAn70AAG88AADauwCAWL0AIHC9APCsvQBgEz0AYFS9AIDBvACAdDwAAGK8AIBGPQAAmTsAwKc8AMDAPACAHr0AMK49AEA5PQCA37wAwAM9AABxvADANr0AwOW8AFCavQCgCr0AgLK8AADFOwBAWj0A4HG9AHCfvQAA7DsA4C89AMCYPQDAar0AsLe9AMCvPAAA9LwAwPu8ABDhvQBASj0A4CC9AMBivQDAijwAALQ6ACBUPQCgRb0AAHQ7ACBrvQAg7D0AQPW8AMDxvADwg70AwJG8AICUvAAAYLoAwFi9ACBlvQAA/DoAQKq8AEChPABgXT0AAMG7AECxvADAJD0AYLK9AOCIPQAgZD0AEMU9AAAcPABAmzwAQE09AGB4vQAAn7sAgEi9AADwOwAAFj0AABq7AGBfvQCASjwAgBo8AGDEPQBA9TwAgKi8AAA7PACAnL0AADS8ANCVvQAA2LoAABo7AOAsPQAA/DsAEJO9AECFvABAhLwAgG+8AMDNPADA+rwAAD+9AAC5vABwpr0AAMy8AGBSvQDAO70AEOe9AADougDAxzwA4DS9AACYugBQg70AICQ9AIBcvQCgDr0AYAw9AAA5vAAA1zsAANU8AMCGPAAA4LsAYAC9ADDYPQAA7DoAYFK9AED0PAAA4jsAgIu9AADwugBAOb0A4Dy9AADQugAAursAALO7AADQuQBgMj0AAEa8AECrPAAANTwAgCE8AEDyvACAHLwAgNe8AIAYPAAAYLoAAHu8AIB3vQAgQr0A0Ju9AIA5PABA8LwAAFi8AOBYvQCAbDwAgLW8AMDSPAAAxrwAAGA6ABC5vQDAzjwAAFE8ALCWvQAAm7sA4Hu9AMCDPACABTwAADA8AMC7vACQ3r0A8IU9AIAZvQAgbT0AIAq9AMCFvADwrb0AAFY8AIDFPABAGr0AgFe8AHDjvQAAxzwAQOU8AADeuwCAeLwAAIK7AKCkPQDgQL0AAJM8AGAFvQCgLb0AkI09AMCBPABA2zwAwJG8AAAtvACA8bwAMJ49AAAPPABgFb0AAHQ7AMCfPAAABb0AAFa7AIAdvQAA1D0AQJ08AKAcvQAwpb0AAH+8AAAcuwBA5rwAwD49AODuvQDABr0AAGG8AMBIvQCA77wAQMq8AICmvACAnTwAgLO9AAA2PAAA0DkAANW8AID9vABAq7wAAEw7ACA0PQDADr0AwFE9AACnPACgVb0AAKs7AIAfvAAA5DoAQCi9AKA2PQAAvLoAIAW9AKCGPQCACT0AwDC9AFCevQDAs7wAACw9AMCHvQCA97wAsNW9AAAcvACAP70A8J29AAABPAAgTT0AwIm8AADgOgAABrwAgAS9AAD8OgBAsLwAYE29AEDFPAAARr0AQKy8AICfvAAALjsAYC09AICjPQBAJT0AIOA9AADbuwAAjr0AwBw9AADhvAAAL70AYCE9AFCSvQAABDsAAKi7ADD6vQDAnLwAAHY7AGAhvQAA5DwAIMg9AEDmvABAJb0AgBi8AAAcuwAAGLsAUIQ9AIDPPAAAAz0AgHQ8AMBmvQDAhTwAICG9AAD7OwAQwD0AABc9ANCBvQAAPD0AYCu9ACBLPQBAMz0AwKi8AMAoPQAAUD0AgAG8AAA1PADQkb0AgL68AAA1PQAgG70AAJK8AAA1vADggD0A8II9AID0vACgAT0AADE9AEA+PQAAzLwAwKK8AICXPAAAAAAAgEY8ACAPPQDgHT0AsIo9AABVPQAAxzsAQDm9AMCAvACAI7wAALq8AADkvAAALDsAYGW9AEACPQAAK70AULs9AIBHPACgCj0AAD88AECuvACAzDwAgL49AKAUPQAgT70AQKC8AAB4ugDAmzwAACS8AIBJPAAAlTwAQIK8AIBdPABAljwAQOq8AIA3PACAzbwAADM8AAAAvACAIrwAAGq8AMDvPAAAMbwAQMY8AMAZPQCAL70AgFe8AGAIPQDAFj0AQAA9AADluwCQ9j0AgLO9AAA6vABQtb0AYAw9AEAOvQCgGD0AwA49AIB6PACAUD0AAE68AAC1PACgBr0AAIC5AMC9vACwzb0AoHs9ANCcPQAArDoAAGc8AADoPADAA70A4Gg9AAC/vAAA7rwAAI87AABIuwBgKL0AIJq9AAD3uwBgFT0AGAM+ACA6PQAANrsAAOU8AKA+vQCwhb0AwNo8ACBEPQCAXbwAYEq9AIAVPACAXr0AgJg8AADmOwAAobsAAEC8AKBavQBADT0AAD09AIAzvQCwir0AAP87AADRuwAArLsAgBG8AECwPAAoHz4=","chunkHash":"93644d43143f7ec2a8444339df7aa7f712efee9c5c85769f3243734ff53ef4b7"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                #  target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=80 , # Now represents desired number of frames\n                 debug=False):\n        #...\n    def __len__(self):\n        #...\n    def _load_and_average_window(self, window_files):\n        #...\n    def __getitem__(self, idx):\n        #...\n```","range":{"startLineNumber":79,"startColumn":0,"endLineNumber":198,"endColumn":31},"embedding":"AEDePAAAFDsAgE88AJCgvQAAnLwA4A69AEDLvAAA+TsAAIK9AADsPABAnrwAwOa8AAD3uwCAAzwAIAo9AAAFPQBAXz0AgHQ8AHDZvQBAOD0AoDc9ACCkvQAA67sAEMC9AMBePQDAQT0AwI88AICXvACACD0AALy6ALC4vQAAvbwAEMS9AOBLvQCgc70AQAK9AABVPQDQhD0AQIU8AEAXvQCADT0A4HW9ACAbPQCAurwAAKM8AADLvABgDj0AgB68APCTPQAAgjwAUIu9AJCMPQBA3zwAgJS9AABMvADA3DwAAAc8AACguwCgEL0AICO9APCaPQAADrsAgFM8AIA/PAAAsbwAANC6AAAIvQCAErwAACi9AACUvADAgLwAYEK9AMCHPABQgr0AAE09AIAzPAAA2DoA4LM9AICevQDgCb0AAHO8AKB/PQCQtL0AgI08AABGuwCgcL0AgEO9AOCDvQCgCz0AIE29AABZvADArzwAQOa8AMAnPQCAs7wAANg6AIDZPABAIb0AsKA9AOBSPQAAIjsAQNQ8AIB6vACAAL0AwEe9ANCUvQBA87wAoFa9AABAugCgQT0A4BK9AECavQBAyzwAAJE7ABCYPQCwgL0AcIu9AAALPACgOr0AgBC9AECnvQAA+TwAYBe9ACA4vQCgEz0AANa7AGCLPQCgKL0AAFM8AABGvQDg3D0AIAO9AMDHvACwl70AIAa9AMASvQAA3zsAAMK8AKB5vQAAXDsAgEy8AACVPADAST0AAKo8AEC4vADAFj0AUMi9ABC5PQAABz0AUJY9AADkuwCAaTwAwDA9AIBxvQAAqrwAgBe9AADTuwBAfj0AAGa7AKBevQCADTwAgGg8ACCxPQBA7zwAAN+8AMDkPACAdL0AAHG8ANC8vQAA7bsAABQ8ACA7PQAgBz0AkIu9AAA9vACA47wAoBe9AMBOPQAA7rwA0Im9AACSuwAAl70AABq9ACCdvQDAU70AMM69AIAGvACASTwA4Ee9AIA8vAAAwLwAYAo9AIBnvQCAO7wAQAY9AAAguwAA1DwAQA49AABQOwAAxTsAAD69AJCnPQAA4LsAAG69AACZPAAAkbsAAIe9AABAOQCgKb0AIDi9AAAAOwAAlDsAAO47AACWuwDACz0AgAe8AIBxPAAAmjsAQNk8AABpvAAAg7wAAES7AECePABAxDwAwIK8ACAQvQDgP70A4Fa9AACGuwCgDr0A4A69AGCUvQAA2rsAQMK8AABJPABAOb0AAOg6AHCdvQBAkzwAgBw8AMCwvQCAhLwAAFW9AAAouwCApzwAwJI8AIDpvAAw5b0AcII9AMAMvQCgiz0AQD29AICNvAAwlb0AgDQ8AADgOQDAFL0AIAC9AIDdvQCADz0AAOo8AAA2vACgBL0AgMy8AICbPQAAvLsAgAs8AIBCvACAWb0AcJI9AEAXPQAgOj0AgDm8AAA2uwCgfL0AoJs9AADhPAAA4rwAAKy6AADxPAAgL70AgEm8AID2vACoAD4AwLg8AICwvADger0AAB47AABvvACA+7wAQA49AADFvQAAKL0AAFW9AIASvQBgO70AgOK8AABNvACAEDwAcKa9AMCZPAAAZbwAQBe9AIDMvAAAdbwAQLY8AEDnPAAATb0AYCg9AMD4PACAVr0AABg6AACpuwAA0LsAQPW8AGAXPQAAnTsAgPi8AEBzPQAAPj0AQEC9AHCjvQCAVbwAIEw9AICOvQCgBr0AkLS9AACYuwBA+bwA4LO9AMDZPAAAJjwAAJq8AMCuvACAFrwAwPi8AAASOwDAvLwAYHS9AMAvPQCAsr0AgBW8AIDAvAAAAjsAAP08ACCyPQBgOD0AQOs9AADmuwAgHL0AQBg9AIA4vAAALb0AgDg8AGBwvQAACDwAgBg8AEDgvQAA0rwAAII7AAAjvQDgQj0AoNQ9AABFvADgm70AAHY8AAAgvAAAIzwAQFM9AIC3PAAgjT0AAAg8AABKvQAA5TsAIDK9AACMvAAQzj0AgEA9AAB9vQAgGz0AICW9ACAyPQDA+TwAAOe8AED0PADgDj0AAIA6AADQPACQh70AACS8AECMPABgJL0AAI+8AICNvAAAfz0AAD09AIBtvADAtTwAIFQ9AEAfPQDAqrwAQKy8AIBPPAAAJrwAAEM8AMArPQBgFD0AoHo9AMBwPQCAFbwAgBi9AIA4vAAARDsAACe9AAA1vAAAVrsAsKS9AADGPADATb0A8NA9AECxPACAHj0AgIC8AEDtvADA6jwA0MI9AOBNPQBAm7wAQMe8AADkPABAJT0AAHG8AMABPQCANTwAAHK8AADIOwAA2TsAAPK8AMCrPABAobwAwOU8AIAZPACAMrwAQJy8AIBqPAAAQLoAAKA8AKAfPQAgar0AQNK8AAAsPAAAkTwAAL48AADmuwCg1D0AAMy9AECnvACgqL0AgI08AEAnvQAA8jwAQCU9AKAjPQBgMT0AAOW7AIDCPAAAwLwAANu8AOABvQCQt70AwHE9AECQPQCAazwAgNA8AAC2PADgW70AoEk9AIDGvABAlbwAQKi8AADsOwBAPr0A0J69AICZvADgeD0A0OM9AABXPABA6bwAgPQ8APCLvQCggL0AQAs9AOAYPQAAV7wAQFW9AACwOQAgl70AALA8AACgOgAA4DsAAKO7AIBVvQCgQT0AYDw9AAAbvQDgrL0AADO8AADbvADAoLwAABK8AABbPADoDj4=","chunkHash":"651628a906f894a62ce915332039f3552b0c6e911fba801e1e0be81eb73bfccf"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\ndef get_lowres_image_dataloader(root_dir,\n                                batch_size=32,\n                                shuffle=True,\n                                num_workers=4,\n                                transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                # target_size=(64, 64), \n                                target_size=(80, 80),\n                                sample_percent=100,\n                                z_window_size=80,\n                                pin_memory=False,\n                                debug=False):\n    \"\"\"\n    Create a DataLoader for low-resolution images with coarse texture.\n    \n    Args:\n        root_dir (str): Root directory containing the samples.\n        batch_size (int): Batch size.\n        shuffle (bool): Whether to shuffle the dataset.\n        num_workers (int): Number of worker processes.\n        transform (callable, optional): Transform to apply to the images.\n        sample_ids (list, optional): List of sample IDs to include.\n        class_csv_path (str, optional): Path to CSV file with class information.\n        filter_by_class (int or list, optional): Class ID(s) to include.\n    #...\n```","range":{"startLineNumber":257,"startColumn":0,"endLineNumber":269,"endColumn":0},"embedding":"AECuPACACr0AQHY9AFCJvQAAZrwAIE+9AABAvAAAbDsAUMW9AEAHPQDAIL0AQP08AABUuwAA8rwAABK7AADAOQAAGDwAQOu8ACBPvQDArDwAAHo9ABCNvQAALjsAwGe9AMAAPQAAwLgAQJw8AEDzPADAIT0AwP+8AEAdvQBAlLwAYBW9AEAsvQCAHLwAgAW9AJCBPQDAoD0AAJA6AKBzvQAAxDwAcOy9AOBCPQAATjwAoGk9AACBvAAA7jwAgFC8AEAJPQBgEb0AoJu9AFDOPQCAbDwAIAO9AICdvACAYTwAQJm8AAAovABAs7wAAKu8AKBWPQBA2rwAAMs8AECtPACAbrwAgJQ8ACANvQCgPL0AACS8AIA/PACACzwAYAu9AABwOgCgsL0AADg9AICYPADAQr0AcIE9AKDqvQCAVbwAAMq7AMCbPAAAtbwAAOQ8AGANvQAwnb0AwJG8AFCvvQBgSz0AYGS9AAC4OwDAvTwAgPG8AIDsPABA2LwAAAu9AECTPQAACbwAwFU9AGAJPQCAXTwAQJg8AKA3PQDAM70AwP28AAD5vAAgJb0AQH69AICmvAAgmz0AICe9ABCNvQAAhzwAgI28AOBTPQCAWr0AAAq9AADAOQAgWr0AQJu8AOgBvgBAzLwAAK67AAAUPACAa7wAQI+8AKCxPQCgLb0AgPY8AABkuwDwuj0AAGy8AECxvAAAo70AQO+8AJCcvQCAHLwAAO67AMDMvADgTD0AQMC8AABLPQCgAD0AgA89AABRvACgWj0A4JO9ALCsPQAAwzwAgCM9ALC4vQAAtrsAAG88AED5vAAAxrwAQO+8AECmvADAkD0AgC28AEARvQBACD0AQPg8AIC+PQDAyzwAAHa8AEC2PACAUbwAAOu7AIDRvQAAqTsAIHs9AACiOwCApzwAoAK9AACJvAAAfTwAgG+9AACqPADA0rwAwLm9AADzuwBAbL0AAFw7ADDpvQAAi70AwM69AEDnPAAAcDwAYG29AABAvACgDL0AQN88ANCZvQCAFLwAwO88AABVvADgTj0AAJ48ALCJPQCAbT0AQI+8AFCHPQCACL0AIGe9AECuPAAAhbwAQM28AACfuwAA2zsAwCO9AAC1OwCAZDwAQKw8AIBsPAAAZLsAgPi8AACoPAAAuTsAQB09AAB1PAAAUjwAgAs8AIAVPABAYT0AwBq9AMC/vACACr0AAKy9AIDDvAAA47sAQKa8AMAEvQAAsTwAAKe7AAAjPQBAyrwAABA6AGApvQDgCT0AgAI9APDHvQAAijwAACg8AACcuwAAGjsAAEe8AOANvQDQv70AQCA9AMA1vQDApj0AgFK9AAArvAAwn70AAOQ7AGBtPQAgMb0AgJW9AHCUvQAAgLwAAP48AAAlPADgBr0AQOM8AMCrPQDAxbwAAJW8AADvPACAHTwAoCo9AMAUPQAAFrsAAJC6AABqvABAK70AwIY8ACBjPQAA0LsAgD08AABVPACgXb0AAPI7AIA3vAAQxj0AgGq8AICfvACABr0AgPW8AJCRvQCAn7wAAAg6ACDKvQAAm70AAFy9ACAVvQAAerwAAHS7AMCnPAAAGDwAEJe9AAAyPAAAALwAAOs7AMD1PADgCz0AgBG8AAD6OwBwg70AwO08AEDaPACQhr0AwIg8AAChOwCAjrwAYBE9AABIOwAAOrsAANu7AACVPACAizwAIGe9AFDOvQCAUTwAgMw8ACBPvQCgJj0AwIC9AAASvQBgz70AQJi9AMAgPQDADb0AAP+7AABOvABgYr0AAEI7AAC/PAAAOLsAwJE8AICtPAAAI70A4Co9AEAbvQAAsDoAgMk8ALChPQBgBT0AgPc8AADXuwCAnzwAgLg8AICCvACAF7wAwIc8AADmvAAA+LoAQAK9AOCYvQAAKbwAAA67AFCBvQCAKz0AMK09AICOPADAhLwAMIU9AICHvAAAgzsA4FI9AABIPADgkj0AAAM9AACmvQCAdL0A0LS9AABEuwBQ2z0AoFM9AEBNvQBgyj0AAJw7AGASPQDAozwAALg6AABjvADgNj0AoBE9AADZuwDQkb0AgAO8AOBfPQAwhb0AAKM8AIBQPADgOD0AADk9AAAfvAAArTsAABA9AED7PADAhLwAANK7AACzvAAA9rsAAPi7AMCJPADA7DwAkIQ9AACCPQAAJ7wAYC29AEDjvAAAbTwAQPS8ACAQvQAAALsA8MK9AAAxPADQi70A2AM+AACUvADgCD0AgJO8AABqvACAyDwAYII9AJCZPQAAaDsAQJq8AKAtvQAAmrsAgGy8AOBzPQAAJrwAACS7AOAdvQDAYr0AAMs7AOBuPQAQq70AQL88ABCDPQAAljwAgEI8AADQvACgBj0AwKm8AEAfPQDgY70AgNy8AOAxPQBAgzwAQE49AMCcPABAlj0AQMG9AOBRvQBAob0A4EM9AGCCvQDgWD0AAFc8AEDFPADAlzwAIAQ9ALCGPQCAfr0AwGi9AIDAPAAAWDoAwGk9AMCYPQCASbwAwCw9AIBRPACwgL0AgNw8ADCFvQDgVr0AgDk8AIAQvABAz7wAYKu9AICcvAAAmTwAcO49AICqPAAAfzwAwJ08ANCUvQDwhr0AgFk9AEAAPQCAHrwA4Be9AECLvAAgDr0AgIA8AADrPAAAPrsAgFa8APCLvQCAVj0AgDA9AIClvADQ0L0AANm8AADrvAAAgbsAAPu7AICvPABwHz4=","chunkHash":"55e6386eefea47425213fea554940a6784bd30d784d60f5366e5299bf5c5dd5b"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\ndef get_lowres_image_dataloader(root_dir,\n                                batch_size=32,\n                                shuffle=True,\n                                num_workers=4,\n                                transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                # target_size=(64, 64), \n                                target_size=(80, 80),\n                                sample_percent=100,\n                                z_window_size=80,\n                                pin_memory=False,\n                                debug=False):\n    #...\n        ignore_unclassified (bool): Whether to ignore unclassified samples.\n        target_size (tuple): Target image size (height, width).\n        sample_percent (int): Percentage of samples to load per class (1-100).\n        z_window_size (int): Desired number of frames in output.\n        pin_memory (bool): Whether to pin memory for faster GPU transfer.\n        debug (bool): Whether to print debug information.\n        \n    Returns:\n        torch.utils.data.DataLoader: DataLoader for the low-res image dataset.\n    \"\"\"\n    dataset = LowResImageDataset(\n        root_dir=root_dir,\n        transform=transform,\n        #...\n```","range":{"startLineNumber":269,"startColumn":0,"endLineNumber":282,"endColumn":0},"embedding":"AMCAPACgJr0AICg9AGCZvQCAsTwAwNG8AIBXvAAA1jwAINC9AACNPAAAQr0AoHo9AADuOwCgL70AADw7AACYuwDgFj0AgLu8AKCtvQAALT0AYDM9AGANvQBA3jwAsIy9AACAPAAgOD0AAG28AACRuwBAaj0AgKq8AEA5vQAAp7wA0IC9AEACvQCAnrwAYBS9AEBYPQCALD0AAEU8AOAwvQCAdT0A8O+9AAAcPAAATrsA4BI9AAAFvQAAjTwAQBq9AEBgPQDAorwAIGy9AFC2PQAA0jsAAFg7AICWvABAJj0AwMo8AADeOwBAsrwAwN28AACePQAA7bwAALQ7AMCtPAAAxjsAAEC5ACCJvQBAuLwA4FS9AKAHvQAAIrsAgNm8AECAPABAsL0AQCk9AAA0PQAAAr0AsJc9AJCgvQDAJr0AAL67AIDcPAAASLwAAOI8AIB6vADgjb0AIDK9AKDevQCATD0AoLu9AACmOwAAojsAAKq8AGAEPQDAB70AgJq8AOCKPQBAf70AkII9AEBQPQDQiz0AAIw8AIAkvAAAQ70AQFi9AOA0vQBASL0AcKW9AADauwCg1T0AwEW9AIB3vQAAarsAAOA7AAArPQDgNr0AAA47AAB6uwAATL0AAEK8AMDJvQBAGr0AAKo7AADZOwAAHTwAAJK7AODePQDAXr0AgGE8AMDWvAAQvz0AwKG8AEArvQBA5b0AACy8AHCovQAAajsAACS8AKBKvQAAQjwAAOa7AMDIPAAAgDkAAIg7AMBLvQCgiD0AAPm8AOCdPQCASjwAAEA9ACCuvQAAqDsAAJo7AACkvAAgQb0AAOy8AIBAvACAnT0AAHA7AMBuvQAAKDwAALM8AKCiPQBAvTwAAFC8ACBXPQCAXLwAQNC8AKDJvQAAcDwAYDk9AMDdPACAZDwAAIu9AADFvAAA6TsAwJS9ACBjPQAASLwA8Iu9AEDpvABgTr0AAPY7AADKvQAgqb0AQMe9AACFuwCA3TwA0JK9AIC9vAAATrsAAFE9AICNvQCAA7wAwMw8AADRuwBgSz0AAN08AEALPQAgIj0AAGM8AKCvPQBAmTwAYIG9AICFPADA17wA8Ie9AAAXvQBAgjwAwBu9AADQOwCA0DwAQPw8AACougAACjwA4Dm9AAD8ugDgWD0AAHU8AIDIPABA5TwAgNo8ACAoPQAAKT0AQKG8AGAvvQDgOb0AQG69AKAOvQAAjzsAAGa8AIAgvQAA7jwAAOa7AACaPABwob0AAKy7AICNvQCAvTwAALG7ACCAvQAAeDsAAKA6AIAhvACAabwAgKe8AAClvAAg3r0AwFc9AIDMvADAgT0AEJy9AACcvACQob0AwMW8AABnPABgCb0AgMW8AMA0vQBAqbwAwJ48AIBRPAAAGbwAAKg6ADCGPQBAhLwAABg7AECCPADAH70AQEU9AECCPQAAFjwAALc8AABgOwDAaL0AwHA9AKBNPQAABjwAAOy6AAD4ugAA07wAgNw8AEASvQCAVD0AAG47AAA+uwBAnLwAgGk8AGAQvQAAW7wA4Ao9AAClvQCwg70AgGS9AGBNvQBAGL0AAKy6AECYPAAAb7wAEJ+9AABGvADAhbwAoBa9AACfOwDAijwAgCq8AACouwCA7rwAADA7AIDjPADwpb0AgA88AID/PAAAD7wAAGs8AACWPAAAgDgAwIi8AGAVPQAAJLsAQFu9AOB0vQCgEL0A4E49AEBKvQCAiDwAoHi9AADLvACwpb0AwIO9AABEPQDAzLwAAPO7AAA8uwDA8LwAAAo7AIC1vABAobwAwJu8AECTPABgUL0AwPU8AEAdvQDAtTwAYAg9ANCZPQBATT0AwBY9AACHuwAAwDgAgCQ9AECMPAAAXLwAQAQ9AIAwvQAATDsAAGE8AHCzvQAAiDsAALC6AGBQvQBgJz0AYN49AICHPABAYL0AoGI9AIA+vACgED0A4H49AIAGvQBgqz0AANi7AOBrvQBAn7wAULG9AECKvACwzz0AIGI9AEAvvQDgqD0AAMA6AID3PADgEj0AAAS7AAC0uwBgFj0AQEI9AICiPAAQob0AAKA6AADKPACASr0AAO27AADAOQAAbT0AsIU9AMCavABArzwAAAw9AIAZPQAA3bsAAGC6ACAOvQCAW7wAANU8AAAPPQDA7zwAAEw9ALCePQAADbwAgGC8AGAEvQCAdzwAoCi9AABsOwCAl7wAEKG9AABXvACgm70A4A8+AGALvQDA3TwAYBC9AABDvAAA+DoAkLE9ABDNPQCALzwAgGC8AIBHvQAAiTsAoES9AOBfPQAA8jsAAHo7AAA8uwCAIr0AgBK8AIBFPACgdb0AgFk8AMDmPAAA0TsAAMu7AGAfvQAgAD0AAGW8AOAsPQBgDr0AAHa9AAA+PQAABDwAQEQ9AECJPAAAEj0A8NO9AIDwvADQo70AgMU8AKAMvQBgBD0AAJe7AAC/PAAASzwAIB09AAAOPQAAvbwAIBa9AEC8vAAAtbsAgEk9AKCPPQAA8DkAAGQ9AADgOwBwhL0AQJA8AKAkvQAgCr0AgI+8AEAJvQBAEL0AYMK9AGAavQBAST0AMJo9AMA4PQAAqTsAQB09AMDAvQAgM70AoEc9AGBePQAAN7wAgDi9AIBNvABAx70AAMs7AACSuwAAWDwAAAm8ACCivQAgST0AwFI9AIAYvAAQ4r0AAJQ7AIDHvADAz7wAAAAAAIAuPAA4Bz4=","chunkHash":"7a9b7fbfb6d6ae8e14c13c1acef6ade911a375ad3e6bd292dc991cba9b6c44aa"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\ndef get_lowres_image_dataloader(root_dir,\n                                batch_size=32,\n                                shuffle=True,\n                                num_workers=4,\n                                transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                # target_size=(64, 64), \n                                target_size=(80, 80),\n                                sample_percent=100,\n                                z_window_size=80,\n                                pin_memory=False,\n                                debug=False):\n    #...\n        sample_ids=sample_ids,\n        class_csv_path=class_csv_path,\n        filter_by_class=filter_by_class,\n        ignore_unclassified=ignore_unclassified,\n        target_size=target_size,\n        sample_percent=sample_percent,\n        z_window_size=z_window_size,\n        debug=debug\n    )\n    \n    dataloader = DataLoader(\n        dataset,\n        batch_size=batch_size,\n        shuffle=shuffle,\n        num_workers=num_workers,\n        pin_memory=pin_memory\n    )\n    \n    return dataloader\n#...\n```","range":{"startLineNumber":282,"startColumn":0,"endLineNumber":300,"endColumn":21},"embedding":"AIDSPABAE70AgHU9ACBmvQAAYLsAAM68AADduwCANzwAMNS9AACAOwDA1rwAYGo9AADfPAAAOL0AAB47AIBBPADARj0AgDC8AECmvQBggj0AoIo9AIDYvAAArjwAgAm9AMDkPAAAnjsAAEq7AADUuwBgjD0AQDO9AMBGvQCA37wA4De9AIA0vABgEL0AoAO9AED1PABgaD0AABw7AKB9vQCADz0AwPO9AAAOPQAA6DsAwEQ9AIBlvADAwjwAYBq9AAAxPQDA97wAYH+9ABCqPQDA1jwAgDg8AIA8vABgID0AAGw7AADouwCADLwAwAe9AOCRPQDAxrwAwMc8AAAjPQCATrwAALS6ACBqvQAA1rwAwNG8AADXvAAAVDwAwJO8AIC6PACwmb0AQFw9AAD4PABgQL0AgG09AGCNvQBABL0AAL87AIAiPQAAnLsAAHU8AAA4vQBwib0AwD29ABCXvQBgHz0AwIW9AADOOwAAJDsAACK9AGADPQDgDb0AAOA6AMChPQCQib0AgEI9ACAVPQCQhD0AQIM8AEC+PACAtrwA4DK9AEAevQBgNb0AAJ+9AACnOwCgvT0AYAq9AMCIvQAA+LoAAGY7AABaPQAACb0AgG48AAB0uwDQk70AAAg6AMDEvQAA0LwAgCW8AIBHvAAAw7sAAP07AGC2PQAAPL0AwME8AACIOgBAkz0AgNK8AADGvABw0b0AgHG8ABDHvQCAUzwAAGa7AGAcvQBA/TwAgEm8AEAsPQAAy7sAAM47ACAyvQBgQj0AgAC9ADCOPQCAxDwAgBU9AOCnvQAA6rsAAAK7AEDwvAAgUr0AgCe9AAA6PAAgiD0AAKc7AACXvACAZzwAALQ7ADCbPQAgRD0AwOa8AKAZPQAAojsAAD+9AJC7vQCAfrwAQHA9AAAEPABAvzwAgGW9AACLvAAAZzwAIDq9AEB8PQAgDb0AALy9AIChvACATb0AALk8ACDbvQCQn70AEOe9AAAIugAAvjwAYHW9AACxOwAAZDsAAF89AAD6vABA2bwAgOo8AAAbvQBwgz0AgFg8AED+PADAED0AgBq8AAC4PQAAgTsAAB+9AAAMPACgIr0AgAu9AICqvAAAQDoAIG69AABCuwAAvTsAoAE9AADQOwAAersAQA+9AADwOgBwij0AgLQ8AACWPAAgPD0AwOU8AEAXPQDgfj0AQMm8AAD6vAAAtLwAcJ69AEAlvQDAhLwAgCS8AIAcvQAAWz0AQJg8AMDiPACgN70AwM28AECLvQCAtTwAANw7AAB9vQBAAT0A4Ao9AAC4OwAAM7wAAKu8AABXvACAtr0AIA89AECSvABAeT0AwCe9AAAjvAAgwr0AwKi8AID4PACgLr0AgMq8AGA7vQDAFb0AAII8AECVPACA3LwAgC88AKBXPQAAI70AwI88AICiPACAXbwAwBc9AGBYPQAAPzwAwPk8AACZuwDAZL0AwLA8AMBfPQAAeDsAAOs7AABIPAAACb0AANo8AOA1vQDgpz0AAJq7AABGvABA6LwAAC47AABYvQBAt7wAABs8AHCovQCAfL0AkI+9AAAbvQAgEr0AAFq7AECHPAAAHzwAEJC9AACXuwBAFL0AACq7AACNPAAAYDsAYEm9AAD3OwAAoLoAAAc8AIDWPABQmL0AAMM8AOAhPQAArzsAgO08AADQOgAAuDsAgKu8AGAnPQAAw7wAgIC9AECivQCAabwAgFo9ACCJvQDAuDwAQIy9AEAbvQBgJL0AQDa9AIA0PQCA4LwAQLm8AACouwDACL0AwKE8AICQvACAsTwAALG7AMCpPABwkr0AwCE9AADfvAAAdjwA4BQ9AKAtPQAARD0AIBE9AACJuwAAsTsA4AA9AACbPAAA+TsAwP48AGAKvQAAFrsAAIC5AIC9vQAABLsAAL07AEBvvQBAED0AcMU9AOAXPQDA37wAgJM9AAAKvQAAcjsAEJA9AACUugCQqz0AAKk8AICWvQDAHb0AEJS9AKADvQDQtT0AcI89AMB1vQDArT0AAK48AIDzPADAOz0AgEC8AAC3uwAgVj0AoCA9AABwOgBgrL0AAGg6AICTPABgXb0AAIY8AAATvABAUD0AQEY9AACsuwDA6jwAwMs8AID2PAAA4jsAABC8AAA2vAAAzLwAANE7ACAmPQAA1jsAwLs8ACCsPQBgGb0AABS8AADFvADA6zwAQCu9AACdOwAAHbwAkMu9AAAFvACAhb0AcA4+AICsvAAA6TwAoA69AIArPAAAnrsAQOU9AMCzPQAAuDsAgLO8AACfvQCAlbwA4Dm9AOAyPQAAvzsAgHS8AIAFvADgXr0AAAI8AKAUPQDgjr0AABo7AIDzPAAATLwAAJY7AEAIvQBgUD0AQMO8AEBwPQCgQ70AgEy9AIBlPQAAJzwAoC89AEDlPAAgGj0AsNi9AAANvQCA1r0A4C09AGAHvQCAQT0AADo8AMDSPAAAAT0AIEY9AOBJPQDgDb0AgHC9AABxPAAAtzsAoFQ9ADCnPQAAwDgAwNw8AACGOwDAZb0AwMA8AMD4vADgUL0AwAy9AADGvAAA2rwA8My9AMAqvQCA2zwA4OA9AKBPPQBAmTwAYDc9ANCivQDAib0A4DE9AKB0PQAAUbwAAFq9AADZvADgnr0AwLc8AABYPAAAhzsAAPK7AMCwvQBgNT0AIHA9AACgOwBw7b0AAP28AAC6vACATbwAAIc7AAAOvACADT4=","chunkHash":"24d2b190423a66c18bf6a64cb5075f94332168101176963695f09c30c9b5cfef"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\nimport os\nimport glob\nimport numpy as np\nimport torch\nimport pandas as pd\nfrom torch.utils.data import Dataset, DataLoader\nfrom PIL import Image\nimport torchvision.transforms as transforms\nfrom tqdm import tqdm\nimport sys\nimport random\n\n\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\n\ndef load_chromatin_classes(csv_path, ignore_unclassified=True):\n    #...\ndef default_transform(image):\n    #...\nclass LowResImageDataset(Dataset):\n    \"\"\"\n    Dataset for loading low-resolution raw images to capture coarse texture.\n    \"\"\"\n    #...\ndef get_lowres_image_dataloader(root_dir,\n                                batch_size=32,\n                                shuffle=True,\n                                num_workers=4,\n                                transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                # target_size=(64, 64), \n                                target_size=(80, 80),\n                                sample_percent=100,\n                                z_window_size=80,\n                                pin_memory=False,\n                                debug=False):\n    #...\nif __name__ == \"__main__\":\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":304,"endColumn":0},"embedding":"AACcPACAdbwA4IA9AMCXvQBAyjwAYAO9AEDDPACgGb0A8JS9AIB8PAAAIDsAQMM8AAC0uwAA2LsAQDQ9ACAePQDAsjwAAIU8AJCMvQAQpz0AgF49AIA1vABA5bwAIIC9AIAUPQCAqzwAgIo8AIDjPADAND0AwIG8AMB/vQCALbwAEKe9AMAgvQCger0AAPu8AIDcPACQkj0AADi7AADCvAAgFz0A4Ie9AGAFPQAAnTwAwNk8AAARvQCArDwAAMW7AIBdPQAAerwAYAu9ACCOPQBAkzwAAHy8ACAlvQDABz0AgEG8AMDEPABA2bwAgIK8ACCSPQAgdr0AAHM9AAC0OwCA+rwAAK48AFC7vQBgCr0AAJO8AEDHvAAAGjwAAMe8AADAugDAyb0AYGw9AMCVPAAAkLkAcMQ9AABhvQBgJb0AgDe8AEAWPQAAgrsAICs9AAAEOwCAN70AgJ29AFCKvQAAaDwAsJ29AAB2vADADj0AoAK9AGBqPQCAEzwAQPo8AOBEPQBQkL0AoGY9AMCPPQCAITwAoFY9AIBiPAAA5jwAgA+8AKAmvQDAXL0A8L69AMAQvQCgmD0AAFW8AADbvABAzrwAADA7AIBJPQAgfL0AAPe8AACnuwAAErwAALo8ADDCvQCAYTwAAOa7AABtvACAJjwAgMw8ACBvPQCAtbwAgH08AEBnvQCQ6z0AYDS9AIDUPADgub0AAH68AICFvACA6rwAAMG8APCPvQBgTT0AABY7AIA2PABAqTwAAH+8AEDLvAAA4DoAQIO9AIC2PQCAVDwAwIM9AGAevQCAdTwAAKQ7AMCQvAAAzbwA4Cm9AAAUuwAA1D0AQI08AIAtvQBgDD0AAL87AKAlPQBAsDwAoCi9AEAbPQCgN70AAG28AFCwvQAA/LwAgEQ8AABlPACATzwAwKa8AACWvAAAwDgAEIO9AABrPQCgWL0AsIW9AMDTvACAjrwAAD28AKDXvQDgub0A4Mm9AAAauwCAsTwAQHy9AEAXPQAAHrwAAAY9ACAxvQAAjTsAQJQ8AMDQPADgYz0AYCk9AABwuwCAzjwAAKu7AOANPgAA9LoAMMG9AECDPADgcr0AgC29AIADvQAgIb0AQAe9AKAVPQDA6LwAQKS8AIBRPAAA4DkAQFa9AAC1vADgLD0AQCc9AACguQDA4zwAAAi8AABtPAAAKz0AoG69AEAyvQBA+bwAIGO9AIAYvAAAg7wAAMy6AOA1vQCAp7wAQKC8AMAPPQCgVb0AQNM8AMDyvAAABrsAAMC5ANCkvQAA1zwAADK7AAD2OwAANTwAwLW8AAAEvQAwBL4AoIc9AAD/uwAgnT0AwGC9AAAeOwDwtr0AQPu8AACCOwBAT70A0Ii9AEB9vQBAszwAADq8AOAqPQCA4bwAAAO8AICePQAArLoAAKw7AABzPAAAwDkAgPQ8AOCxPQAA1zsAAJA8AABIuwCgqb0AQGg9AABqOwAAn7sAAO07AMDxPAAAW70AAOk8ACApvQDwnj0AQAG9AECBPABgGL0AALC5AOCKvQBAXr0AgEU8AGDfvQBAgb0A4Ey9AADevACAQLwAANe8AABJPAAAMDwAMMi9AECXvABAtbwAABg7AIA/vADAqrwAAPI8AEDDPACAB70AAEQ7AEDdPABgX70AAN27ADCAPQAAKLwAgBi8AAA6PQAAZjsAUIG9AICePQCAvTwAYIC9AECWvQDAr7wAYJ89ADCpvQCAADwAwHe9AMCgvACAkTwAEJi9AADEugCAzrwAAAs9AAA9PAAAu7sAAHY7AEAWvQAAIbwA4Du9AGAdPQCgkL0AwJq8AICFvAAAUDoAQEg9AFCOPQBgMT0AYMc9AAAsPQAALbwAQAE9AABsPACgcL0AUIA9AABbvQAAiTsAAIg6ADCPvQBAAL0AQKw8AMBMvQAAJT0AQKQ9AAByvABAyrwAwC49AADXvACgJT0AoAk9AACguQDAcj0AoA69AIAEPACAgbwAMLm9AIA5vADAfD0AwAc9AKA5vQAgET0AAMk7AMDyPADAjD0AgJ28AACguwBAqTwAIA89AACUvADgXb0AAHQ7AMBzPQCAPr0AgNu8AAAgOwAA0LoAgGo9AMA8vQAA6zwAgEE9AGAbPQBgHz0AAPO8AAB0PACAs7wAgKw8AIA0PABA1DwAkIQ9AEAfPQAAd7wAwNO8AEANvQAAGjsAgLi8AAAeuwCAM7wAILW9AMCEPADgdb0A6AI+AACkugAARDsAYEq9AIDtvACAlLwAgMk9AJCUPQAADr0AAKU7AIB/vAAAAzwA4E+9AADiOwCAFzwAgLq8AIChvABAs7wAAI08AGBSPQAgX70AAJc8AAAKPQAAZrwAwKQ8AID1vAAAALgAgJG8AEADPQBA9bwAoFi9AAB3PQAAVbwA4BM9AAB/PABA7T0AULC9ACAtvQBwxL0AoEY9ACBEvQDgJj0AQDw9AADSPADAxDwAgFA9AJCCPQBger0AgC+9AIDdPACgZr0AcKs9APCtPQAAqbsA4BE9AAA4ugDgYr0AoBc9AMA0vQAACr0AwOO8AIC6PAAAX70AEKa9AABKuwAgWz0AAMs9AIBzPACApbwAYCU9ANCGvQAAvrwAoFE9AABuPACAbbwAwMq8AACcuwDQx70AAP88AMC3vADA1bwAAMs7AIAJvQAA4zsAQJ08AABYPABAQ70AAK+7AIAIvQCAfrwAAE08AICZPAAw+j0=","chunkHash":"ad3b54d7a4548e74e67ef721f843991f2cb7ff9e973684064d1a233514a5f799"},{"text":"File: `dataloader/lowres_image_dataloader.py`\n```python\n#...\n    transform = transforms.Compose([\n        transforms.Resize((80, 80)),\n        transforms.ToTensor(),\n        transforms.Normalize(mean=[0.485], std=[0.229])\n    ])\n    \n    dataloader = get_lowres_image_dataloader(\n        root_dir=\"low_res_dataset\",\n        batch_size=16,\n        # class_csv_path=\"chromatin_classes_and_samples.csv\",\n        transform=transform,\n        z_window_size=80,\n        debug=True\n    )\n    \n    \n    print(f\"Dataset size: {len(dataloader.dataset)}\")\n    \n    \n    for batch in dataloader:\n        print(f\"Batch size: {len(batch['label'])}\")\n        print(f\"Image shape: {batch['image'].shape}\")\n        print(f\"Sample IDs: {batch['metadata']['sample_id']}\")\n        break\n```","range":{"startLineNumber":305,"startColumn":0,"endLineNumber":329,"endColumn":0},"embedding":"AECkPAAAh7wAoKs9AAD1vAAAuLsAIEi9AEC3vAAAcLwAoNK9AICZPADga70AwDs9AECPvACAz7wAANY8AEB4PQAAtzwAgC48ACB2vQBAUD0AIGk9AEBqvQCAXTwAwD69AEDuPAAA3LoAwMa8AACGvABgCT0AgAg8APCAvQBA9LwA8JS9AOA0vQCQkb0AQOW8AIDrPABgCz0AwKw8AAA2vQDACD0AIH69AEAQPQAAgDsA8Ic9AAAoOgAABj0AwBG9AAA/PQAALLwAQFm9AFDEPQDAHj0AAMy6AKAXvQAwoz0AYAA9AIBHPACA2bwAQFa9ANC4PQDAz7wAIFI9AIDjPAAAuLwAwJ08AABVvQAA57wAAP47AOAhvQAAJj0AAEy7AACKuwBgmL0AgJI9AABLPADgBL0AwJQ9AOCjvQDAML0AAAu8AIDaPABAvbwAQOg8AABGOwAA4rsAgBe9ANCqvQCgIj0AgHC9AACQOgBApzwAACC8AOARPQCgS70AQBY9ACAmPQBglL0AgDg9ACA2PQCAez0AQDo9AAD4OgDAIL0AwIq9AMAZvQDAs7wAkL69AIBtPACwuD0AgNa8AABavQAAcDwAAFK7AEB3PQBAcL0AwKS8AIDkvACggL0AAMS6AFCqvQAA6DoAoAC9AADtuwAAYLkAAP87AECMPQAgBb0AALK7AIBMvACQsD0AgP28AABUvACgyL0AgJW8AICGvQAAuDsAAJS8AGAgvQAgPT0AgAk9AMAOPQAAdrsAAGY8AID6vADASj0AEJ29AFCyPQCA4TwAcIQ9AAA8OwAAMrwAoE69AOAGvQDgD70AgK68AEBXPQDASD0AAKc8AMCZvACAqDwAAP07ABCrPQDgZD0AwIi9AIAJPAAAurwAQO68AHDPvQBAvLwAgJc8AEAAPQAAvDsAYMW9AOAfvQDA2DwA0IC9AEAiPQBgEr0AwIO9AAAkvAAgab0AAK28ACDFvQDwvb0A8N29AMDfvABgED0AAEy9AACNOwCgNL0AIEg9AGAHvQDARL0AgMY8AMAuvQCAHD0AgHA8AACBPADAvTwAAAs8AJCRPQCA8zwA8KC9AABuuwBAa70AgMO8ACACvQDA37wAQNS8AMCRPABAxDwAgAw9AIBZvACAKrwAgES8AABcuwAgdD0AwJw8AIBxvAAAhTsAAAy7AIBqPQAAuTsAwEm9AEA2vQAAJzwAQHm9AIAbvQCAzrwAQPA8AGAHvQBARz0AwJU8AOATPQDAdL0AAFs8AKAhvQCAXTwAQIm8AKBrvQDAhrwAAIW7AMAXPQDAJz0AAFC8AACVvAAg+L0AUJc9AIAwPACAZD0A4Ae9AIBdvACgxr0AgDK8AABvPAAALr0AgM28AGBuvQAAhrsAAIi8AEDFPABwgb0AAK27ADCjPQBAN70AgKo8AIAQPADgLL0AgDg9ACATPQAAjDsAAG88AIBrvAAAiL0AIAM9AOAXPQAAQLoAABI8AACPOwAAkLwAgL88AIA8vQDAnz0AAAk8AAA9vADAQb0AgOQ8ACBhvQDgfb0AYIo9AMBqvQDAYb0A4Em9AEBFvQDAzbwAAMS8AIAaPACATrwA8LC9AOAcvQCA67wAAJW7AADRuwBApbwAgE88AID/PACAILwAgDg8AMDdPAAATr0AICc9AAAzPQCAo7wAgI+8AGALPQAAQDoAgAS9AEAKPQCAVDwAIG69AMC1vQDAwrwAIBE9AFCPvQAATjsA4My9AKArvQCAlLwAsJ69AGA1PQCAj7wAABQ8AMAXvQAAHTwAAKk7AKAzvQBAsjwAgMG8AEA7PQDgZ70AgDC8AIAdvQCAaD0AQMo8AKBaPQCgaz0A4Io9AIC/PABAwLwAYC49AIBDPACAcrwAIBY9AOBFvQAA4jwAADY8APCkvQAABDwAAM07AKBrvQCAHDwAUPw9AAD4OgAAJ70AUIU9AADxvAAgUT0AUIM9AAAaPABApj0AgF28AOAzvQBAuLwAgHK9AEAMvQBQnz0AgGc9ADCLvQBQnT0AgCK8AAAZPQBwiD0AgE+8AIBBPAAAVD0AAMY8AAC8OgBgXb0AAII8AIADPACgDL0AAKK7AECEvAAAoTwAsI89AAA2uwAARz0AAHI8AGBXPQCABzwAIA+9AIAAvABACb0AQLY8AAAQPAAArDsAgI88AMCUPQCAIjwAAFi8AAAcvAAAWjwAIGy9AIAcvAAAYjsAELi9AKA6PQAAor0A0Og9AABpvQDAkzwAwP+8AAAWPABAW70AQPQ9AGBWPQAA4LoAAN67AADQvAAA4DsAgPi8AAAJPAAA8rsAACs8AADEugAAKLoAQLc8AKAePQCwlb0A4AE9AOAGPQAAuLsAAPQ6AIDgvACAqDwAAKi8AABsPQAABb0AgF+8ADCwPQAA9zsAwNA8AIAavAAgJT0AoL29AGBGvQBAtb0AQHU9AMA5vQAgKT0AgC68AMBFPQCgCz0AAK47AOBcPQDA2rwAADS9AAA4vADAJr0AIDk9AMBzPQAA1zwAUJk9AAC9OwBA8rwAwGY9AEBFvQBALb0AwBm9AACiuwDgML0AkJW9AIClvABABD0AYKI9AIDpPAAAMrsAgMs8AHCAvQDAY70AANA8AECOPQAAUbwAQD+9AACQOQDQnr0AAEa7AAAAOAAA3bwAgCM8AKBMvQDAnT0AAE09AADEuwDQ7L0AABI8AIAIvAAA87wAABa7AMC5PAAg8j0=","chunkHash":"513c079627d66e2202f593f096d0386a93dce55e6e9c88783aeb3998ebb19a5b"}]},"file:///teamspace/studios/this_studio/mesh_requirements.txt":{"hash":"1aa9f9d58cb98a4c67b288f44da04e246cc9146bfda5ab73c002e6ee7c8b21f7","entries":[{"text":"File: `mesh_requirements.txt`\n```text\nnumpy>=1.20.0\npandas>=1.3.0\nscikit-image>=0.18.0\ntrimesh>=3.9.0\nopen3d>=0.13.0\nmatplotlib>=3.4.0\nplotly>=5.3.0\ntqdm>=4.62.0\npymeshlab>=2021.7\npillow>=8.3.0 \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":10,"endColumn":0},"embedding":"AACpuwDAIz0AcKY9AEAnvQAACrsAAM68AAClPADA7TwAAIW9AEC2PAAAOjwAAJA7AIBdvQAAybsAAGg8APCRPQAAWD0AwAO9AEAGvQBQuj0A4IQ9ADCSPQAAIL0AAAi9AGBvvQCgcz0AANw8ACALPQAgAj0AQKI9AFCAvQDApLwAwFe9AEBTPQDg4L0AgGG9AIBBvQBQgj0AANU7AIAEvQCAxjwAoEq9AACAOABQjr0AYHy9AIAxvQCgJL0AgNS8AMCqPACADrwAAMa7AIAePADgWb0AAPa7AKB/vQCAc7wAgLW8AAB/PADA0jwA4D29AEC3PQAA2LoAYMO9AGAOvQCgBz0AQCM9ACALvQCASL0AgGg8AGAXvQCwoL0AgOo8AAC3vABgzb0AQKu8AAD0ugBA+bwAMJc9AOA+vQCgKL0A8MW9AACTuwAgK70AgAA9AABmvQBgnb0A4Jq9ACBjPQAgwb0AgB48AGB4vQDQnb0AcJq9AAA4PQAA57wAAAC9AIBDPACgM70AwNy8AGBkPQAA3rsAAE28ALCJvQCArzwAgDE8AACougCAET0AoHO9AMAIPQCglj0AwOq8AIBMvACADz0A4Mk9AABrPAAAZjsAAOq7AICKPAAAkb0AgG88AEDrvACAVL0A4CE9APC7vQDAvzwAAHu8AIBKvACAurwA4Dq9AABUuwBgDL0AYFu9AICVPQAAdb0A4Ca9AEDGvACAvbwAAHg8AADbvAAgQj0AAGk8AIBfPQBACr0AYCQ9AMACvQAAiLwAgAI9AIAtPAAAKLsAIH49AACdvABQoz0AAMC8AADgugAAxbwAMNK9AOBlPQCgdz0AAOI8AIA+vQAANb0AwLC8AEAyvQCAdTwA8Nc9AIBqPADgB70AgCy9AEDmvACAu70A0LQ9AKCcvQAATLwAMJi9APCcPQAABDwAwGo9AAAkuwBApLwA4Ee9AACougBAkzwAgCq9AAC2vABA47wAAAi8AAAAPQCgXD0AQKK8AABMPQDAjrwAgJ89ANCBvQAAxDsA8Iw9AJCJvQBguz0AcJm9AIC+PAAAXrsAoIK9AADkuwAAFTwAAJ49AOAjvQBgtr0AQNC9AMCwvQCQkr0AAN28AEBqPQBAoTwAwLa8APCfPQAA9LsAgA69AACBvAAgAj0AwMW8ACCSPQAAoTsAANs8AEBePQBgJj0AwPY8AKAkvQBA2jwAAIu8AAAbPADgrz0AIBm9APCAvQDAy7wAYGo9AACYugDgL70AACG8AEAavQDQg70AgEW8AACaPABA/rwAAAg6ACC3PQAA5jwAAIG7ACBMvQCguL0AgIE8AAC/uwCgFj0AQG89ANCaPQDAg70AAIm8AAB/vQDg0b0AAHA7APC9vQAAlTsAgGG8AIBvPAAA0LwAgN68AAB4PACgKD0AgJ08AKB7PQAAuzsAAJS6AACbuwBgrD0A0Jk9AAAAvABQur0AABo9AOCAvQBAMD0AYCw9AMAbPQCAv7wAADG8AADLPABgEj0AIAc9AEBaPQBAQD0AQJU8AIA2PAAAdrwAQNE8AOA1vQAgsL0AANk7AMA/vQAAg7wAIDo9AABXvQAQg70AAGG9AADKOwAA0rsAAMc7AECFvAAgB70AgCM8AIAmPQCAFrwAgMY8AAACPACgzL0AgEi8AMCjvAAAyLwA8Ii9AAB2vACAaz0AQLA8AGDpPQDA37wAADW8ABCGvQAAtzwAwNC8AIBPvQAAwDsAQOc8AMDMPAAANTwAqAe+AAD8OwCAQzwAgG88AACbvACAbrwAAPM7AMAbPQBQnD0AAIu7AADwPAAAPrwAAPu8AFC1vQDA6DwAAHS7AABFPAAAE70AAGk8AKBoPQDAwDwAAOc8AIAmPAAAdDwAAJU7ACBsvQCAdzwAANq8AMC5vADA7rwAAKe8AABGvQAAfbwAABe9AOA6PQAA5rsAAPE8ACAmvQCA7TwAQGK9AACePACAtDwAAGG8AICuvAAAPbwAgBC9AABWvAAAgrsAoDY9AEDLPAAA1rsAABc9AACwOwDgRD0AYEW9AEDhvACAHL0AAB47AED3vADAwLwAgAs9AEBNPQAAizsAwB+9AAAJPQAAlDsAgJa8AIBjPAAA2jsAwEs9AADtOwCgDr0AYEm9AIDZvAAAXbwAgEE8AICkPAAgHD0AQHM9AIDUvACAerwAgIo8AOBPvQAAELsAwAi9AACrOwAgTr0AAGk8AADWOwAAhrwAAAI8AADAvAAAFLsAAGY7AIDVvAAABrsAAIE9AEDCPAAwq70AACU9AOClvQBAgrwAgAy8ACDYPQCAFTwAwKy8AIDcvACAHTwAIDQ9AABTPABAFr0AQNq8AMDLvACAdj0AoCM9AADgPACAkrwAIAq9AICwvABgTz0AAGg6AKA6vQAgPb0A4EQ9ABCsvQAAuzwAwAG9ADCfPQCA3rwAgMY8AEDpPACwiz0AACW8AEAMvQAACD0AgB88AIAjvACgGz0AAJs7AABXPQCAdLwAAAe8AIB5vAAAMj0AANG7AEAHPQCAVb0AYCI9AMCTvQAAyDwAYAw9AECEPABAibwAwAe9AGAEPQDAgTwAQAo+AIDXvACgpL0AgFc8AABNvABwo70AwP08AKBsPQCAmrwAwA89AAC2vADgkb0AgKq8AECJvQDApLwAAMA8AOA3PQAA57wAIFM9AEDEvAAAdTwAwDO9AICPvAAgFD0AIEc9AMClPAAAcTw=","chunkHash":"31aac6f0a3405e8b351b4c9c4e02f8d02564c1b73f43211de87cf9b6e5d488a6"}]},"file:///teamspace/studios/this_studio/output.txt":{"hash":"053a5d356b33448fab450efafcf9d6d1fdbc01eb5c74d2ec93cae52d2942e0d6","entries":[{"text":"File: `output.txt`\n```text\n��p\u0000y\u0000t\u0000h\u0000o\u0000n\u0000 \u0000:\u0000 \u0000T\u0000r\u0000a\u0000c\u0000e\u0000b\u0000a\u0000c\u0000k\u0000 \u0000(\u0000m\u0000o\u0000s\u0000t\u0000 \u0000r\u0000e\u0000c\u0000e\u0000n\u0000t\u0000 \u0000c\u0000a\u0000l\u0000l\u0000 \u0000l\u0000a\u0000s\u0000t\u0000)\u0000:\u0000\r\u0000\n\u0000A\u0000t\u0000 \u0000l\u0000i\u0000n\u0000e\u0000:\u00001\u0000 \u0000c\u0000h\u0000a\u0000r\u0000:\u00001\u0000\r\u0000\n...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":2,"endColumn":0},"embedding":"AMDjvADAgTwAIJc9APCGvQAASTwAgHS9AKBYPQCABLwAgGK8AIDwPADgED0AQFc9AADCvAAADTwAABA8AKCHPQAArDwAgHQ8AMCyvAAw0D0AAIE9AABGvACARTwAQNS8ADCePQAAgDsAoLm9ACCEvQCArzwA4A49AMC8vQCAJb0AAAk8AIAFvQDApjwAAN48AOA7PQBAnbwAoBg9AKAJvQAAnbsA8I69AJChPQBAN70AQK89AEBDPQAAtLsAgJ88ACCXPQAAHDsAAHG8ACAiPQAA2LoAoAY9AACkvAAAErwAAIg6AHClPQDApjwAoGG9AOA1PQAAbjwAYFY9ACAGvQDgPr0AAAA7AACAvADAlTwAAEs9AECivACANzwAAHy7AIALvACAjTwAAE67AKCuvQBgSb0AgPG8AADnuwAQhL0AUJU9AACkOwCAQLwAgJO8AACIPAAA6DoAqE2+AEDDvAAAkr0AIGu9AAAYugAAYDwAAN27ACAjPQDAnDwAAMq7AKCVvQAArrsAgFK8AKA8vQAAVz0AYA69AECePACAzjwAALg7AABNPQCAebwA0Le9AMB9vQCAR7wAAK68AIAovQBASz0AAFK8ADDNPQCAPTwAAKC6ACAPPQAAfjsAgD88AECOPAAAeDwAgBQ8AOBqvQDgCT0AAJS7AICLPACAtLwAwEM9AMAovQCAZbwAQFe9AABsvADAp7wAAN28AABlPAAABrwAQHE9AMD4vADw4z0AAD89AKBgPQDAIL0AgFi8AAArvAAATLsAgEG9AMCnPABA7LwAgJq8AIBUPADANT0AMLm9AMAfPQCQ7j0AYK69AOAdPQAA0TsAgIS8AAAAOADgZ70AgGy8AACAOgBARz0AANU8AECCPACAoDwAwFq9ANCnvQCAnzwAQEK9AMCZvQDANb0AAEq7AIBEPADA1jwAoGe9AMD4vACwmL0AgIm8AGBjvQAAhjsAAN68AGACPQAA2TsAuAa+AMAkPQCgVb0AQAi9AAAGPQAAr7sAAA88AECBvQDgIr0AwPS8AKArvQBw3z0AkIK9AADEuwCAS7wAALC6ABCnPQDA9rwAAEg7AGAcvQCgCD0AcKi9AOABPQAgUb0AQP28AEDXPABAgDwA4D69AIAOPAAAkr0AAGi6AABguwCAPT0AwKe8AIB1vAAArDoAIHo9AIABPABgJz0AwBA9AHCxPQAAGD0AQN68AACLPACARjwAAME8AADwPACArrwAAGi7ACBhPQBgZD0AAPC5AABSuwCgF70AAIA8ACBYvQBA4LwAgOk8AIBdvACAxzwAAE47AMDjvACgWb0AQIe8AOBbPQBgsj0AgHc8AGA9PQCgcL0AACy7AIBAPQCgH70AICO9AKAxPQBwrb0AgIi9AOCSvQAA6r0AgGI8AADkOwAAXj0AwBk9AGAfPQCAG70AwJG8AAAaOwAA2jwAgIs9AMDAPAAgT70AgNE8APCivQDAkbwAAJQ6AKBGPQAAi70AIFK9AGBFvQCAQT0AgAc9AAAfvADAibwAAKs8ACBDPQAArbwAAIQ8AGBVvQBAVz0A4AM9AIBbvQCApbwAQOw8AACIOwDwkb0AAH68AGBWvQAgFr0AAN88AGB9PQDQtr0AwFg9AECgPQDAxbwAEJw9AADwOgBgCb0AAHi8AMAlPQCAdrwAQMK9AMCYvABgHz0AAHw7AABqPQDQir0AoEY9AGD3vQCwnD0AgIG8AADduwAAuT0AAL27AMDVPAAAYDsAwBs9AABcPAAgRr0AAPA6AMDdPACA3jwAQNu8AMCcPABwzD0AIAI9AACKuwCwnL0AgHC8AACwvQAAUzwAgPQ8AEB9vQAA9TwA4DM9ACDDPQCAWDwAAD+8AGCLPQBAMD0AwAq9AIAjPAAgEL0AwLq8AACtuwCAJT0AgC49AADvuwAgZT0AwK88AICkvAAAMrwAAFU8AAClvABAdz0AoIE9AIAHPAAA/jsAgJ48AOAtPQAAczwA0Nm9AACevQBAnzwAgP48ANCGPQCgED0A4GW9AOAkPQAAxDsAALq7AIAVvADACb0AENU9AKBLPQAA3jwAAL28APCaPQAAS7wAoAK9AGArPQAAADwAAOA8AAAEOwAAfbwAAGY7AAB6vADgQz0AsKO9AGAAvQAAGrsAgHO8AMC4PAAADrsAQBk9AIBRPACAcjwA8IQ9AAAAOwDA4DwAwI28AID6PADA67wAAFq7AAAIPAAA1rwAwL48AJCFvQDAhrwAAC29AAAHPAAA5LwAgA49AOAzPQDAYL0AICU9AID7vAAArDwAoCY9AIDnvADwhz0AANC6AACqvACAkL0AMJo9AIBTPAAAkDkAQOm8AIA+PQAAfLsAANy8AJCwvQAA4jsAAH68AMCqvACAUb0AgLi8AEC6vACAL70A8Lq9AAAQPAAAfLsAoAg9ABCnPQAAZrsAAIc7AEDqvACArTwAAGC5ACA+PQAACj0AIEs9ACA9vQCAIjwAAFO9AABtvACAMrwAQIO9AIDKvAAAHbwAwJ+8AGARvQCAr7wAQHw9ANCUvQBAgL0A0M69AMCgPABwqL0AALE7AOAcPQAAlzsAMKo9AADyOwBAS70AAPS7AIBAvQBgID0AABm8AJCZPQCAlrwAAFa7AMANvQAAHr0AgMi8AKAQPQBgl70AAFC6AMCXPAAgk70AYFU9AACrPADgW70AAJ07AOBLvQAAm7wAgKI8AGAQPQAADrs=","chunkHash":"e8403226b4a39971e845011fd69b4069181051306fb6bd963288cd6600bb1683"},{"text":"File: `output.txt`\n```text\n...\n\u0000+\u0000 \u0000p\u0000y\u0000t\u0000h\u0000o\u0000n\u0000 \u0000s\u0000c\u0000r\u0000i\u0000p\u0000t\u0000s\u0000/\u0000f\u0000i\u0000n\u0000e\u0000t\u0000u\u0000n\u0000e\u0000_\u0000v\u0000g\u0000g\u00003\u0000d\u0000.\u0000p\u0000y\u0000 \u0000-\u0000-\u0000d\u0000a\u0000t\u0000a\u0000_\u0000d\u0000i\u0000r\u0000 \u0000d\u0000a\u0000t\u0000a\u0000/\u0000n\u0000u\u0000c\u0000l\u0000e\u0000i\u0000_\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000_\u00001\u0000a\u0000_\u0000v\u00001\u0000 \u0000 \u0000.\u0000.\u0000.\u0000\r\u0000\n...\n```","range":{"startLineNumber":2,"startColumn":0,"endLineNumber":3,"endColumn":0},"embedding":"AAARvQCA1jwAUKg9AICVvQAAwjsAoIG9AMBgPQDAsLwAAIA6AMCdPACgEj0A4Eo9AIC7vACAaLwAADC6AEBpPQDAAj0AgKo8AADEuwBwrT0AgEs9AEDIvAAAsDsAAEu8AJCQPQCAb7wA0Iy9AIAnvQAAHD0AgN88AMDQvQDgJr0AAKU8AMApvQAAXLsAAOs8AKBBPQAANjwAAHQ8ACASvQCAJjwA4Hm9ACCtPQCAMr0AMKQ9AGAlPQAAObwAABY7AFCzPQAAk7sAALg7AOBqPQCABbwA4HI9AEDIvAAAFrwAAPU7AOB8PQAAWjsAYIu9AGAxPQAADzwAUJE9AACPvACAwLwAgN08AAB7vACA3TwAoFA9AIAGvABAmjwAAHM8AABAOQAAuDwAAPw7AHCJvQDAar0AQPW8AMCtvADAJr0A4JE9AMCTPAAACLwAAOC8AICWvAAA9jsACCm+AABQvABwnb0AAHi9AIBqvACAIjwAQJa8AKA1PQCAKDwAgCQ8AOBnvQCAZzwAwOa8AEDEvABATD0A4AW9AIAKPQDA2zwAgIA8AEBBPQCALr0AQLe9AAB1vQCALrwAwOO8AAA9vQDAPz0AgCc8AKDDPQCAJTwAAHW8AADrPAAATDwAAJC6AIB6PABAhDwAAJg8APCWvQAAkDwAgDC8AAD0OgCAcbwA4Eo9ACAovQCAZbwA4D+9AECkvAAAGL0AACy9AEDAPAAAqLsAQG89AKAKvQAgEz4AYB49AGAzPQAA87wAAOe7AABqOwAAR7wAQGS9AAAKPAAAJb0AwPa8AAD7uwBgOT0A4MK9AMC1PAAA2j0AoMu9AAAxPQAAaDwAgCy8AAB8uwDwjL0AAC47AIAAPABA2jwAgMU8AMCIPABA4jwAQH+9AACbvQAA8LoAgFq9ACCrvQDgSL0AgLW8AACsPAAAQDwAAEq9AAD9vADwsb0AgA69AEAyvQAAdTwAAB+8AMAjPQDAqTwAuAS+AEA8PQBgPb0AAMa8AEDXPABAmLwAAJg7ACBRvQDAE70AYEK9ACBEvQDwzj0AgLa9AEDJPAAACbwAAAG8AMDiPQAgAb0AAFa8AMAwvQAAbzwA4K29AIClPADAKb0AgAa9AIA+PACgAD0AgNe8AADAOgCAc70AAD28AABSOwCgUD0AAIG7AAAtvACAbDwA4Ds9AABrPABADz0AQEE9AACWPQAATz0AwCC9AIBTPAAAkDwAgDE9AIC2PADAgLwAACO8AMC/PAAAMD0AgDO8AIA0PABAvLwAIGQ9AOA9vQBAj7wAAD49AADAuAAA7DwAAM47ACA6vQDgI70AQK28AKBsPQBArz0AgLw8ACBLPQAgUr0AAPw6AECZPACAP70AACC8AGBOPQAgar0AMJq9AGA6vQCg9b0A4BM9AAAvPACgUj0AwCk9AMBKPQBgV70AgMe8AACxPAAAsjsAIEs9AEAWPQDAd70AgBw9AICHvQCAH7wAAO47AABPPQBAmL0AwFq9AKCMvQBgeT0AAF08AIBIvABArbwAgOw8AADIPADgCb0AgN88AOA8vQDAPj0AwOE8AAA1vQCAu7wAQIY8AAC6PABAor0AAAA5ACBXvQBAir0AoAc9AECiPQBg870AQM08AECdPQDAt7wAIHk9AAAnvACABr0AABg6AICTPQBAkrwAgKm9AIAavAAAwDwAAC09AEApPQCQmb0AwIY9AODKvQAwmj0AwLu8AADZuwCQsj0AAO07AADwPAAACbwAwPI8AAAiOwCAE70AgDm8AABHPQCAjTwAIFi9AACpvADgxT0A4GA9AMDXvABws70AQM68AJCRvQAAUjsAANA6AOBdvQAAGDsAYIA9ADC+PQAAPDwAgF+8AACgPQAQgT0AAN+7AID/PABASL0AANa7AACFuwAAZDsAAEE9AABAOQDgGT0AgM88AAC8uwDAgLwAACi6AACCvADgYD0AoFM9AADouwCAFjwAAKU8AADKPADANj0AsPO9AHCJvQAAdTwAANk8AGCBPQAgDD0AoFG9AAB9PQCAsbwAAO+7AICyvABgCr0AsLo9AMBDPQDA9DwAgOO8ANCDPQAA7rwAoAC9AEAYPQCAGjwAwKI8AADkOwCARLwAgLi8AACQOwDgIz0AoIG9AAALvQDAgLwAgOS8AOA3PQAAAjwAgLs8AADAOQAAODoAIHU9AAD3uwAApjwAAPG8AIAiPQDA3LwAAAw8AACpvABgBr0AoBk9AACHvQBA2rwAwDq9AICpPABAoLwAQKs8AEDFPADgab0AICE9AAAMvQCASjwAgFM9AIChvADgYj0AAF+8AIApvADgj70A4GE9AIBBPACAJzwAgAq8AED7PACAyrwAwMW8ABCvvQAAkDoAANG8AMCxvADARb0AALu8AABavACA2bwAoLO9AABwPADAjTwAIAY9AECgPQAAEzwAgJk8AEBHvQAA8jwAgFQ8AGAHPQBgBz0AgEA9AEBzvQAAlDsA4Ay9AAD8uwAAgDsAIMK9AIBMvAAAnrsAAEi6AID1vAAAdLsAYEI9ACCLvQBAg70AsI29AECvPADgqL0AAKO7AIA8PQAAo7sAsLQ9AAB1vADgWb0AgAA8AAATvQAANT0AgIi8AGDBPQCAnrwAgGY8AICRvABgM70AgAS9AMC3PABgub0A4AQ9AGBlPQCAF70A4AQ9AGAsPQBwhr0AQK48AMA4vQCAmbwAQP48AMDvPAAAirs=","chunkHash":"e7b9eb45449e2c6f5d47522011b530f66f7666605cf4fc5b715f8a5a79516d8c"},{"text":"File: `output.txt`\n```text\n...\n\u0000+\u0000 \u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000~\u0000\r\u0000\n...\n```","range":{"startLineNumber":3,"startColumn":0,"endLineNumber":4,"endColumn":0},"embedding":"AADZPABABz0AwIY9AMCQvQBgBr0AQB29AEAqPQAAhrwAgOu8AECiPACgSj0AwD89ACB8vQAAoDoAAJI7AABrPQCAozwAAOw8AMCbvABAez0AwFU9ACAbvQAAazwAABS8AAAWPQAAeDoAUIG9AIAjvQAAXD0AgEA8ACC/vQCA77wAAJ+7AEAzvQCgCr0AAA+8AMB2PQAAqDoAANo8ACBOvQCAnDwAIIe9AOCFPQAgCr0AoIg9AGAJPQAAc7wAwIk8AEDaPQAAlrsAACM8AGB1PQAAuTsAIDk9AIAYPAAA97wAQJ88AOCcPQAAVrsAgFa9ACBHPQCAH7wAID09AEBhvQAA6LsAAMi6AACYPACA7DwAoIE9AABgOQAAArwAgGS8AIBzvAAA2LoAQKk8AEBYvQBArbwAgHS9AKAUvQCATr0A4Bs9AIACPACAijwAgHm8AMC6vAAAA7wAIAK+AACCPABQor0AgBy8AGATvQCAtbwAAEO9AECfPACASjwAALu7AOBQvQBAzjwAAEi6AABKvAAgOj0AgOq8AADYPACAGjwAwLY8AEBCPQAgC70AgJ69APCSvQCANrwAAMi7AIB4vQDAzDwAQI08ANDBPQAAsrsAAOQ6AACVPADAFT0AAHU8AACkPAAAhLsAAMA5AECevQAAzrsAQNG8AAAqPQBAvrwAADQ9AKB5vQCAirwAoFm9AGAnvQAgab0AQFG9AADwOQCAG7wAQH49AMA/vQCQ+T0AQNU8AICoPACA5rwAAEi7AIAyPABAqrwAYFi9AAAFPABgD70AYGS9AIA7vACAfjwAkPG9AMBBPQCQyj0AUMe9AMCMPAAAsjsAALg7AABiuwDgM70AAN27AIAVvAAAqjsAAMg7AMCkPAAAazwAICO9AACivQBA2rwAIDy9AJCMvQAgSb0A4Ii9AACkvAAA1DwAgEu9ACCRvQBQpb0AAA69AADSvAAAwjsAgPK8AIBdPQAAdDsAMP29AIB1PQAgPL0AANS8ACBZPQAANLwAAC88AKAKvQCAkbwAAKU7AIAkvQCAvj0AQI+9AIB8PAAAwbwAgCW8ABAAPgAA/TsAAAa9AMANvQCAXjwAgKS9AICzPACALr0AwNC8AOBdPQAAgbsAAKC5AAAoPAAgt70A4AO9AMDNPADAWT0AgEm8AEDVvAAgWT0AAKo9AIBtPACAND0AQGQ9AEC6PQBAwDwAwB29AAAlPQCAozwA4As9AOADPQAA/rwAABS8AADTPABAKT0AAOQ7AADHOwAAAr0AYAY9AABwvQDAEr0AQEc9AEDHPADAmjwAANM8AOA2vQAAEL0AQOe8AOAzPQDgnD0AYAk9ACAjPQBgOL0AAJC5AACPOwAQg70AAOe7ACAjPQCAUL0AoLK9ANCXvQDQ670AAPc7AEDPPADAfT0AQDM9AEDkPADgHr0AgJa8AABGPAAA6DoA4Ig9AEA/PQBQlb0AwMc8APCEvQDAoDwAQPy8AECbPACgcL0AwIG9AACKvQAANz0AYBg9AABfvAAAJrwAAPY8AED+PACAer0AIBc9AKAovQDAXj0AgM88AOBsvQCgG70A4Ac9AAAcPQDAe70AgIS8AABkvAAgRb0AoDw9AHCUPQDQyb0AwK08ACB8PQAAIr0AoGM9AADHPAAAmLwAQOu8AGBQPQDAh7wAYJi9AAAnvQCAfjwA0II9AKBcPQAAnb0AgGc9ANC2vQAQiD0AgCq9AABgvABghz0AAHg7AADQOgDAi7wAADk8AMAmPQBA7LwAAD68AAA7PQAAq7sAAG69AACkvAAw4D0A4Co9AECXPABgdL0AwOa8APCqvQBAobwAAIW7ABCJvQCAqjwAgDc9AFDJPQAAHbwAAOE7AECAPQBgOz0AAHy8ACBRPQCgSr0AgOY8AABFvAAAYzwAwNg8AIAEvADgFT0AAEU8AACgugAAoLoAANO8AIBBPACwmT0AgAk9AAAtPACA0DwAABA7AIBNPADAvTwAsMW9AACyvQAAIrsAYBs9AMBIPQAgBD0AoJa9AKBXPQAALDsAwLm8AICjvACA4bwAkJk9AMA5PQBA0zwAAAO8AKA+PQBAAL0AALq8AKBjPQBAnLwAYBc9AMCGPACAijwAgAy8AABmPAAATD0A8Kq9AICCvAAAtbsAQMG8AEA/PQBAkrwAAJY7AAA3vACAfbwAIIY9AABGOwCAXDwAQOu8AMABPQCAy7wAAOi6AMCQvADAGr0A0IA9AJCLvQCgGr0AAFi9AAAIOwAATrwAgEE8AIC1PACw070AQJo9ACAEvQAAmrwAIAQ9AGAuvQAAAT0AAHK7AABIuwDAv70AEJ09AADwuwAA77sAAD28AEA3PQCA9bwAABa9ADDBvQBARz0AgAo8AIA0PADA2rwAAHu8AAAAPAAALb0AwDy9AIASPAAAsrsAgBo8APDRPQBgCT0AAHQ8AIAzvQCAjTwAAIU8AEDBPABgiT0AYDs9ACB9vQAAZTwAwOi8AADtOwCAJzwAsJO9AIBPvADAwrwAAFq7AEBTvQAAFb0A4Fo9AMBpvQBAGb0AsLO9AADVPAAAg70AAO87ANCBPQAAS7wAQOc9AEClvAAgQb0AAHY8AIDWvAAAqTsAgEG8AFDrPQBAsbwAAB48AIAOvQBgW70AgBi9AABguwAgn70AIBY9AIAYPQDgMb0AQPc8AABvPADAk70AAFy8AICFvACAjbwAwLM8AEBgPQAAeLw=","chunkHash":"3078ee7b2435dfcda52007e1be12aac34f870b109179eee452a857cab638773d"},{"text":"File: `output.txt`\n```text\n...\n\u0000 \u0000 \u0000 \u0000 \u0000+\u0000 \u0000C\u0000a\u0000t\u0000e\u0000g\u0000o\u0000r\u0000y\u0000I\u0000n\u0000f\u0000o\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000:\u0000 \u0000N\u0000o\u0000t\u0000S\u0000p\u0000e\u0000c\u0000i\u0000f\u0000i\u0000e\u0000d\u0000:\u0000 \u0000(\u0000T\u0000r\u0000a\u0000c\u0000e\u0000b\u0000a\u0000c\u0000k\u0000 \u0000(\u0000m\u0000o\u0000s\u0000t\u0000 \u0000r\u0000e\u0000c\u0000e\u0000n\u0000t\u0000 \u0000c\u0000a\u0000l\u0000l\u0000 \u0000l\u0000a\u0000s\u0000t\u0000)\u0000:\u0000:\u0000S\u0000t\u0000r\u0000i\u0000n\u0000g\u0000)\u0000 \u0000[\u0000]\u0000,\u0000 \u0000R\u0000e\u0000m\u0000o\u0000t\u0000e\u0000E\u0000x\u0000c\u0000e\u0000p\u0000 \u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000t\u0000i\u0000o\u0000n\u0000\r\u0000\n...\n```","range":{"startLineNumber":4,"startColumn":0,"endLineNumber":6,"endColumn":0},"embedding":"AAAhvAAAljwAIKY9AJCIvQAANLwAoF29ACBXPQAA+LsAAJu7AECdPADANz0AQEY9AEALvQCAT7wAAGC6AEAfPQCAfjwAALs8AABUvADwyj0AYGA9AEDBvAAAnTwAADC8AECPPQAAZ7wAoKe9AAARvQAgaD0AAEQ9ADDcvQCAD70AAHg6AIBuvQAAeDsAAFM8AABzPQAAIbwAANU8AABKvQAAlzwAYGK9APCoPQBgOb0AcLQ9AKArPQAA27sAAIy8AJCuPQAAkDkAABS7AEAoPQAA+LoAQEY9AIAovABAgLwAALA5ABCRPQAALzwAoI+9AKAoPQAADDsAYIY9AECuvADAFL0AQOo8AACfOwCAtjwA4Bs9AAB+uwCAZbwAgCu8AAByvABAnDwAABi8AACcvQCgdr0AQI+8AIBWvAAwmL0AwJ09AAAVPAAA8LoAQLC8AACVOwBAtzwAgC2+AAA7vADQmb0AQPG8AMC4vAAACLwAACq8AAAXPQAAWDwAAEA6AKB/vQAAKjsAACS8AEC0vACgUT0AQCm9AEDnPABApDwAALA8AKBBPQCAprwAgMa9AKA8vQCAwrwAwI28AMA4vQAgTT0AgDi8ACDkPQAA0TsA4DS9AEDePAAAPTwAAFI8AEDQPAAAgjwAAOC6APCDvQCAHTwAgOK8AADDPAAAbrsAYGQ9AGAsvQAA1LoAYIS9AMDAvADAxrwAwB29AECQPAAA5bsAgHI9AAAkvQBwBj4AwBk9ACAlPQDgIr0AABK8AAARvABAlrwAsJ+9AAB4PAAAM70AoDm9AAAgOQBADz0AIL29AACiPACAzz0A0PG9AEC2PAAAHjsAAAC7AMCjPAAQlb0AAEg6AIBYPAAA7DwAAIU8AAD4OwCApjwAIFG9AFCmvQAAajwAYGu9ABCsvQBAYr0AgDa8AABWOwAAdjwAYFO9AGAdvQBwlL0AAPK8AABrvQCAL7wAQPe8AOAhPQDAjTwAAAu+AMAOPQAgY70AADa9AGAAPQAAPrwAAHw8AKBJvQAAkLwA4Be9AIBFvQDwtz0A4Ku9AIAgPAAAjrsAgB48ANDAPQAATrwAACy7AGAJvQCAojwAMJ29AEAJPQDgTb0AgGS8AIAVPQAA0zsAgCi9AAAgOwCgj70AAKy8AADkugCARj0AgJq8AIBOvABAozwA4Ew9AABIOwDA+zwAoB49AFDEPQBAFj0A4BW9AADUOwCAQzwAQLQ8AIDWPAAA8bsAoAm9ACBLPQAARz0AwI28AABpvACAj7wAACc9AOB3vQAAy7wA4Cc9AIABPAAAuDsAANA7ACANvQDAE70A4Dy9AEAyPQCwlj0AAHw8ANCHPQDAgr0AAEi7AMCNPACA4bwAAMe8AIAVPQDAer0AEJm9ALC8vQCQ+b0AAHI8AICkPABART0AACE9AEAXPQAgIb0AAO+8AABMOwAAoLkAAGo9AADjPACAOL0AICQ9AMBfvQAAHbwAAAi6AMAGPQDAob0AQHS9AKBnvQBACj0AANU7AACqvAAAaLsAgAE8AKAQPQBgT70AgP88AIBOvQCgSD0A4CA9AIB0vQCAIr0AwK08AMDSPACwlr0AALa7AGAxvQCgRr0AgE49AHCgPQBADL4AQCM9AHCbPQCABb0A8J49AACauwAA7LwAAN+7AKBNPQCAULwAIIW9AACNvADAFz0AYC09AOBsPQBggr0AUJE9AGDCvQBgiD0AwLu8AABoOgCgpz0AAAw8AEARPQAAjLsAAMg8AEDOPACgLr0AAJe8ACAoPQCAhDwAQCm9AECLvADgvT0AwIs9AADsugCQi70AAFC8ABCsvQAAoLkAgJs8AEBlvQBA/zwA4Do9AGCuPQBAhTwAACi7AHC/PQBgdj0AQKq8AKANPQBgLb0AACy8AACluwAAAj0AwCs9AABoOgBgKT0AALk8AADcugBA0LwAgDC8AECFvADgmD0AAHk9AECMvAAAezwA4CI9AECePACgFz0AoLW9ABCIvQCAGzwAYCo9AGCZPQAA/zwAYDa9AEBbPQAArDoAAHy7AICrvADA2rwAQKA9AADSPADgBz0AABO8AMBdPQAgJb0AQEW9AMCjPAAA8jsA4DM9AAAKOwAANDsAAKi7AIBbvACgMT0AQJu9AEDPvAAADrwAwNW8AECsPACABDwAAJ88AIA2PAAAmLoAMIY9AAAYvABA1DwAgNa8AACiPABAlLwAAAq8AAAiuwCgFL0AQPc8AJCFvQBAkrwAwCG9AIA0PAAA5LwAgJ88AKAAPQAQgL0AIDQ9AIDmvACABjwAgCI9ACAcvQBgST0AgBG8AABAOwAglL0A4JU9AABLPAAAXrsAQJy8ACAXPQAADbwAwNi8ACCrvQDA/TwAgLm8AADfvADgLr0AQMG8AIB9vACA77wAgKO9AAC/OwAA/7sAgJc8ALCFPQAAiTwAAK47AMAwvQBAtjwAANs7AEAGPQCASD0A4EQ9AMB5vQAAEbwAQPy8AADkOwAAzbsAcJi9AEDAvAAAZrwAALu7AIAYvQAA1bwAQIw9AACOvQDAjb0AUJS9AECuPACgh70AAOA6AGBAPQDAjbwAoKw9AACAOQBAib0AAES7AMDXvACAHT0AAA68AKC1PQAAmLwAAL07AAAJvQAA6bwAAEe9AECxPABgn70AwNM8AIAoPQCgeL0AQBM9AICvPABAlr0AABw7AKAivQAAsrwAgLk8AMAQPQDA1Lw=","chunkHash":"580cc1168c3dff0c1cb66b4daa6948c9385cfb2acff422f9b3c310880190d52b"},{"text":"File: `output.txt`\n```text\n...\n\u0000 \u0000 \u0000 \u0000 \u0000+\u0000 \u0000F\u0000u\u0000l\u0000l\u0000y\u0000Q\u0000u\u0000a\u0000l\u0000i\u0000f\u0000i\u0000e\u0000d\u0000E\u0000r\u0000r\u0000o\u0000r\u0000I\u0000d\u0000 \u0000:\u0000 \u0000N\u0000a\u0000t\u0000i\u0000v\u0000e\u0000C\u0000o\u0000m\u0000m\u0000a\u0000n\u0000d\u0000E\u0000r\u0000r\u0000o\u0000r\u0000\r\u0000\n\u0000 \u0000\r\u0000\n...\n```","range":{"startLineNumber":6,"startColumn":0,"endLineNumber":8,"endColumn":0},"embedding":"AADgOgAAuTwA8LM9ANCIvQAAhLwAQCa9AGAdPQBArLwAgBG8AKADPQAABz0A8JE9AEB7vQCAXLwAAIi6AIBTPQCAnDwAAPM7AADiuwDQhD0AwG09AIAqvQAgKD0AAPG7AEB1PQDAnLwAsMe9AECAvADAFj0AAK48AGCxvQDAD70AABY8AGAJvQCAj7wAAEk8AIBpPQAAnzsAAKU8AEA9vQBAvTwAgEG9AADIPQDgWr0AEJ49AOA6PQAAGbwAgDs8AMB8PQCATTwAwIQ8ACAPPQAA6DsAwE49AECrvAAAX7wAgBQ8AECOPQAAHjwA0IO9AIDUPACAMbwAgKU9AMCevADA2LwAAE48AAC0uwAApDsAAF09AIAJPAAAv7sAAJW7AADduwCACjwAgJ48APCVvQDgXL0A4Cq9AMDSvACAa70AgGA9AAD5OwAAkLkA4GK9AADVOwAApTsAED6+AABIuwBgo70A4Ca9AMCJvABAlbwAgCy8AIC1PACALLwAoD49AKA7vQAAsDsAAL+8AAAYvADAvzwAABW9AMAhPQAAPTwAgIc8AKB4PQDA9LwAEOe9AEAXvQAAFjsAALK7AIBkvQDA/TwAALU7AOCnPQCAE7wAAJm8AMCHPADA5jwAAGA5AIANPACAFzwAAK08ACBTvQAAEzwAQIG8AIA1PAAA1LsAwAY9AGA8vQCAW7wA4GC9AMDBvAAAurwAIDi9AACNPAAA97sAAHk9AEABvQCoEz4AwBI9AGAzPQDA87wAgCy8AACQOgDAm7wAgIW9AACUuwAAOL0A4ES9AIA+PABgAD0A0Na9AMD3PAAg4D0AwMq9AADoPAAAJrwAAMQ6AAAtvACgTr0AAFi8AAA8PAAA5zsAgIU8AAAmuwAAizwAwI+9AKCSvQDArDwAgC69ALCpvQAwhL0AAKq8AABSuwAAeDwAAC29AKBuvQBwzb0AwPa8AKAfvQAARLsAAEq7ACALPQCAWDwA+Ai+AEBMPQDgXL0AgJm8AAATPAAApbwAgFk8AMD/vABAvrwAAAC9AIAMvQCQvz0AYK69AECoPABAubwAAOA5APDbPQAARLsAAHq7AGBIvQAA97sAAMu9AMAaPQBAVr0AwNi8ACAAPQDgGD0AgKW8AACCOwAgl70AAGS7AACuOwDgUD0AACq8AEC9vABAwDwAgGA9AIA8PABgCD0AQCE9AOC6PQAgMD0AwB29AADUuwAAAD0AYBs9AADmOwAAmLwAQJ+8AECZPABgQz0AgES8AAAMPADA9LwAwGY9AECCvQDgFL0AAHQ9AEC4PADgGz0AwLk8AKAYvQBAFr0AoBu9AEByPQDwrT0AADA9ACBQPQAAe70AAMU7AIBTPAAAc70AALO7AKA3PQDQhb0AQJC9AACdvQDoB74AoCI9AIDPPACAVz0AAJY8ACA/PQBgTL0AALy6AADBuwAAx7sAAFA9AMAGPQDAS70AIBE9ACBzvQCAiLwAgKM8ACA1PQBAkr0AQGK9AGBnvQAAMD0AAJ87ACADvQCAsrwAAJU7AID+PACAEr0AwNc8AOADvQDALT0AALs8AKBgvQAAQ7wAgPc8AGAQPQCAaL0AgI88AMCLvQCgFL0AwD89ADCoPQDYB74AgPU8AKB2PQAAGrwAgGM9AAAgOgBA0LwAAAg8AMCKPQAACLoA0JW9AMDhvAAAOTwAoIs9ACB3PQAgb70AcK09AGC0vQBwjz0AQPu8AAApvADQnj0AAE67AAANPAAAyrwAANU7AIBiPACgP70AAAAAAMA9PQAAMjsAIFq9AICovABA1D0AQIE9AACLOwAwkb0AAOW8AOCXvQAAXrsAAGa8AGBwvQBAhjwAQBs9AOCQPQCAyDwAAAO8ANCAPQBAZz0AQKG8ACAqPQDQiL0AADW8AECjvABAjzwAAOc8AABQOwCAEj0AALM8AIBxPAAAzLsAAKm8AABwOgCgdT0AIG49AAAAPAAAuLoAQK48AMCIPADgWD0AYN+9AEBqvQBAiTwAgN48AFCZPQBAED0AAGK9AOB3PQAAQrsAAEm8AIBavAAA7LoAEI09AMAiPQAADz0AQKC8AOBgPQDgCL0AABW9AGAEPQAARLwA4DA9AADwPAAA6zsAAEi8AAAdvAAgpD0AAJW9AABJvACAfjwAAKa8AIAAPQCASDwAgCk8AABMPAAAZzwAoFo9AECevAAAvjwAAEu8AMAZPQAAE7wAAJq8AAC/uwBgR70AAA09ABCJvQCAI7wAgPW8AECtPABAxrwAALC5AEC8PACAfb0AYHU9AMCcvAAA97sAoBc9AGAVvQBATT0AALq7AAAougDAp70AIF89AABwOgCAgbwAgMS8AKAmPQAAp7wAQBO9AJDVvQBAJD0AgGK8AADquwDARb0AgK68AAAuvABAjbwAAK29AABiuwAAyzsAAF88AACnPQAAsjsAgBg8AIAEvQAAEjsAgDo8AKA2PQBACT0AQE09AIBTvQAANjsAAJ28AMCePAAAjLsAsM+9AICmvAAAqDsAANu7ACAWvQCAELwAkIY9AHCXvQBAjL0AQJ69AICpPACAb70AABw7AEBQPQAAGrwAUMA9AABPPACgSr0AAJi6AEAgvQAAFD0AwKy8AHCiPQBApbwAABY7AIBZvQAA5bwAQNK8AACrPAAQqb0AAAw8AIDXPAAgXb0AALM8AMCmPABgXb0AAFs8AEAnvQAAEbwAAOc8AABaPQAAVbw=","chunkHash":"ffe09155b98247411aa056efd53b7f6343a68737a31e92c3d7c58a7d5f62504d"},{"text":"File: `output.txt`\n```text\n...\n\u0000 \u0000 \u0000F\u0000i\u0000l\u0000e\u0000 \u0000\"\u0000C\u0000:\u0000\\\u0000U\u0000s\u0000e\u0000r\u0000s\u0000\\\u0000a\u0000l\u0000i\u0000m\u00009\u0000\\\u0000D\u0000o\u0000c\u0000u\u0000m\u0000e\u0000n\u0000t\u0000s\u0000\\\u0000M\u0000P\u0000I\u0000\\\u0000C\u0000h\u0000r\u0000o\u0000m\u0000a\u0000t\u0000i\u0000n\u0000\\\u0000s\u0000c\u0000r\u0000i\u0000p\u0000t\u0000s\u0000\\\u0000f\u0000i\u0000n\u0000e\u0000t\u0000u\u0000n\u0000e\u0000_\u0000v\u0000g\u0000g\u00003\u0000d\u0000.\u0000p\u0000y\u0000\"\u0000,\u0000 \u0000l\u0000i\u0000n\u0000e\u0000 \u00008\u00002\u00005\u0000,\u0000 \u0000i\u0000n\u0000 \u0000m\u0000a\u0000i\u0000n\u0000\r\u0000\n...\n```","range":{"startLineNumber":8,"startColumn":0,"endLineNumber":9,"endColumn":0},"embedding":"ACALvQBA1zwAkJw9AHCPvQAA0jsAAHC9ACA0PQAAcbwAANA6AECvPACA6zwAoBk9AOA3vQAAGDsAAMi7AMBvPQDA6zwAAPw7AIAHvADwoz0AgHM9AAAuvAAAqTsAgCe8ABCrPQCAirwA0L29AMA3vQAANT0AoDo9AADGvQCgDL0AgAo8AAD4vAAAT7wAAPQ8AMAHPQAAtjsAQMk8AIBCvQAApDoAIE29AEDDPQCwhr0AAK89AED/PACAJbwAALA8AEC7PQAATDsAAHY8AMBUPQAAAjsAgEQ9AECGvAAA5bsAQKw8AJCKPQCA0DwAcIG9AAAbPQAAGDoA4IU9AAAKvQCA67wAgPE8AACvvABgBT0A4CU9AAC8uwDAtrwAgHi8AACyuwAAzDoAwMw8AFCTvQCwkb0A4Ea9AMAsvQAAXL0AcJg9AAB7PAAALbwAoA+9AACyOwAA2zwAWCu+AABYOgAwo70A0Iy9AIBtvAAAujsAIAW9AOAEPQBAvDwAAAg7AGBuvQCAFDwA4Aq9AIAMvAAgJT0AANS8AADSPACAZTwAgAm8AGAaPQBAB70A4OC9AMAfvQAA9LoAgOi8ACAvvQBA8DwAgKI8AADOPQAANTwAICO9AOANPQAACDoAgG48AAD1uwBA7TwAAN48AECVvQAAjjwAgNC8AACwOwAA5LoAIE49AKAqvQCATLwAoF29AMCrvADADb0AAJy8AIDxPAAAUDwAwD49AAA2vQD4Dz4AgDo9AMAIPQDgBr0AANa7AAAEPAAA5DsA4G29AAAjPABAlbwA4A69AIAxPAAASz0AMLi9AECmPACAwj0A4Ma9AADSPAAAYrsAABC6AAA0OwAAdL0AADI8AABmPABgAz0AgMU8AAB6PADACT0AsJC9ACC0vQAAMjsAoHy9AADJvQAggr0AAJK7AIBFPACAKTwAYC+9AEAHvQCgoL0AQO28AIBZvQCAUTwAQLW8AICDPAAADzwAkAi+AKAXPQBASb0AoAy9AAC5PADAsLwAAKM7AEBbvQDAy7wA4Bu9AEDNvACA1z0AwMS9AMDpPAAAv7sAALu8AJgQPgAAWbwAAKq7AIANvQAApzwAUKi9ACAjPQDAZr0AAKy8AIDuPACgSj0AQFO9AACAOgBgar0AgDy8AAB2uwDgMj0AwIa8AIC+vABAgjwAQEE9AADoOgCAKD0AgDI9ABCpPQDAAj0AgNy8AABuuwBAmDwA4Ac9AAAgOgDABL0AAI68AKACPQBgCD0AAL68AAAZPADAz7wAYFo9AMBcvQAA37sAYAU9AAD5uwDgBz0AwKc8AOAUvQDgH70AwIi8AMCOPQDAoj0AgDY8AOCVPQBwoL0AALq7AADLPABgFr0AALm7AABwPQCAmb0A8KC9ABCHvQAg7b0AwAg9AAC6PAAgQz0AAA09AEAaPQBgOb0AQPu8AADDOwAAHjwAIHU9ACAgPQBAfr0AgMA8AGBivQAA/zsAAAA8AKBXPQAQtb0AYBG9ABCCvQBAUj0AwKa8AECTvABAgLwAAPc7AACxOwCAHr0AgEA8AABEvQCAST0AgAY9ACBxvQBAwrwAAKk8AMDJPACwmb0AgPo8AKBYvQBgYr0AwBY9AKB/PQAQ7r0AgDA9AHCCPQBAmrwA4Gk9AACHOwAA5rwAABA6AFCGPQCAx7wAAJC9AIAcvAAAcTwAgOo8AEA+PQCQkr0AwH09AADRvQBQhD0AAKa8AAAgugDQrj0AAFg6ACBGPQAANLwAwOs8AIAvPAAAJr0AwNG8AKAFPQDAkTwAIBu9AECBvACgvT0AYGk9AICZvAAQiL0AwMW8AFCovQAAODwAALe7ANCmvQDAgTwAgFo9AGC7PQCAfjwAgI68ANDCPQAATj0AIB+9AIAePADAAb0AAPA7AECPvAAAXzwAgGQ9AAAAuwBASz0AgKQ8AIBMvADAjLwAAAS7AADsuwCAZD0AgCE9AACiuwAAjDwAwJo8AECTPABgRT0AQM29AOB1vQAApjsAwM88AKBqPQCgED0AwE69AIBJPQCAabwAABK7AADJuwCAmbwA0Jo9AIDtPADA8TwAgDm8AKCgPQCgB70AAEO8AIBaPAAAJDsAQOE8AABqPACAUzwAAEO8AMDYvADgLT0AMI29AACBvAAALTwAgDO8AGAWPQAARzwAQAY9AADgugCAHzwAQGw9AAB0uwCArjwAAM68ACA6PQBA0rwAAJ+7AADtOwAAsbwAAKQ8AIB9vQCAy7wAoAO9AKATPQCAarwAgD88AKA7PQAAY70AwGM9AAB4vQAAZDwAICQ9AAAqvACAjz0AQNe8AACwvAAgfb0AQGE9AADAugCANLwAgI68AEBUPQAAgzsAgBG9AJC5vQAAmDsAgAW9AABovABgKL0AQMC8AIAfvACAOL0AwI+9AECTPAAA8DsAQJM8AHCHPQAAmDsAgK48AGBIvQDAtTwAgFk8AEAaPQAgIT0AAEk9AKBHvQCAHTwAADi8AIACvAAAA7wAcJi9AACCvABAsLwAAAC5AGAUvQCAOLwAIIg9AFCJvQCAgL0AoKq9AIC2PABgq70AAM+7AIAaPQBAtLwA0JU9AADNPABAVr0AABA7ACAAvQCARz0AAKS8ANCEPQCAo7wAAEY7AMD2vADABr0AwFO9AAALPACghb0AAOM8AIAMPQAgN70AQA89AIAHPADgkb0AAII7AOCIvQAAz7wAwKY8AGAnPQAAADo=","chunkHash":"571d2ff1b2ad676f1eef616726195bab024daabde9b3279f29a39e83d9c31636"},{"text":"File: `output.txt`\n```text\n...\n\u0000 \u0000 \u0000 \u0000 \u0000d\u0000a\u0000t\u0000a\u0000s\u0000e\u0000t\u0000 \u0000=\u0000 \u0000g\u0000e\u0000t\u0000_\u0000n\u0000u\u0000c\u0000l\u0000e\u0000i\u0000_\u0000d\u0000a\u0000t\u0000a\u0000l\u0000o\u0000a\u0000d\u0000e\u0000r\u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000\r\u0000\n...\n```","range":{"startLineNumber":9,"startColumn":0,"endLineNumber":11,"endColumn":0},"embedding":"AIBCvADAljwAgKM9AKCKvQAAMLwAIFy9AGBKPQDAsbwAADS8AIACPQAAVD0AoFE9AIAQvQAAtDoAAMU7AGBdPQDA8DwAgIU8AADBvAAAxj0AwHE9AECXvADA2jwAgAi8ACCGPQCAe7wA8JG9ACAWvQAgHz0AwNI8AKDfvQAAAr0AgCs8AMDxvAAAgDgAAOE7AMB1PQAACDoAQLk8AMBXvQAAxjsAII29AGCdPQBALr0A0Jw9ACACPQBA7rwAAJK7ALCzPQAA1DoAwJI8AOA8PQAAujsA4C09AAAuOwAA67wAAEs8APCqPQAA/TsA0Ii9ACAJPQAAQrsAgHw9AECnvAAAo7wAALy6AADauwCAvzwAoDs9AECKvAAAGDsAAKw6AAAeOwAAPDsAAEw7AICDvQCACL0AIBO9AMCTvAAgV70A4HM9AIAsPAAAv7sAgKW8AADcOgAA6zsASB6+AACyvAAAkb0AgDS9AMDPvAAAA7wAQK68AOAePQAAALkAgGM8AOAXvQBAhjwAAAy8AABFvAAAVT0AABO9AEDwPACAbTwAgBE8AIBSPQDAFr0AEMS9AKBDvQCAE7wAAPO7AKBKvQBgBz0AALU7AODbPQCAVzwAAAi8AIC6PADAijwAAGI8AAAdPAAAyzsAgFA8ADC8vQAA6zsAAGu8AAC8uwCATLwAQFo9AGAxvQAAqrsAYE+9AID1vABA/LwAoCK9AADMPACAArwAoC49ACAVvQDQHD4AgN48AIB8PQBgGL0AgBe8AAA8uwCAK7wAoIa9AIAHPQBArLwAIDu9AIAFvACA/jwA4Om9AIC7PAAwyj0AcNC9AADXPAAAjDoAgBk8AMCmPAAgX70AADS7AACAvADA6TwAACg8AMCIPADA4TwAYG69ACCVvQAAFTwAYCC9AMCbvQCAQL0AwN28AADhuwBAojwAoIe9AOAvvQAgrL0AYDO9AOBNvQAASLwAwNO8AMAvPQAAXzwAsPa9AIAJPQBAYb0AAMy8AOADPQAAVDsAAKc8AAA8vQBgCb0AYAy9AGAavQAA0T0AkKS9AMAGPQAAKrsAAPC6AFDYPQCAYbwAAHy8AGAPvQDAvjwAAJe9AECfPACAX70AgOS8AKAFPQCAGjwAIEu9AAC3OwCQlr0AQMS8AACvOwAAHD0AABg7AIBKvABAwzwAEIw9AADIuwAA8jwAgBU9AICrPQDA3DwAIBW9AACcOgAAwzwAwAw9AEDrPAAA8rsAgCa8AMDsPACgPT0AAGa7AIBpPACAMLwAwDY9AMBKvQCAdLwAoCk9AAChuwBACj0AAKQ8AEAKvQAANL0AwAm9ALCLPQAwiz0AgCY8ABCZPQDgXL0AgAY8AEDkPAAAXL0AAHC8ACBVPQCAY70AAKK9AODGvQBA9L0AwAI9AEDDPABgVT0A4Gc9AOA0PQAALb0AANe8AABrPAAAaLsAYCg9AEDWPADge70AQPI8AKBpvQAAgzsAAL+7AGASPQCgjr0A4Ja9AOCDvQAAQz0AAFA6AMC2vAAA+bwAAKY8AECnPACAHL0AADA9AMAvvQCgOD0AIEE9AKByvQDAFb0AIA09AIDBPADQqr0AAMC6AOAlvQAgRb0AAEY9APCgPQCABr4AAFQ8AIB9PQCAtrwAQI49AEC3PADAj7wAgAo8AIB5PQAA4LoAoJ+9AIALvQCAxzwAgDI9AICEPQCwob0AQGk9AIDHvQBglT0AwJK8AABSuwCAxD0AADS8AECcPAAAxbwAwAg9AIAvPAAgSL0AQJG8ACBjPQAArzsAQEK9AMCIvACwyD0AYFI9AAC8ugCQlb0AQIG8AOClvQAAw7sAAHE8AHCKvQBAyTwAoFs9ACCzPQAAljwAgAW8AKCRPQDgcz0AAKS8AMDWPADgSL0AABO8AACEugCApzwAAOo8AABEOwAgYz0AIA09AADXuwAAYDkAgPa8AIBgvACgmz0A4GE9AAAoOgBApTwAANY8AECePAAAFT0AMMa9APCgvQCAMzwAwCw9ANCBPQCA9TwAIHy9AOBqPQAAnjsAgFW8AIAwvAAAmLwA4Lc9AOAPPQDAwzwAgLq8AMBmPQAA5LwAgOG8ACALPQAAvDoAwDU9AABYOgAAHbwAABa8AABKuwDgRT0A8Ji9AIAsvACADLwAgDW8AIDzPACAWbwAwKs8AAA4ugAA17sAQI09AIABPAAAqjwAoBu9AMDXPAAAM7wAQJC8AIAyvACAQr0AgGA9AGCDvQAA/LwAoD29AMCgPADAIb0AAJQ7AIC6PABgab0AkIQ9AMAFvQCAgrwAwAw9AADEvAAAPD0AAOO7AACTOwCAp70AQJk9AACwOwAAhbsAgFW8ACAzPQDA6LwAwMi8ABC1vQBAtTwAAHa8AABgvAAA5LwAAPi8AAAougCAHr0AAIu9AACIOwAAoLoAgL08AHCwPQCAjjwAgB48AABBvQAAvTwAgA08AMDAPABgLj0AYGE9AGBVvQCARzwAwL28AADwuwAAgLkA0KC9AADWuwCAArwAgEW8AEAyvQAAQLoAkJE9ACCevQBAdr0AII29AEC/PADAi70AANO7ACBGPQAACDwA8KM9AAAcPAAAX70AgA48AIA7vQBgIT0AgCW8ADDSPQCAnbwAgCu8AMCrvACASL0AwAm9AMCHPADAn70AAKI8AIDIPACAZb0AQP88AMDzPADAir0AANi6AMD9vAAAYbwAQNA8ACALPQAAkLw=","chunkHash":"15394d80678a112f30374e1ac675122b0d97849089535171ca642c2edb7fa649"},{"text":"File: `output.txt`\n```text\n...\n\u0000 \u0000 \u0000F\u0000i\u0000l\u0000e\u0000 \u0000\"\u0000C\u0000:\u0000\\\u0000U\u0000s\u0000e\u0000r\u0000s\u0000\\\u0000a\u0000l\u0000i\u0000m\u00009\u0000\\\u0000D\u0000o\u0000c\u0000u\u0000m\u0000e\u0000n\u0000t\u0000s\u0000\\\u0000M\u0000P\u0000I\u0000\\\u0000C\u0000h\u0000r\u0000o\u0000m\u0000a\u0000t\u0000i\u0000n\u0000\\\u0000d\u0000a\u0000t\u0000a\u0000l\u0000o\u0000a\u0000d\u0000e\u0000r\u0000\\\u0000n\u0000u\u0000c\u0000l\u0000e\u0000i\u0000_\u0000d\u0000a\u0000t\u0000a\u0000l\u0000o\u0000a\u0000d\u0000e\u0000r\u0000.\u0000p\u0000y\u0000\"\u0000,\u0000 \u0000l\u0000i\u0000n\u0000e\u0000 \u00005\u00002\u00009\u0000,\u0000 \u0000i\u0000n\u0000 \u0000\r\u0000\n\u0000g\u0000e\u0000t\u0000_\u0000n\u0000u\u0000c\u0000l\u0000e\u0000i\u0000_\u0000d\u0000a\u0000t\u0000a\u0000l\u0000o\u0000a\u0000d\u0000e\u0000r\u0000\r\u0000\n...\n```","range":{"startLineNumber":11,"startColumn":0,"endLineNumber":13,"endColumn":0},"embedding":"AOASvQDAmjwAoIg9AHCJvQAALTwAgFS9AIA2PQAAQbwAACi7AADaPAAAvjwAAAU9AGAsvQAAtDoAAEK7AMBVPQCA9DwAAMI7AIBvvADwsj0AoFg9AAAyvACAODwAAGe8ALCiPQAAfbwAwKy9AAAyvQAgIz0AwEQ9ABDUvQBAE70AABU8AGARvQAAd7wAAKE8AGAhPQAALDsAwMU8AABsvQAA2TsAAFy9ACC9PQCAcr0AUK09AIAMPQCALrwAAHA8AADMPQAABjsAgCI8ACBwPQAACzwAIEs9AACEvABAh7wAQJE8AKCYPQBAqzwAUIi9AOArPQAAHDwAAIg9AEDzvACA87wAQIo8AAB7vACA9TwAoCA9AABkuwAA0LsAQI68AACWuwAAqDoAQOI8AOCNvQCAkL0AAD69AKAPvQBgW70AkIc9AMCWPACABbwA4AK9AAB0OwDAxzwAUCO+AAAougCQk70AYH69AMCRvAAAYDkAQAG9AMDxPADAgDwAAFE8AHCCvQDAlTwAANK8AIBJvAAADD0AAPe8AICoPACADzwAAMG7AED2PADABb0A8NG9AIA2vQAAbLsAgPC8AIAqvQBgGD0AwIg8ANDjPQDAgDwAQO28AMAQPQAAADkAwLA8AAAEuwBAljwAQME8AGCfvQAAZDwAgL28AIAnPAAAFLwAgGI9AOAfvQAAHLwAgE29AMD4vADAGL0AAM+8AAAGPQAAFzwAQCE9AGAsvQDYBz4AgDo9AIAdPQBA+rwAAI27AAAEuwAApzsAAHq9AMCaPABAkLwAwBq9AIAZPADAHT0AwMe9AICLPADwtD0AIMe9AEDdPAAAlrsAAD67AAB4OgDgZr0AADk8AABUOwBA9jwAwME8AECtPABAEj0AUIO9AKCqvQAAmzsAAIG9AHCqvQCAcb0AgHK8AAAwugCABDwAoEW9AKAivQCQpL0AABi9ACBXvQAAADsAgMK8AACiPAAANDwAkAu+AOATPQBAY70AQCC9AEDiPACAGbwAAAk8AKB7vQDA7LwAgBm9AAC/vABg5T0A0LK9AEDiPAAAALsAwK68AAgSPgAAB7wAAKG7AED2vAAA/zwA4KK9AKADPQAgZL0AgJu8AMDuPABAKz0AAFC9AADwOwAQgr0AAI28AABUuwAAMT0AgD+8AIDYvAAAcTwAIEo9AAChOwAAGT0AgBw9ADCtPQBgEj0AwOW8AAC5uwCA2DwAwA89AIAoPABAs7wAQJW8AOAXPQAgJz0AgHG8AADUOwBAw7wAAFk9AMBzvQBAmrwAQP88AIBnvACAzTwAAG88AIAavQBgK70AwLK8AGCEPQCAnz0AAHM8AJCkPQAQqb0AAOu7AECxPABACL0AABy8ACBuPQCwjL0AIK69AFCRvQDw9r0AIBM9AADNPADAOz0AwNo8AED4PADgO70AgL28AAB2OwAAMDsAkIE9AMAhPQAgb70AgKo8AIBZvQCAPzwAgCk8AOAxPQBgpL0A4AW9AOB8vQCAUj0AgD68AMCSvACAVrwAAOS6AACFPACgK70AgJc8AGA6vQDARj0AgOg8AECIvQAA6LwAAK48AMDoPACgnL0AQK08AMBOvQAgVb0AwAY9AECAPQAg970AwAA9AMCLPQBA0rwAIH09AADrOwCAsLwAAIM7ACB/PQCAl7wAMJy9AACRvADAwTwAYBU9AGBWPQBwor0AQGs9ABDKvQCgez0AQLq8AAA6uwCgwD0AAIA5AOA7PQBAkrwAQPg8AECAPADgOL0AwNe8ACARPQBA0DwAYBe9AIBovACAwD0AgHM9AIBJvAAQj70AAI28AIC0vQAAqjsAAL+7AKCtvQDA1jwAYFc9AMCsPQCAdjwAgGK8AIDFPQAgNT0AoAe9AABBPABA8LwAAJc7AIBXvAAA6jwAgFA9AACtuwCARj0AgK88AAAYvAAAQ7wAAOi7AAB8uwBATT0AwEI9AACAuQBAlzwAQIg8AMCUPABANT0AQMu9ANCCvQAA3zsAwLc8AEBgPQDgGz0AAHq9AABzPQBAhrwAgDa8AACguQBAvbwA8JU9AIARPQAABj0AAH28AICRPQAA+7wAgGW8AIB2PAAAQrsA4Ac9AABDPAAAnDsAgD+8AACrvACgMT0AQJK9AAAPvAAAPzwAgGm8ACAFPQAA0DoAAOI8AAAsuwAAHzwAoII9AABuOwBAnjwA4AO9AMAyPQAAnbwAAIe8AAD+OwCA07wAQNE8AKCCvQCA+7wAAPG8AIArPQDAsbwAgFc8AEA4PQDgS70A4EY9AABVvQCAKDwA4D09AIB2vABwjj0AgKe8AAAmvADAm70A4IE9AACsugCAP7wAgGS8AKBKPQAA07sAoDS9AFDHvQAANTwAwOG8AIBXvAAgJb0AAL+8AIAOvACALr0AQJG9AMCVPAAAcDsAwIg8AACOPQAAeLoAgDM8ACA7vQBAwDwAAII8AGAQPQDgTD0AgGc9AMA2vQCALzwAAK+8AIBvvAAA1rsAkKK9AIA9vADAkbwAAIg7AIAqvQAAVLwA4Ic9AICfvQCAhb0AsKK9AACfPABQo70AAIO7AMAYPQAATLwAYG09AIBQPABgZb0AANs7AGAGvQAAIj0AQJu8AKClPQDApLwAANy7AEDfvAAA7bwAADS9AICdPACge70AAK08ACAIPQBgN70AQCU9AICePABwnr0AAHi6AMB6vQDAx7wAQK08AAAZPQAAAAA=","chunkHash":"c57a7090721b7c498a53cbdb2fa9a63e6c7ec7ee1f26833240c58146f9703dbe"},{"text":"File: `output.txt`\n```text\n...\n\u0000 \u0000 \u0000 \u0000 \u0000d\u0000a\u0000t\u0000a\u0000l\u0000o\u0000a\u0000d\u0000e\u0000r\u0000 \u0000=\u0000 \u0000D\u0000a\u0000t\u0000a\u0000L\u0000o\u0000a\u0000d\u0000e\u0000r\u0000(\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000\r\u0000\n...\n```","range":{"startLineNumber":13,"startColumn":0,"endLineNumber":15,"endColumn":0},"embedding":"AIBJPAAA8zsAcJM9AFCRvQAAWrwAwCG9AKA9PQBAwrwAwOu8AIDfPAAgSz0AoE49AIACvQAAmLsAgCc8AKB1PQAgOD0AgI88AADtvADA3D0AgFs9AGAdvQBAzjwAQKu8AOBiPQCAqrwAwKi9AKAavQCgJD0AQNw8AKDZvQAAEr0AALw6AMD1vAAAoDkAACg8AOBGPQAAzTsAAOU8AOCHvQAAVjwAgIO9AFCWPQDA27wA4Jw9AEAGPQCAIbwAAAe8AFCsPQAAYLsAQLw8AIBFPQAABjwAgEU9AACQOgAAqrwAgBw8ABCxPQCArzwA4Fm9AED+PAAA3TsAwIE9AMD7vACAAr0AADw8AADvvABA7DwAUIg9AAAuOwAAkbsAAPQ6AAD5OwAAGDoAgDc8ALCXvQCA9bwAYEq9AMCovADgdb0A4Ho9AMCCPAAAoDkAwKe8AICiPAAAibsACCG+AAA9vACgcL0AoEW9AABhvADA1rwAAHe8AADQPAAAvDoAAPQ7AEAjvQAALjwAgL68AICAvAAgIT0A4Fi9AEDSPAAArDsAAJG7AMBYPQDA17wAMMG9AKAqvQAAJbwAAOC7AOBXvQCADT0AANA6AMDhPQAA8zsAgA68AEDJPACA/TwAAAg6AACROwAA8jsAADI7AHCIvQCAIDwAAMO7AIAlPACA4bwAYFI9AIBdvQAAmLsAwDy9AMATvQDA+7wAwDi9AMCZPACAUrwAQPg8AADMvACoGj4AQP08AABZPQDAE70AACy7AACkOwAAZLwAkJW9AMCGPAAA8bwA4Dy9AACvOwCAtTwAUMW9AEBIPQDA1T0AcNe9AMDaPACAYLwAAKg7AMCFPACQg70AAGK7AMCavAAAuzwAADA8AACkPACgED0AQEi9AJCDvQCAVDwA4BO9AKBhvQCgaL0AQB69AACivAAAAz0AQIC9AIAbvQBwjr0AYHq9AIA3vQCAWbwAAM68AKBVPQAA5DoA4Pu9AOAUPQDgVr0AAB28AOAYPQAA/jsAALE8AAADvQAgML0AgP+8AAAEvQDgzD0AwIm9AACHPAAAVLsAAKw7AODYPQCAG7wAQPm8AAA4vQBA0DwAMKW9AADRPABga70AQCi9AMAkPQAAZjsAABu9AIAJPADghb0AwN68AAAzPAAgCT0AgGM8AADnvAAArzwAEJA9AADJuwAgFj0AIBk9AJCgPQBA/zwAYBK9AADgOgCABT0AwLw8AMD1PAAAJLsAwJ+8AKBFPQCAQz0AAM28AAB2OwAA+rsAQOQ8AMBkvQAArbwAQD89AADMuwCAFT0AAIo8AICUvACANL0AgBm9AOB9PQDApD0AAI87ACCAPQCAdL0AAH47AEAcPQDgfr0AALW8AADpPADgZr0AsKu9AICyvQBw+70AgEE9AEDQPABgUT0A4Eo9AOAvPQDAT70AQI68AACQuQAArDoAADM9ACAwPQCghb0AQI08AABlvQAAVrsAAHQ7AIBNPQAAfb0AgGK9AEB0vQAgDz0AgC88AIDSvAAAmLwAALM7AEDdPABAkrwA4BM9AOBIvQCAMT0A4C89AICKvQDgDr0A4Ek9AABUPADQor0AABS8AOAuvQAA/rwAgDo9AJCLPQAg/70AQJM8AOBDPQDAvLwAwKE9AIBUPAAAVbwAAMI7ABCdPQCAGDwAIKS9AGAmvQBA+TwA4EA9AGB+PQCArb0AoCw9AFDMvQCAiz0AgPO8AAD1uwAAnD0AgHS8AAD9OwCAIb0AwAg9AADjOwCgKL0AAFC7AMBFPQAAdDsAYCe9AAB/vACQ2D0AgDo9AABqPACArb0AgH+8ANCuvQAAH7wAAOm7ABCIvQAAmTwAwAE9ABCdPQAAQjwAAKC7ANCOPQAgYj0AwN+8AEC1PAAAO70AAHK8AACmvABAkzwAgM48AACcuwAgOT0AwKQ8AACcuwAAhTsAgI+8AECDvABgez0AUJE9AIBBPABAAT0AwOU8AMChPACAMD0AEMG9APCFvQDAjDwAoEE9ACCHPQAgRj0AsIa9AEBXPQAAXzwAAFa8AAB0vADAjbwA8KI9AEA3PQDA5DwAwLS8AKBmPQAAc7wAgN+8ACAyPQAAc7wAoDI9AAAKPAAA1TsAALa7AADluwCAcT0A8K69AABKvAAAsLoAACi8AIDoPAAAsLoAgHQ8AAD8OwAArzsAwIc9AACYOwDAoTwAQAW9AIAEPQAAQDoAgHO8AADouwCAZL0AwFU9AKBtvQAAm7wAIBe9AMC5PADgNb0AgI08AAC7PAAgQ70AwHU9AIDAvACAWrwAIA09AOAYvQDAQz0AALK7AABsuwAwwb0AUIM9AACdOwCApLwAAHa7AOAqPQAgDL0AgPG8ACC7vQAgAz0AAIC7AADduwAAN70AYAW9AABiuwBgGr0AIJG9AAANPAAA1LoAACQ8AHCjPQAAFjsAAOw6AKAyvQCA1TwAAGC7AADqPABgLT0AoHQ9AOB2vQDAgzwAACG9AAAwvAAA0LkAQKO9AADeuwAAQLkAAHO8AIAyvQAAj7sAkJc9AOC0vQBAi70AkKu9AIC3PABgdb0AABC7AOBTPQAASDsAQLs9AAC4uwAgbb0AAKi6ACAhvQAA+jwAAKS8AEC+PQDAnLwAgHy8AIDCvAAgJb0AgNe8AGAdPQAAqL0AgAs9AAByPABQgr0AICc9AEC6PADAT70AAFg6AKAWvQCAA7wAwN88AAAnPQAAsrw=","chunkHash":"de80e0661457669a2b0129fd07771cb71deaa5460b97327f79f537ac274d3676"},{"text":"File: `output.txt`\n```text\n...\n\u0000 \u0000 \u0000F\u0000i\u0000l\u0000e\u0000 \u0000\"\u0000C\u0000:\u0000\\\u0000U\u0000s\u0000e\u0000r\u0000s\u0000\\\u0000a\u0000l\u0000i\u0000m\u00009\u0000\\\u0000A\u0000p\u0000p\u0000D\u0000a\u0000t\u0000a\u0000\\\u0000R\u0000o\u0000a\u0000m\u0000i\u0000n\u0000g\u0000\\\u0000P\u0000y\u0000t\u0000h\u0000o\u0000n\u0000\\\u0000P\u0000y\u0000t\u0000h\u0000o\u0000n\u00003\u00001\u00002\u0000\\\u0000s\u0000i\u0000t\u0000e\u0000-\u0000p\u0000a\u0000c\u0000k\u0000a\u0000g\u0000e\u0000s\u0000\\\u0000t\u0000o\u0000r\u0000c\u0000h\u0000\\\u0000u\u0000t\u0000i\u0000l\u0000s\u0000\\\u0000d\u0000a\u0000t\u0000a\u0000\\\u0000d\u0000a\u0000t\u0000a\u0000l\u0000o\u0000a\u0000d\u0000e\u0000r\u0000.\u0000p\u0000y\u0000\"\u0000,\u0000 \u0000\r\u0000\n...\n```","range":{"startLineNumber":15,"startColumn":0,"endLineNumber":16,"endColumn":0},"embedding":"AADTvACARDwAkKA9AECHvQAAjLoA8IO9AEAPPQCAO7wAABi6AMD/PADAEz0AgP08AAAKvQCAQ7wAAAg7AMBTPQDgDj0AgDI8AIAhvABQvj0AACk9ACALvQAAKDwAgHa8ANCQPQCAa7wAoKe9AGAgvQCAGD0AwPE8APDovQCgD70AgDA8AOBAvQAA9LoAQM08AKBOPQAArzsAAMI8AMBHvQAAMjwAgGy9AECxPQBASr0A8LA9AEBbPQCAbLwAAC88AFC7PQAAoLsAAEw8ACCCPQAAOrsA4Fs9AACEvAAASrsAAAc8AOBwPQAAtzwAIIC9AGAyPQBAzzwAQGY9ACAFvQCACr0AAMk8AICOvACA2DwA4Ck9AACUOwAAFLsAgAS8AADuuwAAwTsAgAg8AGCovQDgZr0AgAq9AGAFvQAAQ70AUIQ9AADaPAAAJLwAoBG9AACwOQCA5DwAKCq+AAC9uwAQi70AoGG9AIBFvAAA6LoAgNi8AIDyPAAATzwAQJc8AOB4vQDAwDwAgPC8AIBqvABANz0AQD69AAAMPQAA3jsAAK87AAAkPQBgOL0A4LW9AIA3vQCAb7wAQAO9ACBQvQCA4TwAANc7ANDaPQAALDwAgOa8ACAHPQDAtzwAAGQ8AABeuwAAuzwAgCM8AABwvQAAXzwAAHe8AIA+PAAAlrsAgHM9AMBKvQCAFbwAQEG9AMD6vADAAb0AwMq8AMDsPAAANrsA4Ds9AKAJvQBgBT4AgDs9AEA3PQDgN70AAJy6AABgOwAASLsAsIS9AMCdPADA47wAAOK8AAD3OwBARz0AENS9AMCwPABg0T0AEL29AED8PAAAOrsAgEG8AAA2OwAwnL0AAHg8AAD0ugCA/zwAQKA8AABwPADAHz0AAH69AFC1vQAADjwA8Iy9AFC5vQDger0AAPa7AABIuwCAqTwAwDW9AACqvACQk70AYEK9AAA1vQAAJDsAAMy8AADQPABAmTwAYAu+AGA1PQCgXb0AQCK9AMDwPAAAvLsAADY8AEBtvQAAI70AIDO9AGAXvQDAyj0AwLC9AAC2PAAAfDsAwIe8AFgAPgCAyrwAAOO7AOApvQBAzzwAsI29AKAbPQAgWr0AAMy8AADHPACA0zwAwD69AIBqPABAW70AgIS8AAByOwAgNj0AAMm7AMClvAAAELoAAGg9AABIOwBgLz0AgAg9ADCcPQBgCz0AANO8AACQugAAwjwAABg9AABSPADAq7wAwIG8AAAnPQBALj0AAI+8AAD0ugDA0rwAIF49AIBrvQCA8LwAQBg9AABmvACAszwAAAi7AAAWvQDgTr0AgPO8AABrPQBwpj0AAJQ7ACCFPQDwkL0AACi6AACwPADADb0AwN28AKBlPQAgb70AcL69AOBvvQAg770AgBs9AICtPACgTT0AADg9AOAbPQCAV70AwKK8AACSuwDAozwAoHE9AAAnPQDgRr0AwA09AMBPvQAAaLsAANA6AEACPQAwkL0AICq9AOByvQAgJD0AAP+7AMCKvAAABbwAAOC7AACZPABABb0AgK48AEBjvQDgJT0AYA49AKBuvQBAlbwAAMA8AIDdPABgl70AAOI7AABTvQDAaL0AgBg9ALCUPQAA870AwMY8AGCCPQAArrwAYHg9AACauwCAv7wAAFg7AACIPQAAibwA8KK9AIDbvADgID0AAO48AEBaPQDAuL0AgFY9AJDPvQAAkT0AAMW8AIALvACwoz0AAAw8AAA+PQCAc7wAYBI9AIB4PACADr0AANq8AIATPQCA9jwAAOu8AADkuwDAwT0A8I89AICsvABAsb0AQLK8AIC2vQAA8DkAALm7AOB6vQAAaTwAYEk9AECvPQCAfzwAgGS8ANDIPQCAYz0AgN68AIBjPACAKr0AAFw7AIBWvADA2zwAgEo9AIAWPADAZj0AAI48AECXvADAgLwAAMO7AIASvACgKD0AYGA9AADoOgCAoTwAgG48AMCVPABAKz0AQNG9ACB/vQAA0jsAwNo8AIBIPQBAPD0AUIS9AEBnPQCAgrwAAD67AAAFvACAx7wAoJw9AEA7PQDA6zwAAHu8ADCUPQAA4LwAAAe9AACuPAAAuzsAwN88AAAkOwAAqDsAgFO8AIBrvABgHz0AgIq9AABXvAAA4DoAAC68AOANPQAAwjsAwP08AAAGPAAAPDsAQHA9AACDuwBAmTwAoAi9AEAoPQBAwrwAACY7AAA4ugBAGL0AQM48AFCHvQDAw7wAoEW9AMC+PADAvbwAAKg8AIA5PQCAbr0AwGY9AMA5vQAAkDwAQEs9AIBivABAbz0AwLa8AMCFvACQkb0AwGY9AAB8OwAAersAAPm7AEAhPQAAQrwAQP68AHDKvQAA4TsAAIe8AICWvADAOr0AALu8AAAfvACAIL0AAJu9AMCBPAAAFTwAQJw8AKB+PQAAFLsAQN08AOAtvQAA/zwAgC08AGAHPQDANj0AoFE9AIBZvQAAkTwAgHq8AECwvAAAvLoAALW9AIA+vAAADLwAAMA4AOAevQAARLwAkIA9AECjvQAgmL0AII+9AIAEPADQmL0AAE67AMA5PQAAgLwAgII9AAAUuwAAXr0AAFQ7ACAIvQAgDj0AQI28ACDDPQCAobwAADS8AEDsvADgLr0AABe9AIDsPAAwpb0AwPs8AMAJPQAgNr0AoDw9AADcPAAgkr0AAAy7ACB3vQBgBL0AQJw8AMAhPQAA3bs=","chunkHash":"2dd9a1aa851f4e9abecb6dc86f33753cb42efe3713ce845dea4e4fa753741cba"},{"text":"File: `output.txt`\n```text\n...\n\u0000l\u0000i\u0000n\u0000e\u0000 \u00003\u00008\u00005\u0000,\u0000 \u0000i\u0000n\u0000 \u0000_\u0000_\u0000i\u0000n\u0000i\u0000t\u0000_\u0000_\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000r\u0000 \u0000=\u0000 \u0000R\u0000a\u0000n\u0000d\u0000o\u0000m\u0000S\u0000a\u0000m\u0000p\u0000l\u0000e\u0000r\u0000(\u0000d\u0000a\u0000t\u0000a\u0000s\u0000e\u0000t\u0000,\u0000 \u0000g\u0000e\u0000n\u0000e\u0000r\u0000a\u0000t\u0000o\u0000r\u0000=\u0000g\u0000e\u0000n\u0000e\u0000r\u0000a\u0000t\u0000o\u0000r\u0000)\u0000 \u0000 \u0000#\u0000 \u0000t\u0000y\u0000p\u0000e\u0000:\u0000 \u0000i\u0000g\u0000n\u0000o\u0000r\u0000e\u0000[\u0000a\u0000r\u0000g\u0000-\u0000t\u0000y\u0000p\u0000e\u0000]\u0000\r\u0000\n...\n```","range":{"startLineNumber":16,"startColumn":0,"endLineNumber":18,"endColumn":0},"embedding":"AIDQvAAAxDwAYIA9ADCgvQAAtjsAwJ69AHCIPQAAp7wAABq8AMDqPAAAOj0AYCk9ACAOvQAAUDoAAIC4AOA5PQBAzjwAQMI8AECcvACQzT0AEIY9AIAJvACAcjwAgCi8AOByPQBAgrwAwIi9AMAlvQBA5zwAgMY8AGDKvQDgJb0AALE8AMAWvQAAsLoAgEA8AOA9PQDAsrwAADo7AOBGvQAAQrsAYHq9AOCWPQCAHr0AkKg9AIAHPQDAi7wAAM+7AIDRPQAA4DkAAII7AEBpPQAAQ7wAQF49AAAMOwAAwrsAgAU8ANCVPQAAcDwAEJ+9AID4PAAA5jsAcIg9AMCdvABgIb0AgJc8AAAivABgCz0AQDs9AMCJvACAKTwAAKW7AIBWvAAAvjsAwLK8AFCFvQDAXb0AQCS9AMAUvQAwk70AYIs9AIAhPAAAx7sAgMS8AIDJvACArzwAECa+AICvvABgeb0AQAq9AMDbvAAAHLsAQAi9AKA+PQAAmzwAAHW8AIBmvQAAzTwAQIy8AADsuwBgaj0AgC29AMDqPADAnDwAALY7AKBfPQDAjrwAQNK9AEBqvQDAhLwAgCO8AAAovQBgND0AQI68AODlPQBADz0AwCa9AEDYPAAAlzwAgBE8AECMPACAVTwAAAE8ADCfvQAAHDwAQNq8AIBZPAAAsbwAwGc9AIDlvACAGLwAIHu9AACbvADA8bwAYDe9AEDQPAAABrsAgCA9AAANvQAIEj4AwDQ9AKB/PQBAIb0AgBC8AAAqPAAAv7sAYJS9AABAPAAgBb0AoBu9AABYvABgTD0A8NC9AMD1PACw0T0AwMm9AEDmPAAAfDsAAMg7AMC5PAAgfb0AANC6AIBGPACgBT0AAOM7AAAKPQCAHj0AgHm9ADCVvQAAGzwAwB69AJCUvQDAbr0AQMe8AAAvPABAyzwAYBO9AMBGvQDgeb0AYDG9AEBlvQAABLwAgOa8AKASPQDAkDwA+Am+AMDnPACgYb0AgP+8AGAEPQAAUDoAwKE8AKAxvQCA5LwAQCG9ACBBvQDwxT0A0LS9AMD4PAAAEbwAAFC7AAD4PQCAcbwAAMi7AOArvQAA3zwAQKK9AIBPPABANb0AwNC8AGAuPQCAEDwA4BC9AIAcvADgor0AgH28AAA6vABANj0AADq8AIAYvAAAqTsAIFE9AADNuwDADj0AYDI9AKC3PQAgOz0AAAG9AABYOwDAijwAIBc9AEChPAAA8rsAQLW8AEBUPQCgUD0AgOy8AADYOgDAgbwAIG89AKBjvQAAGrsAIAY9AADiOwBA1DwAgAI8ACACvQCgHb0AQBW9AMBoPQBAkz0AgG48AJCWPQBAf70AAGS8AGAoPQBAJL0AAHW8AEA2PQDAd70AgJ+9AMCRvQCQ970AwAY9AECqPACgXT0AYFU9AABlPQDgKb0AgNi8AAAbPAAAmbsAwEU9AACNPABgVr0AgLU8AOA7vQAAFjsAAJA5ACAUPQDgj70AgHC9AKB8vQBgKz0AAPe7AIA7vACAG7wAwJs8AICNPACgM70AgJ48AGA5vQBAVD0AwCs9AMBuvQDAS70AgP88AMCjPADwrb0AACA7AOA6vQCgOb0A4Ew9ADCPPQDoCb4AoA49AMBGPQBgG70AYII9AACjuwDAm7wAAHg8AMBrPQDAl7wAAIK9AIC6vAAACj0AgMc8AOBSPQAQrb0AwHk9AODOvQAgij0AwLq8AAAWOwCwsz0AgAI8ACALPQBAh7wAICc9AECEPABALL0AQLq8ACASPQAA8DsAwC+9AIBPvABgvj0AAEw9AACHOwAQmb0AgIO8ABCOvQAA5LsAAFq7ACCBvQBAijwAYDQ9AOC8PQAA9jsAAFa8ANC6PQAgdT0AACq9AECSPAAgOb0AALI7AADcuwCgAz0AQEE9AADouwAgSD0AgNk8AAC3vABAz7wAwIm8AABXvADAdT0AsI89AAB0uwDgFj0AwLQ8AECtPABgOD0AkMG9AFCOvQAAbDwAIEc9AKCJPQAgKj0AEIi9AFCXPQAAALgAAAa8AADpvAAAOLwA0JE9AMAMPQDA3jwAADq8AGBzPQDgDr0AAOa8AAB6PAAAyTsAgMI8AADMuwCAKbwAgH28AAAcOwBgDT0AAIe9AAC0vAAA9LsAgKa8AEDbPAAAErsAQLo8AAC2OwCADrwAYGc9AADwOQCA2DwAQB69AMDLPAAAorwAAJg6AABAuQCA9bwA4CI9AKBZvQAA8bwA4De9AAAoPADAh7wAwKw8AEDDPACgTr0AAB49AEDDvAAA1jsAwB49AMDTvACgUj0AgEe8AADEOwCgn70AII49AIAvPAAAvLoAADe8AMASPQCAObwAwNG8AHCpvQAAATwAwAe9AABRvABgFr0AwOu8AABqvADAJb0A4JO9AIAWPAAA7DsAANo8AMCOPQCAdDwAAIo8AOA4vQBArzwAAOQ6AKAMPQBAQj0AQEQ9AIB0vQAAWrwAgOq8AAC5uwAAYjsAwMO9AMCTvABAzbwAAKC6ACAavQAAYjsAwHI9ANCavQBwjr0AMIm9AICPPACAgr0AAKK7AOA4PQAAVDsAIJQ9AAAcuwAAR70AgAq8AIAqvQAAXj0AAPq7AEC/PQBAlbwAAOK7AMCuvABAHL0AYDq9AADLPABAeL0AgLE8AAAePQBgRL0AQCY9AICaPAAgrr0AAEy7ACAivQAAVLwAgPk8AEAKPQAAJbw=","chunkHash":"de256f9cc9037ee19953f244b3373f55d19db717577d77127d46d15308a4d527"},{"text":"File: `output.txt`\n```text\n...\n\u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000 \u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000^\u0000\r\u0000\n...\n```","range":{"startLineNumber":18,"startColumn":0,"endLineNumber":19,"endColumn":0},"embedding":"AMCSPABA5DwAYJQ9ABCEvQCAzrwAYEC9AOAuPQAA0rwAYA69AIBxPAAgQz0AMIc9AKA7vQAA0TsAAB08AGBoPQBAKz0AwPo8AMDsvAAwuz0A4C49AKAOvQCAUDwAgKS8ACAhPQAA/LoAYKy9AADDvACAED0AQNA8ADC9vQDAt7wAANy7AID8vABAjbwAAJi7AOA2PQCAKjwAAOg8AKBpvQBA1zwAoGq9AGBhPQAAabwAgIw9AGAVPQCAc7wAABm8ALCbPQAAozsAgKQ8AKAdPQCApzwAgD49AMDSPADA2rwAAKI7AKDHPQCAGzwAYGK9AGBMPQAA3LoAMIA9AMDDvAAAcjsAAEQ7AACzuwAAjzwA0Iw9AAB0OwAA0bsAgIW8AIAbvAAAFTwAgLo8AABJvQBAjbwAQIW9AECHvABAg70AAFI9AIBkPAAAWDwAAPm8AIBwPAAA9TsAgAm+AAAYvAAwkL0AQPS8AIBbvACAA7wAAOS8AMC4PACAXrwAAAi7AIA4vQCAVTwAAJA6AAC8uwAgND0AQAi9AIDYPAAAJDwAgFc8ACCGPQCAwrwAYNm9AABRvQAAWDoAACY7AFCKvQBAnDwAwIw8ALC+PQCARbwAgF88AEC9PADACD0AAEs8AABvPAAAgLsAAGO8AHCLvQAAl7sAAFK7AACsPACgML0AQEo9AGBsvQAAWbwAIAa9AMAovQDA9bwAQFu9AAC1OwAAgDgAAD89AEDrvADYDz4AAJM8AEAgPQDABb0AwNa8AABpPABAmbwAgI+9AADJuwAAMr0AIFm9AACcOwCAzDwAgP69AIBsPQCgsz0A4Lm9AMATPQAASjsAAP07AAAAuQDAXL0AAD67ACAbvQAAQjwAgEQ8AMDfPAAAlDwAgGS9AEBUvQAAg7sAwOG8AABnvQAAW70AoE+9AECQvADANT0AoJC9AKBFvQAAwr0AgCG9AMDrvAAAKLsAwKC8ADCJPQAARTwAoOK9AMAwPQBAVL0AQKW8AGA0PQAA6TsAgE48AAC9vABA3bwAgA28AMD3vACw2T0AAKG9AAD0OgAAUrsAAM+7ABABPgAA+DoAADO8AKA1vQCAozwAoLW9AIDYPADgXL0AgCy9AAAmPQAABTwAAK+8AAB+PADAi70A4Eq9AIC1PABAXj0AAMQ6AEDfvAAALD0AYHQ9AACAuwCAJz0AAEQ9AHCoPQCA5zwAgPW8AAC+PACAnTwAgKQ8AID/PACATbwAAAi8AICyPABASj0AwJm8AMCmPAAAW7wAwPk8AIB7vQCgC70AgHc9AIATPABASj0AAGI8AGANvQCAbL0AwCK9AACGPQAgUj0AABg8AGAlPQAgNL0AALY7AABxPACQhb0AAOK7AMAVPQCAcr0AoLi9ABC7vQAoC74AgLk8AIBhPADghD0AoFU9AACDPADAEL0AQI+8AACdOwAAjjsAUIQ9AIBEPQBAW70AgAw9AFCPvQAAhDoAAJa8AEDhPACAW70AcIa9AIBXvQCgQD0AgHA8AIDfvAAAFLwAgAc9AIAlPQBA37wAgDo9AEAPvQBAUz0AgCk9AGB3vQDgF70AoEE9AEATPQAAiL0AgFS8AMADvQDACL0A4H89AGCRPQCw7b0AADi6AIASPQCApbwAgHI9AAB5PADA9bwAAKW8ALCjPQAA7DsAQIW9AIBIvQCA8DwAIF09AGBSPQCAn70AQHA9ADCuvQDwhD0AgA+9AAC0ugDQhj0AAGu8AAA8OwCA9bwAwOs8AIACPQDgDb0AALi6AGCIPQCAYbwAYEW9AECdvACg5T0AYC49AACzOwCwjL0AAKe8ACCovQAAnLwAAO27AGCnvQDAjzwAQDk9ABC0PQAA1bsAgBY8AGB1PQCgbz0AADm8AKA9PQDgQL0AgF+8AIAovAAA4TsAgHc8AMDmvAAAKD0AIAU9AACquwAAnTwAgOu8AAAcvABwnD0AgEk9AIAUPQCA6zwAgOo8AIB6PAAA+TwAsM29ADCYvQAAlDsAoDU9AGBwPQDANz0AgGi9AEAXPQCAITwAgBC8AAB5vACAQrwA0KU9ACBxPQAAizwAAAi7AIA5PQCAFrwAYBK9AOBKPQAAjrwAAAs9AIAovACACTwAAMm7AAAwOwCAez0AMMK9AICTvAAAbrsAQIe8AIDnPAAA9LsAAFI8AIBJvACADrwA4II9AIAGPACAWjwA4AC9AAANPQAAGrwAgGa8AIBTvADgg70AAFM9AMBbvQAA4LwAoCS9AACcPAAA8LwAgDk8AAD6OwAwp70A8KI9AMCavACAhbwAwP08AAATvQCAJT0AAM27AABKuwBgw70AMII9AIA0PABA4bwAAGC7AOALPQCgQb0A4A29AIC4vQDgED0AgGk8AIAAPABgKL0AALy8AABfPACA+7wA4Ge9AICfPACAKLwAAIi7AGC0PQBAhDwAAMY7AAANvQCATDwAALm7AADqPADgaD0AAG49ABCDvQDArjwAgOu8AAA5PAAA3DoAcJC9AAAEvAAAHjwAACy8AOBsvQCAFrwAAGc9ALCRvQBwgb0A8L29AACfPADAQb0AgBW8APCJPQAAt7sA8O89AIApvAAger0AAHw7AKAIvQAgAj0AwKi8AGDIPQDAqbwAgC28AEC3vADAab0AoAG9AACcOwDwrr0AQKA8AKAGPQBAUb0AwOE8AAC2PABAbb0AANC5AAC6vAAARrwAQMU8AEA3PQDAirw=","chunkHash":"354718dd83d7b07cf981b01f91195d09d3a77cd559e4b5a20ef8e79f29dcd07c"},{"text":"File: `output.txt`\n```text\n...\n\u0000 \u0000 \u0000F\u0000i\u0000l\u0000e\u0000 \u0000\"\u0000C\u0000:\u0000\\\u0000U\u0000s\u0000e\u0000r\u0000s\u0000\\\u0000a\u0000l\u0000i\u0000m\u00009\u0000\\\u0000A\u0000p\u0000p\u0000D\u0000a\u0000t\u0000a\u0000\\\u0000R\u0000o\u0000a\u0000m\u0000i\u0000n\u0000g\u0000\\\u0000P\u0000y\u0000t\u0000h\u0000o\u0000n\u0000\\\u0000P\u0000y\u0000t\u0000h\u0000o\u0000n\u00003\u00001\u00002\u0000\\\u0000s\u0000i\u0000t\u0000e\u0000-\u0000p\u0000a\u0000c\u0000k\u0000a\u0000g\u0000e\u0000s\u0000\\\u0000t\u0000o\u0000r\u0000c\u0000h\u0000\\\u0000u\u0000t\u0000i\u0000l\u0000s\u0000\\\u0000d\u0000a\u0000t\u0000a\u0000\\\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000r\u0000.\u0000p\u0000y\u0000\"\u0000,\u0000 \u0000\r\u0000\n...\n```","range":{"startLineNumber":19,"startColumn":0,"endLineNumber":20,"endColumn":0},"embedding":"AADqvAAAdjwAMJg9ALCDvQAAALgA8IS9AMAhPQAAE7wAAPw6AEDwPACAEj0AgPU8AED0vACAR7wAADA6AEBPPQDAIT0AABw8AAD+uwCAuT0AICY9AEAEvQAArzsAgFu8APCJPQAAdbwA0Kq9AEAgvQCACT0AgAY9AEDmvQBADL0AADU8AGA0vQAAWLoAQNY8AGBJPQAAoDoAgL08AOA4vQCAETwAYHK9AECrPQDAPr0AsK49AEBYPQAAO7wAADI8AJC9PQAAVLsAgGI8AOCCPQAAnrsAwGM9AECMvAAAlLoAAPU7AOBvPQAAoTwAgIO9AEAYPQDA5DwAAFg9AEATvQBAHb0AgPI8AACivAAA7DwAADA9AADrOwAAqDoAALG7AIB8vAAA0TsAgBU8ACCmvQBgdb0A4A69AKAFvQDASr0A0II9AADRPACALrwAYBC9AAAGuwBA4zwAqCe+AACkuwBwjL0AoFO9AABGvAAAuLoAAO+8AIAHPQCAcjwAgIM8AKCBvQDAwjwAgO28AIA2vAAgOT0AoEC9AIAAPQAAvjsAAJ47AIAiPQAAOr0AMLy9ACAyvQAAfbwAwP28AGBXvQCA9jwAgBI8APDQPQCAPTwAAAW9AEAOPQBA0DwAAGo8AABWuwDAyDwAgA08AAB6vQCAZjwAgIS8AAA5PAAALLsAQH89AOBBvQAAO7wAID69AAD1vAAA+bwAgM28AED8PAAAYDkAwCs9AMD5vAAYBD4A4EY9ACA4PQBgNL0AAAA4AACZOwAAtrsAwIG9AIBwPADA9LwAgNi8AAC4OwCgRj0AkMy9AEDYPACA0D0AkLq9AMAAPQAAwLkAAHG8AAAkuwDQl70AgG88AADgOQCADT0AAKU8AICgPABgIj0A8IW9AICzvQAAsDsAcJW9AOC6vQCgeb0AAOu7AADcugBAsjwAoDW9AMCcvACAkr0AIEO9AEAtvQAAiDoAQNu8AADOPADApjwAIAm+AOA6PQCAV70AIBe9AADsPAAA7rsAgDE8AIBnvQCAFr0AoEW9AAAlvQCgyj0AoK+9AECpPAAAMDsAwLS8AIACPgDA4LwAAJ67AEAivQBA1jwAEI69AAAPPQAgYL0AQPG8AIDTPAAA7DwAgES9AABUPAAgV70AwIW8AADMugBgPz0AACK8AECtvAAAKDoAQGg9AADkOwAgLz0A4Aw9ADCUPQAgET0AQN68AADgugBAtDwAwB09AIBNPADAvbwAgGe8AEAmPQAgLz0AQKm8AADAuQAA0LwAYGA9ACBqvQDA07wAABs9AIBKvADAwjwAAOy6AIATvQBgVr0AQNu8AGB3PQDQpD0AAJg7ADCHPQBAkL0AADS7AADOPACgBb0AgOy8AIBtPQCgdr0AwLu9AGBZvQDQ9L0AABw9AICiPAAgUz0AQEw9AEAdPQAATb0AgLq8AACQuwBAnjwAoG49AGAhPQDgS70AgA49AKBUvQAAALwAAIS6AMAIPQDAlr0AYCi9ACByvQBgOz0AAOi7AIBtvACAFbwAAJC7AECdPABA7rwAAKs8AGBlvQBANz0AgPk8AIBrvQCAkrwAALM8AADUPAAgmr0AAPk7AMBVvQCAaL0AABs9AACRPQAg8L0AANE8AACCPQDA07wAwH89AADYuwAAxrwAAI07AECEPQAAp7wAkKK9AEDmvADAJT0AgN48AIBUPQCQvb0AgFk9AADNvQDQij0AgMq8AADDuwDApj0AAFc8ACBCPQCAcbwAAA49AECPPABgBr0AwOu8AIAQPQBA/DwAQOy8AAD4uwBQwT0AgI89AIC9vAAgsb0AAKS8AMC1vQAATLsAAKS7AGB3vQCANjwAQEw9APCyPQAAjDwAQIG8AJDJPQBAcT0AwOu8AAB1PAAgKL0AANA6AECNvADAzjwAwEo9AIAcPAAAVj0AQIs8AMCpvADAhLwAAMC7AIBBvACAJz0AAFk9AACDOwCAtTwAAEs8AICsPACAKT0AsMu9AIB8vQAArDsAAOw8AMBQPQAgSz0AkIi9ACBvPQDAnLwAAHA6AAAuvACAzLwAUJo9AEA3PQCA6jwAAEi8AICUPQBA77wAgA69AACqPAAADTwAQNY8AAC0OgAAFDsAwIG8AABLvABAED0AoIe9AAA/vAAAYDoAgDu8AMD3PAAA8DsAQAI9AIAbPAAACDoAYHs9AAAuuwBAlzwAAAy9AAAsPQCA1LwAANM7AADwOQBADr0AwM88AICGvQCA1rwAIDu9AEDCPACAnbwAQLg8ACA7PQAgcL0AwGA9ACArvQDAojwAwE09AIBRvAAAbz0AAKq8AICgvADwjr0AAGo9AABwOwAA17sAgA28AKAZPQCAJbwAgOy8AIDIvQAA1jsAAJK8AACSvADAQ70AwMC8AIBvvADgGb0AkJW9AIBrPACAbzwAAK08AMB5PQAACrsAQM08AGBDvQAADD0AAEo8AIAQPQAgKD0AQD89AMBovQCAczwAgHG8AMCSvAAAFDsAQLG9AABlvAAALLwAAOA6AOApvQCAFrwAwHY9AJCivQDAmL0AsJC9AIBAPADgnL0AADa7AOA7PQCAirwA0IM9AACVuwDAWr0AAJC5AIADvQCgHj0AQI28ABC/PQDAn7wAAPC7AEDcvABALr0A4Ca9AIDrPACgpr0AQOo8ACAVPQCgNL0AoDk9AIDfPADAlL0AACi6AIB5vQDACb0AQJs8AAATPQAAyrs=","chunkHash":"2311d2382b95cbe052923ce0f73102c1603378616011de4066a432c60acda5cc"},{"text":"File: `output.txt`\n```text\n...\n\u0000l\u0000i\u0000n\u0000e\u0000 \u00001\u00005\u00006\u0000,\u0000 \u0000i\u0000n\u0000 \u0000_\u0000_\u0000i\u0000n\u0000i\u0000t\u0000_\u0000_\u0000\r\u0000\n\u0000 \u0000 \u0000 \u0000 \u0000r\u0000a\u0000i\u0000s\u0000e\u0000 \u0000V\u0000a\u0000l\u0000u\u0000e\u0000E\u0000r\u0000r\u0000o\u0000r\u0000(\u0000\r\u0000\n...\n```","range":{"startLineNumber":20,"startColumn":0,"endLineNumber":22,"endColumn":0},"embedding":"AMDEvAAAjjwAoIw9AKC+vQCALbwAwIu9AOA9PQAAKb0AwMG8AADwPABgDj0AcKs9AIAavQCARbwAAIE7AFCGPQDA3TwAgAM9AECHvABgrj0AwHE9ACAEvQCAnTwAALy6ADCdPQAAtrwAEJu9AGAlvQCAJj0AgDo8AFCrvQAACb0AwOY8AMAJvQCAjbwAgGg8AMBfPQDgCr0AAIw8AAA4vQAAVjwA4GW9ANCpPQCAGL0AsLU9ACAcPQBAnLwAAAo7ACCjPQAAlDoAwLc8AGAaPQAAFLsAoCg9AACTuwBAqrwAAAo8APCOPQDA5jwAoGO9AMAJPQAAfLsAkKM9AADWvABAjLwAgAc8AEDhvAAAZzwA8I09AIC1vAAAeDoAgEW8AACVvABAlTwAAHg6AOBQvQCAH70A0Ie9AMApvQBAh70AkIU9AMC6PAAAGjsAIBe9AADAOAAAALgAkDa+AMCPvACgZr0AQDq9AMCUvACApbwAgJy8AEDoPACAIzwAANg6AIAxvQCACbwAAIy8AAAeuwBAGD0AAMS8ACAzPQAAITwAgDA8AOB2PQAAmLsA0Mi9AIBjvQAAGbwAwMu8AOAVvQAgNj0AABS7AHDePQAAbDwAgAG8AECyPACACDwAAFa7AEDMPAAAjDwAwM88AKC3vQAAEzwAQLC8AAD7OwCAIrwAAIM9AGBEvQCAh7wAIFy9AADduwCAwrwAkIm9AIBrPAAA2LoAQHE9AKAovQAQJz4AAGU8AMB0PQDAxbwAAMq8AIAQPABAhbwAYIi9AADfuwBAnrwAwG+9AIAMPABAUT0AcNC9AMBnPQCgzD0AUL69AEC/PACAALwAAAo8AABhPAAgWb0AgJC8AECmPABAjDwAgAc8AACJPACAzzwAgHa9AICUvQDAyzwAADm9AOCVvQBgKb0AYA29AAAOOwBA4DwAwLi8AOAgvQDQjr0AQPK8AOA9vQBAtTwAgP28AKBTPQAAbzwAwPO9AAChPACAT70AoAW9AGAMPQDAnrwAgBQ8AMDjvAAAk7wAgJ+8AMDnvABgqj0AQJa9AAA4PAAAP7wAAD47AFD2PQAAvrsAwIO8AMAkvQCAAzwAIJy9AGBJPQBAzLwAwMe8AEDSPAAAjjwAAOW8AADAuABgh70AACa7AECQPACAgD0AAO87AICBvABA5TwAQAs9AECKvAAAGD0AwD09AMCrPQDgIz0AAFK9AAAAugDAgjwAwNg8AIAQPAAAirsAQPS8AEC0PADAOD0AIAO9AIC9PACArbwA4E09AGBmvQAAjrsAgD49AABxPACgJz0AAIY8AGASvQAgF70AAPW7AGCBPQBglT0AgKE8AGByPQBAhr0AQIE8AKAbPQCQob0AgBu8AKAUPQAgW70AUJC9ACCXvQCgB74AYHA9AEANPQDgMz0AQAA9ADCBPQAAKr0AgCW9AMCivAAA4LsA4Eg9AECZPACgSb0AANY8AMBlvQCABLwAQN48ACA5PQAAf70AwCa9ANCVvQBgMz0AAGC7AAC3uwCACL0AAMQ7ACAPPQCgEr0AwJM8AEASvQBAGT0AgPQ8AECIvQCgDb0A4Cg9AMDkPACwh70AAIK7AOAVvQAA77wAoHo9AICUPQDIAb4AgBg9AMAuPQAAxrwAgGA9AABouwAA4jsAgDA8ANCHPQAAaDsAQIi9AOAqvQAAnTsAgBw9AKCIPQDwk70AoJE9ALDEvQBQqz0AAHi8AABguQCwkj0AgDM8AIB2PAAAULwAwBU9AICOPABgYr0AADi8ACBFPQAALDwAIHq9AIDEvAAw3z0AYF09AIAbPADAmb0AgIm8AEB8vQAAXDsAANu7APCOvQBArzwAANA8AMCkPQAA9DsAAAW8ACCGPQAALj0AgBq9AAA7PADAgb0AAGg7AAB+uwAAojsA4Bk9AABovAAgDD0AQK48AAAxPAAADbwAQB69AACQugAgkj0AEJE9AIAsPAAAvzwAAJE8AABHPACgcj0A8Ni9ANCQvQBApzwAAAw9AJChPQBACz0AIHa9AGCLPQAAzDoAwIm8AACAvACAIbwAgIM9AEBxPQDAkzwAAKm7AIB1PQCAm7wAQPm8AAAFPQAA+zsAgOI8AAA4uwAA+DsAgFS8AABJPAAApD0AcKS9AADwvAAAADkAgJO8AOADPQAAIDoAQIw8AIAkPAAA/jsAwOY8AAAsuwAArzwAwK+8AAAfPQCAKrwAAEw7AAATvAAgFL0AQE09AGBXvQBAtbwAAAy9AID9PADAqbwAAJY7AIA+PABAeb0AgFw9AKARvQAAtbsAQO88AECWvADASz0AAKs7AACpvAAQnr0AMLI9AIB/PACAGDwAABq7AGAFPQBAurwAIB29APCnvQAABD0AAKG8AAA7vAAgFL0AwPW8AABpPACAtLwAAJC9AAAAOQDAjTwAAGg7ABC/PQAALTwAAGs8ACABvQAAdjsAAMy7AIDpPAAAGD0AAHQ9AOBZvQCAZLwAABK9AABmOwAAhrsAQLG9AMCuvAAAybsAgCO8ACAyvQDAhzwAQE49AACkvQDQkb0AoKK9AIDHPAAAXr0AACG8AIBIPQAAKzwAEKo9AAA6PABAVr0AAIm7AIBavQAAZD0AwLW8APCNPQDApbwAAOa7AIC/vADgWb0AwOe8AGAJPQDgj70AgH48AID6PADgRb0AYBw9AGAUPQBASr0AgCA8AKAbvQDAqbwAgCM9AADzPAAAY7w=","chunkHash":"31c9c1ed850099ee86d605b048a0a5befe621defe68454da1fbacab3da76c996"},{"text":"File: `output.txt`\n```text\n...\n\u0000V\u0000a\u0000l\u0000u\u0000e\u0000E\u0000r\u0000r\u0000o\u0000r\u0000:\u0000 \u0000n\u0000u\u0000m\u0000_\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000s\u0000 \u0000s\u0000h\u0000o\u0000u\u0000l\u0000d\u0000 \u0000b\u0000e\u0000 \u0000a\u0000 \u0000p\u0000o\u0000s\u0000i\u0000t\u0000i\u0000v\u0000e\u0000 \u0000i\u0000n\u0000t\u0000e\u0000g\u0000e\u0000r\u0000 \u0000v\u0000a\u0000l\u0000u\u0000e\u0000,\u0000 \u0000b\u0000u\u0000t\u0000 \u0000g\u0000o\u0000t\u0000 \u0000n\u0000u\u0000m\u0000_\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000s\u0000=\u00000\u0000\r\u0000\n\u0000[\u0000S\u0000t\u0000e\u0000p\u0000 \u00001\u0000/\u00001\u00000\u0000]\u0000 \u0000I\u0000n\u0000i\u0000t\u0000i\u0000a\u0000l\u0000i\u0000z\u0000i\u0000n\u0000g\u0000.\u0000.\u0000.\u0000\r\u0000\n...\n```","range":{"startLineNumber":22,"startColumn":0,"endLineNumber":24,"endColumn":0},"embedding":"AOAHvQDA2jwA4Jo9ABCUvQAAb7wAIKC9AKBtPQAAYLoAAPw6AEDWPADgJj0AYEE9AOAFvQAAXjsAAAA4AEBfPQAgAj0AwO08AACwvACQqT0AIG89AMCIvACAHDwAAPy7AMBxPQBAv7wAEIe9ACAuvQAgHz0AQOc8AHDAvQCAEb0AALg8AAA+vQDAkbwAgM48AIDsPAAAW7wAALE8AKBAvQCAMDwAQGu9AMDHPQAgcL0AAKY9AABgPQDAp7wAANw6AJCoPQAAZ7wAANw7ACByPQAADrsAwG89AAA1vABA5LwAALQ8ACCBPQAAWDsAIIS9AOAlPQCAgjwAEIg9AAC9vABAhLwAAGk8AADwugDAlDwA4Eo9AAAxvAAABLsAAKg7AACWuwAA6TwAANU7AOCPvQCAZL0AgOS8AADqvAAgir0AoG09AABTPACAeTwAgLW8AMCnvACA5TwAoCq+AAB0vABAaL0A4Di9AMDlvACAgTwAoAC9AKATPQCATDwAACA5AGBJvQAA2bsAAIe8AECEvACAGT0AgC29AGALPQBAgjwAAPg6AGAZPQBAlbwAkNS9AKA2vQBAobwAAP27AEAlvQDgEj0AAB28AKDYPQDAkzwAgAW9AAB6PAAAQzwAAHg8AECQPAAAujsAgIs8ADC7vQCAJzwAAO68AAAtvAAAjrsAcJk9AKATvQAApLwAYG+9AMCXvADgEL0AgC69AMCWPAAAwzsAAHo9AOAmvQAAFT4AIAs9AABmPQCgIr0AAEK7AAAMPACAGbwAwIW9AIAtPACAJb0A4C69AAC7OwDgST0A4MO9AMCWPACAzT0AIK+9AMDmPACAHDwAAEa7AIANPADge70AALK7AED2PACAazwAgEc8AICFPAAA4zwAkIm9AOCavQAAhrsAAGy9APCnvQBAO70AYBK9AIAMPACAGjwAUIm9AOAjvQBgg70AgEW9AOAjvQAAgDkAwL68AOAiPQCABDwAkPq9AMCCPACgXL0AAFa9AMCGPAAAH7wAgGU8ADCIvQAAYrwAgBO9AKBMvQAgtD0AIK+9AGAHPQCAFbwAAJG7AMDjPQCAfrwAAFO8AMAWvQBA4TwA8Iu9AADRPACgQr0AQBO9AMCVPABAFj0AYAS9AIA9vADAab0AAK28AAAOuwDghD0AgKW8AADjvABAijwAgCE9AACAOgBAFz0AABQ9AOCUPQAgCj0A4B69AMCRPAAA1DwAACo9AACOPABAuLwAAHe8AKAgPQAAVD0AQJm8AAA/PABA4rwAwFc9ACBIvQCANbwAQCs9AACeOwBA8jwAAEg8ACA8vQDAar0AQNy8AHCDPQAghz0AAJK7AFCSPQAgkb0AABa8AAC2PACATb0AAAa7AIByPQCgcL0AgKe9AGCAvQA4AL4AgBE9AMCgPACAKz0AQHM9AIArPQBANL0AQNC8AIBRPAAAXDsAEIk9AIDpPABgfb0AgIo8AIBhvQAAuLoAAGw7AGBaPQDglr0AoEm9AACJvQCgfj0AgEI8AACWOwAAVrwAwMM8AADUPADAA70AgKQ8AMAwvQAgPz0AACw9AMCDvQBAE70AwOo8AEDZPADApr0AAN+7AEDfvAAASb0A4Ec9ADCBPQDg+r0AQL48AMCWPQAAB70AYD89AADgugAAxbwAAOU7ACBEPQAAQrwAIJO9ACASvQAAhjwAQOI8AKAtPQAQor0AoHY9AEC6vQBgkz0AgAq8AACLuwBgpT0AAEg7ACAmPQDAi7wAIBI9AACrPACAH70AAKq8ACAhPQBAuzwAwFK9AIAMvADw3z0AIGg9AIAYvAAgtL0AAO27ANCJvQAAarwAAOo7AIB2vQDAtjwAwB09AGCxPQCAPjwAAMu7APCzPQCAcD0AoCe9ACANPQBgAb0AAOE7AAAGOwDA9TwAoCI9AABcPAAAID0AgJs8AAAuuwCAILwAgJ28AAAguwCgED0A4FI9AAAAvACAwjwAgBg8AIAKPADACj0AQMW9AJCrvQAAqrsAYCk9AMBPPQBASz0AIG+9AGCoPQCADLwAAA68AABAuwAAv7wA8Jk9AABHPQBAljwAwK+8AOBYPQBAzLwAoA69AICLPAAAnTwAgN08AACPuwAA4rsAgMe8AACkugDgKT0AQKO9AIDWvAAAmbsAgKO8AMDFPAAAALwAAL48AAA6PACAFDwAwGY9AAAIugAAmDwAABq9AGAoPQCAb7wAAIy6AADsOgBAtbwAYB49AOBqvQAAvLwAICm9AID3PAAAG7wAAIg8AIDoPABwkL0AIFI9AAAqvQAALjsAAPc8AICgvAAAdD0AAJS8AABOuwAAkr0A4JY9AIC1PAAAHTwAgBy8ACA7PQCAsbwAQPO8ALC9vQAAULsAQNa8AAAivAAAs7wAgCW9AIBIPAAgV70AsJS9AAANPAAAKLsAAK88AKChPQAAbDsAALg7AEAdvQBAkTwAAHI8AIDhPABgPz0AgE49AOAsvQAAzDsA4A+9AIDDvAAAgzwAgLC9AMCdvAAAb7wAALi6AIAYvQCAO7wAwEw9AJCUvQAAjr0AgJe9AIBkPADAr70AAAC4AGBEPQAABjwAEKc9AAC/OwBARr0AAI+7AOBgvQBAKT0AwMC8AHCyPQAAnbwAAP07AAAWvACAS70AQBO9AAACPQCAib0AAOU8AOABPQDgcb0AYCo9ACAvPQCgwb0AAOQ7AOBlvQDAqrwAgDg9AMDOPADAqrw=","chunkHash":"97e599e331dafaf11ade3226ef1513c6121c1009ed8e8b4efd408e6f72ea9f47"},{"text":"File: `output.txt`\n```text\n...\n\u0000U\u0000s\u0000i\u0000n\u0000g\u0000 \u0000d\u0000e\u0000v\u0000i\u0000c\u0000e\u0000:\u0000 \u0000c\u0000u\u0000d\u0000a\u0000\r\u0000\n\u0000[\u0000S\u0000t\u0000e\u0000p\u0000 \u00002\u0000/\u00001\u00000\u0000]\u0000 \u0000S\u0000e\u0000t\u0000t\u0000i\u0000n\u0000g\u0000 \u0000u\u0000p\u0000 \u0000d\u0000a\u0000t\u0000a\u0000 \u0000t\u0000r\u0000a\u0000n\u0000s\u0000f\u0000o\u0000r\u0000m\u0000s\u0000.\u0000.\u0000.\u0000\r\u0000\n...\n```","range":{"startLineNumber":24,"startColumn":0,"endLineNumber":26,"endColumn":0},"embedding":"AIDbvACAtjwAgK49ADCYvQAAorwA4Eq9AMBCPQAAbbwAAAs8AADfPADAID0AYGY9AADivAAAPLsAAMU7AKB9PQBA6TwAQJA8AECzvABgmT0AAJY9AABNvADA/TwAAA47AGCyPQAA+LsAcJW9AAD/vACABz0AgNg8AKDGvQDgFr0AgF08AMBCvQCAb7wA4AA9AMACPQAAADgAwNU8AOBOvQDAtTwAgI69AHC5PQCgXr0A8KE9AAAwPQDA0LwAAME7AACQPQDAiLwAgDQ8AKBGPQAAQDwAQHU9AADkuwAASLwAAOU7AGBqPQCAKTwAMKS9AEAsPQAAajsA8JY9AEC5vAAAxrsAwIM8AABAugCA6jwAAGQ9AEC7vAAA0DkAAKu7AACMuwAATTwAgC08ALCfvQDgF70AwOW8AEDVvAAAcL0AMII9AADrOwAARLwAQIq8AACIvABAmTwAwCq+AADiuwCQhr0AoD+9AMDEvACAHjwA4BG9AKANPQAA9TsAANc7AIBbvQAAgLsAAIO8AID4vABAFj0AQBy9AAAGPQBAijwAAIA7AMD6PACgB70AUNu9AAAivQBAzbwAgBO8AEANvQCgHD0AgEg8ACDdPQAAvDoAABa8AADBPABAhTwAwL08AIB8PACAYjwAgEo8APCkvQDAhjwAAPW7AAA4PADAgbwA4Gc9AIAWvQAAqbwAYHe9AAA1vAAAJ70AgBW9AABuPACAoLwAQHw9AIAfvQAoLT4AgOY8AMBVPQBAJb0AADq7AACyOwDAtrwAoIm9AICiPABgPr0AAOO8AADLuwBAQD0AwL+9AAClPACA6D0AcLy9AIDiPACAGzwAAEQ7AAAgugAAZL0AABQ7AIBWPAAA3DoAQM88AAASuwBgGj0A8Jy9AMCFvQAAJDsAQDG9AJDavQBgS70AwLi8AMCnPAAAPDsAYGm9AEAVvQDwl70AYE+9AABJvQAAJrsAACO8AIAjPQDAhTwASAi+AAAlPQCgXL0AQP28AACIOwCAMrwAADo7AIA/vQDAsbwAQAK9AAA3vQDAoT0AoLe9AIDUPACAirwAAKu7AADRPQDAHL0AABK7AAAlvQAA5DoAEK69ACADPQDgU70AQNe8AACiPAAgGD0AAEm9AABougDAe70AACq7AABIPADgRj0AAJy6AAArvABAszwAYFo9AABqvADgAj0AYGI9AMCtPQCA8zwAgEW9AADeuwDAtDwAgPY8AICTPAAA0rsAgG+8AEC0PADAQT0AgHW8AAC/PACAvrwAQEo9AIB9vQAAu7wAACM9AAAiOwAgGz0AwLo8AAAlvQBA9rwAAAu9AADIPQBglj0AALo7AOBkPQBggb0AgAM8AMCsPAAgXL0AACW8APCTPQBALr0AcJu9AACMvQDA570AwBc9AEDAPAAAPT0AQDQ9AOAePQCA2rwAwPe8AACsOgAARjsAYG09AIA8PQDAfr0AAKc8AABkvQAACLsAACy8AGBVPQBQhL0A4H69AOB2vQDAfT0AgCs8AACMugAAC70AgOw8AMCxPAAA3bwAwAg9AEAhvQBANj0AIBM9AFCGvQDArrwAwMo8AEDgPACQk70AAPC5AIAdvQAARL0AoDY9AIClPQCg9r0AQLY8AMChPQDAu7wAgHA9AADuuwCAp7wAAIU7AGBwPQCAQjwAAIy9AEDEvAAApTwAQOI8AOAkPQAwnr0A4Jc9ABCovQCwnD0AQIS8AIBFPADQlT0AAMg7AED0PAAAEDwAYEA9AACvPAAA77wAQJ28AKAqPQBAljwAYEm9AECNvAAQ1j0AQGY9AIApvACQhb0AAMi8ADCLvQDApLwAwKY8AGBdvQAAMLoAAEE9ANDAPQAA4zsAAPy6AKCbPQCAPj0AIA69AIAAPQAAMb0AAIC6AABIuwAA9DwAwMQ8AACyPAAAVz0AQAk9AADDOwAAZbwAgKC8AECXvAAggD0A8Ik9AIBKvACAzjwAAMY8AADSOwAAIT0AoOq9AGCGvQAAj7sAYAM9APCcPQDAYz0AIEu9AKCtPQCAirwAALW7AABbvABAorwAUJs9ACAtPQCAGj0AgB+9AIB0PQAA6bwAANW8AMAMPQAAOLoAYAE9AIAjPAAAGLoAAF68AAA0OwAAkz0AgIq9AMD7vACAgbwAAOa7AEBLPQAAYDoAgN48AIB+PACAFzwAwIA9AMCYvADAlzwAwCK9AGAaPQBAi7wAAKC6AACLOwAAsbwA4Gc9AECOvQCArrwAwAa9AIDzPAAAKbwAQJM8AACQPAAAMb0AACo9AMDfvAAAC7wAIAo9AIATvABgfT0AAO68AABMvADAWL0AwD09AIDyPAAAmDoAgHi8AMA2PQCAXLwAgM68ANCivQCAS7wAgEm8AAAbvABAkrwAgLi8AAAnPADgPr0AULC9AADLOwCAgbwAgGA8AHCNPQAALTwAQJA8AECtvACA5zwAADU8AAAnPAAAIz0AYFc9AIBhvQAA3TsAgMG8AIB/vAAAVzwA8K69AABWvAAAurwAAAy7AKBCvQCAabwAQHc9AMCkvQBAlL0AgIy9AICKPACgi70AAMg7AKBMPQCAIjwAkKY9AAC3OwBgR70AgG88AOABvQAgHT0AgNG8ALCTPQCAm7wAAPM7AMCgvABAJ70AgBa9AACWPABQkb0AYAA9ACA1PQCAbb0AQBA9ACBEPQDgcr0AAN87AEA2vQAANbwAgCo8AGAvPQDA0bw=","chunkHash":"356607415d286cc0a29c81cba065e1d3d52f9de8b4fd207a0a4192b77d77a21d"},{"text":"File: `output.txt`\n```text\n...\n\u0000[\u0000S\u0000t\u0000e\u0000p\u0000 \u00003\u0000/\u00001\u00000\u0000]\u0000 \u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000d\u0000a\u0000t\u0000a\u0000s\u0000e\u0000t\u0000 \u0000f\u0000r\u0000o\u0000m\u0000 \u0000d\u0000a\u0000t\u0000a\u0000/\u0000n\u0000u\u0000c\u0000l\u0000e\u0000i\u0000_\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000_\u00001\u0000a\u0000_\u0000v\u00001\u0000.\u0000.\u0000.\u0000\r\u0000\n\u0000L\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000i\u0000n\u0000i\u0000t\u0000i\u0000a\u0000l\u0000 \u0000d\u0000a\u0000t\u0000a\u0000s\u0000e\u0000t\u0000.\u0000.\u0000.\u0000\r\u0000\n...\n```","range":{"startLineNumber":26,"startColumn":0,"endLineNumber":28,"endColumn":0},"embedding":"AEDpvACAkjwAYG49ANCovQAAqDoAQJa9AGBTPQAA2LwAgCa8AMC1PAAA9DwAQDk9AMDMvAAA2LsAACA7AEBWPQBgIz0AANi6AICOvAAQyz0AUIo9AADnuwCAljwAALS8AECPPQCA9rwA0Ja9AMA0vQCA1zwAgBU9AADCvQBgEr0AANE7AMACvQCARLwAgLo8AMBEPQAApDsA4AI9AKB7vQAAajsA8IS9ANCyPQBAVr0AgLI9AOAmPQAAp7sAAGM8AMCxPQAA0LwAAAA7AMBfPQAAvzsA4FU9AABTvAAAHrwAAK48AEB7PQDAnTwAcIC9AMA4PQCAdTwAAJg9AEDmvACABr0AgDI8AMCEvABA1zwAYHI9AAAsOwAAMjsAAPy7AAD1uwCASzwAAAA8AKCevQAgF70AwOq8AAD1vAAAdL0AwIk9AIAqPQAAxjsAAFO8AACUugCAizwAECy+AIAIPACAmb0AQH69AACLvAAAKLwAgMm8ACAuPQCAVjwAAJS6AMB0vQAAwjsAwK28AACwuQCgPT0AYEu9ACAjPQAArrsAAJA6AAADPQBAr7wAkNO9AMBovQBAlbwAAHu8AKAbvQAgMD0AgAU8AODVPQAAVTwAwNm8AED5PADArzwAAOs7AABQOwCAtDwAANA8AJCUvQCAvzwAgF28AABgPABArLwA8Ic9AGASvQAA2DoAoHq9AMCtvADgQ70AADu9AIDvPAAAvjsA4F89ACAlvQBoHD4AoB09AIBcPQBAG70AAB47AAD8ugAAUrsAoEu9AAAbPACgUb0AALi8AICqPAAgAz0AEL+9AADKPADQ3T0AANu9ACAOPQCAO7wAADY8AAAUPABwg70AAK27AADcOwBA8TwAgBw8AMDuPACAND0A8JS9AICTvQAArTsAoES9AICrvQCgTr0AQAq9AADQOwCAODwAQCa9AOAHvQAAZr0AgB+9AGA4vQAAXjsAwNC8AOABPQAAADkAWBO+AMDZPADAUL0AgAm9AEDsPAAA27sAAAi6AABivQAAyLwAACC9AGAvvQAQvj0A4J29AKAqPQBAnrwAABo7AHDgPQBAxbwAgBi8AAAHvQBA9DwAwMi9AIB9PABAQb0AABK9AMChPACA5zwAwCC9AABcPABgcL0AAKu8AADwugBASz0AADC8AAC+uwAgDT0AADE9AIAUPACABD0AIFM9AGCoPQAANz0AIFq9AABGOwAAMjwAABg9AADqPACAwLwAAKa7AABMPQDgFj0AQJO8AADUOgCAx7wAgC49AGB0vQDAy7wAgOo8AACbuwDAzTwAgGk8AAANvQAAcb0AQBu9AEB8PQAAqj0AABi6AGCUPQCgj70AAGu8AIAoPQDgSL0AgF28AKBEPQBgdr0AEKW9ACBNvQAA1b0AIAk9AAC+PABgJj0AgFA9AHCAPQAgLb0AAOa8AACkOwAAarsAoGo9AABhPQAger0AgFU8AOB3vQCADTwAAKY7AKBFPQCge70AQH69AABuvQAgSz0AQJU8AABWuwDA0rwAgCU8AMCpPADAAr0AgCQ8AKAyvQAAVj0A4C09AKCHvQBAAL0AQOY8AACoPACgq70AACS7AAAbvQDgSr0AIEA9AEB4PQAA1b0AACc8ADCVPQBA+rwAQGo9AABEvADAgrwAAGQ7AACIPQDAm7wAEJO9AICuvADgDz0AwNU8AGAhPQAAo70AQDI9AHDZvQAglj0AAKi8AAATvACgpD0AAFQ8AEAYPQCgBL0AQBg9AECjPACABL0AgDC8AOAmPQBAnTwAQDW9AADAugCwyz0AwDI9AABEOwDww70AABa8AECnvQAA6rsAAEQ7AIB7vQDAlzwAIA89ACC8PQAAvLoAgDS8AFC2PQCAYj0AQAq9AEC2PADgBL0AALS6AICAvAAgDz0AIB09AAD/OwCAFT0AAJG7AAAmuwBAurwAQJ+8AACGOwCAPj0AQHg9AAAQOgBAMD0AAJY8AMCoPADgJj0A4Oy9AKBhvQAAlzsAwAk9AEBOPQAgRT0A0IO9AICPPQAASrsAACQ7AACmuwAA37wAoJM9AEAyPQAAAz0AAPq8AEBUPQDAzbwAgA28AACZPAAAubsAALo8AAD4OwAAdDwAgCO8AABGvADgRD0A0IW9AEDJvAAA5bsAAMq8AMD0PAAA7DsAQL88AICFPAAAl7sAYE09AACcugDAtDwAQKa8AKBaPQDAurwAAN87AABkOwCAXrwA4A89AAA2vQAAn7wAwOS8AABvPAAAeDsAQL88AGAaPQDAR70AgOo8AIAOvQAAt7sAwBw9AAAkvABgYj0AQOe8AAAqvAAwvb0AAIE9AICLPAAAwDgAAPC7AOAtPQCAuLwAwM28AJCcvQAAozsAgNm8AIAjvABAB70AACC9AAAmuwAAPL0A0JW9AABwOwAAPrsAgEE8ADCGPQAADrwAgKM8AAAPvQCAHz0AAG48AIDyPAAAqzwA4C49AGB0vQAAPzwA4Bm9AIA6vADAhTwAkLa9AACmvACAd7wAAIi6ACBpvQCAiLwAIGo9ADC3vQCQhL0AEJ+9AABqPAAgar0AAM07AEC2PAAASjwAYKI9AIAWPADATb0AAGA7AGA4vQAgKz0AAKW8ACC1PQDAlrwAABw7AADfvADANr0AAAC9AED0PACwlb0AgMM8ACA0PQBgjL0A4BI9AMD7PAAwlL0AgCC8AGBnvQCAebwAAL88AAAVPQAA07s=","chunkHash":"6e3c867ccb0fcabb64528fd14516f1cd2157e549169f4d24666b03b566a94505"},{"text":"File: `output.txt`\n```text\n...\n\u0000D\u0000e\u0000b\u0000u\u0000g\u0000:\u0000 \u0000U\u0000s\u0000i\u0000n\u0000g\u0000 \u0000d\u0000a\u0000t\u0000a\u0000_\u0000d\u0000i\u0000r\u0000=\u0000d\u0000a\u0000t\u0000a\u0000/\u0000n\u0000u\u0000c\u0000l\u0000e\u0000i\u0000_\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000_\u00001\u0000a\u0000_\u0000v\u00001\u0000,\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000_\u0000c\u0000s\u0000v\u0000=\u0000d\u0000a\u0000t\u0000a\u0000/\u0000c\u0000h\u0000r\u0000o\u0000m\u0000a\u0000t\u0000i\u0000n\u0000_\u0000c\u0000l\u0000a\u0000s\u0000s\u0000e\u0000s\u0000_\u0000a\u0000n\u0000d\u0000_\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000s\u0000.\u0000c\u0000s\u0000v\u0000\r\u0000\n...\n```","range":{"startLineNumber":28,"startColumn":0,"endLineNumber":29,"endColumn":0},"embedding":"ACAJvQCA6DwAEJg9AKB6vQAA5rsAkIO9AOBTPQDAyrwAAKQ6AAD/PACA7jwAIA49AED9vAAA5DsAAH08AIBXPQCAAz0AgLA8AECfvABQwj0AYGM9AABsvACAuzwAAEA6AJCQPQCAFLwAYJe9AEALvQDgGz0AgPg8AODlvQBAD70AwKo8AGAIvQCAT7wAQOQ8AOA9PQAABDsAAM48AEBHvQAAYDsAkJe9AEC8PQCAYr0AMJI9AIAFPQCAmbwAAMU7AOC6PQAAu7sAgFE8AKBoPQAAlTsA4JI9AABNvACAvLwAAIY8ALCFPQAAYjsAwKK9AMBAPQAAczwAAHw9AIDcvADAvLwAAJA5AACmuwCAijwAIFs9AAChuwCAMTwAAFw7AACsOwDApTwAgAk8AFCUvQAgc70AoC29AMD5vACAIr0AQGA9AAAcPAAAKrwAwMq8AIDWvADAoDwAuCG+AABEuwBgaL0AoF69AICAvAAAJjwAwOW8ACAxPQAAOTwAAIi6AEByvQAA9TsAAFa8AIDDvACgGz0AADS9AEDEPAAAjzwAAFC6AMChPAAA6rwAINa9AABKvQAAJbwAAPK7AKA5vQAgGD0AAGq8AODhPQBArjwAQIK8AKAHPQAA8DkAgDA8AACXOwAAkDkAAJU8AMDBvQAAZjwAAJS8AIA9PAAAk7wAgEM9AEDkvACAsbwAQFm9AIDIvADANL0AIBW9AMClPACAf7wAgHQ9AMAwvQBoGj4AYCs9AGBSPQBAF70AABw8AAA8uwAAybsAgIm9AIDyPADAFr0AwCu9AADguQAgPz0AcMG9AACaPAAg4z0A0LW9AIDPPAAAzDsAAHg6AADcOwBgSL0AgHS8AAChOwDAuzwAADI7AABjPABADT0AkIq9AACbvQAA4LsAoGi9AOC/vQCgUb0A4CO9AICBPAAAbjwAYEC9AEBAvQAQhb0AQEq9AAAkvQAAvrsAgG+8AIBrPACASDwAIBC+AMDKPADgc70AQB+9AACxPAAArLoAABg8ACB9vQDABr0AAPe8AKBHvQDgyD0AQLW9AEAwPQCAGLwAABS8ABgCPgBAqbwAAJa8AEAtvQCAejwAYKW9AACePADAXb0A4C29AACiPABAojwA4Ey9AMCjPACger0AgIO8AAAAOQBAbj0AAGe8AICtvACAijwAYDs9AAB4ugCgKT0A4As9AEClPQDgOz0AABa9AADEuwBgGT0AIBM9AADIPADAkrwAABi8AIDjPACAND0AAEY7AIBkPABAxLwAAHY9AMBUvQDAybwAQCE9AAA2OwBgIz0AgGQ8AABAvQDgP70AYA+9AMCbPQBArD0AwKs8AMCLPQAAi70AAEy7AGAePQBgYr0AAJy7ABCIPQDAP70AoKC9AMCMvQAw6b0AoDI9AAByPADAQT0AACg9AOAKPQDgH70AQLC8AABIugAAvjsAoFE9AAAJPQAQiL0AAKk8AGB8vQAAozsAAFg6AKAxPQAwir0AgGy9AHCFvQCgiT0AAIM7AADduwAAgbwAQMc8AIDdPADgLr0AQMU8AMBWvQCA4jwAANo8AECIvQCA3bwAALA8AIC/PACwp70AAKw7AKAlvQCAY70AoDc9ACCIPQCA4L0AgHw8ALCTPQBAy7wAMIA9AABYOgDAmrwAABw8AEBZPQAAaDoAQJG9AAABvQDA1zwAQMQ8AAASPQAApL0AAGw9ALC3vQCQkj0AwIa8AAC1uwAAvz0AAFw7AGAwPQCAa7wAYAk9AEDPPADAG70AQIS8AKAFPQBAnzwAQDi9AAD8uwBAyD0AgD49AECmvABwnb0AAN68AIB4vQCAKrwAADA7AFCAvQAAADwAYFE9AFCWPQCAvTwAgGm8AOCbPQBAbD0AYCC9AEC3PABA4rwAAIs7AADiOwAAED0AQDg9AIBdPAAgXj0AQPg8AADQuwAAsjsAgEy8AACfuwDgRT0AMII9AIBxvADA0jwAADw8AABUPACA4jwAYN69ABCIvQAAfrsA4BQ9AEBoPQBgEj0AAHa9AECSPQCAxrwAADO8AACEOwCAlLwAUI09AMA9PQAgCz0A4Bm9ALCGPQCA7bwAAE+8AADuPAAAgTsAwOI8AIAzPAAAULsAgL68AADAuQAAZj0AwIu9AADlvAAAJrwAwMW8ACAVPQBAhbwAANo8AAAqPAAAaLoAYJQ9AACFOwDAwDwAgAG9AKBhPQCA0LwAAIC7AAC9OwAAkrwAID49AKCgvQCAbrwA4D29AIAFPQAANrwAQLY8AOAcPQBAPL0AQEc9AGAXvQAAjbsAYDs9AACvuwCwjD0AgKq8AADAOADgZL0AwJA9AADaOwDAgjwAAB68AOAiPQDAj7wAAJW8AMDEvQAAqLsAAKO8AAAWvADAprwAgNW8AABMOwBgRL0AMJq9AACKOwAAoDsAALk8AOB/PQCAEzwAgEU8AMBbvQCAwzwAQLU8AMAMPQAALz0AwDo9AIAmvQCALDwA4AG9AAB4vAAAujsAIJ+9AABWuwDAqrwAgCG8AEBHvQAAALsAIG89AACavQCAZb0AwIy9AAC1OwBQqb0AADy8AOA0PQAAVDsAcIw9AABwugAAYb0AwIU8AMAavQDAAj0AQJe8AJCmPQCAo7wAAPu7AACIvABADb0AgMW8AMCyPAAAn70AQLw8AAAoPQAgPr0AABA9AABDPQDAtr0AAGq7AIATvQDAobwAgKM8AMDAPAAAZrw=","chunkHash":"f022fc0fb36f444704ac9284b666fbb231751d1bf775b90bf0a56bfb89340e33"},{"text":"File: `output.txt`\n```text\n...\n\u0000I\u0000n\u0000i\u0000t\u0000i\u0000a\u0000l\u0000i\u0000z\u0000i\u0000n\u0000g\u0000 \u0000N\u0000u\u0000c\u0000l\u0000e\u0000i\u0000D\u0000a\u0000t\u0000a\u0000s\u0000e\u0000t\u0000 \u0000w\u0000i\u0000t\u0000h\u0000 \u0000r\u0000o\u0000o\u0000t\u0000_\u0000d\u0000i\u0000r\u0000:\u0000 \u0000d\u0000a\u0000t\u0000a\u0000/\u0000n\u0000u\u0000c\u0000l\u0000e\u0000i\u0000_\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000_\u00001\u0000a\u0000_\u0000v\u00001\u0000\r\u0000\n...\n```","range":{"startLineNumber":29,"startColumn":0,"endLineNumber":30,"endColumn":0},"embedding":"AICpvAAgET0AUIs9AEB1vQAAXLsA4JO9ACBRPQCAO7wAQLC8AAA4PACgGz0A0Jc9AMDovAAAMDwAgG08AICcPQAAsjwAAIk8AIChvACg2z0AoH09AACVOwBAgzwAQLS8ANCSPQBArLwAAHy9AMDNvACALT0AAA49ALCovQAA97wAwMc8AAAUvQCAUrwAAI08AAA5PQCALrwAgC88AGAtvQCADLwA4Ea9ANDOPQCgW70AILk9AMBbPQCAZrwAgHU8ALC/PQAAe7wAAHa8AEBjPQAA1LsAQG09AMCovAAARrsAAG08ACBwPQAAhTsAgHS9AACpPABAhDwAAJ89AADDuwCA3rwAgDW8AEDmvACARDwA4H89AEChvABAmjwAAF88AIASvAAAKDwAAOQ6AECHvQBghL0AYBa9AIAbvQDA/bwA8Ic9AIDwPAAAv7wAoGu9AABYvABA9TwA8C2+AICAvABAYL0A8JO9AACAugCAezwAQLu8AOA+PQCADbwAABE8AEBPvQBAmzwAgLy8AADRuwAAJj0AgPu8AKBcPQBAnzwAAFQ7AED3PADA0LwAkPq9AGBWvQAAMDsAANy8AGARvQDgWj0AAGq7AGC4PQCACTwAgAm9AIAyPAAALTwAgE88AICaPABAmTwAgFA8AGCZvQAAzjwAgNi8AACguwAAPTwAgHM9AACFvADAgLwAgEe9AICOvACgdb0A4Ey9AAD8OgCAHbwAAGY9AABSvQDQHT4AgHs8AKBgPQAA47wAAEK7AACCuwBA1bwAwDW9AACfPAAArbwAgK68AADeOwDAjT0AMKu9AABquwDg7z0AIMm9AECNPAAAXjwAQLM8AACVuwCgMr0AAAK7AABgPACA3zwAAP67AIAfPQBgIj0A8LO9ACCgvQBAijwAYDy9AEC4vQBAa70AwPW8AICsPACAMDwAACy9AIBTvABwir0A4CC9AAA/vQAAfbwAQLa8AECQPAAAlbsAgPi9AABoOwDAhr0AoEG9AIDlPAAAN7wAADY8AKBcvQAAEr0AQB+9AOAqvQAAuj0AcK+9AEAkPQDAj7wAQP28ABC9PQAArLwAgCO8AMAkvQDgUD0AgMi9AACkOwAAT70AoBq9AIANPACAcD0AAN28AABYuwDAOL0AgDA8AACouwBAfj0AAEm8AMCyvAAA1zwAgBk9AADXuwCgAD0AoCI9AECzPQDA3zwAAPC8AICpPAAA6zwAADA9AMCaPAAArLwAwIM8AICgPAAALz0AADI7AAC4ugCAtbwA4HU9AEAuvQAA7LsA4DM9AADwOwAA7TwAAGY8AOAhvQCAO70AwAC9AKBTPQBgmT0AQPs8AHCvPQDgdL0AABG8ACAGPQAgKL0AgFm8AGAqPQBgQ70AUI69AKCJvQDgxr0AwAw9AAAEOwBAPj0AAFk9ALCjPQAgLr0AwOC8AADkuwAApLoAIFA9AIDHPACQgr0AQNI8AMB8vQAA5TsAAIi7AIBmPQBQlb0AoHC9ALCBvQAwjj0AAAw7AADIugAA4LsAgHA8AAD4PACAIr0AACI8ALCQvQAgFD0AICU9ANCLvQCAPr0AwJk8AICxPAAwp70AgB88AOATvQAAQL0AYDU9AGBqPQBA5L0AAMc8AACrPQAAK70AcIs9AIACvAAAUrwAAJA7ACApPQCAcLwAoKe9AACfvACAzTwAAMM8AKBgPQCAiL0AIFo9ALDPvQCgfT0AAEe8AAAwuwAwuz0AAIM7AIBiPQDA9LwAAPc8AMDJPADAzrwAADi6AEAIPQAAfjwAgCi9AIAavACAvT0AIAU9AABbvAAQrr0AAAAAAMBtvQAAfLsAAKk8AMCOvQAAHjwAoBc9AGCtPQAALzwAQLi8AHCQPQBQjT0AoDO9AACwOgAAILwAAJe7AECZvAAAyDwAADM9AAC0OwBAIj0AgMs8AAD4OgBAhbwAgL68AACTuwDgLD0AQE89AIB0vACA/zwAgHa8AAAvPABAST0AENe9AACNvQCAxDwAgP48ANCdPQBA/zwAIGa9AECZPQAAELwAAK+7AABCuwAAAb0AYJk9AMAAPQCAazwAQKa8APCIPQDAMb0AgHO8AIDCPAAAnzsAYAE9AADnuwCAArwAACW8AAAGuwCgTj0AIG+9AAAKvQCAgbwAQIm8AGAZPQAAyTsAAC89AADHuwAAV7wAYDY9AIBOvAAA0jwAgHC8APCCPQBA3bwAANM7AAAnPAAAtLwAgPY8AEAjvQAAtDoAwNO8AAA0vACAMbwAAAU9AECvPABgD70AYHg9AIAfvQAAYDoA4Ho9AABhvAAAoD0AAMm8AEDCvABgeL0AoJs9AAAlPQCABzwAgOS8AGAtPQAA4LsAgEW8ACCfvQCADDwAgKW8AADTuwAAA7wAIHm9AABwOgAA+LwAAKG9AADsuwAAD7wAQKg8AOB1PQAA0TsAABA6AEAuvQCAXTwAAJY7AKA2PQBgGD0AIA49AEBXvQAAODoAAMC6AADQOgAAgDoAcJq9AMCOvADAxLwAAK07AOBBvQAAeDoA4CU9AJCFvQDAcr0A8Ki9AMDGPAAQo70AAOS6AKA+PQDA1TwAoH49AACQOwCgV70AwOU8ACCRvQAgRT0AgHe8ABC9PQCAmbwAACS7AIAGvADACr0AQPa8AMAqPQBQq70AAEo8AGASPQAgG70AAOM8AAABPQAQrb0AAJ+7ACBIvQBgAr0AgE89AID1PACAf7w=","chunkHash":"81c567cf5e5a68bf2a65ecc966b2f29c8782b5dd24ffa113ff92e2345b27cd6b"},{"text":"File: `output.txt`\n```text\n...\n\u0000C\u0000l\u0000a\u0000s\u0000s\u0000 \u0000C\u0000S\u0000V\u0000 \u0000p\u0000a\u0000t\u0000h\u0000:\u0000 \u0000d\u0000a\u0000t\u0000a\u0000/\u0000c\u0000h\u0000r\u0000o\u0000m\u0000a\u0000t\u0000i\u0000n\u0000_\u0000c\u0000l\u0000a\u0000s\u0000s\u0000e\u0000s\u0000_\u0000a\u0000n\u0000d\u0000_\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000s\u0000.\u0000c\u0000s\u0000v\u0000\r\u0000\n\u0000F\u0000i\u0000l\u0000t\u0000e\u0000r\u0000 \u0000b\u0000y\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000:\u0000 \u0000N\u0000o\u0000n\u0000e\u0000\r\u0000\n\u0000L\u0000o\u0000a\u0000d\u0000 \u0000v\u0000o\u0000l\u0000u\u0000m\u0000e\u0000s\u0000:\u0000 \u0000T\u0000r\u0000u\u0000e\u0000\r\u0000\n...\n```","range":{"startLineNumber":30,"startColumn":0,"endLineNumber":33,"endColumn":0},"embedding":"AIDtvACAEz0AQKw9ACCevQAAeDoAgFm9AKBdPQAAr7wAAN07AED5PABAKT0AYEA9AMClvAAAWLoAAIC7ACArPQBAAj0AgMc8AABEvACAuD0AgI49AEDEvAAA3zsAANg6ADCPPQCA7rwAgJ+9AABbvQAAUz0AYAk9ANCsvQCgIr0AgCY8AMD5vABAkLwAAAU9AOBBPQCAPbwAwL48AOAivQAAIDwAQI69AKDGPQBgVb0AEK49AAAvPQCAN7wAwKo8ADCZPQAAIDoAgB08AOBnPQCAYbwAQJM9AMDmvAAA/7wAgIc8ACB6PQBAmDwAQHm9AMAzPQCATDwAwHY9ACATvQAA6bwAQKk8AIC6vADAsjwAQH89AACAOwAAz7sAgE48AADluwDA0DwAAEA5AFCTvQAgVr0AwBC9AIDYvACgar0AgHA9AICRPACAVzwAAA68AACauwCAODwA+Di+AAAmuwDAhL0AQI69AIBBvAAA2TsAwO28AIBNPQAAfzwAADg7AKBgvQAAXLsAwK68AIDUvABgRz0AYCO9AMAePQAARjwAgCw8AOBYPQCALLwAELa9ANCJvQBAhLwAwJq8AMA9vQCgNj0AAGK7AFC8PQAAjjwAQOi8AMCwPAAAxjsAANM7AAAbPADAvDwAQJM8AEC1vQAAajwAALK7AAAcPACAiLwA4IY9AMAvvQAAAr0AIFy9AEDbvACA4LwAgBm9AEDMPACARbwAAEs9AAApvQCIFz4AgBc9AIBzPQAAuLwAACe8AAApPADAgLwAgHm9AAD8ugDgDb0AAAa9AADKOwDgKz0AoKu9AMD4PAAQ0T0A8N29AAA9PQCAITwAAFe8AIA1PABAf70AAAG8AECLPAAA5zwAwIY8AAAQuwDACj0AIF+9ANCjvQAAGrsAwFS9APDCvQAgLr0AQM28AAAgPAAA6TsAIA+9AKAXvQBwir0AgE+9ACAlvQAAbjwAAA68AAC7PAAApTsAcAa+AADrPADgJr0AIDe9AADDPACAorwAAGY7AABjvQDAvrwAwDu9AEAqvQDQuj0AQKq9AEDoPABA+rwAAIW7AHDbPQAA/bwAAHu8AOAYvQBA1zwAELS9ACATPQCgNb0AwPa8AADsPADAsTwAQDW9AABcOwDAjr0AQIC8AIB1PAAAYD0AwI+8AMDVvABAoDwAwFc9AADMugAgJT0AwOc8ANCdPQCALT0A4CK9AIBGPADAxTwAQNk8AAD+PACAerwAAEa8AKBJPQAASz0AgKC8AIADPABArrwAID49AABgvQCA6LwAoDA9AACPOwAABj0AAGI8AMANvQCAdb0AQIu8AMB6PQDAtz0AAB48ACBpPQDAkb0AgEW8ACAiPQDATL0AwLS8AIBYPQAAer0AwJm9AABwvQBw6b0AwPo8AAAhPABgTj0AwDk9AMDsPADAUr0AgDC8AABAuwAA4TsAgCk9ACATPQAAbr0AgKk8AEBzvQAAybsAANA7ACBZPQDwlb0AgCe9APCfvQAgRz0AALs7AABIOgCAz7wAgOk8AMCiPADgIL0AgH88AMAQvQAAIj0AQJY8AMCRvQDAk7wAQPk8AMCbPABAoL0AAIC4AMAAvQBAab0AgNg8AICjPQCgz70AgEU9APClPQAA2rwAUIE9AIAVvADAmrwAAFM8AGB+PQAAeLwAgJm9AMAKvQCgBj0AQIs8AMBUPQDgqL0AADU9AMDhvQBgpj0AAHC8AADwOgCwuz0AAJo7AIDOPABAhLwA4Ag9AACnOwCACr0AANC7AKATPQAAQzwAgEu9AABpvACgxj0AoE09AIA9vADwob0AgFm8ADCnvQAA5DoAAP87AMAqvQBApTwAIBY9APCfPQAApDwAQKm8AOCIPQCAUT0AAAy9AMCqPACgBL0AgAa8AAAOuwDA3DwAADs9AIB3PAAgDj0AQLM8AACkugAAMLwAAIw6AMCTvACgLj0AUIE9AAB6uwDAAj0AADo8AECpPADgED0A4Na9AKCtvQAAFDwAQPs8ABCbPQDgMD0AoEK9ABCAPQBAlrwAAFw7AACpuwAAzrwA8J09AOBAPQCA7jwAQPS8AGB8PQBAHL0AABu9ACACPQAAZrsAgMI8AADjOwAAkLoAwJK8AAA4OgBAbT0AAHi9AEAmvQAAajsAQO68AMAhPQAAJrwAABc9AAAVPAAACrsA4JE9AAAAOwBAjDwAwLa8AEBMPQAA5LwAAIw7AACkOgCAL7wAICU9ACCMvQAgA70AwB+9AECbPAAAibwAALk8AMARPQBAbb0AIBI9AIAOvQAAyLsAYD49AAAMvACgcj0AAFS7AACovADgi70A8IY9AIABPAAAajsAAKu7AAA6PQAAvLwA4AK9AADEvQAAqbsAACG9AADBvAAAC70AQJe8AECEvAAgKb0AcJW9AACIOgAAjTsAANs7ABCfPQAAoTsAgGk8AEAkvQDAtjwAALA7AAASPQBAFT0AIFo9AIBkvQCAETwAwCm9AACSuwAAgrsAgKG9AICgvAAA+LsAABS7AIA2vQAADrwAgGA9APCfvQBwor0AsKK9AMC/PACAlr0AAJc7AOAXPQAAyjsAQKA9AAANvAAA+7wAAEw7AED9vACAVT0AQM68ACCWPQCAp7wAAA48AGAKvQBA57wAYAi9AAD+PADgmb0AgLI8AAAZPQAA/bwAACA9AMDkPABAc70AwOs8AOA+vQAApbwA4AA9AGAQPQAAeDo=","chunkHash":"74625b13326588c97d58d35873c68dbb6793334e05c177ba45fede8360c44e00"},{"text":"File: `output.txt`\n```text\n...\n\u0000T\u0000a\u0000r\u0000g\u0000e\u0000t\u0000 \u0000s\u0000i\u0000z\u0000e\u0000:\u0000 \u0000(\u00008\u00000\u0000,\u0000 \u00008\u00000\u0000,\u0000 \u00008\u00000\u0000)\u0000\r\u0000\n\u0000R\u0000e\u0000a\u0000d\u0000 \u0000C\u0000S\u0000V\u0000 \u0000f\u0000i\u0000l\u0000e\u0000 \u0000w\u0000i\u0000t\u0000h\u0000 \u00004\u00009\u0000 \u0000r\u0000o\u0000w\u0000s\u0000\r\u0000\n\u0000U\u0000n\u0000i\u0000q\u0000u\u0000e\u0000 \u0000c\u0000l\u0000a\u0000s\u0000s\u0000 \u0000I\u0000D\u0000s\u0000:\u0000 \u0000[\u0000 \u00001\u0000 \u00001\u00002\u0000 \u00001\u00008\u0000 \u0000 \u00003\u0000 \u0000 \u00004\u0000 \u0000 \u00008\u0000]\u0000\r\u0000\n...\n```","range":{"startLineNumber":33,"startColumn":0,"endLineNumber":36,"endColumn":0},"embedding":"AIBUvADApTwAUL09ACBzvQCAu7wAkIy9AGAHPQAAhbsAAJ68AIDxPABgRD0A4Dg9AIDtvAAAdjsAAOk7AGBEPQCA/TwAQNc8AMAKvQDwoD0AAFc9AOABvQDAxjwAgC+8AKCVPQAAsLkAIJO9AMAfvQDgHD0AgLc8ABC3vQAgIr0AAAM9AGBWvQAAvLwAgCw8AICaPAAA8LsAgF48AHCBvQAA7LoAgO68APDRPQDAeL0A8KY9AEB6PQDAgbwAgCU8AKB+PQDAjLwAQIk8AOCMPQAAJLsAIHM9AABtvACAYbwAAEI7AOCePQCAnjwAYD+9AIAmPQAAhDsAIIs9AOATvQAABbwAwNU8AAAGOwCAfzwAYEY9AABsvACAP7wAAPQ7AIBlPACAizwAAJ87AHCYvQBgKr0AgMa8AMCZvADwg70AgEE9AABQOwAA/DoAYDy9AAC0ugDgBD0ASCi+AMCyvAAgZb0AwCa9AACIvAAAAjwAwL68AIC8PAAArLsAAHa8AIAtvQAAgTsAwMS8AADgvACASj0AYEy9AMABPQAAzTwAAFY8AEBNPQAA1rwAUNi9AMBEvQAAwrwAwJ28AMD7vADAGT0AAH67AKDoPQCAqzwAAPe8AABguwBAhDwAgNQ8AECdPAAAvDoAAAC6AGCOvQAAFDwAgFa8AABMPACgGb0AYGQ9AOAuvQCArrwAAHK9AAAEvAAAkbwAgOe8AIAKvAAArDoAIAE9AOBDvQD4FT4AgN88AIB0PQCgR70AABq7AABLPAAgBr0AsKu9AIBQPABANL0AIB69AIA7vAAgTD0A0Lu9AABQuwCA5T0AsNa9AMCnPAAAGLoAgDM8AAC7OwDAhr0AAEw7AICWPACAqDwAAAs9AAAfvABA3zwAYFy9AICmvQAAp7sAIFu9AODAvQAQhL0AQMi8AACQugDgJD0AwFC9AAADvQDQlL0AUJm9AIALvQAA0bsAAOW8AKBFPQAAMDsA8Py9AICaPAAgaL0AgA29AEDDPACAsrwAQNc8AEDtvABAk7wAwPC8AKBKvQCgoD0AYKC9AMDgPAAAaLwAQKa8AGDIPQAA1bsAAHq8AAA9vQCAxzwAkJu9AMDCPADgar0AAIK7AIDZPAAA0TwAgMC8AMCuvABgc70AAEY8AIB5PADAYT0AwKa8AADRvAAAlDsAAIw9AAAQvADA9jwAICE9AOCUPQDA3zwAwPm8AMC+PADAxTwAgPE8AAC/PAAAlLsAQJ68AIDaPADQgj0AAGy8AACjPAAA4rwAwAo9ABCHvQAAorwAQEY9AACOOwCAwzwAgGU8AAAUvQDAIr0A4B+9AGBGPQAwhz0AAAA4AJCEPQBAlL0AAFa7AMADPQAgFb0AwKC8AOBgPQAgXr0AALK9AODDvQBA+70AwIY8AECbPABgcD0AwEY9AOAUPQBgGb0AQKK8AAAYugDAyjwAIJM9AMDSPAAAYb0AgGs8ACAYvQAAYLkAAEA7AABbPQAQi70AwIa9AAB3vQBAYT0AgEI8AIA7vAAAFbwAwLU8AACwPACgQL0AQEk9AOB0vQDApjwAgBI9AFC2vQAA2LwAQBo9AMCuPACwtL0AgDK8AMAEvQCALL0AIBg9AKCGPQCw/b0AIAg9AMBrPQBA47wAoG89AIA+vADAlrwAAGM8AIBZPQAAPDsA4IK9AOBMvQCAgTwAoCk9AFCAPQAQu70AgHI9AOC/vQBglj0AQJW8AACHPACwgT0AwJq8AADOPABAzrwAAF88AOAUPQAgAL0AALq7AAAIPQAABLsAAEK9AADgvABw7j0AQDY9AAC8ugCAgb0AQLC8AGB3vQAAeLwAANy7AABZvQAAgzwAgGo8APC0PQCAO7wAgCa8AMCmPQDAUT0AoDS9AIDWPADgBr0AgAG8AAC1uwAAkbsAwCs9AAAkPABgaj0AAKQ8AIAIvAAAZbwAgCa8AAAQvACAdz0AQIA9AEDGvAAAxTwAAA08AAA0OwDAqzwAAJ+9AEC4vQAAEjwAoCM9ANCUPQAAWT0AwDy9AAB4PQAAnbsAgCq8AADzOwAgGb0AsI09AEBJPQBAzDwAwM+8AMAhPQDAo7wAgCm9AADDPADgBT0AIDE9AABqPAAAhbsAgBq8AACxuwAgcT0AILa9AICNvACAZrwAAM+7AOAlPQAAlLsAIAA9AABcOwAA8DkAwGE9AAATvABAqTwAgIy8AIC2PAAATLwAAEG8AABouwAgDb0AYDc9ACBlvQAAlLwAoB+9AMC5PABA37wAgJM8AIClPACggr0A0Is9AMDxvAAAdTwAwPU8AEDnvAAAWT0AAMi8AAAqOwBQrL0AQIU9AGAaPQCANDwAwJG8ACBePQCAArwAICe9APCJvQDAizwAALy7AAArvACAdrwAIBa9AAASvACAQ70A0M69AAC1OwBAxLwAgEs8ACBoPQAAzLoAADw8AEA0vQAAnDoAALE8AMCrPACwiz0A4CY9AKB1vQAAODwAwNi8AIANPAAAyzsAULa9AAAqvAAAjLwAAKS6AGA+vQAAa7wAAG09AMCBvQDAYr0AILK9AAAbPADwsL0AAMw6AOBmPQAAMDsAYIs9AACDOwBglb0AgDI8ACAevQCAQjwAAN+7AHC9PQCAnLwAAOI7AEDkvADA5rwAgCm9AACaPABAl70AgHY8AEDaPABgGb0AYEc9AACqPACwjb0AABs8AGAuvQDA8bwAQDY9AEB5PQCAN70=","chunkHash":"5475db4dba53f7b376645dbd03b5918fe5ebb1420a8cf5a66321e6ca68b58b3d"},{"text":"File: `output.txt`\n```text\n...\n\u0000A\u0000f\u0000t\u0000e\u0000r\u0000 \u0000u\u0000n\u0000c\u0000l\u0000a\u0000s\u0000s\u0000i\u0000f\u0000i\u0000e\u0000d\u0000 \u0000f\u0000i\u0000l\u0000t\u0000e\u0000r\u0000i\u0000n\u0000g\u0000:\u0000 \u00004\u00009\u0000 \u0000r\u0000o\u0000w\u0000s\u0000\r\u0000\n...\n```","range":{"startLineNumber":36,"startColumn":0,"endLineNumber":37,"endColumn":0},"embedding":"AEAqvQAAuzsAIKQ9ABCXvQAAdLsAwJq9AKAAPQDA/7wAAI07AIDlPAAA1zwAIHA9AAAVvQAAi7sAAGC5AGBtPQBAHj0AABg6AACWvACAlT0AIGc9AIAdvQAA+TwAQLq8AKClPQAAMTwA8Jq9AIAqvQAAqzsAYAc9ADDpvQBADL0AwLM8AIBNvQAAYLkAwJ08ACAwPQAA9DoAoCs9AGBLvQCAFTwAQF29ACDPPQCAQ70AkKk9AMASPQCALrwAALA8ALCOPQAAHrsAAGo8AIAZPQAASzwAwEI9AADMvAAAoTsAAMM7AGCbPQAADD0AgGm9AMBKPQAAVLsAsKw9AACGvACA0LwAAPI7AEChvAAAXjwAQGU9AACwugAAPjsAAAG8AIADPAAAMLsAgLA8AICLvQBAB70A4FS9AADEvADgb70AEJ49AMCdPADAAL0AoFm9AID2PAAAkLoAgDa+AECMvABgcb0AAJK9AAAgOgAAFbwAgPi8AIDUPACAYLwAACQ7AMBVvQCAXjwAwO+8AABQvADA/TwAYEu9ACAiPQBA1DwAAAK7AIB0PQBAqrwA8AW+AKBLvQAALjsAAKu7ACAqvQCAsTwAAKy7AHC9PQAA7DsAACC7AMC2PAAATDsAADy7AADwOwAAsDoAQLo8AMBXvQCAZTwAAGq8AICJPACAwLwAsIs9AFCIvQAAwTsAIIe9AADBuwCA7bwA4Be9AAB4PAAAPjsAYG09AAAbvQCQET4AQMw8AECBPQCALb0AAHe8AADTuwAAbbwAIF69AMC3PADAMb0AQB+9AMCOPACATD0AsMe9AGASPQBA0j0AwK29AKASPQAAMrsAANg6AACNOwDwgr0AAKe7AIBNvAAAHzwAwI48AIB7PAAAJz0AkKm9ADCNvQDAkzwAYCW9AKCivQDAYL0AAB+8AAB4ugCA/jwAAEW9AICavACwi70AABC9AKA5vQDA6rwAgK+8AMAJPQAAmjsA0AC+AGBfPQBgjL0AQIC8AAC3PAAApLsAAG48AADvvAAAEL0AAKS8AIDxvABQpT0AULW9AABjPACAGzwAADq8APDZPQAA+rwAAFE8AEBZvQCAPjwA0LO9AKA3PQAgYL0AwIW8AEDNPADAVz0AgOO8AICfPACAML0AAEA6AIA6PACgOz0AADq7AKAZvQDA7jwAYCY9AACAuAAAvzwAoB09AKCwPQDA/DwAYC29AACxuwDAoDwAwP88AIBpPAAAOrwAgCO8AAAePADgCT0AQOy8AIA+PACA9bwAoAA9AMB8vQAAD70AYEQ9AADMOgBAGD0AgKI8AIADvQDA7LwAAOG7AECWPQAQqz0AQIA8APCUPQAgP70AAJk8AADmPADgCr0AgK+8AIBOPQAAF70AUJ+9APCwvQCg9r0AwBY9AIB0PABAEz0AAP88ACCDPQCgE70AwAG9AAAYugAA/DwAsIw9AADdPADAWb0AIAA9AKAvvQAAJjsAAKS6AMDMPADga70AYD69AKA7vQBAYj0AgAK8AMDLvAAgDL0AALC6AKAUPQDAzrwAALA6AMA9vQCAMD0AwDw9AKBdvQBAs7wAgEw9AABDPAAgd70AAIw8AEBGvQDgQb0AYAw9AECQPQCg1r0AQIQ8AOBtPQAAILwAAIo9AADYugDAC70AgBw8AOBlPQCABzwAsI+9AMClvAAAlTwAQP48ANCWPQCAX70AMIk9ABDUvQCQnj0AQLK8AECzPABAsT0AAMQ6AEDvPABAirwA4BI9AICLPABAL70AADS7AKBVPQAA/TsAAAG9AMCwvABw1T0AgHI9AICdvABQqL0AAHi8AMCWvQAAgDsAAMW7AGB+vQAA7DoAYCg9AKCFPQAA7jsAQK28ABCoPQCgdz0AQBC9AIAiPABAYL0AAIe7AAAwvQAAkTsAwIg8AIAiPAAQiT0AYCM9AACSOwCAZbwAgAS8AABsvAAAXz0AQJ49AIBbPACANDwAAFi6AADyOwAgLz0AkO+9AKBAvQAAWDoAAME8AMCTPQAgdj0AYEK9ALCZPQAAvbsAAFi7AMASvQBAkLwAwIs9AIBYPQAA0jwAgPO8AAB0PQDA17wAAHe8AAARPQCACzwAoBY9AIBLPABAoDwAAHK7AABvvABApD0AcIG9AABguQAAULsAAGS8AGA4PQCArDwAANk8AADAOgAAizwA4B49AACgOgBAgDwAgLe8AEA2PQDA5LwAgFW8AAC9uwBAJr0A4AY9AKAjvQAAtLoAwMy8AAD0PADAnLwAQK48AEAJPQBAVr0AsIU9AIA+vQAA7LoAgPI8AABvvAAwiD0AAMi8AABnvABAer0AEIk9AACcPAAA2rsAAMG8AKAdPQCAG7wAALa8AGC0vQAAtzwAAFu8AAAoOgAAOL0AwKC8AADZPAAAUL0AALq9AAD5uwAAQ7wAwJc8AGCEPQCAhrwAQNE8AIALvQDAqDwAQJI8AOAFPQAAKT0AoDA9ACBJvQCAZjwAgIG8AIAOPAAAgDoAsKm9AIC6vAAAWLwAAHq7AIAIvQDA4bwAAKU9AECavQCgdL0AUJ+9AIARPADgR70AAIY7AGBEPQDAnbwAoK09AAB6PADAl70AANQ6AEDFvADADD0AAL27ADCXPQBAo7wAAL68AIAdvQAgIb0AoBu9AIC8PAAgvL0AgOg8AMDvPACQlb0AYFQ9AABhPADgQr0AAAS7AOA8vQBAzbwAwNQ8AGAvPQAAN7w=","chunkHash":"51c7c9cdb6067f51895e3d6565f3106ca21a5350478c30a79933ddd86df57d0e"},{"text":"File: `output.txt`\n```text\n...\n\u0000F\u0000i\u0000l\u0000t\u0000e\u0000r\u0000e\u0000d\u0000 \u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000 \u0000I\u0000D\u0000s\u0000:\u0000 \u0000[\u0000'\u00001\u00001\u0000'\u0000,\u0000 \u0000'\u00002\u00002\u0000'\u0000,\u0000 \u0000'\u00002\u00006\u0000'\u0000,\u0000 \u0000'\u00003\u00005\u0000'\u0000,\u0000 \u0000'\u00003\u00007\u0000'\u0000,\u0000 \u0000'\u00003\u00009\u0000'\u0000,\u0000 \u0000'\u00005\u00000\u0000'\u0000,\u0000 \u0000'\u00005\u00002\u0000'\u0000,\u0000 \u0000'\u00005\u00008\u0000'\u0000,\u0000 \u0000'\u00008\u00007\u0000'\u0000,\u0000 \u0000'\u00009\u00000\u0000'\u0000,\u0000 \u0000'\u00009\u00001\u0000'\u0000,\u0000 \u0000'\u00009\u00004\u0000'\u0000,\u0000 \u0000'\u00009\u00009\u0000'\u0000,\u0000 \u0000'\u00001\u00000\u00002\u0000'\u0000,\u0000 \u0000'\u00001\u00000\u00004\u0000'\u0000,...\n```","range":{"startLineNumber":37,"startColumn":0,"endLineNumber":38,"endColumn":0},"embedding":"AADIuwDAEj0A8Mo9ACBevQAALDsAAIa9AABfPQBAHr0AADI8ACAtPQAgWj0AAEc8AKAivQCAdjwAAJE7AMBmPQBAvTwAwL48AACBvABAuj0AoH09AIDEvACAALwAgGO8AACFPQDAq7wAkJm9ACAhvQAAhjwAAD88ADC0vQDABr0AAHo8AED8vAAALLsAwAo9AAArPQAA9DsAwMg8AIBivQAAALgAANC8APDSPQDgZr0AoIc9AMC8PABAsbwAgI08AHCaPQCAhTwAQIo8AABqPQAArrwA8II9AIAevAAAqjsAAOg6ACC/PQCACz0AAIS9ACB3PQAAzDwAsJQ9AED8vABgQr0AwM08AAAevAAgCz0AAGY9AACQuQAAJzwAAD48AABSuwAAYrsAAH47AECpvQCgHb0AIDq9AOAgvQBQiL0A4IA9AMCUPACAODwAwE29AIDavACAID0AICG+AABYOgBger0AQDC9AABCvACAJjwAgAu9AIApPQAAhjsA4BC9ADCbvQAAzzsAoCe9AAD7uwAgZD0AIBS9AEDWPAAgJz0AAMg6AKAiPQBAk7wAwNq9APCOvQCARrwAAFi8AKBmvQDA2jwAAN87APDWPQAAJj0A0IK9AOAHPQAAOLoAAFC7AMCpvAAA+rsAABM8AIBYvQAAAzwAAM68AADeOwDAP70AgA09AMBBvQAAULoAoHW9AACAOAAgEb0AIA+9AADRPACAUjwAgHw9AMAfvQCg3z0AwOQ8AFCOPQAAQL0AgC68AMDfPACApbwAAG69AABWPACA/LwA4D+9AADIugDgJT0AQLq9AIAzPAAQyz0AQNO9AMC5PABAjLwAANY8AECoPACgnr0AAAi6AIBLvAAAhTwAAJ07AID7PAAgAz0AoIa9ANCgvQAAqDoAACG9ANCcvQAwhL0AICu9AIBLvADAljwAQAu9AIAevQAQlL0AUIK9AIBSvQAAXDsAwMK8AKCAPQAAtbsA4Bm+AAAePQBgdL0AALm8AAAJPQAABTwAAIk7AABBvABACr0AQMG8AMAAvQAQtT0AcNC9ACAFPQAAXjsAgHi8ADDSPQCAv7wAgEs8ACAjvQCA2TwAAN69AAA4PAAgiL0AwOO8AAAjPQAABDwAAKi8AAAQPABgjb0AADG8AACJPADAMj0AwLG8AICMvAAA9DsAoGo9AABZPAAAuTwAgHk8APDJPQAACD0AQKO8AAACOwCAMjwAYAk9AAA4PABAibwAAHK7AIDmPADQhz0AAGO8AAACPACAh7wAADs9AGBPvQCAtrwAgFA9AIAlPAAAkjsAgBU8ACArvQDAJr0AYAu9AEB5PQAgsz0AAKw8AACXPQCAeL0AwKC8AIAbPQDAIr0AAFI8AKA9PQBA2rwAwLu9AGBXvQAg4b0AAL48AAALvACAeD0AAHg9AACiPQCgFL0AgPG8AADfOwAAazwAkKk9AEA1PQBAPr0AAGI7AKBavQAASTwAAOO7AGAmPQDgQb0AkKa9ANCXvQBAKj0AAEo8AECwvAAAuTsAgFE8AAASuwCgPL0AQNM8AKApvQDAHz0AgK88AMCTvQDgH70A4CM9AACZPAAgiL0AAJ07AAAHvQCAB70AgK08AEBePQBw1b0AQKo8AOBZPQDA0LwAIFU9AECUvACAlLwAADi6AABAPQCA7rwAMIe9AIC6vADA2DwAgI88AKBKPQAAj70AoFc9AEDMvQDQlz0AAIm8AABKuwAgaj0AwJC8AEA6PQAADbwAwKE8AICLPAAAJbwAwAy9AABvPAAA0DoAQCG9AICtvAAg0D0AIDo9AACOOwBArr0A4BW9AGCUvQAAGzwAAHy7AOByvQCAXzwAQCw9AMC8PQCAVbwAQKG8ADDGPQAQjj0AoCC9AAAAuwDAVL0AQJY8AIC2vAAAArwAgLs8AAAAOgCgYD0AAKg8AICqvABgAb0AgPm8AAAQOwCgKT0A4Gs9AAAmvABgDD0AgIA8AIAaPQAAxzwAcKq9AACavQAAUjsAwCY9AIBGPQBgZz0AwDa9ABCTPQAA5bwAAF88AKACvQAAabwAcIE9AKAnPQBgLj0AAFG8AMByPQBAtLwAQNK8AABpPAAAdrwAQPQ8AAD5uwAAuzsAALE7AAC/vACATj0A8IG9AIANvAAAojwAQMW8AOBQPQAAtjsAwIQ8AACOPAAAVrwAYBw9AABCuwBAzjwAwMy8AOAnPQBA0LwAAO67AICbPADArLwAQJk8AMBAvQAA7LoAIGO9AAAwuwAAzzsAIEY9AACjPACgp70AYFY9AEAyvQCAdrwAACI9AADzuwDgMz0AYBu9AMChvABgub0A4C09AIDFPAAAdrwAAKm8AOAyPQAAvLoAwIy8ACDIvQAARDwAANa7AAAYuwAALrwAwLu8AICbPACwob0AcMy9AACcugAA9DsAAHw8AOA/PQAAZjsAAC48ACBYvQBA5zwAQOg8AIAcPQBgNz0AgCk9AMA5vQCAKjwAAJ68AICvPAAAKjsAUMC9AAB1vAAAJrwAgNg8AKArvQBAhrwAgEc9AJCdvQAAG70AIGq9AAAEOwAAbL0AAFg7AMB3PQCAZ7wAwLg9AIB2vACAZb0AgCY8AKAJvQDgOj0AAF47AAC/PQAAoLwAACg7AOA7vQDALL0AgGq8AMCgPABAR70AwN08AIAWPQBgWb0AgOE8AAClPABAk70AAGK8AIALvQAASDoAwOA8AIAaPQAAu7s=","chunkHash":"a0200876d485ee4d32d98ab90c85a2979b9fd26c995522cf0d7ce74c859595dc"},{"text":"File: `output.txt`\n```text\n...\n\u0000F\u0000o\u0000u\u0000n\u0000d\u0000 \u00000\u0000 \u0000m\u0000a\u0000t\u0000c\u0000h\u0000i\u0000n\u0000g\u0000 \u0000d\u0000i\u0000r\u0000e\u0000c\u0000t\u0000o\u0000r\u0000i\u0000e\u0000s\u0000\r\u0000\n\u0000S\u0000a\u0000m\u0000p\u0000l\u0000e\u0000 \u0000d\u0000i\u0000r\u0000e\u0000c\u0000t\u0000o\u0000r\u0000i\u0000e\u0000s\u0000:\u0000 \u0000[\u0000]\u0000\r\u0000\n\u0000F\u0000i\u0000n\u0000a\u0000l\u0000 \u0000n\u0000u\u0000m\u0000b\u0000e\u0000r\u0000 \u0000o\u0000f\u0000 \u0000v\u0000o\u0000l\u0000u\u0000m\u0000e\u0000 \u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000s\u0000:\u0000 \u00000\u0000\r\u0000\n\u0000F\u0000i\u0000n\u0000a\u0000l\u0000 \u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000s\u0000:\u0000 \u0000[\u0000]\u0000\r\u0000\n...\n```","range":{"startLineNumber":38,"startColumn":0,"endLineNumber":42,"endColumn":0},"embedding":"AICwvADA8TwAALU9AOBpvQAAzDoAgD29AMBaPQAABr0AQJg8AIDJPABgZD0AQOo8ACAnvQCAxDwAAHw7AKBXPQBA1TwAANI8AICZvACwqz0A4Kw9AABavABAmjwAAOO7AEBhPQDAnrwAcJu9AIAzvQCAxjwAQOo8ALCqvQBAIr0AANC5AMD+vAAAfbwAYCg9AMAsPQAAirsAAEk8AGA0vQAASLoAcIi9AODVPQCAV70A4KE9AMDmPAAAFrwAgKQ8AJCiPQAAmDsAABA7AEBwPQBAurwAgIY9AICfvAAAvzsAAPE7AOCfPQCAIz0A4He9AEAYPQAAsjwAUKM9AECcvAAgQL0AoB09AIC8vAAAaTwA4F49AACVOwAA3DsAAC28AAAuOwAAtrsAAFC6AKC2vQAggb0AYHW9AOBFvQBAZb0AAIY9AAApPABAmDwAIBu9AIBnvABAuDwAoDO+AABeOwBgg70AAGW9AAB4vABgEz0AAC29AKBWPQCAATwAAOC8ANCFvQAAMLoAAAG9AAAjvADgaz0AoC+9AMDyPADAwjwAgCE8AEBJPQBgDr0AcOO9AMA8vQAAr7sAALy6AGCVvQCAID0AAD67AODMPQAAjTwAAAG9AAA5PQAAwjsAAIQ7AADFuwAAGLsAgAY8AABzvQAAYTwAAF68AIAyPAAAO7wAoDk9AID5vAAAM7wAIGu9AMD0vABAab0AwP28AAAvPQAApbsAQFM9AMAovQBQEj4AoBA9AGBCPQBA9LwAANS7AECaPAAAkDkA4He9AABEuwDA9bwAIBm9AAC7uwCABT0AELe9AADhPADQ2z0AgLS9AAC0PAAAE7wAAMo7AMCaPAAwmL0AAG47AIBCPACA0TwAgGQ8AAD3PAAAvzwAgG69ALCbvQAALrsAYBC9AFCXvQCger0AgBq9AABcuwAA/DoAwEO9AKApvQCgn70A4Eu9AMAvvQAAYDsAAOO7AMDHPACAETwAyBa+AABKPQBAL70AoAi9AAAtPAAAmzsAAHc8AIBGvQBAhbwAQPm8AEDbvABg2D0AELG9AAAKPQCA+bwAwKq8ADDkPQAAS7wAAJA5AGAzvQDgDj0AMNC9AACUPABgKL0AAOG8AOAhPQDA9DwAYB29AADoOwBQqb0AAIu8AADIuwDAYD0AgFW8AECavACAzTwAICw9AIANPABgKj0A4DU9ALCuPQBA2zwAgBO9AABmuwDA0jwA4Bs9AADgOQDAr7wAgBO8AOBvPQCAMT0AAI+8AECzPACAAbwAAHM9AMCCvQBA07wAoBk9AIB5PADAmTwAAB08AAA4vQDASb0AAAG8ADCKPQAQvj0AwKo8AEB0PQAgi70AAJ68AMDvPACAGb0AAFE8AOBJPQAQi70AkIq9AEBMvQBw+b0AICs9AMCCPACAOT0AAOk8AOBjPQCgIr0AABC7AIBBPAAAxbsAIHc9AIAnPQDAbb0AAMg6AGAGvQAAeDsAgCs8AAD0PACAcL0AAEi9AMCQvQAAVD0AAOs7AICavAAA+LwAQJg8AIBJPABgD70AAHM8AIAuvQBgMD0AQPo8AMB0vQCABb0AgAQ9AMDyPAAAk70AABo8ACAlvQDAOr0AwKE8ANCBPQAg1b0AAGI8ANCaPQCAerwA0Ig9AABwOgBAnrwAAKc7ACBRPQCgA70AoHa9AIA3vAAgCj0AgAI9AGAbPQCQnr0A4FM9AODMvQCAbj0AgEi8AMCCPADQpD0AAPG7AMA+PQDAhLwAwLQ8AABwOwDA1LwAgC28AADWPACAjjwA4C+9AAC/uwAgyT0AoCk9AIBUvADgob0AgMm8ACCfvQAAKjwAAFK7AIBevQAAJTwAoBc9AOCRPQDAkjwAQJW8AGCQPQDAYD0AAGO9AICmPABA+rwAAHg7AECQvAAAjTwAwPU8AAB/vADgaD0AgBI9AMCQvAAA0DkAgIy8AAAFvAAgGz0AYFo9AIBjPABgHD0AALs7AABuPABgKz0AMNq9AKCMvQCAGzwAQMs8APCGPQAgTj0AADm9ANCAPQCAWLwAAKc8AID3vADAgrwAgGs9AOAzPQCAQz0AAKS8AKCGPQDgFb0AgNm8AKAIPQAAYLwAgJ88AACiOwDAsTwAAN27AIBnvADAgj0AoIu9ACAzvQCAuTwAwDC9AMDLPAAANjsAgME8AICVPAAA3DoAMIo9AACOuwAAxDwAAN+8AIBBPQBA8bwAAFC7AAAcOwCAjLwAQN48ACCJvQAAxLsAwPa8AADePAAAtrsAwLU8AOAWPQAAJb0AAH88AMDEvAAA1bwAgHs8AMCmvABgoD0AgPa8AEDmvADwpr0AsJI9AABgPABA3rwAADG8AAAUPQAAlbwAwBG9ACDMvQAAMLoA4Ca9AAAWOwCAtrwAgEC8AADVOwCQsb0AQKe9AIBKvACAATwAAFQ8AJCCPQBAjTwAAKi6AABkvQDA1TwAAL47AIAzPQCgMz0AAFM9AAAuvQAAejwAAIu8AAAgPAAAGDwAgJ29AACSvABABr0AgHo8AOB0vQAAebwAYHE9ANCkvQDQgb0AgG29AADvOwCAo70AAIC7AABUPQAAQDkAIKE9AABoPADgBr0AgC08AACUvADAbD0AAFm8AABhPQAAm7wAwIE8AEANvQDgDL0AAP68AADlPABAab0AAP48AED3PABAWb0AgME8AMCvPADQkr0AANc7AABQvQAAUbwAwP48AEDnPAAAYjs=","chunkHash":"7bed808b849725239187efbd9db3479fff06aedaa9a0bbc92d7a9f828d2deb47"},{"text":"File: `output.txt`\n```text\n...\n\u0000E\u0000R\u0000R\u0000O\u0000R\u0000 \u0000l\u0000o\u0000a\u0000d\u0000i\u0000n\u0000g\u0000 \u0000d\u0000a\u0000t\u0000a\u0000s\u0000e\u0000t\u0000:\u0000 \u0000n\u0000u\u0000m\u0000_\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000s\u0000 \u0000s\u0000h\u0000o\u0000u\u0000l\u0000d\u0000 \u0000b\u0000e\u0000 \u0000a\u0000 \u0000p\u0000o\u0000s\u0000i\u0000t\u0000i\u0000v\u0000e\u0000 \u0000i\u0000n\u0000t\u0000e\u0000g\u0000e\u0000r\u0000 \u0000v\u0000a\u0000l\u0000u\u0000e\u0000,\u0000 \u0000b\u0000u\u0000t\u0000 \u0000g\u0000o\u0000t\u0000 \u0000n\u0000u\u0000m\u0000_\u0000s\u0000a\u0000m\u0000p\u0000l\u0000e\u0000s\u0000=\u00000\u0000\r\u0000\n\u0000\n```","range":{"startLineNumber":42,"startColumn":0,"endLineNumber":44,"endColumn":0},"embedding":"AIAgvQBAyjwA4JQ9ANCMvQAAwbsAoJi9AKBmPQDAkrwAAAk8AEDOPACgQD0AQCA9AED3vAAACrwAAFC6AOBgPQDAxzwAAFo8AAAyvACwuT0AQHc9AMDNvACAcDwAAEq7AFCHPQAAurwAUIW9AKAovQDgJj0A4AE9ANC9vQAgDb0AAMU8AAAxvQAAsrsAALo8AEBfPQCACbwAwIg8AGA0vQAAbDsAUJW9AMC+PQAATb0AkJE9AIArPQAA3LsAAOC6APCxPQAALrwAwIo8AIBFPQCAV7wAkIE9AIBmvAAAYrwAwMg8ANCHPQAAfTwAkI+9AIBhPAAAMjwAQIU9AEDDvAAA7bwAAIw7ACANvQCAZjwAQDw9AAAlvACACDwAAKA6AAAeuwAAHzwAAEK7ADCUvQAAWL0A4By9AAAivQAAgr0AoHY9AMDKPAAAsLkAwLi8AABLvABAoTwAGC6+AMCcvADgjL0AIDO9AECGvAAAZLsAgM68AMArPQAADzwAAJy7AAB+vQCADjwAgC+8AECHvABAOD0A4D+9AOAfPQAAljwAAJY7AEBfPQCAiLwAYNq9AEBBvQCAUrwAAAo7AGA8vQDAET0AAKu7AJDlPQBAzzwAwLa8AADvPACAYTwAAIm7AAAeOwAAALoAgJc8AFDFvQAAZjwAQIC8AACguQAA9bsAIFA9AGAFvQBA77wA4HW9AEDYvADABL0AIDK9AMAQPQAA1rsAAEM9AGAkvQBADz4AwBY9AABiPQBAUr0AAH67AABGuwCAI7wAsI29AIB8PAAACL0AABu9AAC8ugAgMz0AkM29AIDiPAAg4T0AEMC9AEDTPAAAaDsAAA28AMCSPADgXL0AAPQ6AACiPACApDwAgGQ8AMDPPAAArTwAUIW9ACClvQAAFzwAoFe9ADCZvQCgRb0AQLK8AIAePACAjTwAwE29AACcvABAgr0AoCa9AABcvQAAArsAgMi8AMDNPACAdDwA4P29AICgPADAdr0AgCS9ACAAPQAA0LsAAG08AIB9vQAAp7wAACi9AIA4vQAwwD0AQK69AKAePQCAI7wAAGg7ADDZPQCAm7wAwMW8AKAcvQDAyTwAUKy9AEDEPAAALL0AoAm9AMDxPABAszwAADm9AAA2vAAAeL0AgKm8AAAMvABgPD0AgJu8AICNvACAODwAQEA9AACZuwDAJT0AwOM8APCoPQCAEj0AIBq9AAAeOwDADT0AQPM8AAAkPADAqbwAAGO8AGA3PQCgNj0AgCi8AACtOwAA77wAUIA9AABpvQDAl7wAQAY9AAAfvABA5zwAAHs8AMAOvQAgRL0AwLa8AFCZPQBAlj0AAGQ7AEC0PQAQmr0AAOa7ACAlPQBgS70AwMa8AOAuPQDgYr0AMIy9AGBivQAw9b0AYBQ9AADvOwCAXT0AgHY9AKBAPQAAX70AQKm8AAAYOwAAiLsAIEM9AADvPACAgL0AAKM8AOB5vQAAdLsAAMY7AIACPQBgd70AwDC9AOB5vQAgXT0AACi6AAA2uwAAgLwAwJk8AAAuPADA87wAgJ88AOBYvQBAaD0AICI9ACCAvQCgI70AAP48AMCXPACAnr0AALy6AIAjvQCATr0AoDE9AFCCPQAA/r0AwM88AHCSPQAA7LwAoGI9AACluwAASrwAgHc8ACBlPQCAfrwAAKq9AICnvABgFj0A4CI9AKAnPQAwk70AoFA9AEDavQDQkD0AgES8AABEuwBApT0AAP47AEAePQAAcLwAQAY9AACeOwCgRL0AQLu8AIA8PQBAvDwAoDy9AACVuwCA0D0AAH09AIAavACQsL0AgGW8ANCGvQCAgLwAADc8AEBuvQAAWTwAQEE9AECXPQDAuDwAACK8AHCrPQCARj0AgBS9AACqPADAN70AgDO8AACfuwBA2jwAoEQ9AACSOwAgOj0AALc8AAC7uwAA0bsAQK28AIAAvACgOj0AAHg9AADQOQCAmzwAAE48AIAgPACAMj0AcNu9AECBvQAA5DsAYBs9AOBNPQCAHz0A4Ie9ACCUPQAAYLkAAMO7AABcvACA3LwA4KY9AMASPQDAtzwAQKy8ABCCPQDA+7wAAOS8AIDIPAAA/DoA4AA9AAA8uwAADbwAAGC8AIBovAAAMz0AcJ29AECrvAAACLoAgAC9AIC8PACAN7wAwOg8AAD0OwAApLoAIGk9AADwOgDAwzwAwBi9AMBDPQBAybwAADq7AACYOgDA1LwAwCE9AEB7vQBAAb0AgA+9AICXPACAjbwAgIs8AADUPACgTr0AoC49AOADvQAADLwAgCM9AABtvADAZz0AAPO7AADiuwAAkr0AoIg9AABuPAAAMjwAAAq8AGALPQCAhrwAANC8AGDKvQAAgLkAoA29ACADvQDAyLwAgCO9AADaOwCgGL0AsJq9AABCOwAA/DsAwPI8AICsPQAANzwAAH48AAAnvQCAfjwAACw8AMAQPQAAAj0AAG89AMBAvQAA5LoAgNm8AICbvAAAFTwAQK+9AABpvAAAmrwAAIi6AAAxvQCABbwAQHE9AECqvQAgbb0AAJG9AAADPADQwb0AAJA5AIADPQAAPTwAYJ89AMCdPABAPb0AACa8AEBIvQAAXD0AQLa8ADC3PQAAmLwAALK7AAAnvACgF70A4CO9AIDzPAAAi70AgIo8AID8PACQiL0AADE9AMAJPQDAq70AAI87AGBsvQAgAL0AAAw9AIDvPAAAhrw=","chunkHash":"2f0ae3e4eeea48872abcf6f1d2dc0decb293e8155d906a19228400b831335a83"}]},"file:///teamspace/studios/this_studio/requirements.txt":{"hash":"8e40a8426866eb35bc3c4b9ec4520eb4c9173fee22463bb39e720607623e4b8b","entries":[{"text":"File: `requirements.txt`\n```text\ntorch>=1.7.0\ntorchvision>=0.8.0\ntifffile>=2020.9.3\nnumpy>=1.19.0\nPyYAML>=5.3.1\nargparse>=1.4.0\nlogging>=0.5.1.2\ntqdm>=4.50.0 \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":8,"endColumn":0},"embedding":"AKAZvQBgfb0AIFE9ABCCvQCAUrwAAMu7AADgOQAAdrwAMNa9AOAkPQBAijwAIGk9AOBqvQCgK70A4AI9ACCnPQAADbwA4Ic9AIAqvQAghz0AAHQ8AMCkvAAAubsAgBK8AKCqvQCAEjwAgC48AABtPQAAfzwAwAw9AIBLvQBARL0AgPq8AACzvADAd70AgDW9AID3PADAwTwAgEg8AIBPvQAAmLsAgNa9AADgOgAAV7wAAHq7AMClvADAlrwAAPs8AMCZvADgYr0AwP68AMBFvQAgjL0AgJY8AOAlvQAgPL0AAPO7AIAXPQAApDwAwKG8AADcOgBAWL0AQHG9AEDXvAAApTwAgNM8ACAlvQCwpr0A4Aq9AGCavQBgi70AACQ7AIC+vACQ2r0AgCc8AACmvACAx7wAwAc+AOAOPQAgub0AAEG9ACBrPQDwob0AgGw8AEDUvACAk70AEPC9AECiPAAAJL0AACi8AABmvQDAyDwAIFO9AGA7PQBAv7wAALu7AMBCPQCA+LwAAPY7AOA5vQAAWLoAIAM9AKCBvQAArLsAYJE9AACjPACgWD0AEJu9AIDFPACgTj0AEKy9AMDpPAAgTj0AEK09AADBvAAAxLwAAAI8AAAWuwDA/7wAwNK8AAArPABAwbwAAIE7AICTvQAAfD0AgAu8AECaPABAVb0AgDC8AEBNvQCgC70AoLS9AEDJPQAAQLsAgBC9APCPvQDAgrwAIB49AGAXvQBgfD0AAKU7AAAyPADAs7wA4B09AIAVvQBA4rwAABw7AACougAADL0AICE9AACcOgCA0DwAII+9AECFPABAhzwAQAe+AGA9PQBQzz0AgKk8AEA5vQBAj70AAPC6ACAOvQBART0AQLY8AOA7vQCAQ7wAAPs7AADWvAC4AL4AAAM9AIBlvQAAJTwAwBG9AOBIPQCAOTwAIKG9AADeOwAA6DsAgKG9AIAGvQAANrsAAPO8AKCNvQBgcb0AgAm9AEDlPAAgPz0AAKC6APCHPQAAQLoA4Iw9AMBWvQAAarsAgME8AIDZvACAOj0AQBi9ACAMvQBArzwA0I+9AGBYPQAAk7sAAFy7AECuvACgxb0A4HC9AGACvQDwkL0AAFC9AACJuwAAizsAACA9APCYPQCAajwAgHK8AICKvACAKbwAQPi8AAAMPADAmjwAgFU8AAD4PADAyDwAYAq9AICBPACAaTwAAGq9AIBJvADgZT0AIJe9AABpvQAgBL0AgJs8AACgOwCQlb0AAIO7AAD8vAAACrwAYCC9AACaOwDAsLwAAK07AAAZvABgPb0AgA68AEA9vQBgUL0AQOI8AIBZvADAYj0AYBc9AAA0PQDAO70AYAY9APCJvQBgJL0AANO8AGBQvQBgWz0AwGq9AMDZPABgC70AgB68AABmPAAgJj0AQOK8AHCMPQAAGLwA0Ls9AKAVPQDgjD0AkKY9AMCmvACgRL0AIGs9AACzuwAAGDwAAD89AAD3OwAASLsAgKM8AMD0vADA1jwAgHU8AMAfPQAAcjwAALi7AADbOwAgpj0AQFQ9AAAQvACAUjwAgIq8AEDEvAAAaLoAYGI9AAAivADAeL0AgB29AABfvQBAQj0AgI+8AGAYPQCghr0AgOE8AMB0PQBAxLwAIAO9AIDcPADgPr0AwL28AMAkPQAAOjsAYFO9ACAEvQDgdr0AgGa9ABDEPQCAEbwAALS6AHClvQDALD0AgFo8AECCvQAAkbsAwCQ9AMBuPQAAAjwAQFO9AMDTPABQgT0AYJk9AIAevADA8bwAAJo7AABWuwDwzD0AAIC4AIBNPQAAfL0AQMG9AOCTvQCA/DwAoDG9AACIvADAk7wAgIS8AOCUPQAAQLkAwN48AABnPQCAFDwAAN67AKCNvQBAL70AwBK9AIAFvAAwgL0AAPc7AGBFvQAAijsAAFe8AIDPvAAAbzwAAM08AMBLvQCgA70AAIM7AIAivABgKT0AALI7AIDVvAAAADsAcLW9AABWvAAAqDsAAAc9AAAZPQAAijsAABw8AEAMPQCwiz0AACI8APCavQAAm7wAAHM8ADCPvQBAwzwAYAc9AKBbPQAAqbsAsMG9AABkOwCgD70AAMU8AAD1uwAgiT0AoFY9AIArPAAAvbsAgEm8AABcvACAlzwAwJ28AICzPQBAUT0A0Mo9AMCPvAAgHr0AQJI8AIBuvQCABbwAgO+8ACBnPQDwjb0AAD47AIBAPQDA7bwAwG89AECCvQAgtz0AYDy9AED6vADAQL0AQD89AADHPADAmr0AoJo9AGBQvQAAzbsAEJq9AEDoPACgA70AAMm7AJCmvQAAPDsAADo7AIAJPQCAF7wAgFy9AMAVvQCATj0AgGc8AAC5OwDAijwAALC6AMAcvQDQiz0AQKQ8AMDevADAK70AAIU7AKCUvQDAvjwAYIm9AECPPQDgXb0AQOk8AEAzPQCgOT0AwA69AIByPACQiT0AQI09AMAnvQAAMj0AAGQ7AACAOACAJ7wA8Io9AIBEPQCAnbwAAD28AAAWuwAAorwA4Fg9AAD1OwAATLwAgPq8AAByPADARz0A4GG9AGAjPQDAwjwAUN49AACbvACAj70AAKi6AABnPABgcb0AQMA8AADUugCAdbwAAHg8AAARvAAApr0AAO47AADNuwBgWb0AgKi8ACCQPQCABT0AAIQ8AACxOwAA+LsAACq7AIC0vACAQzwAIFM9AAD8uwAAXjw=","chunkHash":"013107167f51dd4cada61250856247bd80da5f63edeca1a511d87b627a9203ea"}]},"file:///teamspace/studios/this_studio/model/vgg3d.py":{"hash":"3e709bd3ce4f54799c6e988846ee603d1603762a90682f445f74be6f49cc7b6e","entries":[{"text":"File: `model/vgg3d.py`\n```python\n#...\nclass Vgg3D(nn.Module):\n    def __init__(\n        self,\n        input_size=(80, 80, 80),\n        fmaps=24,\n        downsample_factors=[(2, 2, 2), (2, 2, 2), (2, 2, 2), (2, 2, 2)],\n        fmap_inc=(2, 2, 2, 2),\n        n_convolutions=(4, 2, 2, 2),\n        output_classes=7,\n        input_fmaps=1,\n    ):\n        super(Vgg3D, self).__init__()\n\n        if len(downsample_factors) != len(fmap_inc):\n            raise ValueError(\"fmap_inc needs to have same length as downsample factors\")\n        if len(n_convolutions) != len(fmap_inc):\n            raise ValueError(\"n_convolutions needs to have the same length as downsample factors\")\n        if np.any(np.array(n_convolutions) < 1):\n            raise ValueError(\"Each layer must have at least one convolution\")\n        #...\n```","range":{"startLineNumber":16,"startColumn":0,"endLineNumber":24,"endColumn":0},"embedding":"AACZvABA5LwA8Lk9ACBVvQAAtrwAYB+9AICrPAAAa7wAANu8ACBrPQCA3rwAgEG8AOArvQAAB7wAwOW8AECpvACgLb0AwCE9AKB1PQCgWz0AQIM8AMCavADA+TwAAEe8AMAMPQAATjwAQGI9AADpOwBAlTwA4GC9AACTOwBgDL0AkMC9AABwvQBA6r0AANQ8AIAPvACgXj0AAKu8AAC5PQAQiz0AwFu9AACdvACAaT0AYF89AIAyvADgUr0AIBQ9AKB2vQCgoT0AAGi7AKAFPQCAtrwAAMk8AMDKvABgEj0AALA6AJCdvQAAhDsAANC7AAB8uwCQrr0AQIE8AACIPAAARLsAAGS7AKBVvQAACrsAAIS8AFC1vQCgxL0AgBW8ACAmvQAAnLwAQMY8AMBUPQAABLsAwGU9AOAavQAAEDsA4DQ9AACbOwBghz0AgCA8AECbvADAdb0AgJ+9AACZuwAgML0A4AO9AGAaPQCAHb0AgGq9AACkPQAAirsAoFw9ACC0PQDghL0AgFM9AMBAvQCAmbwAwPw8AGAKPQDAqDwAADO8AMDVvADQiL0AgIs8AABrvAAAZj0AwKQ8AAAfPADgTD0AwNe8AAC5OwAA87sAAKK8AAAoPQDgX70AYDS9AMDKvABAjrwAAIa7ANCNvQCAQD0A4Fg9AADdPAAADrwAAJS6AADMPADgKr0AQOs8AOCHPQDgPb0AoCu9AECCvQAw3b0AYJM9AECqvADAnzwAAKa7AMCrvACAsrwAQCC9AACgugAw0T0AYEu9APCNPQDAvbwAwNw8AMBZvQAgUT0AACA8APDQvQCQq70A4BG9AAAAPADQyj0AkLI9AEDvvABAnrwAALY7AOAPPQBAs7wAQJW9AMAOPQDgmr0AgEO8AMDuvABgI70A8JQ9AAC1vAAgMz0AwJS8AKBvPQDACr0AwKS8AADCvACAabwAcJu9AAAMvQAA7DwAwNW8AADevAAAMTwAIBg9AMAZPQBA+bwAgDM9AAC+PABArrwA4BY9AECpPAAA1DwAQBc9AED9vACA2TwAINe9AKB3PQAAsrsAwMS8AOBnPQAgC70AoJ69AIAVPQDQw70AIAy9AAAPvACgF70AALU7AAAWOwAgPr0AgD09AMCKvABQg70AgAu8AMCzvABgWz0AgFs9AIBOPACAG7wAoFY9AABZvABgCz0AAJW8ACAlvQAAjbsA8LC9ACBMvQCAND0AADm8AMBjvQAAkrsAIBe9AGAOvQCARb0AgAE8AADnOwCAQbwAgIo9AAB+PAAggj0AwCg9AIA4PADAKD0AAEs8AIBnPADAzrwAAI87AABxPQDALT0AYHE9AGA6vQAAtbwAAEa8AEAoPQBwkr0AIGU9AAC+vABAQb0AgJ08AMC7PABAIL0AwOg8AKBpvQCAsLwAYE+9AACXvAAAdrsAQIg8AIAiPQBAmr0AAH48AACJuwAAVbwAQBE9ACAKPQAgJz0AkLo9ACAbvQAAADkAgJ08AEC6PADA6T0AgC+9AADIOwDAHb0AgE88AECRvQCgU70AAEQ7AAA1vQDgEL0AAIu7AIBKvADAnTwAAMS7AEDsPAAADj0AgLO8AIDAPABAiDwAgFW8ABCuPQAAdL0AAAE9AIAHvADgHj0AAIg6AADmOwAAkrsAgDw8AAAwPQAA9LsAAK67AMCmvABA4rwAQEG9ACBFPQAAcrsAAJA5AAC4vAAAwTsAwL48AACsvAAAgjsAgAS8AEBJPQAA8jwAQPO8AACqOwDA7TwAAPw6ACAmvQAAdrwAAJe8AJDMvQCQ1j0AIIg9AACuOwBQLr4AACq7AACqvACAwjwAwIO8AMgYPgCAi7wAwLc8APDMPQCAxTwAAPq7AEDkPAAArDwA8Ji9AIAqPABwiL0AgBi8AED4PAAgYb0AYAg9AECXvACAO7wAQLQ8AAAePAAAcLsAAKw7AMD9vAAAGb0AwL28AMDQvAAAhbsAoDw9AHCNvQAAXjsAoG69AFDyvQCArjwAoDk9AEDuPAAADLsAAJQ8AIBwvADQqT0AYF69AADmvAAAIr0AwME8AKBEvQDAjr0AAGc9AECLPACA2bwAAOy7ADCLPQBA1DwA4IG9AOBmPQDgE70AAPo7ADCxPQDA5zwAQC09AABwOgAA07wAAE08AMBpPQBAnz0AgIc9AIAQPABgAb0AAJa8ALgevgAAi7wAgJ68AMAWvQAAIb0AAC67AMBpvQAAjbsAkMo9AACfPADgfz0AAEq9AECDPAAAIzwAAJM8AGBBPQDAGL0AALQ6AAAcvADgIL0AAGa7AABlvAAgvj0AACw8AKBAvQAAKDoAAEe8AIDDPAAAxzwAgGE8AMCavADAJr0AwLS8AADQugDAwLwAQDC9AABSvACAzLwAYFo9AIB8vAAgMb0AACc8AOBAPQDATT0AcMq9ADAFPgBAGD0AgMk8AABRvQCAXj0AwPK8AHCIvQAAkjwAICG9AADAugAAwrwAgAY8AHCJPQBAiLwAgKG8AACuuwDAVj0AAHo8AABgOQCAXL0AQDu9AADEOwBAqjwAgBE9AGBWPQAAuTsAACA5AOBMvQAAGDsAMKk9AICqvQBgb70AgCw9AAAHPABwgr0AgEU8AACTuwAAULwAQKQ8ACAnvQCA97wAAI28AECJvACgAb0AAFc9AIBKPACAnTwAoG+9AAAePADgfb0AQIU8AAABPQAAe70AgOY8AEDMvADgkD0=","chunkHash":"fe8e337766fd8fa6a0e498312e5856ad120bc0dead56f8332a6833b97b75f37f"},{"text":"File: `model/vgg3d.py`\n```python\n#...\nclass Vgg3D(nn.Module):\n    def __init__(\n        self,\n        input_size=(80, 80, 80),\n        fmaps=24,\n        downsample_factors=[(2, 2, 2), (2, 2, 2), (2, 2, 2), (2, 2, 2)],\n        fmap_inc=(2, 2, 2, 2),\n        n_convolutions=(4, 2, 2, 2),\n        output_classes=7,\n        input_fmaps=1,\n    ):\n        #...\n        current_fmaps = input_fmaps\n        current_size = np.array(input_size)\n\n        layers = []\n        for i, (df, nc) in enumerate(zip(downsample_factors, n_convolutions)):\n            layers += [\n                nn.Conv3d(current_fmaps, fmaps, kernel_size=3, padding=1),\n                nn.BatchNorm3d(fmaps),\n                nn.ReLU(inplace=True)\n            ]\n\n            for _ in range(nc - 1):\n                layers += [\n                    #...\n```","range":{"startLineNumber":25,"startColumn":0,"endLineNumber":38,"endColumn":0},"embedding":"AIDxvABAAr0AUKY9AEBtvQBA2bwA4Cq9AMCnPAAAArwAgCC9AMATPQBgB70AAIq7AIAIvQAA9rsAwLq8AIAKvACAxbwAYBw9AABtPQDAYz0AwNM8AEC7vADAID0AgGO8AAC2PADA0DwAgB89AACpPAAARTwAgHy9AAA3vADgGr0AYKu9AABTvQAw4r0AANU8AAB8vACgfj0AAP67AADDPQDAjj0AoFy9AIDlvAAAUT0AoEI9AACPvADAYL0A4Bc9AMB0vQBAiz0AAJG7AADWPABA4rwAwIg8AEDZvABALj0AAD+8AGCevQAAoDoAAK47AMCrvADwnL0AAJs8AIC+PAAAgLkAgAE8AEBkvQAArjwAAAS8APCgvQDQwb0AgE+8AAAlvQCAvLwAgL08AOBrPQAAnLsAYDY9AGAdvQAAhjsAgGY9AADAuACwgj0AwIQ8ACAJvQCggb0AkIW9AAC4OwBgdL0AAIC8AKAfPQBgPb0AIGa9AGCYPQAAajsAwG09AGC8PQDgWL0AoFk9AOAIvQAAE7wAgLE8AIAfPQAAsTwAAFQ7AEDvvABgar0AAMA8AABtvAAgbT0AAJI7AAD/OwDgRT0AALu8AICOPAAAqDoAgGC8AABfPACAQL0AQGC9AAC2vAAAVLwAADg8AECHvQDAvjwAAHw9AACCPABAh7wAAG67AACfPABAP70AoAQ9AFCAPQDgZL0AwAi9AEBqvQAQzL0AkIM9AIDGvAAAizwAgA08AMDMvAAAZLsAQCG9AAABvACQ0T0AgFO9AECiPQBACr0AAOQ8AMCAvQBgbj0AwJA8AFDIvQDQtL0AAPC8AAAAOwBgtj0AULE9AADvvAAgJb0AAMC4AEANPQCAtLwA0JK9AOByPQDApL0AANW7AADcvADAa70AkJ09AIBDvACANj0AQKC8AGBXPQCAtLwAAFG8AAB8vACAk7wAoKW9AIDQvADAAj0A4DO9AIDIvAAAmDoAgJE9AID4PABA8LwAAAk9AMAEPQDAt7wAYD09AIBsPAAA2jwAgP88AEDrvADABj0AALm9AFCMPQAAorsAwOW8AICHPQDAVr0AcJK9AMBMPQDAqL0AQPm8AIAfPADAAL0AACA7AADwOwAA/7wAoFQ9AADcuwAwhb0AgIi8ACAfvQCAbT0AoFQ9AAAFPAAAwLgAwFw9AABFvACAET0AgBa8ACALvQDAsbwA4K+9AGAOvQAARz0AANa7AOBavQAA3bsAgNO8AGAvvQDgPL0AANu7AAA0uwAA+zsA0JY9AECLPACQlj0AQEE9AABCPADAPD0AgGs8AEDkPACApbwAACQ7AMBsPQBAKz0AYIc9AIBrvQCAs7wAAD68AOA+PQBQlr0AwGQ9AIDgvADgJr0AAH48AECmPACgKL0AQLQ8AMBCvQAAVLwAADW9AAC3vACAF7wAAEw8AADAPACgir0AAGI8AACROwCAD7wAgF88AMCdPABAHz0AQMw9AGAFvQAAZDsA4Aw9AMAUPQBQvj0AYCG9AICAPAAgNb0AQJ48AEB3vQBAbL0AQJM8AKBmvQBA6rwAACC8AABVvADApzwAAGa8AAC9PAAgIz0AwLm8AECbPAAAljwAAPC7ALDEPQAwhb0AwOg8AMC7vADAKz0AgC88AADEugCAhLwAACU8AAAPPQCAWLwAAAG8AMCZvABgIb0AwO28AMBZPQAA/DsAAFy8AIA/vACAgzwAQNM8AIAqvAAAGrsAANW7AMA7PQDAKj0AwOq8AACZOwDA9jwAAOG7AOAEvQAAzbsAAGO8AADHvQCA5D0AwH49AIAgvABwI74AAMs7AIDEvACAYzwAQIi8AKgYPgDA0bwAwMQ8AFDFPQAARTwAAMm8AIDMPABAvTwAQJW9AECOPACgVb0AABa8AICXPABALL0AgBE9AECPvAAAiLoAgLQ8AACmuwAACrwAgHY8AGAEvQDAtrwAwNq8AADOvAAApDoAAEE9AHCWvQAABjwAAFG9AJDvvQBAsTwAYA89AADVPAAAFjsAAJM8AADpvABQkz0AICC9AIDJvAAga70AQL88AOBuvQDQgr0AkIM9AAC1OwAALr0AAG67AMBuPQBAGT0AAJy9AEBDPQBgS70AgIY8ACCcPQAgDj0AIBE9AAAKPADgH70AgAg8AGBwPQAwqj0AYEA9AACJPABAuLwAAOW7AJgnvgCAIbwAgLW8AOBrvQDgDL0AwKS8ACBWvQCAF7wAoMY9AIB4PAAwkz0AgDm9AECtPACAVjwAAN88AKBLPQCAvrwAADI7AACZOwBAGr0AgCo8AADNvACQxD0AAFQ8AGAIvQBAsDwAAMC6AIDSPADAvTwAgI08AIByvACAc70AAJe8AADBOwCAAb0AoEW9AACQvACAH70AIGw9AIAhvADAIr0AACs8AKBFPQCAMD0AsMS9AJgNPgDgCT0AgAg9AMAyvQDAZz0AwK68AGCfvQDAjjwAgAa9AIAHvACA3LwAgH88AMCePQAA/7wAAJK8AABCOwCgRT0AACc8AADZuwDgKL0AIEG9AAA8OwBApjwAwFE9AGBUPQAAALgAgH28AGBVvQAAHLsAII49AJCzvQBgI70AQGg9AICgPAAgaL0AwLc8AAAAOQCASrwAoBw9ACBHvQAA3rwAgNy8AACqvABABr0AwG09AIApPQBAtDwAoGG9AADdPADAUr0AAM87AKA+PQDAeb0AwIc8AEChvADgkT0=","chunkHash":"04e5f98f52b8e127d3ae235a4132dfe41488093bb4db7e2957f68c744afb7d4c"},{"text":"File: `model/vgg3d.py`\n```python\n#...\nclass Vgg3D(nn.Module):\n    def __init__(\n        self,\n        input_size=(80, 80, 80),\n        fmaps=24,\n        downsample_factors=[(2, 2, 2), (2, 2, 2), (2, 2, 2), (2, 2, 2)],\n        fmap_inc=(2, 2, 2, 2),\n        n_convolutions=(4, 2, 2, 2),\n        output_classes=7,\n        input_fmaps=1,\n    ):\n        #...\n                    nn.Conv3d(fmaps, fmaps, kernel_size=3, padding=1),\n                    nn.BatchNorm3d(fmaps),\n                    nn.ReLU(inplace=True)\n                ]\n\n            layers.append(nn.MaxPool3d(df))\n\n            current_fmaps = fmaps\n            fmaps *= fmap_inc[i]\n\n            current_size = np.floor(current_size / np.array(df))\n\n        self.features = nn.Sequential(*layers)\n\n        self.classifier = nn.Sequential(\n            #...\n```","range":{"startLineNumber":38,"startColumn":0,"endLineNumber":53,"endColumn":0},"embedding":"AKAWvQBA+bwAALk9AABVvQAAo7wAoFC9AIBhPAAA3DoAwAu9AMAKPQCA/LwAAE68AIDkvAAA4LsAQNe8AAALvABAmLwAQFI9ACBkPQCAhj0AgKo8AECOvABgCz0AQKG8AEDdPAAAGzwAwOw8AADTPAAA8DsAgFu9AECUvADgEL0AUJ29AEBuvQDw3r0AgFI8AAAqvACwhz0AgIG8ADDRPQBggD0A4Gu9AAAlvQDAGT0AQC09AAAsvAAgKL0AALI8AABUvQCgiT0AAB28AMC7PABA7bwAgJ48AAAavABgKT0AAPw7ABCXvQAAGrsAAMa7AMC6vABgnL0AAIK7AIDnPAAAujsAAIM8AABFvQCAzTwAAAu8AICYvQAAtr0AQKK8AIAYvQAAe7wAICM9ACBAPQAAkLwAwH09ACAhvQAALTwAgG09AAD8OgDgaz0AQLE8AMBBvQDQjL0AoIa9AADGOwBAar0A4AO9AKAKPQCgIb0AQGi9AACYPQAAPDsAQDM9AMCxPQAQjL0AQFw9AEAIvQAAILoAgKY8AIAzPQDgEj0AAMs7AAArvQDAc70AgEs8AIBXvABQkD0AgF48AIA1PADgMz0AAMW8AACHOwAAgLoAALm8AADxOwCAWL0AYDq9AIBlvACAtLwAAFA7ADCMvQCAaTwA4Fo9AADCPABAv7wAgJa8AICEPADAPb0AwLw8AEBvPQAgS70AwO28AJCFvQAA0r0A0JY9AADdvABAiTwAAIA7AMCHvAAAsLkAgBa9AIBNvABQuz0AgDq9ANCWPQCgLr0AQPY8AECCvQBAgj0AAJA8AFDJvQDQtr0AwNS8AIBIPABwtz0A8LA9AADbvADAZr0AgB68AICrPABAjrwAQH69AKBrPQBgmL0AwK68AMC3vACgjb0A4Jg9AABhvADgLj0AgLa8ABCJPQCAlbwAQKW8AICBvACApbwAgJ+9AEDdvAAAsTwAYDy9AMDevAAAErsAMJA9AMC/PABA6bwAAHc9AEAbPQDA1rwAYGo9AIAvPADAsDwAgN48AIDdvACAMz0AkMK9AJCCPQAAVDsAwB+9ACBwPQBAPr0AkIO9AAAxPQBgub0AgIi8AIB6PAAARb0AANS6AAB2OwBA57wAYEI9AABevACwh70AAJW8AIDXvABAQz0AIHE9AMCLPAAAwjwAgFg9AIB5vAAAcTwAANC8AKApvQCAQ7wAQLq9AIA1vQDAOT0AANu7AMBkvQAAJbwAgNi8AEAvvQBAUr0AAAO8AACROwCAlzwAkJ09AIBbPABAmT0AoBU9AIABPABAVj0AwKk8AEABPQAAvrwAAD47AABaPQBgNj0AIJg9AKBjvQAgAr0AAFe8AEBJPQAAjr0AQE89AMDSvABAFr0AQIU8AIBUPAAAUr0AgKo8AAA1vQDA1bwAwCW9AABmvABAj7wAAD47AICXPADQlr0AAJE7AADwOwCAIbwAANE7AMCYPABASD0AAOE9AMDKvAAAyjsAQDA9AKAOPQDwsz0AwBm9AIAuPADAHL0AAFU8AIBZvQAgNb0AQJk8AABJvQDAhLwAAKe8AACRvABAtzwAAGm8AIDqPAAAMj0AwOq8AAD6PACATDwAAH+8AFC3PQBgmL0AgOg8AICqvADA0DwAgK48AIB0vAAAorwAAAQ7AMA8PQDAirwAAIw6AMC9vABAGb0AQKm8AMBwPQCAMDwAQJa8AMDGvAAA1jsAAJs8AADWuwAADDsAgAO8AOBWPQDgJj0AAMS8AAAqOwCA6TwAgDS8AGAJvQCAtrwAAAK8AHC/vQCgyz0AIF09AADwuQA4Kr4AAA67AMDEvACASTwAQJm8ACAcPgAA4bwAgN88AOCxPQAAozsAIAm9AMDoPAAgFj0AYHG9AIBIPADgYb0AAAi6AABdPABgVb0AgNA8AIBRvAAA4DsAgO08AADouwDAnLwAwLA8AMAgvQBAF70AAKW8AECfvAAAkrsAgEA9ADCavQAAKDwAAFu9AMD3vQDA7zwAIC89AACsPAAANrsAgNs8AAARvQBghj0AIA+9AIASvAAgTr0AQOY8AECAvQBgg70AgJE9AADLOwAgLr0AAH67AKBGPQBAED0AkI+9AGA3PQAAdr0AgJA8ANChPQDA5DwAANc8AIAaPABAGr0AAH88AJCHPQDwpT0AgE09AICRPAAAfbwAwIS8ABAlvgAA5rsAANe8AMBevQAA7LwAwNC8AAA/vQAAHjsA4MA9AAAPPQBwmj0AgCq9AMC2PAAArTwAgAg9AEBkPQAAqrwAAEO8AADQugBA/bwAAPS6AIC/vACAoz0AgD08AMCvvAAA3jwAAAC8AIDVPAAAqzwAgCU8AIAjvAAAYL0AAHW8AADnOwCAu7wAYDa9AICIvAAAQr0AIEs9AACKvADAKL0AwIk8AEA3PQCgLj0AoOG9AIgHPgAAMD0AIBk9AMANvQCgdT0AAFG8AJCLvQCANDwAgFG9AABKuwAA37wAgB48ABCiPQBA37wAgNq8AADdOwDgUz0AQJk8AACCuwCgUr0AgBm9AAAAPAAAjTwAoCU9ACB7PQAAiDwAgJC8AMBCvQAAgLoAwK09AGCuvQBgVb0A4Cg9AIDXPAAgJL0AQJY8AAACuwCATrwAAAA9AMA7vQBAJ70AgMK8AICrvABA8LwAIHc9AIAPPQCA4DwAQDe9AGAJPQAgSb0AACg8AIADPQDAXr0AgDQ8AMDBvAAwiD0=","chunkHash":"03bd8562759a1651a75ed7bd81c39990bea6583df882841877572d9013d44143"},{"text":"File: `model/vgg3d.py`\n```python\n#...\nclass Vgg3D(nn.Module):\n    def __init__(\n        self,\n        input_size=(80, 80, 80),\n        fmaps=24,\n        downsample_factors=[(2, 2, 2), (2, 2, 2), (2, 2, 2), (2, 2, 2)],\n        fmap_inc=(2, 2, 2, 2),\n        n_convolutions=(4, 2, 2, 2),\n        output_classes=7,\n        input_fmaps=1,\n    ):\n        #...\n            nn.Linear(int(np.prod(current_size)) * current_fmaps, 4096),\n            nn.ReLU(inplace=True),\n            nn.Dropout(),\n            nn.Linear(4096, 4096),\n            nn.ReLU(inplace=True),\n            nn.Dropout(),\n            nn.Linear(4096, output_classes),\n        )\n    #...\n```","range":{"startLineNumber":53,"startColumn":0,"endLineNumber":60,"endColumn":9},"embedding":"AIBfvAAAA70AsMI9AKCPvQAAEb0AQPG8AIBrPAAAr7sAwOC8AAApPQBAML0AAFw7AAAUvQCAVLwAgPS8AIB7vABAibwAwP08AIBAPQAgXT0AAI88AMDgvACgEj0AQI68AED0PAAAsTwAwBA9AMCRPABApDwAoIG9AADnuwCgEr0AkLC9AMCfvQAg+70AACo9AADMOgCASD0AAKm7AEDKPQCQkz0AwEa9AMDkvAAgfj0AQCU9AIB3vADAVb0AIBQ9AAB+vQDQkT0AgAO8AIByPAAAp7wAoB09AIDNvADANT0AAHY7AACAvQAAALgAAFC8AACgOQAQuL0AgKA8AEC3PACAiLwAgCE8AMB8vQDAHT0AQKW8APDQvQAwyL0AwLm8AAAZvQCALLwAAK88AMBwPQCANrwAoA49AOBMvQAA7jsAYCY9AABkuwBgcz0AAOs7AABtvAAgdr0AUIO9ACAVvQBgCb0AANi6AAD3PACAH70AYDK9ANCYPQAALjwA4DY9AGCfPQCggr0AAII9AADlvABA0rwAQIs8AKAaPQDA3TwAAKA7AIC4vAAgZr0AgFg8AMCyvABgXz0AAH47AAD7OwCgTD0AgN68AAC4OwAAxbsAgGe8AMDcPACAZr0AQHm9AADBvACAu7wAgB+8AKCovQCA2DwA4GQ9AABQPAAA47wAgIg8AAAzPACAu7wAwLQ8AIBdPQCAQb0AYDG9AFCgvQAQ1r0AEI09AMCrvAAAojwAgFS8AAD2uwDAl7wAoD+9AACZuwCQxD0AACG9AICaPQCA57wAAOI8AICDvQBgVT0AQPE8AIDPvQDwqL0AoDa9AACEuwAgrj0A8Kc9AKAPvQAAAL0AAJI8AMAhPQCA2bwAcJW9AKApPQDApr0AAEK7AIAqvQAAbr0AwJY9AIBdvACgLD0AIAi9AKBCPQBAtrwAAIW8AAAZvQCAL7wAIJ+9AKAmvQAAHT0AIAq9AMD9vAAAFzwAIGA9AEBFPQAgH70A4EY9AADKPABALL0A4GE9AMDbPAAA+jwAABo9AMDZvADAET0A0LO9AKCBPQAAArwAwMm8AEA+PQDgIL0AULS9AAAMPQBgvL0AQNW8AAAouwDA2bwAAJI7AIBYPADAjbwAoF49AADYuwDQkb0AACi7AABGvABAaj0AoEM9AAC0PAAAdjsA4Dc9AAAmvACA9zwAADa8AMAJvQAAa7wAQMG9AAA4vQAAHz0AwJW8AMBWvQAAMDsAYAi9AMBKvQDAXr0AAEw7AAAtPAAAnbsAQH49AIBEPADgPT0AIGw9AAAjPAAACz0AwIU8AIANPAAA87sAACA8ALCCPQAgPj0AIHc9AAAzvQBA+rwAgBe8ACAGPQAgtb0AIIk9AMCrvACAPb0AgA89AADvOwBgRL0AwLA8ACAPvQBAtLwA4Dq9AADeuwCAJrwAAGi7AADUPAAwrb0AgCg8AABGuwDArrwAwJ08AACkPABgTj0AcLQ9AED1vAAAHjwA4AE9AACqPADgzT0A4Au9AAACPADgGL0AgHs8AABzvQDgaL0AgH88AKA8vQAAHr0AAJC8AADIugCA1jwAABo7AOALPQDAZT0AgK28AGAIPQAAJDwAAAAAAHCrPQCQh70AoBQ9AIA1vABgXj0AwMw8AACJuwBAk7wAgDA8AOAaPQAArLsAAHO8AACdvAAAu7wAIAO9AACFPQCAW7wAABm8AEAjvQCASDwAQBc9AMCEvACAArwAgF+8AOBOPQBAlDwAwJu8AAAQOgAABz0AAEo7AECvvAAAD7wAgFq8AGDgvQCQxz0AAHs9AAAAuwDYMr4AAPu7AACpvACAmjwAABK8ALAePgDAlbwAwOg8AICzPQDAgjwAAHm8AABuPADgBT0AQJO9AIBJPAAgdL0AgHK8AAA4PABAVb0AwOg8AICpvACAA7wAQJE8AACZOwCAN7wAgBw8AIArvQAAGL0AgBq8AADGvAAASLsAIFQ9ANCKvQAAWDoAIH+9AED1vQAA+zwAAA89AICBPACAAjwAwLI8AADgOQCgYT0AwHC9AADJvABgI70AgBQ9AMAtvQDAdb0AwHU9AABwOwBAP70AAFu8ANCMPQBA0TwA4Hy9AEBKPQCgPr0AAPU7ACCYPQCAvzwAAPg8AAALPABgC70AAMs8AECKPQDwoz0AAG49AACtPAAArbwAAMK8ADgdvgAAkzsAwLu8ACA4vQBgTr0AAHa8AEBfvQAA1jsAoNg9AAAsPACggj0AIG29AICSPAAAgLkAAJ87AIAqPQAAI7wAAMY7AIA7PADAtLwAgDo8AABxvADwnD0AwL48AGA7vQDA0DwAAJ47AADxPACAxTwAQI48AAAPvAAgcL0AwBC9AAAgPADAq7wAQDG9AIBSvABA+LwAIEQ9AADquwDgQL0AgDQ8AMBfPQBAAz0AULK9ADAIPgAAGj0AwAE9AMDwvACANj0AQPG8APClvQAAWTwAgNq8AICmvACAz7wAAJS6AFCCPQAAjrwAgHC8AACMuwAAgj0AAEw7AIBVPADAU70AYAS9AADaOwBAuzwAQCc9AMA9PQAAHDsAADK8AIAtvQAAlDoAYJg9AICovQDAYr0AQMc8AEDhPAAgXb0AAHA7AAASuwCAZrwAQPw8ACA8vQAAorwAwKS8AADVvADAJ70AgHs9AICnPAAAXzwAoG+9AAAmPQAgWb0AwIo8AKARPQBAXr0AAD88AEDTvAAgoz0=","chunkHash":"f9a25cf302a90b390dc2cc88d117d024ef38baee3ee386fc63c16614fd37ea60"},{"text":"File: `model/vgg3d.py`\n```python\n#...\nclass Vgg3D(nn.Module):\n    #...\n    def forward(self, x, return_features=False):\n        x = self.features(x)\n        if return_features:\n            return x\n        x = x.view(x.size(0), -1)\n        return self.classifier(x)\n#...\n```","range":{"startLineNumber":62,"startColumn":4,"endLineNumber":67,"endColumn":33},"embedding":"AAC4uwAAY70AgCY9AFCvvQAAYrsAMIC9AMChPABAVj0AgGq8AEBVPQBA0bwAgMi8AECWPAAAhLwAwBm9AMDjvAAAJjsAoIw9ABCPPQBw0D0AAEm8AMDwPABApjwAALO7AACaOwBAoDwAwNI8AAADPQCgcD0AAIa8AACIvAAAML0AgF69ACB2vQBAtL0A4BM9AMDivABAHj0AQOq8AGDEPQBgcT0AoHe9AKAavQCAzDwAAGg7AIAZvACA9bwAADo7AIDTvADAiD0AAPi7AAAgugAAubsAoCM9AICMvADA4jwAAJc8AMAmvQAA5rwAgAg8AAArvQCQzL0AAHa7AGABPQCAVTwAwPM8AOBpvQBAED0AYAq9ACCtvQAgf70AoEa9AABKuwAAzDoA4CQ9AMD4PACAjTwA4MY9AADQuQCAPLwAANc7AMANPQAAcjsAgHI9AKBKvQCg370AAOG7AMDEvACgOb0AAJS7AIDBPACAF70AQCy9AGBJPQAA5zsA4HM9AECRPQBg2L0AgLQ9AKAhvQDAwbwA4G09AIBcPABgaj0AoAI9AMAlvQDgQr0AAMy7AMCtPAAABj0AQLO8AIAYPQBATD0AALS7AACivADA9TwAAOE7AAByOwAAjr0AgBa9AAC8ugCARzwAQNS8ALC+vQCAmDwAwNM8AAAgPACA1rwAQNC8AAAgPABgdb0AgNI8AEDPPABAzbwAgKO8AHCzvQBANb0A4BY9AGAsvQBAwzwAwKi8AAC+vAAAr7wAgNa8AOAUvQAgYz0A4Cq9AID2PADArLwAIBI9AAAovQAgkT0AIGs9ALCPvQCQwb0AQLK8AAAmvADwrz0AoFM9AGBOvQAgE70AQJq8AIANPQAAPDwAMJK9AADrPABQk70AgEq8AIB0vADw4r0AMIQ9AMC2vACQhD0AgN+8AIBmPQAA47wAgCI9AOBrvQAA/zsAAKu9AABLvADAyTwAgFG8AEBbvQDA2jwAwB89AACmvABAH70AQOY8AEAnPQAA/DoAMPA9AADSOwDAHD0AgDA8AAD/uwAgFD0AMIS9AID6PADA1jwA4Gu9ACCEPQBQgb0AkIS9AMCJPQDAtL0AAJQ6AMDpPADgqb0AANA6AIAxvAAgML0AoFk9AICDvAAgJL0AABM8AIAePADgLz0AcIc9AECEPADgGD0A4F89AABYuwAAuTsAAKg6AKB9vQAAdjsAYLG9AECzvAAAQDwAYGm9AAB+vAAAobsA8Iu9AGA7vQAAib0AAMO8AIBfvAAARLsAwHk9AADhOwAAYT0AALQ7AIAJvACgHT0AgC08ACAPPQBAlbwAAN07AOAKPQCA7TwAIF09AIB9vQAgaL0AAAs8AKBMPQAgzr0AAME8AABGuwCQjr0AQPs8AIBRvACAWbwAwIM8AICzvADAlLwA4AW9AECZvABAibwAgJs8AMD1PABASb0AQN48AAC8vACgKb0AYAE9AMDGPADwij0A4N89AKAuvQAAubsAoAw9AGBWPQAQgj0AwP68AIAgvAAgbL0AAFs8AIBGvQBAA70AwBw9AACXuwAgJL0AwDq9AMDCvACALT0AgIY8ABCWPQBAST0A8Ie9AOAvPQDgDD0AAHQ8AOAtPQDAib0AQCM9AEBPvQCADTwAAGc9AADcOgCga70AAO28AABRPQDgCr0AIDe9AED1vAAAWDoAQN+8AOAmPQCAHTwAUI69AMC1vAAAlbsAAIQ6AAASOwAAo7sAALK7AKB3PQCALDwAgDa9AAC9uwDAhDwAAHY7AECDvABAi7wAwJ+8AOB1vQDA6j0AAKA6AAD0OwDYKL4AQJs8AIAuvAAATTwAwAG9AHDQPQCAVr0A4BQ9AED0PAAAx7sAANi7AIAQvADQgj0AQNC8AMCJPABAm70AIBC9AABAPACAH7wAABc8AMAUvQDAxzwAYCA9AAApPAAAtrsAAHA7ADCIvQBgUr0AQB89AIBUPACAM7wAgCQ9ABCvvQCAhbwA4Gm9AHCzvQAAXDwA4DE9AACwOgAAsLoAgJo8AOBUvQCgfj0AsKe9AACGvACAD70A4BA9AJCgvQCAo70AMIw9AGADvQBAE70AADq7AACQPACAlDwAwG+9AAAVPQAgJ70AAD48AFCdPQDAtrwAAEk8AABYOgBAeb0AgLU8AICpPQDgUj0AIBU9AICRvAAARzwAgMu8ANAAvgCAhjwAwE+9AECJvACgR70AAJm7AEA7vQCAWz0AAMo9AGA0PQAQsD0AAAO8AEDgPAAAjzwAADu8AABxPABAmDwAwPG8AABbvAAgOb0AABS7AMAbvQBAyDwAQO08AADXvABgKz0AAC88AOADPQDARz0A4AA9AAAIvACgTr0AAP67AADTOwCASb0AMIi9AAApPABAfr0AgE+8AIB/vABgJr0AAAq7AEDDPADgKD0AAL29AEANPgCA3DwAkIQ9AICmPAAgKT0AAI+7AOB0vQCA3TwAsI69AMDIvADAEb0AwM48AKCwPQDA1LwAgHm8AIBVPACAYD0AAK+7AICMvABA4rwAQJO8AABAOQAACbwAgAs8AMA5PQDgRj0AgDe9AGCDvQAAxjsAoP09AIA+vQCgY70AQOU8AADtPADAhbwAAFg7AADJuwCAULwAAFA9AOBJvQAgoL0AALI7AACDuwCAU7wAQPk8ACBwPQCAKTwAwB29AOAqPQAgir0AgIa8AOBTPQCA4bwAABO8AIDAvADgAz0=","chunkHash":"b52255c6f1cb048e63a7a8195314492db13ae4d4a7dda1e5048616aa406d629a"},{"text":"File: `model/vgg3d.py`\n```python\n#...\nclass Vgg3D(nn.Module):\n    def __init__(\n        self,\n        input_size=(80, 80, 80),\n        fmaps=24,\n        downsample_factors=[(2, 2, 2), (2, 2, 2), (2, 2, 2), (2, 2, 2)],\n        fmap_inc=(2, 2, 2, 2),\n        n_convolutions=(4, 2, 2, 2),\n        output_classes=7,\n        input_fmaps=1,\n    ):\n        #...\n    def forward(self, x, return_features=False):\n        #...\n```","range":{"startLineNumber":6,"startColumn":0,"endLineNumber":62,"endColumn":48},"embedding":"AACRPAAAybwAgIo9AIB1vQAAF70A4F29AAAoPAAANjsAwKm8AEA1PQBAFL0AwOO8AMAAvQDArLwAwBu9AADMugAAtLwAYCE9AGByPQCQkT0AgBg8AAB9vADA1TwAgEG8AACcOwCA2TwAAKs8AEClPABA+TwAgDW9AAArvAAgF70AkI69ACCWvQAg470AQCs9AIAJvAAgTz0AgDK8AGC4PQBgfD0A8IO9AADVvAAAiD0AwOE8AECgvADgYr0AAI48AEApvQCQsT0AAKO7AACjOwAAkbwAwBo9AADEugAgBT0AAN07AOBsvQAAjLwAADM8AAAAvABQ4r0AAEg8AAC2OwAAVLsAgGA8AABbvQAA0TwAwN28AMDYvQDwrr0AgNC8AEDRvADAsLwAwNo8AMAWPQCAJbwAcIY9ACBCvQAAnDoAgPo8AEDuPAAgTD0AANg7AAC3vABgpL0AgB29AACLvADAv7wAAMm7AEAdPQCA/rwAgDe9AACHPQAAiTsAwEI9AICnPQDwsL0AoHE9AADIvAAAp7wAQMw8AMDXPACAODwAIAI9AOAkvQCAf70AAN87AIAsPADAdD0AQIw8AACgOQBAZT0AgPC8AAAHPAAAkLoAQAu9AICpPAAgk70AwG+9AAC3vAAAsDkAIB+9AFCrvQBA8jwAIGs9AEC6PACAyLwAAOC6AIBDPADAPb0AAMQ7AAB1PQBAGr0AYAK9AMChvQBgvr0AwHE9AADavABAujwAgFS8AACAuQCgDb0AQCq9AAADvACQpT0AoFW9AKCyPQCAt7wAANc8AMBNvQBgkj0AAB09AHDNvQAAvL0AYB29AABfvADwvz0AAHs9AOAPvQBA8LwAAJC5AKAAPQBAyLwAYIe9AEDfPAAQsb0AAHK8AOAZvQBQjr0AQG49AICwvABAhz0AAL+7AAAwPQBA17wAAGQ7AAA/vQAARrwAILK9AADOvABgBj0AQIy8AMAKvQAAHjsAwB09AEDSPAAgKb0AYDY9ACANPQAANrsAELE9AIB1PADgDz0AAAc9AAAWvQBAMz0AcNS9AGAhPQAAAjwAYFK9AABWPQDgOL0AYHu9AOAqPQAwyL0AIDK9AICRPADgWb0AgCo8AADwOwAA67wAYG09AAA+uwDAYb0AAKs7AACMuwDALz0AgIc9AABIPAAAJjwAgCk9AABAuwCAtjwAAJC5AKA8vQAARrsAML29AMBYvQDAkjwAgAK9AEAfvQAAQLsAAFe9AKBNvQCgjb0AALQ6AACIugAAYDoAEKg9AACROwCAiTwAgOw8AECbvABABz0AgPY8AABVPACAMbwAwII8AKAXPQAACD0AQE89ACBQvQAAEr0AACa7AIASPQBAqr0A4FE9AIAQvQCgNb0AAAU9AADUPACgRr0AAMU8AOAJvQAAi7wAIE+9AIA6vABAx7wAAJU8AIB5PADgcL0AACA8AAD9uwCgEL0AIA89AMDwPACgaD0AUNY9AEDDvABAtzwAAJA8AMDdPADQvz0AQCq9AIAIvACAAr0AAP47ACB+vQDgZr0AgKw8AIB6vABgLb0AQOq8AIASvACgHT0AAJG7AGAsPQBgWT0AoI29AGBAPQAAejsAALw6AJCIPQBQib0AICY9AAASvQAAxDwAgKg8AAC0ugAAKLwAAKK7ACAyPQAAsrwAgOG8AIB2vAAA9LsAwPm8AEBcPQAAaLwA4BW9AIDbvACAEjwAgCk8AIANPAAASbwAAMi7ACBxPQCATDwAwIq8AAAIOgAAyjwAAGM8AAApvQAAl7wAAGC5AMDRvQCQxT0AICI9AADnuwCAPr4AgEe8AMDDvAAAdTwAgA28ANAoPgBA1rwAQCM9AMByPQAAJTwAAMC8AMDEPAAASz0A4F+9AADkOwBArL0AIAm9AACjPACARr0AgNA8AIAvvAAAETwAQLo8AADPOwAAQLsAgBI8ACAhvQAAPb0AAOm7AIAIvAAAELsAgA49APCwvQAAVrsAoEi9AHDlvQAAFT0AwAM9AMCVPABAuzwAgMk8AICmvACQiD0A8IW9AACTvADAWr0AQLg8ACAzvQBgfL0AQDc9AMDVvADAE70AwIm8AOB+PQAAYDwAIHi9ACCZPQDgL70AAEi7APCTPQAAlLoAAD08AAB4OwDA5LwAAK67AGCePQAAXz0AYE49AAA4PAAAgbsAQAm9AEAQvgAAg7sAgOe8AGBIvQDgcb0AADy8AOBkvQAA5DsAENw9AEAGPQAAoT0AgCK9AID+PAAAMDsAgBK8AEDvPAAAYbwAAKS7AIBfPAAA8bwAADQ7AICpvACgmD0AAAg8ADCLvQDgAz0AgLm8AIDgPACAAj0AAMQ8AIBfvABA/bwAABq8AAA8uwBgSb0AwDq9AAC8OgDgOr0AQN08AEC8vACgKr0AAHC7AOBBPQDgSz0AENy9AFAGPgBgAT0AwNU8AIBGvACgGT0AwKq8ACBbvQAAGDsAwP68AEChvACgEr0AQKk8AOCePQAA1zsAQLW8AADWOwDAdj0AAF48AADXuwDgSr0A4Ca9AIC8PAAAQzwAYCY9AMBYPQAAaTwAgAC9AMBVvQCAQrwAQKc9AMCpvQCgb70AwJM8AMC+PADAL70AAJC6AIA1vAAAULwAgNk8AECFvQDAxrwAwMK8AIAAvABApLwA4DA9AMAdPQCAwjwAAHe9AADxPACAXr0AABE8ACAwPQDAh70AAIO7AIALvACwhj0=","chunkHash":"4d6a40f76b12b003b61ed32ad799761510baef2e93ed4b2f3bcfce3bd7738ea3"},{"text":"File: `model/vgg3d.py`\n```python\n#...\ndef load_model_from_checkpoint(model, checkpoint_path):\n    \"\"\"\n    Load model from checkpoint, handling potential size mismatches in the final classifier layer.\n    \n    Args:\n        model: The model instance to load weights into\n        checkpoint_path: Path to the checkpoint file\n        \n    Returns:\n        The model with loaded weights\n    \"\"\"\n    print(f\"Starting to load model from checkpoint: {checkpoint_path}\")\n    if not os.path.exists(checkpoint_path):\n        print(f\"ERROR: Checkpoint file not found: {checkpoint_path}\")\n        return model\n        \n    print(f\"Checkpoint file size: {os.path.getsize(checkpoint_path) / (1024*1024*1024):.2f} GB\")\n    \n    # Check available memory\n    if torch.cuda.is_available():\n        free_mem = torch.cuda.get_device_properties(0).total_memory - torch.cuda.memory_allocated(0)\n        print(f\"Available CUDA memory: {free_mem / (1024*1024*1024):.2f} GB\")\n    \n    try:\n        print(\"Loading checkpoint to CPU first...\")\n        #...\n```","range":{"startLineNumber":70,"startColumn":0,"endLineNumber":94,"endColumn":0},"embedding":"AABsPQBAgzwAQC09AIBAvQDwkb0AAKk7AABYugCAobwAoBe9AOCaPQAAJrsAgAk9AEAsvQAAS7wAgGq8AACMuwDATr0A0Ko9AIA+PACAbzwAgBk8AKBePQAgDz0AAMA8AAAHvAAAs7sAANU8AMBCvQDgYj0A4FO9AIDpPADA87wAUOW9AGAkvQAA4LsAwM08AMD5vABgjj0A4EO9AGDEPQCAizwAADe9AMAnvQDQqz0AIEA9AEA4PQCAiT0AwD09AAAevQDAPz0AwKu8AMDUPAAAH70AAEc8AJCYPQCgKz0AEJE9AMCtvAAA2LwAAIc8AABouwDgWb0AIAo9AACJPAAA3DwAwKW8AAANvQAA5zwAQEy9ACDvvQCgRL0AAIC5ACCKvQBQlL0AAOA7AACQOQAAQDoAsL89AACzPAAAXLsAACC8AECpvADgoD0AQO48AMDxPABwgr0AACW9AACMvACgSL0AoFq9AIBtPQBAwrwAQIU8AEArPQDA5TwAQLa8AEAWPQBgkL0AcM89AOAhvQDAhrwAQKA9AKBLPQDgPD0AAFg8AKBqvQCAHj0AgAU8AABHvAAgND0AAIA7AADWPAAA6DoAgG88APCsvQCAkDwAgJC8AAA5PADAj7wAwJA8AADMOwDgVj0AgGo8ACCkvQAAIT0AoIs9AAC9OwAA9DoAgLO8AACAuwAQq70AAI47AFCSPQBAir0AQAW9AKB6vQDgab0AwB29AADVvADgRD0AIF69AIC6vACAU70AAKg8AGA8vQBQ+T0AAAA6AIC7PACAr7wAAMo8ACAVPQCAjzwAwO88AGBAvQBgWb0AANg7AIAEPACQuj0AwI49ACBXvQCAZL0AACa7AABGuwAAbrsAANq8AAAcPACQg70AgLO8AEClvAB4Er4AII89AOCbPQDgSD0A4He9AAB8uwBAGL0AYEi9AIAjvAAAeLsAgEy9ABCUvQDAu7wAwKQ8AIATPACALL0AYC49AADYuwAAzrsAgD48ACA4PQCAIjwAAFo7AKAFvQAAwLwAwCS9AADYvACQmD0AwOy8AKCOPQAAYTwAQFS9AECSPAAAWzwA0Jm9AOBYPQDgwr0AIGi9AIBzPQCgF70AAMS8AGAYvQDA6bwAYAg9AACcugCAd7wAAKY8AAAWuwCA9zwAYHc9ANDTPQAA0zsAsMA9AADXuwAAEDwAwK28AKBPvQCgUj0AgEy9AABWOwDAKD0AgFq9AEARvQCAqLwAAKy7AGAhPQAAIb0AAJW7AABaPAAAursAgAO8AMCLPABQzT0AABA7AAA8uwAAlzwAgKy8AAAOPAAgGb0AAKQ7ANCRPQAAlrwAADA8AAAGPQCAL7wAwKe8AGAyPQCwlL0AACq7AOBOvQDAbr0AAG68AIBxPAAAqLwAAL27AABlvAAAnjsAwIQ8AGBMvQCAtb0AAJi6AECyPQCgMb0AAFQ7AACCOwCAQr0AAJk8AABSOwCgSD0A4Gk9AIAlPAAASjsAALY8AEC9PACgtj0AALc7ACA8PQDgIr0AAIK7AIBOvAAA2rsAAFS7AADqvABABL0AAPe7AGAQPQDAvDwAIBG9AACfPADA/DwAwEW9AACEOwBgjj0AwO28ALClPQDAn70AgDs8AAAzvQAAizwAQMG8AKApPQAAPL0AAC28ACBEPQAAgjsAwPu8ACAAvQCAoLwAoAA9AID7PABgKD0AANq7AECdvACwgL0AICU9ACBRvQBAoz0AAHO8AADsOgBgRD0AIBi9AABavADAAD0AoCk9AED/vAAgND0AQO08AICuvQCAjD0AMIY9AIBHPABA270AIAy9AAA4vAAAOrsA4CW9AOAEPQAAW7wAwIG8AIAmPQBAXb0AgA08AIB7PABAir0A4Dm9AAASuwCgFD0AANe7AICJvABAsbwA4Ce9AIAXvAAgCz0AYHs9AAACvQDAnbwAwMY8AKAsvQAARj0AAJs8AEDEvAAALjsAQCw9AFCnvQAA8LsAsLy9AGCvvQAA5TwAQLE9AKCLPQAAATwAoFI9AECPPACwzD0AgEQ9AABYvAAAirsAABk9AEANvQAQgr0AgB68AOApvQAAwzwAAEg8AGAJPQAABz0AAEk8AMC4PAAgML0AQDw9AACzPAAAQj0AgGK8AOACvQCALTwAwFA9AABIuwBw5D0AAOY7AAAFvQAAl7wAIIc9AODEvQAA9zsAEMK9AMAAPQBQqb0AANA8AEDUPAAA7DsAYBA9AADqOwCAJ70AwN29ACADPQAQrL0AAOi6AFCCPQBgCb0AAEY7AMCPvQCgCb0AQC+9AAAMuwBgPD0A4H09AIBmvABAED0AAEa8AAA/PQAAbbwAwO+8AIBYvACAHjwAgAc8AAAlPQDAkDwAIIq9AICfvACAPz0AwFA9AAAAPQDAar0AQBi9AIDBPAAAujwAYJu9AMCGPQCANLwAUPw9AIBmvQAgeD0AAJC6AAALvQCAZjwAgCa8AOBVPQBAEz0AAA08AMC8PADA77wA4As9ACBRvQAAyTwAABS9AIBGPADAr70AoC29AABDPAAAWLoAwJM8AIDXPAAA3rwA4Eo9AAB+vADAozwA0JU9AABLvAAA1LsAYMI9AIBXPQDgh70AgAM9AACFuwCACbwAgIW8AECZvAAQhj0AYJy9AACWPAAAjr0AAHg6AEDfPABAkzwAwOG8AADgugCQqb0A4Ce9ACCkPQBAAj0AQIQ8AOA0vQDAfD0=","chunkHash":"cc7e5c064b81af41c5693d89e9d48436ef57dde194220c0de5a6baa24e2e6501"},{"text":"File: `model/vgg3d.py`\n```python\n#...\ndef load_model_from_checkpoint(model, checkpoint_path):\n    #...\n        checkpoint = torch.load(checkpoint_path, map_location='cpu')\n        print(\"Checkpoint loaded to CPU successfully\")\n        \n        print(\"Checkpoint contents:\")\n        if isinstance(checkpoint, dict):\n            print(f\"Checkpoint is a dictionary with keys: {list(checkpoint.keys())}\")\n            # Extract the state dict\n            state_dict = checkpoint.get('model_state_dict', checkpoint)\n            \n            if 'model_state_dict' in checkpoint:\n                print(\"Found 'model_state_dict' key in checkpoint\")\n                print(f\"Loading state_dict with {len(checkpoint['model_state_dict'])} layers...\")\n                state_dict = checkpoint['model_state_dict']\n            else:\n                print(\"Using checkpoint directly as state_dict\")\n                print(f\"Loading state_dict with {len(checkpoint)} layers...\")\n                state_dict = checkpoint\n                \n            # Check for classifier layer size mismatch\n            output_layer_weight_key = 'classifier.6.weight'\n            output_layer_bias_key = 'classifier.6.bias'\n            \n            if (output_layer_weight_key in state_dict and \n                #...\n```","range":{"startLineNumber":94,"startColumn":0,"endLineNumber":117,"endColumn":0},"embedding":"AIADvACAXbwAACK7AICMvQBgYb0AAKS8AACDvAAAoLsAQP28AIAcPQAARDwAABE9AIAmPAAAr7wAQNS8AECVPAAgjL0A8L49AIDHPABgBT0AAPQ8AMBdPQBgEj0AAGs8AABpvAAAczwAAGa8AACFvQDAjDwAYLm9AAC+OwAgCL0AsJG9AECjvABAbL0AAKQ6AIC7vADART0AwPi8AKBjPQCgKT0AwGu9AADZOwDQqz0AQPU8AAD7PAAAibsAgPk8AOAqvQBgDT0AwKO8AAB8PAAA27wAQJa8AEDzPABAvDwAgH49ABCHvQCAV70AgAQ8AMDIvAAAb70AALA7AEBXPQBAXj0AgEa8AGARvQCgUD0AgP68AMDSvQAAV70AAGg6AIB0vQCAor0AAFw7AEAQvQAAIj0AQNs9AACXOwAAV7wAALu7AMCAvADQsD0AAK07AMCfPAAAkL0A4Im9AAAwuwCADL0AgHe9AABPPQAA1LwAAIY7AABgPQDAYT0AADE8AADbPACAX70AEJo9AADIuwBAgLwAwCY9AEA/PQBAPD0AAJ88AEDZvAAALj0AgEW8AGARvQCA7zwAAOu8AAAAuwCAGLwAgKs8AGASvQBAAD0AgGo8AIBJvADAxbwAgDS8AACruwDgLT0AwL08AKCFvQAAuzwA8I09AIArPACASrwAwIm8AACqOwAghb0AYEy9AKBrPQBw3b0AwIS8AAA9vQBAYr0AgNe8AIBbvQDgkz0AQNS8AICHvADQjr0AIBs9ANCdvQCAvD0AYBW9AEA+PQCAc7wAwPk8AEDDPACgPz0AgBM9AOA1vQCgS70AAL27AACduwAA8T0AYFI9AOASvQDANL0AAIw6AIC2PABgDr0AQC+9AOAkPQAgoL0AwIi8AEDavACICr4AAJA9AMB+PQCATT0A4CO9AACGuwDgAL0AoHm9AADTPAAAiLoA0IG9AICcvQDgO70AAI07AACcuwAAzDoAYH09AADevAAAnrsAACa8AHCKPQAAgLgAALE7AAD8vABAv7wAQMy8AIAWvADwgD0AAIy8ADDRPQAAljwAgLC8ACAJPQCgTL0AUMa9AGBYPQAAjb0AYCW9AEApPQBgRb0AAM68AMDQvAAAerwAACo7AAADPQBAzLwAgLU8AACZOwAA0TwAIDM9ADCAPQCAkLwAICI9AAAWOwBA8zwAADa7AMCtvAAAmDoAAC+9AIC4PAAgKz0AQEm9AIDSvAAAlLwAgBi8AID/PAAwgL0AAJG8AAB6OwCArzwAwJ08AABIuwDwpD0AAIY7AABauwBA8zwAAKg7AICKPACgX70A4FC9AKCUPQCAgDwAgEa8AADEugDAEb0AAMu7AEA1PQAwxr0AAAS7AKCYvQBQmr0AgBw8AMDlPACAM7wAAO47AIC3vAAAUzwAAF28ACBfvQAAwb0AoEC9AMCQPQBAZb0AoJA9AEA0PQCgib0AgBK8AAD2OwCAvTwAoJg9AABTPQCAJjwAANg8AKB2PQAgwD0A4BK9AKAyPQDAQr0AwNU8ACBIvQCAVjwAQMY8AKAmvQCAEjwAgCS8AGAzPQAAUzwAYDy9AIDKPADA2jwA4CK9AMDRPABARD0AoBK9AKgAPgAgkL0AAFA8AEAUvQDA5rwAgCm8AAA8OwAAILwAAOA7AJCPPQCgI70AID69ACAJvQDgMb0AQLQ8AGAaPQCAZTwAYCm9AMACvQBA5bwAoEg9AECQvQDAsT0AAHm8AIBzPAAAOz0A4C+9AOAOPQAAELwA4DA9AOA4vQCwiz0AAKA8APCOvQDAsj0AoDI9AADlOwBAA74AwC+9AMC7vAAAwLkAoDW9AKBtPQDAGL0AALa8AGBdPQCgLb0AYHY9AECnPACgab0AoE69AEDEvADgFT0AAES8AADwOQAArLsAQIi8AMCFvADgGz0AoE09AACGuwBA97wAgEM8ACBzvQAAhjwAAMI8AEDavAAAH7wAgJg8AHCzvQAAdTwA8La9APCWvQCgSj0AwJ89AABBPQAAFzwA4Fc9AIDIvAAgoD0AwNo8AGANvQAANr0AwEQ9ANCHvQBANr0AABQ7AAC2PACAprwAALC6AKAsPQBAST0AAL87AEDFPABAYr0AgGg9AECcPADAGT0AgOe8AOACvQAA4bsA0J09AEAVPQCAhT0AwMw8AIAyvABAn7wAwJM9AHCzvQCAIzwAoPS9AICaPACAfL0AgLM8AAAQOgBAoLwAYI09AACPPAAAW7wAsIq9AOApPQDgj70AAB49AICBPQBA+rwAYC09ABCSvQCA6rwAAGi9AMCMvACAtT0AoKI9AICAvAAgAj0AQMG8ACBBPQAA+DoAAPm7AIDyvAAAILwAAGE8AICAPACAZbwA0Ie9AKBFvQAA1bsAABg8AACzPACwnb0AYBC9AEDFPACAEDwA0KW9ANCVPQAAcLsAQKc9ACBNvQDAkjwAgN88AOASvQAAAAAAQIE8ACBHPQCAcTwAQIU8AADoOgDA37wAgG48AKAnvQBAirwAAGq8AABCuwCwq70AYCi9AEAlPQDAsbwAICQ9AADoOwCAcjwAwMG8AACPvAAAkT0AMOc9AABiuwCAhrwAQKs9AKAKPQAgXr0AwOw8AAArPAAAKLwAwMI8AIAvvABAkjwAoFG9AMCfPABgA70AACi7AOCEPQCAt7wAgHa8AACUOgCwv70AQOe8AICIPQAgIT0AgJK8AMDMvACQkT0=","chunkHash":"f31e145fda39cf5f3e2d6c8272c6957530b3a6f05315c182c6bbfde592bd4558"},{"text":"File: `model/vgg3d.py`\n```python\n#...\ndef load_model_from_checkpoint(model, checkpoint_path):\n    #...\n                state_dict[output_layer_weight_key].size(0) != model.classifier[-1].weight.size(0)):\n                \n                # Size mismatch in output layer\n                checkpoint_classes = state_dict[output_layer_weight_key].size(0)\n                model_classes = model.classifier[-1].weight.size(0)\n                \n                print(f\"Output layer size mismatch: checkpoint has {checkpoint_classes} classes, model has {model_classes} classes\")\n                print(\"Loading all layers except the final classification layer\")\n                \n                # Remove the mismatched layers from the state dict\n                state_dict.pop(output_layer_weight_key, None)\n                state_dict.pop(output_layer_bias_key, None)\n                \n                # Load the rest of the layers\n                model.load_state_dict(state_dict, strict=False)\n                print(f\"Successfully loaded pretrained weights for all compatible layers\")\n                print(f\"Final classification layer with {model_classes} classes initialized randomly\")\n            else:\n                # No mismatch or not checking for it, load normally\n                model.load_state_dict(state_dict)\n                #...\n```","range":{"startLineNumber":117,"startColumn":0,"endLineNumber":137,"endColumn":0},"embedding":"AIDWPAAA5bsAQN08AGCKvQDgab0AANK7AADGuwAAUDoAgPC8AEBwPQCAyTwAwJg8AMDsvAAACjwAwLy8AACAOwDgQb0AkLU9AABcuwCgbj0AABk9AKACPQDAjzwAALO8AECbPAAAwTwAAAA5AGCDvQBAHT0AQGm9AAAHPAAgF70AIJm9AACDvAAgNL0AAHy8AEDcvACAMz0AgH68AMBRPQDgEz0AQHi9AAAyuwDAcT0AgLQ8AEA9PQAA8DoAgPE8AOAIvQCgRz0AgGi9AAAJPQDAorwAAN87AIDjPAAANDwAoBo9ADC4vQBgQ70AwIy8AEDCPACAFL0AAJM8AGB6PQCAaTwAQN28AEAVvQAAOj0AAKg6AICyvQAQkL0AgBW8AEA7vQDgcL0AAPK7AACluwAAEj0AgOY9AABauwDArLwAwL+8AIB+vAAArT0AgCs8AIBkPADgm70AcJy9AMCOvABATr0AwJ29AOCRPQBA0bwAwN+8ABCLPQBAnDwAAK48AAA5PQAQmr0AoGY9AOATvQAAIDwAoCY9AIDFPACAQD0AQJ+8ACBJvQAAvzsAAFa7AMDuvABAyDwAANC5AAAIugAACLwAAEw7AADrvACAZjwAAFM8AABOuwAAT7wAgGu8ACAKPQAgBD0AwAo9ANC4vQBAkDwAsJ89AACBuwAA57sAABC6AMDaPABAjL0AgGe8AEAnPQBw470AgB69AGBbvQBAvL0AAHA7AOBpvQAglj0AADy9AAADvAAgoL0AANM8AGB0vQCg8D0AAJY7AECZPADAKb0AAPk7ACAOPQCAdT0AwKQ8AEAjvQDwgr0AgDO8AAAEuwDgvj0AwMA9AAC8vACAG70AACQ7AICmPAAAgLwAgB69AIDmPADgd70AIBC9AMDKvADQBL4AgKA9AGCGPQDgez0AMIC9AACRvAAABbwAACO9AECwPAAAhjsA8Jm9AMAqvQBAML0AAI67AABkOwDAOL0AYH09AABwugAA7LsAQKY8ACCmPQCABjwAgB+8AACUuwBAtbwAgJq8ALCFvQDgdT0AgMe8AEBWPQBAkzwAgFm9AADAuACAv7wAcKS9AGBOPQCgsb0AwEW9AMCEPACAL70AALq8AADcvABA/7wAAOy6AADdPADAgLwAAJw6AIC6vACASz0AQEc9AMBkPQAA97wAwIM9AADAOQBgTD0AgLu8AOAevQCgPj0AwIS9AIA0PAAAXzwAwPy8AIBjvABAjDwAAPO7AADhPACAlr0AAIg7AAAbPACA7TwAgF48AABzPAAAqz0AgMQ8AADiOwDgaj0AgF48AACwOgBAD70AACe9AAB7PQBAsTwAAPI8AACXPADAYL0AAGa8ACCWPQDAjL0AAOw6ADCGvQCAL70AgDG8AIAtPABgIb0AAK07AADxuwAAyzwAAMG7ACA9vQDwt70AAI28AGB7PQAAU70AABU9AAAguQDAOL0AAHg6AAAvPQAAEz0A4Gw9AMAVPQAAfrsAQJ48AIBAPQAABT4AgCe8AIDuPACAub0AgCE8AABXvQAAOjwAgHg8AGAjvQAAHLsAAD47AEDWPACAMbwA0Iq9AGATPQAA4LoAYDS9AEAaPQAgNz0AgIq8ALDyPQAAlL0AgCa8AGBYvQAAALwAgBc8AIBKPAAAU7wAgJI8ACA+PQCAC7wAwJW8AEC6vAAAWL0AABs9AKBkPQCAujwAYFW9AMD6vACAF70AIDk9AAAhvQDwqT0AAES9AACoOwCAmT0AwIi8AAAgOwAAp7sAAOE7AGBMvQCQhT0AgPE8AABnvQBAsj0AgCo9AAC+PADQ9L0AANy8AECOvACAR7wAQP28ALCNPQAgLL0AAPA7AEAcPQCA4LwAIAs9AEDxPACA97wAQEW9AMD6vABA6TwAAMs7AECFPADgOr0AAK88AAASuwBAGj0AsIY9AADVvAAgD70AgBE8AADOvAAAajsAgC48AMABvQAAn7sAgOI8ACB6vQDAjzwAwLm9ADD6vQCA2DwAwGk9AAByPQAAALwAQAQ9AIBAvABwvT0AQL88ACASvQCAebwAALA5AACmvQBgaL0AgMU8AECEPAAAhLsAQJk8AKAtPQDgbT0AABm8AMCZPAAA0rwAoAQ9AECUPACAAT0AwPi8AEBKvQAARTwAkKs9AADdOwBwsT0AgCE8AAA0vABA3LwAgI49AKCPvQAAhLoAUNS9AIDrPABgaL0AoCc9AABgvAAA8LwAICw9AABaPQAAybsAAIW9AMCJPQAAIb0AYCs9AJCcPQAAo7wAgK08AECRvQCAy7wAoEW9AMDFPACwkD0AILw9AECEvADAqTwAIAO9AIDyPAAAKrsAQOi8AAAivQAAEL0AgDy8AMC8PACAXrwAAIi9AADwvAAA1DoAAHA7AADluwCgib0AYCK9AAC0PACAQzwAcKa9AABdPQAAtrsAIOQ9AICqvQBA+jwAgPs8AMDVvABAqjwAAAg6AOA6PQCAeTwAACG8AIC5PABAubwAALA5AEDIvQAAODsAYBi9AAAxvABwmr0AYC29AKAAPQAA/rwAACI9AACJPAAgGL0AAOK7AABovQCgXz0AeA4+AECKPADABb0AEJU9AAAePQBAX70A4Dg9AIAvvAAAM7wAgFo8AECQvAAAEz0AQIG9AMDpPAAgSL0AADk8AIB6PAAA4LoAQOm8AICrPABAtL0AAAC9AEBAPQBgQj0AQLU8AECEvADQlT0=","chunkHash":"88e5d75df6a4c7f0e13ed33e6ed98293bfe51a4609f8c9f4f3eb2f242796493f"},{"text":"File: `model/vgg3d.py`\n```python\n#...\ndef load_model_from_checkpoint(model, checkpoint_path):\n    #...\n                print(f\"Model loaded successfully from {checkpoint_path}\")\n        else:\n            print(f\"Unexpected checkpoint type: {type(checkpoint)}\")\n            \n        return model\n    except Exception as e:\n        print(f\"Error loading model: {e}\")\n        import traceback\n        traceback.print_exc()\n        return model\n```","range":{"startLineNumber":137,"startColumn":0,"endLineNumber":147,"endColumn":0},"embedding":"AIAZvACAijwAAGa8AECevQBQmb0AAJG7AIChvAAANrsAAKq8AMANPQAAhjsAgOY8AECcPACAdLwAAAK9AOA+PQBgk70AMKY9AIBlPADAET0AwBA9AKBWPQAAhzsAgNU8AACYuwCAazwAgMq8AMANvQCAEDwAQJO9AIAfPAAA/rwAoFy9AMD9vAAARr0AAAo8AACBvADAgjwAADW8AMDxPAAQjD0AIH29AADwuQDA4D0AQO88AIBjPQAAXjwAwGA9AMCGvQAAhjwAIAe9AACMOwCAPLwAgGu8AOAXPQBAqDwAwI49AEB1vQDgc70AQKy8AMC3PADQpL0AAHe8APCUPQDAPz0AANq7AADLvAAAejwA4DW9ALDlvQAAp70A4BU9AABLvQAwjL0AQKe8AOAdvQBABj0AUL49AAAWOwBA17wAAEC8AADJuwAgbD0AgAQ8ACANPQDAer0AgEW9AADIugAA3LwAQFC9ACB4PQAAwLwAAPo7AKBYPQBA/jwAAI08AIAqvADwub0A8K09AMCFvACA6rwAYFw9AEAtPQDgIj0AIAc9AIBdvAAA7zwAAKA6AEC9vADAnDwAwN28AAC5uwCALTwAgA88AKB2vQAAFDsAAMy6AIAyvAAA+LwAALe7AABbPACQqD0AQIQ8AFDmvQCA4zwAQKM9AOAVvQDAiLwAgN28AAADvABgp70AgIi8AEBzPQCQzb0AwMu8AGBUvQBAd70AgDC9AEA2vQAgtz0AgGi9AIBSvAAAfb0AgC88AACAvQDwuD0AAOC5AACcOwAAsLoAgFQ8AADgOQBASj0AcJA9AAA2vAAwtr0AAGm8AADTuwCwtT0AoD49AACSvABABL0AgIM8AACWOwDAtrwAQNm8AICnPAAghr0AgJi8AAAcPACApr0AsLg9ADC2PQCA0zwAoEW9AAC7PAAgBL0AYFC9AEDePAAAjLsAwBa9AKCHvQAAO7wAAIQ6AEDkvADgBT0AgEs9AEDRvAAAobsAAE+8ABChPQCA/7wAgJQ8AADAuwAAKLsAAGM8AKAVvQBAmzwAgMi8AADEPQBA7zwAQLG8AABOPABgGr0AIL+9AIBvPACgW70AQHi9AMAlPQCwlb0AYEi9AIBzvADAE70AQJS8AEDuPAAASbwAgB49AACDPAAAVj0AgB89AOCAPQAA9LoAgLE8AAA6OwCgHj0AwB09AEBLvQBAyjwAQJK9AAAUOwCALT0AgB29AADkvAAAgLoAAMu8AACiPABgj70AANa7AEDrPACA2DwAwNU8AAD7PABglz0AgCw8AICkPAAABD0AAMi6ACADPQAgZL0AIGq9AKCuPQCAQzwAwPs8AADiuwDgG70AgJI8AEAJPQDw3b0AwLI8ACDZvQBQ1r0AAIe8AIAkPAAA3bwAAIs8AIDwvADAljwAAHk8AGCnvQAgh70AEIK9ACB5PQDgWr0AYIo9AABxPAAgD70AAPw7AIBGPAAAozwAAKw9AAC4PADAPz0AwMM8AGAFPQBQxj0AAF29AAAGPQCgP70AACi6AAAkvQAAXrsAALk8AGA7vQDgHr0AIAG9AMDKPAAAsDkAANu7AMDHPACA2TwAAB+9AIDsPABgID0A4Bm9AIDDPQDAm70AAFS7AEBjvQDgGL0AgAC8AIBvPADA17wAgDa8AEBjPQDA27wAwCi9AOA1vQAAH7wAIAw9AOACPQAABbwAICi9AAAnvACgIb0A0JQ9APCCvQDAnz0AwN28AAAgPACA/DwAgBe8AIAhPAAAJTwA4Do9AAASvADQhz0AgL88AECOvQCAuz0A4Ec9AADjuwDw/r0AAEu8AADpvAAAprsAwA69AID6PAAAebwAgEI8AEDTPAAAcr0A4Hs9AIAgvABgGL0AwNq8AAALvABgCT0AQEC9AIC7vACALjwAAJC7AADgugDA1zwAAIY7AACFOwBAFb0AAMk7AEC7vQCAuLwAgBM8AMDdvAAAfrsAgCs9AJDBvQBAszwAILS9AECwvQBQmD0AQCA9AMBTPQAAuDoAAEg9AABOvABAlj0AACc8AMDJvACADrwAwPE8AGCBvQAAJr0AQNk8AMCgPAAA9bwAQKa8AOAmPQAAiz0AQOs8AKBUPQDgSb0AQEM9AMCvPAAAQjwAgPe8AMCZvABgTT0AQIo9AAAuPQBgfj0AQJM8AABSOwAAAbwAIB49ACDxvQBAkjwAUO69AECpPACQib0AwLU8AABMOwAAwLgAwCE9AEAMPQAA7bwA8MS9AMBUPQDQi70AgCA9AIAwPQCA97wAgMU8ADCxvQAAm7sAgBe9AIAaPAAARj0AMMY9AEARvQCAST0AIGq9AIA3PQBAmTwAgBG8ACA+vQAA97sAwNQ8AOAcPQAgH70AoFm9AAATvAAACDoAwCI9AACEPABArL0AQAu9AIA9vADA/jwAAIG9ABDFPQCAW7wAYO09AMCgvAAAxDoAoAs9AID8vAAAojwAAAQ7AAD5OwAAKbwAAJA8AADEOgAAFL0AAIE7AMA5vQAAmrsAgO68ACAsPQAAoL0AwOK8AIBTPQBA9bwAQFI9AABiuwAASDoAgEe8AOAIvQDgPT0AELo9AADQPAAA+LsAIC89AMCtPABAPb0AQMk8AACCuwCAKbwAAGa7AICDvABgFD0AIFm9AIB4PADA57wAAKi7AED2PAAAT7wAgDo8AACGuwAgpL0AACi6ACA5PQDwlD0AADW8AMD+vACQsT0=","chunkHash":"27dd5cbe27f90e110a71abcb6c42db01a0a9bf2c6758a7c3ff194ce93579ad8c"},{"text":"File: `model/vgg3d.py`\n```python\nimport numpy as np\nimport torch\nimport torch.nn as nn\nimport os\n\nclass Vgg3D(nn.Module):\n    #...\ndef load_model_from_checkpoint(model, checkpoint_path):\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":69,"endColumn":55},"embedding":"AEC1vAAAgbwAADI7ADDKvQBAn7wAALA6AABXPACAGLwAgNy8AKALPQCANzwAAO08AMD5PADAobwAAIA5AAAMPQBQn70AoIk9AIAxPADA0DwAQO88AAClPQAARzwAAIC6AADqPAAAjTwAADA9AIBrvADAGT0AgHa9AAALPABAMr0AwDS9AAAOPAAwjL0AgKk8AAAQugCgAT0AgE68AJCEPQBgND0AIJa9ACAZPQCAST0AwKM8AAAZPAAAwbwAgB88AICqvAAADT0AgEy8AAACuwCAEbwAgDW8AADAOgCAzDwAwIU9AIBEvQAgE70AAKo8AOAjvQCQsr0AgEg8AABdPQBAQD0AAGG8AGBgvQAASLsAoFq9ADAUvgDAkL0AAKg6ACAOvQDAUr0AAFM9AAASOwAAHjsAYKY9AADmPAAAPDsAgJU8AAACOwBgjT0AANA5AKAJPQBAaL0AIJa9AAASvAAA67wAwKq8AAArPQAAz7wAAEK8AKBFPQDAqTwAgEA9AADgOgCQp70AkO49AAC7vACgHb0AQGM9AIATPQDgXD0AAC48AAC/uwAAWzwAAE+9AIAjvQDgUD0AAOa8AMDTPAAA/zwAAMI7AEDtvACABzwAABs9AECbPAAA5TwAgBY8AABougDAHT0AAC+8ANCjvQCgAj0A4Go9AGAmvQAAGrsAAOu7AIAivACgAb0A4FK9AOBZPQAw170AQOa8AKAhvQCAZb0AYBK9AAAdvQAAsj0A4IK9AMDHvAAgKr0AgB88ACB+vQCghj0AAMC8AGAKPQAAhDoAAHY7AAAQOwAA8TwAoD89AIAjvQBgYr0AAIG7AAA6vAAg4D0AAPU8AECsvABAm7wAQKM8AACxOwAAqDsAwM+8AKBlPQBQ070AAFg7AICgPADQs70AoJw9AMA1PQDALj0AAMa8AEBwPQDAIL0AIHq9AABGOwAAiLsAgP+8AEBMvQAAArwAwAC9AIAwvADgBT0AoC89AIBJvAAAlbwAgJW8ACBbPQCAGbwAgOo8AACPvAAAGDoAwJU8AACeOwBAhjwAQBa9APCaPQAAnjwAAFC7ABCLPQCghr0A8KO9AKAWPQBgkb0AEIi9AAA1PABAV70AoDq9AABcOwAASLoAQBY9AID0PACgKr0AAIa7AABcPABwmz0AQIw8AGB5PQDgID0AAMC4AIDfvAAAPDwAALE8AEBdvQAAdLsAQB69AIAGPQAAAj0AABa9AMCYvADA0LwAwKm8AECBvADA0LwA4F+9AADoOwAAHbwAoAg9AEAVPQAAuT0AAMI7AOAHPQAAiDwAAPA6AABaPACAFL0AIBu9ABCvPQBAujwAQKk8AACnOwDA5rwAgFK8AKApPQBg+L0AgA88ACAyvQAAhr0AQMw8AEDSvAAAtjsAALk8AED7vACAaTwAANC6AAAtvQBAIb0AQI68AKCwPQCggb0A0Ig9AACLPABAdr0AgBU8AMD9vACAtzwAANk9AECEvADANT0AQAE9AMAPPQBwgz0AQHW9AIBsPQCAsrwAACM9ABCQvQDA0LwAABo8AIB8vQBAcb0AAAo7AADRPACAvDwAANU7AECCPABAdj0AwB+9AIC6PADATD0A4Bi9AJCAPQBgeb0AABm8AKA6vQDAo7wAAFY8AACDPAAAZ7wAgN88AHCPPQDgSr0AwMm8AABYvQAAybsAQJK8AEAHPQCApjwAICi9AIChvACA7rwAIAE9ABC4vQBwoD0AwMc8AMAfPQDA6DwAwNG8AOACPQCgL70AkKM9AADZOwBAcz0AAI88ANCuvQBQ1z0AoAc9AAAYugCICL4AMIC9AADkvAAAADkAYA29ALCQPQDABL0AgBu8AIDFPADgAr0AYAg9AIBrPQBgL70AQE+9AECbvABAhjwAgG28AABwvABApzwAAFi7ACAxvQDAwjwAQA89AABqvAAAbLwAAOA7ABCsvQAA7bsAALy8AIDlvAAAuLsAgBU9ADCkvQAAIDkAWA6+AIAOvQAA3jwA4Cs9ACBqPQAAprwAICg9AOABvQCgbz0AAKc7APCevQDgQ70AwGQ9AKDFvQAARDsAgNg8AECXPADAu7wAALw6AGBUPQDAUD0AwMS8ACAAPQAgZL0AwBU9AED4PAAgET0AAOQ7AIAxvABAy7wA4Hk9ADCTPQCg4z0AQHo9AAAovABwg70AgDg9ALADvgAAwrsA0Ke9AKBnPQAARr0AAMU8AAAFvAAAFLwAoJI9AICvPAAAeLoA0JK9AECqPABwkL0AgLs8AGBBPQAgbL0AgFs8AIB2vQAA+rwAoF69AAACvQBg0D0AMJs9AACwOQAA8TwAgJM8AMBgPQAANjwAAGS8AABpvAAgTL0AAKC5AICaPACAY70AsJu9AEDRvAAASzwAAAQ9AICAPABQz70AAFu8AAC7OwCAFD0AQMC9AKDIPQAAKrsAAJI9AIDIvAAAuDwAgGy8AADavACAhzwAQII9AACuPABAurwAANi6AMATPQAAbbwAQGM9AABivADAxLwAAH67AACAOgBAhb0AoD+9AECyPAAA1rwAwF09AAA7PACA9zwAALC7AADbOwCQiD0AsN49AIDjvAAA4LkAIHk9AMA0PQDgUr0AYE89AIAzPAAA1rsAAME8AEDIvAAApTsA4A+9AIAhvADgCb0AAHE8AED3PABAk7wAgLO8AEAJPQDgwL0AQMy8AOBtPQCA6DwAAMg6AACMvAAg2T0=","chunkHash":"da3a1257e77f520f28afd63c65c23f16669e4dd1764809fc96c69bf1178b9585"}]},"file:///teamspace/studios/this_studio/scripts/README.md":{"hash":"d0e856ba4e31357fa509b4da24018a41a3a301a42d18ee728c101efada0bf6f3","entries":[{"text":"File: `scripts/README.md`\n````markdown\n...\n# Nuclei Data Visualization\n...\n## Files\n\n- `visualize.py`: Contains the `NucleiVisualizer` class that provides methods for visualizing nuclei data\n- `visualize_example.py`: An example script showing how to use the NucleiVisualizer class with the dataloader\n\n...\n````","range":{"startLineNumber":5,"startColumn":0,"endLineNumber":10,"endColumn":0},"embedding":"AABwvADwjj0AYBw9ADCsvQDgWb0AwP68AIBlvABAkjwAAMW9AABePAAAojwAwAo9AEDMvACQr70AAMs8APCYPQBArLwAAGY8AEC7PABQpT0AwJk9AACSvADgfT0AQFQ9AAAWvQCAPDwAoHS9ADCBPQAAuLsAwLS8AIAFvQBArrwAwMI8AAD8ugAwz70AgIG9AACwOwBgLr0AgLO8AEDrvAAA/DsAoLm9AABcOwCAAT0AYCu9AAAMOwAAXrwAYA29ABCCPQAANjwAAAI7AAAGPABAK70AAAM9AIAtvQAAAD0AUKe9AGBgPQDgHb0AADe9AAA4PQAA5LsAgIC8AOCWPQDAdL0AwOq8ANDAvQBA8bwA4Bg9AMDZPACgpz0AAFy8AOAuvQAAYLoAADc8AABwugDQmr0AwIM8AID6vADgd70AAMC7APCQPQBAk7wAkJm9AIAvPAAwgb0AQF29AAB+PACAHL0AgCK9AFCevQCgMT0AAH+9AKB4PQCAGDwA0Ic9AIAhvQDAoL0AQNQ8AIAIPQAAEDsAwPg8AGCDvQAAujsAMLE9AMAEPQBgHT0AAKK7AMDzvAAgKT0AIES9AAC4ugAg6z0AgJi9AABrvAAAiDoAAA47ACBivQAAMDwAID+9AEBXvQCAEDwAIBA9AIBcvQAA5jwAAOG8AACaOwDgQj0AgLW8AECSPABA57wAgEm8AABnPABQh70AYEm9AACzvABwqr0AoFQ9ACALvQDQAj4AoEE9AIAvvABgWj0A4HI9AADYuwCgIT0AAI+7AEBwPQAA+DsAQIQ8AADnPACgUz0AAFC6AEBAvQDAbr0AQJG8AEDxPAAACT0AACq8AAD5OwDgBz0AgA88AAC0vACAcr0A0NC9ANCMPQCAPL0A4HS9AOCKvQBAoLwAAAm9AIAcvQAAozwAgOC8AAAoPABAjbwAAIy6ACADvQAAkLwAwBY9AIBXvADA8bwA4Ey9AAD4PAAwur0AgHC8AACPOwCABL0A4Ja9AICXPACAaLwAoG09AACovAAAWD0AEIe9AICJvAAA6DwAgMK8AEAYPQDA2TwAALI7AADiPAAA4bsAQOC8AACUugAgfr0AgLc8AABMOwAAxDsAgNe8AAD4OwCA+TwAAJc8AADRPAAA+rwA0IO9AADguwBgkz0AwAY9AICCvACAaTwAQPo8AICjPAAAGDwAACk9AAAbPACAVTwAgIi9AABFPADAqT0AwI89AECMvAAA/bsAIEk9AIDVvADwkL0AADC7AKCWvQAAALoAgAw8AEAEPQCgVj0AYCG9AIAJPQCwgj0AQIQ8AKASvQBgor0AgPE8AADiPABAVj0AACA6AKBNPQCw2r0AgAO9AACtuwBApr0AgHU9AAD3OwAAfjsAAI47AABNvQBA97wAAKS7AICqvABgVz0AAAw8AGARPQAAZ7wAAG+9AADmPACgRr0AIIY9AABcuwDAgb0AgEi8AOAavQDAZD0AAHA9AAACPQDAgbwAADY7AAAMPQDAFj0AgFq9AEC0PADA7LwAQCA9AMDNvABAvrwAQPU8AADLOwAAy7wAwMa8ACAjvQAAobwAQJU9AEDIPAAAPDsAAEA7AAAgugDgOr0AgM48AEAJPQAA4DsAgIk8AIAzvAAAeTwAQL88AEDOPADA8rwAoAe9AJCcPQAAKLsAAFK8AMAtvQAA9DwAwIo8AIDOPACAoTwAoEm9AABougCwxD0AACu8ANDTvQBgMj0AIEK9AACAOgAA8bwAQD+9AGCRPQBgpL0AACI7AIA4PQCAMbwAgGa9AABsPQDAkT0AABW9AACqPQCgRb0AcJ69AKDKvQBwg70AAAi8AAB8vAAAj7wAwOg8AMDNvAAAQDkAoHe9AMAMvQAwjb0AoDs9AAAsuwDAgbwAgCm9AKAPvgDgXT0AAC28AKDFvQAAt7wAIHM9AAAJPACgKT0AAPA6AACNOwCAc7wAAGK7AADEOgCAebwAgAA8AGCPvQAADDsA0Mu9AMCHvADgXj0AIBU9ACBhvQCgAT0AAIA4ABDPPQAADbwAwJy8AIDlvAAANz0AAPA7AAArvACAvLwAIGI9ADCePQBAOb0AgHC8AADbPACAD7wAgFQ9AKAKPQDAKz0AwBI9AABSvADgbD0AAOw6AACvvACAajwAAKg6AOAHPQDwsj0AAKi7AACVOwDwkb0AQM48AIB+vABAGz0AAEC8AEDTvABgir0AAOu8AMBzPQAACLwAYDA9AACAuwAATb0AgJS9AACluwDAJr0AwCY9AIB9PQAAIDsAgDQ9AIC+vQBAXb0AkJo9AEC6PABAEz0AIJw9AEAmvQCwgD0AAIc8AAAXPQCAD7wAgOm8AAAhvQCAo7wAACU8AAA8vACAUjwAQKC8AAD8vACAZ7wA0Iy9AIA/PQAgAz0AwKS9AIB+vACAaTwAgHO8ACBZPQAAF7wAEJk9AEDSvABgtz0AYFg9AIBFvQAAaj0AAOW7AAAAuQAA3bwAANo7AGAyPQDQvb0AYM89AIB8vACAJbwAAOC7AHCqvQAAyLsAQC+9AKAUvQCArLwAAHY8AMAUvQDAxjwAIGO9AAAHPACA2zwAMBI+AEAbvQAgGj0AgGM9AAAsOwAAh7wAwJU8AECBPQAAUrwAYAO9AADqPACAnrwAIFq9AABMvQCA87wAQIi8AAAxPQBwiz0AYFg9AICQPAAAIr0AgC29AMDTPACAHD0A4AA9AIAUPAAAzzw=","chunkHash":"4db73a48ead7ba29a5f9ae98a939ca027684b293234770b5b693a2bbf0fbc776"},{"text":"File: `scripts/README.md`\n````markdown\n...\n# Nuclei Data Visualization\n...\n## Usage\n\n### Basic Usage\n\n```python\nfrom scripts.visualize import NucleiVisualizer\nfrom dataloader.nuclei_dataloader import get_nuclei_dataloader\n\n# Create a dataloader\ndataloader = get_nuclei_dataloader(\n    root_dir=\"path/to/data\",\n    batch_size=4,\n    load_volumes=True  # Set to False for 2D slices\n)\n\n# Create visualizer\nvisualizer = NucleiVisualizer()\n\n# Visualize a batch\nfor batch in dataloader:\n    # Visualize the first sample in the batch\n    sample = {k: batch[k][0] if isinstance(batch[k], (list, torch.Tensor)) else batch[k] for k in batch}\n    \n    # For 2D slices\n    visualizer.visualize_slice(sample)\n    \n    # For 3D volumes\n    visualizer.visualize_volume(sample, axis='z', frames=10)\n    \n    break  # Just visualize the first batch\n```\n\n...\n````","range":{"startLineNumber":12,"startColumn":0,"endLineNumber":42,"endColumn":0},"embedding":"AKAZvQAAIz0AYC89ACCevQBgg70AQNS8AICTvACgIT0AENy9AMC+PAAAKLwAwNE8AEDEvABAjL0AIHY9AMCvPQDgDr0AwCQ9AIB6PACAqj0AYLM9AACxuwDgez0AgDc9AMBIvQCATjwAwA29ADCPPQAAFDwAAFG9AABtvQDAlLwAAOK7AADXvADg070AAHO9AEDRPADAuLwAwKS8AABtvADA7DwAgKy9AACYPAAgNj0AQKC8AACnOwAAwLwAwPu8ACBtPQAAdrsAwMI8AOBQPQDgMr0AwIk8AAD3vAAAOD0AIHq9AMARPQAAjbwA4Ci9AGB3PQAAZjsAgI88AABqPQBARL0AgK+8APCcvQCAWLwAgF89AGBBPQBQgj0AQPm8AEBBvQAAsLsAAEM8AACkOwDgm70AYAU9AIAvvQAAd70AQMm8AGAePQAAkLkAYEu9AADsOgCgjb0AwIe8AABsOwCA/LwAUIe9AECdvABgPz0A8Ia9ACB6PQAAELoA4KY9AAB9vAAwor0AYAg9AMDTPAAAEjsAIDA9AADDvAAAADwAQKw9ACApPQAgAD0AALK7AECKvADAqTwAIGC9AAByPABQvz0AMIu9AIAWvQAAobsAAEi6AMCfvQAAZ7wAAES9ADCNvQAAWDoAICA9AACEOwAA0TsA8Iy9AECpPACAQT0AQJ28AIAYPQCAkrwAABu8AOA+PQBAxb0A0IS9AIABvQCQnr0AAKo8AAC4vABw+j0AQNs8AACtuwBgoz0AgAE9AABYuwDA5jwAAOq8AACQPQAACDsAAMU8AIC+PAAAVj0AgDS8AFCGvQCAEb0AgJ+8AEDrPACgCj0AAC28AACnOwDgDj0AwO48AAC0vADAg70AQP+9ABCdPQCgj70AIEe9AEB3vQBAvLwAwIW8AIAkvQBAkTwAQMy8AIAUPQCA7bwAABi9AABxvADAlLwAAJ48AOARvQBAkLwAIHe9AADBPABgwL0AYBU9AECLvAAAyLwA4Gi9AADXOwAAubwAgCU9AEByvQDgZT0AACS9AAAHvQBAWz0AAO+8AID0PAAAfDsAAJg8AAAgOwAA/7sA4BW9AIAGPQBgdb0AQPI8AAB4OwDAkbwAIFm9AACDOwDA+TwAwI48AADlOwCAUb0A4EG9AAB8vABAtT0AgHI8AADwuwAAmDoAgJ88AIBCvAAAYjwAIBg9AIAXPACAlTwAQFi9AIBaPADArD0AsIY9AIBbvAAAOLoAsJc9AEC+vACwgb0AQJY8AAAhvQCAnTwAAPk8AAAPPQAA8DwAQL+8AACguQCQkj0AgE08ACA7vQAgjr0AYCM9AAADPQDgSD0AAD68AACbOwCgw70AgC29AACOvADgqr0AIA09AAAiuwCAWDwAACI9AIAwvQDA37wAgEM8AABpvADgED0AAFo7AIB9PAAAVrwAQIG9AAAVPAAgab0AYIc9AIDevADAPb0AAGm8AICrvAAgRD0AIB89AEDcPADAgbwAAAQ7ACBRPQBAsDwAAPO8AADDuwDAxbwAYH49AABlvADAO70AwPM8AEDWPAAAi7sAAIY7AMDxvAAAKDoAgE89AIAHPQAAmzsAAFa7AADFvAAgN70AAGg9AEBjPQAAYDoAgII8AIBvvAAApzwA4EQ9AIB4PQDAiLwAAKI7ACCFPQCAgzwAABo7AKAfvQAAAz0AALM7AADVPAAA2DoAgD69AADGvAAgij0AgEc8AGClvQAA6TwAgMu8AIDovACAjLwAgG+9AKB2PQAwtL0AQO68ACA6PQAAEr0AQJG9AECzPQBALz0A4DW9AECjPQCgK70AAGS9AIDivQBgib0AwO28AAB0PADAAL0A4BI9AIC2vAAA0LkAwDu9AABivACQoL0AgM88AIBoPACACLwAQPu8AID3vQCAZT0AIAG9AEDSvQAA/bwAwHs9AAD2OwDAFj0AgAu8AABcPAAA2jsAAD28AABDPACgAT0AgK88AOBGvQAAlDoAQKG9AOAFvQBAjj0AgAY9ACBZvQAA3zwAACM8ABChPQAAt7wAACi6AIBWvADgOj0AAFw8AAA0vABgJb0AAHc8AACZPQDAcb0AQPW8AGA+PQAAnjsAwKk8AICcPADAWT0AoCE9AIBxvABgOj0AQKI8AECvvABAgLwAAE08AGAjPQBAnD0AAOA7AECBPABA77wAwCU9AGA/vQAgFj0AQOy8AIANvQDAob0AIE29ACCXPQBAIL0AIKM9AKAovQAgQr0AoJG9AADTuwAgir0AICs9AMBaPQBAw7wAAMo7ALC2vQDgVL0AkKI9AGByPQDAKj0AoBc9AACSvAAgfT0AAIg7AKBHPQAAlbsAAL28AIAlvQBAQb0AAMG7AEDwvACAZTwAwPa8AECEvAAAbjsAcMq9AEAxPQAA/TwAAFG9AICdvAAAmLsAwM28AAByPQAAGjsAoEU9AMDIvACAxz0AYGg9AEA4vQDA4jwAAJq8AADWOwCgP70AAEQ8AGA1PQDgrb0AsNg9AEDfvAAAKDoAAIC8ADC6vQCAX7wAAHe9AECMvADgQL0AAAo7AIALvQAAmDwAYDm9AACeuwCQsD0ASBA+AIC/vABA3DwAYEE9AICWvAAA+7sAgIQ8AAB3PQCAVrwAYAW9AKAvPQBA7LwAgB48ACAyvQAAyrwAAJy7AGA/PQDgxT0AEIk9AIAtPADAQb0AgGW9AABaPACAVTwAgJg8AACNPAAAkzw=","chunkHash":"d508e0b553050c843925dd02ffc2c23e409410a67bd20eed33de8b67eafccff7"},{"text":"File: `scripts/README.md`\n````markdown\n...\n# Nuclei Data Visualization\n...\n## Usage\n...\n### Running the Example Script\n\nYou can run the example script with various options:\n\n```bash\n# For 2D slice visualization\npython scripts/visualize_example.py --mode 2d --show\n\n# For 3D volume visualization\npython scripts/visualize_example.py --mode 3d --show\n\n# For visualizing multiple crops from volumes\npython scripts/visualize_example.py --mode 3d --multiple_crops --show\n\n# Filter by class ID\npython scripts/visualize_example.py --class_id 1 2 3 --mode 2d --show\n```\n\n...\n````","range":{"startLineNumber":42,"startColumn":0,"endLineNumber":60,"endColumn":0},"embedding":"AIBjvQAggD0AwFE9AOCxvQAAR70AAOi7AAB0uwBAbT0AALa9AACFPAAAXDsAAKI8AABHvAAALLsAgFE9AGAzPQAADrsAQPw8AAAIOwAQiT0AMI09AACtOwCAQD0AIDI9AGBvvQBAvDwAgOO8AGCNPQCADz0AgLi8AAAzvQCAkLwAAJM7AMAXvQDA570AkLS9AADTOwAgP70AwOW8AMDFvABAmzwA4IK9AIAAPACAOTwAAJS6AMDyvACAWb0AgFi8AOBdPQAAKLoAAJQ8AADlPAAAeL0AADU8ACAYvQAADDwA0Iu9AKCMPQAA1LsAoA+9AECLPQCALr0AgJq8AGCAPQBAGL0AAFg6AGCuvQAAf7wAQMA8AIApPQAAQD0AAA69AIBLvQAAuDsAQE49AAB8uwCQ170AAGw7AAAIugAAVb0AADA7AGAiPQCAQTwAgMq8AOASPQBwmr0AAHm9AACcuwBAor0AQGe9AMA5vQAAAD0AgGO9AOCcPQAAFjsA4DQ9AIACvQDwt70AAAE8AGB2PQCA0zwAoDY9ACAlvQDApzwAwJg9AAD7PABAET0AoAE9AIAXPADASj0AIB+9AICUvADQtD0AwDO9AMAyvQAAGzwAQNm8AHCEvQAAKbwAwDG9AMAovQCAPDwAAEg9AECBvABAHT0AQDO9AACbOwAA/DwAAK+8AAAMPQBANb0AAHo8AAANPACAer0AIFO9AACavABwnr0A4Ec9AIDPvAAg7D0AgN48AICQPACQiz0AIFc9AIB8vAAgNj0AgN68ABCZPQCASzwA4EQ9AKAgPQCgvD0AAIc7AGB4vQBA07wAgEq8AMBePQDA6zwAgAW9AABYOgDA5jwAQC09AIBlvAAgQ70AYO69AAB+PQCAab0AwFW9ACBUvQAAQrwAgMi8ABCJvQCA0zwAAH+9AEABPQAA9LoAAPG8AABKvABAyrwAgCo9AEC6vACA1bwAYGa9AEDrPACwlb0AgBM8AADQOgBgOL0AoFS9AADZOwAA27sAgEs9AIDqvABAojwAgD29AIDpvADgZz0AgOG8AGApPQBAijwAAB48AIAZPQAAi7sAgA29AACAOwAAPb0AAD47AAA8vQCgGb0AAO+8AABtPABgKz0AAKI7AAC4PADAPr0AoK29AAB9vAAAlD0AwJs8AIAKPACAdbwAQIw8AIDnPACAkzwAAOU8AAAVvACgRj0A8Ji9AACNPADAhD0AYKI9AECFPAAAUjwAwE09AIDZvABgSr0AAJ28AAAGvQAAZLwAgHa8AKBKPQBAJD0AgA+9AICxvADAyT0AAGc8AMDJvACw7r0AwBs9AMDlPACAwTwAAIY7AIA0vADA3r0AQL+8ACAGvQAgSb0AYAY9AADgOQCAmTwAgG28ACBOvQBgg70AQJA8ACATvQAgfT0AwNg8AEDCPAAAlDoA4N29AIAXPAAA7DoAYMw9AMDvvABwkL0AAJu7AIDUvABAMz0AgN88AAAAugAAKb0AAMO8AEAVPQAA2jwAgLW8AECoPADAz7wA4Fg9AIAfPABger0AYBM9AACoOwAAajsAgNC8AABsvQAAaTwAoDY9AMAdPQAAoDkAANc7AADGvACAiLwAMKY9AEDnPACABDwAgHM8AMDbvAAAGzwA0II9AEAcPQAgar0AABC6AEBQPQAA8rsAgAM8AICDvQCASD0AAAS7AMARPQBA5zwAAHK8AIDCvABghD0AAEI7AECUvQCgTz0A4A29AABoOgAAmDoAIB69AIBFPQDA3L0AwMi8AKAwPQCAjTwAgIS9ACBxPQBAqj0AYC29AFCaPQAAFL0AUJC9ADgMvgBggL0AgJy8AIDMvACA+rwAQP48AIBqvACAkrwAAEC9AAAbvACQlL0AgD88AGAtPQAA7jsAoAm9AMDGvQBgGT0AAMC6AMDUvQBAr7wAgF49AACtOwCwlT0AANy6AACjuwAAA70AAFq7AMC/PABAqjwAAFa7AFDKvQDA97wAsLW9AKAqvQCAiz0A4DM9AMCTvAAgEj0AgJS8AOB+PQBARL0AgCO8AAACvQDgBz0AAHA8AAC9OwBAIb0AAAY9AMDGPQDgMr0AAOw7ACAJPQAAMLoAYAY9AKAhPQAgDD0AYEc9AIDhvABA0jwAAGk8AADwvACAijwAgBY8AECePQCwtD0AAPE7AACwvAAAjbwAoA49ACAcvQDgWj0AgIi8AABHvABgg70AgCe9AOAjPQDAi7wAQKE8AAAiPABgAb0AQGO9AACAOQCAe70AgIg9AGCXPQDgMr0AAOQ8AICVvQDA1rwA4HA9AICFPACArjwAoBo9AEC/vAAAjT0AAPk7AEAHPQBAwzwAYDe9AMDuvACgCb0AgKG8AIASvAAA+zsAAJe7ADCZvQAAOLwA0K29AADBPADAk7wAQKu9AADQOgAAGjwAAHw7ABCHPQAAuLoA4GY9AIDjvADAdz0AQFA9AKA2vQBAHj0AIDa9AECWPABAnLwAwJI8AMCgPAAAjb0AwPM9AIDYvAAAvLsA4B29AJC/vQDAgbwAgB69AGByvQDA27wAAMY8AAAMOwAAUTwAIE+9AMBWPQAAeT0A4Oo9AMAcvQAABDsAgFc9AEC/PADAqLwAAMc8ACBVPQBAgLwAgJy8AICVPADA7rwAACu8ADCIvQAAwrwA4CU9ACAiPQBQpT0A4F09AAAzPAAgU70AAIW7AMC5PAAA+zsAQN88AAA4OwAAYzw=","chunkHash":"4dd05c5c66b352639ba83c239d4c9d27e08d7aa488728933d2fb78ee12cde248"},{"text":"File: `scripts/README.md`\n````markdown\n...\n# Nuclei Data Visualization\n...\n## Usage\n...\n### Command Line Arguments\n\nThe example script supports the following arguments:\n\n- `--data_dir`: Path to nuclei dataset (default: from config.DATA_ROOT)\n- `--class_csv`: Path to class CSV file (default: from config.CLASS_CSV_PATH)\n- `--output_dir`: Directory to save visualizations (default: from config.VISUALIZATION_OUTPUT_DIR)\n- `--mode`: Visualization mode: 2d (slices), 3d (volumes), or crops (multiple crops) (default: 2d)\n- `--class_id`: Filter by class ID(s)\n- `--batch_size`: Batch size for the dataloader (default: 4)\n- `--num_samples`: Number of samples to visualize (default: 5)\n- `--slice_range`: Range of slice numbers to include for 2D mode\n- `--show`: Show visualizations in addition to saving them\n- `--multiple_crops`: Use multiple crops per volume\n- `--max_crops`: Maximum number of crops per volume (default: 8)\n\n...\n````","range":{"startLineNumber":60,"startColumn":0,"endLineNumber":76,"endColumn":0},"embedding":"AMDHvABARD0A0Ls9AADNvQBAaL0AwN08AEASvQAA9zwA8Im9AAAJPQCAJ70AgEA8AAA6OwCAF70AwJI8AIAUPQDgHb0AACQ9AMCcPAAAqD0AoKA9AADkPACAKj0AgAS8AMAhvQBAAz0AgG28ACAyPQBgez0AwPG8AGCBvQCA/LwAAAW8AGByvQCgy70AoKW9AMAePQDACr0AQL+8AACCvACAN7wA8LG9AAABvAAAXzwAgHS8AICRvAAQjL0AkJe9AOAEPQCACjwAgBM9AIDCPAAgWr0AYH09AACAuQDAmDwAoFC9AADePAAAGjwA4Ei9AOCoPQAga70AgEc8AMBSPQBA6LwAgJG8AAAovQAA97wAACg6ACBOPQCAoD0A0Iy9AIB2vQAAYjsAIBM9AABrPACw570AAMc7AABGvAAwlr0AALw7AMBPPQAAu7wAwHG9AOBfPQCAa70AQCG9AADRvADwib0AAEO9AICzvABAGT0A4Ei9AGDFPQDA5bwAwNY8AACaOwDAyb0AAJ07AACCPQCAwTwAgFo8AKAEvQCAZDwAsLs9AEDhPAAAGDwAQA89AADsPAAgHz0AQBq9AABgOwBQhj0AoHu9AACmvABAxbwAgBu9ACBMvQAADLwAQBW9AEDWvAAAoLkAYHE9AAAeuwCACj0AANy8AADQOQAgGT0AgA88AIAoPQCA+bwAAHI8AEDUPABAgb0AwCG9AAAjvQAQuL0AYDc9AED0vAAw3j0A4Ao9AMD6PACQjz0AYA09AADhuwBgOT0AQNy8ADCJPQAA9DsAQGs9AIBvPABAnj0AQAA9AOBWvQBAj7wAgA+8AMCcPABgEj0AgJq8AABuuwAgSz0AoDQ9AEDSvABQkb0AEOS9AJCRPQCAFb0AAA69AOB+vQAAUTwAAMM7AOAnvQBgZT0AgIG8AICwPACAHrwAAMK8AADVuwAA+bsAgLY8AADxvACAU70AQHi9AACNuwBw2b0AAJA6AICavACA4rwAABi9AECgPAAA9zsAgIs8AAASvAAAmDwAgFG9AADuvABgDT0A4Ga9AAC+PAAA/DoAAHU8AAA5PAAAyTwAwCG9AMD5vAAA8LwAwJM8AAAQvQAAKLoAQAi9AAAYOgBA8zwAwNO8AGAWPQAgVr0AwAS9AMAlvQBAFj0AwKE8AIAVvACAurwAgE68AABAvAAA0rsAAMI7AAC6vADgLz0AAHm9AMDwPAAgXD0AUJc9AECkPACAoLwA4M89APCLvQCAUr0AACm8ACA3vQAAzLoAAO67AAAKPQCA+TwAAE+8AACYvAAAqj0AANA6AADDvABwvb0AQJc8AIAiPABgGT0AABA7AAD6uwDgHr4AwJK8AOAOvQBggb0AwP88AAC4ugAAyzwAAPA6AEAZvQAAg7wAABi7AEDuvAAgpT0AAPy7AIAOPACAGbwA4Mq9AACVuwAARTwAkJc9AIBGvQDgEL0AgAc8AADpuwDAcz0AwD89AICpPACAGr0AoBG9AIAjPABgDT0AgCE8AAAmOwAA8DsAYCk9AAC+OwCACr0AQA49AADauwAAybsA4CK9AOBDvQAAVLwAgOE8AKBmPQAAdbwAALw6AECzvAAAhDoAQC89AEAdPQCATz0AAFW8AAD2vAAAODoA4Bw9AMCJPAAAKb0AAKi7AADEPAAADTwAAKM7AGAxvQAgUD0AgAc8AMCoPQBA6DwAwLi8AACEuwCQkz0AQJU8ALCNvQAgUT0AAOy8AIAlvAAAYLsAwNi8AIDaPACQ5b0AAH67ANCUPQCAwTwAYHS9ACAdPQAgMj0AEJC9AKBxPQBA0bwAQIG9AKAnvgCgS70AwJi8AADIvACArbwAoHI9AAA8OwAAkDsAwE69AEC0vAAAy70AoEg9AMDwPAAAZjsAwGa9ACCjvQAAcDwAgKk8ADCWvQAABTwAgPs8AACTuwBwwD0AADA8AEA2vQAAo7wAQJY8AEAgvQBgXz0AACA7ABCHvQCgKb0AgMO9AEC0vAAAdD0AwF89AAD2uwCgIz0AABm8AEBaPQBA9bwAAHK7AMCjvAAAMDsAAPg7AIArPQAAYDoAAFg8APCWPQAA2DoAAJy7AEADPQBAIb0A4Ks9AMDAPACAUj0AALY8AIDXvABAST0AADY7AKAavQBgQD0AgEU8ACAgPQDAnz0AoBE9AAAAuwDgH70AIHQ9AGAlvQDgIj0AAAs8AAB2vADgmr0A4DS9AED+PADAJr0AwLs8AACAuwDA9DwAwO69AAAeOwBwj70AwGU9APCJPQAApLwAwJw8AFCJvQCgI70AsJM9AMA6PQAAgz0AgPE8AOCgvQAAaD0AAFS8AOBYPQDAjDwAAMm8AACFPAAAhrwAQIe8AABhvAAAzjsAAOC7AEDWvACgBL0AANO9AMCPvAAABLwAkLm9AABzPAAA0DsAAGa8AGDSPQCALb0AgFY9AAD8vADAYj0AoCg9AADhuwAAPD0AADG9AIBXPADAqrwAwNE8AADLOwBwlL0AYJ89AABAPABAgbwAYES9AFCLvQCgHr0AYJ69ACBpvQAAOjwAwM48AACGOwCAODwAgD69AICBPACgLT0AAOw9AIB/vAAAYjsAQGM9AIC6vABAML0AAKi7AMDZPAAAGrwAIA69ACAOPQBAFL0AACu8ACCCvQAgCL0AgDo8AABrPADw3D0AYEw9AAC4uwDAOr0AACq9AADEuwCAhLwAACg6AAAgOgDAFz0=","chunkHash":"3da87db0ed561c4cd44eef8c90bf0b2e59978dbbfccbe3d6c9b2e10ef5e4e94e"},{"text":"File: `scripts/README.md`\n````markdown\n...\n# Nuclei Data Visualization\n...\n## Usage\n\n### Basic Usage\n...\n### Running the Example Script\n...\n### Command Line Arguments\n...\n````","range":{"startLineNumber":12,"startColumn":0,"endLineNumber":61,"endColumn":0},"embedding":"ACBzvQBgVD0A0IQ9AFCOvQCATb0AgGm8AIB0vABQgT0AkLW9AIAWPAAAfLwAgN48AID9vACAmbwAAE89AOCFPQDAwbwAgGg8AIDmPACQoD0AsKU9AAAKvABgXD0AIF89AOAkvQAgRz0AIHa9AABOPQCAjjwAwNm8AABavQDA/LwAYA89AMD+vADgkb0AoDe9AIBcPABgfr0AwAO9AADTuwCAHrwAsK+9AADMugAAZDwAAEC9AKBfvQAALL0AwNu8AMBuPQCALjwAgDc8AIAzPAAgeL0AAM88AEAdvQCAgDwAoEa9AJCnPQBAmrwAQMe8ALCjPQCwgL0AwNK8AEB2PQDgKr0AAL27ANC3vQCAwrwAIBo9ACAdPQCQvj0AgCe9AADvvAAAPDsAwBA9AAD0OwDQtb0AAIy6AIA+vACgUb0AAFo7ACBNPQCAGrwAsKu9AOAYPQDAYb0AAHO9AIBPvACQnL0AAC69ACBkvQBALz0A0JO9AGBKPQAAgDsAgM08AKAzvQAABL0AAGQ7ACAMPQDgDT0AALG7AIBjvQCACrwA0Ks9AABRPAAgLj0AAIE8AABeOwAgXT0AYEe9AAClOwCQhj0AAPG8AEAdvQAgCT0AAO47AAALvQAA3LoAAD69AACivAAAgTwAYFo9AAB9vACAsTwAIB69AABwuwDAfT0AICm9AECaPADAu7wAAFq8AIANPAAgFb0AgF29AAAYvABAq70AIJE9AAArvAAg7j0AoHo9AADwOQBAiD0AAIw9AABguwCgFT0AgGu8AABcPQAANDsAUIA9AEBdPQDgjD0AAIw7AKBEvQAA0DoAADS8AIDgPAAAADwAYHC9AICEPADggT0AgFM9ACAWvQAgV70AsAO+AIB6PQAgZr0AAE69AABSvQAAKjwAAKm7AGClvQAArjwAQBW9AAAXvAAAhrwAgDm8AEBKvQAAyLwAYIg9AACHvAAAbLsAIGy9AMDdPABgm70AgBw8AABDPABAIb0AYC+9AACSPABA6LwAgBQ9AMDqvABAhDwAgDq9AIBPvACQkD0AgFe9AIAOPQCAhjwAAHC6AMCfPAAAmDoAwNS8ACAqvQCggL0AAKC6AEBdvQDgP70AAA29AACQPADAuDwAAEE8AACePACgab0AYKe9AAC9uwAgTT0AALo8AIAOvAAAEbwAALY8AEBBPQAAEjsAQDM9AAA/PADAbz0AYJi9AACPPACggT0A0JI9AAC+OwCAqLwAQOk8AMDVvABAI70AACg7ACBNvQBgGb0AACi7AMAHPQBA/DwAgL28AAAAvAAgtD0AAFg6AAAHvQBAvL0AAAE9AABAPQAA9zwAAL27AECLPAAgpr0AAPW8AACbvABgO70AYJU9AACaPACA+TwAAD28AOCLvQAgML0AAL47AIAevQDgST0AAHI8AGBWPQAA2rsAIOa9AAAvvACAO7wA0K49AMCjvAAgIL0AALi8AKBBvQAgND0AAH08AGACPQDgK70AgE+8AMDwPABgEj0AwOy8AIB1PACAIzwAgEs9AKApPQAAUbwAgJs8AAB3PAAAKjsAAPa7AGBFvQAAEbwAQJw9AEDyPAAANLsAAFg8AMCDvAAAADkAsKg9AADQuQAAOLoAgHc8AAC4vAAAcLsAoFI9AABNPQDA3LwAgKG8AAABPQCAeLwAgIe8ABCNvQAAEj0AgIg8AACQOgAAOTwAABq7AGAuvQDQqz0AgJO8ANC8vQCgcz0AgAq8AIA8vAAgGL0AANi6AOCHPQBgyL0AAAM8ANCJPQBgBj0AwI29AEA/PQDwsz0AgEu9AMB9PQDAhbwA8LW9AHgFvgBgX70AAB68AACqvACgab0AgM48AADuOwAAOLoAIKu9AABsOwCwi70AgFO8AEDwPACAM70AAPW8AIDnvQAgYz0AAAa7AEDBvQCALLwAYEA9AAB1vACwsT0AAOi6AADsuwCABL0AAF+8AIARPQCAEjwAAL07AECRvQAAnDoA0Mi9AACivACgcT0AIA49AIADPABAnTwAAD68AJCpPQAA77wAwIG8AADYvACAtjwAAGk8AACFOwBAjbwAgFQ8AEDGPQDAvLwAgGW8AIC6PACAI70AIFE9AKAMPQBALj0AgNM8AAA0vQCgST0AAKU7AMDhvABAOz0AAIQ7AAAePQBAoz0AAJG7AAA8vAAAGr0AQMQ8AED0vADgWz0AAK67AMD8vAAAfb0AQMK8AEBfPQAAjbsAAJI8AAC0ugDAZ70AYCO9AAAEvACQmr0AgII9AIBCPQBAtLwAIHo9APC0vQDAxrwAIGg9AKAtPQCQgT0AwHo9AIDIvACwpj0AACI7AIC5PACgCD0AAP67AAAuvQAAM70AAIy6AADUugAAHzwAgAy8AOCKvQAACLwAAJK9AIAoPAAAwbwAwGG9AGAOvQAA6rsAAPo8ANCuPQAABLsAMIs9AIBTvABgmj0AgBM9AGAnvQDgVT0AwAm9AAD8uwDAA70AgO08AIB3PAAgar0AgM49AIBXvACAt7wAAAi9AGDGvQAAbLwAAI27ALCYvQAAuLwAwMo8AMC0vACAhzwAAIW8AEDoPABAMj0AaA8+AEDbvACAhDwAIGs9AMCTPAAAa7wAAKY8AOAzPQBAgLwAgDi8AKAOPQAAT7wAAPA6AIB+vQCA3rwAgH68AKAMPQBAWT0AIKY9AIBpPADgPb0AwJg8AADWPACAATwAAAY7AADMOgCAkjw=","chunkHash":"076ad0eef1ad41e66b6e184f3fcc889b42cefdaed77266bf7e3c7e061b36303d"},{"text":"File: `scripts/README.md`\n````markdown\n...\n# Nuclei Data Visualization\n...\n## Visualization Methods\n\nThe `NucleiVisualizer` class provides the following visualization methods:\n\n### 1. `visualize_slice(data_item, save_path=None, show=True, title=None)`\n\nVisualizes a 2D slice from the dataset, showing the raw image, mask, and an overlay of both.\n\n### 2. `visualize_volume(data_item, save_path=None, show=True, title=None, axis='z', frames=10, interval=200, colorbar=True)`\n\nCreates an animation showing slices through a 3D volume along a specified axis (x, y, or z).\n\n### 3. `visualize_multiple_crops(data_item, save_dir=None, show=True, rows=2, cols=2)`\n\nVisualizes multiple crops from a volume in a grid layout.\n\n### 4. `visualize_batch(batch, max_samples=4, save_dir=None, show=True)`\n\nVisualizes multiple samples from a batch.\n\n...\n````","range":{"startLineNumber":76,"startColumn":0,"endLineNumber":96,"endColumn":0},"embedding":"AEAnvQCgWT0AAJc7AOCFvQCQt70AAPa7AIAZPABgPD0AIJW9AIBUPAAARDwAANA7AIAQvQAAIb0AgGI8AOBcPQCAirwAgEM9AACMOwAgrz0AMI09AIB9vACgVj0AgLE8AOAYvQAALjwAgJi8ALCXPQAA4DoAgES8AIBFvQCAqrwAAIM8AEDxvADQwr0A0JO9AAAgOwAAoLwAAIi8AACIuwCgJz0A8K69AAAGPACgDT0AAO47AADROwBAK70A4Bm9AIBmPABAzjwAAKU8AOBqPQDAAr0AAFw7AEClvADgJz0AEL69AKAcPQCAzrwAwEy9AKCnPQCAT7wAAI47AKA2PQCAXL0AAFq7AICQvQAAl7wAQIs8AECMPABwjD0AIES9AMA7vQAAIDsAQP08AABkuwAwvL0AANG7AEAJvQCAS70AQNW8AMBdPQBgFL0AgNS8AACuPAAAkr0AQBO9AMCrPACQlL0AQEm9ADCMvQBgYj0AQNm8AECIPQAAxrsA0Kw9AGArvQBQnL0AgDK8AJCHPQDAljwAgFY9AMBGvQCAdzwAALQ9AID5PACAVjwAgNA8AACtOwCA5zwAAOi8AIBivABgpj0AAAe9AEC0vADAsLwAgBq8AGA8vQCAkLwAAJC5ABCivQAApTwAwAE9AAAxvACAOT0AQGu9AAAKuwAAiDwAAOw6AAAoPAAAO7wAAIy8AAB1PADgz70AoKa9ACAdvQAgar0AIF49AGB4vQDA9D0AgF88AIBmPACAwj0AAOC6AAAgugBAzTwAwMS8AGCTPQAAlDsAgAM9AECtPAAQjT0AANU7AMB+vQDA2b0AQNS8AOBTPQDQhD0AwLW8AEChvACAqTwAwMc8AOAYvQDgXL0AqAG+AOBSPQCApL0AgAC9AICNvQBAqrwAgJC8AMCqvACAET0AQNq8AAD0PAAAIjsAgNq8AIB1vADAD70AIEg9AEDJvAAAk7wAsIu9AMAEPQDgm70AgBo8AIA7vADA5LwAwFO9AECAPAAAJLsAAB09ACBSvQCgQj0AwCm9AOAxvQAACTwAQDm9ACBIPQAAPTwAgII8AKAgPQBAmbwAoCW9AEBBPQAAYb0AYBA9AMDAvACgbb0A4C69AADBOwCA/zwAADA7AACquwCACL0AABy9AEDZvAAgmj0AgDo8AEALPQAAo7wAQNc8AACyPABA+jwA4B49AAABvADAUz0AcIi9AADCPABA8jwAYK49AAA4PAAA+DsAUKI9ALCTvQDghr0AgFG8AMAFvQCAKDwAgEA8AMAfPQBAjTwA4C+9AABBPAAQoj0AAO88AMD8vADgzL0AgLo8AGAAPQBAcT0AAPg7AAAcvACwx70AAO28AMDuvAAgXr0AIIc9AIDhvADAUj0AgMc8AICCvACAib0AADC7AKAjvQCgij0AAGQ8AICTPAAAl7wAYDG9AAAOuwAAFLsA8K49AAD4uwCArL0AwLa8AABgOwBwij0AwDA9AEABPQAA77sAAF+8AMDjPADAzzwAgAm8AADJOwAAsLoAAII9AICkPADAAb0AIA89AIBMvADAqbwAAFa8AMCXvAAAMTwA4BE9AADEPAAAZLsAgC+8AAC4OgCAOL0AgFQ9AKBbPQCAejwAADg8AADwugAAgjsAwAs9AMDOPADAAr0AwOG8AEAYPQAA2DsAgNe8AEDBvABQmz0AgFE8ACAVPQAAszwAQCu9AAAgOQAAUj0AAAY7ACB/vQAAnrsAoEC9AAAbvAAAAjsAULW9ACBbPQAAmb0AADS9AIAbPABAY70AAI29AECLPQCACjwAoH29AIBGPQDAIr0A0K29AGAEvgBgXb0AgGW8ACAOvQBAgrwAYBg9AIAyvQAACrwAoBW9AOABvQBAmb0A4EA9AEDoPACAcbwAACC9AKC5vQDA2zwAAIw6ANDkvQAAhLwAIJc9AIAhvAAAJT0AAJC8AADkugAAFL0AAOq8AACNOwAAyTsAAK88ANCovQCAurwAAM+9AAAlvABgTj0AQNw8AAAQvQAApjwAgBu8ABCsPQDgFL0AwKM8AICcvABAQz0AANM7AACfOwAA+bwAYFA9AMBSPQDQk70AgIC8AACoPADA2bwAQHs9AAAKOwCgUD0AIEI9AIBSvADAkTwAgEc8ACAQvQAAqTwAAIQ7AGB3PQCQmT0AAF48AABcOwCgIb0AwCw9AKAOvQDA/zwA4Aa9AACSOwCAe70AwHG9AKB0PQCA/bwAQE09AMC/vADgEL0AYJS9AADuuwBgB70AsJU9AGB5PQCAt7wAALI7AHCPvQAgB70A0Kg9AOBkPQAAzTsAgPg8AEBEvQAQpD0AgEA8ACBuPQAAiDsAQB29AIDKvADgGb0AwPS8AACuvAAANzwAAKi6AMAyvQAAkjsA0Me9AMD5PADAGT0AILW9AACfvAAA2DoAADC6AFCbPQCgI70AwFc9AIBsvQAQhD0AoGw9AADvvABgcT0AALU7AICTPAAgNr0AAPo7AGAyPQAgz70AkMo9ACAdvQCAHzwAAAAAAKC5vQAAOjwAgBm9AID/vACAH70AQKk8AACWvAAAxzwA0K+9AAAsPQDATD0AENU9AECdvAAAzzsAYFU9AABLvQDAkrwAwMM8AKBXPQBAgbwAgDK8AMDpPABwiL0AAFC8AMBFvQAA07wAAJ48AGArPQCgwz0AAIU8AIBXPAAgAr0AgAe9AIDZPADAjzwAAIk8AIBpPACAhDw=","chunkHash":"fc9ff92e73822c0a99888c84204826ec5974906a6c9e3c9404f21f464ad521aa"},{"text":"File: `scripts/README.md`\n````markdown\n...\n# Nuclei Data Visualization\n...\n## Customization\n\nYou can customize the visualizations by passing additional parameters when creating the visualizer:\n\n```python\nvisualizer = NucleiVisualizer(\n    output_dir=\"custom/output/path\",\n    cmap='viridis',         # Colormap for raw images\n    mask_cmap='hot',        # Colormap for mask overlays\n    alpha=0.3,              # Alpha value for mask overlay transparency\n    figsize=(12, 10)        # Figure size for plots\n)\n``` \n````","range":{"startLineNumber":96,"startColumn":0,"endLineNumber":109,"endColumn":0},"embedding":"AADvuwDQgD0AQDc9AIBYvQBQmr0AgIW8AIDZPADgVD0AAIK9AIAPPQCA1LwAIE89AAArvQDgiL0AgDM9AOBAPQAAyLoAwBk9AMARvQDwqD0A4HM9AACIuwAALD0AAPo8ANCQvQBgDj0AwEa9AABuPQCAgDwAAAQ7AHCEvQDAybwAAGg7AMACvQBgA74AcJe9AMDvPADAU70AALW8AIBzPAAAGDsAMJe9AACtuwAwjz0AIAe9AMCVPACAl7wAAP28AACNPAAACLsA4BI9AECVPAAQj70AAF67AIABvQAACj0AcI+9AOAvPQAgIr0AAA+9AAAaPQBA0rwAgEg8AMAdPQAgC70AQM68ACB6vQDgA70A0IM9AADwPACgtz0AgMS8ALCUvQAAMDwAAFY7AAAuOwBwo70A4Ac9AICvvABgjr0AAAK9AGBbPQAAlbsAkIq9AECpPAAAlL0AIDa9AEC/vADwq70AYGe9AABfvQDgMD0AwCG9ABDDPQAAerwAsN89AADNvABgPr0AoDA9AMAiPQDA7TwAAFa8ANCRvQDAlrwA0Kc9AACbPADA8TwAAHY8AACcvABANT0AgPa8AADTuwCwrj0AwHm9AOBSvQAA8rsAQOm8AKBgvQBgGz0AoJW9AIBBvQCgC70AkK09AMDGvAAA1TsAQKG8AICgvACArTwAYGu9AACdvACA/rwAwCW9AOCWPQBgp70AIGW9AICEvABAJ70AwCw9AGBJvQCQwT0AgEY9AADmPABgcj0AAMg7AACtuwCATj0AIFK9AKBRPQAAaLwAYKc9AIAyPADAlz0AAIQ7ACAevQDgP70AwMU8AAAZPQAANrwAgDq9AADAuQDAOj0AQCk9AMAlvQCgdr0AoFS9AMA6PQAgXL0AsIK9ABCDvQAAoDsAAPQ6AFCDvQAADDwAgP+8AMA6PQBAp7wAgHk8AAAaOwCA97wAcLg9AIAlvQDAi7wAkIO9AOAQPQCgzr0AgHQ8AAAuuwDgF70AgLu8AKANvQAAFDsAwOI8AKApvQAAOTwAYDi9AMC1vADA7DwAYAO9AECMPACAhLwAADS7AGANPQBA7zwAgB68AECjPACgNb0AABM8AIAGvACAejwAgBW8AMD9PAAgAz0AwOU8AOAaPQDAvbwAgD69AMDFvABAnTwAQKW8AIA0PAAAOjsAwMk8AECePACAV7wAoDw9AACZOwDA0DwAwEC9AIBSvABwrT0AQGY9AAD6OwAAHbwAgF49AIA4vQBgkb0AgBA8AOBzvQBArTwAAAI7AABLPACAMTwAALe8AABsuwDAeD0AgLY8AMAxvQDQr70AAJQ6AMCfPAAgRj0AgAg8AIByvAAoAb4AgHq8AIBTvADg2b0AoIU9AABavACAxbwAwLg8ACCKvQCAVb0AAHY7AIAnPACgRz0AoBq9AEA3PQAADjwA4Ge9AKAFPQAgeb0AIEA9AAAQugBAyLwAAKk7AEDOvAAghD0AAHY8AICEPABgXr0AwNO8AGBePQAAjDwAQAi9AADfuwBgMz0AQDU9AECoPABgXb0AIFs9AABAOgBAwrwAAPQ6AFCBvQAAvLsAQD09AADMPAAAd7wAgFO8AED+vAAA3rwAgDY8AOB6PQCAAbwA4Bk9AID4PACAhDwAAFs9AADBPACAPTwAQCe9AEBxPQAAgDsAACG8AMA7vQDgTz0AACY9AIChPAAApLwAYDq9AMDfvACAXj0AQLO8AFDSvQAAcLsAQIe8AGBavQBA6LwAQFu9AMBoPQCgzr0AAJS6ACCFPQCAFr0A0JG9APCoPQBABz0AYA29AOBsPQDgIL0AoMm9AFDHvQAgn70AAJe7AMBqvQAAjLwAQP88AACwuwAAyLoAALO8AAC1PACwvb0AAOM8AABcuwBAK70AgIm8APC6vQBAoTwAALC7AICGvQAA2bsAULE9AMDevADA7jwAwN68AIAHvAAAersAAKk7AADouwAABrsAAA68AGCVvQAAzrwAQOq9AIBzvACASj0AQDc9AKAqvQCAhbwAwC09AEBNPQAAjzsAYBI9AIDwvABgaz0A4Fc9AECVvACAYr0AALQ8AMCIPQBgdr0AgIO9AACfPQAA6zsAQIY9AIBoPQAwgT0AABc9AACVPAAAFTwAoAg9AADvvACAZzwAgG28AMAzPQBwlD0AQOM8AAAbPACAOb0AYDo9AOB2vQBAFT0AwJm8AGAQvQDAir0A4GW9AECbPADADr0AIBM9AKAMvQBgfr0AYC29AICpvAAgHr0AQLk8AICIPAAA1rwAQOU8ACDFvQBgSL0AQIA9ADCTPQDAsjwAQBk9AEBBvQDAHj0AAKm7AEC+PAAAoDwAQOm8AAC1uwBAQb0AAHC8AABGvAAA8zwAAEq8AACMvAAAVTwAcKK9AMDjPAAAvzwAII29AAD8OgAgHz0AALg7ABDCPQAACbwAwDw9AEA1vQCA4D0AgL48AMAJvQCgdz0AAIy8AAB1PAAwgr0AgNk8AIA+PQAQir0AsJ89AACQOwBAjjwAgFy8ACCrvQDAnbwAYB69AMC5vADA0rwAQK08AAAavADAKz0AAKi8AICTPABABz0A8Bw+AIAHvAAAdLsAADM8AIAVvQCAOTwAQKY8AECpPAAAcLwAAI87AAC8uwDA+7wAAFC7AOCGvQCAn7wAAAC5AIANPACwsT0AQDE9AAAQPAAA3rsAYAm9AIBaPAAAtDwAwEM9AICivACADbw=","chunkHash":"e5b5b26c066e49b7b6d28bc263ee18b7b1b355fc7609a8c9d2d79fcf74047641"},{"text":"File: `scripts/README.md`\n````markdown\n...\n# Nuclei Data Visualization\n\nThis folder contains scripts for visualizing nuclei data from the custom dataloader. The visualization tools support both 2D slices and 3D volumes with their corresponding masks.\n\n## Files\n...\n## Usage\n...\n## Visualization Methods\n...\n## Customization\n...\n````","range":{"startLineNumber":3,"startColumn":0,"endLineNumber":97,"endColumn":0},"embedding":"AIBdvAAAdT0AEIA9AKClvQBAdL0AIAi9AAC3uwDgJj0A4NC9AADMOgAAQDsAQNo8AABougAgU70AoGw9ADChPQAAujsAAJM7AEDgPAAgmj0AQK89AMDkvACQiT0AwKA8AHCTvQBgIj0AAMG7AABaPQDA1TwAwNm8AEBwvQBgEb0AAA68AECZvAAQzr0A4Ia9AAC3OwCANzwA4Ee9AABzvAAACTwAkK+9AEACvQDAbD0AQOu8AIAQvQAA7LwAYDu9AECwPAAAB7wAgMY8AAARPQAgjr0AQIg8AIB+vQDgED0AwLi9AIAkPQBA9LwAQJC8AMAdPQDATL0AAMK7AAAUPQAAsDkAgKS8ABDPvQDAwbwAgIE9AOACPQAgmT0AAAC8AOAwvQAAXDwAoAo9AADAvABgj70AgIQ8AED3vACgXb0AAGW8AECFPQCAXDwAcJe9AADgOQAwiL0AIHi9AADnOwBwrL0AIFq9AKCAvQCANjwAgHa9AEBVPQDAgbwA4Cs9AKAMvQAAab0AwM48AKBAPQCApDwAQBA9AGAcvQAACrwA0Ms9AMCbPACAPT0AwLO8AAC3vABAIT0AIBq9AECSvABAmT0AwCm9AEDUvAAA+zsAQNM8AIDFvAAA4DkAQM68ACBJvQAA0DkA4Ik9AMBLvQDgIj0AwA+9AECkPABAxjwAIBu9AACguQCA17wAgGq8AAAaPADQtr0AgDW9AADJOwAQi70AoEU9AEBWvQDA4z0AAPQ8AIAwvAAgrj0AwDY9AABwOwDA6zwAALO7AMA/PQAAErsA4Cs9AADDvACgPj0AAKE8AABLvQDALb0AoBK9ADCDPQAAsLkAACm9AKBKPQDAmDwAoBA9AAD0uwBwl70AUKW9AIBGPQDAJL0AoAa9AEBtvQAAsLwAAG88AKA7vQAAULoAYDS9AADWuwAAfjsAgBG9AAAwOgBArrwAML89AACauwAA+DsAQGW9AACYPADQyL0AgJs8AIAnvAAAgbwAwBm9AICFPACAULwAoBo9AMC/vAAAzjwA4Hu9AOA3vQCgFT0AABK7AGB6PQAA4bsAAP67AICKPABAo7wAAM68AIDIvACAqrwAAHK7AIDJvAAAkDoAYIC9AADDPACA7TwAAMw8AACrPACAar0AgFO9AAD4vADgkT0AAHI8AACvOwDgAD0AADI9AIBiPQBAojwAAB89AICPvABAID0A0JC9AIBTPABgcz0AgHs9AIAbvACA6rwAQFA9AEBwvQBATL0AQIy8ACA1vQAAATwAgDa8AGBRPQDA6jwAQI28AACwPAAwoT0AgGK8AIADvQCwnb0AgCQ9AAClPABQkz0AgMw8AIBJPADgz70AQIK8AABOPACgtb0AUIo9AAAQvQCANj0AgOi8AMBivQBgPb0AwNg8AEAQvQAAZD0AAGA6AKBKPQCAaDwAsIm9AEDvPADADr0AAL89AABCvAAAX70AgH+8AIDyvABgLT0AgC09AAD4PAAAu7sAABA6AMCrPACACzwA4Ca9AMCHPABAqLwAQBc9AECLPABAF70AwLA8AABZPAAAHLsAQK68AEA0vQAA37sAoCU9AADluwAAyrwAwMq8AAACuwAgAr0A4IA9AID8PAAAwTsAAGY8AIBRPADAwDwAgMQ8AGAIPQAgDb0AgMG8AOBgPQBAFb0AAHW8AGAYvQBALD0AgII8AGAIPQAAQbwAgIi8AECZvADQgz0AQG+9AECevQBADj0AANu7AAD0PABADb0AcK29ACCRPQDgk70AgE08AIDZPACAarwAYLG9AJCbPQBAgz0AII69AEBcPQBAvrwAsNa9AHDqvQAggb0AgFK8AICrvABgAr0A4EA9AMCpvAAAfbwAIK29AADMugCAnr0AAGW8AIBJPABAHr0AICa9AAgFvgDAMz0AgCi8AHCovQAA6LsA4Io9AADZOwCAIT0AAIe7AIAnPAAAgDsAACc8AIAWPAAAkDkAAAK8AKChvQAAX7wAMOO9AACrOwAgSj0AwCM9AIBivABAgTwAQDI9AACFPQCASjwAAJK8AMAAvQBAsTwAAHU8AMCEPADA57wAIBM9AJCCPQBAMb0AANK7AKB4PQDAh7wAACs9AMB2PQAAID0AgCg8AAA0OwDASj0AwNc8AOAWvQAAyDwAgAg8AOBbPQBw0j0AgAk8AAAougBQg70AQOo8AOAKvQCA5DwAQMG8AIDYvACgQb0AAF28AGAkPQDAPL0AAOI8AAAtvACAhL0AcIy9AIBsvACgRr0AgCQ9AECGPQCATLwAQOo8AKDMvQDAZL0AwGY9AAAcPQCAHj0AgOY8AGBWvQBASz0AALe8AMDZPAAAoTwAAPa7AKAOvQBAOb0AAHg6AECgPADApzwAQNy8AIAHvQAA4LwAMJS9AIC/PAAAeLoAsKu9AAChuwCAPDwAABY8AABzPQBAlLwAQH49AID8vADgvj0A4Ck9AAAZvQDgFD0AAKY7AAAfPACAPr0AAAq7AKAXPQBwqL0AAL49AGAKvQBAwbwAgFU8AOBPvQCAlbwAIJC9AACvvACAf7wAwKw8AMCovAAgAj0A4GK9AACJOwDglz0AGB8+AMCdvABAyTwAQK09AAA+vAAAHbwAQCU9AGBjPQBAgrwAgA68AAAsOwDgS70A4Aa9AADBvQAAHL0AANo8AMCaPACQ2D0AgMk8AMDBPAAAtLsAAPy8AEAzPQCAXTwAgLU8AIAAPACAITw=","chunkHash":"6743427031f97ae4e77d96a1f84d3f0e447a7d179b6f9c51481232b7d42ce0e2"},{"text":"File: `scripts/README.md`\n````markdown\nPython scripts/finetune_vgg3d.py --sample_percent 1 --freeze_features --num_workers 0 --batch_size 1\n# Nuclei Data Visualization\n...\n````","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":2,"endColumn":0},"embedding":"AMAMvQCA4zwA4F09AKC3vQDAS70AIHe9AMCFvAAgcD0AIOG9AMDTPACAbDwAgOk8AJCXvQBABr0AAPs8ADCTPQAQj70AAOW7AAA4vACgNT0AcLQ9AADSvABgCD0AIIE9AACCvABApDwAgKW8AOAdPQDAyjwAoCa9ACCUvQAA7LwAAO07AEB4vQCQ7b0AkLi9AIBoPACgCL0AAFe8AAD0vABAkzwAgOq9AEC7vACgaT0AgIG8AKAjvQAAybsAQAy9AIAXPQAApDoAAAI7AAAaPQCAur0AABo9AMDsvAAACz0A4Hu9AADtPAAALrsAgKC8AEBNPQAAnr0AgBs8AAD5PABwjb0AgLm8ABDlvQAAAr0AYFc9AACYOwAAIT0AoBO9AADDvACAyzwAADk8AAAoPAAwjb0AQCc9AEBUvQDgjL0AAAi6AAAxPAAAcTwAACO9AACkugCQ0L0AAN29AECevADA77wAAEO9AMBhvQCAZzwAAC29AICyPQAAZDsAAMg8AADwuwAgCr0AAHY7ACBrPQBgRD0AAEE9AIAMvAAAKDoAMKk9AECDPACAlTwAAJk7AIAtPAAgWz0AQGS9AABAugCgGD0AAIW8AEDyvAAAarwAgLW8AIBXvAAA5LwAAIK9ACBYvQAAUDwAoAA9AKA3vQBApjwAAJI8ACAWPQDgHj0AgFC8AKAhPQDAWL0AAPo7AGA6PQBAF70AwJG8ACBFvQDgu70AUIM9AGBDvQCg4D0AACs9AAAsuwDwgD0AwGA9AAAYOgDA0DwAAPO8AKBTPQAA7LoAQDo9AACkugAglj0AwIG8AACxvACARzwAgCo8AECZPACAFT0AwG+9AECCvAAgUD0AIBk9AAAcvABgab0AgB+9ACB3PQBAprwAIDq9AKB8vQAAaLwAACk9AKA3vQCASTwAALW8AIAbPADAnLwAABw7AIA+vQBgb70AYGg9AGAxvQCAbDwAgHe9ACAyPQAg8L0AwN68AIAAvAAALb0AAJO7AAAbvACANTwAALs7AAB3vADAiTwAAOS7AMBuvQBAQD0AAGK9AICLPACA1jwAQDS9AMBfPQDA9LwAgFu8AGA3vQAQ2b0AAG68AKBKvQAAFrwA4BG9AAD+PADAkj0AgBo9AIDHvACA+rwA0MO9AABAuQDgjz0AoCg9AABFvAAAmrsAACo7AEAxPQBgrD0AkIA9AKB3vQAAyjwAwBW9AACwPADAhz0AQJs8AADJvAAAE70AAMU7AACROwAACrwAAK+7AOAevQAASjsAAFA8AAAsvADAwDwAAFi8AED6vACAfT0AAOA8AKArvQAwAb4A4C09AGBXPQCAe7wAABQ7AIC9vAAg8r0AQBO9AGAHvQBgjr0AYGA9AACIOgAABzwAAEc8AIBSvQAQnb0AgKU8AIA7PADAMz0AAFs8AEByPQAABz0A4Hy9AAD4PACACDwAAGU9AADPOwBA+LwAAEA9AICtPADASz0AAGo8AADHOwDgeb0AgKc8AIACPQBApDwAgAO9AIAdvAAA9LwAwDk9AIDCPACgLz0AAPg7AMCyPAAAxDwAALW7AACMugAApLsAIEM9AAATPACALrwAQKS8AMD/PAAALrwAYA09AFCQPQDgHb0AgD89AGA6vQBAi7wAoE89AIAfPADAk7wAgCQ8AGB0PQCAZLwAADi7AEAevQAAiTwAAEw8AGA1PQCArLwAAJC8AABxvQDAtTwAwCM9AMANvQDghz0AgEE8AABivACAnrwAAPG8AKBYPQBAe70AAOK7AIBMPAAAE7wAADI7AAB2OwCwmz0AoDG9AEDuPADwqL0A4Iu9AEANvgCAvbwAANS6AACVuwCAJLwAADE9AABdPAAA6bsAYHa9AADxOwCAlr0A4DO9AAATvABArr0AAO27AIB4vQDgEb0AALS6AOAuvQDAtTwAICo9AADXvADQkT0AQJO8AACCPAAAhLwAwIC8AIBTPQAA+jsAgPw8AJCxvQAAhDoA8LK9AGAFvQDAuT0AoHA9AIBlPABgCD0AAM68ADC8PQBAyDwAQNm8AMBhvQCAeDwAIEs9AIAePABgqb0AYBQ9AIAjPQBwm70AQI28AABEPQAApLoAQMc8AMCHPAAATD0AAFQ7AAA6OwCA6DwAgMQ8AKAXvQCgCz0AABA7AFCoPQBAsz0AIG09ACAgPQDAM70AwNo8AMCZvQDAmjwAYBS9AIAxvABgzb0AgHk8AICaPACA8LwAgGU9AAAIPACA/rwAIEq9AECUPADApbwAkJU9AABrPQBAS70AYEY9ACBpvQDAL70AgFA8AIDmPAAAMDwAoJo9AIBNvQAAtLoAAO47AGAnPQBAkbwAgBa9AAC3vADgEr0AQK28AKAcvQBgMT0AwAC9AIBKvQAAiTsAsIi9AMCnPADABL0AgMe8AKAavQDAOD0AgN08ALDBPQAAlzsA0Ow9AMDYvADQqz0AQIs8AKCKvQAgcj0AAMS6AOAYPQAA8DkA8IQ9AKAOPQBQj70AYGA9AIAFPACANb0AAFO8AKByvQCAjL0AANC6AADJuwAAKbwAAMy7AECBvACAQ70AQCC9AOBePQAAVzwAICU+AAAKPABAvzwAQCU9AICwvACADrwAwIk8AGAPPQCAnrwAgDC8AAA4OgBA7LwAQLe8AOB+vQBgbr0AALc8ACA0PQAgTz0AICY9AIBMPABAAb0AAL67AICsPACAujwAQB49AICbPAAAojw=","chunkHash":"c45ad9829055a8632eaaae9c864cf7c88e72b5e24c8ce2a51fcdda8b6dce3107"}]},"file:///teamspace/studios/this_studio/scripts/create_nuclei_index.py":{"hash":"e1380f5a5c16f14f1d391dd570b4f1f3d1b3945d87f6ec9e8d09d53b303d508c","entries":[{"text":"File: `scripts/create_nuclei_index.py`\n```python\n#...\ndef create_nuclei_index(data_dir, output_csv, class_csv_path=None):\n    \"\"\"\n    Creates a CSV index file for all nuclei samples in the dataset.\n    \n    Args:\n        data_dir (str): Path to the nuclei dataset directory\n        output_csv (str): Path where the output CSV file will be saved\n        class_csv_path (str, optional): Path to CSV file with class information\n    \n    Returns:\n        DataFrame: The created index as a pandas DataFrame\n    \"\"\"\n    print(f\"Creating nuclei index from directory: {data_dir}\")\n    \n    # Load class information if available\n    class_info = {}\n    if class_csv_path and os.path.exists(class_csv_path):\n        print(f\"Loading class information from: {class_csv_path}\")\n        class_df = pd.read_csv(class_csv_path)\n        for _, row in class_df.iterrows():\n            # Skip unclassified samples\n            if row['class_name'] == 'Unclassified' or row['class_id'] == 19:\n                continue\n                \n            sample_id = str(row['sample_id']).zfill(4)  # Ensure 4-digit format\n            #...\n```","range":{"startLineNumber":13,"startColumn":0,"endLineNumber":37,"endColumn":0},"embedding":"AMDzPACAATwAAJY9AODTvQAAd70AgCq8AMCJvAAA57sAAPS8AIBFPABA3jwAIGU9AECOPACg5L0AgNg8ANCHPQCgcL0AABg8AAAjPABgYT0AQKY8AMCbvABA9jwAYEq9AMDRPACAITwAAAs8AAApvABgFD0A4BG9AIATvQAA6zsAID+9ACAdPQAAkb0AwIi8AMCsPAAAKDwAgFS8AOAJvQDAlz0AoIS9AACiPQCApzwAADY7AKAvvQAAVrsAALa9AIA/PQCAU7wAwKE8APCFPQAAIjwAAJO9AAD1vADArzwA0Km9AMAvPQAATzwAAIC4AIB8PQBgTb0AIGI9AAD4PAAAj7sAQAC9AIBFPACA77wAYD49AIAdvACwkD0AYBm9AOAhvQAAIjwAAIM7AIAUvAAwqr0AAI07AOB0vQBAI70AgA89AAD4PACgFD0AgCg8AADZvACwo70AwDC9AIB5PACgdL0AANa7AIDbvAAAILkA8Ke9AMAkPQAAcDoAQM48AICfPACA+rwA4IE9AEDhPAAgRz0AAGY9AIBOPABgJD0AAMw7AAB4OwAAubsAwKO8AADvvAAAgzwAgIg8AABgugCAYTwAINq9AACVvAAAtrsAALg6AACzOwAAZLwAgAi9AIAkvQAAwLkAAL87ACAkPQDAwrwAwLe8AOAIPQDgIr0AAPc7AADxOwDgOj0AANy8AIB3PQBA2LwAkLa9AACcOwAAibwAgJg8AGAYvQDQxz0AAMw8AKCkPQCAIj0AgCc9AEBGvQBADr0AEIO9AMDuPADAkzwAwFs9AACTOwCwjT0AQLK8AMBEvQAAAjwAAJe7AGBKvQCASz0AwIc8AEAtvQBAgDwAEIw9AAD8vAAASr0AgPi8ACAxPQCgDb0AcKW9ACAzvQCAmjwAAGE8ACA9vQCgRD0AYBU9AMBVPQAAd7wAkIG9AKBWPQAgBL0AAH+8ACAkvQCAe70AgOe8AADqOwAARrwAAJO8AIATPQBgKL0AwJ+9AACwugAAKDwAgCW8AID7vAAgsT0AQIG8AACeOwAALD0AQBa9AIAhvAAgbj0A4GC9AADUuwCQjr0AABM9AABgugAAoDoAwLG8AADEOwDA4bwAAEC8AAAwOgCASrwAQFC9ACDkPQCAhzwAQIG8AFCBvQCQgT0AAAI9ALCgvQAAizwAgB68AOAjvQAA+DwAAFE9AICzPACAoLwAQAG9AID4PAAAcjwAQOe8AAC7PACAZjwA4BM9AABgvQBA0rwAgBw8AGCRvQAAuDwAAKw7AFCdvQAAbjsAoIy9AICEPAAAArwAQP08AADcOwBgPL0AAFo8AECgPQCgVD0AgGM9ADCqPQCAor0AQJG8AKCsvQDwmr0AQJS8AOAavQDAxzwAAEY7ACBmvQAgRL0AoAC9AADsugAAAz0AAAC4AECZPQAA7TsA4BK9AABnPACAmLwAYDI9AIBNvQCAHbwAAEY8AMB3vQCAxD0AsIM9ADC7vQBgor0AYAq9AABxvABQhT0AYAo9AACEuwAAoTsAALC6AMDGvADg170AQCM9AEC0vAAA5TsAAF+8AACtuwBA2LwAIEY9AIAgPAAAXLsAAPo8AMAdPQAABL0AkJw9AABdPQDgfr0AQOK8AID4vACATbwAAIc9AGAFPQAAvrwAwAk9AABWPQCAn7wAgAE8AABVPABAzDwAALC5AIA7PQAgDT0AQHu9AMAPvQBwlD0AAAA7ACCVvQAggj0AgE69AADzOwAghj0AAPm8AEC9PABgJr0AYFC9AECgPQCAiDwAADm9AEC6PQAAfjwA4L29ANC0PQCA+7wAAKK8ACA5vQBQh70AgJC8AAAjvAAAKbwAQPw9AGAZPQBAH70A4EC9AMAfPQBgDr0AgFc9AADZOwCAbzwAAEi9AECpvQCAYTwAgEy9ALDfvQCAt7wAgPU8AABmOwCAJT0AwI88AAAWPACAajwAQDs9AIAlvAAgGD0AgFq9AIBmPAAAJbwA4Em9AOB0vQAwzj0AABM9AGAIPQCAET0AAPo8AMBJPQBAp7wAgIS8AICdPAAgiz0AAD89AAAOPQCAN70AQAM9AABquwAQqL0AoK49ACBSPQAAPb0AwMw8AAAeuwAAiDoAQME8AEAkPQAA2jwAQL+8AGAMPQAAIrwAADg7AKARvQCwoD0AUJo9AAC4OwAAwrsAAGE8AEC1PADgdT0AYCc9AADvuwDAiL0AeAC+ACBBPQAwm70AAFY8AECtvAAA6bwAYAi9AEDwvABAW70AQKa8AIBQPAAALrsAgOE8AMBHPQBABT0AAC47AAAHvQDAMT0AAKe7AHCHvQAAGTwAgI28AGDgPQCAPDwAADC7AOB4PQCABDwAoBU9AMDxvADAE70AQJE8AACwugCAr7wAABw7AACsPACAK7wAAPk7AACuvAAA4TwAcLa9ACADvQCAQL0AAEc9ACAZvQDAYj0AoGs9AACQvADAlT0AALk7AIAlvAAA3rsAAGy8AKAmPQAAqb0AgAI8AKAKvQDANL0AAGK7AMC9vAAAWzwAwJs8AMD8PACgN70AwHa9AADAuQBIDL4AwLm8AKC9PQCAEj0AAJo9AIAbvQDgML0AgKQ9ANDevQBAubwAwI48ANCPPQAAmLsAgFk8AIANvQAAYrwAgHQ8AACsugDgAb0AgDg8AEDRPQDgNT0AAAe8AAB4ugCgZb0AAKK9AABvPADAvbwAQCY9AAC9uwCAzz0=","chunkHash":"ce22c16e403d9ae3d3c1b76ad58efc5cd8dcddf0b7c7284042335860ae2ff28c"},{"text":"File: `scripts/create_nuclei_index.py`\n```python\n#...\ndef create_nuclei_index(data_dir, output_csv, class_csv_path=None):\n    #...\n            class_info[sample_id] = {\n                'class_id': row['class_id'],\n                'class_name': row['class_name']\n            }\n        print(f\"Loaded class information for {len(class_info)} samples (excluding unclassified)\")\n    \n    # Find all sample directories (using 4-digit format)\n    all_dirs = sorted([d for d in os.listdir(data_dir) \n                     if os.path.isdir(os.path.join(data_dir, d))])\n    \n    # Filter to only include directories with 4-digit names\n    sample_dirs = []\n    for d in all_dirs:\n        # Handle both cases: already has 4 digits or needs zero-padding\n        if d.isdigit():\n            sample_dirs.append(d.zfill(4))\n        else:\n            sample_dirs.append(d)\n    \n    print(f\"Found {len(sample_dirs)} potential sample directories\")\n    \n    # Prepare data for DataFrame\n    data = []\n    \n    for sample_id in sample_dirs:\n        #...\n```","range":{"startLineNumber":37,"startColumn":0,"endLineNumber":62,"endColumn":0},"embedding":"AICYPAAA4LsAwCU9AICdvQCgcb0A4AS9AEDevABADL0A4Ja9AECUPAAAPD0AwMM8AADROwDQyr0AAAs8AIAhPQDgYr0AABI8AEDCvACwhz0AQJI8AIC9vABART0AwFa9ANCAPQAADTwAADk8AAAKOwAAZz0AEIC9ACAEvQAAErwAANy8AOBUPQBQkr0AICi9AMCLPADAhDwAQJk8AGBNvQBggD0AgHq9AACjPQCAZzwAACW8AMD+vAAAgLkAcNi9AEDBPQBAhLwAABg6ACCRPQAA7TsAwKm8AIBVvQBgSD0AEIy9AGBLPQCgIT0AAPK7APCEPQAAO70AgJM9ACBUPQDAlrwAQCG9AABBPACACLwAwCI9AADdOwDgCj0AgOm8AMCpvAAAMrwAgKw8AAC4ugCQqr0AAKQ7AHC6vQAgAb0AgDc9AAAaPQCgEz0AAKm7AIAZvADgQb0AADK9AIARPADgd70AoBC9AICJvACARjwAoJ+9AKA3PQAA9TsAAD48AIB8PACABL0AgNo8AOA8PQBA3jwAwN48AICoPABA+TwAIAs9AACguQAAiTsAoA29ADCovQDA7jwAABy7AGAjvQAAkDoAcJa9AMDuPAAAUDoAAPi6AADNuwAAHr0AALK7AOBJvQAAuTsAgFm8AIBUPADAjLwAgJO8AIDKPACgRb0AAKQ8AADWuwAgLj0AQKi8AABbPQCAFLwAsK69AAAIOgCAfjwAgLI8AGAQvQAgsT0AgI08AACvPQAAcTwAQGo9AAA4uwAAbDwAoM+9ACAkPQDAAT0AcIM9AIC3PABgTj0AAMq8AKBsvQAAIjwAgFQ8AGAjvQCgSj0AAHc8AMAzvQAAdzwAEII9AABaPACACLwA4Cy9AOBJPQCgAL0A4Me9ALCsvQAAdLsAAAA4AECgvAAgbT0AAOk7AGBMPQCAUDwAwBK9AFCKPQBAg70AICW9AIAlvQAAl70AAFy9AABYuwCA+rwAICe9ACArPQBgCb0AQIm8AACduwBgYj0AAMA4AABcvAAwkD0AgAq8AABUvAAATT0AAHy9AAAwvADgJj0AYG69AAAaPACAJr0AoCc9AACVOwDAorwAAA08AIAbvAAgKr0AgHO8AADKuwAAtbwAwNq8AIDbPQAAAjsAgLa8AOBpvQDgcz0AYEw9AEBxvQAAVzwAAJE7AAA8vADgST0AwPM8AIBrPACAjrwAgHW8AMDTPABAlDwAQK08AICePABALT0AgNA8AIBZvQAAILsAAOK7ABCavQBA7zwAAEA7ACCpvQAAUTwAQFu9AMChPAAAHrwAgA89AACEPAAgSb0AgPg8AKAyPQCAGDwAAMw8AGCxPQAwtL0AwPa8AEBLvQCAfb0AwMy8AAANvQAA/LoAAAu8AMBTvQCgYb0AwLK8AIBKPAAAerwAAOk7AMCOPQDA27wAgH29AAD0ugCAWLwA4EM9AFCYvQCAA70AQLm8AGAevQCAkT0AYDk9AHCuvQCAfr0AwAK9AMCkPADwjT0AwJk8AABkvAAA7zsAwCA9AMC3vAAQh70AQC49AADnOwAAxLsAoBG9AEAbvQBAkb0AYAY9AAAnPABApDwAQIY8ACAJPQBAbL0AUJo9AIAhPQAAib0AYAK9AIDFvAAAXjwAMLA9AACgOwDAkrwAwDw9AKCdPQBAlDwAAOg7AACMvACAHjwAwJo8AIBFPQAAlzwAYEe9AJCovQDwoT0AgC88AOAwvQBgrz0A4FG9AADAuQAAqT0AAC29AAAiuwBQkL0A4DW9AMCHPQBA7TwAQEu9AJCiPQCAMD0AUKy9AJCePQCga70AQEe9AIAIvQCgrb0AAIw6AAAUuwCgFr0A8Ak+AEDXPAAATL0AQAK9AMCjPABAlLwAgJ48AMABPQAAQLkAgDW9APCNvQBAA70AgKi8AJC+vQCAAzwAwJI9AAAquwCgNj0AgJw8AADQuwAAxbwAQPc8AACyPABgSD0AwOi8AECFPAAgF70AQGG9AHCKvQBQvj0AEJA9AMAkPQCAJz0AAMo8AMCDPAAAuDsAAMq7AKAyPQCgij0AwPI8AMAXPQBgn70AYAM9AICuPADAbb0AsKg9AMDAPAAA/rwAAJy6AACBuwBA0zwAABI9AMBTPQAAszsAAMu8AACkugCALbwAAIK7AAAiOwAgjT0A4FA9AIDIPAAgFb0AwBE9AIAUvQDgfT0AAAA8AACLuwBAV70AcLS9AMDIPADwpb0AANs7AAAWPAAAeLoAgAC9AICrvACAKb0AABg8AADQPACAY7wAAOI8AAB9PADA5DwAANY8AMCzvABgVD0AANi7AOB/vQCgCb0AALC5AJDcPQBA5TwAALS7AGBzPQCA2jwAQKc8AEAzvQAgQL0AgIO8AECuvACAErwA4CG9AAAePACAKb0AAFa7AADsOwBAuzwAcLy9ACAJvQAA97wAoCk9ACA3vQAgaT0A4MU9AID4vADwrT0AAGm8AIBmPAAAU7wAAPi7AICXPQBwqr0AQEU9AABfvQAABrwAAIs8AMDYvAAADDwAoAs9AGAHPQCgQ70AQDC9AADGOwDgyb0AIBW9AHDQPQBAqzwAsPA9AIDzvACAgbwA4Jw9AICLvQCwgL0AABQ9AKDHPQAATbwAAPC6AABLPAAAFDwAAIG7AAAauwDgG70AgDk9AJCqPQAA+zwAgNA8AIAcPABQtr0AkKK9AIBpPADA0LwAIFw9AABoPACAlT0=","chunkHash":"931114995b8e559ccacd4c36283e93f0e211bc1227236697a8e48efd1554d14f"},{"text":"File: `scripts/create_nuclei_index.py`\n```python\n#...\ndef create_nuclei_index(data_dir, output_csv, class_csv_path=None):\n    #...\n        # When looking for the directory, we need to handle both zero-padded and non-zero-padded\n        # because the directory might exist in either format\n        raw_dir = os.path.join(data_dir, sample_id, 'raw')\n        if not os.path.exists(raw_dir) and sample_id.isdigit():\n            # Try with non-zero-padded version if 4-digit version doesn't exist\n            raw_dir = os.path.join(data_dir, sample_id.lstrip('0'), 'raw')\n            if not os.path.exists(raw_dir):\n                print(f\"Warning: Raw directory not found for sample {sample_id}\")\n                continue\n        \n        mask_dir = os.path.join(data_dir, sample_id, 'mask')\n        if not os.path.exists(mask_dir) and sample_id.isdigit():\n            # Try with non-zero-padded version if 4-digit version doesn't exist\n            mask_dir = os.path.join(data_dir, sample_id.lstrip('0'), 'mask')\n            if not os.path.exists(mask_dir):\n                #...\n```","range":{"startLineNumber":62,"startColumn":0,"endLineNumber":77,"endColumn":0},"embedding":"AIBIPACADTwAQEk9ACCkvQDAPb0AwBS9AIApvAAAUbwAcIK9AMCHPABAPD0AANo8AMDYPAAwxb0AgJO8AABsPQBgLL0AgFY8AIBqvQBALD0AwJI8AACruwDAjTwAwCS9AEAPPQCACLwAAGS7AAA+vABAmT0AgBS9AAA1vQAAorwAADG9AMAhPQCws70AwMC8AADjPAAA6LoAgNI8AED3vACgsD0AELe9AECtPQCAjjwAIBC9AMDcvAAAkzwAwPO9ACDHPQBgWL0AACK8AGCRPQAAWLsAACm9AOAZvQAAUDwAEJu9AGBkPQAAwDgAgEi8AEAzPQCAb70A4F49AID9PACATzwAQBi9AACouwAABrwAALo8AICVPABA7zwAAE28AICRvADAi7wAAAu8AABuuwBQq70AADs8ACCsvQBA37wAwIY8AIBYPQBAtjwAgLm8AECbvADA17wAcLi9AADIuwAwlb0A4Aa9AADsvACA/DwAgHS9AKBDPQAA4TwAQMs8AIBbPAAAwbwAQBc9AAAOPQAACDwAAJQ8AKBSPQDAvjwAoFI9AADUPAAAjzwAoB+9AMBsvQCAbjwAgOG8AMAivQAAQzwAIFO9ACA3PQAApTsAgCg8AACYPAAAo7wAAIS7AOAsvQAAUDsAAD67AAAAuQCAbbwAgAK8AKBEPQCgg70AQMo8AADQOgBA3jwAwIa8AJCNPQAAaLoAcIa9AADKOwAAkzwAQPU8AADfvAAwsD0AQKo8AOB9PQAAErsA0IY9AED1vABAAj0A8NG9AID7PADAKj0AYLo9AAAIugBgJj0AwI+8AEA9vQAA9zsAAIW7AABNvQBAyjwAAAq7AIDdvABAqDwAgEk9AED2PACAHbwAQOG8AOBmPQBABr0AkMG9AMCHvQAA0DsAAHa8AACHvACATz0AQOq8AABAPQAAVLwAwIG9AJCdPQCghr0AACW8AAAmvQAgFb0AANW8AMCCPACAxbwAgOu8AEDcPAAAOLwAwCG9AABbvABgIj0AALm7AIACPACgiD0AAIQ6AACWuwBgkj0AIFG9AAC1PADA5DwAwEW9AIBDPACA1rwAwE89AABuOwAA/LsAAIW7AICzvACAKr0AAGg7AMCWvABApbwAgBQ8APDQPQCApDwAoBK9AOByvQBAdz0AIB09AOB2vQAAyzsAgJ08AICDvAAwgT0AQEQ9AMCkPACA3bwAAF68AIC9PACA9zwAAJQ8AGAhPQCA+jwAgMQ8AKA8vQAAerwAACy7ABCuvQAA2jwAwME8AIChvQAAQjsA4Ge9AACoPAAAWLsAAGw8AACsvACAhL0AwKw8AIDePADAwjwAgEM9AAC4PQAgtL0AwMi8AADovAAwm70AANg6AAAVvQAApTsAwIE8AMBpvQBgg70AAIw7AKAJPQAA5DoAgLS8AECYPQAAI70AIFC9AAA2vACAnbwAgGY9AOBbvQAAvrwAwKG8AEASvQAQlT0AgAg9AGCmvQDAt70AwAS9AAC8OwBAXj0AoDY9AABFvAAAfrsAgDE9AACKvABwlb0AAKA8AECJvAAAvTsAwKi8AEA1vQDwh70AAIY7AIBqvAAAeTwAADo8ACAyPQDgN70AgK49AOBhPQDgfb0AYB+9AADxuwAANDwAwEU9AECBPADAmrwAQKc8ANCLPQBAzTwAAN88AAA2OwAAJDwAgDE8AGACPQCAYjwAAHG9AMC2vQDgUT0AAOS6AKAbvQDw1z0AYFy9AMCYvADw1z0AALK8AIBvvABAT70AwNi8APCMPQCgDD0AAIm8AOgJPgDARz0AQJC9AGByPQBAhb0AQG+9AAALvQCgfb0AgHg8AICDvAAAe7wAAOE9AMArPQBgVL0A4Eq9AIAPPQAAdLwAACY7AADdPACA4jwAAOG8AFCWvQAAq7wAAMu8APCsvQAAYDwAQEI9AIAjPAAAXD0AQJY8AADuOwDAo7wAwOo8AKAsPQDgPT0AwM68AIB9vADgL70AYJ+9AHCrvQCgvj0A4IM9AKAiPQCA7zwAAPM7AMCKPACAMbwAgD+8AGA5PQBwkD0AIAs9AEBzPQBgvL0AACA5AMDCPACATr0AEJw9AIBSPQCAcr0AwMA8AAAAOwDAGj0AAFA8AKA9PQAAjbsAoAO9AIDhvAAAqrsAAJK8AACvPAAgYz0AsJg9AEDpPABA8LwAABI9AIBzvABAgD0AAP88AAAIOwAAJr0A0J+9AEARPQDgvb0AgBM8AABYOwDAtLwAwFW9AABbvACAubwAAMa7AIBwPADgGL0A4Dc9AABTPABAizwAgCo8ACA6vQBgNT0AgAW8APCYvQDgFL0AAKC8ALDrPQCA5jwAAMU7AKB5PQCAUDwAYAM9AIDgvAAAZb0AwJy8AEDyvAAAlDoAIDW9AACAOQCgNL0AAMc7AIBxvADgJD0AQJi9AMCQPACAOL0AAAU9AADUvABgcj0AgGs9AACsOgBQpD0AwP68AIC/PABAv7wAAOC6AMBiPQAAuL0AwG09AKA7vQCARjwAAL+7AGAnvQAAlLoAQB89AICwPACwg70AwHu9AMAIPQDAyr0AAPu8AHDHPQCA2jwAYNA9ACAWvQAATLsAQJc9AICivQDAd70AANI7AHDFPQCAb7wAAJk8AAAIvACAJDwAAAu8AABgvADAj7wAQFE9ALC7PQDA7DwAAKm7AECQPACQs70AUI29AICDPAAAUrwA4G09AAC9OwBQsj0=","chunkHash":"3f123b540fe9affcb65fc90d4dda00586312e835784bb874e2579ea3b84d69a0"},{"text":"File: `scripts/create_nuclei_index.py`\n```python\n#...\ndef create_nuclei_index(data_dir, output_csv, class_csv_path=None):\n    #...\n                print(f\"Warning: Mask directory not found for sample {sample_id}\")\n                continue\n        \n        # Skip if not in class info (this will include unclassified samples)\n        if sample_id not in class_info:\n            # Skip this sample as it's either unclassified or not in our class list\n            continue\n        \n        # Get raw image files\n        raw_files = sorted(glob.glob(os.path.join(raw_dir, '*.tif')))\n        \n        if not raw_files:\n            print(f\"Warning: No raw files found for sample {sample_id}\")\n            continue\n        \n        # Print some debug info for the first few samples\n        if len(data) < 5:\n            print(f\"Sample {sample_id}: Found {len(raw_files)} raw files\")\n            print(f\"  First file: {os.path.basename(raw_files[0])}\")\n            print(f\"  Last file: {os.path.basename(raw_files[-1])}\")\n        \n        # Get dimensions from first image to describe the volume\n        try:\n            #...\n```","range":{"startLineNumber":77,"startColumn":0,"endLineNumber":100,"endColumn":0},"embedding":"AECIPADA8jwAYHo9ANCovQAAt70AkIO9AMDgvACAZ7wAQKK9AAAgugDAMD0AwNE8AAAOvAAgtr0AAF47AEAiPQCAT70AwLM8ACAvvQAARD0AgOY8AIDwvACAmzwAYBK9AKAgPQAANDsAgAo8AABavACgyT0AgF28AOA1vQCAq7wAgEW9AECqPACwwL0AAMC7AABTPQAAgDsAgFM8AAA5vQBwpD0AUKm9ADCaPQAAMDwAwI68AKAzvQCgGj0AkNW9ALCRPQBAxrwAAKe8ACCiPQAALLwAoA+9AEBBvQAAvzwAQLe9AIBZPQCAZjwAAIW8ACCBPQBgQ70AUJQ9AEAXPQAAsrsAgB29AAAcPAAAJLwAgME8AACIOwBgDT0AAES8AOBNvQAAq7sAgGy8AIBhvAAgi70AgAI8AHDPvQDAQ70AwBU9AIB9PQDAsDwAALw6AED8vABA+LwAcLW9AECtvADgj70AYDu9AEAYvQAgFT0AwIC9AGB/PQAA6zsAAEU8ACAfPQAgBL0AICs9AKAaPQCAcjwAAAg9AIAGPQAAgjwAIEU9AAD2OwAAYjwAwK68AIByvQBgBj0AgMu8ACB4vQDADT0AoHi9AKATPQAAJLsAAMk8AADrPADAzrwAgBW8AMAzvQAAILoAgNe8AAAWuwAASrwAwAu9AIBSPQAgEr0AAJ87AAAPPABAUj0AANC7AICjPQCAjLwAgIe9AACmuwDgQD0AwBo9AIDsvACw7D0AgDc8ABCUPQAA5zwAAFs9AACdvAAALjwAgOO9ACA9PQBAGT0A0KY9AMDCPADAXj0AAHQ7ABCOvQAAIzwAgKy8AACpvACgdj0AAJa8AEDEvAAASTwA4Fw9AEDTPAAArrsAgMS8AMBJPQAAn7wAEJm9ADCVvQAAYLkAgGG8AADZvADwlz0AoAC9AOB3PQAAXrwA4BO9AICTPQAAbL0AgC+9AIBBvQDAiLwAAPO8AEDfPAAAW70AQOu8AGAkPQDAy7wAQA69AAAAuwCA0DwAAJA7AMCjvADwij0AQIO8AABOvADgLD0AwMK8AABZPADgND0AAAi9AICXPAAAKbwAwEU9AABWvACA0LwAwLY8AACnOwBAVL0AAII8AABWOwBAxbwAgAy8ABCUPQAA0zsAAGi7AFC7vQDgTz0AQDg9AMDuvAAAOTwAAJw8AIBrvAAgUj0AoEo9AICmPACAdLwAwIO8AADguwAAfzwAwIA8AEDuPADArTwAwPo8AIAevQAAv7wAQOY8ANCnvQAART0AgNI8AEBbvQBAyjwAAH69AIBUPAAAKTwAwIs8AICmvAAAi70AAEY8ACBPPQBACD0AgIw8ANC2PQAAhr0AwI28AMC0vADwmL0AAPK7AMBivQAAnrsAgLU8AOBJvQDAjr0AQJm8AACqPAAAbjwAAIC7AJCMPQDgKL0A4DG9AICAvACAIb0AQFg9AFCDvQDAA70AAAC8AIDWvADwkj0AwAU9AKBqvQBwir0AIAq9AMDbvACAbz0AANY8AAAZvABA8LwAgKA8AGAfvQDggb0AgCQ9AICtvAAAJLwAQJm8AGA5vQAAI70AAF67AIBLPAAAsTwAQIQ8AMCAPAAgaL0AUKA9AOCVPQAghr0AAOq8AIA9PAAAtLsAkJA9AIDpPAAAGDsAwL08ACCbPQCAZzwA4Ck9AEDEvAAAjjwAAIi6ACA1PQAAzTwAoC+9AGC9vQCgmD0AAFA7AAA7vQDwmD0AQEe9AACUOgAwqT0A4Fq9AIAhvACgJ70AoCS9AGBqPQAAZD0AwEC9ADD6PQBATj0AwIi9ACAzPQDAO70AwIq9AKAovQAAVL0AgGo8AABeOwDAtbwAMOA9AAAqPQDAR70AoC+9AEAzPQDA8LwAgG48AIAlPAAABzwAgDy9ABCFvQDANr0AgLS8ADDJvQAAKLoAcIs9AABFPABANz0AAE48AIAsPAAAFLsAgPY8AEDvPACgXD0AgIm8AAAKvACAJL0AEKO9ALCivQDwoj0AYHY9AAAzPQAAIz0AQOw8AADIOgCAHrwAgHi8AKAPPQAgZz0A4DQ9AGAQPQAQo70AABI8AIA6PQAAfb0AYFY9AGBvPQCAFb0AwKc8AIAtPADADT0AQKw8AKBAPQAAAzwAgNS8AIDRvACADLwAgPG8AEAHPQDgYT0AQJg9AECCPADAiL0AgJM8ACAAvQCgfT0AAMq7AAD/uwCgKL0AwIi9AGAYPQCw0L0AwJU8AMCNvAAAJrwAoB+9AADxOwBgIL0AgKa8AAAVPABADL0AUI09AIACvQAgAD0AAIU7AKA7vQCAhj0AADq7AKCfvQBAzbwAgBe9AJCsPQDgVD0AAP07ACAXPQCAhzwAQLg8AABGvABAM70AAJu8AED8vAAAajwAIEy9AAAePAAANL0AAOc7AABmuwCAWzwAEKi9AAA8OwDgJL0AgN88ACAavQAAXD0AEIw9AABpvACQlj0AwDi9AAA0uwCAy7wAAMu7AMBpPQDAvr0AwJk9AEB2vQAALjwAALy6AOATvQBAmbwAwKI8AACcOwCAWr0AgE+8AEAyPQCwsb0AQDC9AKCzPQCA5jwAIMI9AIBcvQBAq7wAwK89AJCFvQAAar0AADU8AACWPQAAarwAAOk7AACpuwAA6DsAACO8AAAAPAAAwLwA4E49AMC5PQBAID0AwJa8AACZOwCAk70AwH+9AECePAAAkLsAAIY9AAAsOwDQjD0=","chunkHash":"4bb0c454245b90e7f45112914cfa80e5adccb9148ba853b9f4d79d9b5d863f63"},{"text":"File: `scripts/create_nuclei_index.py`\n```python\n#...\ndef create_nuclei_index(data_dir, output_csv, class_csv_path=None):\n    #...\n            first_img = np.array(Image.open(raw_files[0]))\n            height, width = first_img.shape\n            depth = len(raw_files)\n            \n            # Get class information \n            class_id = class_info[sample_id]['class_id']\n            class_name = class_info[sample_id]['class_name']\n            \n            # Add to data\n            data.append({\n                'sample_id': sample_id,\n                'raw_dir': raw_dir,\n                'mask_dir': mask_dir,\n                'depth': depth,\n                'height': height,\n                'width': width,\n                'num_files': len(raw_files),\n                'class_id': class_id,\n                'class_name': class_name,\n                'first_file': raw_files[0]\n            })\n            \n        except Exception as e:\n            print(f\"Error processing sample {sample_id}: {e}\")\n    \n    # Create DataFrame\n    df = pd.DataFrame(data)\n    \n    # Save to CSV\n    os.makedirs(os.path.dirname(output_csv), exist_ok=True)\n    #...\n```","range":{"startLineNumber":100,"startColumn":0,"endLineNumber":130,"endColumn":0},"embedding":"AACMOwBApjwAQF49AFC5vQDgMb0AwI69AACEvAAAoDsAsJK9AACbuwDAUz0AgMM8AAAGOwBAwb0AALK8AGBRPQBgJ70AIAg9AMA3vQAANz0AgNc8AADBvAAA/zsAAPK8ANCDPQAAMDoAAO47AADMugDgUj0AALO8AOAQvQDAq7wAAN28AADSPABwvb0AQP28AADmOwAAvzwAgGA8AABWvABwrz0AYJW9ANCKPQAA/TsAwPq8AMDrvACADj0AQNS9ACCaPQCAIrwAAFi7AFC2PQBAwDwA4DG9ACBrvQBgBj0AAKC9AMBYPQCAT7wAAJW8ADC0PQBga70AgLk9AAAPPQCAhLwAoHy9AAAwuwDAqLwAwCI9AABAPACAIz0AwJ+8AOABvQAAODoAwIg8AIC2vADQir0AAKS8AFCgvQCA7bwAwNI8AGBePQCAaTwAIAe9AABavADgI70A0IW9AACtvAAAyb0AAJi8AMBLvQCAHD0AIHe9AMBLPQCAgzwAgBw9AAAkOwBAwbwAoBg9AAD7PACAD7wAgBI9AIBlPAAgGD0AYAk9AIAGvADA8zwAAPu8AIAyvQCAxzwAQAK9AMAtvQCAijwA0JG9AGBIPQAAe7wAwLc8AIDfPACANrwAgJa8AOA1vQAAsjsAAAS8AABivAAAzLsAgJ28ACAoPQBQhb0AAIQ7AABLvABAYj0AQJC8APCbPQDAk7wAsJm9AADnuwCQjT0AwDM9AABWvQBAvD0AAPI8APCMPQDAwTwAYF49AACmvABA3DwAEMq9AMAtPQCA1jwAAEs9AMDMPADgNj0AAL+7ACBGvQCAIbwAACe8AICLvABgjD0AAFi7AIDevAAA3jwAwAk9AACxuwAAcLoAoAC9AKBbPQCgF70AwJe9AOBJvQAAoLoAwLi8AIBJvQAgUD0AAPm7AAB7PQAAhbwAID69AOBGPQCAkb0A4DK9AEBKvQDgPr0AAHO9AGALPQBAm7wAwJK8AID1PABgGr0A4B29AAA0OwAA6TwAgHo8AEC/vACgXj0A4BU9AACoOwDABT0AgMq8AIDLPACAljwAwNi8AMDhPACAULwAYBE9AABAOwBA/bwAAPA5AADsuwCgD70AADK7AAAAuQDACL0AAKu8AMCTPQCAAL0A4Eq9AACpvQDAaz0A4BQ9AOAUvQBA/DwAQIA8AIBevACgHz0AACY9AABJPADAkrwAAFC8AICEPAAAgzsAAHw7AMD9PACADTwAQNE8AIDuvAAAvTsAwNQ8ACC8vQBAEz0AAD88AFCQvQAAezwAcIu9ACALPQCAXbwAAMI8AICSvABAg70AAEc8AGBhPQCAQD0AAKw6ALCiPQBgrr0AgCm8AIB/vQCQl70AAPC7AOAsvQBAjzwAwPM8AABQvQBAVr0AwNa8AMD+PAAAZbwAwIu8AFCsPQAAL7wAYAy9AAAJPACAILwAwDw9AIDRvABAhrwA4CS9AGATvQDgYD0AoBs9ANCqvQBgZ70AwNy8AAAlvAAgbj0AQL88AABCvACAdLwAAGM8AIAFvQCgnL0AwBA9AICfvAAACrwAAM+7AACsvADAXb0AACS7AIAQPABgDD0A4CI9AECmPABAer0AoMo9AMCaPQBgjL0AwOq8AABYugDAyrwAML09AACsPABA9bwAQIM8AECKPQAAUjwAAKQ8AIBEPABAMD0AAGw7AABJPQBA9zwAwHS9ACBrvQAQjT0AAKo7AJCUvQAQpj0A4IS9AEDQvABwnj0A4HG9AIBpvACgLr0AwIC8ALCUPQBgUj0AgDi9AJDTPQAgUj0AwEO9ACBOPQAAVb0AII69ACAFvQAgc70AABU9AAAsPACAH7wAqAY+AECYPADgM70AYCu9AKBdPQBgLL0AID49AABYugCAUDwAABW9ABCcvQBAD70AwIi8APDfvQAAMjwA4IQ9AEADPQAARD0AAPA7AIAbPAAAFDsAAHA8AEAIPQDANT0AgAa9AIA5PAAAsLwAsJu9ACCdvQDghz0AACA9AAACuwAAazwAAME8AGAbPQAAtLsAQKW8AAC7PADArT0AQGo9AKAPPQBgsL0AgGs8AKBGPQDwlL0AgEA9AKAZPQCARr0AAL27AACPPAAAED0AgBw8AEA2PQBgEz0AwAO9AIB9PABAw7wAgES8AEClPAAgcz0AcJY9AAC0PADAbL0AQJs8AKBFvQDAfj0AgBc8ACAWvQBAJL0AsNC9AIAUPQAg1L0AACk8AED6vAAAZjsAoGC9AADMOgBAEr0AgJY8AAAZPADA7rwAMIQ9AAAEOwAA5zwAAJ47AIDGvABgZT0AAD47AKB1vQDA+bwAIBW9ANC7PQDAcD0AAAC5ACBLPQAAUTwAQPo8AEDLvACADL0AwLW8AADFuwAA1rwAoH29AACsPADA/7wAQLA8AAA8PADA8jwA8MK9AIAjPACAyLwAgPc8AECqvADAYz0AgKE9AACTvAAgnz0AAP+7AACwOQCA1LwAgFk8AKBcPQAw1r0AQEk9AGACvQAAfrwAAKi7AOAFvQAAubsAQAI9AEDIPAAgnb0AwI28AOAlPQAAvb0A4D+9ANCIPQCAdTwAkLE9AGA5vQAgR70A8K49AAA8vQBAWr0AAL48APCYPQCAM7wAAMC7AACGvAAARLwAgH+8AECDvABA7rwA4BE9AOC5PQBA5jwAAIM7AACFOwBwwr0AMIu9AIBGPADAsbwA8IQ9AOALPQCAvj0=","chunkHash":"edfefd316481424e46c661947c99cfd3031fab385bde1256717e070c206539fd"},{"text":"File: `scripts/create_nuclei_index.py`\n```python\n#...\ndef create_nuclei_index(data_dir, output_csv, class_csv_path=None):\n    #...\n    df.to_csv(output_csv, index=False)\n    \n    print(f\"Created nuclei index with {len(df)} valid samples\")\n    print(f\"Saved to: {output_csv}\")\n    \n    # Print class distribution\n    class_counts = df['class_name'].value_counts()\n    print(\"\\nClass distribution:\")\n    for class_name, count in class_counts.items():\n        print(f\"  {class_name}: {count} samples\")\n    \n    return df\n#...\n```","range":{"startLineNumber":130,"startColumn":0,"endLineNumber":141,"endColumn":13},"embedding":"AIBOPACAyTwAoKg9AHCsvQCgML0AgL68AKAyvQCATTwAcJK9AIC8PABASj0AoAo9AADYvABQr70AACi8AIBNPQDAb70AABC7AABivADwiD0AADE8AIDsvAAAUz0AQOC8AOABPQAAAAAAAMO7AMDXvADAMT0AYCm9AGBDvQAAzbsAgOm8AIBYPAAQwb0AQEi9AIDwPAAA0DsAAB88AEBBvQCgcT0AcLm9AMCxPQCAhTwAIDO9ACAjvQAAGzwA4Lq9ABCvPQBAwbwAgBk8AJCJPQCgCz0AYCC9AEBJvQDAAj0AsI69AMBqPQAAaLwAQEG9AMB7PQCA0bwAgMs9AEBxPQAASrsAABW9AIBmvAAA57wAgHM9AAALPACAIT0AYAG9AABevAAAtbsAACS8AID6vABgU70AAOG7AGB2vQDA9LwAgM88AABCPQCgEz0AABq7AAA1PACgeL0AQF69AADROwBQlr0AIAC9AECwvABArjwAQBO9AMCBPQCAfjwAwMI8AOAlPQAAoLoA4DM9AEApPQDAvzwAQNs8AAAaPABA0zwAoDA9AEAaPQAA6LsAABG9ACBKvQBgQj0AABm8AMCCvADArDwAMM29AABAuQAAN7wAgJ08AADBPAAABbwAgDy8AEC9vADAgTwAAIG7AADuOwAANLsAAOE7AECgPACgMr0AAAg8AAAwugAAGz0AgP+8AMByPQAAfbwA8Li9AACzuwCAWzwAgG48AICyvACwzD0AAGQ9AOChPQBAmTwAwDc9AIAyvAAAtDwA8O69ACAQPQDAbT0AoJg9AIBmPADgaT0A4AG9AMCTvAAAmzsAgHc8AIDWvADADj0AgKw8AIBZvQAAvzwAoBo9AIC8vAAgF70AANy8AKA9PQBAQb0AIK69AMA/vQCA3jwAAIA7AMCOvABAMD0AAKo8AIBFPQCAbzwAYBu9AICCPQAA6rwAwKy8AOBDvQBAW70AIFy9AADUOgDAs7wAQAu9AECxPADgD70AoEO9AADfOwAAWjwAAK47AGATvQCwzT0AAC67AAALvABAPT0AAHa9AACIugCgRT0AwA+9AADfuwCgXb0AwDk9AIAxPAAAJ7wAADg6AADauwBQgL0AAOC7AABmvAAAq7sAQOC8AOC6PQAAKDoAAOQ7AEA+vQBApT0AgFE9AEBnvQAAtzwAAD28AEC3vACAQTwAEIA9AMDKPACACTwAIBy9AAD5PAAA7DsAgHO8AEAHPQDA8jwAgMA8AOA3vQAAw7wAAKk8AEARvQBA3jwAAJU7ACB5vQCABbwAAIe9AAA4OwAgGT0AAIQ8AAA3PAAAIL0AgNI8AOCAPQAA9TwAwOk8ACC7PQBQ0r0AAOG8AFCXvQBAlb0AwJ+8AECsvADApjwAAL28AIC6vQAgR70AAEe8AICmPAAAYLkAACa8AMBZPQCAv7wAAJW9AIA0vADAKr0AgJk9AGA+vQAA7bwAAE68AABIvQBAyD0AoCs9AKC1vQCQg70AgO28AACavADAQz0A4Cs9AIDivAAA0LwAgC49AAD2uwBQl70AQPc8AABPvAAA0bwAoAa9AMAHvQAANb0AgPc8AAB+uwCAKjwAAFY7AAB2PADgFL0A4Jw9AFCDPQAAyL0AAAq9AAAguwAAtzwAYKk9AKBSPQCAQL0AwI88AHC8PQAAPDwAgCe8AMDmPAAAbDsAgEg8AIBcPQCA4TwAIEG9AOBVvQDQzT0AABC7AMCYvQBwhj0AYEi9AADLvADAAz0AwBi9AAD4OwAgVL0AwM28ACC7PQCApjwAgEe9AADIPQAgVT0AEIa9AIDXPQCA9bwAAE29AMD/vAAAbb0AQI08AADwugBAgbwAYPI9AMDtPACgeL0AYF+9ACAtPQDASr0AQPw8AMDBPAAAibsAAEG9ALCsvQCArjwAAGG8AHDWvQCA8LwAAEM9AACMOgBAAD0AgBU8AABbvAAALTwAQBs9AAC+PADASz0AwKW8AACGuwDAt7wAoGe9AGCcvQDQ0T0A4Eg9AAAjPABgAj0AYBI9AEDaPAAAXLsAAEq8AMDRPADAiz0AIHg9AOBFPQBgPL0AgB89AAD5PADgl70AwH89AMC8PACA+rwAAJI7AAAwOgDA7zwAAPU8AEArPQAAXjwAABe8AACEPABApLwAALw8AIDiPADgpD0AUJE9AMCFPAAA47sAgIc8AACUOgBgXj0AgD48AICivABAmb0AsLy9AID5PACgeL0AANs7AIB6vAAA+rwAgKa8AAAkuwDAB70AALc8AAC2PADAs7wAgGs9AAD0OwDABz0AAKA8AEAyvQDgeD0AAOM8AMA9vQCAAzwAgO+8AEDtPQBAwzwAAJe7AMBXPQAAb7wAwPI8AOAQvQBAPb0AALC5AMC4vAAA5TsAwA69AADHPADAjLwAgKu8AKA/vQDAgbwAAKm9AABmOwCAsbwAUJE9AAAyvACgYz0AIHc9AKBQvQBwjT0AAFm8AIAPPAAAkDoAABg8AHCbPQBwtL0AQFE9AKBSvQBgAb0AAGC5AADNvACADrwAwI48AEDRPAAAK70AgJ+8AAB/PABwsL0AQIW8ANC3PQAAFTwAoM89AOANvQAAdr0AcJo9ANCNvQBAvLwAAKU7AKDsPQAANLwAgBE8AAClvAAAkDoAANm7AACIuwBgHb0A4D49AODOPQBAbD0AgAy8AAAnvABwgr0AQAC9AADWuwAA9bwAoBc9AICuPAAAjD0=","chunkHash":"d1d806e2ceba4d51a6bfd245b07cee419d783f438479c5bf21540fe8d5949420"},{"text":"File: `scripts/create_nuclei_index.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description='Create a CSV index of nuclei samples')\n    \n    parser.add_argument('--data_dir', type=str, default=config.DATA_ROOT,\n                        help='Path to the nuclei dataset directory')\n    parser.add_argument('--output_csv', type=str, default=os.path.join(config.ANALYSIS_OUTPUT_DIR, 'nuclei_index.csv'),\n                        help='Path where the output CSV file will be saved')\n    parser.add_argument('--class_csv', type=str, default=config.CLASS_CSV_PATH,\n                        help='Path to CSV file with class information')\n    \n    args = parser.parse_args()\n    \n    create_nuclei_index(args.data_dir, args.output_csv, args.class_csv)\n#...\n```","range":{"startLineNumber":143,"startColumn":0,"endLineNumber":155,"endColumn":71},"embedding":"AACQuwBgKj0A4K89AMD1vQCwqr0AgHO8ACAmvQAAhTsAwI29AACrOwDAvTwAwNE8AADmPACwz70AAFi7AABzPQAg0b0AgHk8AACuvADAHj0AQBk9AABIOgCApjwAQAq9AIBsvAAA7LsAAGa7AIA2PADAHD0A8Ke9AACWuwAAVLwA4AS9AADKPABgr70AQC29AECWPADA9LwAQJA8AMCzvAAAMD0AIOO9AEAnPQDA0DwAYFO9AECMvAAAmLsAYIe9AMCHPQCgC70AAHm8AOAoPQBA/DwAgEG8AKAjvQCAHTwAcKe9AAAKPQCA4LwAgCy8ALCFPQAgK70AAHc9ACAnPQBgEr0AALi7AACQOQDAJL0AgIA8AAAaPQAAbD0AANe8AGBSvQCAFTwAAA67AECovACQmL0AAAA9AGAlvQBgTr0AAOI7AMD7PAAgKj0AgNm8AAAQvADgZb0A4Dq9AIAaPADQp70A4Fi9AABkvQBACD0AICq9ACBRPQAgGD0AQMo8AMDiPABgQr0AoEE9AMD+PAAA/zwAoBY9AAD7OwDAHT0AoGE9AACWuwCA9DwAAKI7AICgvACAaj0AAEu9AADquwAgHT0A8PC9AADiPABAh7wAANK7AAAgugAAkLwAIAS9AIDLvADAnjwAAF47AACHPAAALLwAgL48AABFPQCAmrwAAIy7AADQOwBACj0AYD+9AFCSPQAADLsAsJ69AECSvAAAXbwAQII8AMClvAAg+T0AYCw9AJCGPQAAIjwAwIo9AMD5vAAAcjwAgL+9AEBrPQAA/zwAINg9AMDuPADAnD0AgJy8AMAavQCAZDwAABG8AADovAAA9DwAAAK7AMD6vAAAnzwAIJo9AADhuwCAFr0AgCu9AICXPQCgWr0A8Je9AAB8vQAA8TsAACG8AGAgvQAArDsAwIc8APCVPQAA27sAQB+9AIAMPQAAKr0AAIA5AADGvADgML0AMIO9AAC7PAAAyLoAAJY7AAA4OgDgcb0AkKe9AAAkvQDAwjwAADE8AAAUOwDwtj0AACO8AABGuwCgZj0AwGe9AMADPQCgoj0AAAK9AAC6OwCA4bwAAMs8AIACvQDgAL0AAEM8AABEOwBA/rwAAOc7AAAmvAAAxLwAALO8AHCqPQAAs7wAAK+8AKCivQBwpD0AANI8ACBrvQDACT0AwMW8AAAEOwBANT0AgKk9AICnPAAAOTwAAKS7AGA6PQDAAj0AAKi8AOAPPQCAVTwAABE9AIAXvQDgA70AQAg9AMBdvQDA+zwAAB48AKBovQAAkDkAYHa9AABiOwAA2bsAAMC5AMCePABAdb0AwEY9AMCGPQCgID0AQAc9AHCxPQAwrr0AAHm8ALCVvQCQgL0AAMg7AMBTvQAAQDkAAIc9AOBMvQDA8bwAoBu9AADgOwAAxzsAwBu9AEBkPQAAPLsAYFO9AACCvAAATLwAkJs9AIBJvQCAvLwAQJ88AGA7vQAAsD0AoH09AMBNvQBwib0AAMO8AACcOwBAcz0AoEM9AAA8uwAAQLkAAKw6AABEOwAQg70AwDs9AADIOgAAxrsAgLa8AACIvACgGr0AYAg9AIBVPACA/TwAgPY8AED/PAAARrwAANQ9AADhPABgcr0AAJ+8AMCBvAAgDj0A0LM9AOBNPQAA8bwAgMU8ACAxPQAAIrsAgFI8AAAKvAAAvzsAAIq7AMAPPQAgKz0AABC9AFCJvQDQtj0AAPs7AFCkvQAgYD0AwLm8AACrOwBArTwAACw8AMDSPAAgpr0AwN+8AJCAPQBANT0AACW9AJDuPQDAjT0AAEC9AEC2PQBgD70AYHO9AOCKvQCgF70AAFu8AMCKPAAAA7wAMOs9AIBCPADgJ70AQMq8AIBNPQBgYb0AwPU8AACJPACA77wAQES9APCLvQAAYzwAgBC9ABD0vQDAkrwAQKI8AICEvADgjD0AgGQ8AAAMvACASbwAQMo8AIAMPAAgAj0AYBy9AAAMvABgUb0AQEq9AEC4vQDQnj0AgGg9AAChvAAAHrwAoAI9AECBvACA/7wAAP28AAAPPABgGj0A4EY9AOAQPQCAoL0AIAM9AGBfPQDgib0AQFc9AAA6PACgQL0AAA88AOBKPQAAyzwAQMU8ACAtPQAAizwAAGS7AIBEPAAAWjsAgIg8AAAHvADgND0AAJo9AECZPACAb7wAgFE9AABivABgvD0AQAI9AABjvAAATL0AYJS9AEAePQBAdb0AAGI7AAChOwAAhLsAAEq8AAD5uwAAwbwAQPM8ACAXPQBgBL0AYCo9AOAGPQBgHD0AALC6AKBrvQBglz0AABo7AHCSvQAA5zwAAFi6AGDFPQAABDsAwKq8AEDoPAAAbzwAwD49AGAXvQCgYr0AAFI7AIAtvAAAk7wA4D69AIDOPABA+rwAQK68AAAFvACAzzwAgDK9AIDqPAAA/LoAsLk9AAByOwBAbj0AMIw9AABovQAA4zwAYBC9AACkOgAAhbwAgP08AMDyPABAZL0AYG49AKBYvQBA+7wAgH+8AJCLvQAASbwAAJi7ABCMPQCgB70AABK9ACAdPQAARr0AgN68AOC+PQAAWDoAoOk9AEBKvQAAoLwAoFs9AOCfvQAgFb0AAM08AKCcPQCAMrwAAIY8AMDMvAAA9LoAgN28AKBSvQAASLwAAPI7APDPPQBgZj0AwKw8AMD5PACgpb0AgHq8ACAOPQCANL0AwFA9AIBfvABQgz0=","chunkHash":"e30b9001ed9eea5368c09f81a4ae8a7dcb3474dab023a84ffab1e3d4ff94501b"},{"text":"File: `scripts/create_nuclei_index.py`\n```python\nimport os\nimport glob\nimport pandas as pd\nimport numpy as np\nfrom PIL import Image\nimport argparse\nimport sys\n\n# Add parent directory to path to import config\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\n\ndef create_nuclei_index(data_dir, output_csv, class_csv_path=None):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":159,"endColumn":0},"embedding":"AIAVvABgOT0AoHo9ACC/vQDgnr0AAMK8AAA+PACAfDwAoJW9AACnuwCgXT0AAOk8AIAFPADQwL0AANC6AOB9PQDQor0AwKc8AIDUvABAlj0AgHs9AAAVPAAAbrsAALC8AACqPAAAoLkAgF88AADzOwBwgD0AwBW9ACB/vQCAD7wA4Be9ACASPQCQ970AQP+8AABRvAAALTwAAMQ8AAD8ugBAVz0AAHC9AACNPQCAozwA8IO9AEDXvAAAkLsAMJG9ALCyPQDgCL0AAM87AIASPQBA3TwAgDK8AABhvQAAdrsAkIG9AGAqPQAAMzwAACI8AFCyPQAwi70AsK89AMDqPAAAgLoAQAy9AEDtvAAAQr0AYEo9AIAZPABApTwAAFy7AADMvABArLwAABg9AAAtvACAIb0AwNk8AGARvQBASL0AgD08AKAGPQCAVz0AgGs8AAAmOwDgTb0A0Iu9AACAOgAwmr0AIES9AIBWvQAAxzwA4GC9AABVPQCAjTwAYCA9AIA1PABgN70AADE9AMBbPQAAgDsAAL48AIAnPADgsj0AYFE9AOAKPQDAlzwA4Am9AADJvAAAlT0AoDe9AAAouwCAgLwAwHu9AECAPAAAzLwAAK48AICdPAAAazwAAGK8AACquwCArTwAAH28AIBTPAAAvrsAwJQ8AEAEvQAAa7wAQOO8AMBFvQCAsjwAwOy8AECKPQCAKrwA4Li9AAB0PACATzwAAE48AEDLvAAQ9z0AYFE9AOChPQAA5DsAQC89AABAvABgDT0AIM+9AMBJPQCAVTwAwKE9AACpPABAZj0AgKW8AOAVvQAAdjwAgKs8AIDPvADgNz0AALc7AIAuvADAxTwAoBM9AADWuwAA1LoAgJw8AEC9PQBAQL0AkKa9AACTvAAA1DoAwLS8AABGvQAAzLsAAOA6AABqPQAA7rsA4A+9AMCkPQBgVr0AAEm8AIBdvQAgTr0AgG+9AABIOwCgM70AAGI7AEDiPABAXb0A4BK9AEDfPADgJT0AALM8AICvvABAwj0AgDY8AICVvABAOD0AwIC9AACNvACAxjwAAGg6AOAkPQCAAjwAgDA8AKAJvQCgJ70AAPQ7AICIvABA1LwAgAM8AABwOwBAgL0AQPK8AFDAPQAAsDkAcKC9AMCGvQAwqT0AQF49AMBOvQDALj0AgEO8AEDMvAAAzTwAcKU9AECovAAAnLoAgFi8AMAkPQAA9TsAQBG9AGALPQBAgjwAAFw8AABqPADAqrwAAJY8ACCGvQCA2zwAALA8AGAovQCAND0A0KO9AADdOwDAhrwAgF88AAAAOgDA7LwAAKA6AMBPPQAA8DsAALU8AACKPQAgkL0AQL28AGA/vQAAeb0AABq9AMAqvQAAmjwAQO88AGAzvQBA1rwAIEG9AADsugAAMzwAALK8AICPPQAAOrwAoGG9AICdvAAAsrwAsKg9AADzvACAxbwAgCg8ANCcvQAgIT0AQAk9AOBcvQCQjb0AALo7AICLPADAYj0AACq7AABfPAAAL7wAAJY8AMA5vQAgor0AQNW8AOBPvQAArLoAwKQ8AABrvADAeb0AgFe8AEDPPADAujwAABU9AOBBPQAgRb0AIJU9AABavAAgpL0A4Ca9AAAHvACgHj0AAPs8ACBZPQAgh70AwJ88AJC0PQAAvjsAAMC7AABAOgCAmTwAgAW8ACCHPQAASzwAgEm9AEA4vQAAfT0AgEA8AACqvQAgiT0AADG9AAAwPABgRT0AgNW8AACOuwAgj70AAJ+8AACoPQCQij0AYIy9ADCLPQAwoz0AQJ+9AMB9PQDAH70AoH29AMDYvAAAqL0AgK48AACOvAAAlDoAAPM9AEARPQCQjr0AgDG9AAB6PQDgnr0A8IM9AKAmvQAAersAYFa9AOCJvQDAlbwAgN+8AMD3vQAA9DoAACi7AAD9OwBgDz0AAMC7AACgOgAAMLoAgGa8AMAvPQDgRD0AQBW9AAAAuADAFr0AMKa9AIBtvQCAIz0AAM87AABkvAAAALoAoHE9AIBQvAAAZDwAAF+8AACpuwDgPz0AkJ09AADwOwBgH70AAJM8AEBXPQBAVb0AAPM8AAAoPAAAab0AANW8AACRPAAAmjsAQNk8ACADPQAgPT0AgHu8AIAEPQAA/LsAAC88AAA6uwBArj0A4LA9AABtvADAYb0AgL08AKBNvQDAKT0AYC89AADmuwCAML0AsIG9AAAwOwDQk70AANs7AEDJPADgJb0AALi8AOAavQDA47wAwAE9AADhPABAJr0AAH09AABUuwAAdz0AQL28AOAXvQDgID0AAHg8AEBGvQCAhbwA4AE9AADJPQCArjwAAIQ7AJCOPQBAjDwAgNQ8AECNvQAgb70AAIU8AECqvAAgQL0AIF29AEA8PQCAI70AAHA8AMCkvADA3DwA4FS9AABJPAAgR70AQJs9AADAuACgbD0AIEk9ACAKvQAAIT0AgNk8AIBQPACAUr0AgFw8ACBePQAQhb0AIKo9AEC6vAAAMrsA4AU9AKB9vQAAfDwAgO68AMDCPACwkb0AAI68AGB2PQAAjL0AAAE8AOA/PQAA6DsA8N49AIDpvACAELwAwIk9AMCMvQDA37wAoBU9ANDJPQAAPLwAAGg8AABiuwCgBL0AALW8AABRvQCgOL0AwBY9AMDmPQCARLwAgMa8AADwPAAAWr0AYA69AACsvAAAMLwAYD49AEC3PABw4j0=","chunkHash":"2f5051c0d2167f2ac15021f717aa4e1d940a5247599c784c320769ba9c09f87d"}]},"file:///teamspace/studios/this_studio/scripts/temp/copy_sample_folders.py":{"hash":"df88365d82c0861b620bfab1633132c8b82848318b5ebf45521fdc3292926378","entries":[{"text":"File: `scripts/temp/copy_sample_folders.py`\n```python\n#...\ndef copy_sample_folders(csv_path, source_dir, dest_dir):\n    \"\"\"\n    Copy sample folders based on sample IDs from CSV file.\n    \n    Args:\n        csv_path (str): Path to CSV file containing sample IDs\n        source_dir (str): Source directory containing sample folders\n        dest_dir (str): Destination directory for copied folders\n    \"\"\"\n    # Read the CSV file\n    print(f\"Reading CSV file: {csv_path}\")\n    df = pd.read_csv(csv_path)\n    \n    # Get unique sample IDs (they are already zero-padded in the new CSV)\n    sample_ids = sorted(df['sample_id'].unique())\n    print(f\"Found {len(sample_ids)} unique sample IDs\")\n    print(\"First 5 sample IDs:\", sample_ids[:5])\n    \n    # Verify source directory exists\n    if not os.path.exists(source_dir):\n        raise ValueError(f\"Source directory not found: {source_dir}\")\n    \n    # Create destination directory if it doesn't exist\n    os.makedirs(dest_dir, exist_ok=True)\n    print(f\"Source directory: {source_dir}\")\n    #...\n```","range":{"startLineNumber":6,"startColumn":0,"endLineNumber":30,"endColumn":0},"embedding":"AACwPACQoL0AYBe9AEBlvQBAPr0AgBS9AIBfPADA+LwAAIK8AGCrPQCA9TwAwJK8AID9PABwg70AgIe8AOBtPQAAnDwAQHQ9AOA1vQAA6DwAIBA9AKBPvQAgJT0AAF89AKAQvQAA67wAgDE8AIBIPQBA/zwAQOK8AABQOwDAu7wAwCe9AMABPQDAor0AwGo9AMAMPQCACjwAAKK7AIAYPAAgzT0AwA+9APDKPQBAk7wAoEU9AAC8uwCAcD0AwKC9AADoOwAAGz0AgGk8AGAPPQDA4DwAgMC8AMC3vAAgRz0AwOC8AICVPAAACLsAoIu9AEDIPABgYb0AAAY9AACfOwAgHj0AIJI9AMCRvADgCL0AgHg8AGAMPQCAerwAcJ09AOAZPQDQsr0AwKA8AABYuwDgmr0AICA9AIAWPABAdL0AsIM9AACXOwDg1T0AYB49ADgEvgAgOL0AgJC9AABqvAAAiDoAwBy9ACALPQCATT0AAKK9AIA4vQDADT0AwLe8AADwuQCANr0AAK48AIDDPADAzjwAwGM9AMDVvAAA5zwAYH89AAAIuwCApDwAwIC8AADVOwAAALwAAFS7AMB7vQAQxz0AwLG8AMCePAAAyLsAIDG9AIASvACAQbwAALc7AJCVvQAgKb0AAPm7AED2PABAr7wAACG8AACYPABAvbwAAIk7AAAKOwAgBj0AoAQ9AKB5PQAARDsAQM48ACBPvQDAgrwAAIM7AABrPAAARz0AgAu8AIAIvAAAxDsAoEU9AECPPQAAzTwA4HG9AAAjPQBgBL0AgGk9AECOvAAAnr0AgJa8AIA9vQCADTwAQIQ8AIAavQAAZrsAADc8AACZPAAAH70AgPa8AIDxPACAgLwA4DC9AGAjvQAAdzwAQAa9APCNvQCAFzwAAJA5AIC/vADghT0AACi6AIBBPAAAnrwAQIG9AAAEuwAAtzsAoDk9AIAbvQCANDwAADK8AICcPAAAqrsAANW8ACCcPQCA47wAABY8AABUPABg4D0A4Aq9AMAzvQAAzLsAYGq9AACbOwAAbz0AAGy8AADJuwCAWjwAEKW9AAD4OgAA5rwAwOY8AEAjvQAAc7wAQK48AAChOwCAI7wAAAs8AAAFPACgSr0AwBa9AGB/PQCAVrwA4Ey9AIBhvQCQnz0AAJw6AECKPACALrwAIHu9AMBevQCAIT0AgB08AEBevQAA6LwAgAq8AGABvQCAe7wAAIC7AIACPQAA8jsAAIO7AMCUvAAA0bsAwIK9AEAqvQDAr7wAgBo8AKChvQCAyT0AAEY8ACDKvQDAybwAQJe8AMC+PABgN70AgJS8AACvPADA8zwAoKE9AKB1PQBA9r0AYAA9AMC/vAAAnLoA4IG9AIBJvQBAPL0AgDa9AAD0OwAwh70AwJ88AMCkvABwgz0AgNQ8AICrPQBAyzwAgLK8AAA0PABAnDwAQA89AMCEvQCATrwAgAI8ACAKPQAAZDwAAGM8AICJvQCgUL0AQIy8AICevADATD0AgBM9AOA3vQAAqLwAkJw9AMAvvQAABL0AoLq9AADgOQBAj70AUPC9AEA2vQCAKTwAANM8AKBWPQAAMTwA4B+9AABavACgCr0AwKg8AHCcPQAAqrsAAOO9AMA0vQBAGr0AADO8AIBWPQBA3jwA4Dw9AABDPQAA0DoAwL49AEC8vAAAzDsAAAy9AMBJPQAAtLwAUM69AACAvQCgjD0AgKo8AMDfvADA5DwAgFI8AJCBvQBAkj0AIDs9ACAWvQCAUrwAQAm9ACAZPQCAPDwAAB67AMCKPQAAmDwAAGW9AMBRPQAApDsAgN08ACAJvQCARr0AwEu9AEDnPACApzwAoHc9AICjPACAVzwAgA48AAAeOwCAWTwAQIK8AEC4vAAAGLsA4Bm9AMBJvQAAS7wAQM68AMCDvAAggT0AwKU9AMDnvADAwzwAQMW8AAAbvABAyb0AABC6AGBfPQAwij0AoBS9AND3vQAgF70AwMO8AFCavQCAcjwAALs8AABSPADAXD0AwIO8AADKuwBArLwAgCE9AMCNPQCQ0T0AAHK7AIAgPQAASLwAwIg8AOBNvQAgWb0AIK09ABCTPQAgC70AwLg8AOBWPQAAYD0AAJy7AAAKvACASjwAAIy6AGBfvQBgVD0AwC69AKBhPQAgSj0AoIc9AED2PADgQ70AYEE9AIACvQAAXTwAgOi8AAA4uwDAtbwAENm9ANCNPQAA1L0AABy7AACRvABAMb0AwOq8AMBSvQAABLwA4BA9AICQPAAgD70A4Co9AKAVPQAAqbwAAPi8ABCOvQBAQD0AwNa8AHCwvQDA3zwAAF+9ACBUPQBA6bwAAEk8AADePAAA0TsAgE48AEDLvADgDr0AACG8AIDmvACAB70AANO7AIBjvABgw70AUNO9AABdPAAAs7wAQKE8ABCkvQBAw70AAKk7AGBkvQAAMDwAUNA9AADQPACAyzwAoDg9AEClPAAAZLwAwPa8AGBVPQDAWr0A0KY9AACqvACAQrwAgJQ9AAALvABgN70AQJI8AIARvABA/bwAAHo7AMBHPQAA+LwA4CC9AIDPPACATT0AgC09AAA0PAAAnTwAwGo9AICGvACA+r0AAMk8AAAsPQAAPLsAgIa8AIAlvQCQrT0AQMw9AECYPABAlDwAQJY8AKAKPQAgdz0AkLE9AADJOwBgqL0AAMe7AABTvABAjLwAAKY7AEAcvQAA/zs=","chunkHash":"dc82c3692e7cf067925e49adcd03a6b574a471dade9dbe9f7b2a5c48e403674f"},{"text":"File: `scripts/temp/copy_sample_folders.py`\n```python\n#...\ndef copy_sample_folders(csv_path, source_dir, dest_dir):\n    #...\n    print(f\"Destination directory: {dest_dir}\")\n    \n    # Copy folders\n    print(\"\\nCopying folders...\")\n    copied = 0\n    errors = 0\n    error_list = []\n    \n    for folder_name in tqdm(sample_ids):\n        src_path = os.path.join(source_dir, folder_name)\n        dst_path = os.path.join(dest_dir, folder_name)\n        \n        try:\n            if os.path.exists(src_path):\n                # If destination already exists, remove it\n                if os.path.exists(dst_path):\n                    shutil.rmtree(dst_path)\n                \n                # Copy the folder\n                shutil.copytree(src_path, dst_path)\n                copied += 1\n            else:\n                error_msg = f\"Source folder not found: {src_path}\"\n                print(f\"Warning: {error_msg}\")\n                error_list.append((folder_name, error_msg))\n                errors += 1\n        except Exception as e:\n            error_msg = f\"Error copying folder {folder_name}: {str(e)}\"\n            #...\n```","range":{"startLineNumber":30,"startColumn":0,"endLineNumber":58,"endColumn":0},"embedding":"AIAlPADgNr0AwCS9ACCkvQAgEb0AwPS8AECyPACAbLwAgCi8ANCMPQDA9jwAgD28AMCOPADgrb0AoEm9AMCxPQAA/DwAgNQ8AOAnvQAA6TwAIEY9AGBrvQCgfz0AoC09AIAQvABAyLwAAAg8ACAxPQCAIz0AgIK9AAB1PADAsbwAQPK8AAC9PAAgnr0AYDc9AMCrPQAAh7sAAF48AIBfvADQwD0AAIi9AMCjPQDAybwA4Dw9AAACPAAAVjwAIKq9AADzPABAljwAAOA5AIDdPAAAtDoAAE47AKA4vQBAiTwAQIC9AMDcPACAy7wAoJa9AICnPACgab0AQOA8AAC2uwCA2zwAgDQ9AAC6uwDAvLwAQI48AIAsPQBgJ70AQJQ9AKAqPQDgt70AQKQ8AACOuwCASr0AMKc9AMDAPABQjb0AoFI9AAAKPQBAxT0AAGg9AJDtvQAgZL0AMOS9AAAmvAAAZDwAwE29ACAvPQBQlz0AgHy9AIAGvACgbz0AgBi8AACWuwCgHL0A4I89AABwOwAAHj0AgLk8ACAivQCgBD0AQA89AABTvAAA3jsAAOW8AIA1PAAAlbwAgI08AEBGvQDANj0AAKa8AEAxPQAAUrwAQIo8AACNuwAAyDoAAF67AGBDvQAApLwAAAq8AAAwOwCAbrwAIBm9AADuOwCAcrwAAL88AIA8PADAlzwAgCU9AABwPQAA07sAAOM8AMAdvQDArbwAgC49AABSOwCguT0AAKg7AIA1PACAPjwAwFQ9AGBKPQCAbD0AoB+9AKAuPQCArrwAAHw9AADSOwCgKb0AwM28AIDpvAAAcLsAAIw6AGAqvQCAlTwAAMg7AACsugAgPr0AgM+8AIAbPAAAA7wAQAW9AGA3vQCAEDwAIEK9AGDBvQAAgLwAAHi6AOAHvQCAdD0AAGK7ACAePQDgHr0AYGK9AMDmvAAAbbwA4EE9AGAjvQCACzwAgG68AACrOwDADb0AoE69AICvPQCAHzwAAFE8AACqPABwwj0AgG48AMA4vQAAALwAoC+9AACIOwBAOz0AgBC8AAAzvAAAeDwAcJW9AAAaPAAAwLsAgIC8AKB7vQCAiLwAgOQ8AACwuwCAz7wAANo8AOADPQCAwrwAIBi9AIDcPACAm7wA4Fm9AECCvQBAvz0AwMK8AABgvACAJLwAYAi9AICovAAgdz0AABE9AAC1uwAAD70AYEm9AEDkvACANbwAAG08AEAdPQAAQDkAADS8AECOvADA2rwAgGu8AICGvAAA+7sAYDc9ADCJvQDA2D0AAOI8ALCYvQAAGb0AAMo7AAARPADAfL0AAJi8ACBRPQBAOT0AIJI9AGCAPQBAz70AACQ9AAD4uwBAnrwAQBu9AEAavQCAhLwAgDa8AACIugDwmL0AICk9AIBWPABAKD0AACc9AECiPQDgET0AAAS8AID0PABAzjwAQEQ9AABUvACgFr0AAHI7AABhPQAAeTwAgB09AFCFvQBgEL0AABA7AKAivQDgej0AgKA8AAB1vQAA4bsAIJo9AEA8vQAAkDoAoKW9AIB7vACgd70AsKa9AGAivQAAcLwAAPc7AMDDPAAAhDwAoDK9AABAPACgIr0AwMU8AGC1PQDgBr0AsLC9AACgvAAADrwAADo7ANCwPQCgCT0AwNA8ABCVPQCANzwAQMk9AEBJvQAApzsAIFi9AABtPQCAxbwAoLG9AJDUvQCgbj0AgBc9AIAxvQDgLj0AgG08AGBjvQAgZj0AoDY9AGBRvQCAtLwAAO+8AMAuPQAA9zwAgCw8AKAmPQDgcj0AABi9AOAQPQCAh7wAAOC6AMApvQAAM70AAP+7ACAdPQBABj0AoIw9ACAWPQAAkTsAgFC8AABqPAAAfzwAwJg8AIAVvQAAjLoAIGK9AAAavQAAq7wAALU7AEDrvAAAbj0AMJ09AMDMvAAAuTwAgHs8AADMPADQnL0AAOC6AMC3PQBwuj0A4D29AMDwvQBAeL0AwDa9APCYvQAAnTwAgMs8AAAUOwBwjz0AAAC8AAADvABAN70AgNk8AMB/PQAgyT0AgFy8AGBhPQBA/7wAAAw7AAClPABgOL0AQEU9AGBvPQAAO7wAAEA9AOBgPQDwyD0AgDG8AAA+PACABz0AAAC7ANCGvQDgWD0AgIC8ANCiPQDwkj0AEI09ACAIPQCQmL0AcI09AKBXvQCANzwAAOS8AAAhvAAAPL0A0Ka9AMDfPABAwb0AANO7AEAivQDApbwAwPu8AMCZvACAcrwAQMo8AAAkPAAgKL0AYEo9AAAXPAAA2DsAQIK9AFCnvQBghD0AwIo8ANCFvQCA5zwAgIy9ABCHPQCAabwAAHY7AEDKvACAGjwAQEM9AKAwvQCgiL0AABM8AGATvQDAzrwAAJ67AEDMvABgw70A0Nm9AIBcvAAAx7sAoCw9AAB4vQBwlb0AQAg9AIALvQAAKDwAoOg9AMDavACATTwAgEI9AICbvAAApLsAYAm9AADTPAAALrwA4Kk9AACSvACAKrwAYH49AKBZvQBA+LwAgAA9AIAYvABAZr0AAKG7ACBbPQCAKbwAgAK9AOAqPQBA/jwAwIA9AMC1PAAAhjsAoEM9AMC6vACQ5L0AAPc8AMAXPQAA9rsAIAO9AOATvQCwlD0AUJ09AABIPAAAcLoAAOY7AKA8PQCAdTwAwPk8AAAiuwBAlL0AgBI9AICEvADAszwAAAo7AOA4vQCAvrw=","chunkHash":"912f70736f125245a22e63fb1dcfcbf7c31b445bf33a51a67d3d3ec4639ab350"},{"text":"File: `scripts/temp/copy_sample_folders.py`\n```python\n#...\ndef copy_sample_folders(csv_path, source_dir, dest_dir):\n    #...\n            print(f\"Error: {error_msg}\")\n            error_list.append((folder_name, error_msg))\n            errors += 1\n    \n    # Print summary\n    print(\"\\nCopy operation completed!\")\n    print(f\"Successfully copied: {copied} folders\")\n    print(f\"Errors encountered: {errors} folders\")\n    \n    if errors > 0:\n        print(\"\\nError details:\")\n        for folder_name, error_msg in error_list:\n            print(f\"  {folder_name}: {error_msg}\")\n#...\n```","range":{"startLineNumber":58,"startColumn":0,"endLineNumber":70,"endColumn":50},"embedding":"AAB0vACArbwAQCu9AMB3vQBANb0AwN28AAC4uwAAg7wAAJs7ADCYPQDAgjwAAAc8AAD/PABgeb0AMJu9AOCnPQCABz0A4Bo9AIAivQAAIDsAoEQ9AIBzvQBQkz0AgP48AMCCvACAPbwAADY8AGB+PQDAPT0A4DW9AAAIugBA1LwAABq7AICmPAAwkb0AgDY9AIC4PQAApbwAgPQ8AAAZvQBQ2z0AsIi9AKBePQCgBr0A4HM9AIAfPABArzwAoKC9AGBMPQCAIzwAAPA5AADaOwBgPD0AAIs7AKBcvQAgBz0AAHi9AIAuPQCA+LwA0IO9AED1PACAS70AABK7AEAcvQAAZbwAAK88AAB2OwCAoLwAAIk8AGBqPQAgM70AsMU9AGAiPQCgkL0AAPo7AEAovQCgAr0AwMg9AABxPABghb0A4Ew9AMAdPQCQyj0AADs9ACDXvQDAQb0AQN+9AACgugBAEj0AYEy9AABNPQBAgz0AQAe9AADIuwBwnj0AALY7AGAGvQAAybwAwGs9AADzuwBAIz0AQJ08AEBLvQAA3TwAADg7AACDvAAAljwAYBC9AGABPQAA6LsAwMK8AMAUvQAgEz0A4Cu9AMAKPQAAkLwAYAk9AABQugDAjbwAAJE8AADzvAAAd7wAwJW8AAC4uwCATbwAAA28AAA3PACAl7wAQN48AACQuQAAojwAQGE9ACBmPQAA7rsAgMA8AAAHvQCAgrwAQHA9AADdOwAQ3z0AwM48AAC2uwAACLoAYDI9AKAcPQAQjD0A4Cy9AIB1PACgBb0AkJQ9AAAEOwAAlbwAQMS8AAC/vAAALL0AADw7AAAkuwBAuDwAgH48AADivAAAsrwAABI7AAB4PAAA3LwAYA69AMB/vQAAeDoA4A+9ABCRvQDAnbwAADi8AICfvACAij0AAPw6ACARPQBAIb0AgA+9AGAQvQAAi7sAgGQ9AAAdvQCAtDwAAJ87AAAQPADAOL0AEIW9ABCzPQCAljwAwNA8AACcugBQqT0AAKA7AOBNvQBA5bwAABm9AAB0uwAALj0AAES7AMCvvAAAiDwAwJa9AECUPAAgET0AgMw8AGCavQCA7bwAABw8AADBOwCgDb0AwOY8AGAFPQBAtbwAgPm8AAA6PAAAQjsAYBW9AFCBvQAQxT0AAAq9AMAhvQAATrwAYCi9AABNvAAAbj0AAMI7AICZPADAybwAYAq9AAAQvAAAW7wAAJM8AKAjPQAAv7sAAB48AICLvABADL0AAMw6AADzuwAACDoAkIc9AGBivQAA1z0AYCg9ANCEvQBAJL0AAI47AEDkPABgAb0AgDG8AOA7PQDgmD0AwJc9AGA2PQDgo70AgME8AABSuwAA7rwAsJm9AIChvACAlrwAQP68AMCGPADAhr0AICs9AMCjvAAAHj0AgAg9AJCCPQCAEj0AAOa8AKA2PQAALj0A0KQ9AIARvACgOL0AAAS8AAAePQCgTz0A4DA9ACA0vQAA1bsAAIC4AICAvQBghD0AwJo8AAAnvQAAibwAgEM9AEDmvAAAoDkAAHG9AIDNvADAaL0AoHm9AGApvQAAX7wAAMk8AADWOwAA4TwAoAi9AAADvABAzrwAgDQ8AHC6PQBAF70AgJW9AOAjvQDA17wAYBs9APCOPQBAsTwAAJg6ABCRPQBgBD0AwL49AOATvQAAwDkAYHS9AEBhPQCAPL0AMIu9AAC0vQAgiT0AAKs7AEAevQCQgz0AAGg7AMAbvQDAlj0AIGg9AGBqvQAABr0AsIe9AACrPADgWD0AAN87AKAfPQBwkT0AAA29AAAsuwAAEzwAAHi8AABivQCgOr0AAOs7AIDFPADAnDwAAKo9AMD6PAAAIDsAACa9AIDJPAAAYLoAoAw9AEAYvQCA2zwA4Da9AKACvQAAKLsAgHk8AICrvABgfT0AYF49AID7vAAAjTsAIBI9AAClPADw2b0AAIi6AADAPQAQ1T0A4DK9AOgIvgAAF70AQCi9ADCHvQCAUDwAAO88AEDYvAAgRD0AANC8AACjOwAgT70AAPC5ABCWPQDAsz0AgKG8AAB1PQAA4DsAALQ7AGACPQAgUb0AAEQ9AAAFPQAAzDoAgGs9AOBQPQCgyj0AAHC8AIA9PADgKz0AAKm8AMBwvQAwiz0AgFq8AFCSPQAQtz0AYKU9AICyPACgCr0AQKY9AMB0vQCALDwAQKO8AMCcvACglr0AEJC9AIDCPABAzL0AAN28AIA5vACAj7wAgDe9AACePAAAw7sAYDU9AABiOwAgPr0AQHg9AIBTPABAnjwAgC+9APCrvQCgfT0AQDo9AOBXvQDA5TwA8KG9AABLPQAAijsAAKG7AEDgvAAAkzwAQEI9AEAIvQCgpr0AgBM8AACrvAAAu7wAAOo7AIBMvADw9b0AIO+9AEC9vADARb0AIFY9AOBmvQAwl70AAOs8AAAAvAAAfDsAoO89AMBLvQAAB7wAwAs9AKACvQCAMbwAgAu9AAAXPAAAmLoAcIw9AIAQvAAA8zsAYFs9ACAEvQBAEb0AAMs8AAAkvAAggr0AAKU7AEAtPQAAALoAgFe8AOACPQAgBz0AYJY9AECGPAAAszsA4EY9AABavACwur0AgOw8ACApPQAAs7sAIA29AMAEvQAgXz0AgGE9AAC7PACAWTwAAJQ7AIBPPQAA8TsAAI87AACsOgBAg70AQCE9AAD+uwAA8TsAAFk8AMCGvABAzbw=","chunkHash":"3ca8dea4759493f3e8d67644e4d236adfc3bf4197d507428b6307d33a821caee"},{"text":"File: `scripts/temp/copy_sample_folders.py`\n```python\nimport pandas as pd\nimport os\nimport shutil\nfrom tqdm import tqdm\n\ndef copy_sample_folders(csv_path, source_dir, dest_dir):\n    #...\nif __name__ == \"__main__\":\n    # Define paths\n    csv_path = os.path.join('data', 'chromatin_classes_and_samples2_padded.csv')\n    source_dir = os.path.join('data', 'nuclei_sample_1a_v2')\n    dest_dir = os.path.join('data', 'nuclei_sample_1a_v1')\n    \n    # Copy the folders\n    copy_sample_folders(csv_path, source_dir, dest_dir) \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":80,"endColumn":0},"embedding":"AAC9uwCgDL0AAGI7AFCDvQBAvrwAAKM7AAAmPQBA7LwAAI67AAAXPQCAsjwAAIW7AAAwPACghb0AoFq9AOBqPQCAqDwAAFA8AAAJvACwhz0AwG89ACAIvQDAWj0AAHc8AADauwDgUL0AwFm9AKAtPQAgZT0AoFq9AABKuwCAEbwAIAG9AIByPQAwhL0AwOs8AEAePQAAezwAQK08AADruwBwyD0AcLG9AIAlPQAACjsAoIc9AEC4vAAAkLoAgKG9AOAvPQDAvjwAQI48ACAiPQAA1rwAAPo7AIBGvQBAHT0AQFC9AMAbPQAAKr0AsIm9AADNPAAAnr0AQDQ9AACavAAAGDoAgOM8AADRvAAARrsAgG48AADTOwAAo7sAYIw9AABuPACAmL0AQIk8AAB/vACAPr0AsLM9AAAAOwAAPb0AwNA8AED5PADQ+D0AcIE9ALC6vQBgV70A8Ne9AACSPAAAG7wAgOe8AADxPADwiT0A4DK9AAC8ugBgJj0AoB49AIA9vQCgbb0AAFU9AIAPPQDA/DwAAHc8ACBkvQDQnD0AQA89AIB3vAAACLsA8JK9AADsuwCgKj0AgKc8AOAcvQDA9TwAgKy8AECuPABA+rwAQIs8AACKPACAa7wAgPE8AIBmvABAubwAgNk8AACHuwBAtbwAgO28AABcvACAIr0AAKm7AIBFvAAALTwAACY7AEAsPQAATb0AAMA8AABgOgCAVL0AQF09AIDQvADQBD4AQHY9AIAyPAAAljsAwI48AAD4uwCAXzwAABa9ACBZPQBAer0AcJ49AIDZvAAAyLsAQMe8AAA2uwAAurwAACQ9AABevAAAJz0AgAg8AMCKvACAJL0AQMW8AAAfvACAvbwAAJq7AOAevQAARrsAgDm9AJCJvQCgF70AALi7AAAsuwCgbD0AQKE8AEAaPQCAAbwA4Hq9AACYPACAMb0AwJE8AMAYvQAAMLoAQKW8AACiuwDA57wAACG9APCTPQAA9TwAALa7AOBjPQBwzT0AQCg9AMB4vQBA8DwAYCq9AABnPACALT0AgLa8AIAHvAAAizwAAEi9AAASPQAgB70AABa7APCJvQDA9rwAAB08AADnvABAA70AgDg8ACBPPQCAurwAAGW9AIAUPQDAn7wAYEW9AAB6vQBAwj0AAAC5AABgugDANj0AAFu9AEDAvADAgz0AwKM8AADTOwCAUbwAQPe8AMALvQCA1bwAYBg9AGAVPQAA07wAAKo8AACOOwDAnLwAAPo7AIDvvAAAEDsAAKQ6ACBavQCw+j0AADc8ACA2vQCAELwAAN87AECKPAAAs70AAAA7AABUPQDgLT0AwGo9AIBBPQDA270AAMu7AIC6vAAAAb0AQHq9AMCjvABA/zwAwBW9AMCBPADAEL0AoCs9AMDgPACAQj0AwDg9AFCSPQCAsDwA4Ba9AOAUPQCgLD0AgGk9AIAXPACgYr0AgGQ9AEDTPAAAqzsA4AQ9AMBEvQAA+LwAAPY7AOBQvQCgJT0AAFY7AEBLvQCAwzwAUMs9AOCUvQCAKLwAoKG9AAAUvQDgd70AkKW9AIDpvACAFrwAAD08AMAWPQDAAj0AoGO9AMCJPACAQ70AIAE9AAB5PQDAJ70AMKe9AEAhvQAAYLoAgCW8ACDAPQCAzzwAwNQ8ABDNPQAAUjsAoJs9AID0vABA4zwAoDG9ANCoPQBA4bwA0JW9AIDqvQDAgD0AgLs8AOBKvQDwhT0AwM48AKAGvQAAZD0AAHw8AEA/vQAgNr0AABw7AED6PAAAqzwAALk7AMDdPABgND0AUIu9AAAvPQBAYb0AAKO8AEAivQBgY70AAJm7AGBbPQDgGj0AsKU9AICMPAAAybsAQJS8AEDaPAAA4TsAQGw9AMC6vAAAszsAgDG9AGB3vQAArbsAAKc7AMCBvABgLT0A4HE9AKAHvQAAYzwAAPY8AABAugAAob0AAG68AHCCPQDgiD0AkJW9AICIvQCgXr0AEIq9AKBxvQCATzwAAEY7AMCLvACAWT0AQJY8AABiOwAAt7wAAE49ACBDPQAQyj0AgNA8AEBUPQAA8DkAAOE7AGBjPQAAFb0AQJU9AHCLPQAAJL0AgE08AGAUPQAw4j0AAOa7AIBmPABAHj0AgGC8AIA2vQAA8zwAgPa8ACB1PQCwlD0AoFk9AAD4PAAwj70AwCg9AAB6vQCADT0AANI7AADmOwDAobwAcM+9AMAuPQAQur0AAJC8AIDJvACAdb0AAOS8AABMPAAA07wAAHY9AMCOPACAPL0AwCk9AAD6PACAMTwAQGe9AKCAvQBgMz0AAPo8AMB8vQCAHLwAgBq8AADfPADAl7wAAAK7AAD/uwAAWjsAAFg9AABzvQBwo70AgGY8AABavQBAer0AgCs8AAAquwBwoL0AMO69AMCuPADgET0AgNU8ACCTvQCggb0AQIo9AACbvACAfDwAgO89ACBKvQAAmDsAQI49AAC0uwAAM7wA4Ba9AIA1PQCgG70AYKM9AACguwCAGDwA4HQ9ACARvQDA+rwA4Bw9AMCwvABQor0AgBm8APCAPQCAvLwAAMC5AMCDPQAAUj0AgIw9AAC9OwAAgDwAIKY9ACBRvQDgHL0AoH89AGAuPQAA9rsAAIO8AECMvADAgD0AUJI9AADFOwAACjsAAD88AICtPQAAh7sAgJY8AAABPADgM70AgPU8AABDvAAAYzwAQI08AADjvAAAoDo=","chunkHash":"33d248da5dc8d6231714a6b8026333f80f790d58bf6eadeae615462e42fa5d80"}]},"file:///teamspace/studios/this_studio/scripts/temp/clean_unclassified_data.py":{"hash":"feee8ecc0fbd744269e2f26d447a966d8ea5c506c14fa13071c7e083129e7cb3","entries":[{"text":"File: `scripts/temp/clean_unclassified_data.py`\n```python\n#...\ndef clean_unclassified_data(input_csv, output_csv=None):\n    \"\"\"\n    Remove unclassified rows from the CSV file.\n    \n    Args:\n        input_csv (str): Path to input CSV file\n        output_csv (str): Path to output CSV file. If None, will modify input file\n    \"\"\"\n    # Read the CSV file\n    print(f\"Reading CSV file: {input_csv}\")\n    df = pd.read_csv(input_csv)\n    \n    # Print initial stats\n    total_rows = len(df)\n    print(f\"Total rows before cleaning: {total_rows}\")\n    \n    # Remove rows where class_name contains 'unclassified' (case insensitive)\n    df_cleaned = df[~df['class_name'].str.lower().str.contains('unclassified', na=False)]\n    \n    # Calculate stats\n    removed_rows = total_rows - len(df_cleaned)\n    print(f\"Rows removed: {removed_rows}\")\n    print(f\"Rows remaining: {len(df_cleaned)}\")\n    \n    # Save the cleaned data\n    if output_csv is None:\n        output_csv = input_csv\n    #...\n```","range":{"startLineNumber":4,"startColumn":0,"endLineNumber":30,"endColumn":0},"embedding":"AACqPACAQDwAAMA5ACCvvQDAM70AwK08AEB3vQAAEDsAYA09AABwPQAA/DwAABi6AIATvACQgD0AgPc8AACNPAAgiz0AAGE9AIDdvABAiz0AgCs9AOBBPQAAmDwAQNS8AOAgPQAApDoAIAc9AGA1PQBgRb0AQIW8AADQOQDA8rwAgCi9AAD7OwAAPD0A4GS9AICvPACANT0AADK7AEDvvACAXjwAwFW9AGAVPQCAHr0A4LE9AMATPQBAhDwAgLW8AAAcvACAzLwAgDK9AIBEPADA0zwAgKC9ACBjvQBgGj0AwP+8AKA8PQAgmT0AwIG9AOB4PQBAjrwAACk9ABCMPQBAgL0AgAW8AABfPADAFb0AAGw8AMA0vQDgAj0AAJG8AAB3vACAULwAAIk7AACqvQAAbDsAAH+8AEA5vQAAPzwAAKA7ACAbPQBgFj0AAGg9AAD2uwBAfL0AADK9AIA5vQAAvzsAwAm9AICgvQBw4j0AAF69AID7PACAcrwAANQ7AABQPQBgZr0AACI9AMDzvACADz0AYEI9AIBevAAABD0AABs8ALCavQCApL0AADe9AACoOwCAQzwAwOA8AADrvABgMT0AAN67AEC8PADA87wAgEy9AECJPAAAjrwAwJa8AABauwAgg70AgHK8ACByvQAgJL0AwJQ8AIBSPADgLr0AgGo8AACougBgnj0AACQ8ANCiPQCANr0AQGu9AAAoOgBAnDwAAMi6ACARvQBAtz0AQIs9AAAxPACgS70AoAE9AGBgvQDAhLwAQNS8AGAlPQCAGL0AwN08AEBhPQCgQT0AAB48AIC0vAAAprwAwJy8AEBFPQBQkT0AgHA9AACqvQAAQj0AAFe8AAAGOwAAbr0AQIy8AADeuwAAFD0AwCe9AIAxvQBAjzwAQIu8AIASPADQwD0AgBC9AKCQvQCAijwAoJa9AMApPQAQhL0AIHK9AEAgvQAgTb0A4GC9AEDMvABAPb0AoHa9AJC7PQAwhz0AgHa9AACuuwAg2D0AAIi9AIDzvACALT0AgGG8AEC5PADAwzwAIIu9AAAauwAA5jsAwHm9AMDkPACgYL0AgKk8AMDmPACAPbwAwCC9AMCqPADAc70AgAG8AAC0vAAAOLwAsBS+AOBlPQDASj0AYJa9AECCPABgoT0AQBg9AAAIugDQsD0AgC+8AADHvAAA3TwAgCI8AIBFvQAAYDsAAAc8AACgPAAAODoAAJK8AAAAuwCA87wAACg6AACKPAAAybwAgA89AABNvQCAHjwAwGY9AEB3vQCAfLwAgCW8AMDVvAAATjwAgPo8AIDbPAAgWL0AgGY9AOBDPQAA9LoAYBo9AMDpPADIFr4AEK29AFCBvQAAfbwAYJ69AAAwOgAAITwAgD29AMD6vADgRb0AwIG8AGAjPQDgCD0A4Aw9AMDgvAAAeLsAgBm8AIBAPAAARj0AQDY9AECpvADAer0A4EA9AIDePABArz0AABa7AKC5vQDwi70AAPm7ACB4PQDwlD0AwKQ8AMCFPADQsL0AQCc9AAALPACARr0AAJE8AACguQAA3jsAAOA6AEBOvQCAnbwAAPc8AEDDPAAgZ70AwJK9AAACPQCAhzwAwNa8AABoPABAv7wAQDW9AKABvQAgHb0AcIw9AGAKPQCwhr0AoH09APCDPQCA9LwAgIM8AGAVvQAAMr0AgCg8AMA3PQBAsTwAANI7AGCDvQBARz0AoAg9AEA0vQCANj0AULm9ACByPQAQmj0AAK88AGBvvQCALb0AgHo8AICNPADgXT0AgD08AAAMPAAgQz0AgDC8AMDwPAAgDr0AAPw8AOA7vQAAMrsAgFW8AIB4vAAAUrsAALc9ACAOPQAA0zsAAHK7AIBuPAAAuDwAwLi8AKA7vQDgHT0AYBW9AIDQPABA6TwAwLs8AAD2OwDAzDwAAGQ8AKArvQDwuj0AwP28ABCSvQAAD7wAgI88AEDAvABwwT0AcI69AAC2vAAALb0AIG+9ADD5vQBAybwAkL49ACAuPQBgKz0AwM68AMDmPACAaDwAgGK8AACbOwAgiD0AQKQ8AACQuQDgCb0AAAK8AICRPAAAQDsAsLM9AMB8PQCgST0AAKc7APCIvQAAkT0AwDU9AAAjPACQzD0AAIC6AIC5vABAmbwAAG+9AACmuwAA4DkAgEe8AADRuwDA0TwAcJE9AMBGPQDAKT0AQI08AAAevACga70AwEa9AEDxPABww70AoAG9AEAFvQCApTwAgI09AABCPQAAyLwAYB89AHCSPQCAFLwAwPs8AICZPAAAwjwAgCu8AAB+vQBA27wAAJq7AABlvAAAkrsAQNw8AICzPABgDD0AgMO8AHCGPQCAObwAAAA9AAADPQAgNb0AAC68AMDJPACAfL0AANo8AADWOwAAyrwAAG29AEDGPABACT0AENq9ACAMvQDg670AYCw9AECIvABAZT0AoIc9AIAKvQCQrT0AIC+9AACJuwAAELwAgMu8AGAyPQAAjb0AUKI9AIBcPAAAgTwA4AA9AAAevQAA+TsAAIE7AMDEvAAApbwAkJy9ACBdPQCger0AAFC7AACMPAAAJjwAgG+8AED1vACAZb0AoIc9AABfPACAKzwAQCc9AIA1PACAJrwAwME8AMBovQAAEDsAIAM9AABHvABgk70AgGE9AGAHvQBw3z0AQMG8AMDUPADgmL0A4Fy9ABCJvQCAKLwA4CE9AID8vAAAzDw=","chunkHash":"62d5bfbfefa8b0118ba59811cbea6c2959829712bb2f07d6864cf1208369452c"},{"text":"File: `scripts/temp/clean_unclassified_data.py`\n```python\n#...\ndef clean_unclassified_data(input_csv, output_csv=None):\n    #...\n    # Create backup of original file if we're overwriting\n    if output_csv == input_csv:\n        backup_file = input_csv + '.backup'\n        print(f\"Creating backup of original file: {backup_file}\")\n        df.to_csv(backup_file, index=False)\n    \n    # Save cleaned data\n    print(f\"Saving cleaned data to: {output_csv}\")\n    df_cleaned.to_csv(output_csv, index=False)\n    print(\"Done!\")\n#...\n```","range":{"startLineNumber":31,"startColumn":0,"endLineNumber":40,"endColumn":18},"embedding":"AICqPAAAy7sAwLE8AAC4vQAAgr0AABU9AACPuwCA0DwAABA8AAAYPADAXz0AAOQ6AIAivAAAnjwAAL+7ALCAPQAAzDsA4EA9AEBJvQAgRj0AoCI9AACGuwAAqzwAQMS8AOAtPQAA/rsAQMO8AIAaPQAA/jsA4DW9AIAZvABgMb0A4A69AABcOwAA+zwAgAC9AEArPQAAJLwA4EU9AIAvvQBgez0AwHe9AMCyPQCAxbwAUNE9AADguQAAAzwAAEA5AIBtvACAXr0AgD28AIACvAAA8DwAgNm8AIAHvACA1zwAYIC9AEDrPACAKTwAwGK9AEAyPQAA7LoAoA49AEBmPQAgdL0AQFy9AABfPABANr0AAMc8AID4vADA2jwAgB08AIBavAAA87wAgAS8AJCvvQAA7TwAAIQ8AICevACA7bwAgJu8ACChPQBgGj0AoBw9AABWOwAAGr0AkJi9AMBWvQAARDsAQMq8AGCOvQBQuD0A4D29AIBVPAAAbzwAANA8AICNvABACb0AQOk8AADZPAAA4zwAgG88AABcuwAAQTwAYB09AOB/vQBAXr0AQIa9AIBpvAAgQD0AAHi6AECgvACAOz0AACC8AAD7uwAgY70AgFW9AABIOwAACL0AABu8AADLuwAgA70AYAW9AJCdvQBgJ70AALo7AICZPABgTb0AwEU9AIC4vAAghT0AYAm9AIDtPQDgQb0AYAe9AAB6OwAAirsAAN87AGAQvQAQzT0AgIw9AMCrPACAVb0AAK08ALCGvQAABTwAoF29AMANPQBAubwAgGU8AMDDPADgVD0AgKG8AAAAOwCAM7wAQNy8AMBqPQCgDD0AoH89ALCxvQCART0AABw7AKAfvQBgt70AgBy8AAAvvABAGj0AQIa9ADCOvQAAtDsAgOq8AMCQPAAgjz0AgBu8AMCwvACAQzwAkKK9AJCWPQDAUb0AwAO9AGAdvQCQob0AQDm9AABFvADgbr0AIIW9AFCSPQCwvT0AICW9AIAlPADwzj0AgEm9AIDdvAAANT0AAEA7AACuOwDAxTwA0La9AACwuQAgND0AoGe9AABWPADger0A4Cs9AABKOwAAUrsAQAe9AAA/PABwz70AoES9AAAAOgCAVbwAwOm9AKAiPQCABD0AAIC9AAC8OwAQlz0AALA8AAB2uwAgYT0AAJs7AAC+uwAAdDwAYD49AIDYvAAAtjsAgD+8AADCPACAFb0AgP68AABpPADA0bwAAIk7AIBcPACAyLwAgHc8AKCZvQAgID0AoG09AOAzvQAAKrsAQP+8AEDYvACATzwAICg9AECOPABAer0AQN48AICTPQAA+7sAwIQ8AEDiPADQ7r0AQBa9AFCbvQDArbwAIDW9AIAhvAAAizwAIJO9AMC9vABQrb0AQIk8ALCDPQDAkD0AYBo9AAA0vACAlLwAYA29AIALPACAtjwAwKc9AEDdvABANr0AAMg8AOBdPQDQnz0AoAY9AGBOvQBAjL0AAE28AGARPQBAWD0AoBg9AACDPACQn70AwDI9AABGvABgH70AAJC8AADyOwCAijwAAAK8AKA4vQCAJrwAQAA9AADsOgBA7bwAgNu9AID9PAAAMDwAAKS6AICKPQCgKb0AIDC9AIAXvACAhbwAwGk9AIBaPQDghb0AAKU7ALCzPQAAKrsAABE8AECZvADgN70AAFY8AIDgPACAhrwAQIO8AKCwvQDwlj0AgDQ8AAB1vQDgez0A8Mq9AIBvPQDAej0AgHA8AKBevQBgQL0AQJY8AABRPQDAUD0AAGS7AAAzvAAAWD0AQJG8AIAAPAAgO70AAGe8AMB3vQAAILsAABy8AIDAvACAELwAEN09AIDrPAAAUrsAAH47AICRPACAp7wAwJi8APCCvQDgLz0A4C69AIBnPAAApzsA4BY9AIClPAAA+jwAwMo8AOArvQDgIz0AAIK7AJC/vQBgDb0AgMs8AIAaPACgrj0AgKy9ACAIvQCAMr0A0JS9AHDUvQCAG7wAwJ49AABkPADAgj0AAEa8ACAuPQAAxDsAAK+7AID4PADA8D0AQPo8ACA1PQBAuLwAQAm9AHCAPQBA6rwAsKE9AKCePQCAGDwAgB48AGBgvQAQlD0AQCY9AICOPABgpz0AAOu7AMBXvQBgAr0AgLq8AKAlPQAA8jsAAL88AAB2OwCAgzwAkJ09AID4PACgGD0AgCA8AACnvAAwkL0AoFi9AADUugAwv70AwLa8AMDYvADA9jwA4CU9AGAYPQAAy7wAgEc9AGAePQAApbwAwFM9AACMOwCAZjwAQMq8AFCZvQAASjsAgPe8AIBHvAAAwLgAAEo7AFCAPQDghD0AQOy8ABCOPQAAbLwAIEo9AMCgvACQi70AgIq8AABoOwBgiL0AAJU7AIBCPAAgD70A8Ka9AIAXvABAqDwAkMq9AEDPvAAQv70AgH49AIA7PABgJj0AwIc9AIDnvACAvD0AAMk7AMDgvAAASzwAAEy7AAByPACAb70A0KE9AAB0uwAArzsA4BE9AMAsvQBAwbwAAAy7AIANvQAgKb0AwEe9AEAiPQDAnr0AADC8AEBuPQAAdDsAANk8AMAlvQBgUb0AkJ09AAA4OwAAfDwAwBg9AAAuPACAOLwAACa7AJCJvQDAkjwAgG88AMC4vACgHr0AQJM9AAB1PABAsz0AAHC6AABiPQBgob0A4Aq9AFCZvQAA6bsAAHQ7AABgvAAASzw=","chunkHash":"4381494c83851f11311b24694176ef2a8babbfc12dde57e059f674ed302b8a86"},{"text":"File: `scripts/temp/clean_unclassified_data.py`\n```python\nimport pandas as pd\nimport os\n\ndef clean_unclassified_data(input_csv, output_csv=None):\n    #...\nif __name__ == \"__main__\":\n    # Define input/output paths\n    input_csv = os.path.join('data', 'chromatin_classes_and_samples2.csv')\n    \n    # Clean the data (will create backup and modify original file)\n    clean_unclassified_data(input_csv) \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":48,"endColumn":0},"embedding":"AACZPAAAZbwAQEo9AKCjvQBAJL0AoBk9AADEugAAkDoAQPQ8AABNPACgTz0AgES8AACTOwCAYzwAACc8AMA6PQAAnjwAwBQ9AACEvABQtz0AQK48AACwOQBAiDwAAAW9AEBnPQCAcrwAAAO9AOAEPQAgHT0AALC8AAAaPABA+rwAQAW9AIBuPAAAFLwAIBu9AACROwDAsDwAwBI9AAC/vACwkT0AoGm9AMC0PQAAsTsAcKs9AAD9vACAbrwAAN27AABJPABge70AAMK7AAA2PADAyDwAoAu9AIDqvAAA6zwAAGC9AEBoPQAAlbsAACe9AGAwPQDA0rwAQD89AEBbPQDgf70AoBC9AAAnvACggb0AwAE9AOApvQAgUz0AAAk8AEAUvQAAELsAACw7ANC5vQAAsTsAAPM7AMAHvQCAYTwAgKq8AOCCPQDAXj0AQCk9AAC6OwCAt7wA8Ie9AAA0vQAAYLsAQM68AKCMvQCQiD0AwFK9AAD+PAAAJTwAQGw9AKAqvQBQiL0A4AU9AGBHPQDA+zwAAOi7AMCIvACwnT0AAIs8AMCcvQBAU70AwKm9AKAQvQAgLD0AID89AECrvAAAfDwAAGA5AACmuwBgfb0AgAS9AAC1PACAxLwAAJk7AICGvACgHr0AADS7AEBBvQDAcr0AAMS6AACyuwDA97wAAKE7AADyvADAeD0AQJ28ABDgPQBAF70AwNK8AMD1PAAAYrsAADi6AKAVvQAQAT4AQLM9AMDZPABgYr0AQJ88AACMvQDA2rwAQKu8AKADPQAgjL0AYEc9AEC6PADAaj0AAFi8AACAugBgAb0AADS7AGCZPQAggT0AQPs8AFCevQDgQD0AgKK8AABUOwDgfr0AAI87AAAIvABALj0A4CK9AMA+vQAAbDwAQAW9ACAXPQBAfT0AAKQ6AADbvACAsDwAIMG9AADBPQAwrb0AAKy8AMATvQAQhr0AgCS8AECuvABAgb0AgF69ANCiPQBwlD0AYE69AKAHPQDg6D0AIAy9AEDkvAAAfz0AgCO8AMCuPAAACD0AkJK9AIDGvADA/TwA4G+9AIChPACga70AAEU8AACouwDAoLwAYA29AMCEvACgqL0AQB29AABoPACA6bwAcN29AABIPQDA5zwAUJ69AAD6OwCAdT0AoFY9AACGuwCwkj0AALG8AAAougCAqDwAALI8AIADvQCASbwAAK07AACQOwCA0bwAQN28AIBJvABA/bwAACY8AIC5PAAAeLoAgA08AAA/vQBACT0AYAg9ACBXvQAAHDsAAPK8AAAVvAAA6DsAYB49AIBPPADgp70AAGM9AKBQPQAAIjwAwIs8AADKPADg/r0AkIC9AOB4vQCA17wAgHK9AADwuwDA0TwAMJO9AIB5vAAATL0AgBY8AKBUPQDA7TwAALc8AADgOwBAqLwAAHa9AACgOgBAsTwAkJ49AAC0ugCAbb0AQII9AAB+PACAgD0AgHQ8AKBMvQDAjL0AAHY8AEAiPQDAFD0AgG08AKBPPQBA0bwAgJI8AKBevQBAJ70AAE+8AMDvvAAAhzsAACW8ACBBvQAA77sAQNw8AIDEPADAhbwAENa9AMBBPQAArDwAAOG7AIB6PACAa70AgFu9AAAcvAAAu7wAgEQ9AOBaPQAgfr0AADg7AHDdPQDAlrwAAAU8AICpvACA17wAAIk8AOBfPQAAqLsAwKW8ALCQvQBgpz0AALc8AAA8vQCgWT0AUJ69AOBUPQCQ1j0AQKK8ACBXvQCAe70AwAM9AIAcPQDwoD0AQIy8AACOvAAApz0AoBC9AIC2PACgpL0AwO+8AIB+vQAAMLsAABi7AECkvAAABrsAoOU9ACAqPQAA8LsAAEA7AOAGPQCAZ7wAALu7AKAevQAAlDwAANG8AMC/vAAABLwA4CQ9AEA3PQBgDz0AQNQ8AEAvvQAgNT0AAKa8ADC8vQAAML0AgIw8AABaOwAwnT0AgPO9AABoPAAgG70AcNG9AKCkvQCAQrwA0Ig9AABJPACgMT0AAAc8AACSPAAAajsAALy6AMAoPQAwoj0AAJw9AEDUPAAA1LsAgKC8AJCDPQAAYLsAELg9ABDJPQAACbwAAFi6AMBnvQAgjT0AAAs9AIA7PABQkz0AAHS8AAA2vADAlrwAIA+9AIAYPABAirwAgOs8AAB4PAAA0LsAgJc9AAAWuwCALj0AAPY8AAAuvADgmb0AAOG8AAB4uwCwib0AAKC8AAAgugAAijsAQOc8ACAgPQAgAb0AQCI9AOBNPQCALbwAAJA8AMCmPAAAyzsAAMw7AMBVvQBABL0AACm9AAAtvAAAmbwAAD88AKB2PQBA0DwAgJK8ALCfPQAAtbwAQAI9AIAUvQAAjL0AAD67AABYuwCAbb0AgDs8ACAHPQDgIL0AYGu9AMAAPQCwoD0AwKi9ACBcvQCwtr0AYBs9AMCgPADAFz0A0J49AAAYvQDAUz0AQI08AACzvAAA+DoAgEy8AKAfPQAQnr0AMMY9AMDwPACApDwAoB89AOAivQCAzrwAAOU7AIDevACgcb0AYBS9AKBMPQCggr0AgDQ8AICBPQDAXz0AAMI8AAB1vQAACr0AAJk9AIBFvABA1jwAIFg9AMCLPACAIrwAAMc7AKADvQAA+DoAIGQ9AKAfvQDAzbwAkJI9AECbPABAcD0AABA8AEB2PQAAf70AgD+9AACavQAArzsAAPW7AACFuwCA8jw=","chunkHash":"ed8fa56090d3a9591e002d30c341e0f6abcbfaf977ef32381e1d0d0856ce1e72"}]},"file:///teamspace/studios/this_studio/scripts/temp/pad_sample_ids.py":{"hash":"8071b10ade6b689f54dda678b1379b20605a7c9d070f5c0d169cf93a6ea10530","entries":[{"text":"File: `scripts/temp/pad_sample_ids.py`\n```python\n#...\ndef pad_sample_ids(input_csv, output_csv):\n    \"\"\"\n    Create a new CSV file with zero-padded sample IDs (4 digits).\n    \n    Args:\n        input_csv (str): Path to input CSV file\n        output_csv (str): Path to output CSV file\n    \"\"\"\n    # Read the CSV file\n    print(f\"Reading CSV file: {input_csv}\")\n    df = pd.read_csv(input_csv)\n    \n    # Print initial info\n    print(f\"Original sample IDs (first 5): {df['sample_id'].head().tolist()}\")\n    \n    # Convert sample IDs to 4-digit zero-padded strings\n    df['sample_id'] = df['sample_id'].apply(lambda x: f\"{int(x):04d}\")\n    \n    # Print converted info\n    print(f\"Converted sample IDs (first 5): {df['sample_id'].head().tolist()}\")\n    \n    # Save to new file\n    print(f\"Saving padded sample IDs to: {output_csv}\")\n    df.to_csv(output_csv, index=False)\n    print(\"Done!\")\n    #...\n```","range":{"startLineNumber":4,"startColumn":0,"endLineNumber":28,"endColumn":0},"embedding":"AOA8PQDQkL0AgHo8AABuuwDACr0AQKO9AMCZvAAAorsAAA09AMBMPQAASLoAAA47AOAwPQAQk70AgBo9AKCtPQAAQjwAQEQ9AMAfvQDQhD0AgOK8AECsvACAJD0AgKi8AGB2PQAAqLsAwEa9AAC3uwCADbwAMJK9AADivACA1rwAAES9AAB0OwAAaLwAAJe7AICOPACAfTwAAJO8AGAkvQAAzzwA4EW9ALAbPgAA0DoAwJk9AJCDPQAwmz0AAEy7AIAZPQCAZLwAgNI8ANCEPQDAiDwAoEu9AIDSvADANj0AAIi8AACVPABAMD0AIAW9AABkPAAQhb0A8LQ9AEDsPACAZT0AAH09AAAAAAAgD70AcIc9AICLPAAAljsAAJ67AMCGvAAA7rsAgCM8AMDmPAAAr70AQEG9AIB3PACAxbwAEJI9AIBHPQAA2DwAAHC6AADovAAAGjwAQGu9AADpuwAAFjwAAHg8AACduwAAvTwAEJC9AID5vADAl7wAgDm8AAAvvQCAI70AwEE9AIBcPQAA3TwAgO88AOAQPQAgQz0AAGg6AAA/PAAAODwAQGW9AABAuQAABjwAwLY8AKAUvQCA1TwA4Ey9AEBZPQCAIb0AUKa9AIApvQBASr0AgIy9AGgTvgDANb0AAO67AGBZvQDAKr0AAJm7AECAvADgi70AABw9AKAMvQBAGj0AAJC7AIByPQAA1DsAADI8AECuvABA1rwAAJE8AAAwOwAAxzsAQOw8AOAxPQAAArwAAMI8AABfPABA5jwAwJ+9AMA/PQDA+bwA4Co9AADsugDAujwAQM28AEDuvADAqzwAAEs8AACTPAAAuDwAIFg9AKAvvQDAyDwAwMS8AMDyPAAAKrsA4Fy9AIDOvACARTwAwIy9AKC8vQBAir0AAGC6AICMvQCAlDwAAOu8AKAcvQAArrsA4BW9AACBPQAgbb0AACi9AABfvABgNr0AwG+9AIBRPADABj0AYMS9AOBsPQCAfL0AAG47AAANPABAIz0AwKy8AMDGvADA3rwAIC29AIBWvQBARj0AIIG9AAAWPACAkTwAwIi9AKB0PQDwvr0AQKw8AHCOPQAgTr0AIGS9ACB2vQAA7bsAgMg8AABQvAAAQ70AYAg9AIAnPQAAAjsAACq8AGAVPQAgUD0AAAQ7ACAmvQAAWjsAgJi8AICGvACAKD0AQAQ9AIDIvAAgHr0AgE89AAC6OwAgQj0AwLm8AAC3uwAAFrsAAOG8AADmOwBgAz0AALq8AAAOvQAANLsAANC8AAD4vADApDwAAPI8AABEuwCgaL0AAIg8AAAwOwBAgr0AIEM9AAAaPQAA9LoAUL09AMBvPQDguL0AgFy8AAB2uwCAp7wAYAQ9AKAVvQAAgL0AgLg8AKAQvQDYGb4AgFw8AICmPADAqTwAAKI7AIBOPQAAoDoAAJO8AICxPABAGT0AQEY9AECUvQCgcL0AAEi8AMDUvACAPj0AAGa8ANCnvQDwmb0AsJ+9AICLPADgpD0AAHM9AABGOwCAC70AoEg9AACOuwCgxb0AQKu8AIDjPABgNT0AwLS8AICzvABAnLwAAKQ8AIAQPAAACb0AEIa9AKAXPQCAFLwAwAs9AAAWPQCQm70AAL27ADCzvQDgFr0AwNU8ACAcvQDABb0AULY9AAD+PAAA2TsAAEk9AEAzvQAAtLwAgA48AEDQPADALr0AsMq9AOBtvQAwnj0AwBc9AACtvAAAzDwAYCO9AIAxPAAgAD4AgAO8AIAVvQAAfLsAQCC9AIAKPADwh70AQFK9AMBJPQAAgDoAIF29AEAlPQAAAr0AoCQ9AMDwvAAA77wAQB+9AICyvACgKj0AMNQ9AOBnPQAAhLoAgAe9AKBNPQDgHD0AAMA6AADQuwBAED0AgFO8AOBFvQCgZ70AANm8AEAHvQBgZD0AQMM8AAAiuwAAWj0AgEu9AAC6vABwvr0AALy8AEDKPAAAcDsAwAs9AAAZvQCAyrwAYD29AHC2vQBACT0AICU9AOBDPQBARD0AoGq9AIBZPQAAmLoA4GY9AKBCPQBw+j0AwMY8AGB4PQAA+LsAABU8AEAbvQDA5LwA4CA9AABmPQCA6bwA4CQ9AGBFPQAADjsAQLo8AADGuwAAiLsAgD88AAB1PACAN7wAwLi8AACnOwBAnTwAcIQ9ACAkPQDAkTwAQBY9ACAMPQAAnbsAIGo9AAAeOwAA+DoA8LK9AECqPACA97wAgBU9AMA+vQAAEDwAAFg7AECPvABAQL0AQKs8AIChvAAgSL0AQPA8AABGPQDAEj0AgCA8AEDivACAEb0A8JK9AMARvQDAkbwAgHw9AJD6PQAAersAQLu8AOBZPQAA9DsA4G49AIAWvAAwyb0A4BK9AAAjvAAAlbwAAMS7AEAzPQAggb0AQIK9AAB9PAAAxjwAAEe8AIBovQBA/r0AgHO8AOA0vQDAbT0AgCo9AGCUPQDQkz0AgFo8AIBpPQDgcr0AgEc8AIDDPADgCb0AALg8AEDCvAAAN7wAIHc9AMC6vQBA67wAAIu8AADKvACwh70AkKi9AIC7PACALb0AADA8AJDXPQDAOT0AIK49AEDSvABArbwAQOw8AMCkvQBQqL0AYDs9AIDdPACAALwAwLg8AECpvAAgTD0AoFw9AEDHvAAApbsAgH89AIBuPACAFj0A4Gw9AECqPABwk70AAIi8AIAIPAAAqjsAABY7AIA8vQAArrs=","chunkHash":"9b01942fdf160f917e7aeb8ed8f77cd223de1f1bd11d61285074c0bbce38233d"},{"text":"File: `scripts/temp/pad_sample_ids.py`\n```python\n#...\ndef pad_sample_ids(input_csv, output_csv):\n    #...\n    # Print unique sample IDs for verification\n    unique_ids = sorted(df['sample_id'].unique())\n    print(f\"\\nTotal unique sample IDs: {len(unique_ids)}\")\n    print(\"First 10 unique sample IDs:\", unique_ids[:10])\n    \n    return unique_ids  # Return the list of unique IDs for verification\n#...\n```","range":{"startLineNumber":29,"startColumn":0,"endLineNumber":34,"endColumn":71},"embedding":"ACB6PQDgcr0AYAE9AIAevAAAgLkAYEC9AEASvQCAaLwAgOc8AAAIOwAA+zsAwMw8AIDiPABgdr0AACq7AOCWPQCAAbwAAEY9AKCJvQAQ2D0AQKQ8AACOvADQgz0AALk8ABDLPQAAjrsAoEa9AMDkvABAujwA4Fq9AACqvADA4rwAADS9AIAAPQDwiL0AAPI7AADpPACAZTwAgFW8AAAQvQCAHj0AAOA7AFDmPQAARLwAYCU9AKArPQAAhj0AQHG9AAAfPQAAbrwAwA09AMB9PQAAJzwAgIO8AEDOvABgfD0AoFC9AAA5PQDAzjwAwIS9AACeOwCA0rwAoJ89AGBDPQBAbz0AIA89AAAOuwDAm7wAwGI9AIBZPAAA1jsAABg7AAC8uwAAW7wAIEg9AAA+uwAAbb0AkJq9AIAEvAAAvrwAwIo9AICOPQBAbj0AABi9AAAQOgBAr7wAkJS9AAA4OgCApDwAgD88AAC6OwBA0TwAQCK9AMC1PACAfrwAALU8AAALvQCgGL0AAPs7ALDPPQCAMj0AAFQ8AADxOwBAkj0AgC08AIAUPAAAfDwAgIW9AEA2vQDAvTwAgAq8ACAcvQAAGD0AwM+8APCZPQBggb0AMJ+9AMDTvACAU7wAQGS9ACDSvQDgNr0AgLy8AMBNvQBgtr0AAFU8AKAHvQCgI70AgCq8AIDyvAAANjwAQIC8AGBUPQDAvjwAAEi7AKAuvQAAF7wAgOA8AMDvPACgVz0AgG08AIB+PADA+bwAgDM9AADEPADgDT0AkOG9AACROwAAAjsAgDI9AOA3PQBAoDwAoGm9AMA+vQAAHjwAAPy6AADnOwAABjwAwG89AEBHvQAAWjwAoAS9AADwPABA9TwAAES9AOAgvQCAwDwAEJq9ACCpvQAAmLoAQCq9AMDnvAAA8TsAAJS7AMAUvQDA1rwAACK9ACDAPQCAEr0A4KC9AOAKvQBA37wAwIe8AABjPQCA+jwAsMu9ACCTPQBQmb0AACi6AADIOgAgtz0AAM27AABGvABAtDwAgOO8ALCdvQCgKj0AwIW9AMBUvQAAOjwAAIq9AGB4PQAwtb0AgIU9AEAHPQAwkb0AwBy9ACAsvQDgEr0AAA68AIALPADATL0AQJm8AMDPPAAAvzwAAHQ8AABmOwAAhj0AoDY9AKAvvQAAursAAFw7AIAevABA4jwAANk8AADauwCATTwAYEM9AIAoPAAAbrwAAOe8AIAWvABAMT0A4F29AECjPABAgDwAQOi8ALCRvQAATjwAQPq8AMCWvACAojwAAFy7AEC4vAAA07wAAAE8AAAuOwCA6rwAgNQ8AJCmPQCAu7wAILc9AABAPQBwwr0AgC28AIABPACAibwAAJk8AABEvADgfr0AgBy9AIBEPABYEr4AgBE9AACVOwDACD0AIF89AGAUPQAAfbwAQDW9AADLvAAgKT0AACg9AIBnvQDAj70AgFu8AMCYvADANz0AACi7AOCsvQBger0A4Ki9AKAMPQBQjT0AoG09AABAOQDALr0AALU8ANCHvQDgJb0AAMG8AACjOwDA9TwAQNS8AED/vADAC70AQMA8AIAHPQAAHrsAIKC9AADAOwAAWrsAIAc9AOBmPQDAu70AwCy9ABCDvQCgKr0AAPQ8AMAIvQBA6LwAoD09AIBsPQCAGbwAgFE8AGBcvQBA9rwAgBc9ACA+PQCA4bwAwMe9ACBOvQDwrz0AAGs9AICfvAAAPzwAgIa9AMCKvADw1D0AAFm8AIC9vAAAG70AwKS8ACAZPQDgaL0AgE69AACcOwAAGDoAsIG9AIBOPQCAsbwAIBM9AIDfvAAgJb0AAF28ACAPvQCAujwA4OY9AIBVPQCAv7wAAEA5AHCaPQAA7LsAgDO8AADcvAAAtLsAADi6AKBdvQDgFr0AwJq8AIBZvAAAPT0AABY9AIC9PAAA+DwAwI69AGCCvQDwor0AQNi8ACBFPQCA+jwAwKY8AMBSvQAAhLsAgI+8AGAtvQAAELsA8Ks9AICnPABgij0AAIC8ACAIPQCAdjwAALE7ANCDPQBA5D0AQPM8AED9PACA37wAAMo8AMCbvACAkr0AQH49ACAXPQDALb0AwL88AEBCPQAA8TwAQMw8AEDwPAAATDsAAF+8AAASuwAAoLkAAJG7AKBlPQCAdTwAgIs8AKArPQAADrsAQOM8ACBbPQAAvbwAQGg9AADZPADA3LwAYKG9AIBAPADAmbwAAOs7AEC8vAAAJzwAgIy8AMC8PABAML0AgPA8AIASvABwg70AAHg6AMDnPAAAczwAgHA8AAAFvQAA1LwAEMG9AECcvACAyDwAAFA9ADDLPQAABjwAgHO8AKBwPQAASDwA4BM9ACCLvQBgg70AwKq8AIAOvAAAkDoAQJk8AICKPAAQqL0AAKq9AACYugBgMj0AQAe9ACB4vQDwiL0AgJq8AAByuwAA4jwAwOs8AMCCPQCwmj0AwLs8AKAmPQAA2LwAQL88AGCbPQBQhL0AALs7AMAovQAA9DoAAHY9AKBJvQCAKLwAgEa8AMAzvQCwlb0AQEq9AIAlPQAAFL0AgKi8AMDJPQDAbT0AwP09AACMOgAA+7wAQCU9AMB4vQBQtL0AwLA8AIBTPQCAHbwAAFI8AABtvADwpz0AQB49AEDMPADAl7wAgHM9AIA5PQDA3TwAUJ09ACAaPQAAJL0AAJu8AADLvAAA6jwAAN48AOAvvQDgNT0=","chunkHash":"c01fbf01c6bf85dea1a809105d299044ad3ac18be633f847bd3440f66af15e21"},{"text":"File: `scripts/temp/pad_sample_ids.py`\n```python\nimport pandas as pd\nimport os\n\ndef pad_sample_ids(input_csv, output_csv):\n    #...\nif __name__ == \"__main__\":\n    # Define paths\n    input_csv = os.path.join('data', 'chromatin_classes_and_samples2.csv')\n    output_csv = os.path.join('data', 'chromatin_classes_and_samples2_padded.csv')\n    \n    # Create new CSV with padded sample IDs\n    unique_ids = pad_sample_ids(input_csv, output_csv) \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":43,"endColumn":0},"embedding":"ADCFPQDAc70AoGQ9AACcvAAAgTsAwAS9AADUOgDAE70AABo8AABIOwCAWLwAgCc8AEB0PQDgfr0AAHY7AOB/PQDAoDwA4BQ9AGBavQDg3D0AAAS7AAAIuwCAsjwAgBE8AEB4PQBA0bwAwIC9AICnvABAZj0AoB29AAAVPAAAm7wAgD69AEAtPQAwpL0AgBm8AACtOwCAtTwAAII7AECCvAAQhz0AAPi8AIgDPgBA4TwAQAs9AMDQPADAvTwAYBS9AADjPACAO7wAIB49AABKPQAA0rsAACm9AMDKvACATT0AwPe8AOBzPQAASLwAwI69AACAuQAAqL0AwLI9AMAvPQCgWz0AQPw8AAAyvACAHr0AYD09AABovADgEj0AABa8AGAKvQAAFTwAAGY8AABgugCwib0AgGW8AMDHPAAAJ7wA4Gw9AGCOPQDwlj0AACK8AABbvAAAKrwAIIK9AACZOwDAxTwAAEY7AADsuwAAeDwAIJq9AECJPAAAr7sAYG09AOBovQDAeL0AoB89AKDEPQAAMD0AAHq8AACjPABwoz0AACw7AIDXvAAAzTsAcLC9ACBrvQAAIz0AoF89AABKvQAAejsAQN68AOBuPQBAmb0AYFK9AIACPACAMbwAAIK9AFDVvQBgJL0AAHw7AMAuvQDgmb0AAB88AMBovQCAD70AABm8AABRvQCACj0AQLy8AABzPQAAnTsAgDS8AEDqvACgEL0AYCE9AAB6OwBAeD0AgC89AAD0PADAkbwA4Bc9AEAPvQDAzTwAoG+9AMC9PACAUb0AMKA9AMDYPAAANz0AYD69AAAAvQAAeLsAAAQ7AICqPAAgMj0AgAQ9ACATvQCAgjwAwAq9ACARPQDAvjwAAIq8AACNvADAnDwAwFS9AOCOvQCAFr0AAM+8AKAKvQCADTwAAJQ6ACAovQBAtLwAAFK9AKDNPQDAkb0AYBC9AEBCvQAAsLwAAO68AKAuPQCAWDwAAMG9ACAmPQDAR70AgBs8AICSPACQvT0AAKy7AABUuwDAxjwAQFi9AAA3vQCAbj0AAKq9AAAuvQAA0LsAYGC9ALCfPQDAfL0AgMA8AAAgOgAQhr0A4Hy9AABAvQDA2LwAgCE8AECPPACAjr0AAG67AEA6PQCAcDwAgKG8AAClOwDgfD0A4B89AGAHvQCAfjwAAN+8AECmvAAA8jwAgG88AAAFvQCgBr0AAEw9AIA7vAAA+DsAwOK8AIBXvAAAqDoAgAK9AEDnPADgKj0AALu8AECOvQAAMjsAAF29AMCSvADA6TwAAK07AAC5OwAADb0AgKY8AIA9PACwl70AADg9AEBUPQAAUrsAEMw9ACA5PQCQvb0A4D29AMCnPACAbLwAgHo8AID1vADggr0AQN+8AAAqOwAw1r0AABA9AMCCPAAA8LsA4Eo9AGAYPQAAyTsAIJ29AABwugBAAT0AAEA9AKAyvQCwk70AALw8ACAhvQBAKD0AADu8AOBmvQCwhr0AwFq9ACAKPQDgaT0AQKU8AACKPACA3bwAgK08AKC3vQBwn70AQDG9AIBwvADgDT0A4BW9AGAgvQCAGLwAQJ48AMD0PAAAGTwA4L+9AMC0PAAASDoAgNM8AMAOPQBw1r0AADu9ADCJvQDA8rwAwL48AIAOvABgcb0AsIY9AMCpPQCABbwAAIS6AOA9vQAAADwAwLo8AKBsPQBAv7wAEMi9AOBRvQBwuj0AoAc9ACADvQAA6jwAgAW9AABKOwBQFT4AYAe9AKAovQBggb0AALM7AMDcPAAAEDsAAM+8AIAHPABAnDwAwG29AEDvPADAQL0AAHA6AKBBvQBA17wAAP87AMBQvQDA1jwAAMI9AMBgPQAAGLsAAK+7ACCnPQAANLwAAPE7AIAsvAAAhTsAAO47AABsvQBAt7wAALm7AACcuwDAMj0AgFE8AABGPABgET0A4Gu9AMCLvQDwk70AwJC8AMCpPAAAZDsAgKa8AAC6vADA17wAYJG9AOAMvQAAmDsAwH09AACiOwAgRT0AgOS8ACA5PQDAgjwAAAA9AAAxPQAgqT0A4J09AAAZPQAA3LwAwIs8AACwuwCAQLwAsIA9ACCOPQAAfb0AQK48ACBIPQCAyDwAgO48AIBPPAAAdDwAAJg6AAC4PAAAELwAQJG8AECrPAAAjTwAYC49AED1PADA37wA4C09AACBuwAAgLgAcKA9AKAOPQCgGL0AMK+9AIBhPADAyrwAAMa7AADuuwCAwLwAgJG8AEDPPABgP70AYEc9AADvuwDghL0AgD+8AMBNPQAAyzwAACU9AMADvQDAPL0AIJC9AAA6vACABTwA0JU9AODdPQDAz7wAAJG8AAAsPQCAIbwAQI09AIB0vQAAs70AAF68AAC9vABAN70AgFQ8ACBIPQAwpb0AgHm9AABgPQDQuz0AgGa8ANC5vQBgg70AQMS8AAALvADAvDwAoGM9AEAFPQCA6TwAgPQ8AMAxPQCgFL0AgGA8AKBsPQCwlb0AIDQ9AABVPAAAYTwAYFU9AKBwvQAAA70AgCc8AOARvQDgwL0AgGq9AICOPQDAwrwA4Bc9AFDIPQCAdT0AQLQ9AECTvAAAd7wAwFc9AHCIvQAgdb0A4Bs9AOA1PQCALbwAgOY8AIDyvABARD0AQFc9AACBuwDAtLwAIC09AMBMPQAAtTsA4FE9AIAePQDA/bwAgOa8AECMvACA0jwAAIw6AEDxvABADj0=","chunkHash":"76204a9edd4bec795e2152d86be4fbed8869095995695ef71453a427335c8869"}]},"file:///teamspace/studios/this_studio/scripts/temp/pipeline.md":{"hash":"f7da2f62b553bd92c0ed044d8f3e9f227fa7cb09267671d4284d85a50a15acd7","entries":[{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 1. Data Organization and Processing\n\n### Dataset Structure\n- The data is organized in a hierarchical directory structure with each sample in its own folder (numbered from 0001 to 0500+)\n- Each sample directory contains:\n  - `raw/`: Directory containing raw 3D image slices (TIFF files)\n  - `mask/`: Directory containing corresponding mask slices\n\n  ...\n```","range":{"startLineNumber":7,"startColumn":0,"endLineNumber":13,"endColumn":0},"embedding":"AADUOgAAjDwAQM89AMAHvQAADLwAwCu9AIB4PADApDwAAMK9AEAGPQDA/TwAAJ+7AEC/PABgnb0AwK08AGB0PQAA3LsAACw9AAAgOQCQjz0AABc9AACNvQDgmT0AAEa7AADHvAAAG7wAgCu8AADnOwCgDD0AAM67ACCpvQCwi70AgOm8AIDdvACwz70AgEM8AMCOPADAnT0AwJG8AADcOwBgfD0AoN69AKAOvQBAvTwAYCA9AKAdvQCACj0AIKK9AADcPAAAeDwAgE88AAC6PAAArb0AABO8AACOOwAA+LoAwFW9AGAFvQAgOD0AwOi8AIDAPABgy70AgEG8AAARPAAgWD0AIAK9APC3vQAAOzwAwGs9AACAOgAAlTwAgIA8AIDyvACAM7wA4F49AIDDvAAAmL0AAAE8AMA1vQCAy70AgPg8AICVPADAWT0AwEC9AEDkvABAir0AIIq9AABzvADQhr0AANi7AGAzvQAgAz0AAIO8ADCcPQDAJj0AwIC8AOBkvQCAvbwAwNw8AABEPQCgEz0AgNc8AABwuwAAWDwAoLA9AMBAvQAATD0AIC89AMCVvAAAsLoA0IK9AKBDvQDwsT0AAAY9AADcOwBAKD0AQMM8AAD2PADA57wAYE69ACBnvQAAyrwAwCg9AIAdvQAAxDsAANA6AJDNPQCQkL0AIC69AAB9vAAAMDoAAOO7AIARPQBgyb0AAJI7AAAbvQBger0AgHM9AEA7vQBQmD0AgBM8AEDAvADQnj0AYHM9AECSPACgVj0AoLK9AGDOPQBAsLwAYAw9AHCWvQBAcz0AQIc8AIApvAAADDwAgIW8AMD6PADgSD0AQBe9AOBQvQAATrwAgJg8AMDNPACAD7wAgDq9ACB9PQBAJL0AABI8AADmvACANL0AgFy8AACIvQAAdDwAEJ69AAAcuwAA9DoAgJy9AABUPABA4LwAAOg6AID9vACgDT0AoEO9AAC0uwBwir0AAFq8AABRPAAAWT0AAEw7AEBePQAAQzwAgC08AIAovADAwDwAEIS9AAAIOgDAKz0AgIC8AMBoPQCACj0AAO07AIAkPACAC70AADC8AAAsvQCAI70AgMq9AGA3vQCADr0AIKS9AMCKPABAvTwAAIc8AMCcPQAAmLsAkKa9AGAkvQCA5DwAAIs9AIBYPABA1DwAAFg6AMDyPAAALj0AQKA8AIAyvQDADT0AQIy9AIA1PABApTwAQDc9AAAvPABQmL0AAPS7AKAbvQAAq7wA4C+9AGChvQBATz0AAG09AOATvQDAsDwAANU8AIChvABgLj0AAJ47AACYvABg8b0AALg6AABCPQAALD0AgPy8AABivQCgs70AANC8ACA9PQDAAr0AQJ08ACB7vQBwmT0AoCi9AADDPADgmL0AgFc9AAD9vACAbj0A4Ee9AECQPQDA7zwAgBi9AMCxPAAAiDoAQAI9AACJOwAAsrsAoFI9AMC1PAAA4zwAAHy7AACkOgCA8bwAADu8AKA9PQBAjDwAgHw8AACIPABAw7wAACU9AAB9PAAAaDsAgAI9AADAOQDAoTwAAGS8AAB6uwCAXzwAAIA6AACROwAAprwAYCe9AGAHPQAAt7wAAKU8AKCKPQCAHzwAgGo8AAAqvQDQs70AAAO8AABfPAAAdjsAAKa9AKAYPQAAALoAIAE9AABfPAAAS7wAAJY8AMCkPACAPjwAwC29AEA8vQBAvzwAAJW7AEBLvQDQpj0AgDi9AIAMvACAT7wAIIW9AAApPADAsLwAgFC8AICQvAAA+zsAQNq8ABCIPQBgpT0AwFq9AICYPAAA0L0AwMa9AFDGvQBAz7wAwG+9ACCNPQCA9rwAYEI9AMDMPAAA3rwAwHW9AAAgugDAQb0A4Fi9AAB2OwDACr0AALq8AOBnvQAgNL0AwPC8AAAhvQDAszwAwMM9AAAEOwAAljwAQMk8AABDvQCAyrwAQL+8AACtPAAA4jsAIHY9ACB3vQDAw7wA0OO9AACIugDAHD0AAO48AMALPQBApD0AAOw7AEDNPABgcL0AwI28AABUOwDQpD0AAKg6AMCLPADAiLwAAL48AGBIPQCAsrwAAAi6AKgKPgBAjzwAgFo8ACAMPQCAiz0AAJ48AMCPPAAAGjsAIBQ9AGA1vQAAEbwAAMQ8ANClPQDwtj0AgCI9AACDOwBwhr0AwOO8AMBuvQCAODwAQAS9AMAsvQBAubwAgNm8AABhPADwzb0AAB+8AAD8uwAA+zsAQHO9AIB1vADASr0AIKc9ANCBPQBAnLwAQNg8AADVuwDAgb0AAG67AAD2PAAAkjsAgDg8AFC+vQAAEzwAAAO8AACXuwDAgDwAACI7AEC1vABwib0AAKs7ACACvQAAFbwAADc8AADevACAsb0AgFq9AIDIPAAAp7wAAI28AIBZvADwgD0AgDC8AIBOPQCApbwAULA9AGB2vQBA8zwAAEA5AAD7uwBgoz0AAPy7AABoOwCAu7wAUIG9AIBCPABAUL0AgNo8AABuOwBAyTwAAHS8AECrvACgnr0AgEy8ACCKvQBgNL0AwJq8ACA4PQAA2TsAgJU8ABCdPQDgTj0AmBc+AABauwCAZzwA4K89AACGOwDAa70AgLw8AMASPQDAiLwAAMy7AADAOQDAtbwAANg6AMC6vABA7rwAIH89AGBQPQCgYT0AAFK7AKB9PQBgG70AgKC8AGAAPQAAqjsAkJM9AEAMvQBAlDw=","chunkHash":"4985f0791c76fabb68b9f5dfd1c957649328619865f7bfcb1be9d77a4b8a0e37"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 1. Data Organization and Processing\n...\n### Data Loading Process\n1. The pipeline uses a custom `NucleiDataset` class (in `dataloader/nuclei_dataloader.py`) that implements true lazy loading\n2. The dataset is initialized with:\n   - A root directory containing the sample folders\n   - Optional class CSV file specifying class labels for each sample\n   - Filtering options (by class ID, sample percentage, etc.)\n   - Target and crop size dimensions\n\n3. Sample Processing:\n   - The dataloader scans the directory structure to identify available samples\n   - For each valid sample, it identifies dimensions and possible crops\n   - It tracks metadata (sample ID, class, dimensions) without loading actual data yet\n   - Only the required volumes are loaded when accessed via `__getitem__`\n\n4. Data Cropping:\n   - 3D volumes are cropped into smaller patches of size `crop_size` (default 80x80x80)\n   - The cropping strategy divides each sample into non-overlapping patches\n   ...\n```","range":{"startLineNumber":14,"startColumn":0,"endLineNumber":30,"endColumn":0},"embedding":"AAARPACgDj0A0O89ACAWvQAAsrwAgAK9AADjPAAAOjsAEMa9AIBPPQCA/DwAgGK8AEDJvAAgU70AwKk8AEA/PQBAj7wAQI48AECXPAAApj0AgJo9AMCxvACQpD0AAHI8AAAAuwCAXL0AAFS7AAAUPQAA4DwAMJq9ADCHvQAAeb0AAK28AKAZvQCgwr0AwPO8AMCaPAAA7D0AgGC8AIB4vACgAD0AKAC+AADfvADA1TwAoDw9AEDvvAAAlTwAACG9AMDWPADA0jwAgHC8ACAQPQBgm70AAPC7AAAuPADAyDwAICy9AIDLvACgBj0AwJm9AECYPAAAzr0AgI+8AACyPAAAEjsAAOe8AMClvQAApjsAgMQ8AEC7PADACj0AgHG8AAD3vADgXL0A8I49AKAcvQCgX70AYAM9AIBFvQAAnL0AQOU8AABiOwBAFT0AIDO9AGAZvQDgvL0AAEy9AACyOwAAZ70AAAq7AEApvQAgQT0AAAy8ABC9PQAA4TwAgC88AAD7vAAgA70AMJo9ACB6PQCAJD0AcIM9AAA6uwAA3DoAoN09AHCmvQCAnDwAYEE9AAB2OwDAxzwAEIu9AMAXvQAwnT0AAOk8AAD1OwAAwLsAABS7AGAaPQAgQb0AID69AECyvQAA3LsAwNY8AIAYvQCA6TwAAGE8AHC8PQDgB70AAAC9AIB1PAAA8LkAgFA8AABaPQCA870AQF29AOBFvQBAzL0AQFk9AIAevAAQvj0AAB08AACgvABwrz0AwJI9AADlOwCgWD0AEJa9ACDoPQAAxLwAANQ8AOB+vQDgcD0AAHy8AIAvvQAAVzwAAMA4AECiPAAQjD0AAEo8ALCbvQBAgbwAAAY9AAD5PAAADLwAQG29AEA/PQAAMb0AAMO8AMBOvQCgAL0AgFs8AKA3vQAAK7wAQOW8AIAJvAAAkLoAAFe9AAAUPABAz7wAQMe8ACBWvQAAALkAQEK9AADVvADwo70AoAm9AADXOwCAVT0AgBy8AIC1PAAAYTwAgCA8AOA4vQAgDT0AAIG9AIAFPAAgYz0AAI68ANCEPQCgIz0AAHA7AEDzPADA97wAACa8AAB7PAAAJr0AYJW9AGBTvQAA/bwAcI69AIA+PAAAcDwAAPa7AECXPQDAlLwAoLi9AMDkvACAjD0A4A49AAB4OwAAAz0AAIE8AIDkPABgVj0AALs7ALCJvQAAWTwAwFa9AADaOwDA6DwAQAs9AECHPACAVb0AQLA8AICRvADgbr0AoDq9AGCWvQCgaj0AAHU9AIDVvABgNj0AAAy7AIDsvAAAhjwAANQ7AMA5vQBg4b0AQKM8AKBqPQDgBj0AoCO9AOA+vQAwvb0AYHK9AIA0PAAAq7wAQAM9ACB/vQDAsjwAgHa8AEAUPQBAkL0AoIg9AAAlPAAgBj0AAOO7AKAxPQAA7zwAgEy9AABYuwCAoLwAgNI8AEAjvQCA3rwAoCo9AAAwugDAIj0AAP47AABOvABAxbwAADO8AGBUPQBgGz0AQLM8AECBPABA4bwAwDk9AADePAAAjbwAgDs8AIBuvADAOD0AADq8AECrPAAACzwAAAO8AEAIPQAAsrwAgF29AIA6PACAlLwAANw8AEBtPQBAvzwAAIU8AIBOvQDwiL0AQKo8AABUPAAALzwAAAC6AAC/PACABjwAwAU9AACSPACAPDwAAN68AAASPQCABjwAQDC9AOAZvQCAtDwAQLQ8ACBBvQCAPz0AgDa9AGAOvQCAWLwAoCi9AMCUPADARr0AQAG9AAAHvQCAJLwAwJy8AKBUPQAAQT0AwNi8AOA/PQDYAL4A0L69AECVvQCA17wAoDe9APCMPQCgJr0AgGk9AMDnPAAAL7wAQEi9AMCpvADgJb0AgFW8AEDCPABgHL0AgMW8AOB9vQAgD70AoAW9AIBPvQAAhTsAMJ09AAC0uwDAwjwAAJy6AOAhvQDAJL0AAMq8AADDOwAA4zsAYKM9ACCKvQAA0rsAkNG9AAABvADgOD0AAAc9AICEPADQzD0AANA7ACA2PQCAar0AAIE7AABRvACw0T0AgOs8AIAwvADAD70AgGo9AIAqPQAASL0AgLe8ACCpPQCAQT0AANY7AIAuPACART0AkIA9AABdPABAzDwAQCo9AAAZvQDAh7wAQMo8AABPPQCwvz0AACc9AACaOwDgob0AAFw7ACBovQBAiTwAYCW9AMBLvQDAB70AgAi9AABiPADgjr0AgIY8AEDDvACAfzwAIF+9AOACvQAAkr0A8Lk9APCNPQCA/7wAAPS6AIBAvACggr0AQJk8ACALPQCAM7wAwKc8AJC3vQAAvTsAACg8AADQOQCAI7wAADe8AOADvQDgXr0AAAI8AIDGvADAyTwAgBW8AACuvAAAyb0AsIu9AMCZPAAADLsAAFg7AAAOvABgVT0AAA29AABrPACAlbwAUKs9AOB9vQCAVD0AABU8AMC4vABAhT0AwOe8AOAIPQCAk7wAIA+9AAAqPAAgHb0AgLU8AAA1PAAANjwAAK07AEAavQDQkr0AADC9AGAkvQDgB70AAKG7AMDmPACATDwAAPg6AMACPQBQgz0AMOk9AMCuvAAA8bsAoJM9AKAyvQBgRL0AgII8AEBnPQCAjrwAAPK8AACougBAr7wAAHQ7AMCxvAAACrwAQBc9ABCTPQBAPD0AAIe7AEA/PQCgf70AQCG9AIAgPQAAIjsAADg9AKBDvQAAUT0=","chunkHash":"98929ce91d3c36d7c45eace8271a4401757f6ac214f46efe0b21c8ff51d2d06e"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 1. Data Organization and Processing\n...\n### Data Loading Process\n...\n   - For a large sample, multiple crops can be extracted which increases the dataset size\n\n5. Efficient Loading:\n   - The `_load_volume_slice` method only loads the specific slices needed for a given crop\n   - A caching mechanism (`volume_cache`) stores recently accessed volumes to reduce I/O\n   - The cache is managed to prevent memory issues by limiting size to 10 samples\n   ...\n```","range":{"startLineNumber":30,"startColumn":0,"endLineNumber":36,"endColumn":0},"embedding":"AMCZPABA8zwAUKo9AGATvQDgDr0AgCe8AKAIPQDAuzwAILe9AMDjPACACT0AANQ6AAAKvQAA47sAQN08ACANPQCAh7wAACE8AADiOwAgeT0AgEM9AKA8vQAwkj0AAB48AICePAAAc70AAD47AGBVPQAgCz0AAKS9AGBmvQAAjL0AQJG8AMCBvQDgpr0AYA69AICFPACg2D0AQIa8AAC4OwCAYj0AcOq9AAAMvQAApjwAEKg9AACPvAAAILkAoDC9AAClOwAADz0AAKi7AICxPACQtr0AQKG8AICxPACAAbwAgEm9AGA1vQCAXj0AoFS9AIC2PAAAr70AwLm8AAAAugDAsTwAQI68AJCevQAAJjwAAIA7AEDtPAAAODsAgK+8AECyvAAgMb0AwC89AGBmvQAAc70AACg6AACrvADQqL0AADc9AECMPAAACj0A4GS9AABauwDwyr0AoEW9AMCWPAAgjb0AQIU8AOAsvQBgID0AAOo7AHC/PQCA2zwAAJW7AAC1vAAAuLwAYCk9ALCLPQBAXj0AQEc9AIALPADAwjwA0NM9AGCKvQCgAz0AYDU9ACAKPQAAnzwAsJi9ACBRvQCAmD0AAA88AIAzvABA3LwAAGw7AIBpPQBggr0AANC8ABDGvQAAIDwAgI08AIBTvQDgDD0AgBU8ACCkPQBgLr0AwMy8AAAAOgAArTsAAHo8ABCFPQDQ470AAC+8AGBEvQBAhr0AQIQ9AACougCAuz0AAAy7AIDXvAAQoD0A8KI9AABkvADgcj0AgHm9AEC2PQAAmLwAADg8AEBGvQDwiT0AAA69AAApvQAAkLoAwAi9AACDPACwiD0AAAo7ANCavQAA3rwAwAc9AEAMPQAAsbsA4HW9AIB2PQDgd70AADu8AMAkvQCALb0AAGi6AEBivQAA1LsAoGu9AIDEvACAfbwAQOG9AABgPAAAF7wAgCc8AOBKvQCABD0AYAS9AABkOwDASb0AwKC8AADpOwAAYT0AgAw8AMAbPQAAwDgAAMs8AMDNvACA3zwAQGK9AIBSvABAdj0AAJ27AGB+PQCAJD0AgCM8AKAIPQAAkrwAQL+8AADtOwCgXr0AwKq9AEATvQDAUb0AgI+9AIAUPAAAyjwAALI7AKBDPQCAbLwAcJ69AIDBvABwrD0AgC49AIAiPQBAuDwAADY8AMBlPQAgFj0AAJQ7ABCQvQBgGT0AAIm9AED4PACA6jwAAEk9AECFPACwoL0AALA5AABAvABgAL0AYDu9AAAcvQDgLD0AoEM9AMCLvAAA9jwAAGK7AGBEvQCAmDwAwOU8AKBFvQBg/L0AgBg9ACCTPQDAzjwAQOu8AMBZvQBQr70AAEy9AIDivAAAwrsAAP88AKCOvQCARz0AAM28AKANPQCQvL0A4Jc9AMCCvAAAaD0AAEq7AOALPQBAyDwAYFe9AMCmPAAA3LoAgHM9AEClvACgOr0AIAE9AECiPABgEj0AgLa8AACnPABAQb0A4Ae9ACAFPQBA+zwAQCQ9AADUOgBAnrwAIBs9AIABPQAAlbwAgM48AEDbvADgQj0AANy7AIDTPADAET0AAPi8AADsPAAA7DoAoHm9AIDnPAAAT7wAAEA9AOAxPQDAnTwAAP47AEChvQAQpb0AAEq7AIDgPAAAMLsAAGK7AEDwPAAA0jsAgDE8AEDwPAAACzwAQLi8ACBcPQAAMjsAgFS8ACBEvQAAwLkAAL87AIAevADgED0AABy9ACATvQAAu7wAAD29AICGPACAwLwAgOm8AOBnvQAALrwAoCK9AACXPABA6jwAAMu8AIAGPQBA1L0A0JK9APCavQAAeLwAgFG8AABRPQCAgrwAQBU9AACdPAAgO70AYAq9AADWuwCgB70AAAG9AMDlPACA/7wAADg7AOB9vQBAU70AYBq9ACAEvQAA/TwA8K09AACcuwAAxTwAAJQ7AMD2vAAAzLwAAG68AICvPAAANjwAYJ09ABC1vQBAnLwAANe9AADyuwDgOT0AwDY9AEAZPQDw6z0AAI47AMALPQCAar0AAMU7AOALvQDwsD0AAME7AECIPACAG70AgIs9ACBWPQBgAr0AwJm8APDFPQBgGz0AgAg8AEDGPACgUD0AgFo9AAD7uwCASjwAoF49AIBbvQAAyDoAgM88AKCTPQDgyT0AABs8AABtvACAjb0AAA88AOB6vQAAgDwAwG29AIDcvABgJr0AQJi8AAAzPADQhb0AANQ7AADNvACgED0A4G69AEC8vAAgnr0AQJ49AOCZPQBAE70AwJO8AICmvABwp70AABA6AEApPQBA1rwAACK7AIC9vQAAULoAwIM8AMDOPABA2LwAAIa8AEAevQAgPr0AgJm8AAANvQAA8DsAwJY8AAAUvACwtr0AMJG9AADEPAAAG7wAwPC8AAAAAADATz0AgL68AKAhPQCgL70A4LE9AGBVvQBAAD0AAGQ7AABvvABAHT0AAMs7AEDUPADApjwAIDK9AADrOwBAJb0AAFg9AAAKvAAAwjsAAIe7AEDrvAAQib0AABS9AGBhvQBgWb0AwKe8AICoPAAAljsAANq7AMAOPQAgdz0AWBk+AAAwugAAD7wAwGw9AICEvABgFr0AwIo8ACB3PQBAmrwAgI28AIAcPAAAW70AABq7AAAYOwCAu7wAsI89AKBMPQAgBD0AwPC8AIAbPQBgc70AAPS7AACCPACAhDwAwJI8AMDSvADABz0=","chunkHash":"16f666f63b6aaee4fc4c53c9d23773e6537fb177780a0a33c615d4431e2f4970"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 1. Data Organization and Processing\n\n### Dataset Structure\n...\n### Data Loading Process\n...\n```","range":{"startLineNumber":7,"startColumn":0,"endLineNumber":14,"endColumn":0},"embedding":"AAAiOwCgBT0AgME9AIBovQDA+LwAQLm8AAAWPACA1jwAMNi9AAAhPQBACz0AAC47AADAuwAgOb0AwJU8ACBWPQCATrwAYCs9AACeOwCwtT0AYBE9AGB7vQDAmj0AgKo8AAByvAAAPjsAAN27AEDFPAAA2jsAQKe8AKCBvQAAiL0AwIO8AKAKvQCArr0AABU8AADwugAwqz0AAI+7AADjOwCAOD0AMOS9AMC0vAAAGD0AgM88AOABvQAAUDwAkIS9AOApPQBAvDwAAAq7AACROwAAbb0AAFg8AIBKPAAAYLsA4Da9AMCjvADAGz0AIBK9AMCdPABAvL0AANG8AADmPAAAnTsAgDe9AHDnvQAACDwAYC89AABguQAAizwAABC8AABuOwCAbbwAMIc9AGAhvQCAlr0AANw7AABrvAAAx70AwPw8AACuPADA2DwAIE29AACjvABwo70AQJy9AIC/vACwmb0AAI28AGBcvQCAGj0AAMS7AEC8PQDgZz0AAHK7ALCOvQDAJ70AQOg8AIBpPQBARj0AAPE8AACQOQDApDwAcLc9AFCdvQBgAT0AIDM9AACQOwAAHLsAAJS9AMA2vQBQmj0AAKY8AACevACAATwAwLo8AMBaPQCAR70AwBG9AOBDvQAA7bsA8IE9AOBgvQBAnTwAgIk8AJCAPQCAJ70AQGS9AMDevAAALLwAgEO8AID0PADwwr0AAFi7AAA+vQAgw70A0Ic9AMDWvADQtT0AAME8AICtvAAAZz0AwI89AAAgOQBQij0AYJ+9ABCsPQCA87wAAKy6ACCQvQAAjD0AAAK7AAAuuwCA4zwAwMi8AACSPADgNj0AAMy7ANCQvQAAiLoAgNk8AMDqPACAl7wAoGq9AEBbPQBAFr0AgB68AMC8vADgDb0AAAK8AECGvQCAm7wAoHG9AADWuwCAW7wA0K69AKAOvQDA3LwAAMw8AAAmvQDgFD0AAG29AAD1vAAQpb0AANi7AAA/PAAgJD0AADY8AIAoPQAAlDsAgE48AIBuvADA+TwAoI+9AACauwAgYT0AAM+8AMB6PQCgNT0AAGI8AAB+PAAgEL0AQJ68AGA8vQDAHb0AcO29AOBwvQCgKL0A0My9AIBPPABA1DwAAEK7ACDAPQAAZDwAUOu9AECZvACAlT0AEIA9AAAeuwCAnjwAAAi6AOBKPQBACD0AQMU8AIBMvQCAFz0A8Je9AECzPACAIT0A4Dc9AACzuwAAj70AAPC6AAAAuwBAwrwAAB69AABhvQCgLz0AoFs9AAC3vADA/zwAwJI8AGAMvQDgHD0AgHE8AAA9vABQ0b0AAJy6ACCcPQCAyjwAwOy8AKA3vQBAh70AoBq9AIARPADgAr0AwDg9ACBWvQCAST0AgP68AED4PABAo70A0II9AKAevQCAFz0AQJu8AKBLPQCAHD0AkJm9AMADPQAAPDsAwOI8AABOPACAhrwAYAM9AIBbPABA5TwAAPq7AIBnPABA6rwAQKq8AMBzPQCgJz0AACy7AIA/PABgAL0AwDQ9AKAQPQCAizwAQNI8AAABPAAgMj0AAJK7AADSOwCAITwAAIu7AACjPAAAE7wA4Ae9AEAJPQAAWLoAwMw8ACB+PQAAmjsAAOA8ACBmvQBQu70AAFI8AOAJPQAAKLoAIIG9ACAgPQCAQ7wAAGi6AAAVPAAAxbwAABo8AEDgPAAAQLsAwKm8AIAEvQDABD0AAPm7AKByvQDghD0AwBy9AABoOgCgQb0AAHW8AAAlPAAACr0AgFi8AACPuwCAmjwAoBe9AABFPAAArT0AgBm9AEATPQCQAb4AkKm9APCuvQBA0bwAAFi9AMBHPQCgG70A4GI9AAAFPAAgIL0AYIm9AAB+OwDgQL0AIEO9AABkvABgCb0AAMu8AABgvQAA17sA4A29AIDxvADAxzwAgIs9AAB8vADA6DwAgBs8AMAjvQBgH70AgC29AEDIPACAAbwAMI89ABCvvQAAUDsA8NK9AIA5vAAgBD0AQNU8AADBPABQrT0AAPg7AGAcPQCgML0AgIi8AKAlvQCAtT0AAIY7AIB1PAAAlLoAIEM9ACCSPQAAMrsAQKC8AIDlPQCAtzwAALs8AAANPQAAYD0AwMg8AIASvACAwjwAQBs9AKAKvQAAXbwA4EA9ABCNPQCQxj0AgDI8AADvuwCAO70AgGm8AGBBvQAAxDsAAOi8AIBRvQCA1LwAAJy7AACcOwCwlL0AAAE8AAAyvAAAcjwAgNK8AMAZvQDwlb0AIKA9ADChPQBgC70AgL08AOANvQDAt70AgBW8AFCFPQAAKjsAANo8AGCTvQAAHjsAAGw7AAAlPAAAnLsA4Aq9AEACvQAAkr0AAMK7ACBNvQAA0rsAABY8AIAYvADgvb0AIG+9AGAPPQAAh7wAAG+8ACANvQBAOT0AgC88AOBQPQAAdbwAgOE9AMDgvABAOz0AAI87AIB2vAAAhz0AgFK8AACnOwAA37sAgFa9AIANPACAir0AgJc8AAAkPACACzwAAEy8ACALvQAwlL0AgFG8AGB2vQCgK70AwKq8AICzPACAeDwAgOE8AGByPQBgHD0AYB8+AACIugAAUDsAwGo9AEC7PAAAUrwA4CQ9AOA/PQBAnbwAgIi8AABtvABgA70AAP27AIC3vABAS70AAOA8ACAxPQDA1TwAAJQ7AOBpPQBAU70AANA5AICmPACAejwAIH09ACAqvQDApjw=","chunkHash":"980d44ac04395661754d4fb5087274cea884c7878c3ee429df64d6157c47a714"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 2. Data Transformation and Augmentation\n...\n### Basic Transform (`basic_transform`)\n1. Converts input to numpy array if not already\n2. If margin is specified, discards pixels from all edges (helps reduce edge artifacts)\n3. Converts to PyTorch tensor and normalizes to [0, 1] range\n4. Reshapes to 5D tensor with shape (1, 1, D, H, W) where:\n   - First dimension is batch size (1)\n   - Second dimension is channels (1 for grayscale)\n   - Remaining dimensions are depth, height, width\n5. Handles various input shapes and includes error checking\n\n...\n```","range":{"startLineNumber":41,"startColumn":0,"endLineNumber":51,"endColumn":0},"embedding":"AAA/vAAAmbsAIOI9AADWvABgMr0AEJC9AACZOwAgVD0AwNW9APCHPQAAOzwAAIA7AED4vACAOLwAAPE8AAA2PQAAgDsAIBs9AADOvABAZj0AAAC4AACEvQDgpT0AoCE9AIBDvQCASLwAAI47AIAJPABA0jwAAMC6AEBCvQCwib0AwD29AMBNvQBAibwAgO+8AICQvADg5z0AgB88AAC8PADAXT0AYOW9AABlvADA+jwAgD48AECnvACgbD0AgES9AADOOwCA3jwAACc8AICqPADABb0AIDc9AIA7PACgOz0AgN28AKAAvQBAGj0AgBe9AADfuwDgpr0AAHa8AIAuvAAADzwAAIC6AADMvQAAXjwAIFA9AIC1PAAAkjwAYBS9AADluwBA77wAUJM9AIDRvADwiL0AMJA9AEDEvAAAQ70AwNk8AMCtPAAAqjwAACa7AAC4vADAhb0AQI29AFChvQDAmb0AAA68AMDivACAuTwAADu9AGBfPQCAAbwAwMM8AECkvADAsrwAABY9AOAQPQCgcD0A4Ao9AAA4OwAAcDsAwJQ9AMDivQBAhjwAAAU9AAD0PACAzjwAIJe9AOBZvQDQgD0AACs8AIADvACAXjwAAOw8AJCWPQDgDb0AQPi8AOBkvQBgfL0AYBo9AMBVvQAApzwAgFI8AOBuPQBwhb0AQOK8AACJvACAkjwAgOo8AOBcPQAwo70AQKi8ACB/vQCA070AwJ49AADMugDgqT0AQNU8AACfvADgYT0AYGU9AIAPPAAAXT0AsKi9APD1PQBAn7wAYAg9AGBuvQCAcD0AwDK9AADTvAAAmbsAAAK9AIBsPQAQoz0AAFq7AODVvQAATTwAwEk9AMCJPADAlrwAoCi9AMA0PQDgGb0A4A+9ACA3vQAghb0AAJu7ACAlvQBAmLwA4DW9AIAcPACA9LwAwPS9ANC+vQCAyLwAAL68ACApvQCAOj0AYEK9AIDlvACgyb0AADm8AADCPABgiD0AgIO8AIASPQAAvbsAYAo9AIBZvABAjjwAAEG9AACQOQDQqD0AQGa9ABC4PQBAFT0AQN48AIA9vAAA6TsAAFa8AIBivABgYb0A8L29AMBHvQDwib0A0Jq9AACiPADAzjwAAMY7ADCiPQAAR7wAsNS9AIB4vADgXz0AABo9AACQuwBA3bwAgFU8AGAxPQAAazwAgAq8AICLvQCgIz0AIFW9AAC6OwDgRD0AAAy7AACIuwDAk70AgGy8AABKvABgIr0AwC29AIBcvQDADj0AIFw9AEAPvQBAjDwAgOc8AID9vAAAODwAAMi6AIApvABgp70AgN48AMA/PQBAiTwAQBG9AIArvQDAcL0AwBa9AAA5vAAADDsAAKY7AMA6vQCgHD0AQJ08AMD1PABgvb0AwAc9AAAuuwAAkjwAQCC9AEA1PQAgNT0AwHS9AAD2PADAtzwA4CE9AADduwAAm7wAAAk8AKBXPQBAOz0AgHk8AAD0OgDAgLwAAFi6AEBiPQCgUj0AQP48AMDtPAAAVrwAQJc8AAAMOwCAPrwAAFk9AAA2OwCgKj0AANW7AMDSPADApTwAAKS6AMAJPQAA47sAIKm9AACuPAAAfDsAADg7AEB7PQCAWTwAABs9AGBMvQDQsL0AgF08AAD9PACArjwAIDm9AAA/PQAAhLoAgCE8AABYOwAAgjsAAM+8AABKuwAAD70AgIC8ACDRvQAAADoAQGG9AMCpvABAND0AwDu9AIAqPABA47wA4Ba9AADRuwCge70AAIi8AMBgvQAA2LsAwJY8AABhvAAAcT0AIFO9AICEvAAA370AwLO9AJDDvQCgLL0AgNW8AJCXPQAAGrwAIBQ9AGAQPQCAgjwA4Jm9AAARPABgV70AYEK9AABauwAgRr0AgO+8AIDUvAAASL0AAPQ6AGA7vQAAADoAgIA9AIC1vADAhTwAALo7AEDSvABAxLwAAOe8AAANPAAA27sAQJE9ABCFvQAAkzsAcKG9AIAjvQAgCj0AgNk8AIAePAAAND0AAFM8AMArPQCgI70AADa7AABHvQDAjT0AQOA8AADwOgDAhjwA4Fo9AGBSPQBAgLwAUJW9AHC/PQCgET0AAIY8AED1PABAND0AwF09AAD9OwAAxDoAAMc7ACBCvQCAIr0AoEg9AACJPQBwlD0AoEA9AABUuwCA4rwAAMg7AKCQvQCAazwA4IK9AABUvQDARr0AANY8AAB4ugCgq70AAIM7AADyvAAgPD0A4C29AADgOQDQrL0A8IA9ACB3PQBAKb0AAOE8AADquwDAFb0AAPS7AOAyPQAA57sAQDI9AODWvQAAV7wAgO88AAD2PAAAqTwAYCC9AICdvADgXr0AAC68AACuvQAAvDwAAL+7AADcugDAa70A4Gu9AADTPACARrwAAAq8AOATvQAA8jsAIA+9AIA2PQCArjwA4M09AICvvACwhj0AwL68AACyuwAADT0AACg6AIB5PADAkLwAQEC9AAAzvACgFL0AIAo9ACAlPQDAMj0AAEq7AAA8vQBw0L0AgGm8ACAEvQAA0LkAAE68AABKPQAAlzsAAGs8AIB7PACAcz0ASAc+AABMvQCgEL0AAFk8AGApvQAgQ70AAIY8AACYPAAAj7wAgOM8AADduwAA57wA4Ac9ACBAvQAAlbwAIB09AAALPADgaj0AAGe8AGC+PQDgUr0AgAM9AEA6PQCADLwAgNU8AEDwvAAAADw=","chunkHash":"d378366721fbc100d7cdefe0d9bc826fd15cbfb681429968e4c1a13e9380d146"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 2. Data Transformation and Augmentation\n...\n### Augmented Transform (`augmented_transform`)\nApplies the basic transform plus data augmentation techniques:\n1. Random flips along each axis (x, y, z) with 50% probability\n2. Random rotations in the xy plane (90°, 180°, 270°) with 50% probability\n3. Random intensity adjustments:\n   - Gamma correction (factor between 0.8-1.2)\n   - Contrast adjustment (factor between 0.8-1.2)\n4. Random noise addition (up to 5% level) with 30% probability\n\n### Mask Transform\nSimilar to basic transform but specifically for segmentation masks, preserving their values.\n\n...\n```","range":{"startLineNumber":51,"startColumn":0,"endLineNumber":63,"endColumn":0},"embedding":"AMCOvADgPz0AALU9AICSvADgeb0AMIK9AIAMPQAAdD0AwNa9AKBoPQAAqzsAQLO8AABIOwAA17wAAJC5AKA7PQAApjsAQMw8AEChvADgdD0AAK28AOBEvQAAfT0AIB09AEBDvQBAPr0AANA7AEANPQDAjjwAQIW8AAD8vADQgr0AwCm9AMA3vQBAL70AALy6AADZvAAAqz0AAC67AAAtPAAwgj0AQAm+AMDZvABgCz0AwNI8AIA0vABgVz0AwHe9AAAkOwCgST0AQOs8AABMOwCAiL0AgAY8AMCMPAAAZTwA4AG9AMDuvACAKzwAAPa8AABiOwDQ7L0AAL+7AABwuwAAfrsAQIY8ABDXvQAAQzwA4HI9AABKOwCgND0AwNa8AABAuwAAXTwAwD89AMD5vAAQuL0AoF89AMDEvACQiL0AABQ8AABbPACAMj0AgGC8AAATvQBAkb0AMKG9AICfvQBQnr0AAFg8AECWvACADj0AgBS9AGAnPQCAH7wAADQ9AEATvQCAqbwAgFk9AOBLPQCAfD0AAGY7AIAWPAAAGjwAQLY9AKBlvQCATDwAgKg8AGAhPQCAXDwAgCK9AOBWvQDgoD0AABS8AAArvAAAjTwAALQ8AECUPABgKL0AQBa9AICXvQDwmr0AYEg9AAAovQCA7DwAAJG7ACClPQDwh70AQO+8AEDGvADAjzwAAIM8AMAbPQBApb0AAL28AGCNvQDgy70AULI9AIAGvQAgrj0AQMY8AIABvAAAXzwAAP48ACAevQDA9zwAAE+9AKC8PQDgEL0A4EM9ALCFvQAgWj0AwNy8AACYugCAFbwAoEq9AAByPACAoT0AgKm8AMB9vQCAJTwAwPg8AIB7PABALL0AwDW9AOA9PQBgcL0A4Ai9AMAVvQBAT70AgFa8AACivQCAcbwAQHW9AMDTvACAOLwAAN+9AOCsvQCAjrwAANO7AECuvABwhz0AAFu9AAASvADQr70AYAy9AAAyOwCgaj0AQO68AGA5PQAAcrsAwAw9AAAcPAAgKj0AoHG9AGAbvQAgaD0AIE+9ADDTPQAgHz0AAIQ8AABwuwCAWjwA4Bq9AECZvABADb0AULm9ACBnvQDgc70AwCm9AOAWPQAADrwAQLM8AOBfPQBAmLwA0K29AMCwvAAAQD0A8JU9AAA+uwDgBr0AwIc8AEBtPQAACjsAQLc8AACovABA7jwAICu9AABkOwCAFD0AgPs8AAA/vACAyb0AQMa8AIA+vACgUL0AACu9AMBHvQCAZzwAgEs9AAADvADA4zwAwME8AIAJvQCAgTwAQIY8AEACvQDwk70AYAQ9ACBiPQCACjwAwMW8AEDOvACARL0AAD69AAAnPAAAkbsAQM48AKCyvQCgIj0AAJA8ACAOPQBQ2r0AwJs8AAC9vABAOz0AQPO8AIAHPAAgDj0AoDO9AEDlPABA+TwAwFQ9AAA/vACADb0AAD67AAB2PQAADj0AAFy8AIDDPAAA8LoAAJu7AOBlPQAAFDwAwBA9AEDoPAAAgLgAwJo8AAAYPAAAjLwA0I09AABPvACAfz0AgEm8AAB5PABgCz0AAA28AOA2PQDAAb0AUKm9AECFPQAARrsAQJk8AHCgPQAARjwAgBc9AMAjvQAQo70AwFE9AMA6PQCAzjwA4E29AEASPQAARbwAACM8AIDIPAAAVDsAgGy8AACyOwDA1bwAgAw8AMCzvQAA0jsAwFS9AMDivACA7TwA4C69AAAgOwBAxbwAwGG9AABOPABAW70AAH+8AOB1vQAA1bsAgB08AADIOgDAYT0AQO28AIBKvAAAxb0AAJW9AGCdvQDgkr0AACq7AFCBPQBAwrwAYGU9AMBHPQAAaDwAAI69AABWPABgIL0AgIK9AACpuwDgI70AAIi7AABXvACAN70AACu8AADkvACA1DwAcLc9AIBfvADA2zwAAI27AEDQvAAA9LwAAIG8AAAougAAEr0AQF09ANCFvQAAYLoAgJ29AOABvQCAPT0AgL08AKAgPQDAsz0AwDM9AKAlPQAgJ70AAKw6AKBkvQAAhj0AQL08AIBAvAAA7LoAYFU9AIAXPQAA87wA8IC9AFCrPQCARzwAoBI9AIBgPQAAbz0AALQ8AIBrPADgBr0AAIc8AKBkvQCAe7wAQMc8ADCNPQAgNz0AgM48AIAEvACAU7wAAKk8AFCNvQCA5DwA4DS9AMAFvQAAxLoAoCQ9AAA1PADgsb0AAAw9AAAYuwAAEj0AgCu9AIBvvACQib0AoHk9AICGPQBAYL0AoCs9AIA1vADAEL0AANA5AMB7PQAgD70AoCc9AMDDvQCAHTwAABA9AADrOwAAtTsAQPW8AIC9vABAhL0AACC8AJDPvQCANzwAADK8AIAZPADAm70AAHa8AACcPABAmLwAgJO8AIAzvABAuDwAgPa8ABCBPQAAhLoAcNE9AECHvACATj0AAPa8AACROwDgcD0AQKs8AMD3PABgBr0AYFO9AMCUPACAX7wAgLU8AAA6PABA6TwAwI08AAA5vQDA370AQJY8AMCIvQAAkLsAwIo8AIAIPQAAETwAwOM8AIDDPADA7jwAkB0+AICbvAAARrwAwMw8AEBnvQCAKLwAQK48AMDEPAAApbwAYDo9AAD3PADAwbwAADG8AJCIvQDAlrwAwHU9AIANvADABz0AgM+8ADC0PQDgBb0AAEg9AEAhPQAALTwAkIs9AMCFvACAzrw=","chunkHash":"67d077d6e68b76b0f810693b7bc8f5391813aae55e0efd0ba98586eaf0d08051"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 2. Data Transformation and Augmentation\n\nThe pipeline includes several transformation functions for preparing the data:\n\n### Basic Transform (`basic_transform`)\n...\n### Augmented Transform (`augmented_transform`)\n...\n### Mask Transform\n...\n```","range":{"startLineNumber":39,"startColumn":0,"endLineNumber":61,"endColumn":0},"embedding":"AICLvADAST0AkMQ9AIA5vQCAVL0AQHy9AECAPADgbj0AANK9AGBMPQBAkDwAAAC6AIABvAAgHL0AAEQ8AAAwPQAAwLkAgKE8AACIuwAgkj0AAAM8AGBcvQDQij0A4Dc9AKAIvQCArbwAQLO8AEDPPAAAxLoAAPq7AABQvQCAiL0AgLe8AOAHvQBgA70AADy7AAD1uwAgrz0AgB08AIBTPADgUj0AgAO+AMCuvADA9DwAAGQ7AAAAvQDgRz0AMIO9AACJPABgBj0AAKo8AAAquwAgfr0AAMc8AMCHPADAvTwAoE29AICovABAsDwAgC+9AACjOwDQub0AAL28AICmPACASrwAAMM7AMDdvQAAl7sAQNc8AACvOwBgHD0AQKm8AIAavAAAHjsAQGw9AKAnvQBwpr0AoBc9AIDEvABgmr0AAKE8AACEPADAlDwAgNy8AACQvABAgb0AcKW9APCIvQBwwb0AAMw7AMAQvQBA7DwAANe8ABCKPQCAbzwAAA49AGBHvQDAr7wAgJo8AICIPQAQkT0AwIg8AAC0OwAAQDoAoKY9AHCHvQCAGT0AAFc8AMD5PABAqDwAIEG9AEB8vQBQpj0AAAo7AMCovADA3zwAQA09AKAMPQBAXr0AABe9AMBsvQAgHb0AwHM9AJCCvQDAqzwAgJQ8AEBkPQAAOL0AoFC9AOAjvQAAR7wAgE88AKANPQBQtL0AACi7AMBxvQCA4b0AQKU9AEC0vADwvD0AwMI8AABrvADA8zwAAGM9AAAvvQDgHj0AIG29ANCgPQBAE70AgGw8ANCIvQDAbD0AwK68AADguQCAH7wAICi9AECUPABglT0AAE+8AJCXvQAAErsAYA49AAClPADA9LwAwFW9AADmPACgBr0AQO68AEAFvQAgT70AAJw6ADCuvQBA2bwAQFe9AMDCvAAAg7wAQOa9AGCovQCAibwAAGk8AIChvAAwiT0AYH29AABqvABglL0AQJe8AADHOwCwgj0AgC68AGB4PQAAgLgAAO08AIB4PABApjwAIIa9AABGuwCAfT0A4Hy9ALDYPQBgKD0AwNo8AACJvAAAtrsAgEi8AIAfvQBgL70AcMy9AMBXvQCwj70AAHu9AEDSPABAzTwAgHU8AMCwPQAAHbwA8NO9AMCSvAAgSz0AAIM9AACFuwAAALwAANg7ACA8PQCApzwAQLA8AEDnvADAljwAkIO9AAACOwBgPT0AoBA9AACYvAAgs70AAAC8AICJvABAN70AABe9AOAGvQAA2jwAIBg9AEDNvADArjwAwAQ9AABIvADA5jwAQLU8AADxuwBgvL0AwBA9APCTPQBA6zwAQMW8AAD2vAAgO70AICi9AADHPABAprwA4EA9AACtvQDgGD0AAEg8AIClPAAwyb0AgBw9AAD3vAAAFD0AAL+8AEAiPQAAHD0AsIO9AIDVPAAA8TwAIHE9AACwuwAA27wAACQ7AIAvPQAgGz0AACk8AIDEPAAASbwAgFq8AKBpPQDAsjwAgEI8AICrPAAAx7sAwKc8AAAeOwCAQbwAEI89AADCOwCgMz0AwJu8AICKPABA9TwAgAo8AEDVPACAv7wAMIy9AEA6PQAAmTsAQIw8AFCmPQCAwzwAoBM9AMBqvQAAxb0AABw9AACnPABAzjwAgFe9AKAwPQAAibsAgCk8AACMOwAATrwAgGe8AAAQugCAO7wAAJa7AJCGvQAAMTwAID29AGArvQBAfz0A4Em9AAAwvABAfb0AIBC9AIBmPAAgR70AAOS8AMC2vAAAK7wAACw7AADzOwCwkT0AgNq8AABgOwDg5L0A0Mq9ACDOvQBgTL0AAHi8AEBYPQBA07wAAEI9AMCdPAAAijsAAHO9AIBoPABgQL0AwEu9AADmuwAgSr0AQPy8AKAsvQCAo7wAQO68AEDPvAAA5zwA0I09AICQvABAsDwAAGA6AIAevACgJ70AgBe9AAAMOwDAmrwAwE49APCCvQCAMLwAkKy9AADdvABgFz0AACw7AIBqPABQsT0AACI9AEA5PQDADL0AAIC7AMBovQBwmz0AAEg8AADEOwAAnjsAgI09AACpPQDAvLwAYDy9AKDCPQDAgDwAYCg9ALCWPQDgLz0AgOA8AADwuQAAajsAwAI9AKA8vQCAIbwAgA89APCSPQAAmD0AgEM8AAAavABAr7wAAIg7AMBfvQDAhzwAADG9AIDZvAAA0LsAQIU8AICjPACArr0AALA6AMCevAAAdDwAIBi9AAC9vAAQhb0AMIY9AICUPQCAP70A4BM9AIDhvADgnr0AAMC5ADCqPQCAtrwAAPs8AEC5vQAAljsAYCA9AACvPACAYzwAICa9AIDnvABQkL0AAMq7AICxvQCAzzwAAJ67AACnuwBQtL0AYA29AMCvPAAAGbwAwMe8ACAHvQCAHD0AALi8AEBwPQAAGDoAQNg9AICOvADAfT0AANG7AAC7OwDgdj0AwIA8AAC0OwAAvbsAwD+9AAB0PAAgJr0AoBg9AADcOgAAvTsAwJI8AEAIvQDgtr0AwL88ANCIvQCgBr0AAPk7AICnPAAAvTwAQIg8AADXPABgAz0AqA8+AADKvACAIrwAwN88AABNvAAAkLsAAPo8AIDGPACAlbwAQOY8AACgOQCAu7wAAL27AOBDvQBAmbwA4Dw9AACtOwBgLD0AAIu7ACCwPQAA2rwAwEs9AIBDPQCA6DwAIEs9AIAKvQBAgbw=","chunkHash":"af3649cb2162a6223c8ccbfa80764b8dbed10bfcb3df0491946bdc7088284751"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 3. Model Architecture\n\n### Base VGG3D Model\nThe VGG3D model is defined in `model/vgg3d.py` and consists of:\n\n1. **Feature Extractor**: \n   - A series of 3D convolutional blocks\n   - Each block has multiple Conv3D layers followed by BatchNorm and ReLU\n   - MaxPool3D layer at the end of each block for downsampling\n   - The number of feature maps increases progressively (typically doubling)\n\n2. **Classifier**:\n   - Fully connected layers that process the flattened feature maps\n   - Default configuration: 4096 → 4096 → output_classes\n   - Includes ReLU activations and dropout (0.5) for regularization\n\n   ...\n```","range":{"startLineNumber":65,"startColumn":0,"endLineNumber":79,"endColumn":0},"embedding":"AAAgOQAAsTsAEOo9AOB3vQAglb0AYBS9AACXuwCAfjwAUIW9AFCCPQAA0DkAgGa8AMCtvABAq7wAACs8AIAFvAAAHzwAQGc9AGBFPQAwiD0AAEU8AOBhvQBAeT0AAOA8AIANvACAjrwAAPw6AADKPAAAjjwAgCu8AAB9vQAAKr0A4Di9AMBSvQCw1L0A4Eq9AAAEPACwxD0AAFa8ACCRPQAANj0AIMW9AHCLvQAgSD0AwM88AACROwBgEj0AgDm8AABpvADAMj0AAL+7AOAaPQAgPr0AAIO7AMCAPACAFbwAwLu8AJCBvQDAvzwAwOu8AIAbvAAgwb0AwAi9AAB+PAAAqTsAQJu8ABC6vQDgLT0AYF49AMC6vACASjwAwPe8AIBbvACASLwA4LM9AAC7uwBAPb0AoC09AGAevQBwmL0AgCs8AMAKPQDARD0AAII7AOAxvQDwzr0AwC69AADbuwDwpL0AAI28AIDqvACAaTwAgIi8AIC1PQAAgzwAAAY8AEC3vABgDr0A4Bg9AOAgPQDATT0AAO88AAAyPADgKT0AIHo9AAgAvgAA5TsAYDw9AAAouwAATDsAEI69AEAmvQDgjT0AAFG8AMD5vACAnbwAgHq8AMCVPQCQib0AQOW8AACkOwDArrwAgHk8ACB5vQDAAD0A4FA9AACqPQCgAr0AIHu9AACwOQCAurwAgJU8AED/PACgob0AAOW7AOCvvQCg6r0A4Eg9AAASvQAAbz0AoD89AIA6vQBAuTwA4E09AADQOQDAxj0AkK+9AEBZPQDgGb0AwKs8AMBjvQCAnD0AAEo7AAB3vAAAibsAQNO8AEDZPAAQjz0AQOw8AOBlvQCAsTwAgE09AIAfPACAKbwAoDe9ACBtPQDAiL0AAE28AKA+vQAAaL0AwPo8AIBWvACAlDwAgGW9AID0PAAAbLwAwLS9AKA8vQAA7LwAIA69AAAkvAAAIDwAIHW9AADdvADQob0AAMC5AMC/PACAMD0AAPk8AABPPADApzwAgHQ8AABOvADAnjwAQOK8AMDHPADA5jwAQIO9ABCfPQDA1zwAAMY7AEAIPQCA8LwAwP68AADrOwDASb0AQJC9AICqvADAQb0AIG69AACaOwDA5jwAgCC8ABCIPQAA3LoAsNe9AIBwvADASD0A4Ec9AAAxvAAAJT0AANi6AIAEPQDgGT0AAJs8AGBbvQAAzjwAcJC9AAAZPADAMD0AgKU8AIDLvABAib0AABy9AMDnvAAA5rwAgJe8AGAzvQAATT0AABs9AEDRvADgZj0AgB08AMAevQDAXD0AwJs8AACUOwCw770AABW8AOBoPQDA1jwAADq7ACB8vQBgVb0AwKK8AMAoPQCA+LwAAJy8AMABvQCAvLwAgAe8AACIPQCwk70AYDk9AAB+vAAAxDoAIFK9AIDGPAAAxzsAMKG9AKAVPQBAmbwAwJE8AECFvACAVbwAAGQ9AAB+OwBAOj0AAKG7AAAFvACAJrwAANI7AMCNPQCgmj0AwME8AAAyOwAAs7wAAIg9AAA9vADArDwA4EI9AACxuwCAyDwAgOa8AADauwAAJD0AAOi8AADnPAAAUDsAoCW9ACAtPQAA37sAALQ6AOB7PQAANLwAoDk9AICWvAAglb0AAIA5AADUvAAAsDoA4Gu9AMDoPABA5rwAgOc8ACAxvQAgM70AAOq8AECcPAAAUDwAQOO8AMAuvQAAOLsAQIy8AADGvAAAiD0AANO8AABvPAAgJ70AICu9AMAEPQCAybwAAJm8AMB0vQAgOr0AADi6AIAuvQDg3j0AAIC8AGBlPQDA470A4Ju9AODEvQCAzbwAAOq8AGDAPQAALr0AIA49AACXPQAAwzsA4Be9AACSuwAAybsAYI29AIDuPAAgS70AAFK7AAAlvADgTL0AwIi8AABvvABAmzwA8L09AAC1vACASjwAAJW7ABCkvQCAJLwAgMW8AIDBPAAgF70AkMg9ALDWvQCAdDwAAOK9AEAvvQBA3zwAAA47AMDdPABgZz0AALs7AIBJPQCA4bwAoBW9AADDvACAWT0AAD88ACAjvQAAPLwAgE89AMAKPQAgCr0AAB29AHCqPQDglT0AQIq8AEBSPQCARzwA4BQ9AMB1PQCAI7wAAGc8AABDvQAAg7wAIDA9AMBePQDw1T0A4Ak9AIAtPAAA97wAQAg9AMBKvQAAzDoAwGu9AHCZvQCgGb0AwK88AACYPAAAHr0AQOE8AIDYPAAAMD0AwAK9AACEugAgIL0AQIM9ACCtPQCA3rwAANa8AICRvAAgib0AQIk8AADMPAAAhzwAgEM9AIB/vQDAqjwAwAc9AICDvAAAFDwAQJ68AIA8vACgnL0AACA6AABavQAA/TwAAPy8AIBCvADgxr0AgE68AAB4vABAm7wAgKC8AAB8vABAIj0AwPu8AEC7PQAAKz0AMAE+AAD+vAAAlj0AQNG8AECdvAAAwTwAAAe8AABzPAAAKrsAwNS8AIB4PABgJb0AAHI8AACROwCArzwAgOK8AABGvADAx70AIEe9AACHvAAA7zsAAD28AAAhPAAAQjwAwKo8AAD/PAAAUDsAqAw+AMDQvACAU70AQFk9AMC+PAAA87sAgOA8AIDyPADAibwA4DE9AAAQvQBA5LwAwJe8AGBTvQDgBb0AwNs8AEBRPQDgRz0AgNe8AIBlPQAAc70AAC+8AABYPQAAoDsAwAc9AMBQvQAASLs=","chunkHash":"eeec09573a92ccfffc5b65c9db4fe1ccdfaaaa981e961531c903d4323b6ac2b9"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 3. Model Architecture\n...\n### Adapter Architecture for Fine-tuning\n\nThe script uses adapter models to handle potential mismatches between the pretrained model and the target task:\n\n1. **Vgg3DAdapter/CustomVgg3DAdapter**:\n   - Reuses the feature extractor from the base model\n   - Creates a new classifier that matches the output size of the feature extractor\n   - Allows for reduced classifier size (specified by `classifier_size` parameter)\n   - The custom adapter determines the correct feature size by running a forward pass with a sample input\n\n2. **Feature Size Calculation**:\n   - The script tries to get a real sample from the dataloader\n   - If that fails, it creates a synthetic sample with the target dimensions\n   - It runs this sample through the feature extractor to get the exact number of features\n   - This ensures the input-output dimensions of the model are compatible\n\n   ...\n```","range":{"startLineNumber":79,"startColumn":0,"endLineNumber":95,"endColumn":0},"embedding":"AIALPQCAKTwAkAo+AKAsvQDgh70A4Fi9AMC7vAAA+DwAYMC9AGAmPQCAbbwAwNy8AMBrvQAAzTsAAHI7AAA6vAAAALkAYEs9AABCOwCAsD0AwAo9AIAyvQDAiT0AAEw7AMCfPAAAOr0AAP07AGAcPQAAtD0AQLq8AAAOvQBAEr0A4J69AIBIvQBQ0r0A4BS9AIBPPAAwwD0AQKu8AIDnPACAgjwA8La9ANCNvQDgYD0AAAu8AADgOgCATT0AoAG9AABoOgDgfD0AAKm8AOCoPQAApL0AQKQ8AGAAPQAAX7wAAMG7AOBrvQCAhTwAAJK7AACuvAAA8b0AAKu7AMCzPABANb0A4DK9AKBpvQCAJz0AAAk9AACNOwDAND0AAKi8AECqvACAe7wAwFQ9AABdvADgOr0AMMo9AKAhvQAQkr0AAPQ6AAAEPQAAYLkAAPq7ACCEvQCgoL0AAD69AAAevQAgrr0AABO9AABsvADAhDwAAM+8AMCSPQCAjjwAAEA8AIDZvABgLb0AwGI9AOASPQAAvT0AAKs8AAAkOwAA3TsA0JI9ANgBvgBgST0AgAw9AID+PADAxzwA4HG9AICrvABghT0AAO67AACVvABAyLwAQO08APCWPQAgOL0AgA68AAAQPAAAKL0AgN88AOB6vQCA5zwAABg9AKB9PQDABr0A8JS9AMCSPABgRL0AANk7AIDNPADgAL0AAPg6ABDAvQBg270AwGI9AABIvQBgoj0AALU8AAD3vAAgEz0AwBI9AICOvACwoj0AAP68AIAfPQCgbr0AgO08ACAyvQAwkz0AAPu7AIAjvQAAirsAADU8AAAcuwBgJT0AABI8AACqvQAAXzwAgFk9AACEOgAAhzwAIGC9AAAPPQCgPr0AAJk7AMCpvQDgMr0AIBA9AAB6uwAAEjwAwDy9AMAuPQAATDsA4D69AEBGvQCARDwAgJu8AMDcvADAkzwAwFG9AKAZvQBQs70AgK68AIBqvADAojwAwE09AACQvABA5jwAgAk8AADPuwAAlDwAQE+9AADtOwDANj0AoD29AOCoPQCgMD0AAMA4AMChvACAULwAAJY7AACuvACgY70AgG+9AEAavQBAC70AgI29AAD8OwDA9jwAALs7AGBoPQAA0jsA8Ku9AID/vAAAnTwAAO48AADvOwCAXTwAgHQ8AAAJPQAADrwAgBa8AAAtvQCA1DwAQJi9AAC/vACAsjwAAIe7AAD6vACgRb0AAMG7AIAbvADAjL0AwJa8AECPvQCgDj0AYG49AIAPvABAYD0AwJk8AEB7vQCAKzwAAJA8AAALvQCAq70AgJc8AGCTPQAAxjwAAMi8AMBcvQDQkr0AgGC8AKAvPQAAzDsAAES7AADguQAAILkAwOi8AMAcPQAglL0AwI89AAAquwAA1TsAwNm8AEAhPQAAcTwAACW8AMBHPQAALzwAgEU8AEBivQBA0bwAYDM9AACBPAAAnz0AwIo8AACNvADA/rwAgFW8AKAJPQCglj0AgJg8AABgOwCAl7wAAHw9AAAAuQAAeLwAgF88AECVPAAgQz0AAAu8AIBsPAAAID0AoC69AIAlPAAAQrsAoFe9AGALPQCA2rwAQEc9AIA7PQDAlrwAgNs8AMDXvAAAxLwAALU7AAD4ugCAZbwAALO8AIAXPABAD70AAGs9AMBKvQAAxDsAwEW9AIBhPABAozwA4JW9AIBIvQCAYLwAgE28AAAKPAAAwTwAwBy9AICYvAAAJb0AgFM8AAAJPQDAmbwAgPq8AMB/vQAAnrwAoHQ9AAChPABAnj0AALS6AMC6PQDQBb4AIJm9AKC1vQAAnrwAAFC6AKCbPQDAO70AYBw9ACBIPQAA9bsAwFS9AGBWPQAAvrsAIIe9AIARvADA/7wAwKw8AMAtvQBAorwAwE29AMDgvACAxDwAgKI9AEBevQDAmDwAQOm8AGAqvQAAMDoAgF68AIAcPAAgAL0AMPc9APChvQAAwDgA0OW9AIABvQDAxjwAAJ47AMBMPQBgbT0AADY8AFCwPQCA0bwAgKe8AACXuwCgUz0AAFw8AIDqvADAWb0AwII8AAAUPQAAMrsAQNy8AECYPQCgID0AALE8ANCyPQAA9DwAQOs8AEBwPQDAuLwAABA8AICivQAAwLkAgC09AEBjPQDAuD0A8Io9AAAUOwDAvLwAAP08ACC8vQDA4zwAYEy9AGABvQAAmDwAoFo9AACyOwDAsLwAAGQ8AAByOwAAb7wAgBC8AAD0ugAQiL0AgD89AJCAPQCgEr0AACW8AMC2vADgPb0AgMc8ACBWPQAAKjsAAJE7AIChvQDgPj0AQLM8AEDVPACAHzwAABq9AICYvACgOL0AgD68ADCEvQCAyzwAAH28AMCEvAAQnb0AIEW9AED2vADA1bwAAKa8AAB+uwCgdj0AgCG9AEBAPQCgBD0AQCI+AADlvADAfT0AQJm8AIBivQAAzLsAgNI8AKABPQCAqDwAACa8AICiPADgMb0AwKY8AICJvAAAxjwAQNC8AIC4vACAir0AgPe8AGAxvQAgd70AwKq8AKAlPQCANrwA4Co9AOAzPQAApzwAgBw+AADkuwCgB70AAGA9AIBNPADAyLwAAG48ACAfPQAAkrwAAMY7AIBxvADAojwAALC7AEB4vQAATzwAgOc8AAB9PQBAJz0AABi7AAC1PAAAh70AAMc7AID/PACAYbwAYCw9ACCMvQAAhDs=","chunkHash":"741793a912bf801fdaf8ea3be733b8d0f52565f93544e613a610a51082afa158"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 3. Model Architecture\n\n### Base VGG3D Model\n...\n### Adapter Architecture for Fine-tuning\n...\n```","range":{"startLineNumber":65,"startColumn":0,"endLineNumber":80,"endColumn":0},"embedding":"AAD9uwDAGT0AML09APCBvQBAgr0AAMi8AAAHvAAAXTwAIM29AAAXPQAAqjsAAEy7AECzvADAtLwAAMS6AABiOwAAG7wAQNo8AMAXPQBQoT0AgMY8AGB1vQAAqz0AIGQ9AAADvAAA3rsAAC47AIAVPACAETwAAG28AGBIvQAATb0AALK8AADVvACA3L0AgFi8AACcuwAAqD0AgES8AGAIPQAAND0AoL29AADfvAAQhz0AgL48AAB0uwCA7zwAQNW8AAArPAAgCz0AwLE8AADpPACAa70AAHo7AAB4ugAAjrwAAPu8AMA0vQBA5DwAADO8AADIuwDwzr0AoAO9AKAAPQAA4LsAQLW8AGDtvQDAojwAwEc9AACkuwAAwjwAAEa8AABSOwCAHbwAAFU9AMDLvABgRL0AQAo9AAA5vAAgpL0AgLU8AIDaPADAwTwAAJ68AMAxvQDwm70AIKS9AABpvAAws70AwP28ACBWvQBA5DwAAPq7AKCbPQCASj0AwKA8ACCAvQAAEr0AALI8AIBYPQCghj0AAOE8AABCOwDgJj0AAKE9AKDAvQCACT0AwCo9AAAAOgCASTwAIK69AMAjvQAAoD0AADo8AMAMvQAAV7wAADY7AMCWPQCAf70AQN+8AACbvAAAUDsAAFo9AOCNvQCgDj0AAAg9ACB8PQCAWLwAEKm9AIBYvACA17wAgAi8AIC7PABQh70AALw7AECZvQDw0r0A4E49AOAZvQBgpj0AQCI9AIBEvQBACT0AQEI9AIAXvAAgxj0AwIK9AAAoPQDA8rwAANE7AICAvQCgmj0AAAA7AIAavACAVjwAAJa8AADAPAAACT0AAIk7AEBXvQAA1DsAYI89AACiPAAA1rwAwDa9AIBiPQAgHb0AAD47AMA8vQBAJL0AgCE8AGANvQAA+bsAICu9AIAiPABAyrwAcJ29AJCMvQBAnbwAgJE8AAC+vAAATT0AIIW9AIDwvACQnb0AABq7AACYOgDAJD0AgOE8AMALPQAAB7wAAH47AAA4OgAA1DwAwE69AAD7OwCgID0A4Hy9ACC7PQAgKD0AwJ48AIDQPACA+7wAgAW9AKBAvQCgHr0AQMW9AMAovQCgaL0AwMO9AIAAPABgHz0AAKM7AECVPQCACTwA0OC9AIAwvAAACT0AwIY9AACFuwCAXzwAAGe8AGAvPQAgAT0AoBo9AAAWvQDAgjwA4JK9AAC3PADAij0AgCk9AICivACAm70AQKC8AAAwPABA3rwAwJC8ACBfvQBAOj0AAD48AIC/vAAgWz0AwNg8AMBdvQAAJz0AAOE8AACYuwCw670AgGG8AIC2PQCAZjwAAEG8AKByvQAgJ70AgJO8AMDxPABAKb0AwLs8AID2vAAArDoAAJW8AKBRPQDAib0AQD09AKAevQAAtzwAgAS9ACAhPQCAAz0AMKK9AMAnPQAAtLoAgHk8AACQOQBAhbwAoBU9AACdOwBA/zwAgB+8AAA+uwCAxrwAAMe8AACKPQDAdj0AAHK8AIAYvABgFL0A4JQ9AID1PACAhTwA4Bk9AACEugBAmjwAgF+8AMCCPACA/TwAgLm8AADhOwAAPDwA4AW9AEAgPQAAqDsAoB09AJCnPQAARTwAQM48ACAmvQDgq70AwMo8AAA6OwAAlDoAoHS9AICIPABAGb0AAG47AOAQvQBAEb0AgKG8AABKOwCAXDwAgAy9AID2vAAApTsAAMq8AIBMvQCQoD0AgPO8AACIvADghr0AgEG8AICxPADAnbwAAD28AEAJvQAAuzsAAFA6AABhvADg5T0AACC5AABFPQAA6L0AsKO9AGCtvQAAjDoAANO8AIAlPQDAUb0AgAc9AEBlPQBA97wAABm9AAAEPADAybwAYHK9AAAKvAAA0LwAAAW8AGAEvQBA5bwAwA+9AABqvAAAsDwAIIA9AAD4vACAGT0AAK28AAAqvQAAuLsAgCO9AEDxPADAFb0A4OQ9ABDPvQDAwDwAMO29AADEuwDAqDwAABC6AADaPABAhz0AQJ48AGBqPQBAnrwAQAy9AEBFvQAgLz0AACm8AAADvABAw7wAYGQ9ALCSPQDAsbwA4CC9AJC0PQDABD0AgKQ8ANCiPQAgCz0AwPc8AID5PAAAADwAQP08AABYvQAA7DoA4FM9AIBePQDw3z0AAOY8AAA6uwBgO70AACM8ACCdvQAA9LsAQBq9AIB0vQDgK70AwC49AACougCAzbwAAIA8AABAuQAAGjsAACi6AAD7vAAgb70A4IE9AHCNPQAACb0AAF88AABQvQBAoL0AQIw8AEByPQAAyLoAQNY8AIB9vQCAYDwAICM9AACHPAAA2jsAwIi8AADhvACwlL0AAJC5AMA9vQAAXDwAAC28AADAuADAwL0AgK28AAAxPAAA9bsAAOu8AMAEvQAAPj0AgIA8APC5PQDAuTwA4Ag+AICEvACAkj0AABu8AECWvACAFz0AgAE8AAB/PACAVjwAgIC8AAA0PADgg70AAE88AADCuwAAh7sAIBK9AADouwCwsL0AgHa8AKA9vQCAubwAwNy8AADsugAAC7wAYAE9AABcPQAAQjwAUDI+AAALvAAAFLwAYCc9AMA4PQAAsLkAQNs8AOAfPQAAoLwAgAc9AIAAvQAAqbwAgGu8AGBLvQCgUL0AgLk8AOB1PQDAzDwAgB08AMB8PQBgQL0AACE8AEA/PQBAiTwAAEQ9AAB9vQCAIrw=","chunkHash":"eb594ae3771d8252a765b069321ccbc7cba598345ace8d01bc65d6138d5153dc"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 4. Training Process\n\n### Model Initialization\n1. Loads the pretrained VGG3D model from checkpoint\n2. Creates an adapter model with the appropriate classifier size\n3. Freezes feature extractor layers if `freeze_features=True` (default)\n4. Optionally, selectively freezes classifier layers\n5. Sets up optimizer (Adam or SGD) with specified learning rate\n6. Configures learning rate scheduler (Cosine Annealing or ReduceLROnPlateau)\n\n...\n```","range":{"startLineNumber":97,"startColumn":0,"endLineNumber":105,"endColumn":0},"embedding":"AIABPABAED0AYL89AABRvQAggr0A4Au9AMDwPACALz0AcLm9AOCDPQBA+zwAgGq8AMCZvADgCL0AQLk8AABbPABAxrwAsJU9AACWOwBA3z0AYA49ACA+vQCgaT0AoDg9AADSuwCA4LwAwLY8AICBPACAjDwAwM+8AIDZvADAV70AAEK9AMDmvAAAg70AgNi8AABeuwBQwj0AgAa9AADxOwDAwDwAgPW9AKAkvQDgdj0AwIc8AIASPAAAGT0AICW9AADgPAAAHD0AgB88AMAfPQCgbL0AQAs9AAAxPAAATrwAAP27AMCLvQDA/DwA4AK9AADsOgAA1L0AgLi8AADAPAAAFzwA4CO9ABD1vQAAtDwAQIU8AAB4OgAA6DoAAFu9AOAUPQCAKrwAwCY9AMCdvAAAYb0AUIU9AKALvQDglr0AwIM8AABPPADgQD0AgAu8AOBPvQCgur0AMIC9AADeOwBAWL0AIAq9AGApvQBABT0AAEq8AACqPQDgLj0AABg6AEDTvACA3LwAQGk9AEDNPAAQlT0AACY8AICkvAAA+TwA0JI9AFDJvQAAhDsAABo9AAAKPAAARjsAgG29AMDsvABAlj0AANQ6AEC6vAAAa7wAgJo8AMBnPQDQgL0AoBi9AKAPvQAA/bwAQNQ8AFCMvQCAMjwAwNc8AKB3PQCADr0AQBC9AABfvABAEr0AgE28AIB3PABguL0AAIu7AMBBvQAwzb0AkIU9AIAKvQBAuD0AgLA8AIDyvADA6jwAAHs9AEDkvACgjj0AAKK9ACB3PQDAXL0AgAm8AEAZvQCAlj0AAAAAAAAWuwCAKDwAQIg8AAAsuwBQkj0AYAE9AGDDvQAASrsAQG09AICtPACA8rwAYDi9ACALPQBAJb0AAFO8AMBVvQBgbb0A4F09AEAYvQAAlrsAQBK9AECLPAAAEDwA8IW9AMCKvAAAlLsAAAI7AACwugAAkDsA4KK9AIB7vAAwzb0AgAI8AACSOwDAjjwAYDE9AMAhPQAAgzsAAIA5AACWuwAAxDsA4Ea9AACHOwCAVz0AAHC9ACBvPQCgMj0AAEA7AADwOwCgEb0AABA7AAArvAAgXr0AkLW9AGAWvQCgbL0AMKS9AICbPAAALzwAAIy8AKCGPQBAv7wAQMu9AAC0vABgHD0AEIA9AACuOwAAvDsAQMi8AICdPACAeT0AwMY8AMBcvQCArTwAgFa9AACZOwBgXT0AACA7AACYvABAhr0AAOC6AACDuwCAbL0AwPa8ABCUvQAAoj0AQP48AICTvACgUD0AgHM8AKBZvQBAvTwAgMg8AAA7vABg2r0AAAI8AJCZPQCAVjwAQAC9AEBHvQAwgr0AQAO9AEDGPACAKTwAALA6ACBBvQAAT7wAAJi6AGAvPQAgnb0AwB09AED8vADADj0AAHS9AIAxPABAyjwAoBe9AADOPACAWTwAALi6AAB7vAAgBr0AwBw9AEBPPQBwlz0AwJK8AACMOgDA0LwAgB+8AAB7PQBgUD0AAFE8AABhPADgJ70AAFw9AACQOwAAjLoAABg9AADoPAAgfT0AgBI8AEAdPQDATj0AADg6AEDpPACAnrwA0IG9AAACPQAAZLsAwLw8AIBBPQAAlzsAwC09ACAKvQAQsL0AQCw9AMCDPAAAUbwAgCu8AMAfPQAAODsAIFs9AAB3vAAAkbwAADa7ACAJPQAAorsAAFe9AEA2vQAAmjsAALw8AIAAvABAUT0AANm8AAA7vACA4LwAAJ07AIAmPABARL0AwKm8AIA/vQAAHLsAQOA8AACFuwCwtD0AgAy8AOA4PQAACb4AMKe9AEDTvQAAULsAoAW9AKCgPQAAWL0AgA09AIAXPQAA+bsAwFi9AMDIPAAADrwA4Hq9AICNvAAAer0AAI08AADWuwDA5rwAAAy7AABmuwBA7jwAoJc9ACAOvQAAfDwAAHy7AAACvQAAGL0AAC69AOAPPQAAmbwAcLk9ABCBvQBAizwAMPi9AACEuwCA5DwAABA8AMAiPQAgnj0AgDc8AECTPQBAj7wAAEe8AAAjvQAwnz0AAIg6AMAevQDA5bwAIF49AABsPQCgIL0AgDy9AFDJPQBAPT0AACU8AAA1PQDATD0AQAs9AAA3PADAGL0AgJU8ANCYvQAABb0AIGo9AMDpPACAyj0AQJ88AIAsvABAHr0AQNw8ABCUvQCAdDwA4Dy9AAA5vQCAD70AAHk8AIBxPACgA70AADS7AACsOwAA8LoAAJq7AED9vACwhb0AsIc9AMBsPQDAKr0AACi6AABXvAAAbr0AACS7AIDXPABAzDwAAAo9AMCjvQAAjjsAAPI8AMCMPADAi7wAgHG8AICtvACgSr0AAOS6ANCDvQBAzTwAwDO9AADtvABA0L0AcIC9AMCWPADAqrwAQIG8AMCpvACAZT0AQEu9AHCRPQAAYDwAsAw+AKABvQCgSz0AgDS8AECsvACgAD0AAFM8AIAbPQAAzDoAgGy8AADZPADQg70AgAw8AMDavAAAPrsAAAC9AIACvQBAz70AQCm9AADlvADAE70AAAq8AMCRPAAAQDwAIFo9AGAnPQDAxDwAACY+AECYvAAAPTwAQMI8AIBFPAAAFTwAQBQ9AEADPQAAnLwAALi7AIANvQBAvrwAADy8AGBMvQDA/rwAwK88ADCOPQCAFj0A4BW9AGCkPQAAGr0AAFS7AED9PACAtDwAgEc9AEBlvQAAhDw=","chunkHash":"49ed8c0e4828acfa09a34a46be3d5969df9d5a365ca04953c854a5e63797f8a9"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 4. Training Process\n...\n### Training Loop\n1. For each epoch:\n   - **Progressive Unfreezing** (if enabled):\n     - Initially all feature layers are frozen\n     - Progressively unfreezes groups of layers every 3 epochs\n     - Allows gradual adaptation of the pretrained feature extractor\n\n   - **Training Phase**:\n     - Processes batches with error handling for shape/NaN issues\n     - Optionally uses mixed precision training (with `amp.autocast()` and scaler)\n     - Performs forward pass, loss calculation, backward pass, and optimization\n     - Tracks training metrics (loss, accuracy) for each batch\n\n   - **Validation Phase**:\n     - Runs at specified frequency (e.g., every epoch or every N epochs)\n     - Evaluates model on validation data with error handling\n     - Calculates validation metrics (loss, accuracy, F1 score)\n     - Can force CPU validation to avoid CUDA memory issues\n\n   - **Model Saving**:\n     - Saves checkpoints based on best metrics (loss, accuracy, or F1)\n     ...\n```","range":{"startLineNumber":106,"startColumn":0,"endLineNumber":126,"endColumn":0},"embedding":"AEDNPABAnjwAsPE9AMBUvQDgJb0AABu9AOAIPQBgjz0AAH+9AKB7PQAgTT0AANO7AOAXvQDA4rwAwMg8AGBsPQCA+7wAkIg9AIAQPACgqD0AYAg9AKCLvQCwoz0AgIo9AECkvABAF70AgGE8AIA5PQBA1zwAgIy8AAC3vABgPb0A4Dq9AECqvACAYr0AQCq9AIAOPACQnz0AgJm8AABjPADgGj0AoPe9AMA6vQBgJz0AAHo8AABgOgBA/jwA4Dq9AACQOQAAXT0AANi6AOCTPQAQjb0AYBM9AIAwvAAA07sAAHi7ANCzvQDgCT0AwD29AIA9PABg270AAHg7AIBaPAAADjwAgC68ANCrvQDA1jwAgPY8AADsOwCA2DwAYA29AKBOPQAAkjsAIHk9AADBvABAOb0AADo9AMD2vABQx70AAOw7AIAmPABgBD0AAJe7AIAFvQBQ570A4Ja9AABsvABgRr0AwLy8AAAWvQCgTT0AwIa8AKCNPQAgRD0AgDw8AADDvAAAMbwAIJY9AAAuPABATj0AgGU8AACkvAAAqDoAIKo9ADDTvQAAhjsAoEU9AIA1PAAAVjsAkIm9AKA6vQCAbT0AAKm7AACmvABAurwAwJ08AGA7PQCAJr0AwDW9AEAjvQBANr0AAG48AIB2vQBAmjwAAIA7AGC+PQAAu7wAYAC9AACOuwCACL0AAJW7AIChPAAQzr0AAIK7ACB5vQDAtb0AgGs9AADGvACwnj0AALI8AMCovAAA7TwAIHU9AAATvAAAaT0A4HO9AOCPPQBAR70AACI7AEDvvADApz0AANw7AIBqPABAsjwAABA8AMDDvADQqD0AADQ8AKCtvQAAY7wAQEI9AMDnPAAAsLsAwP68ACAJPQDALL0AwLG8AOBfvQCQg70AIIc9AGCJvQAAn7wAALi8AGBQPQAAgDgAYJK9AGAOvQCAWrwAwMm8ACAfvQAAg7sAQI69AABHvAAw2r0AAKM8AADJPADgGT0AAAQ9AAAbPQAAhLoAAJy6AAA9PAAAnDsAwOq8AAAevABAdD0AoCu9AEAcPQBgBz0AAH67AIBSPACAf7wAgLq8AICiPACwkb0AwKq9ACBzvQDAWL0AAMK9AABsOwBgRT0AAM27AKB5PQCAyrwAoMK9AAAVvQBgOD0AwCo9AABGvAAAhTsAAEm8AEDgPAAgkD0AgBg9ACA6vQCgMj0AwJO9AAAHPAAA3TwAABu8AAC/uwBwp70AACC6AAAXPABgkb0AANe8AKBTvQBAij0AEIE9AECnvAAAlj0AAE88AOAfvQCAJzwAALM8AIAJvQDAz70AACI9AACSPQCAFzwAgDC9ACBvvQDgir0AgFe8AADcuwCAgDwAANi6AOAdvQAAELoAALC8AMA9PQBA1r0AAOw8AMDevADgPD0AoCa9AIDZPABAuzwAABu9AAAmOwAAPDsAAPM7AAAguQCAbLwAAPk8AGBhPQCAuD0AgDy8AECkvABAtLwAAIW7ANCAPQBA2TwA4AE9AICmPACgZL0AYB09AIDNPACAJ7wAgNY8AACRuwBQhT0AwMc8AIARPQDAQT0AAM87AAAyPQDAgbwA4Fu9AABWPAAgFb0AAEK7AAB6PQCA37wAQB89AMAKvQDQmL0AIAI9AAAkPACAN7wAgAC8AOAIPQAAULoAQDk9AACdvAAA0DkAwJu8ACBmPQBABb0AwBK9AJCIvQCAmLwAAMg8AIDwvAAAJD0AAPC7AECfvAAAsbsAAKG7AADfOwAAWr0AwMW8AMBPvQCAS7wAAPA8AACNuwDQhz0AANw7AIB8PAAA8r0AMJC9AGDJvQCACrwAAIi8AJCfPQDgJL0AQAY9AEBQPQBAvzwAgE29AICCPAAAhLsAwDq9AACYOwDgN70AAEC6AECePACA8bwAgNm8AIAEvAAAm7sAoLU9AMCBvAAAxjsAAAw7AADAvABAC70AQJ28AABvPACAbbwAoKA9AABuvQDA6TwA4Py9AACMOgDA5TwAgJk8AGA5PQAgfj0AAPk7AACqPQDgJr0AAAA5AMCwvABgqT0AAKs8AEANvQCA1rwAwCI9AOA6PQDgL70AAD29AIBgPQAAgT0AAAY7AADePACwlD0AwAs9AIB3PABAEL0AgEg8ADCovQCALb0AwGI9ACA1PQBQsD0AoDA9AAAauwAArrsAQOE8AAB4vQAAFDwAAEO9AOABvQBA/bwAANq7AED9PABgI70AQLI8AABbvACAFT0AwNG8AMDNvABAlr0AUIw9AFCCPQCgHb0AgDG8AECVvADgH70AAOC7AIA7PAAAejwAgEk9AKDCvQAAbjsAwIM8AAACuwAAGLwAAMw6AECrvABghr0AAHy8AFCSvQCgBj0AgHq9AMD6vABAn70AQFG9AAC2PAAAjTsAAO07AEBrvQCAOz0AwFC9AHDEPQCAjzwAcAI+AECCvABgPT0AQJK8AMDTvACAJT0AgBw8AMAtPQAAgDwAAAG8AABFPACATr0AABA7AACtvAAAYjsAAIe8AGAevQBgyL0AwHS9AACfuwAA5rwAwIS8AADdPACAGDwAQNo8AEDOPAAgAT0AQAQ+AGAUvQCAE7wAAA49AABoOgAAqLoAADk8AIANPQDAnLwAwOa8AADFvADgNr0AACa7AOASvQBAkrwAAEg9APCEPQBA1zwAwOu8AACSPQAgcr0AALU7AADzPABAsjwAwDI9AGBtvQAAaDs=","chunkHash":"20f736974dfa5d836a4887c0870928e5c9c11d77bc31a31d0a93830fda4c234f"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 4. Training Process\n...\n### Training Loop\n...\n     - Implements early stopping if no improvement for N epochs\n     - Updates learning rate using the scheduler\n\n   - **Memory Management**:\n     - Clears CUDA cache periodically\n     - Handles out-of-memory errors gracefully\n     - Implements monitoring of system and GPU memory if requested\n     ...\n```","range":{"startLineNumber":126,"startColumn":0,"endLineNumber":133,"endColumn":0},"embedding":"AADMugBA5zwAML49AOAZvQAARb0AADG8AOA1PQCABz0AIHm9AKBqPQCgQj0AAIY7AAAEvQBgCr0AwBc9AID4PADA3bwAQFY9AIAGPQCglj0AgPc8AIAVvQDQsT0AoHU9AACAOgAgL70AQA49AABgOwAAnTsAgOS8AIAPvQCAZb0AYFq9AEBbvQDAM70AgE+8AABQugAwuT0AwNy8AAC4OwBA3TwA6AG+AMBpvQCgNz0AgFQ8AABbvAAA0LkAgGK9AIBHPADgJT0AACy8AOAAPQCQlr0AoG09AAC2vACADLwAgBG8AAA0vQCAUz0AIDi9AICoPADQ2b0AAPq7AAC6OwDAizwAgG68AHC0vQAA1DoAoCI9AAAmPAAgFD0AAOG8AEA1PQBgGb0A4AA9AEC5vAAA37wAwLw8AABnvACgZr0AAPw8AABnPACAdT0AAJg6AIAcvABQy70A4LK9AICNvACAN70AALq8ACBvvQCAUz0AgCS8AKCxPQDgVD0AAPC6AIBqvACgKb0AkJk9AGBDPQBAIT0AQI08AEDBvADAijwAcLQ9AMDFvQAAq7sAIFM9AACPOwCAnTwAoK+9AGBGvQDgaT0AAHY7AIBjvACAkrwAgPc8AFCAPQBgWb0AIBe9AAAcvQDgIr0AgO88AICCvQDA2TwAgKk8AODBPQAA6rwAYGa9AAAwugCgC70AgIS8AACTPAAAuL0AADG8AEBgvQCAjL0AwPk8AAAivABgcj0AYBk9AMAJvQCAAD0AsKY9AAC5OwDgoT0AYHq9AMBkPQBA2bwAAEo7AADDvABQqT0AAAA6AADKuwAAhDwAwNK8AIC4vABwqT0AgBK8AOCEvQCAGLwAoDM9AKA1PQDAgbwAADW8AMAMPQDgG70AwKK8AKBGvQCgEb0AgJE9AKCFvQAAKb0AABe9AAD5PADAwbwAIGq9AMA4vQAAfLwAIBc9AMDmvAAAOjwAMIG9AABwOwAAvr0AQO48AAArPADA9TwAAOC6AIDvPAAAcrsAAPw7AACMuwDgED0A4I69AICsvAAgHT0AQFq9AEARPQAACzwAAJG8AED0PAAAYrsAgMi8AAAfPADwnb0AYOW9AOBuvQAARL0AgJm9AIClPACgSz0AgBc8AABCPQAAG70A0K+9AAClvAAAZj0AgGE9AIA3PADAtTwAAIK7AECRPADApz0AoEc9AIASvQAADz0AoD69AECJPABgcD0AwJc8AACBOwAAgL0AgFq8AIC7PAAgGb0AQCW9AGCJvQCAdD0AgH48AACOvACgjT0AgHY8ACBcvQAAETwAwP88AGAfvQCw570AwN08ANCTPQAAo7wAIFS9AFCIvQBAYL0AYEy9AIAAPADA6DwAAMY7AICYvABA+bwAAEg6AICSPACAt70AgLI8AIDbvADAQj0AgC+9AAADPQAgVD0AwEe9AADAOwAA7rsAwJQ8AICDPACAHbwAAOU8AKAjPQDwpz0AQK28AECNvACAy7wAgFy8AKCtPQDAGj0AwA09AADqOwBgEb0AwGc9AEA6PQAABjsAAD28AIA2PABA7zwAwOY8AEBFPQBAET0AAB67AEDbPAAAYjsAQEy9AIDQPAAAv7wAALm8AHCXPQAAzbsAgKo8AMDIvACg3r0AgIY8ACAVPQDgCL0AEIK9AIASPQAgGj0AgOQ8AECOvAAAgrsAADq7AEBdPQBgWr0AAD67AMCGvQAAMjsAADk8AEANvQBAVD0AAIy8AACFvACgU70AwN28AABNPACAPb0AgCq8AICavAAAFDsAAK67AAAXvAAgkj0AACC5AMCTPAAgAL4AAH29AMDavQAAi7wAYAq9AKBcPQAAKb0AwNc8ALCTPQAAmzsAIDS9AABwOgAAULoAEJO9AADQOQAgab0AAAS7AMC3vADADb0AADW8AMDPvAAAKzwAkKo9AMC3vADgDj0AgCU8AEC1vABgL70AAN67ACANPQAAhDoAUJc9AKCZvQDAIz0AEAC+AACkOgCAgj0AAAY8AMAIPQAQoj0AAFQ8AMA2PQDA6bwAALQ7AIC0vADgvT0AAMg8AAD0ugCADL0AQIw8ACBXPQBAEr0AoFq9ACChPQCAOj0AgAY9AMD+PACAiz0AYDY9AACkugAAobwAACI9AEBUvQCAsLwAwCk9AKAgPQBQ9T0AIDI9AAB8PABgHr0AAKo8AIBKvQAA7LoAoBW9ACAcvQAggL0AANi8AABqPAAALb0AwNc8AOAmvQDA+DwAoBC9AID+vABAh70AIJ09AOA7PQDA7rwAQIc8AABEvQCAkL0AQJk8AAA6PADADT0A4Dk9AFCIvQAAKrwAAIM8AACAOwAADrsAwLG8AMD2vADApb0AAHA6AMBtvQAAijwAANu8AAAsvADgVr0AgGG9AGAPPQAAEDoAgPU8AACzvADAmDwAQPu8ANDTPQAAn7sA4ME9AADFOwDAdz0AAMq8AGAjvQCgNT0AIAU9AACIOwCAoTwAgH68AABWPACQjr0AAEc8AADzOwCAwTwAIEe9AIDavACAtb0AIDC9AOA7vQDAuLwAAFS8AABmPABAizwAwCo9AOCDPQDgET0AiCY+AICVvAAAprsAAEo8AIA5PAAA07sAwLE8AMDZPADAprwAYCO9AICjvABAAb0AgCS8AKAGvQBAFb0AABc9AECEPQBAyTwAwJW8AHC2PQBAT70AgAO8AIAqPACgMD0AAIU8AEDwvAAAujs=","chunkHash":"09a13e1cde9dceac0e21eb8c7bcfcb6f0eec380d2755c8504440eb991234e510"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 4. Training Process\n...\n### Evaluation\nAfter training, the model is evaluated with enhanced metrics:\n1. Standard metrics (accuracy, F1 score)\n2. Confusion matrix (both raw and normalized)\n3. Per-class precision, recall, and F1 scores\n4. Top-2 accuracy for multi-class problems\n5. Visualization of results (plots and reports)\n\n...\n```","range":{"startLineNumber":134,"startColumn":0,"endLineNumber":142,"endColumn":0},"embedding":"AIBMPACgWT0AEMU9AOBCvQAAJb0AgJK8AACIugDgGj0AQFa9ACBqPQBgFz0AANi8AOA8vQBgCb0AALI8AAAWPQBAjrwA4BE9AABKPABwnD0AAIE8AEA6vQBA2D0AgMs8AADUOgAAu7wAoC89AIAGPAAA8jsAAMq7AED2vADAOb0AIBO9AKB+vQDQi70AQIG8AMDGvABAqj0AAM67AEC5PACAmzwAQHC9AEAavQCARz0AgL08AIDKvADAfT0AwPq8AIAcPABAPz0AgJ68AGCFPQBAUr0AgLY8AIAePACA6LwAAPa8ABCEvQBAQz0AIC29AADhuwAAyb0AQJC8AMCSPABAkLwAAGm8AIDavQAAejsAgGU9AICRvAAALT0AAEq8AIC1PAAAIDkA8JI9AAD+vADAB70AQL48AABhvACgub0AgNQ8AADvOwAgED0A4De9AIAYvADgpb0AYN29AOAFvQCASr0AwEm9AACZvQCgdD0AAN67ALDFPQCALj0AgGs8AEBEvQBAu7wAwIA8AKAgPQBA0DwAwOE8AAC8vACA/TwAgLA9ABCLvQAA7jsAACs9AIDbPAAAuLoA4Hu9AKADvQAAVjwAAFU8AIC0vACAOLwAAHE8AICaPADgPb0AwLK8AOCJvQBAkrwA4DA9ACCcvQDAkjwAALQ8AKB8PQCgDr0AwB29AOAQvQDARr0AAAK7AGAAPQCQuL0AAAk8ACBSvQCgl70AYEY9AMBWvQBwqD0AQIk8AICovAAAmzsAIGo9AICIvAAgaz0AMKS9ACByPQBgBr0AAGE8AAAJvQDAvT0AQPy8AACcOgAARLsAAGe8AACbPAAwjz0AACC5AHDZvQDAhzwAoDY9AIAXvAAAa7wAoAS9AMBcPQCgJ70AAA68ACBkvQDAKL0AQJo8AGCGvQAAzzsAEIO9AAD9OwAAubwA4Lq9ACA5vQBA6LwAANC6AEBkvQDA3DwAYIW9AAD7uwDQhb0AgCW8AADhOwDgGD0AoAQ9AABPPQAALrwAANo7AMCSPAAASLwA4JC9AAAOvADAKD0AQCO9AEAMPQCAST0AAEg8AICJPACAiLwAQPa8AICxvAAAHL0AcNK9AACYvQDgj70AsI29AIBfPACAeT0AgFk8ALDBPQDA6rwA8NW9AEAzvQBgiT0AUIg9AACTuwAAALsAwIO8AOAmPQBA2zwAgBO8AIAxvADgZD0AoFS9AMDiPABAyTwAwME8AACcugCgxL0AAMI7AAByPADgPL0AAAAAAEA+vQCAej0AAPQ7AACouwDAaj0AIAA9AADNvAAAIz0AgJE8AAA+vQAA3L0AgDU8AFCMPQAAlDsA4D69ACBtvQBgir0AAI28AAASvACAoLwAAL48AKAuvQAAFLsAoBu9ACBBPQAw2r0AgJ08AICIvQCA8DwAwFq9AACsOgCAFzwAYHm9AIACPAAAMbwAQPE8AEDNPADAlrwAAPM7AOAjPQDwiD0AAIG7AABFvQAAQbwAAMA4AKB8PQBAPz0AAFY7AADEugAAzrwAAKU8AEA1PQCAvTwAgC09AABUOwDAkT0AAHA6AIDrPABgOz0AgFc8AAAOPAAA+7sAoDe9AIC7PACAPrwAANS7ABCDPQDAj7wA4D89AADDvAAArb0AAAk8AACYuwCADbwAYDe9AEDoPACAozwAANc8AKBZvQAAaLoAABW8AID6PACAeLwAABy9AGAPvQAAkDwAAOk8AECEvQAAhD0AwE69AAA+uwBA6rwAALY7AEDlPADAD70AQJi8AMCpvAAAtDsAgLI8AADHvAAAyT0A4BW9ACA7PQDQ/70AUNy9AFDHvQAAyLsAALM7AICiPABgLL0AQD89AOBRPQCAbrwAYAi9AACkOgDAhbwAYDu9AACsOgBgXb0AwBO9AIADPAAAx7wAgGu8AIDJvAAAvTsAoJI9AACMugBACz0AACk8AECDvADAKL0AQAa9AEDvPABAPL0AcNc9ADCNvQCA8jwAQAq+AADauwDA4zwAALc8AIDdPACgpj0AQLI8AMB6PQBAkr0AwJy8AOBGvQCguT0AwIo8AECTvAAAl7wAwIU9AAAcPQCAEL0AwEK9AEBdPQBgPj0AwAg9ACBgPQCAjD0A4FE9AIBpPABAPr0AACU9AABwvQCAqLwA4Fk9AECEPQAAdz0AAKA7AAAYvACA0bwAgDQ8AKBvvQAAlDsA4CC9AEBkvQCgNL0AgLE8AEAPPQAgGL0AADK7AIArvABAuzwAAOy6AAASvQCgl70AwEk9AKAfPQDAK70AoAA9AOAHvQAwkb0AAJ87AAAkPQAAQDoAwCU9APCHvQCApTwAQLI8AKAPPQAAqzsAgBg8AGA1vQCAML0AoHC9ANCHvQAA/TwAAM28AOAxvQBAT70AQCC9AMAKPQCADLwAwMO8AMCVvADAijwAwBW9AKDcPQAAxjsA0AY+AICtvADAUD0AgIa8AAADvABAZT0AAFI8AAB9PADAujwAAKy6AED/PABwkr0AADY8AOAmvQAAmDsAAMG8AIAgvADgur0AAJe8AABjvQBAkrwAgLK8AIDBPACAmrwAAHo7AGBTPQDAszwAgCI+AIC7vABAwrwAABA8AEDdPAAAXTwAwJQ8AAAbPQCAorwAQNK8ACAavQCAHLwAwKS8AABNvQAgD70AAC47ACBQPQCAQTwAAMc7ACCaPQBAmLwAALs7AOAQPQAAojwAIIQ9AGBkvQDAoLw=","chunkHash":"69164a03e276e6e5035787f90294d39c0b72eced1c20f1e250f10adc5f35ac15"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 4. Training Process\n\n### Model Initialization\n...\n### Training Loop\n...\n### Evaluation\n...\n```","range":{"startLineNumber":97,"startColumn":0,"endLineNumber":135,"endColumn":0},"embedding":"AADWuwBgPD0AILY9AGB8vQBgZb0AwMO8AEDBPACA7zwAcKK9AKBSPQDAVD0AAB47AEClvABgEr0AQJU8AID0PAAAZrwAICY9AMC7PABgsT0AQOM8AMBzvQDQkz0AoH09AACQvAAAk7sAQIk8AIAxPAAAtLsAgHC8AMAmvQCAe70AQMK8AABxvQCwh70AADC7AABPvADArT0AAI68AIB3PADA5DwAYM69AEDOvAAAiT0AgK08AICJvABA+DwAwCi9AMADPQAA9TwAAKc8AMDkPABAar0AgOM8AAADvACAmLwAQNa8ACBIvQBAJz0AgMi8AIC5PADwy70AwJW8AGAFPQAA+zsAAAi9AMAEvgAArzsAID89AACIuwBAvDwAwMO8AMCfPAAA8DoAQGU9AEDevADgYb0AABE8AACcvACgq70AAAg9AEDnPABgCz0AwK68AACxvACAtb0AkM29AACAvACAbr0AgM68AHCHvQCgHj0AAE47APCrPQDgbT0AAD48AKCHvQAA3rwAgBE9AKAXPQDAFz0AAME8AACRuwAA/DwAoLI9AIDAvQCA2TwAoEM9AIBqPACACjwAsIS9AEA0vQAgnT0AAEi6AMCPvACAy7wAwOs8AAAyPQAAir0AoDa9AABGvQAAursAwBs9ALChvQAAqzwAwJc8AOCYPQCAVbwA4FG9AIBvvACACL0AwLi8AABQugAQqr0AAC67AOBVvQCAwL0AwHQ9AIDdvABAyj0AgCA9AAC0vAAAIjsAcIM9AACivABwlT0AQJG9AABXPQAgEr0AQLC8AEBvvQBQiz0AgC68AAD5OwBAoDwAgNS8AAA2uwBgOj0AANA7ADCOvQAApDsAYD49AICfPABAjLwAIGm9AOAxPQDA2LwAAF67AAANvQCgSb0AwPE8ADCHvQCApLwAgDS9AADkugAAKDsAgI69AEBxvQDAobwAgOQ8AIDFvAAgPD0AIIS9AIAxvAAAnb0AAAw7AAAKPAAgAT0AgL88AEBEPQAA27sAAMA6AABoOwAASjsAkIK9AAD0ugCATj0AgEm9AFCHPQCgPT0AAEU8AADAPABA7bwAgB28AID5vACgD70AINi9AACCvQDgjL0AoMC9AAAyPADgDz0AAHA6ABCCPQCAlbwAMNm9AMC4vAAgXz0AsIc9AAB+uwCASzwAwNC8ACALPQDwhj0AgAs9AAAXvQDgCz0AII69AECdPADgej0AAB49AAC+uwAAlL0AABy8AIAsPADA4rwAwIC8ACBQvQDAST0AgBE8AACRvAAAeD0AAPc8AIBDvQDA0DwAgHY8AMCKvACw1b0AAKs7AICjPQAAADwAANe8ACBbvQDAQL0AgIy8AEDSPAAA27wAgCE9AKAkvQAAAbwAgJG8AEDXPADAtL0AgAk9AOBivQDgRD0AwOi8AADxPABAIz0AQJK9AEDAPAAApLsAQL48AIByPACAhbwAALU7AIAWPQCgVD0AgNK8AICAvAAAibwAAI27AGCBPQAgFT0AAGg8AADQugAAD70AoB09AGAfPQCAADwAwMM8AECoPACAQz0AAGo7ACAaPQAAID0AgE08AECVPAAA3DoAACC9AIDPPAAAKjsAgE48AEB+PQAAnDoAQPc8AIAHvQCwzr0AYBE9AICvPAAAi7sAIDO9AIC4PAAAlLoAwNQ8AMAEvQBA8rwAAEg7AMDiPACAb7wAgM28AMASvQCAsTwAAIs8AMBUvQDAlj0AAG28AECdvADAWb0AAIc7AADvOwCAOr0AgLi8AADAuwCAZTwAAL+7AECTvAAAtD0AABK8AAAGPQBQCb4AQLO9ADC+vQAA+bsAYB+9AADkPADAOr0AgO08AMAwPQAAiLwAAE69AACjOwCAcbwA4I+9AAALvADgX70AgD28AACqvABAobwAgCK8AICjvABA0jwAUIg9AACfvADACj0AgFU8AABxvACAUb0A4AK9AMA3PQCAobwAILg9AACrvQDAuDwAGAC+AADzuwCA9jwAgCw8AADlPABgvj0AANA6AIBZPQDAAL0AADC8AMBzvQAQoT0AAFY7AAAyvAAA+rsAAF89ANCaPQBAzLwAYBK9ADClPQDgcj0AQMY8AABaPQAwlD0AwNk8AABIOgBAjLwAgCU9AOBIvQCAHLwAQHQ9AAAoPQBgzD0AAC47AIA9vAAA4LwAAJ47ACBIvQCABDwAAAK9ANCKvQBAPr0AwLA8AAC1PADA47wAAKs7AAB5vAAAvTsAALQ6ACBRvQDglr0AEIk9ACBWPQAAE70AAOE8AAAIvQBQu70AANQ6AGBcPQBAjjwAQBo9ADCyvQAAmbsAwOI8AACdPAAAgDkAAMq7AIDDvACQjr0AgJm8AGB7vQAAojwAAKy8AEClvADwwr0AoAu9AKA9PQCACrwAAGC7AIAlvQAAJT0AAG47AIC3PQAAPDsAAP89AADWuwCgWz0AAJQ6AABAvABgLD0AALC5AADWPACADDwAAKa8AABkPADQoL0AAJ48AIAqvQAAHDsA4Be9AMC7vAAAub0AwPS8ACBNvQCAJL0AQNK8AAB+PAAA3DsAgAM9AMBQPQAAWDwA6CQ+AGAjvQAAYLkAwNw8AMD6PAAAYzwAIBo9AEADPQDApbwAAIW8AMClvAAAEr0AADA6ACA5vQCgPr0AgDY8AIByPQCAODwAAJA6AGCqPQCAz7wAgEg8AOAKPQAA9jwAQDg9AMB0vQCAC7w=","chunkHash":"7e267fe6d9304689480e82b32e36a4d7882e7008da93ae334f5c5f0c5a84f120"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 5. Key Features and Optimizations\n\n### Memory and Performance Optimizations\n1. **Lazy Loading**: Only loads necessary data when needed\n2. **Caching**: Keeps recently accessed volumes in memory\n3. **Mixed Precision Training**: Uses 16-bit floating point for faster training\n4. **Error Handling**: Robust handling of shape issues, NaN values, and CUDA errors\n5. **Memory Monitoring**: Optional real-time monitoring of system and GPU memory\n\n### Training Enhancements\n1. **Progressive Unfreezing**: Gradually adapts pretrained features\n2. **Early Stopping**: Prevents overfitting by stopping when validation metrics plateau\n3. **Learning Rate Scheduling**: Adapts learning rate during training\n4. **Data Augmentation**: Increases effective dataset size and improves generalization\n5. **Margin Parameter**: Reduces edge artifacts by discarding edge pixels\n\n...\n```","range":{"startLineNumber":144,"startColumn":0,"endLineNumber":158,"endColumn":0},"embedding":"AOAFPQDAzjwAoLE9AICrvACAFr0AQL+8AIDePADAlD0AAIu9AOB8PQCgDT0AAO67ACA4vQAAK7wAAE88AMDDPACA+LwAwP48AEDBPACgcD0AQCc9ABCfvQAgqz0AQGg9AAAeuwAA8bwA4B49AAB4OgAgNj0AAOu8AMDnvADAZb0AoD69AIBCvQBAer0AwOO8AADgOwDQhz0AQK+8AABAugAACD0AUAO+AOAuvQDAzTwAIAw9AIBqvAAgSj0AIHK9AMD6vACQhz0AAES8AIBDPQBgrr0AwPY8AAAwOwAAKLoAgAO9AOBRvQBARD0AIB69AIAbPADQ5L0AAPq8AAA4OgCARjwAgF68AECFvQAA1DwAwIU8AACauwAA9DwA4Ci9AOAZPQBA2rwAIFQ9AACgugAA67wAQI49AAARvADgc70AAGE8AIAFPABgJD0AQJG8ACA3vQCAvr0AwK29AIANvQDgPr0AALE7AKAGvQCAQjwAgMC8AKCkPQCAtzwAANg8AADYOgBAorwAYJ09AIBbPQBgkz0AoAg9AICQvABAvjwA4Ms9AOCuvQAAkDoAgNw8AACXPACA5DwAIMq9AKASvQAAxDwAAJU8AEAIvQAA0rwAAGo7ADCPPQAgV70AwPq8AIB+vQAgBb0AgAU9ACBcvQBAwzwAAHA8AACtPQDARL0A4Cy9AAD/uwDA0LwAAAA9AHCLPQAwsb0AAIe8AICkvQBgy70AwPE8AED4vACgfD0AIAM9AKAqvQCgUT0AQHc9AIAYvAAAdD0AIBq9ACBfPQBA/bwAwJU8AKA9vQCgvz0AAKQ6AABIvQAAJrwAAJm8AEDOPAAwqD0AAKk7APC2vQAA97sAYEA9AGAGPQAArDsAAKe7AEAOPQCAYL0AwJC8ACBuvQBwir0AYHw9APCFvQAALrsAgES8AOAKPQAAI7wAEJ+9ACBpvQAACLwAAAC7AGBrvQBgAz0AYEe9AIDDPADQ1L0AwIE8AADAOQAgLz0AgEQ8AAB7PQAAcrwAADw8AABouwCAtDwAYCe9AMD8vABASj0AMJm9AECbPAAAfTwAQLu8AMDsPAAANLsAwMa8AIAuPABQmr0AEOS9AADvvADQn70AIJu9AAC+uwDAeD0AgKk8AACbPQAAtDoAYMC9AMCevAAgND0A4Ik9AAD8OgCABrwAgCa8AAD/PADAUz0AQCE9AMA3vQDgPD0AIFm9AACHuwAgJz0AAFY8AAD7uwCQpb0AAIc7AICgPADggb0AICW9AGBRvQBwgD0AIEs9AABgOgAAaz0AgIe8AIBFvQAAyDoAAC09APCbvQDg870AwKQ8AGBrPQAAgTsAoDy9AKBcvQBAh70A4Ey9AIBXvAAAdTwAgDS8AED0vAAA/DoAAFe8AADkPADwnL0AAJ88AMCcvADgHz0AgOq8AGBGPQBAtjwAIC29AGBrPQAAn7wAgAg8AAAyOwDAvrwAYGE9AEC3PACgpD0AAJK8AACGuwBgX70AAPW7AMCEPQCgFT0AADk8AIBhvACA/bwAAFs9AECHPABAzLwAAAk8AAAWOwDAcj0AYAM9AIAjPQDgaT0AQOm8AADpPAAAcjsAoIW9AEDkPAAgK70AAEO8AEA0PQCADjwAAPc8ACAsvQBAz70AADQ7AED2PAAAuzsAwNa8AEDVPABAqjwAANS7AADCuwCAZTwAICu9ACAePQDAeb0AwJi8ADCUvQCAl7wAALQ7AEANvQCA6zwAAM68AAB4OwDAvrwAABa9AMDLPAAwh70AALO8AFCPvQBA17wAAEA5AICTvADgcz0AAH68AACkugCw8b0AgDy9ABDCvQCAB7wAgEy8ACCOPQCAr7wAICw9ACBLPQCA/zwA4BK9AADZOwCAfzwAAFm9AACNOwBAY70AwJ28AIBdvADAdb0AANy7AADAugAAozsAIIE9AAB9vABAAj0AAGk8AADsuwAAtDoAAAY8AGAePQCAh7wAcOM9AGChvQAAbjwAoOm9AADQugBAJT0AwMU8AGAjPQAgdj0AACA7AEA3PQBAr7wAAMe7AACTuwBwkT0A4Bg9AMDrvADALr0AYH89AACCOwAAybwAAHe9AICXPQDgXz0AwEQ9AIDtPADgUj0AIDg9AIBoPACAHbwAQLA8AABPvQCAV7wAAAI9AIDaPAAwxT0AQHI9AADGPAAAMLwAQNU8AGBCvQAADrsAQKG9AGBLvQDAfr0AgD88AIB9PADAKb0AQDY9AAAmuwCgDz0AoKS9AKANvQDwh70AEJ49AGBmPQBgGr0AAPM7AOBHvQDgiL0AAHQ7AEDnPAAAmjsAIEQ9AGBtvQBA0rwAwBg9AADdPAAA57sAIDe9AMAbvQBAkL0AACA5AIB1vQAAvzsAIEW9AIBfPACAYr0AwDu9AECZPACAEjwAAOA5AIB8vADAED0AgBu9APCtPQCAdLwAAOI9AADmvAAALT0AAD28ACA2vQCgBz0AAPg8AABPPAAAgDwAgCS8AABePAAgML0AALc7AIAJvAAAFzwAwOa8AIABvQCAw70AgCG9AEDivAAA/rsAgCe8AOAZPQAAbjwAACs9AMChPADgRD0AEPw9AECePADAtLwAAA08AIAzvACAM70AAIc7AGBSPQAAq7wAwOa8AIBfvAAgMb0AgPu8AACQuwAAo7wAwJI9AECJPACAljwAAMi7AIB/PQDAYr0AAJk7AMDrPACAejwAgPQ8ACAKvQAAkzs=","chunkHash":"023e0afae2ed6cb99df3558034997938bf0d070895afd412e4f6a35e2f18ca8f"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 5. Key Features and Optimizations\n...\n### Fine-tuning Controls\n1. **Selective Layer Freezing**: Control which layers to freeze during training\n2. **Reduced Classifier**: Option to use smaller classifier layers to reduce parameters\n3. **Class Filtering**: Train on specific class subsets\n4. **Sample Percentage**: Control how much of the dataset to use\n5. **Batch Limiting**: Restrict batches processed per epoch for debugging\n\n...\n```","range":{"startLineNumber":158,"startColumn":0,"endLineNumber":165,"endColumn":0},"embedding":"AAB1PABgAD0AIJY9AGAgvQDgD70AgM68AEDQPAAQjD0AgKm9AOBYPQAACT0AwOS8AMAcvQAALjsAwJw8AABougDA9bwAYGI9AAA/PABAqj0AIAQ9AOCEvQAgjj0AoDQ9AADRvACAm7wAACo9AAAVPAAgNj0AgES8AMAVvQCghr0A4C69AOBOvQBQo70AACW9AABuPABQmT0AAOq8AABEuwCAGj0A+BK+APCHvQDgLj0AwOk8AAChuwAgfD0AYEK9AACfuwBAQz0AANA6AIANPQDgpL0AANM7AMCJPAAAnjsA4Gi9ACAnvQAQgz0AwIm8AAA8vADAtr0AgGi8ACAaPQBAlTwAAPA7AADbvQCAuTwAwAk9AADNOwDA4zwAQG+9AABguQBAx7wAwIA9AMCEPABAa70AgHY9AIAlvAAwvr0AgOI8AACLPACAOj0AgFm8AKAYvQCg570AQHO9AMC1PAAgab0A4DW9AGBBvQAAxDwAQLC8AJCmPQDACT0AgE48AAAmuwAAX7wAQPk8AEB1PQAApz0AwPI8AECkvABgJj0AULg9AAC8vQAAqbsAAFA9AACPPAAACT0AgIa9AAAuvQAAEj0AICw9AADZvACAFL0AAM47AICXPQDglL0AQNu8AABovQBgZb0A4Do9ACBTvQAAzzwAwJI8AGCZPQBgIb0AoEa9AICXvADgKL0AwIY8AOBaPQCwmb0AgB08AOBdvQAgqr0AwHg9AAD3vADQrz0AgPA8AOBAvQDAbT0AgGQ9AIDVvABAST0AwKG9AACEPQAArbwAwAY9AKA5vQDAXD0AAEK8AMDCvACAErwAADy7AIC7PAAQuT0AACk8APCvvQAAILkAAGg9AADEOwBAjLwAQNa8AECRPAAAtrsAAHQ8AEBsvQDAI70AwDA9ACCSvQAAgzsAAIW8AAB2OwCA5DwAsJW9AKAHvQBAtLwAgFG8AMDEvAAA2DwAYG69AACWvABwyb0AwOy8AACbPAAAQzwAgOY8AIA1PQAADrsAAFo7AIDrvAAAoLkAwBG9AIAWPABAXj0AsJq9AMAUPQDgAj0AgIi8AEC1PAAA0DsAgEC8AADuuwBAVr0AQKC9AACeuwDAjr0AwHa9AAACvABgLT0AAOA7AEBqPQAA0jsAoKO9AGADvQAADD0AQKo9AABJPAAAmDsAQA69AOAHPQDAbD0AgAs8ACBIvQCAzTwAgDG9AACQOQBggT0AgMY8AEDUvABQvr0AANu7AACFOwBgJ70AQPe8AFCBvQAAhz0AAFy7ACAdvQAgYz0AAIi8AKAtvQAAiDsAgLY8AECtvACA970AAHA7AKBnPQAAnTwAAOa7AOCVvQCAlL0AgIW8AAAguQAAEDwAQIU8AEDuvAAAQDwAgEm8AADTPADAmL0AALc8AAAjvQBgID0AwMq8AIA0PQDADD0AAEe9AIAFPQAAJTwAAOU7AACwuwBgDL0AsIQ9ACBkPQBQkz0AAO28AACNuwDglL0AQL68APCZPQAAFTwAAPQ8AAAyvADgFr0AwGk9AIBQPQDAujwAANI8AMCTPADAWT0AQIe8AOA2PQAAYz0AAKG7AIDqPAAAZLwAgGC9AIDaPACAILwAAK27AID9PACgFz0AwDs9AIBuvAAguL0AAHw7AABAugAAyLoAAGS9AAApPAAAcjsAAIA8AABUvAAAZjsAANy6AED0PAAAnjsAICe9AMBtvQAA9bsAwOk8AECTvAAwjT0AoAK9AABPvAAAursAACW9AECoPACgab0A4B+9AOAhvQCA4LwAgEe8AMCdvABwgD0AoBq9AAAAPQCw9b0AACG9AODkvQAApLsAQKW8AABnPQAAgrwAYA89AKBmPQAA/LoAgBa9AMDYPACgVr0AYCC9AABEPADgOL0AAOI7AADyuwCAX70AAJa7AKADPQCAmDwAQJw9AABcvAAAXDwAACA5AAD2vAAA6bwAADW8AOAqPQAAHDsAALI9AOBuvQAAO7wAsMW9AACwOwAAnTwAwPE8APCNPQDgPj0AQKW8AGAlPQAAAbwAAMq8AKATvQBwuj0AgMM8AECRvACAQr0AIIo9AIBSPQAAPrsAYA69AACHPQCAcz0AAB08AMDJPACwoD0AgFQ9AMDFPACAebwAgKw8AFCjvQCAObwAQKs8AEAiPQDQsT0AgKo8AIBlPABAirwAgKo8ACA0vQAA5jsAEIK9AABxvQAAHb0AAEi7AADbuwDAY70AANg8AADnuwCgIz0AADa9ACAJvQAAy7wAEN49ADCCPQCAZbwAAO27AIAzvQDAV70AAAi7AEC8PAAAJrwAoCo9AEBivQDAhbwAYEY9AEChPABAzLwAQOm8AIBPvAAgZb0AAGi6ACCJvQDAgjwAYCq9ACAGvQCQk70AQGS9AADkugAAQjsAANe8AADxOwBQhz0AQCK9AMDZPQDAzLwAgNA9ACAhvQAgZz0AAIi6AECXvAAA5DwAAK47AEBsPQCA0TwAADu8AIBLPAAgLL0AAFI8AAAquwAA7DoAYCG9AAALvQBA2L0AgHC8AEBRvQCAkLwAoAC9AKA5PQAAcDsAgEE9ACAaPQAAVj0A4CI+AABGuwAA/DsAABC6AIDovADAoLwAADA8AIDxPADApbwAAIy8AIBUvQAgHb0AwLm8AIBuvABAB70AQGQ9AGAwPQDA5TwAAAg7AECcPQCA6LwAAPg7AABYPAAA7zwA4CE9ADCFvQAAkbs=","chunkHash":"3f00269854de9f9eddc284991607e884839b80fe72fbada7aba89396d15e0d90"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 5. Key Features and Optimizations\n\n### Memory and Performance Optimizations\n...\n### Training Enhancements\n...\n### Fine-tuning Controls\n...\n```","range":{"startLineNumber":144,"startColumn":0,"endLineNumber":159,"endColumn":0},"embedding":"AIAIPACAQD0AMKg9AMBVvQAAPL0AwMC8AMDwPABgXD0AMKG9AAAhPQAAGj0AAMU7AID7vAAAWbwAgH88AAC4PABAlrwAAD08AMAjPQAAoj0A4CA9ABCmvQDQoT0AgGA9AABfvAAALrsAAC88AABAuQDAlTwAAKe8AGA/vQAQk70AgIG8AMBdvQBAoL0AAMq7AADjOwAAZT0AAGW8AIAoPACAsDwAAOS9AIAvvQBgEj0AAH48AACxvABAFz0AIEO9AIAGPACgBz0AAEs8AIDZPABQnr0AQJ88AAAmuwAAnLoAQC69ACA4vQDAcz0AgKO8AADEOwAg3r0AQA69AECZPAAAnDoAAB67AGDyvQCA8zwAADw9AAChvAAAKz0AgOy8AACTPACArLwAIII9AICzvACAR70AIAs9AACkOgCwvb0AQKc8AABuPAAAJj0AwLm8AEABvQAwwL0AUKe9AADtvABAVL0AAGm8AKByvQAACT0AgCe8ACCiPQBAAT0AAOI8AEBCvQAATrwAQIg8AECfPQDQqz0AQOc8AICzvADgHT0A4NA9APCkvQBAqjwAANI8AAC2PADA+TwAAJW9AGAqvQCAYT0AYAU9AICXvADAybwAQPI8ADCLPQAAf70AAAi9APCRvQAAqbwAACA9AGB+vQBAvjwAQKA8AHCTPQDgE70AIFm9AACVvABA5LwAgA08AKAUPQAAsr0AAJC5AFCAvQCQ0r0AQFo9AMCbvAAQpj0AABA9AAATvQAA5zwAgG49AADCvACQkT0AQIS9AABkPQCAhrwAgBU8AGBYvQAgmz0AAL27AACPvAAAfDsAQOS8AABlPACAOj0AgHW8AOCgvQAAyrsAAC49AAA0PAAA27sAgKi8AEDyPABA+rwAADc8AABIvQBAJr0AAN48AECzvQAAMrsAwJm8AAC8OgAAILsAUI69AKB1vQCA7LwAoEs9AIDwvADgVT0A8Im9AABUuwDQvr0AAGy7AAAUuwAAzDwAQKk8AAB/PQAA6rsAACw7AIBMvAAAiLoAgHC9AABRvACgXj0AMI29AKAQPQDgDz0AABK8AADWOwAADzwAAM67AEAVvQAARr0AkPG9AIARvQBAnr0AQKW9AAD1uwCAaT0AAOc8ACCuPQAABTwAsOa9AIBCvABgXz0AQJ49AACnOwAArjsAAO+8AIBQPQBAWT0AICo9AEDbvADgKT0AADS9AAAXPABgkD0AAAw9AMCNvAAwxb0AAMS6AADyOwAA6rwAgP68ACB/vQAgWz0AgGE8AAA9vABgQz0AgBY8AABPvQCAlzwAgAs9AGBCvQBA3L0AAH48AEBjPQDAnDwAgOC8AEBavQDgjL0AAOW8AADDuwAAVrwAoCI9AADmvAAABTwAAOS7AIBHPAAAor0AwCA9AOAVvQAgED0AwKC8ALCBPQBA1TwAgH+9AIBfPQDAmrwAAJs7AAC8OwCA8bwAYAQ9AABtPACAUz0AgOG8AACIOgDgZb0AAGy8ADCLPQDA8zwAAMA4AABBvACAV7wAwF49AGASPQAASrsAAG48AIAPPADAZD0AAMA6AADfPACART0AgEa8AIANPAAAnDsA4Ce9AAAxPQBA57wAAE08ACAzPQCA6DwAIAo9AIAyvQBA1b0AgHw8AECHPADAoTwAYIK9AADmPAAAYLwAgI68AABXvAAAILsAAIi7AEDYPAAgC70AAIe8AMA+vQAA4DkAAN87AKAEvQCAgD0AAAG9AACrOwCAY70AgL28AEC2PAAARL0AACe8AEDsvABAy7wAAO+7AICAvAAglT0AALO8AADYPADAAr4AAH29AHDUvQCAqrwAgNq8AOA/PQCA2bwAgPk8AOBOPQAA37sAAB+9AABUPAAAw7sA8IW9AACuuwDgYr0AAMK8AEC3vACgJb0AQIC8AAA7vACANDwAgFA9AADjvAAgJT0AgHU8AECYvACAXbwAgJu8AOBoPQCASrwA0Ng9AGChvQAA8jsAAPW9AADcugBAND0AAFM8AKA8PQDQnz0AAIA6AABFPQCA9LwAgKK8ACAvvQAAlD0AAPU8AACAOwAgB70AsIg9AIBVPQAAkrwAwGG9APCrPQCABD0AQD09ACBXPQDQhj0AAEo9AABGOwAAhDsAABI9AEBLvQAAGLoA4Cc9AMD3PAAAzz0AgGM8AAB2OwAA6LwAANQ7AEAnvQAAuTsAwEW9AKCCvQAAhb0AAG08AAAwugDAI70AwBA9AACtvACARjwAQCy9ACA1vQAgZL0AoJw9AMBLPQDAEL0A4Cc9AGBSvQBQtb0AQI08ACBoPQAAD7wAAEM9AOCDvQAAu7wAYCU9AAAOPQCAc7wAICy9AGALvQCQh70AgAG8AICRvQAAQjwAwNa8AADiuwBQn70AIBy9AEDSPAAAxDoAACm8AAAAvQCAKz0AALS6AJCzPQCAqbwAsN89AECYvABgaj0AAOy6AIA6vADgAz0AgCo8AABoPABAqDwAgGW8AABmPADARL0AgFk8AECJvAAAUDsAQAy9AIAEvQAQxb0AgN28AEBAvQBA2LwAQOu8AMDCPAAA+DsAABs9ACBCPQBgDT0A0B8+AAAWPACALrwAAOg7AABiPAAAD7wAgN48AMAJPQBArrwAALO7AOAWvQCA1LwAALq8AACkvACgGb0AAPg8AEAePQAAkjwAAKw8AHCiPQAA8bwAQLk8AAD4PAAA1zwAoAI9ACBdvQCAO7w=","chunkHash":"93b24aa3341426aebe2ed0f67e0457d8a62879bdd9e9b604577ce6a91d756b9c"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n...\n## 6. Command-line Arguments\n\nThe script provides extensive control through command-line arguments, categorized as:\n1. **Data parameters**: Paths, filtering, subsampling options\n2. **Model parameters**: Architecture, checkpoint, target size, output classes\n3. **Training parameters**: Batch size, epochs, learning rate, optimizers, regularization\n4. **Enhancement options**: Schedulers, mixed precision, progressive unfreezing, augmentation\n5. **Debugging options**: Memory monitoring, CPU forcing, CUDA blocking settings\n\n## 7. Data Flow in the Pipeline\n\n1. Data is loaded from disk using the nuclei dataloader\n2. A class CSV file determines the class labels for each sample\n3. Data is cropped and transformed into the proper tensor format\n4. Batches are processed through the model with forward/backward passes\n5. The model is periodically validated and saved based on performance\n6. After training, comprehensive evaluation metrics are calculated\n7. Visualizations and result files are saved to the output directory\n\n\n```","range":{"startLineNumber":165,"startColumn":0,"endLineNumber":184,"endColumn":0},"embedding":"AMCDPADgSz0A4MU9AMCLvQDA+LwAQPu8AABZvAAAOj0AcIi9ALCcPQCgAD0AAPi7AABUuwDA1rwAABq7AAB+PADgTr0AQHA9AOAQPQAQuD0A0IM9AED/vABgcT0AIDM9AADVvACAxrwAALI7AID6PAAAqzwAgCq9AKBBvQAghb0AYE69AMBYvQCQi70AgEa8AIAmPADAWz0AAEg7AAC9OwAAnTwAoBC+AGBDvQBgaj0AwJM8AOACvQCAKzwAwIi9AAD+OwCA2TwAAHW8AOAOPQBATr0AoAQ9AOAwPQAA2DoAQO68AEBBvQAgJj0AgIW9AAA2uwC4BL4AADC9AAASPQAAnjwAgIW8AKCavQCACDwAgJ08AEDhPADAWj0AwAm9AACLOwBA+LwAIBQ9AKANvQBAIb0AgAc9AADnuwAAvL0A4AA9AIC4PADgFj0AoCC9AAB/vABQjr0AUI69AIDyvADQlL0AIEC9AOAqvQCA9DwAAKi8AKDlPQCAvDwAAO88AMCDvABAML0AwEE9AACwPABATT0AgLw8AAAouwAA1zsA0Ok9AACyvQCAvDwAAGg9AEDvPAAA6zsA0Jq9AEAKvQAgTD0AAKO8AABsvAAAQLsAAFQ8AADnPABgDb0AgBO9AID9vAAA3bsAgBc9AEBwvQDAuTwAwLg8ACBsPQBAJ70AIBW9AACwPADAF70AAP+7AKAiPQAgzr0AALW7AMBZvQAgzr0AQCM9AEDSvADwyT0AwD49AAC5uwCgJD0AgHA9AIAFPABQhT0AMKO9ACCzPQCgG70AYBs9AICJvABgpT0AwK08AMDpvABAizwAALi8AAAoOgAgqT0AAFo7AJCVvQBAgjwAQDs9AIAOvAAAGrwAwJa9AIBtPQBgO70AgIK8AMCAvQCAf70AgKI8ACBRvQAANrsAwDa9AAA4OwBAl7wAkIS9AAAQvQCAv7wAQOe8AOBHvQAA0jsAYJu9AKAwvQDwpL0AAIY7AADUPACgKD0AAHq7AEAhPQAAnTsAgLM8AADnOwBAvzwAQIa9AMDwPADgVT0AoHu9AKAbPQAA6zwAAGs8AGBUPQAA9bsA4Bi9ACAgvQAgY70AgK29AAD4vAAgS70AcLG9AAAZvACAPjwAAIO8AOCoPQCACrwAcMa9AGA3vQCgcT0AIFA9AADfuwAAvzwAgCi8AAD2OwCAHzwAAJo8AICdvACgPz0AIFm9AACnPAAA0TwAwKk8AIAmvABQlr0AAAC5AIB1vAAQm70AwBq9AAB4vQDggz0AACo9AIBHPABgXD0AgFU8AABcvQBA+DwAQKM8AMCuvADw7r0AAAG8AACVPQCA8TwAwOW8AOBivQDglr0AYBC9AMCMvAAAUDsAwKM8AKAEvQAAfjwAQKm8AMDlPACgdr0AAEw9AOASvQDARz0AwOq8AMDJPAAAJz0AYIq9AABTPACAQDwAAAc9AMDCvACAkLwAgJI8AKBBPQBA9TwAAKw8AADEugBAL70AADK8ALCfPQCAXT0AQC89AIBavAAAFr0AQF09AAAWPQBA5zwAIAk9AIBFPACgVD0AgIy8AOA1PQBAEz0AACa7ACAnPQDAjLwAIBS9AACcugCAoLwAAAU8AKBLPQAApTwAgEa8AGAfvQAAoL0AgNg8AADouwAAb7wAgFe8AAA+PAAAPLwAAMk7AEDqvACAKTwAgCC8AMBEPQCAQLwA4E29AEAevQDA/DwAgJ48AMA4vQDgsj0AoDa9AACEPACgR70AwJG8AIBzPAAwi70AwKe8AACLOwAAPzwAAIw6AECwvACwiz0AQAi9AOAHPQCgyr0AUIG9AADrvQAA1LwAADm9AAAvPQBA1LwAYHA9AEAIPQAAY7wAUIW9AADWOwAgFr0AQLS8AAAGPAAQgb0AMIq9AOAWvQBgQb0AAL27AED9vAAAgjwAQI49AIAyvADgHD0AANi7AKAbvQCASL0AgIC8AEDTPACApjwAEJs9AFCgvQAADDsAgBG+AED/vAAAlzwAQNo8AAChPADgVj0AAIq8AIAzPQBA/bwAAFo7AAASvACQlT0AAIA7AABuvAAA4jwAYCI9AICbPQAA4LwAoCa9AKDSPQDA0DwAgFk9AMBNPQAgnj0AQEo9AAABvAAAwbsAAJE7AGBDvQAAvLsAgL48AACLPADQnD0AgAU9AMCNPABAuLwAwPk8ACAbvQCA3zwAQNS8AKA/vQBAQb0AQOS8AMC3PABAMb0AgNc8AACnOwAgdD0A4D69AACMOwCQoL0AsMI9AKBrPQDwg70AAHc8AIDOvABAab0AAHA8AMDVPACA0TwAwCM9AFDZvQBAojwAoGs9AIBCPAAA1jsAAMg7AIBrvACggL0AAH88AKBOvQAAnrsAwOa8AACkvACger0AQIW9AACLOwCAW7wAwB69AMCSvAAALjwAYCe9AJC5PQBAt7wA4OI9AEDnvABAHT0AANa7AAB8uwBgQT0AAKe7AAC4PACAd7wAgDC8AABivAAAMLsAgE88AAC7OwCAErwAwLm8AAAqvQAgxb0AQPa8AEBQvQAAwLkAALA5AEA7PQAAazwAgGs8AEBsPQCgJD0AoAs+AEDpvAAA2LwAQPM8AADsOgAAQ70AAJg6AICnPADAkbwAgMy8AMDwvABA8bwAAPa7AMAyvQCALbwAgPs8AEB6PQAgJT0AAIe7AMB/PQCgNL0AAC48AADjPACAHrwAIAw9AJCKvQCATTw=","chunkHash":"bfe002ecef7d869cf7317207e58fd2ffe00c766f282590be954975742831324f"},{"text":"File: `scripts/temp/pipeline.md`\n```markdown\n\n# VGG3D Fine-Tuning Pipeline\n\nThis project implements a pipeline for fine-tuning a 3D convolutional neural network (VGG3D) on volumetric nuclei data for classification of chromatin structures. Here's a comprehensive breakdown of the pipeline:\n\n## 1. Data Organization and Processing\n...\n## 2. Data Transformation and Augmentation\n...\n## 3. Model Architecture\n...\n## 4. Training Process\n...\n## 5. Key Features and Optimizations\n...\n## 6. Command-line Arguments\n...\n## 7. Data Flow in the Pipeline\n...\n```","range":{"startLineNumber":3,"startColumn":0,"endLineNumber":175,"endColumn":0},"embedding":"AACIOwBAzDwA0OY9AMBlvQCARL0AACO9AACqPACABTwAYMO9AOA7PQBATD0AAP88AMDEvADgD70AAHM8AAD4PACAs7wAYBo9AACwPAAAsD0AQMc8AAAnvQBwsz0AIAI9AEAEvQAAmrwAAOa8AIDDPAAAm7sAoCq9AJCivQBgfb0AYDK9AOBsvQCwu70AADg6AABMuwBgqT0AAJy8AIDsPADAVz0A0Lq9AEC0vABAFz0AACk8AMDLvAAAxzsAAD29AMDJPAAA2DwAAB28AGABPQCQgL0AAHQ8AECjPAAAozwAgOe8AIC7vAAA0jsAoDK9AADEOwDIBb4AAEy7AAAAugBAhLwAgMS8AGDVvQAAtjsAAJA9AADyuwDAdz0AgJu8AMCXvACAh7wAgH09AAApvQDAhr0AgPE8AMABvQAgpr0AQP48AAB7PACwiT0AoAi9AGAHvQBgYb0AoHG9AAB7vABQo70AAM28AGAgvQBgbD0AgHS8APDgPQDAhDwAwJo8AKATvQBgAL0AwEU9AIBePQDgDT0AwHQ9AADtuwCAJzwAkK49AKCFvQAATjsAgJQ8AICOPACAkbwAQK+8AAAmvQBAej0AQJ08AIChvAAAoLkAAKE8AGAYPQDgT70AgKq8AEDfvAAAu7wAwGE9AOAqvQBALT0AAEi7ANDIPQCAi7wAQEe9AIChvAAANLsAgDu8AKBXPQAA370AgIu8AGATvQDw970AIFw9AMDdvADgoj0AoBA9AMADvQCgfD0AoCI9AACaPAAQhT0AQI29AAC8PQAA67wA4EA9AOBJvQDQhT0AAMO7AECavAAA7zsAAOW7AMA4PQAwyj0AAJe7AMCWvQCAozwAIGM9AAAgPACAyLwAwHS9AMBkPQDgPL0AQIK8AEARvQAA4LwAAOm7AEALvQAA5DoAgMW8AIBwvAAAOLwAYGK9AOAsvQDAqLwAAC+8AAABvQAAPjwAQHC9AEAPvQBQtL0AwAK9AEDOPACAGj0AABy8AGAtPQAAiLoAAHI8AADBuwBACT0AsM29AACluwCAfD0AwFO9AGCBPQCARzwAAIi6AEAFPQCgIL0AgIG8AIB/vACA6LwAsI29AMCJvQDAWL0AIJW9AIDJPAAACz0AAEA7AHCiPQBAkbwAMPa9AAAWvQBgXj0AEKQ9AIAAvABAoDwAABS7AED/PADgCT0AABq7AEAhvQCgHD0A4Hm9AMAUPQDA6zwAQN48AMDNvACQu70AgJk8AIDYvADQpb0AAAG8AABXvQAQkz0AQBk9AACLuwAgHT0AwJg8AACwuQCgYD0AAMI7AAANvQBQ+r0AYB09AJCZPQCA1jwAgCa8AEA+vQDAhL0AgAq9AIClPAAA8rwAgBQ9AMBKvQCAEDwA4AC9AOAUPQDgs70A4EM9ACA7vQAAYDkAgAq9AGAnPQBAoTwAIDO9AMChPAAAWLwA4DQ9AAA+vABAhbwAQGo9AADwOgDA7DwAAKy6AAAXPACADb0AgD48ACAePQDADz0AAAi6AAAPPAAA6rwA4DQ9AAAjvAAAeDoAALg8AIBIPABA+DwAANi6AAAgOwBA+DwAgKo8AAA8PQAA9jsA4EG9AADzPAAA2zsAgEo8AIBFPQAAKLsAwB09AMAZvQCgvr0AgGo8AKAFPQAAVDsAwOu8AEDlPAAAiLwAANA7AAAOuwAA97sAQLG8AABiPAAApLsAAPi7AIBivQBApDwAQKa8AGAUvQDArz0AwKq8AMDNPACA2rwAADO9AEAPPQAAfb0AQKg8AEBVvQAAjbwAgFe8AABCvADgqj0AQAe9AKAdPQCQ6L0AELa9APC2vQAAj7wAQPm8AOCHPQCABL0AIBk9ACA9PQCAfrwAQHe9AACqOwAA7rwAwE69AMBCPQBAar0AQCm9AID1vADA57wAYBK9AKAdvQAA9LsAgLE9AACOvACAzjwAQIW8AOAzvQBAvLwAAMy8AMDPPACAjLwAEIs9ACBOvQAAt7sAOBe+AACJPABgPz0AgBE8ACASPQCwlT0AwMw8AEAMPQCgA70AALy7AID8vACQoT0AAMg7AACcOgAATbwAEIU9ANCRPQBA5rwAAJK7ACDfPQDAkTwAQAg9AABmPABgQj0AQFk9AECNPAAAJDsA4D89ACAPvQAAOLoA4F49ACAhPQAg4z0AwBM9AAA+vABA8LwAAJ67AIAMvQDAzDwAwAK9AECsvAAgDL0AgEk8AIDbPACgYr0AAKk8AABIPAAAqDoA4Ei9AMCuvACQgb0AYFk9AACnPQAATL0AwOI8AMDkvABQkb0AACA8AIDFPACAfzwAgBY9AGCyvQCAVjwAwCM9AAA5PAAAKrsAYAu9AMC+vAAAjr0AAE67AIBUvQCA0TwAgAK9AADvvACQ270A4E+9AAAIuwAAr7wAAAq8AAAHPACA/zwAwMe8AMCnPQCAXzwAUNs9AIBLvQAgej0AQLy8AAAFvACgSj0AgAO8AAAsPABgFr0AAKi8AMDPPACgib0AgDc9AADeOwAAwDkAwI68AIAOvQAAvL0AQJ+8AEAuvQBAq7wAgBq8AABUuwAAMrsAwPA8AEAqPQDgOz0AIPA9AEDKvACATrwA4GY9AACpOwAAuDwAwPM8AAAzPACAlLwAADg6AIBnvACA67wAwIe8AAAmvQCAPrwA4BQ9AEBDPQCgez0AAHo7AOBbPQDAJr0AgDi8AABUPQAAMDoAoDA9AEDXvACANrw=","chunkHash":"1e93edd1418fa0de0ef56969ff09307c1f48d7947b7f80054aa7292a30d836ec"}]},"file:///teamspace/studios/this_studio/scripts/temp/pytorch_texture_model.py":{"hash":"cc53cea8ac5928a8eb7a2794d3e7bed1a0c2cec718857a3f6258bdf3dd184ee2","entries":[{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass TextureDataset(Dataset):\n    \"\"\"\n    Custom dataset for loading 3D texture data\n    \"\"\"\n    def __init__(self, root_dir, sample_ids, class_csv_path=None, \n                 is_cytoplasm=False, box_size=(104, 104, 104), debug=False):\n        self.root_dir = root_dir\n        self.sample_ids = sample_ids\n        self.is_cytoplasm = is_cytoplasm\n        self.box_size = box_size\n        self.debug = debug\n        \n        # Load class information if available\n        if class_csv_path:\n            df = pd.read_csv(class_csv_path)\n            self.sample_to_class = dict(zip(df['sample_id'].astype(str), df['class_id']))\n        else:\n            self.sample_to_class = None\n    \n    def __len__(self):\n        return len(self.sample_ids)\n    #...\n```","range":{"startLineNumber":29,"startColumn":4,"endLineNumber":45,"endColumn":35},"embedding":"AEAuPQDgd70AQM08AGAyvQAAg7wAQDq9AICbvACAibwAoDy9AAD3uwCALrwAwOm8AOBgPQCgjb0AgG88AFCJPQBAsDwAACG8AMDBvQAAmDsAgIw8AIC7PAAA2jwAUIm9AACvOwCAMz0AgDg8AACGOwAgKD0AgCi9AABIvQCAy7wAMPC9AEC7vQDAb70AoAU9AICZPAAg1D0AgIs8AADdvADArTwAAOa7AIDRPABAjj0AIAC9ACAgvQBAsLwAAJs8AAC5OwAgDT0AAPG7AOChPQDA1LwAQBu9AMCHvAAAkrwAgFi9AIAAPQAAN70AoE+9AACfuwAA0zwAACy8AKArvQDArjwAAKA5AIA8vADAs7wAcJm9AKAKPQAAHLsAAN+8AADNvACgUL0AQBo9AEBRvQDA9LwAoL49AEDrvACAeb0AAHi7AMAgPQBA1bwAgMg8AADZvACAWL0AwLe9ACACvQAAR7wAgB68AICMvADA5TwAwN+8AECAPQDAxjwAgMm8AGAZvQDQjr0AcMk9AEDHPADAo7wAQIA9AIBpvQBAAD0AgBY8AOAcvQAAJbwAALQ7AADZvAAAIbwAIHy9AAAAugAgMz0AQP48AABvPADwpb0AAIY8AID3PACABrwAAKK9AECrvACAJj0AIFY9AKAKvQBgGz0AAJu8AABXPAAgy70AACi8AECDvAAA4LsAAAO8AACSPAAgLL0AgFe8AMA1vQAAUb0AANA7AEDBvAAAurwAwDq9AACZuwBgfj0AIKg9AAARPACAMz0AQF69AMBXPQCATjwAoHc9AHCzvQAA3zwAAGI9ACBvvQAA+zsAkIa9AEA7PQDAeT0AgHw8AOBNvQCAYzwAoBC9AAA/PACAQ7wAgOu8AJCVPQAA+TsAAOM7AABOvQAgRb0AkMA9AABmPADAqbwAYAu9ACAIPQAgc70AwMW8AFC9PQAARLwAQIO8AEDfvAAA67wAwPG8AGAnvQBA8rwAAH68AKBGPQAAPzwA4AY9AADtPAAAYrsAAJS6AACHuwAArbsAAKG7AADzuwCAfD0AQJ08AACZuwAAtzsAgEm9AODqPQBAl70AAOC8AMAPPQAAv7sAAOy8AIBBvAAwg70AAAA4AEAYvQBAab0AgDS9ACANPQAANzwAAD08AAAQPAAAsTwAAIo7ACBsPQCACD0AIBc9AGAZPQCgBj0AgDI8AACUvQCQjL0AoH29AAAjvACAfjwAQLW9AACEvQCAAz0AwCO9AABeuwAAOL0AYFe9AOAEvQCAMT0AIAM9AAD/vABAKj0A4G69AIABvQBgQT0AgHy8AABbvABAqL0A4AO9AIBGvADgJD0AgKG8AECFvACAxb0AAA67AIAXvABAML0AACK7AIBFvQAAejwAAJW7AABwPACgIr0AoFA9AMCIPAAAAjsAAC47AAAQvQAgKD0AAOo7ABCQPQAANTwAYFU9AIAnvQBAwLwAIDw9AIAtvAAAdjsAIKE9AECNPACAz7wAoAk9AABBPABQkz0AAG67AMCNvACArjwAwPO8AMDMvAAAobwAADA7ABDavQDA0LwAYAa9AACAuwAAN7wAgCO9AIARPQAAbrwAoKC9AOA2vQAAvrwAgF28AGAXPQAAEzwAYAk9AACuPAAA3bwAAKc9AIBUPABAwbwAAAU8AKAhvQAA7bsAwPU8AIAgPABAUj0AIBI9AACbPQAAybsA4Cq9AMBkvQCANjwAcKM9AIBXvQAAir0AYGq9AEDvPABA9rwAYMu9AADFuwCgCL0AoCA9AID1vABggT0AoCO9ACAsPQBAvzwA4GC9AMAUPQDwqb0AgJG8AMD3vAAAU7wAAKE7AIBwPQAA1DsAUBY+AABEOwAAU70AAJQ7AICFPADwgb0AAL07AGAwvQAAF70AQD29ADCwvQAABrsAALS8AEBPvQDgfT0A4G89AABEvQAgl70AgC88AEDJvACgSD0AIHk9AIAivABAgLwAAAg7AKA+vQDAhDwA4HW9AAD7uwCw/T0AsOk9AECRvQCAGb0AgFY8AAC8PADAYz0AACW8AOBUPQCAGLwAALM8AEBPPQCAQrwAoBo9AKBCPQDAF70AANS7ACCUPQAghD0AAEs8AADAuAAAFLwA4Jc9ACByPQAAqrsAgJc9AAAKuwDAE70AoDY9AECqPQBAtz0AEJA9AEDOPADAujwAoCU9AMANvQDA0LwAYD69AECXvABgTb0A4Em9AMAjvQBAx7wAwIo9AECLPAAAZjwAQJa8AACRvQAAz7sA8MU9AIBmPQAAHL0A8Ki9AABcPQBgUD0AAM48AADougAAezwAIAO9AABwuwCAP7wA4KG9AADiOwBA/jwAYFC9AADRuwDAy7wAABm9AKB/PQAA9LwAALA7AAA1PACA27wAwJS8AEDYvADA/bwAIHu9AIACPQCoGz4AAMC6AADAuACAfLwAAOu7AEDevADgkD0AwKk8AIDePACAabwAADq8AIAIvADAdT0AYAY9AADUuwDgCr4AwIs8AAATPQBgCT0AAAw8AAASOwCAuL0AwMa8AADAPABAtDwAAGS8ANClPQCAODwAUJ+9AABAPQAA3jwAMPQ9AAD+uwDwpb0AICQ9AABMuwBgVr0A4DE9AKAwPQAAKLwAgK28AMCpvABgQr0AwKs8AACWPAAACLwAQG89AIBIvAAAWDsAoCI9AAB2vQCgYb0AYEW9AAAOOwCgL70AAOk8AACFvABAtz0=","chunkHash":"49468fcc61f30d1f1d82c53610678ea2cba6e9b3aeee198d6260bc6ad19c3688"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass TextureDataset(Dataset):\n    \"\"\"\n    Custom dataset for loading 3D texture data\n    \"\"\"\n    #...\n    def __getitem__(self, idx):\n        sample_id = self.sample_ids[idx]\n        \n        # Define paths for raw and mask files\n        raw_file = os.path.join(self.root_dir, sample_id, 'raw.npy')\n        mask_file = os.path.join(self.root_dir, sample_id, \n                                'cytoplasm_mask.npy' if self.is_cytoplasm else 'nuclear_mask.npy')\n        \n        # Load data\n        try:\n            raw_data = np.load(raw_file).astype(np.float32)\n            mask_data = np.load(mask_file).astype(np.float32)\n            \n            # Normalize raw data to [0, 1]\n            if np.max(raw_data) > 0:\n                raw_data = raw_data / np.max(raw_data)\n            \n            # Crop or pad to box_size\n            raw_cropped = self._crop_or_pad(raw_data, self.box_size)\n            mask_cropped = self._crop_or_pad(mask_data, self.box_size)\n            #...\n```","range":{"startLineNumber":48,"startColumn":0,"endLineNumber":67,"endColumn":0},"embedding":"ACALPQCgQr0AQIk8AKAxvQCAC7wAYEO9AACuvADAijwAoDy9AABJvADAibwAgKC8ACALPQDgbb0AAGw7AGBePQBAvTwAACC6AODRvQAAFDsAgBo8AACiPAAAmDwAoIS9AEDDvADAID0AwKE8AAAhvAAAGj0AAOW8AICNvQCAxrwAIPi9APDQvQDAY70AgE08AACyPABwzD0AQJA8AEDGvAAA/DwAAIS8AAAOOwDgmj0AQPy8ACAgvQDAg7wAAEi6AADsOwAgQj0AANK7ALCqPQCATb0AAIe9AECcvAAAaLoA4A29AIDePADgJr0AoFS9AAAFvABAwTwAAFa7AEAjvQDApjwAAB+8AACVvAAAgLsAIE29AEDEPAAAgDgAAKe8AACUvAAAJ70AoCc9AMBBvQAAsLwAMLI9AOBFvQDgPr0AAJG8AEDvPACgB70AgKs8AAALvQBgJb0AQKy9AEC0vABA1bwAAAi7ACAHvQAAHj0AIBm9AIBpPQAgDD0AgDm8AAB4vQBgeL0AINc9AIA8PACAorwAQIo9AOCAvQAATjwAAGM8AGAivQAAnbsAANo7AIDLvAAAFTwAYI29AAAnvABAaD0AgEA9AIB1PADwlL0AgBw8AGAlPQAA7LoAQJS9AAC3vACAVD0AQEY9AMATvQDAOj0AACA5AMCrPAAA470AAI+8AAC6vAAA0TsAAM27AABIPADAMb0AAMG8AKAJvQDAy7wAAKU7AKA1vQCA4LwAIG69AADRvADQuD0AkJU9AIAwvACAvzwAwFO9AMAfPQAANTwAAKU9APCXvQCALj0AEIU9AIARvQCACjwAgKK9AIAPPQAAhj0AgCI8AJCLvQAAYTwAgLS8AIBUvAAAQLsAAOS6AGC/PQAAWLwAAIw6AABivQAAUL0AcL49AICIPABA9rwAoEq9AMAUPQBQib0AgBm9AJCvPQCABLwAAK67AEAVvQCACL0AIEG9AIAZvQAA8rwAoAi9AGApPQDAtjwAAHk8AIB6PAAA07sAAKc7AAA8PACAb7wAAB47AABovADgZT0AIBc9AIDSPACASLwAoEm9AJgHPgBgir0AQNS8AGCBPQAANLsAgO+8AIB3vABAc70AgBc8AADGvADgCb0AgBe9AEDIPACAfzwAAIC4AAAJvABAsjwAgEW8ALCBPQAALD0AoEk9AIAEPQAA6zwAAIk8AMCEvQCgv70A4DK9AAD0ugCAuDwA4Ly9AMBbvQBAzTwA4De9AAB8OwCgRL0AwCy9AIBWvQCAFj0AwBI9AIDtvACACT0AAHy9AKAEvQAgCz0AgOO8AECXvADgbb0AAPS8AACdvADAHz0AQLG8AGAGvQCQu70AAGK7AAAYugCAJr0AwNk8ACCbvQAA7zwAACy8AMCOPAAALb0AoDQ9AICpPAAANDsAABC8AEDJvABAGT0AQPg8AGCdPQCA4TwAwAY9AIC4vAAAiLwAQDk9AIAOvACAE7wAcII9AMCVPABAx7wAAJQ6AAAHPABgSz0AAJw6AECKvABAijwAIAy9AABcOwDA9rwAgAA8AFDOvQAgB70AQN28AIDTPADAj7wAwD29AECDPAAAEjsAMKO9AABmvADA/rwAADq8AACYPACAZjwAwJo8AIDyPAAAiLwAgKw9AAAAuQAA2LwAAK27AMAAvQAAGLoAAAE8ACAAPQCgeD0AgC09AIBbPQAAI7wAAEi9AAB8vQAA0LkAgIw9AMAvvQDAfb0AwF+9AMDEPABA+rwAYOO9AICCvAAAkrwAwOI8AMA6vQBANz0AICq9AIBDPQAAuzwAwFC9AAAVPQDQx70AQGG9AIAsvQBA4rwAAEi6AKBXPQBAzDwA8A0+AACYPAAgdb0AAFy7AECkPACQl70AABw8AMAvvQDgPr0AAPy8AIC/vQCAZrwAAMe8AOBqvQAAfT0AUIw9AED/vABQq70AAO67AAAqOwAwiT0AAAE9AABDvAAAxLoAAJe7AOAxvQBA5DwAoIq9AABlvADw9D0A8L89AACDvQBARb0AAAC8AMD+PACAij0AgCu8AGBMPQAA3bsAANE8AOBePQAAZbwAoDg9ACApPQBAGL0AwPO8AIC1PQCAYD0AgHs8AADIuwAAvjsAgJQ9ADCkPQCAwrwAUKg9AIBkPACAN70AwDM9ALClPQCgrj0AAKU9AADaPADAvjwAwPg8AAAivQAAzLwAACa9AEDovABABb0AQK+8AMDfvADgY70AIHI9AABSOwAAwLoAgA48ALC9vQAABbwAwKY9AGA2PQCgK70AMK+9AEBwPQBgID0AgIA8AACeuwAAyDsAQLm8AAAguQCAAjwAAHu9AACYOgBAFj0A4Gq9AAC8vACA/rwAIEK9AAByPQBAAr0AAKM8AAC7OwCAG7wAwL68AIDkvACAWLwAQBe9AADPPAAAFD4AQLm8AIBiPADA0rwAgJC8AIDyvACwqj0AAKg7AMDqPABAuLwAgE28AACCuwBAJj0AAD08AICHvAAg7L0AgIg8AOAzPQDgFj0AgB08AACnuwBQn70AALC7AAA1PQBAGj0AAK+7ABCtPQAA5TsAkLK9AAD6PAAAYj0A8O89AMCVPADwjb0AIHc9AICZvACALr0A4G89AMANPQCALLwAADQ7AIDivADAB70AgDA8AACguwAACjwA4Bc9AAD9vAAAgLkAoGE9AABqvQCAn7wAwOq8AIDCPAAgV70AwP48AABWvAAgfT0=","chunkHash":"341b5dc2f0709b1a0965b25a136c070c34f0f97559b4c467b3666d4de8d41421"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass TextureDataset(Dataset):\n    \"\"\"\n    Custom dataset for loading 3D texture data\n    \"\"\"\n    #...\n    def __getitem__(self, idx):\n        #...\n            # Add channel dimension\n            raw_tensor = torch.from_numpy(raw_cropped[np.newaxis, ...])\n            mask_tensor = torch.from_numpy(mask_cropped[np.newaxis, ...])\n            \n            # Return with sample ID\n            return {\n                'input': raw_tensor,\n                'target': mask_tensor,\n                'sample_id': sample_id\n            }\n        except Exception as e:\n            if self.debug:\n                print(f\"Error loading sample {sample_id}: {e}\")\n            # Return a dummy sample\n            dummy_input = torch.zeros((1, *self.box_size), dtype=torch.float32)\n            dummy_target = torch.zeros((1, *self.box_size), dtype=torch.float32)\n            return {'input': dummy_input, 'target': dummy_target, 'sample_id': sample_id}\n    #...\n```","range":{"startLineNumber":68,"startColumn":0,"endLineNumber":84,"endColumn":89},"embedding":"AKAxPQDQir0AAMC6AKBbvQAAWrsAgOa8AMDvvADArjwAADy9ACANvQCAiLwAgFW8AAC4PAAgib0AAPC6AMA8PQAAlTwAAHa8APDXvQCAgzwAANG7AMCcPADAmTwAoG29AACEvADAEz0AAMS6AAAuvABA8zwAwOG8AMB9vQCgEL0AMOW9ACDBvQCAXb0AgBs8AAA9PACA2D0AAIc7AMD8vAAAsDwAAFo8AIA/PADQqT0AQKi8AECevACACb0AAG08AAC2uwBAYD0AAOi7ADCIPQCgVL0AIHS9AABWuwDAwbwAIAS9AADAPAAA8rwAgFm9AACpvACAnzwAAOW7AAB0vQAANDsAAJ+7AIAOvAAAXDsAoIO9AICvPAAAyrsAgJq8AAB3vADA77wAgFo8AEDtvABA8rwAoKI9AKAzvQCAML0AAIS8AOAqPQDAEb0AALA5AIAhvADgQb0AMKa9AADRvAAAIDoAAHQ7AIDwvAAA+DwAAMi8AEArPQDgJT0AAEG8AFCEvQDgYr0AELs9AIBuPACAmrwAMJw9AABXvQCAaDwAAAM9AMBrvQBAoTwAABg8AEDvvAAAITwAIIm9AABCvACASj0A4EI9AIAZPAAQjr0AgJw8AMAXPQCAMrwAoIm9AICmvACgUz0AYDs9AOAPvQAgCT0AALq7AEATPQBgEL4AgNO8AECbvAAA8zsAANO7AABYuwCA2bwAQLO8AMA7vQAAtbwAAA08ACBBvQCgDL0AAEq9AKAevQBgvT0AMI49AACLuwDAAT0AwFG9AOAqPQAAizwAwKQ9AMCkvQBgPz0AYGs9AKAbvQAALLsAYKW9AAD2PACAkD0AgEk8AKCQvQAA3DoAgAy9AACAuAAAwTsAAN+7AMCbPQAAfrwAAF48AIBEvQAgYr0A0Lg9AEDuPABgDL0A4Eu9AGAXPQDgZb0AgIu8AGCbPQAAfrwAANQ6AIBDvQDgHL0A4Ai9AAC6vACAp7wAACC9AMDrPAAA6DoAQJU8AACJOwAAyrwAAPo7AAC1OwDAhbwAAJE8AACJvAAwhT0AwBQ9AID5PACAXLwAIGi9ADAEPgBQtb0AAI68AMBNPQBA5DwAwCa9AABUvABAhr0AAL+7AIDGvABgUr0A4AS9AECjPAAA8zwAAOK7AAC0ugAArzwAwOG8AKBAPQBAID0AACs9AEASPQBAjTwAAOw7AHCCvQDgtr0AoHW9AADgugCAKDwAwLa9AKAmvQCAQzwAwEq9AABUPABgG70AANe8AOBivQBA3TwAIAM9AOA1vQAAdDwA0Ii9AADRvACAyTwAAIO8AADbuwAgX70AYC29AEDXvAAgMj0AoCS9AMABvQBQwr0AAF67AABxPABAo7wAQK08AACCvQCAET0AAKy6AABHPABAEr0AQBc9AIB+PACAA7wAAF67AAAMvQBgXT0AgPk8ABCLPQCAiTwAABg9AAAZvQCAD7wAwEE9AAAcuwAAz7sAgIU9AADguwAA1LwAAIi7AAA2PAAAdT0AADe8AMC8vACAHTwAYD+9AAA5PACgCb0AAOo7ANDWvQBgCL0A4By9AIAPPAAAYjsAgIq9AIA7PADAkjwAsJm9AIBXvAAgEL0AAN07AABAOQDA5zwAQII8AAD2PACAGLwA0NA9AACSuwCAwrwAgBO8AKAGvQAAwjsAQKg8AMD+PAAQiz0AoBM9AMA2PQAAn7sAgGi9AABWvQAA9LsAgJM9AEAWvQBAar0AMIG9AAAfPADAurwA8MG9AEDavAAATbwAQJE8AMD0vAAgYT0AoCG9AKAvPQBArDwAIFG9AAAZPQDg1b0A4Aq9AIDwvADAvrwAAD+8AIBHPQCAVjwAMAE+AMDwPABAir0AAFw8AADDOwCgfr0AgFy8APCHvQDgG70AwA69AEC9vQBAq7wAAPC8AKBdvQBART0AIJs9AID/vAAAir0AAK67AACwugCAfz0AQCQ9AMDSvAAAv7sAAKc7AKBsvQAAaDoAIEm9AAB7vAAw8z0AUMM9AICKvQCA7rwAAIu8AIANPQDAdj0AwIq8AIBVPQAAmjsAAHw8AMAcPQCAYrwAwPE8AMAUPQAgDL0AIAG9AGCsPQCwhD0AgI88AMCRvAAAAAAAgKU9ANCYPQAA0LkAgJ49AMCQPAAAZ70AIAQ9APC6PQCAqD0AwMA9AEAhPQCgJj0AgPM8AEAfvQCAGL0AwCm9AABLvQBAqbwAwNi8AEC4vACA17wA4Es9AADHuwAAOjwAgBo8AEC2vQAAmbwAUJw9AEBGPQBgIL0AgKW9ACCRPQAAPT0AgCs8AADIuwAA2zsAABC8AAACPAAAADsAIKi9AACAOADAMz0AgJC9AMDqvADAIb0AAPS8AGBfPQCABb0AACA5AAAeuwCAKrwAwOO8AADxvACAw7wAwCS9AOBAPQDoGz4AgLO8AMC7vACAdbwAgDa8AED4vADAbT0AAIi7AEDiPADAKb0AAHe8AADQvAAAOz0AwNQ8AADevADQ570AwPI8AMBFPQDgLj0AAGE8AABgOwAQiL0AAOq7AIDgPAAA+TwAAFy8ACC5PQAA5TsAsMy9ACAXPQBgYT0AUPI9AECXPAAQjr0AQBw9AICnvABgP70AgDM9AEAaPQCAIrwAADe8AEDQvABAt7wAgAE9AACgPAAAxzsAoEg9AKAavQAAcDsA8IQ9AMBjvQAAy7wAIBO9AKABPQBAY70AgBg9AICMvAAQpD0=","chunkHash":"769c1660150d43e6c03d493171719cff230ed061bfb15662faa9c76524b4b4e1"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass TextureDataset(Dataset):\n    \"\"\"\n    Custom dataset for loading 3D texture data\n    \"\"\"\n    #...\n    def _crop_or_pad(self, data, target_shape):\n        \"\"\"Crop or pad data to target shape\"\"\"\n        result = np.zeros(target_shape, dtype=data.dtype)\n        \n        # Compute dimensions to copy\n        copy_shape = [min(s, t) for s, t in zip(data.shape, target_shape)]\n        \n        # Compute slices for source and destination\n        src_slices = tuple(slice(0, s) for s in copy_shape)\n        dst_slices = tuple(slice(0, s) for s in copy_shape)\n        \n        # Copy data\n        result[dst_slices] = data[src_slices]\n        \n        return result\n#...\n```","range":{"startLineNumber":86,"startColumn":4,"endLineNumber":100,"endColumn":21},"embedding":"AGAwPQCARL0AQBg9AKBEvQAA17sAAAK8AEALvQBALj0AIJa9AAArvQBAML0AAMS7AIDSPAAgW70AwIa8AKBHPQAgPD0AAFu8ACCnvQCA3DwAAJa7AEC0PADAAz0AkIy9AABQugAA/zwAwP88AIBMvABgGT0AAA28ACAmvQAAlbwA2AS+AKDEvQDAHL0AAES7AIClPABA0T0AgEM8AIAKvQAABD0AgAy9AADdOwDART0AwCS9AMAXvQDgFL0A4CA9AIAKPABwiz0AQKK8ACCDPQBASL0AQNu8AGAJvQCA2LwAAAy7AECHPAAAzbsAAFS9AIAQvADAkzwAgEc8AGB6vQAABDsAAPc7AMDzvAAAkLsAYEO9AEC7PAAAwrwAAOK7AEDZvAAA7rwAQLE8AMB/vQAAebwAUM49AADQOQBAmbwAgGI8AGAOPQAAMbwAQJQ8AGAPvQDAXb0A8IK9AAAGvABAw7wAAGM8AMCVvAAgFz0AQLm8AEBCPQBgBT0AALq7AGBJvQBAYr0A8PQ9AAC1PAAACr0AYFc9ADCIvQAAQLwAgBs8AKBHvQAAujsAgG88AACdPACgBj0AQEq9AAD/uwDgoz0AoDo9AIAdPADQrL0AAKA6AIAJPQAA57sAYHO9AECwvACgPT0AQFg9AECRvACQoD0AADo8AABYPABg7r0AgCa8AMAIvQBAnDwAgGG8AAC+PABwiL0AgF68AMB2vQCAVLwAgM48AEBMvQAAyLwAQDW9AMDUvADgwz0AIFc9AGABvQBA7TwAICW9AGBoPQAAqjsAkKA9ALC+vQDgRj0AQDY9AMDNvABAjLwA4He9AEDNPACAcz0AwJA8AHCgvQAA3DoAIAC9AADQOwAAmzsAgE+8AACnPQDA7rwAgHs8ACCFvQCgT70AIKQ9AAD8ugBgJL0AoBK9ACAsPQBgab0AQN28AEDAPQDAvrwAABA7ACARvQBAgbwAYGG9AOAHvQAAqrwAoB+9AGA0PQCAbTwAAOY7AADmuwAAyDsAAKK8AABKOwDAtrwAACy8AAAXvQDAWj0AwKo8AIB3PAAA7rsAAAO9AOgAPgCgm70AQNu8AECKPQAABTwAoEu9AACLvAAgVr0AALi7AAA3vACAPr0AAA29AMCdPACAYzwAANi8AACQOwCAYDwAANm7AOAVPQBA8zwA4DY9AOAQPQAAxTwAAM+7AMBsvQBQ070AQMi8AACoOwAA2DwAEMO9AABMvQBgEz0AAAy9AICYPACgTL0AAO28ACCXvQDAMj0AQEk9AICIvACANj0AQCe9AAA0vQAAcTwAANy6AADDOwDgAL0AoBG9AICuPACAbj0AQDu9AEBIvQAAl70AAFy7AICHvAAAX7wAwMw8AICfvQBArDwAwK88AAB4PABgZL0AgEs9AEDzPAAA5rsAgDo8AOBjvQBAbT0AAAM8ABCIPQBgGT0AAEA9AACCvQCAmLwAYBU9AIBTPAAAlbsA0IQ9AAD5vABAirwAAHC8AIAuPACwhD0AgDA8AAAYvAAAhjwAgOS8AADNOwDgEb0AAGI7AJDHvQAAIL0AgM28AKAsPQAAHrwA4IK9AIBHPAAA9bsAYKu9AEBJvQAAFbwAQIc8AAACPAAAsTsAANM8AICzPAAACDoAgFw9AAAbPACAnbwAgFs8AIBHvAAApLsAgDy8AIC4PADAXD0AIAg9AICOPAAAXLwAoIm9AMBPvQBAsbwAwIo9AAB6vADgdL0A4AO9AMAaPQAASLsAEKG9AIDdvACgBb0AAO47AIBBvQAAlzwA4B+9AEDVPAAALjsAQPS8AGAePQDAvL0AoCO9AAAPvQBAGb0AAM+7AIDJPACArDwAaAI+AAAUPAAgQL0AgMa8AADnPACQvb0AAIA6APCBvQCAbLwAwLa8AKDdvQAAIDwAQNq8AOB+vQAgHD0AgF89AGACvQBAp70AALC7AECMvADgOj0AwNc8AIBuvAAAc7wAAAw8ABCYvQAAlzwAQI+9AECKPADQBz4AALA9ACCGvQCgNr0AADC9AADjPABglz0AAOi6AOAuPQAA0DsAgCw8AEBDPQAA8bsAABQ9AIA6PQAAeDoAgM28AKCDPQAwjD0AwKc8AACePACAIjwAcIA9AMB4PQCAerwAkJg9AMDRPADgWr0AQCY9AODAPQAg6z0AoJE9AADwOwBAuTwAAJ08ACBivQDAnLwAAKC7AIAcvADARL0A4BS9AMBsvQAAZb0AABQ9AACovACAnTwAACo8ADCmvQAAvLsAALQ9AGAtPQDgCL0AIJO9AEBwPQCwlD0AAL88AACwOgAAx7wAACy8AABMOwBAyzwA4EO9AIBEPABAGz0AwI29AMDNvABAEL0AACy8AAAGPQDgDL0AAHw8AIAKPQBgL70A4Bm9AGASvQAANLwAoHK9AADHPACwBz4AwAS9AMCAvABArrwAgAA8AACwvAAwzz0AAHw7AAAAOACA17wAwN68AIAXvADAjDwAIAs9AACKvQBw670AwLQ8AMBwPQBgMj0AgLs8AAB4OwDQh70AgPe8AMCjPACASzwAAK68AMC7PQAAfLsA8Ji9AIAgPQDAST0AoOE9AAAYPADAv70AoCk9AMDPvAAgRL0AYKI9AIB7PQCAHbwAADE8AAD1vAAAurwAYB89AABcOwDAFj0AUKA9AKAyvQAAyzsAgOI8AIBAvQAAIr0AAP+7AED8PAAgV70AwPY8AOAVvQDAED0=","chunkHash":"1e2ebaa16d090309b0b6a5de703eed4af48e26479081422f2a80c85920236281"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass TextureDataset(Dataset):\n    \"\"\"\n    Custom dataset for loading 3D texture data\n    \"\"\"\n    def __init__(self, root_dir, sample_ids, class_csv_path=None, \n                 is_cytoplasm=False, box_size=(104, 104, 104), debug=False):\n        #...\n    def __len__(self):\n        #...\n    def __getitem__(self, idx):\n        #...\n    def _crop_or_pad(self, data, target_shape):\n        \"\"\"Crop or pad data to target shape\"\"\"\n        #...\n```","range":{"startLineNumber":29,"startColumn":0,"endLineNumber":87,"endColumn":46},"embedding":"AMC5PACA1rwAoCs9AAAavQAABrsAgB29AEDXvADAgjwAcIC9AECnvABAq7wAgIm8AIBDPQBgb70AwLy8AIBDPQDgGD0AAIC4ACDWvQCAGjwAAAY8AMDYPAAACj0AcK29AIA8PACgPD0AAPE8AABwOgAgZz0AwMK8AABkvQDAmLwAANC9AFDbvQBARr0AgGY8AID3PABA0T0AwOU8AEDevADAuTwAYEW9AECBPAAgSj0AAAy9AIASvQAAp7wAwCE9AAABPQDgPj0AgCa8AKB+PQBgBr0AgCi8AEAwvQBA77wAQNO8AAC8PACAkbwAIGq9AADQugAAGLoAgFU8APCCvQAgEj0AAI07AIDDvADAw7wAgFq9AIB6PADAiLwAQMu8AEAQvQBgWr0AwN48AKB4vQAAg7wAkM49AAD0uwDAH70AwM88AOBVPQDAj7wAAOM8AAA3vAAwg70A4La9AIBMvAAAv7wAAKa7AMDzvACAlDwAwJy8AGBVPQDAizwAANG7AMAAvQAQib0AwNg9AMCiPADAk7wAwIo9AMB9vQAAxDsAALU7AECSvAAAnDsAgAO8AACcuwCAjTwAIFq9AICPvABAfz0AwLA8AIAWPAAAmb0AAJC7AADKPACAKbwA4IO9AID3vABABD0AoA49AAD3uwDATz0AAIS7AIC6PADgt70AgEq8AEDAvACAIrwAAAS8AAD6PADALb0AAHC7AGA4vQAAybwAoBA9AEDmvAAAcbwAoBa9AADmOwDwhz0AAIs9AIBKvADASz0AwIy9AECrPQAAeTwAMJo9AICrvQDAIT0AADc9AMANvQAAizsA4CC9AEALPQBgbz0AANs7AFCJvQAAfDsAgPm8AEDVPAAA6LoAAO+8AKBxPQAAuzsAALA6AEBsvQBgYL0AMI49AAD6OwDA2rwAwOO8AIBaPADADb0AQAC9AHDfPQCAGL0AgAE8AMCevAAAMLwAQCa9AIDvvAAAu7wAwBC9ACBmPQAAUDwAgJE8AIA5vACAtTwAALC8AAC6uwDAsLwAAAa8AEDUvADAcj0AACY7AAB6OwCAvDwAIB+9AKDkPQAgir0AgLW8AAAYPQCAK7wAQBm9AAAAugBAgL0AALC6AAClvABgYb0AABy9AED5PAAA7zsAgLu8AADiOwAAeDwAAN47AEA/PQCgIT0AYBo9AIAxPQAAdjwAgBa8ACCMvQBwwb0AwLa8AIAUvADApjwA4J29AIA6vQAgGT0AgOG8AABAugDgQr0AYGS9AKB8vQBghj0AgPY8AICcvAAgUD0AgIa9AIBdvQAA9DwAAPw7AIB6PAAAd70AAN28AACbOwDAWj0AAOi8AID+vAAgpr0AACQ7AMC+vAAA4bwAAA+8AHCbvQAALzwAwIM8AMC9PADAV70A4GI9AABnPACACDwAgBU8AOBIvQDgXj0AADy8ABCCPQDAlzwA4Io9ABCBvQAAfbwAgNc8AIBBPACAUTwAIJ89AACIuwCAzLwAAPY7AIA5PAAwpz0AADw7AACSuwDAhzwAQIC8AMCZvACAS7wAgIa8AGC+vQAgHb0AwCO9AICBPAAAZrwA4B69AMCIPAAA57sAoMO9AGBzvQAA+bsAAIs7AABkPAAABbwAAJU8AAAQOwCArLwAQIQ9AIBuPAAgSr0AAA08AABRvACACbwAAJo8AAC2uwAAPz0AgPc8AHCIPQAApLsAIIW9ACB7vQAAPbwAwIs9ACAPvQBgQL0AAFq9AEDcPAAAHbwAkLO9AMCQvACAWL0AAIk8AIAZvQCgPT0AwLS8AKBEPQCAnTwAwG+9AIDcPAAgpb0AQPW8ACACvQDAsbwAgDi8AECkPAAAvDwAuBA+AIBpPADAKr0AAGq8AMDdPADwmb0AAPE7AKBYvQAAbLwAgC69AODLvQCAEDwAAGG8ANCHvQCAbT0A4F09AGAnvQCgdr0AgHw8AMAXvQCAtDwAAEE9AADkuwCAkrwAAKQ7ADCOvQAAtzwAIJG9AAAoOwCYAz4AkNU9AGBpvQDA/rwAgEG8AIAXPACgdD0AADU8AOASPQAAiTwAANg8AEB1PQAAADsAICE9AMBJPQAArrwAALG8AGB2PQAAWT0AQKY8AGAIPQCAcjwAwIQ9ABCIPQBAxLwAIJk9AAAEuwDAhLwAQCI9AGCqPQAYAD4A4JY9AICBPACAjLwAIAQ9AIBSvQDAmLwAALu7AAC1uwBAkL0A4JK9AIBuvQCAD70AQD89AADMuwBAsjwAgKa8ADCOvQAADrsAkOE9ACBYPQCgBb0A4HW9AACePQCwlD0AAMw7AAA3vABAlrwAAGC7AACjvAAAILkA4FW9AIAAPABAKD0AUIm9AIAzPABAzbwAABS8AGAxPQDAGr0AAIk8AACPOwDwiL0AQA69AOAovQCAFL0AoJK9AIAMPQAwDz4AQNW8AAAoOwDA/rwAADU8AIB0vABgsD0AAIA7AIBjPAAArrwAAHG8AAAuOwBA2jwAIDw9AMANvQBgAr4AwK48AOBcPQBgIj0AwPc8AAC9OwAQh70AgBy9AIB/PAAABDsAAIa7ANChPQBAtTwAYJK9AFCHPQBA+jwA6BM+AECvvAAQzb0AwEo9AICJvAAwgb0AYHo9AJCCPQCAGbwAgDK8AIDHvAAAYLwAIFg9AMC9PAAAprsAMKg9AAD0uwCASjwAANU8AEBJvQDAZL0A4Bq9AACdOwAA+bwAgM08AEDwvADwkz0=","chunkHash":"bf354ebdeeae7c795d4a86830485dd13228ef0635b1d262bd52f9cee13f1d8e2"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\ndef get_morphofeatures_texture_dataloader(root_dir, batch_size=4, shuffle=True, num_workers=4,\n                                         class_csv_path=None, sample_ids=None, is_cytoplasm=False,\n                                         box_size=(104, 104, 104), pin_memory=True, debug=False):\n    \"\"\"\n    Create a DataLoader for texture data\n    \"\"\"\n    # If sample_ids not provided, get all directories in root_dir\n    if sample_ids is None:\n        sample_ids = [d for d in os.listdir(root_dir) if os.path.isdir(os.path.join(root_dir, d))]\n    \n    # Create dataset\n    dataset = TextureDataset(\n        root_dir=root_dir,\n        sample_ids=sample_ids,\n        class_csv_path=class_csv_path,\n        is_cytoplasm=is_cytoplasm,\n        box_size=box_size,\n        debug=debug\n    )\n    \n    # Create dataloader\n    dataloader = DataLoader(\n        dataset,\n        batch_size=batch_size,\n        shuffle=shuffle,\n        num_workers=num_workers,\n        pin_memory=pin_memory\n    )\n    \n    return dataloader\n#...\n```","range":{"startLineNumber":103,"startColumn":0,"endLineNumber":132,"endColumn":21},"embedding":"AIAPPQBAKb0AAK48AIB3vQBgBb0AILG9AAAuvAAAsjwAsIa9AOA3vQAAabwA4Eg9AIBlPQDg770AAJA7AICZvAAA7TwAANq7AIAevQAANDwA4Ec9AAA2vACAObwAgOC8AACNvACA6rwAAAI8AACdPAAgCT0A4FO9AMA4vQDA1bwAIDG9AKBZvQAAU7wAgDq8AIDGPACQ8D0AQLy8AMAAvQAA8TsAYO69AEDbPAAwmT0AgLw8ABCIvQCAPLwAQJ68AIDiPAAAAzwAgDI8AAA+PQDAH70AYDO9AAAwugDgA70AAGy7AIBqPAAAT7wAgNq8AKA1PQCAiLwAgCI8AMBnvQAAeTwAADC6AIByvQAA2LwAEIG9ACBaPQAA/zsAYEK9AIADPQAAar0AADY9AID9vAAQxb0AoLs9ALCDvQAAQDsAgAM9AKBWPQCAK7wAABQ8AAAxvQCAZ70AoBC9AAAjPADABT0AIGu9AAArPAAAbjwAoEq9AMDiPACACD0AICW9AIB4vAAghb0AYJA9AICsPAAAFTwAQNo8AECqvABAlTwAgPw8AKB2vQAgFb0AQPK8ACAIvQCgND0AcKi9AIBuvADAXT0AAFi7AABaPQBQmb0AwGE9AICavABALL0AwCy9AEAOvQAgHj0AQLw8AMDUvAAAeDwAAP67AMA5PQBQwL0AAAA4AAC+OwDAPD0AgAU9AECfPACAt70AALG8AJDVvQBgF70AAOQ8AABmPACA+zwAIFS9AMCkvABAKD0AkL49AMAivQAABbwAYBC9AIAzPQAA3TsAwDs9AOD0vQAA8LwAMK89AKAYvQBAtDwA0Je9AAASOwAQiT0AANq7AIDkvADA1zwAAMK8AOACPQAA4DsAYE69ABCuPQAgSb0AgHu8AGBLvQBAw70AMMA9AECTvAAAuTwAwDS9AABbPACwjb0AYHm9AEDKPABgDT0AYKe9AIBFvAAAtzsAgKY8AIAsvQDAIr0AAF29AOClPQBART0AAFI8AMDNPACAf7wAAPq7AIDCvACA0TwAAGi6AAAvvADAsT0AAI07AMCmPQCgAz0AgHS8ANDQPQDAU70AgD69AAC+PACAFrwAAAA6AADoOwAAyLoAAAg7AMCYvADArLwAAN67AMDdPAAAbDsAAPe8AIANPABAwTwAgMo8AAA/PQAAij0AABM9AACKOwBgbz0AQKs8AEBWvQAA4bwAwKC9AECJvABAuzwAUJe9AADPuwBgFT0AgKG8AKBKPQAwg70AgI+8AIAMvQDgRz0AICQ9AIAevQAgHj0AQCq9AMAsvQAgED0AAES7AACJuwCATL0AAGi8AIDLPADgiT0AgPC8AECXvAAAyL0AAIo8AAArPADAG70AoCi9AMC1vAAAqTwAQIU9ACAOPQAgpb0AUJI9ACAbPQDgAL0AwOq8AEC1vADAujwAAAs8AKAiPQDgS70AQEk9AAAHvQBgUL0AABy8AEApPQAAfjwA4JU9AABePQBAkrwAAPa7AACuPADgGT0AAH+8AIBEvQAAjDsAwNO8AEAxvQDAgDwAgCS8ALDOvQCA+LwAYAe9AMDKPAAAfrsAAKO8AEA8PQBAmjwAgE69AKAYvQBASr0AANA8AICWvABAJT0AABG8AIACPABgm70AkMk9AACsPACgEL0AAOG7AAB6PACAlzwAAHc9AEBZPQCwjj0AQNk8AEAfPQAAgLwAEKi9AFCovQCAuTwAQIw8AADzvAAgBj0A4DS9AIAUvABQv70AQAy9AIBevACAYL0AQCE9AICuvABgCT0AADc8AOAvPQAA0LoAQJU8AOA3PQDwrr0AAFM8AKAmvQBAFL0AoBU9AEChPQAAAjwAsJ09AGAVvQAA6zsAAOy8AKAQPQAA2DoAQA49AEC6vAAAQDsAwGq9AEA6vQDA1zwAAAw8AMC9vQAAkD0AYFQ9AIA1vAAAeLwAIIU9AADYuwBglT0AoD89AMDqvAAAEDwAgMo8AKCPvQAAgTwAYHq9AABqvABgvT0A0J49AEAivQBgVT0AYAI9AMCoPABwiD0AALq8AADoOwAA3zsA4Aw9AABYugCAdLwAAJY7AABKPQDAXr0AAIy6AABIPQBABD0AIDU9AACGvAAA+zsAYA89AMA6PQCAwbwA4GQ9AAA8vAAAt7wAAMw8AJDUPQDAEz0AIAA9AMBePQAASj0AAHQ9APCCvQBApLwAAK28AIAtvADAHr0AAKG9AACruwAwpL0AgMw9AMAGvQAAhjwAAJ+8AADjuwDAvLwA4F49AICPPQAAyzsAoGW9ACAXPQCAPrwAQIq8AEBJPQAgBz0AwI08AKAzvQAA1LsAwBC9AED5PADgn70AgAM8AECZPAAAxLsAALs8AECpvACAMDwAwIS8AKAlPQCgFL0AIIa9AABSOwAADb0AwJs8AAAAPQBgwT0AgCm9AOA0vQCAnbwAAG89AOAGvQAAtj0AQAS9AADIOgBAPr0AADu8AABIuwAAmjsAQP68AEBTPQDA0bwAIB89AMC2PACAcjwAwIM8AECZPABAf70AgKC8AAAMPACAc7wAQLC8AGAkPQBA6zwAcOq9AAAouwAA7TsAuCI+AIAPvABgFb0AwJM8AIBHvABgP70AYGw9ACC8PQCABbwAQGC9ANCXvQAgZb0AACM9AAAHPQAAfrwAgCY8AKA3vQAAZDwAQDM9AABGOwCAp70AgOa8AAAkPAAAgb0AAKa7AADXuwBw1T0=","chunkHash":"3f5d9d83644b0ea79b905d05a03e80ec21e23d80f3c1e605f2522bbc589d6086"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    def __init__(self, config, model_type='lowres'):\n        self.config = config\n        self.model_type = model_type\n        self.device = torch.device(config.get('device', 'cpu'))\n        \n        # Setup directories\n        self.project_dir = config.get('project_directory', f'experiments/{model_type}_texture_model')\n        os.makedirs(os.path.join(self.project_dir, 'Weights'), exist_ok=True)\n        os.makedirs(os.path.join(self.project_dir, 'Logs'), exist_ok=True)\n        \n        # Setup the model\n        self.setup_model()\n        \n        # Setup dataloaders\n        self.setup_dataloaders()\n        \n        # Initialize best validation loss\n        self.best_val_loss = float('inf')\n        self.current_epoch = 0\n        self.num_epochs = config.get('num_epochs', 50)\n    #...\n```","range":{"startLineNumber":139,"startColumn":4,"endLineNumber":158,"endColumn":54},"embedding":"AADoOgAA8zwAYCQ9AMDfvQAAmjsAAEQ7AGBLPQBAHT0AQN+8AMCLPADgML0AAM+8AAA6OwDA0bwAAAQ7AADgugCACrwAACk9AABRvQDgGT0AwIo9AMDRPACAVDwAgCg8AICfPQCAvTwAQBA9AACYOwAA8TsAAFY8AACNPAAAhrwAAIq9AOB0vQCAJ7wAYCS9AEDePAAAHT0AgEk8AKAkvQBA7DwA4EC9AABvPAAQ2z0AANa7AIATvAAAgbwAYOk9AMCcvAAAHzwAAPO8AMAaPQDAWL0AwJO8AMAevQBgML0AwJM8AADAuABAeL0AQO08AMC4PADgdL0AgB08AMD5PABA2TwAgAe8AFCbvQCAFr0AYIS9AABrPQAAszwAwJm9AADNPAAAyrsAAAA7AECcvADggr0AIJw9AABAvQCAkTwAAG28AABiOwAAkbsAwMI8AABquwAA+rwAwLK9AMC+PADACD0AAF69AADLvACA3jwAgBm9AICaPAAgmj0AACG9AADWOwBAwLwAQBc9AAB0OwCANL0AgGw8AIBCvABw3j0AgFw8AICrvACA0bwAwN+8AEDsvABgoj0AwH69AADEugBg6T0AAPs7AAC7uwAg9b0AoE49AMD8PAAAbjwAIAy9AABOuwDAFT0AAIo9AGByvQAAKzwAADK7AOBhPQCAk7wAAA29AOASvQAANjwAwPA8AACJvAAAi7wAADC8AHDqvQBgSL0AwO48AAC1vADA8TwAYAS9AACYugAAeDoAwIA9AEBHvQAAcLsA4Fa9AMDnvABgID0AwDY9AACgvQDAw7wA4Ew9AGABvQDAlrwA0IW9AMDuvABgEj0AwNI8ACCEvQAATDwAgBI9AIBJvAAA8zsAsIu9AAB5PQBAlr0AoAc9AEC3vABAmbwA8No9AECKPQCAPbwAkIC9AOAuPQDgvr0AcI69AKATvQCgU70AAHm8AAB3vQBAFz0AoKi9AMCcPADwgb0AgPi8AAD3PAAAlzsAgJA8AIBXPQBgGL0AQJG8ACBiPQBgQD0AIGA9AAACuwAAJT0AAJI8AADqOwDAmbwAwMA8ACBUPQDAibwAAEi6AEDJPACAR7wAQNM8AECJvABAjzwAQME8AACYuwAA8rsAIFA9ANC/vQAA6DsA0Ii9AECsvABAxLwAAK28ALCLPQCQjj0AgEi8AICIPAAAcz0AQBY9AACaOwAA8LwAYCm9ACAYPQAA3bsAAB47AAAXPACAHzwAANi6AJDDPQDgxr0AwN68AAAMvQAQgj0AIFg9AADouwDwtj0AAPG8ACCTvQAAUTwAwAW9AMAdvQCACb0AIGc9AABMPACA2jwAANg8AMDtvADgAr0AgDo9AKArPQAws70AgAu9AKAsvQBgIb0AEIs9AAA/PABAFr0AAEA7AADjvAAArTsAAIa8AMC9vADAozwAoAa9AEC+PACAALwAAO48AIAoPAAAgLoAQIc8AGB9PQDAmzwAgCg8AABIuwAAbbwAAMw6AEDqPADAmTwAAGA6AABnPAAARjsAgMK8AMCdPAAAC7wAwLa8APDCvQBAEr0AADq9AMC3PAAAgDwAgE69AIAkPABgcj0AQP68AABuOwAAtTsAQEK9AGBavQCAND0AQJy8AABKPQAA0bsAIM09ACATPQBA9LwAAHG8AABbPAAABzwAYI09AACsugDAuTwAIBM9AFDCPQDAED0AoAW9AIAWvQBA0bwAANe8AABAOwCAHDwAwIQ8AADvuwCgVr0AQDq9AIA5vAAA77sAgAu8AOAFPQAAbzwAIMg9AACEOgCAIj0AwAw9AEAoPQDAVb0AQGC9ABCOvQAArD0AAMY7AAB2OwBgZL0AgF89AIBpPACA+rwAYDY9AABxvAAAfbwAYDO9AKCMvQAAzLsAAFC8AIBVPAAAwDkAAJw8AJgDvgBgBT0AcJI9AAAUOwBADL0AYGI9AIDWvADQlD0AQKY9AACZvACAb7wAADY9ABCJvQAgYz0A8Mu9AADwugCAoj0AAPI8AEAZvQAAbLwAoAU9AOAGPQCAtT0AwJw8AIB5vADghL0A4CA9AGArvQBgN70AgCg9AGBxPQDAAL0AUIW9AAB3PQCAhD0AcKc9AACEOwAAEz0AoCM9AMC2PAAgpb0A8L89AGB8vQDAubwAAJE7ABCGPQAA1zwAgNw8AKBSvQBgYT0AcNI9ANDCvQAA+bwAAOC6AICfvADgDb0AgBi9AABAPAAACDsAgDo9AKA7vQCAGL0AAGQ8AGBlvQCAFbwAYDM9AJCXPQAQrr0AALk7AADUOwBgEz0AgI28AECCvQBAujwAoI09AMDVvAAAlLsAACY8ADCYPQAASLwAgM88AED/vAAgVr0AwC+9AIADPAAA0TwAoCC9AECGPABAzrwAABq8AMD9PAAAELoAwBS9AACtOwDAhj0AwN08AOCVPQDQsz0AwD49AKAFPQBgmT0AwFK9AIAQvQAAhrsAABY7AACtvAAAIj0AAGS7AAASPQBQp70AgEA9AACoOwCA/jwAAG67AICdPAAgcb0AgKK8AADsOwCgGz0AwBG9AADZPAAALbwAsIi9AIA0PAAAIrwA+Bs+AHCYvQCAPrwAgHO8AMBEPQCApLwAAFU8AMByPQCAQLwAAEa8ACCvvQAAHrwAAKo7AOAIvQBAH70AgGS8AIA5vADgNb0AoMQ9AMBNPQCAQL0AANM7APCIPQBApb0AQJY9AECFvQDgfT0=","chunkHash":"4a929a9aebbf3dcca3a948a8eab527c2f9df4151b2f12d1ce7173a8f2af534ea"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def setup_model(self):\n        \"\"\"Set up the MONAI UNet model, criterion, and optimizer\"\"\"\n        # Get model configuration\n        model_kwargs = self.config.get('model_kwargs', {})\n        \n        # Set default parameters for MONAI UNet if not provided\n        if 'in_channels' not in model_kwargs:\n            model_kwargs['in_channels'] = 1\n        if 'out_channels' not in model_kwargs:\n            model_kwargs['out_channels'] = 1\n        \n        # Configure MONAI UNet with appropriate dimensions and channels\n        dimensions = 3  # 3D UNet\n        channels = model_kwargs.get('f_maps', [32, 64, 128, 256])\n        strides = [2] * (len(channels) - 1)\n        \n        # Create the MONAI UNet model\n        self.model = UNet(\n            dimensions=dimensions,\n            in_channels=model_kwargs['in_channels'],\n            #...\n```","range":{"startLineNumber":162,"startColumn":0,"endLineNumber":180,"endColumn":0},"embedding":"AAAbvAAAjLsAAKE8ABC6vQCAnTwAQJ68AOBvPQAgmz0AAIK7AECEPAAAPL0AACu9AIDFvAAAv7wAgCA8AAD0uwBgCL0AQFA9AEAIvQCAdjwAYGU9AAC3PAAAhzwAgN88AMCsPQBAvTwAwA09AABougCAjTwAAMG7AACqPACACLwAQIq9AICsvQAAxLsAgBm8AADoOwAAZD0AgAG8AADmvAAAoTwAwOu8AABgPADQqD0AgJy8AAChuwCAFDwAYNI9AADtuwBgBT0AQCq9AMBuPQBAv70AYAC9AIAhvQDQjL0AwNE8AACmOwCgiL0AAIQ8AAAuPABAd70AAPy6AAAXPQCA+zwAAMu8ANCdvQCAYbwAkIK9AABUPQAARDwAwHy9AGAjPQAAjTsAwOw8AAAKuwBAW70AIK09ACA1vQAAgjsAgBC8AMDyvACAJLwAALC8AIBePADgZ70AAMe9AABJPAAAHjwAAHG9AMDNvADA7zwAQCS9AIDgPACgGj0AgOq8AIDUPAAAILoAIFc9AIBnvACANL0AAN67AAD0uwBg6j0AQKo8AMCOvABAibwAAC68AMABvQBgnD0AMKa9AAC8OgBQwz0AAH47AIAxvADwAr4AwDk9AEDrPAAAsTsA4Bi9AIAKvAAATDsAsLA9AKBDvQCgKj0AAES8APCOPQAAwLsAoAm9AACDOwBA6TwAAOc8AIAMvACAvrwAAKS6ALDvvQAgcr0AAAE9AABgvADA0TwAgAe8AACWuwBAyDwAsIU9AKCGvQCATrwAYHi9AIDbvADgIj0AwHc9ANCXvQAA4bwAQE09AKCGvQAAuLwAgGO9AIDGvABArDwAQAI9APCKvQAAWjwAwFc9AIBivACA0DwAwF+9AAA6PQDgvr0AgEg8AIDNvAAAAb0AcNU9AOBzPQAA+LoAwGC9AGBBPQBArb0AgG29AAA5vABAdr0AAC28AIB/vQAgLz0AUKC9AMCUPABgXr0AAFY8AGBhPQAAaLsAALm7AEDJPABAzbwAgKu8AEBpPQAgOD0A4B49AMDlvABgAj0AAHW8AABWOwDAg7wAAPi6ACAUPQCAZ7wAAK+7AMBDPQBAHL0AwJQ8AEDTvAAALzwAYDU9AACXOwAArDoA4FU9AACjvQAAHDsAgJC9AIBivAAANbwAIEW9AEA7PQAwqT0AAFU8AABwPADgRz0AAJY7AAAwugBgCr0AgAG9AAAGPQBgCr0AAOM7AIAJPQDAxrwAAPC6AGAQPQBwnr0AADW8AKBQvQDADj0AIAg9AMChPABQuj0AgHG9AMBvvQAAUTwAAAy8AEChvADAkrwAYBM9ACAAPQBAhjwAAOC5AIA9vQAAd7wAgBM9AKA5PQDQlL0AAEW8AGAavQBAGb0AoJA9AAA6PQAA/bwAAF48AMArvQCABjwAAKi8AACvuwDAzjwAQL+8AKADPQCAprwAAP47AAA0uwAA9jsAAKU8AMAKPQBAnDwAwKs8AEAVvQBA87wAQAo9ABCUPQBA0TwAgCU8AABqPAAAwzsAgKy8AAA/PAAAuDoAAA+8AJDKvQCAULwAgMa8AKAdPQAATDwAYDK9AAByPADAXD0AAPC8AIBjPAAAxzsAgOG8AAAKvQCAojwAgJC8AEAYPQDAML0A2AA+AGAxPQAA3rwAAE47AEDiPAAApjsA0J89AICMvAAA/DwAAPC5AGC+PQBAcj0A4Da9AKAEvQCAQLwAgAK8AAAyuwAAhzwAAEO8AABQOwBgor0AwCS9AABUuwCAzLwAAHu8AIARPQAAlzwAcLA9AABxPAAgIz0AgBo9AABQPAAAo70AoG29AKB7vQCART0AQMG8AADCvABAUb0AoEw9AAD/PACAEb0AoDQ9AIAAvAAAo7sAABu9ANCmvQAAhDsAQN68AMCMPAAAfjsAQIk8AFAMvgBAxDwAAEw9AECSvADAtrwAIDI9AOAtvQDQrz0AALE8AECYvADAQ70A4Bg9AGC0vQBgPz0AAMq9AADeuwBAWj0AgAc9AOA0vQBAlbwAQBU9AEDsPAAAJz0AgCg8AECAPACAkr0A4Cs9AKBwvQBgAb0AwPs8AMBJPQAAsLwAQGq9ACBEPQBwlz0AoFk9AMD7PAAA7DsA4AY9AOBzPQBgd70AAKw9AGASvQBAWr0AAFS7AHCpPQAAWD0AACQ7AGBSvQAgaj0AgKM9AECuvQCArbwAgGC8AAB2vAAAHr0AQPi8AACguQAASLsAoFY9AAC8vACA5bwAQKk8AKB1vQAAG7wAAAk8AIBsPQBwub0AgHc8AABAOwDgBz0AAKy6AHCdvQCADD0A4JA9AACZuwAAgTsAgA08AMCbPQAAzTsAwBM9AEAuvQCgkb0AYEq9AADPuwDA0zwAgB+9AOADPQCABb0AAAO8AIAqPQCgGL0AAH67AMC1PABQlj0AgLA8AKBkPQBQ1T0AAOI8ACB6PQCggT0AYBG9AOA6vQBAqDwAANy6AEAMvQDAzDwAAL47AKBgPQBAib0AYGQ9AICCvAAAFT0AAIA4AMCYPABgcb0AABs8AAAbPACgSD0AwEq9AIAaPQAAa7wAwJG9AAAgOgAAhLwAAD8+AMCkvQBAqrwAAIm8AOBiPQBA77wAgNo8AIDaPACAJLwAwIG8AJDTvQCAfjwAADY8AEAqvQAA0bsAAGi7AECAvAAgNr0AgKU9AGAUPQCADb0AoAO9AIB/PQAQwr0AcKk9AGBSvQAgUz0=","chunkHash":"b894f4b46ff6be6c9b1fd4610ce879b60d1b419bf8f92b6be1632c1a25bb5b71"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def setup_model(self):\n        \"\"\"Set up the MONAI UNet model, criterion, and optimizer\"\"\"\n        #...\n            out_channels=model_kwargs['out_channels'],\n            channels=channels,\n            strides=strides,\n            num_res_units=2\n        )\n        \n        # Add sigmoid activation if needed\n        if model_kwargs.get('final_sigmoid', True):\n            self.model = nn.Sequential(self.model, nn.Sigmoid())\n        \n        self.model.to(self.device)\n        \n        # Setup criterion\n        criterion_name = self.config.get('loss', 'BCELoss')\n        criterion_kwargs = self.config.get('loss_kwargs', {})\n        \n        if hasattr(nn, criterion_name):\n            self.criterion = getattr(nn, criterion_name)(**criterion_kwargs)\n        elif hasattr(monai.losses, criterion_name):\n            self.criterion = getattr(monai.losses, criterion_name)(**criterion_kwargs)\n        else:\n            raise ValueError(f\"Unknown criterion: {criterion_name}\")\n        #...\n```","range":{"startLineNumber":180,"startColumn":0,"endLineNumber":202,"endColumn":0},"embedding":"AACUugAA0DsAwJg8ANDIvQBAtzwAAC+8ABCOPQBwlj0AALO7AIA2PADgPL0AYBO9AMCJvABAz7wAABM8AADAOgBA87wAYD89AMD9vACAyjwAIH09AKACPQBAnDwAgPo8AACwPQCAiTwAQNY8AAAguwAAkDwAAFC8AAAHPQAAKLwAQJK9AMCnvQAAxrsAAN+7AICrPADATj0AAPy7AMDgvACAhTwAQPy8AIAmPAAwuj0AQMy8AIAvvACAVzwAYNk9AAB+uwAABD0AYCi9AABrPQCwsL0A4Bq9AMALvQBAkb0AgKA8AACSPABgkr0AQKE8AABAOwDAfr0AAIk7AAAZPQDABD0AwOW8ANCbvQDAk7wAsJS9ACBoPQAAuTwAoIS9AGAePQAANzwAAIU8AAB/vAAgY70AUKk9AID8vAAApLoAAAy8AAAGvQAAxLsAALO8AIADPAAgSb0AgOq9AECLPACABjwAQF69AECovAAA6DwAwDu9AIDePABgcD0AAM28AABmPAAAmDsAwFU9AAA7vACAJr0AQI+8AIAmPACA0z0AgPg8AAByvACAYrwAAE+8AMAbvQCAmj0AwKC9AADgugAwxz0AAEo7AABUvACA8L0AAH49AEDnPAAAKzwAQCy9AIBFvADApDwAYK49AEBPvQCgBz0AAPy7AHCAPQAArLsAACG9AABIOwCArzwAQNY8AADjuwCA4bwAAII7ACDovQAAdr0AwOk8AACAvABA3zwAAOS7AABUuwBAsDwAgG89AEBvvQAAnLwAwEq9AKBNvQCgGz0AAHY9ACB5vQBgCL0AoEU9ANCFvQBAxrwAQF+9AIDyvADA2jwAwOA8AMBwvQAARzwAAFs9AIB7vADA+jwA4FK9AOAoPQCQwr0AAM48AEDGvABA7bwAcNc9AMB0PQAAPrsAgDm9AAAVPQCwv70AwFS9AIDGvADger0AACG8AGCKvQCAQD0AIK69AECePADAYr0AAM47AMBGPQAAULsAACQ7AIDIPACgA70AAJy8ADCHPQCAOz0AwCA9AECtvAAgFj0AAPe7AAA6PAAAp7wAABw8AIAbPQAAobsAgCa8ACBEPQBAFL0AAG48AIDIvAAARTwAABo9AIAmPAAAqTsAAHY9AICmvQAAMjsAsJS9AIBrvAAAlbwA4By9AOBZPQAwnj0AgFc8AADzOwDgZz0AAEw8AADPOwCAFr0AoAm9AMDfPAAA47wAgDw8AADsPAAApLwAAEo7AMA5PQCQqb0AANm8AMBFvQDgGz0AIBE9AECYPACAvj0AYE29ACCLvQCAZTwAAO27AICmvADAyrwAYBY9AEAFPQCAvjwAAN87AGAMvQAAI7wAQO48AIAkPQDwqr0AQLi8AKAcvQCgN70AkIw9AMASPQCArbwAADs8ACARvQAAsDoAAOa8AAAOvABA2zwAAFG8AMDePADApLwAABY8AACIOgAAajsAAJ48AMAdPQAAgzwAgKE8AMAhvQCA8bwAQKk8APCNPQCAsjwAAOC5AICGPAAAWTwAQOu8AIBUPAAAjjsAAAK8AFDQvQDAhrwAgMm8AKAfPQCAdTwAYCu9AICQPAAgOD0AgLW8AAAFPAAAxTsAgN+8AMDjvABArzwAgHK8AAAoPQBgLb0AMA0+AIAlPQDAv7wAAAq7AMDePAAAADsAEJs9AIB9vAAA6jwAgBU8ALDGPQCAbj0AwCS9AADwvACAVLwAAGA5AADNuwAAyTwAgAw8AAB2uwAQlb0AYCW9AAAsuwDAt7wAACK8AKAkPQDAqjwAIJE9AECaPAAALz0AoC89AIC2PABApr0AQF+9AKB6vQBAVD0AANu8AECIvACAYb0AwEo9AECiPAAA8LwAID89AIBovAAAwLgAIAu9AACnvQCAWbwAYAG9AACLPACAETwAwNk8ANgHvgDgBT0AgF49AAAtvAAAl7wAAEI9AMAnvQCQuD0A4BU9AAB8vADAGr0AYB89AJCqvQBATj0AsMG9AADsOgCgVD0AwBg9AMAlvQCAbLwAIBY9AEDbPAAALT0AgKc8AMCTPACQjb0A4Cw9ACBjvQDA/bwA4BI9AMBmPQCA07wAIGS9AAAqPQBggz0AoGs9AIDCPACAQDwAYBM9AIBxPQBAeL0A4K09AKAcvQCgcL0AADg7AHCiPQAALD0AAB08AMBSvQBQhT0AsKM9AKCvvQCAhLwAAHi7AAABvABgK70AwP+8AACvOwAAvDsAoE49AIC1vABgFL0AQOg8ABCPvQCAa7wAABs8AMBZPQCQwb0AAI88AAAqPADAJD0AAPC6ANCavQBA5zwAoIo9AAD7uwAAdrsAgEs8ANCkPQAAFzwAYCY9AAA3vQCAkb0AgFC9AADauwCgCD0AYBm9AMCXPADAyLwAAJy7AMAXPQCAtLwAAKy7AECiPADQjj0AALc7AMBQPQCg1D0AwL08AKBZPQAQlj0AYAe9AMAPvQCAgjwAAMq7AEAZvQBA9zwAAMY7ACBxPQCwjr0AoGA9AIBQvABAzDwAALe7AACIPACgY70AAL47AAAmOwCgSj0A4Fy9AEDrPAAAGrwA0I29AABYOwBAnLwACDE+AHCivQCAjLwAQKC8AAB7PQAAX7wAAIs8AICpPAAAKbwAAFO8AMDavQAA7DoAgFc8AIA9vQCARLwAANq7AIBZvAAAVb0AYK89AAD1PAAAFL0AwA29APCFPQDAtL0AYJk9ACBrvQBAUj0=","chunkHash":"be74a487e88c5d74f62dac94bc6273b4efae7335c36233a302824ac7db288346"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def setup_model(self):\n        \"\"\"Set up the MONAI UNet model, criterion, and optimizer\"\"\"\n        #...\n        # Setup optimizer\n        optimizer_config = self.config.get('training_optimizer_kwargs', {})\n        optimizer_name = optimizer_config.get('optimizer', 'Adam')\n        optimizer_kwargs = optimizer_config.get('optimizer_kwargs', {})\n        \n        if hasattr(optim, optimizer_name):\n            self.optimizer = getattr(optim, optimizer_name)(\n                self.model.parameters(), **optimizer_kwargs\n            )\n        else:\n            raise ValueError(f\"Unknown optimizer: {optimizer_name}\")\n        \n        # Setup learning rate scheduler\n        self.scheduler = optim.lr_scheduler.ReduceLROnPlateau(\n            self.optimizer, mode='min', factor=0.5, patience=10, verbose=True\n        )\n    #...\n```","range":{"startLineNumber":203,"startColumn":0,"endLineNumber":218,"endColumn":9},"embedding":"AADduwAAgDsAgIQ8ABDDvQAAhTwAACG8AICQPQAgoT0AAAa8AAAdPADANL0AIB29AMCPvABAy7wAgFo8AAACOwBA7rwAgFA9AIAdvQDA6TwAQJA9AMDNPABAiDwAgPs8AFCyPQBArDwAYBE9AAAeuwCAgTwAANW7AEDcPAAAQrwAoJm9AACnvQCAD7wAAGC8AMCfPACgXD0AgCO8AEAIvQCApzwA4DK9AAB6PADAvT0AgI+8AABguQAAZzwAoLc9AABiOwAgHj0AIEm9AOBYPQAgr70A4B29AIABvQAghr0AAMk8AMCGPABAe70AAKQ8AECcPABgcr0AAGo7AED9PADACj0AwLu8ABCavQBApbwAIIu9AMBiPQCAlzwAAIu9AEAhPQAAwzsAAB88AAAJvACQhb0AkLk9AKAMvQAA1jsAAO67AMDsvAAAArwAQIK8AADuOwDAXL0AQPe9AICoPACALDwAAGy9AICSvACA3jwAwC+9AEDmPABAeT0AwO+8AAAxPAAAeLsAAFo9AAAiuwBgC70AQKW8AABcOwCQ0T0AwLg8AMC9vACAgbwAAC+8AMA2vQBQkj0AIKK9AAAAOwBgxT0AABy7AICRvADw/b0AYGo9AOAAPQAAajsA4D69AIBlvAAARDwAsKA9AKBlvQDAAj0AAPm7APCJPQAAb7wAwCa9AADwuQBA1zwAwNs8AAATvABA57wAAOe7AADvvQAwg70AAMU8AIBdvABA6DwAAFq8AAA4ugBAojwAYIs9AAB6vQDAlrwAoD+9AMAyvQDgCz0AEIQ9AGBnvQAA0rwAQDk9AABwvQAAyLwAoFO9AMDMvAAAtjwAgPI8AEB4vQCARjwAoGs9AAArvADAuzwAQFW9AOANPQAAxb0AwIk8AEDxvADAybwAANc9AOBkPQAAbrsAwFi9AEAZPQAQtb0AwFu9AIB/vABAh70AAKA7AKBOvQCAPD0AYKe9AIDAPADAXb0AAMM7AOBDPQAAE7wAANG7AIDwPACABb0AgIG8AOBxPQCgVz0AQB09AIC6vABgDD0AAG68AADnOwAAhbwAAHQ7AEAsPQAAt7sAgEW8AKBHPQAAEL0AgIw8AMDdvAAAyzwAwBA9AAD7OwAA5jsAYEw9AMCcvQAA5TsA8JG9AABjvACAibwAICa9AEBcPQDgnD0AAPk7AIAtPACAeD0AgDY8AADgOQBA4rwAgPu8AADYPAAApLwAALk7AMDOPADAs7wAADq7AIBSPQCgpr0AgLW8AKA8vQCALD0AQBA9AECHPADgqz0AQGW9ALCWvQAAtzwAAES7AABevAAAmbwAYBE9AAAJPQAAvzwAgA68AMAgvQBAwLwAgN48AIBRPQDwm70AgLq8AOAwvQBAFr0AEIk9AOAXPQAAvrwAAHM8AEAPvQAAkTsAwJe8AABlvABAtzwAADO8AED2PAAAXLwAgC88AADcOgAAibsAQI08ACAiPQBApDwAwLA8AAADvQCA0rwAgI48ALCfPQDAkjwAAPo7AABKPAAAPjwAQK68AAB/PAAARjsAAEa8AADKvQAAkLsAgNS8AAAZPQCAjjwAADi9AIA5PABAMz0AAOe8AAB6PAAASDoAgNO8AED5vAAAtjwAgLe8AMBMPQAgK70AyAM+AOAzPQDgA70AgC08AIDNPAAAWLoAMJY9AAB2vAAA7DwAAPs7AIDAPQBgVz0A4Ei9AMAcvQAAJrwAAEq7AAC6uwBAozwAAFg6AABsuwCQjb0AAA69AADgugAAzrwAABa8ACAdPQDAsjwAcKQ9AECcPADgMT0AIBQ9AMDrPACAob0AAIC9AMCGvQBAQD0AgPi8AACNvADgXr0AgD49AIDFPAAAqrwAoAo9AIB7vAAAeLoAYAu9AACqvQCACrwAgK68AACePAAAxjsAwLM8ACgIvgCAAT0A4Fs9AABXvAAAl7wA4EY9AKAVvQCQtT0AABQ9AAApvABAF70AwDU9ACChvQDgMj0AsMy9AACwuwAAPj0AIBk9ACAivQAAZbwAoCc9AOATPQDgUT0AAC48AIB/PAAAlL0AwAE9AKBmvQDAFr0AABI9AEB3PQDgBb0AsIW9AIAZPQBAlT0AgIA9AEC8PABAozwAIAw9AKB2PQAAdr0AcL89AAAvvQCgPr0AgDK8ALCkPQDgFT0AgAw8AABTvQAwiT0AAKI9ACCnvQBAoLwAANa7AAABvABARL0AQO+8AACruwAAejsAwEo9AMD1vADAFL0AQPo8AGBovQDAirwAgHQ8AKBrPQBAvb0AAHY7AIBCPAAAYT0AAGA5ADCSvQDA7zwAkJE9AAD6uwAASrsAADk8ABCyPQCAAzwAgDs9AOBovQBQjb0A4Ce9AIAlvAAABT0AYC29AMDMPADAnrwAAMi7AAAhPQAA27wAAKO7AADKPABgmD0AAJE7AEBGPQBQwz0AQB09AMBPPQDwlj0AwN28AEAZvQAATjwAANi7AMAsvQAA3jwAACg7AABsPQDAnb0AwFw9AIBQvADgCD0AgBi8AMC5PACAZL0AAHK7AAAougCgTz0AAGW9AGAhPQAAF7wAwIa9AACcOwDAj7wA6Cs+AACUvQCAj7wAwLW8AEBlPQAAZLwAAOE8AGACPQAAOrwAgH+8ANDHvQAAOLoAgBA8AOAzvQDAhrwAAFa8AACmvADAR70A8LU9AOARPQBAHL0AIAW9AOCLPQAgqr0AIJk9AIBrvQBAOD0=","chunkHash":"6c493788a5942e006050996079b899f79cdce6468a85a331d05a260b5f737a54"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def setup_dataloaders(self):\n        \"\"\"Setup dataloaders for training and validation\"\"\"\n        print(f\"Setting up {self.model_type} texture dataloaders\")\n        \n        # Get data configuration\n        data_config = self.config.get('data_config', {})\n        root_dir = data_config.get('root_dir', 'data')\n        class_csv_path = data_config.get('class_csv_path', None)\n        is_cytoplasm = data_config.get('is_cytoplasm', False)\n        box_size = data_config.get('box_size', (104, 104, 104))\n        split = data_config.get('split', 0.2)\n        seed = data_config.get('seed', 42)\n        \n        # Get loader configs\n        train_loader_config = self.config.get('loader_config', {})\n        val_loader_config = self.config.get('val_loader_config', {})\n        \n        # Load sample IDs from CSV\n        #...\n```","range":{"startLineNumber":222,"startColumn":0,"endLineNumber":238,"endColumn":0},"embedding":"AABLPADAhTwA4CY9AKCyvQCAzDwAAD+8AMBMPQAABT0AIAK9AIAvPACAy7wAALG8AABdPADgJ70AgCs8AAD1OwAA5DoAwM88APCcvQDgZT0A0Jk9AAArPQAA6zwAACY8AGDAPQAAzzsAwBI9AACvPABAqDwA4Aa9AAAivABAhbwAsKO9AOAtvQAAALgAQCe9AADYPACwhT0AAPi6AID+vADAwDwA4IC9AAAUOwCw4T0AAGK7AIA1vACAmbwAAMQ9AIBOvACAJDwAIBG9AGA1PQBAfL0AQNm8AEDbvACApLwAAIs8AECavAAAc70AAAq8AMCePACAQb0AgFE8AACpPABANz0AgHS8ADCcvQDgEr0AQH+9AFCcPQBA+TwA0JG9ACBKPQAAFLwAwJU8AADwvADAa70A4MM9AEDkvACAkjwAAAo8AABSOwAAi7sAgLG8AIAPPABA5LwA0NW9AMDhPACgBz0AgES9AADyuwBA9TwA4Ge9AGApPQAAlD0AoCW9AACYOgCADL0AgHU9AAAWOwAgIr0AwI28AADguQBAwD0AAA49AEAsvQCAZLwAAG28AGA0vQCgTj0AcJ29AAC4ugDg+D0AADY7AAAauwBQ9L0AoFU9ACAAPQAAHTwAAEC9AIBtvABAmTwAQI89AOCPvQAAITwAgF28AKB1PQBgEr0AwB+9AABYvAAApLoAgKs8AAA4PABAB70AgK68ACDivQBAU70AgMw8AIAavACgYT0AABS9AMCUPAAARTwAEIc9AADfvADgBb0AoDW9AABdvADA3zwAAPs8ACCtvQBA+bwAQA89AMCDvQAAi7sA4H29AMAlvQBArjwAQP08AGCAvQAAMzwA4BY9AADZuwAADjsAUJy9AIA7PQDgYb0AAFG8AEDvvADgMr0AkNI9AADtPACAIbwAgGm9AAD9PABgxb0AwIK9AACbvADgLr0AYCO9AFCNvQBAFT0AsKi9AACQuQCwlL0AAMy8AIDhPAAAyjsAAKs7AKBzPQDArbwAgFu8AKBgPQBgXD0AgFw8AIA2vAAAET0AwJo8AICWPACANLwAgO08AEBcPQAAabwAgCe8AIDBPABAML0AgN08AIB7vADArjwAgMA8AAAYPABAwbwAgAk9AEB3vQAANrwAACK9ACAYvQAAxrsAAEK8AGBJPQAgnj0AAE48AABIPACAZT0AQKQ8AAA3vADA0rwAQAu9AIAXPQAAjDoAQJo8AABAOQAAALwAAAO8AACqPQBw6L0AoDK9AOAuvQAgDT0AAJc9AAC0OgAwwz0A4Ci9APCkvQAAUzwAwJq8AMD8vABAx7wAAEM9AIB7PABA/DwAAJI8AIDjvACAVL0AwLI8AKAhPQCAlr0AwEK9ACBYvQAACL0A4Hg9AEDPPACgRb0AQIA8AECJvAAA4jsAgIO8AACnvABAtzwAAE29AEC3PAAAb7wAwJA8AMC3PAAAHrsAADI8AMBFPQAAwDwAgGg8AADxOwCAzbwAgEc8AAADPQCAozwAAI27AACaOwCAczwAgKq8AAB0OwAADjsAAH+8AFC7vQAAU7wAgCC9AMAGPQAAvDwAEIq9AIAFPQDAcT0AIAi9AAA5vABAhDwAQMC8AOACvQAgLj0A4Ay9AIAPPQAAJ7wAkNU9AMACPQCAGL0AAAw7AAD6OwCAmzwA4IM9AICivABApDwAQBA9APDZPQDAiTwA4Ga9AAAavADA07wAAA28AIBtvACAETwAgAE8AAAyvABAS70AQC69AIDQvADA47wAAG67ACARPQAAkzsAcJI9AAABvADA9jwAgKA8AABCPQCAj70AQGG9AIBSvQDgZj0AgFa8AIBPPAAQh70A0Kg9AIBhPABA4bwAAB08AIAZvACAnrwAgBm9AACmvQAADLwAgPG8AAD8ugAAXjwAANw6AAD5vQDgbz0AgFE9AIBKvAAAtbwAwEA9AIDQvABAuT0AoGY9AMDdvAAAfbwAwMY8AABfvQDgUj0AcLu9AADHvACwqz0A4Co9AAD0vAAACjwAYFc9AAAAPQDgtD0AAPs7AAC8OgAAGr0AgJg8AGASvQAA6rsAgEk9AMBDPQAApbwAYHu9AIBmPQBgLj0AkJQ9AIApPADAAz0AoB89AEArPQBgc70AsM09AGBovQDA87wAAJg8ADCAPQCAUDwAAKQ7AKAtvQDAHD0AUMY9AAC5vQAAaLwAgAm8AAClvAAAOL0AQCW9AMDwPACAT7wAQKM9AGBDvQCA17wAAFI7AECjvQAAw7wAwFI9ADCwPQDApr0AAHy7AMCOPAAAezwAACI7AGBovQCARj0AYIg9ACAyvQAA6TsAAGA5AECLPQAAcLwAwLU8AMARvQBgUb0AoB+9AIA6vACAHjwAACW9AEAIPQCA9rwAAIC7AKBCPQDAsLwAwPu8AEDfPAAgmD0AAGK7AEApPQBQhj0AIEo9AMDnPACwnT0AoAO9AAAZvQBA/bwAgCA8AACxvABA4DwAAD+8ANCNPQAgm70AwEI9AACOOwBAuTwAANq7AABOOwCwrL0AgGq8AAA0uwBA/TwAIAa9AIDsPAAADjwAIK69AABOuwCAiDwAUDc+ANCVvQBAybwAAJg6AGBFPQBgFr0AQPk8AOBXPQCAPbwAoDu9AECnvQAA27sAAPw7AOAGvQAA7LwAAE68AIBnvAAAEL0AkJk9AEAnPQDAWb0AgP+8ADCWPQAgp70A8JA9AAB1vQCAnz0=","chunkHash":"d6b010ee4bfc2a2fed4a485631ce9cb29672e9e8730fd047e2f45f3d488b8cf6"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def setup_dataloaders(self):\n        \"\"\"Setup dataloaders for training and validation\"\"\"\n        #...\n        if class_csv_path and os.path.exists(class_csv_path):\n            df = pd.read_csv(class_csv_path)\n            sample_ids = df['sample_id'].astype(str).tolist()\n            \n            # Split the data\n            np.random.seed(seed)\n            np.random.shuffle(sample_ids)\n            split_idx = int(len(sample_ids) * (1 - split))\n            train_sample_ids = sample_ids[:split_idx]\n            val_sample_ids = sample_ids[split_idx:]\n            \n            print(f\"Total samples: {len(sample_ids)}\")\n            print(f\"Training samples: {len(train_sample_ids)}\")\n            print(f\"Validation samples: {len(val_sample_ids)}\")\n            \n            # Create training dataloader\n            self.train_loader = get_morphofeatures_texture_dataloader(\n                root_dir=root_dir,\n                batch_size=train_loader_config.get('batch_size', 4),\n                #...\n```","range":{"startLineNumber":238,"startColumn":0,"endLineNumber":257,"endColumn":0},"embedding":"AACTPACANzwAoBM9AECyvQDAwDwAwLi8AKAcPQBAJT0AAPm8AIA4PADAzrwAAJq8AIBlPAAgRb0AAKA5AIBQPAAACzwAgM08APCQvQAAUT0AYJM9AMAjPQBAzTwAgAo8AFDDPQAAnLsAIAs9AADDPACAAj0AgOm8AACougCAfrwAoKy9AGATvQAAJrsAgEa9AGAUPQDglT0AgBm8AMDHvACA6DwAoH+9AAAGOwDg2D0AAKE7AAB6vACAGLwA4LM9AACYuwCAMDwAQMy8AMAwPQCgdr0AYAq9AMDUvACAqrwAAF08AIBqvADgfb0AgAq8AABiPABAXr0AwJc8AMDWPABgMD0AAHi8AJCevQAgML0AQGe9AHCRPQAA9DwAAIe9AKA/PQCAKrwAgG48AMDivACgiL0AMLY9AOBRvQCAVzwAgI08AIAKPAAARrwAgHy8AAAAugCA/bwAgN69AEDgPAAA+TwAgFq9AACpuwCgDT0AoEy9AGABPQDAjj0AYCi9AAB4OgCABb0AMJY9AACCOwCgAr0AgGS8AABgOwDgyz0AwA89AGAyvQAAkrsAQM+8AEBDvQDAbD0AYLK9AIA5vABoAD4AAPG7AIAXPADg0r0AIFI9AIDvPAAA4DoAgEG9AMDevACAQjwA0J09AECNvQCAMDwAAJa8AOB3PQCA77wAgBS9AADKuwAAUTwAANk8AABOPAAgGL0AAHG8AHgAvgDgR70AgPc8AACNOwAAaT0AgM+8AABpPACAZjwAwGc9AAD/vACA7LwAAEy9AAADvABA5zwAgO48AECzvQDADL0A4CE9AGBjvQCACLwAYFy9ACAxvQAA6zwAANY8AHCEvQAAgLgAwO08AABQuwAASDwAkKO9AIA/PQCgdb0AAFi8AAARvQAgUr0AYMs9AECMPAAAVrsAsIS9AICZPADQyb0AYGO9AAA+vACAHL0AQB+9AKCZvQDgHz0AMJe9AAAlPAAAlr0AQMS8AMCmPACAjjwAAA88AOByPQCAtLwAwKO8AABfPQBAej0AAJk8AACTvACABT0AwLI8ACAAPQCAUbwAQLE8AGBWPQCAPrwAACC5AIDhPACgLb0AAPU8AICTvACAeDwAgM48AAAwPADAjrwAgBc9AMBevQCAGbwAQP28ACAZvQAAs7sAgEu8AABwPQCgpj0AABC7AAAaPABgaD0AgIQ8AECFvAAAmrwA4Ba9AKAEPQAA/7sAwJw8AAAQOwAAgbsAABC8AMCsPQDw4r0AgBi9AGAjvQDA0DwAMJg9AAAOuwAwvD0AwFG9AOCsvQAACrsAAF67AMANvQDAlbwAQFE9AAD+PAAAHD0AgDI8AADhvADgT70AgIs8ACAdPQAwqb0A4CC9AMBxvQDA47wAAHQ9AIDLPABgNb0AAKU8AIARvAAAsbsAQLu8AIBlvABAxzwA4AW9AECWPABAtrwAAJI8AICGPACAMrwAgBk8AGA1PQDA8TwAwJM8AACiOwAAE7wAAEc8AIDmPABAljwAgG28AADwOQDAiTwAALa7AAAivAAAJjsAAKG8AHC9vQCAH7wAwCu9AMDdPACArDwAgGe9AED9PABAdD0AwB29AADluwAAbDwAwIW8AIDRvACgIz0AQNW8AIDnPABA2rwAQN89AICMPABACb0AAEy7AIBzPABA1DwAQFI9AACxvABA8zwAIBQ9AEDTPQAAWzwAQG+9AIBVvAAAybwAAIC5AABxvAAACjwAAEs8AICMvABQhb0AwA+9AIDKvAAAB70AALI7AGA0PQAAqLsAwI49AABAOgBAwDwAwKI8AOA+PQDwqr0A4F69AABSvQAAej0AgF+8AIBNPABAcb0AQKw9AACBPAAAqbwAAC47AACwOgAANLwAAPu8ABC4vQCAQ7wAQJ68AAAUuwCAeTwAAIU7ALDivQDAbz0AoCQ9AADvuwAAO7wAAC09AADxvADwvT0AYHU9AADHvAAAqrwAALw8AIB2vQDgRz0AELe9AEDIvAAwmT0AABQ9AICyvAAATjsAgF09AID4PACAjz0AgBs8AAAougDANb0AwIY8AOA5vQAAD7wAID89AEBYPQDAh7wAgFi9AIB3PQBgEz0A4Ho9AIAmPAAA7jwAYCY9AMBRPQBAeL0AsNA9AMByvQAgB70AIAE9ADCGPQAAQDwAAKA7AOA2vQCASz0AQME9ABDCvQCAaLwAgBO8AMDIvACgHL0AIEm9AMDXPACAF7wAMLE9AKAuvQAAj7wAABS7ACCTvQAAB70AAFM9APDHPQAQl70AACG8AEDdPAAAKjsAAFC7AKBJvQBgHD0AgH89AMBEvQCAuTwAAPg7AFCWPQDAt7wAYBA9AAASvQBANr0AAAu9AMCKvAAARDwAYCe9AEAwPQAAWrsAACO8AOA7PQDA8LwAAPS8AABkPAAQkT0AALO7AGBAPQCAhz0AoCE9AADdPAAAoT0AgP68ACAWvQBAFr0AAJy7AIA/vAAAxjwAgF28AKCfPQAgpr0AwFw9AAAOOwBAtjwAAF67AAD3OwDwqL0AANa7AIA3vAAAnzwAAP+8AEAEPQCANjwAILq9AAAAOgCAnTwA2EM+AICovQBAjrwAAJU7AABIPQBgBb0AYAY9AABCPQAAN7wAoB+9AHCYvQAAYLkAgEc8AIDBvAAA7LwAABq8AICQvACgFr0AkJ49AGANPQAgdL0A4BG9AABxPQCArr0AwHU9APCBvQCAfD0=","chunkHash":"950221965e80f6895d3c29f5781f13ab5fc9e006bd96112f0ef9f60f103abbef"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def setup_dataloaders(self):\n        \"\"\"Setup dataloaders for training and validation\"\"\"\n        #...\n                shuffle=train_loader_config.get('shuffle', True),\n                num_workers=train_loader_config.get('num_workers', 4),\n                class_csv_path=class_csv_path,\n                sample_ids=train_sample_ids,\n                is_cytoplasm=is_cytoplasm,\n                box_size=box_size,\n                pin_memory=train_loader_config.get('pin_memory', True)\n            )\n            \n            # Create validation dataloader\n            self.val_loader = get_morphofeatures_texture_dataloader(\n                root_dir=root_dir,\n                batch_size=val_loader_config.get('batch_size', 4),\n                shuffle=False,\n                num_workers=val_loader_config.get('num_workers', 4),\n                class_csv_path=class_csv_path,\n                sample_ids=val_sample_ids,\n                is_cytoplasm=is_cytoplasm,\n                box_size=box_size,\n                #...\n```","range":{"startLineNumber":257,"startColumn":0,"endLineNumber":276,"endColumn":0},"embedding":"AIBZPAAAXTwA4BE9AFC0vQAA1DwAAAa8AMBIPQDALD0AQN+8AADmOwAAqbwAAMK7AIBNPACgRL0AAMS7AIAEPACAZjwAgMk8ALCgvQAAWT0AoI89ACAtPQAA3zwAABU8ABC4PQAAGLoAgAQ9AECGPABgDz0AgN68AAAjvACAdrwAoKa9AIASvQAAnbsAQFG9AMD7PACAmD0AANy7AACJvACAxjwAoIK9AADeOwCQ4j0AAAg6AABZvAAAi7wAALI9AMCevACAJjwAANG8AGAzPQCQi70AwP68AMDbvABApLwAgJQ8AMCcvACgUr0AAC67AIATPABgTr0AADg8AMC1PABgMT0AAJC8AKCqvQDgF70AUIC9AFCOPQCAmDwAkIu9ACBKPQAAwbsAAHQ8AIDVvAAAW70AYMk9AOAWvQAAkzwAgE88AAC3OwAAcrsAQKK8AIAAvAAA+rwAQN29AADnPADAAj0AYF+9AABpvACgCT0AwFK9AAArPQDAZD0AIA29AABgOgCgEb0AIH89AIAPPABgHr0AALO8AAC5OwBQzj0AQOs8AIAmvQCAYLwAQIi8AOBFvQBAez0AYKq9AAAvvAAQ7T0AAJw6AABeOwBA3L0A4EY9AAAHPQCAIjwAoBi9AECpvACALjwAYJg9ACCXvQCAMDwAgEa8ACCFPQAA3rwAwBu9AABgvAAAvjsAgKY8AAByPADA+7wAAGy8AHD5vQAgX70AAAU9AADduwBAPz0AwOG8AABMPAAAKjwAoHo9AID9vABA5bwAwBO9AIBfvADABj0AoA09ACC6vQDA8LwAICg9AMB5vQCAE7wAYH+9AIABvQDgFT0AQA09AIBhvQAA/TsAQNI8AABOuwAAJzwAgI+9ACBNPQCge70AgBa8AIAFvQBgbr0A8N49AMC2PACADrwAQJC9AED2PACAyL0AYH69AEC4vADAJ70AYDW9APCNvQBgIj0AkJG9AABeOwCQmr0AwN+8AAC9PAAAMTwAgDQ8AKB3PQCAqrwAgA28ACBuPQDAgD0AAIc8AEDCvABgED0AwOg8AMC+PAAApbwAQLI8AEBWPQCAhLwAAMg6AADAPAAALL0AAKg8AACQvAAASTwAwIA8AAA/PABAlbwAgBA9AIBmvQAA8bsAYDK9AIASvQAAdrsAwJ28AGBOPQAAqD0AAKY7AACQPABAfT0AAEs8AAAkuwCAuLwAID+9AKAEPQAAWLsAwIs8AADVOwAAtLsAAM+7AACrPQDw9b0AwOy8AOAPvQCA+DwAAJg9AAAXPABgzT0A4Dm9AOCtvQAAWjsAAAC8AADyvAAAcrwAwFM9AAClPABgED0AAMw6AIAFvQBANb0AAEk8AAAjPQAwmr0AgEm9AOBPvQCAAb0AUIE9AIDXPADAN70AgLA8AAASvAAAiDoAgKW8AIBmvAAA5TwAgB+9AAC0PAAAobwAgE08AMCsPAAAwDgAABk8AGBSPQDA/DwAwIU8AIBTPAAAKrwAgGA8AADlPABApTwAgJi8AABsOwCAADwAQIS8AAAwugDAgTwAAEi8APDOvQCAa7wAwBS9AKApPQBAsDwAIFe9AIADPQDAfj0AICO9AACbvAAACzwAwLi8AMDwvAAgBj0AoAO9AKAEPQCAbrwAIM09AIDaPAAgEb0AgD68AIBNPACA3jwAoEw9AMC+vACA2DwAQPA8AIDZPQCAdTwAIHa9AAA6vADA7LwAAAS7AIBgvAAAGTwAgC08AACQvABgkL0A4AG9AEDXvAAAzbwAgAY8AAAtPQAAHrwA8JU9AADZuwCAmzwAgLo8AIAHPQCQob0AgD29AOA1vQCgWD0AAK+7AIA1PAAgU70AQK49AECGPABAqrwAAMw7AACuuwCAf7wAICK9AMCuvQAADrwAANG8AABougAAODwAAGI7ADDxvQCAZj0AoDI9AACEuwAAnbwAYDo9AIDivACwrD0AYGo9AEACvQDAqbwAgNE8AACNvQCgRj0AQL69AADPvABAqz0AwBc9AIDqvAAAKDoAwGM9AID/PAAQoT0AgKo8AADYOgAAVL0AgJQ8AOA8vQAA5rsAoFg9AKBZPQAAz7wAkIO9AGB1PQAgLD0AAIQ9AACCOwDA/zwAAB49AIBePQCAiL0AwMU9AKCMvQAA6bwAwPk8AACJPQAAWDwAAIc7AOAavQBgPj0AIMI9AADBvQAAa7wAgA68AABavACAKr0AICi9AIC2PACAJLwA8Kw9AEBBvQCAp7wAANC6AMCfvQCAe7wAAEw9ACC9PQAgl70AANu7AAB+PAAAiLoAgBK8AOAjvQCgJj0AgJQ9ACBAvQAA+TsAAB88AKCDPQAA7rwAgOo8AGAMvQAATb0A4AS9AACPvAAAojwAwBK9AGAbPQCAl7wAAKO7AGAjPQCAkrwAwM28AIBRPADwkT0AgAG8AMBBPQAAmD0AoC49AGAGPQCgnz0AgAK9AOAxvQDA/7wAAOk7AAA6vAAAtzwAAIa8AECcPQDAmL0AgFE9AADtOwCAxzwAAI67AIAEPADwqb0AAGO8AADMuwAAlzwAgAW9AID1PACAcTwA4Lm9AAAYvACAljwA6Do+AFCWvQCAubwAAMS6AKBWPQCABL0AAN08AKBXPQAAQLwAYD69AOCivQAAQrwAAOU7AIDhvAAA2bwAgBW8AICcvADgNr0AQIM9AGAZPQCgX70AAB29AKBvPQAwnb0AYHo9AGBuvQDgfT0=","chunkHash":"62ff477aae1460b6d221edda73ee38f4c19082f42984afe3c32a4d26da0341ae"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def setup_dataloaders(self):\n        \"\"\"Setup dataloaders for training and validation\"\"\"\n        #...\n                pin_memory=val_loader_config.get('pin_memory', True)\n            )\n        else:\n            raise ValueError(\"Class CSV file not found. A valid class CSV file is required to create dataloaders.\")\n    #...\n```","range":{"startLineNumber":276,"startColumn":0,"endLineNumber":279,"endColumn":115},"embedding":"AIA8PAAAyTwAAIg8APDBvQCA8DwAwJi8AKA+PQAA4zwAQBG9AACVOwCA2rwAAKS7AIDKPAAgJr0AADC8AAD4OwDAqzwAwAw9ALClvQAgaj0AYJs9AEA+PQAAsjwAAMU7AJCLPQAAADkAgCs9AGAJPQAATjwAAOy8AADzuwCA2rwAEKi9AMCavAAA8DkAoCW9AIBPPQCgnj0AAPm7AEDTvACAwTwAAKK9AADwOwDQ4j0AgCC8AAB0vACApbwAAKI9AACovAAA+DsAgAW9AOAYPQDAd70AQCy9AED3vADA9bwAgHc8AAAsOwAAJr0AgEG8AAAuPACALr0AAJc7AIB6PACATD0AAKe8AECevQCgFr0AAHS9ACBwPQAAMTwAgIW9AEBuPQBAnLwAAHw8AOAKvQAAbb0A0Ns9AAAJvQAAUDsAAAA7AEDoPACABrwAAOi7AACOPAAgQr0AcPy9AECZPADAET0AAHC9AAAkvACAeDwAgBy9AOBPPQCwkD0AgLC8AAAYuwBgZL0AUI09AAAYuwAA+LwAwIe8AADvuwBw3j0AwPU8AKAFvQAAirsAIAK9ACAkvQCASz0A4Mu9AAByOwCQED4AAEi6AAD4ugAwv70AgBc9AADpPAAAqDsAgAC9AIBnvAAA4jsAEIw9AEBXvQAAvDwAAIU7AEA/PQAAJL0AgHi8AABIvAAAoLkAwIU8AMDaPABAt7wAAOy6AODWvQCAhb0AAMU8AABsvABgfD0AAKe8AECPPAAAIzwAwFo9AMDVvACALbwAIDS9AADwuQAA7jwAwNE8AJCMvQCACLwAgBA9AMBQvQAAgLsAQJq9ACAyvQDgAj0AAB09AMCyvQAA0TsAABY9AIBVPAAAkDkAoGS9AIA8PQBgWr0AwPC8AECmvAAggL0AYMw9AAA3PAAA1rsA4H69AIA1PAAgsr0AQHO9AIAFvAAAVL0A4DG9AGBjvQBATj0AwIO9AICQvABAob0AwLi8AMAWPQBA1jwAgK88AKBKPQAADrwAgEa8AOBRPQDgcT0AAM67AACOvAAAnjwAgAY8AMCoPAAA9LoAQJs8AOBRPQAAmbwAgBG8AMCFPABgSb0AgLw8AAATvAAAALgAQLw8AIAMPADA8LwAgOQ8AKAIvQAAQLsAYBS9AEDZvABAwjwAAGa7AOBVPQCAoj0AgAc8AIAOvADAJz0AAMe7AIC8vADADr0AYBq9AGAzPQAAgDoAQNA8AIAEPAAA57sAAF68ABCqPQCA5b0AYCa9AIAJvQCAGj0AYJg9AAARvAAQyD0AoFG9AKCgvQAAibsAACy7AADUugBAo7wAQGc9AADzPABgSz0AAEA8AICcvABgP70AAF88AIDjPABgmr0AQCq9AKBbvQCgEL0AQGw9AABOPAAgYb0AQNU8AIA/vAAAlrsAQM68AMCGvAAArTwAwB+9AOAoPQAAWbwAwP48AMDnPACAerwAQIs8AIA/PQAAID0AQNs8AEDHPABAlrwAwKE8AAAXPAAAMz0AgJy8AABBPAAAgLkAAAk8AAD8OwAA6DoAALq8ADCUvQAAhrsAwCe9AEAoPQDA0TwAoCW9AMDhPABgdj0AoA29AACkuwBgEj0AgAm8ACAXvQCA6DwAQD+9AAAguQCAoLwAgNc9AACfPADAdL0AACg6AAB3PADgGz0AYB09AECqvAAAcjsAQNc8ALD1PQAASTwAwGS9AADyuwAAsLwAAII7AADOvABA3DwAAES8AAA1vABgLr0AAOS8AEA1vQCA57wAALo7AMAoPQCAO7wA4HI9AAAquwBA1zwAANC6AABOPQBwkL0AgDK9AEAnvQAgLz0AgIi8AADNOwAAb70A4M09AEDnPACACr0AADq8AIAkPABAz7wAQPS8AODTvQAAmbsAQLa8AACpuwDA3DwAAJc7AIDVvQAAhT0AAC09AEDRvAAAVrsAQC49AOAavQCAhT0AgPY8AKAMvQBAmrwAAFA8AEB5vQBgPD0AoLG9ACAmvQDgnD0AQBA9AADevAAA37sAABg9AMDVPADQlD0AANE7AACAOQBAB70AQNs8AEDwvAAAGLoAAD49AIBZPQCAfbwAQIm9AKBvPQDADz0AYIU9AADhOwBgLD0AwB09AOBDPQDAfL0AwMs9ACBvvQCAgLwAIBs9AABxPQAABz0AAC48AKAgvQCA9zwAML49AKCavQCANrwAAEw8AIAVvQAgb70A0JC9AABKPADAsbwAgJk9AEBAvQAAursAAMi6AICGvQCAcLwAIGM9AGDMPQDwrb0AgFG8AMD0PAAAsDkAQBq9AOBtvQCgPz0AEKc9AIApvQCAVDwAAEU8ALClPQAAWDsAAEQ7AIB3vACADL0AgI28AAALvABArbwAgCi9AOALPQCAwrwAAF48ACBcPQBAJr0AAB69AIAGPAAwlj0AAJi6AABHPQBgWT0AoAY9ACANPQBwlD0AgOO8AOBYvQBA3rwAgBE8AAAUvACA6zwAgNW8AHCWPQCQkb0AoGM9AICNPAAAxTwAAJI7AAAHPAAwkr0AwI+8AACMuwAA0zsAgAq9AMDVPABAgzwAUK+9AAAAvACAHjwAgG0+AACIvQBAt7wAQI08AAACPQDgUr0A4BY9AOBmPQAAKbwA4D+9AFCLvQCAIDwAAHo7AIDBvACA1bwAgIe8AIDZvADgKr0AgHA9AIAHPQCAS70AgEG9AOBMPQDAl70AEKs9AEBJvQAgnz0=","chunkHash":"7d7a9200544f4e0625bbe5dd11735bb09b478ec6cbf9c941f8f4554028a0c879"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def train_epoch(self):\n        \"\"\"Train the model for one epoch\"\"\"\n        self.model.train()\n        running_loss = 0.0\n        \n        for batch_idx, batch in enumerate(tqdm(self.train_loader, desc=f\"Epoch {self.current_epoch}\")):\n            # Get the inputs and targets\n            inputs = batch['input'].to(self.device)\n            targets = batch['target'].to(self.device)\n            \n            # Zero the parameter gradients\n            self.optimizer.zero_grad()\n            \n            # Forward\n            outputs = self.model(inputs)\n            loss = self.criterion(outputs, targets)\n            \n            # Backward + optimize\n            loss.backward()\n            self.optimizer.step()\n            \n            # Track statistics\n            running_loss += loss.item()\n            \n            # Print statistics periodically\n            if batch_idx % 10 == 9:  # print every 10 batches\n                #...\n```","range":{"startLineNumber":283,"startColumn":0,"endLineNumber":307,"endColumn":0},"embedding":"AMDrPAAAYTwAAHY8AODCvQCARzwAgEU8AIBoPQAwkj0AwNG8AICxPACACr0AQOi8AEClvACA8bwAgCo8AECIPAAAf7wAgHI9AOAcvQDAMT0A4Ac9AEDCPACApjwAQPA8APCkPQAAGj0AoB89AAAYPABA6DwAgHi8AEDRPAAAe7wA4N69ABCkvQCAOjwA4A+9AAAwugBgaj0AAI28AAAIvQAABTwAIEa9AABgOQAw2z0AACC8AEDgvAAAsDkAoOc9AECDvADANj0AAFa8AABePQAAqr0AAA+9AIA3vQBAO70AAE48AACFuwDAAb0AQMU8AKACPQDQkb0AAE47AICUPABA8zwAAEO8AOCEvQAAebwAoGK9AOB+PQCACTwAAKG9AABSPABAyLwAAAw7AADJvADwib0AEIw9AED6vABAozwAACI7AMDGvAAAOrwAgGM8AAAyOwAAnLwAoMu9AMDsPACAqDwAcIK9AIDevAAAtDwAYDO9AAB1PACAuj0AgL+8AACOuwAADbwAADM8AIBnvACgE70AAGI7AABquwCwtD0AADG8AKBAvQCA6LwAAEC5AMAvvQBAcz0AwFi9AIAoPADA3D0AAIW7AICDvADg5r0AQHA9AGARPQAAwDgA4Dy9AABXPADA+zwAoCQ9AHCUvQAABjwAAPG8ADCCPQCAyLwAwBK9AECfPAAA7jsAAII8AID/vAAAabwAAKm8AHDhvQBAIr0AYDA9AACsOwDgGj0AQMu8AACkugAAhjwAgFs9AAAdvQAA9bwAoEK9AIBavACADj0AgCU9AAAtvQBAUL0AQPg8AIB+vQAA0DkAQFa9AMDhvAAAtDwAAE48AAAwvQAAh7sAoEA9AMDzvAAAUDsAQI69AKAHPQDQpL0AAK67AMCtvABgQL0AgMw9AIA4PQAA6bsAoLC9AECiPABwpr0AMKa9AOA6vQAggL0AACS8AEAFvQAgWD0AELi9AOAwPQCgBL0AQLK8AIAgPQAASjwAALI7AAAzPQDAS70AwLy8AKBpPQBgCD0AgBA9AAAHvQDgVz0AAJE8AAA0PADAwrwAQOs8AMBWPQCA1rwAoBi9AEDPPAAAgLsAgMY8AADAuQAAbTwAwPA8AIAOPAAAHDwA8Ik9AHDYvQAALDwAYHq9AMDovAAAGbwAAK68AGB6PQAgoT0AgCi8AMDCPADAoD0AQAo9AAC0OwDAMb0A4F29AEDlPAAArbsAACg6AACEOgAAwLsAgHG8AHDGPQAAwr0AADK7AOA/vQDAxTwAQBA9AAB6uwBA1D0AQBy9AODKvQAAgDoAAPO7AAAxvABA4bwA4Bw9ACANPQDA3zwAgFE8AKAavQAAAb0AwDM9AABMPQCAnr0AgHK8AABSvQAAQLoAUKY9AGBoPQDgdL0AAF08AACUvABA1TwAAPC5AADlvABAHj0AwPK8AMCcPAAAGLsAAOg7AADqOwAA6rsAwJM8AGBwPQAAAjwAgHc8AADavAAAzDoAAPg7ANCJPQCACzwAgEc8AADIOwAA5zwAAMS8AAB4PAAANDwAgCG8AOC8vQBA7rwA4Dm9AMD1PAAAursAgCe9AADoOgBgcj0AwBa9AOAAvQCACbwAYAO9AAAovQCAkjwAABQ7AMBVPQAAL7wAEPU9AOBIPQDAvrwAABG8AACuPABA3TwAMLc9AECJvADAlTwAwBY9AODTPQAAUT0AwBO9AFCIvQAgMb0AABw7AACOvAAA+bsAAPg7AACfuwDAfb0AAG29AEDtvABAhbwAgFS8AABPPQAAELwAUNE9AAAjvADgSj0AwFQ9ACA4PQBQrb0AoH+9AICwvQAAKT0AAHq8AMC1vABwm70AICs9AEDEPABgcL0AYBU9AMDIvACALTwAwPu8ABCBvQCATbwA4BG9AAD0OwAACjsAAAo7AMgQvgAAFzwAYG09AACSvAAAN70AwBo9ACAsvQAQuD0AIHw9AIAWvABAjrwAADE8AMCAvQAgFD0A8Me9AIA5PABQiD0AgOo8AIDzvADAj7wAgAo9AEAXPQCAlz0AwJY8AABIPABAb70AgIs8AGA6vQDA3bwAgKc8AKB3PQAAzrwAgIy9AEA8PQCgID0AwEY9AADmuwBAWz0AQP88AGBwPQDQgL0AkMA9AIAQvQCARb0AAEa8AACHPQAA8DwAALg8ACAWvQDQgT0A0KM9AICwvQCAqrwAAK07AAAovACAQr0AQMu8AMCePAAAVLsAgGU9ACBLvQAApLwAQBc9ABCSvQBAA70AoH49AKBAPQBgqr0AAJG7AIBoPADA8DwAAF47AFCTvQAA4jwAEIw9AED4vAAAaDwAALC7AGCPPQAAnLsAANk8AOAmvQCghL0A4D+9AAAXPADgEj0AoBO9AECxPAAAIDkAQO68AEDTPAAAkDwAQMe8AAApvABgbT0AAJw6AGCNPQBAjz0AYCM9AAC2PABQiD0AwGC9AKAnvQAAp7sAwIK8AACNvAAgED0AgFu8AGBAPQDwgr0AIBo9AIA/PADAvDwAAM+8AAAyuwAAP70AAPM7AMC1PAAgFz0AwEe9AMC2PACAFbwAYHi9AGANPQCAKb0A2B4+AECqvQCAAL0AANE7AGAKPQAAkrsAQJY8AIAdPACAHbwAwPC8APCKvQAAgrsAAC88AEAAvQDgQL0AAKi7AABoOgCA6LwAYMQ9AEDFPAAAu7wAABy8ANCSPQBgbr0AIHE9AIBsvQDA6Dw=","chunkHash":"a3f607f9ef81bdeba4ac32b7fb287395f60fa76561674eb78f1e3340b5bc7e29"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def train_epoch(self):\n        \"\"\"Train the model for one epoch\"\"\"\n        #...\n                logger.info(f'[{self.current_epoch + 1}, {batch_idx + 1}] loss: {running_loss / 10:.3f}')\n                running_loss = 0.0\n        \n        return running_loss / len(self.train_loader)\n    #...\n```","range":{"startLineNumber":307,"startColumn":0,"endLineNumber":310,"endColumn":52},"embedding":"AABaPACAIDwAAGA6AFDXvQDAyjwAABy8ACBGPQAggz0AAL28AIDmPADAB70AQMC8AABgvABgLL0AAIW7AABwPADAxrwA0Io9AGCRvQCgDD0A4Bo9AACqPACAmzwAgA49AABwPQAACT0A4Bc9AACuPAAAsTsAgEG8AMD6PADAlrwAoMi9AMCRvQAAxDsAIBq9AAAJPADAUz0AAAA5AGADvQAATDwA4IW9AADiOwDQwz0AgJW8AAAvvAAAxjsAINU9AADcOgCAPj0AgE28AGBCPQAgnb0AYE69AACFvQBgR70AAIM7AABwugBgDL0AQJY8AKAMPQAQiL0AAGi6AABuPABACT0AAGi7AKCFvQAAHLwAIDq9AMBdPQAAhzsAELW9AABsPADAl7wAAAS7AADEvABwgb0AoJk9AGAYvQDAmjwAACa7AAD0OgAAwLkAAAQ9AAC9PABAu7wA0MS9AIDOPACATjwAgJ29AMDgvACAADwAAPq8AABIOgAApz0AAOK7AAB1vABAsLwAgKE8AIBdvAAA6bwAAKk7AEDavABQ1j0AQK68AMCjvABAorwAAH68AEAnvQCgXD0AwJC9AADGuwDA5j0AgGG8AAA9vABg0b0AgEA9AKAVPQAAALgAIA29AIBnPABAiDwAANg8AKBVvQCAhzwAALC8AABfPQAApLwAgKa8AABeOwAAIjsAgBg8AIDTvAAAfLsAAJq7AODnvQAA1bwAYDk9AAAquwDATj0AwJS8AADgugAA9DsAMJ89ACAfvQAAw7sA4Gy9AABfvADgBz0AgDw9AAA0vQBAFb0AYBg9AKA5vQAAmrsAABe9AACIvAAgHD0AgHk8AEB/vQAAybsAEIA9AIBovAAAYjwAYIO9AIA2PQBQo70AwJ28AADnuwAgXb0A4N09AGAjPQAAtLoAsMC9AIC6PABAmb0A0Lm9ACAVvQDAeL0AAOU7AMAfvQDgVT0A4L29AEBAPQBA7rwAwOK8AMBZPQAA8zsAgAo8AGA1PQDgKb0AgMy8ACBSPQDgLz0AQB89AMAMvQBgKz0AAOy6AACoOwAA67sAQKY8AOB9PQDAs7wAAMi7AMAePQCATrwAgGU8AIAFPACABzwAABc9AABaOwAAfTwA4I49AADTvQAAizsAYHm9AIDIvAAA4DkAQIa8AHCUPQBApT0AgNm8AIC8PAAQmD0AwPo8AADKuwCA5bwAAGS9AED+PAAA0bsAADy8AAA6uwAACLsAAHu8ABC5PQBgur0AANK7AIAEvQBgID0A4BA9AACAOgAwzj0AQFy9ANDNvQDAkLwAgJi8AABpvACAvbwAQFc9AEDtPACABj0AAJa7AAAVvQCgCL0AICs9AIBCPQAAj70AAOC6AMBAvQAAwDoAkKI9AMBBPQCgjb0AAHE8AGAcvQAA/jsAgDG8AIBGvAAALT0AoFu9AEDaPACAOTwAAFI8AADdOwAA2LsAwKs8ACCAPQAAijwAAOs7AECWvAAA6TsAwJM8AKBhPQCAGzwAAE08AABaPABAtzwAgHG8AGAKPQAAMDsAgKm8ANCpvQDAt7wAgOm8AKAQPQAAULoAABi8AADCuwDwij0AAEW9AIDAvAAAh7sAIBy9AEAgvQDAhDwAAIq7AAC4PACA47wA0Po9AMAbPQDgFL0AAB28AECnPABgGj0AwKY9AABlvABAwzwAgPM8AJDaPQBgTT0AgAW9AICGvQCgPb0AACi7AAC5vAAA5jsAAPA5AIBKvACANL0AAFa9AKAEvQDAvrwAAEe8AMDpPACAUDwAIOs9AAByuwCANj0AQCU9AEAlPQAgmr0AYI+9AOCvvQDAJD0AgJi8AMC7vACwjL0AgAQ9AEDHPADgg70AQJg8AAD1uwAAbbwAIA29ABCivQCAo7wAQMO8AACAOgAAcjwAANI7AHgNvgAANDwA4H49AEClvACAJL0AQCY9AMAyvQDgYT0AIFA9AACQuQDgGL0AAIM8AACSvQCgMz0AMMC9AAD6OwBAWj0AYCM9AMAovQCAyrwAANc7AIAPPQAgej0AAMo7AABLPAAga70AgDs8AADBvAAACL0AQO48AHCAPQAA8rsAoHu9ACBTPQBAZz0A4Eo9AABgOgDAaD0AwO08AEBXPQAApb0AwNI9AADmvADgE70AANe7AHCBPQBgOD0AgKc8AKAivQCAkj0A8Ko9AGCkvQDACL0AAIg7AIBuvACAZr0AoBG9AADEOgDAhrwAYB49AEAvvQAAybwAAJQ8AMBsvQAAVrwA4Gs9AKB+PQBAsL0AAAO8AOAbPQAA1jwAgLC8AMCQvQDgBj0AwK89AAD+vACAJTwAwJE8AICSPQAAgDoAgJA8AAAPvQCgab0AICq9AACUOgAA4LkAoBu9AAC8OwAAiLwAAFK7AAA4PQAAJbwAQP68AECWvAAgdT0AgB48APCiPQAggT0AICc9AEDVPACAgz0AgIa9AKBqvQAA5DoAQNK8AECevABAKj0AAN+8AIAzPQAwl70AIEk9AAAGPAAADj0AANA7AAD/OwDAKL0AAEi7AIDLPACACj0AABK9AADCOwAAILoAAFC9AEC1PABgb70ASD8+ALCTvQAgFr0AgH08AAAAPQAAarwAgMo8AACDPAAAH7wA4AC9AECOvQAAmzsAAIM7AIDLvADAYr0AQJi8AABuOwAABb0AcKA9AID4PAAA47wAgNS8AICAPQDQgb0A4I09AKBQvQCgET0=","chunkHash":"73b373d0c41fc16eca7f5ad4b65a62cd6023bb886a2b79fb17f806969e142207"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def validate(self):\n        \"\"\"Validate the model\"\"\"\n        self.model.eval()\n        val_loss = 0.0\n        \n        with torch.no_grad():\n            for batch in tqdm(self.val_loader, desc=\"Validation\"):\n                # Get the inputs and targets\n                inputs = batch['input'].to(self.device)\n                targets = batch['target'].to(self.device)\n                \n                # Forward\n                outputs = self.model(inputs)\n                loss = self.criterion(outputs, targets)\n                \n                # Track statistics\n                val_loss += loss.item()\n        \n        avg_val_loss = val_loss / len(self.val_loader)\n        logger.info(f'Validation Loss: {avg_val_loss:.3f}')\n        \n        # Check if this is the best model\n        if avg_val_loss < self.best_val_loss:\n            self.best_val_loss = avg_val_loss\n            self.save_checkpoint(is_best=True)\n            logger.info(f'New best validation loss: {avg_val_loss:.3f}')\n        #...\n```","range":{"startLineNumber":314,"startColumn":0,"endLineNumber":338,"endColumn":0},"embedding":"AECpPACgJD0AgCs8AGCyvQCARjwAAE08AIBlPQBgMD0AACO8AMDWPAAAKrwAwI28AEDfvACAhbwAAJG8AMCEPACAnbwAYAg9ACBUvQAAxTwAQFE9AEBZPQBgBz0AgO08AIDPPQAAADsAQKc8AOAMvQAALj0AAIs7AAB0PAAAdbwAEMC9AMCFvQBAubwAIAC9AIDcPABgfT0AABA6AAAFvQAA/zwAADW8AIAHPABoAD4AALy6AADpuwAArjwAsNA9AAC9vABAuTwAoAO9AGBqPQBgXr0AQLm8AKBKvQAgQb0AgEE8AAB4ugDASr0AAFI8AABovAAQg70AAIC5AGAgPQAAWDwAAJe7AOCfvQCgMr0A4C+9ACBmPQCA3jwAQGm9ACAYPQCAMzwAgAu8ACAevQDAAL0AkL09AAAHvACAVDwAQKe8AIAcvAAASjsAAMO7AADeOwAAvrwAUOe9AAAOPQAA7zsAwHy9AIAKvAAgZD0AwK28AED9PABQlz0AwAi9AAB1vAAAZ7wAYDo9AIBfvABgI70AgCs8AAC4uwAw5z0AgHs8AAAhvAAAILsAwJe8AMB7vQCgdT0AIIm9AAAkOwAgrz0AgC08AABfvADQ370AAFk9AIDhPADAwzwAIBW9AAAMuwCA3jwAUJE9AFCjvQCAfzwAACe8AECFPQAAJLsAgAK9AADgugAA/LoAoA49AACiOwAAq7sAAJg7AHDsvQAAUb0AgFE8AADZOwBA8DwAQAm9AAD3uwAAHDsAAHw9AEASvQDgTb0AgDa9AAC3vADAFj0AAGI9AIAevQCAiLwAQBI9AKAgvQBgEb0AwCm9AIBAvABAtzwAgMI8AABevQCADjwAAGA9AICOvACAETwAQHi9AAAyPQCwk70AAHY8AIDJvABADb0AgOs9AIBrPQAAJLsAMLC9AIC/PABgu70AoDK9AIBCvQCgNb0AgH28ABCNvQCgPz0AwKW9AIC4PADgOL0AgLm8AMASPQAA9TsAgGY8AKAGPQCAwLwAwOW8AIBwPQDgIz0A4EA9AADxvAAAPj0AQPg8AIA2PADAo7wAALC7AGBgPQBAtrwAQJa8AMASPQAA1rsAQOw8AIDBvAAARrwAgEY8AAByOwCAWDwAAJA9AHDKvQBA/zwAACO9AACHOwCASLwAgNO8AGCJPQBghT0AADY8AADhPADgWD0AwKM8AAAZPAAAmDoAICG9AAD9PACAorwAAMo7AADBOwAAzrsAALC5ACDIPQAw1r0AgN28AACQOQAA5TwAwEI9AIBVPABw5j0AYBO9ALCgvQAAzbsAAJK8AID3vADAnrwA4Dk9AGAfPQDgID0AACK7AICSvACgIr0AADU9AEAcPQCws70AoC69AEAOvQAA37wAwEg9AEANPQDgbL0AgHe8AMDOvAAAXDsAAHK7AEDZvADAtjwAgDq9AECmPAAAzLsAwJE8AAD4OwAArDoAADY8AKB9PQCA3TwAQIg8AIDovAAAPLwAABQ7AIB/PQCAjDwAgGY8AACzPABA3DwAYBy9AAAmPAAAhLoAAKG8AIDivQAA9rwAQBS9AIDBPACAfzwAQPq8AIB7PABwhD0AwPq8AECqvAAASjsAIG69AICyvADAnDwAAFC6AOAmPQAAgLoA0NM9AAATPQAADLwAAFe8AAAsPAAAHjwAoIg9AGAMvQAAtTwAAC49ADDAPQAgPz0AIAe9AADavABA97wAgBi8AIDVvABAszwAAOA7AACUugAgeb0AgAS9AMCzvACAOrwAAGq7AMDsPAAAWDsA0LM9AMCMvABgWz0AwLU8AOAyPQDgob0A8I29AHCDvQDAlT0AAKU7AAAwvAAAk70AAH49AADUPAAAIr0AYCE9AADGuwCAELwAIES9AIClvQAAMDoA4AK9AMDjPAAA+LoAAGq7ABD2vQBAxzwAAFE9AACUuwDA5LwAYCE9AOBNvQAQjj0AYGs9AABVvABgYr0AQCo9ACB8vQCgMz0AQMu9AIAlvADgjj0AwJ48AEDHvABAlrwA4Eg9AOBEPQCQlz0AQOs8AAAcuwAga70AwPI8AEBwvQDAz7wAYFs9AKAzPQCgE70AQH+9AAArPQAAgz0AwHU9AADgOgBADT0AIF49AMB8PQBwpL0A0MM9AFCKvQDA3LwAAB08AECvPQCADjwAwJ48ALCGvQCglT0AEM49AAC1vQBAnLwAgIi8AAAQuwDABL0AAIq7AEDuPADAoDwAIBY9AKASvQDADL0AAFY8AGCivQBAxLwAAKU8ADC+PQCAuL0AAMg6AAB8PAAAKDwAAAS8AKCJvQAA4DkA8Ik9AEC8vAAAETwAADg7AECVPQCAibwAQMc8ADCHvQAAUr0AgGq9AADSOwCgRz0AAPK8AIBWPAAAFLsAwI28AMAFPQAAtLoAAAi9AADguwAgXD0AAOo7AOCFPQCQyT0AQCU9AGAlPQAQij0AYDq9AKAivQAAlLoAgC08AACuvACA6jwAAEQ8AIBPPQDwl70AIDo9AMCAvABA6jwAAL27AEDuPABAlr0AgE+8AAATPADgCT0AAIO9AAC4PAAAY7wAoIW9AIAtPAAA2bsAwCU+AICYvQAAQbwAgPi8AFCHPQCAFDwAgDc8AIC4PACAOLwAgGq8AFCxvQCAITwAAHA8AIC1vAAgKr0AAE68AADtOwDAobwAoM49AIDrPAAAP70AACO8AMBFPQCgfL0AwHA9AACEvQCACD0=","chunkHash":"309526af85d2b1bd3f99289d0b2dfadb37984d25106b1c3f9f8f3c122b88dddd"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def validate(self):\n        \"\"\"Validate the model\"\"\"\n        #...\n        # Update the scheduler\n        self.scheduler.step(avg_val_loss)\n        \n        return avg_val_loss\n    #...\n```","range":{"startLineNumber":339,"startColumn":0,"endLineNumber":342,"endColumn":27},"embedding":"AADiOwDgID0AAEA7AFCovQAAOjwAgBU8AOAxPQCgKz0AwLK8AMDMPAAAvbsAAI68AIDIvAAAhbsAoDm9AEDcPABArrwAQEI9AGCWvQCAwDwA4Hc9AEBKPQAA0DwAALE8AGCpPQAAfDsAQOE8AMDTvAAA4DwAAFQ7AACXOwCAy7wAsKi9AGBYvQAA87wAYAq9AIDgPADAuT0AAMQ6AKAsvQAAxDwAgDe9AIABPABw2T0AAH+8AADjOwDAhjwAMLA9AAAwvAAANTwAQOG8AMBSPQDgQ70AAAC9AOBkvQCACb0AAMk7AADwugAgJb0AgAI8AADguQDge70AwLO8AAAbPQAAl7sAAOK7APCHvQAQgb0AACC9ACAXPQAAkDwA4DO9AOBOPQAADLsAwJ68AOBEvQCAhbwAwPI9AAAIvAAAnDwAANq8AADLOwAAQjsAgFs8AADAOwCAL7wAgPa9AGAWPQAA0DkAIH69AACYuwDAXj0AACC8AMDcPADQrD0AgMG8AABMvADAHb0AQB89AECGvAAAN70AAIo8AIAwvQAIAT4AAKY8AABouwAAJ7wAgLO8AOCEvQCgUj0AoLa9AAD4uwCQuD0AAIa7AABIvACAub0AYDE9AADoOwAAzDsAgPq8AADcuwAAODwAYEI9ANCcvQDAnDwAADQ8AMCFPQCA8LwA4Da9AIAmvABA07wAAIU7AABsOwAAZTwAALA6ALD1vQBAab0AQKU8AAAEuwDAFD0AQBG9AAAAOQAAKLsA8Kg9AMCSvAAgZ70AAFy9AACLuwDAJz0AYJI9AADEvAAABjwAYAM9AAAuvADAKb0AoBu9AICGvACAMT0AwLk8AFCTvQAAvDoAUIM9AAA7vAAAYDsAYGa9AMD3PABAeL0AABQ8AAAuvACAQr0A0OU9AIAXPQAAgDgAgMO9AADoPAAwiL0AgFS9AGA9vQBgMr0AACW8AIB2vQAAbz0AwI69AIBEPADgHL0AICa9AOA5PQAATzwAAOQ6AIDrPAAAgrwAQLW8AABqPQDAXj0AADE9AGBUvQDA7TwAQLo8AIAnPADAgTwAQLq8AMBMPQBAtLwAgBy8AOAHPQBAy7wAgJU8AACkvACAlLwAAGo8AIAmPAAAKDwAYGw9AGCuvQDAKz0AYAa9AACVuwCAIbwAgIK8AABxPQDAXz0AgHg8AADyPACgKT0AgJk8AAD0OwAAQjwA4AW9AMAVPQCAmbwAgCa8AABuPAAAcLsAgDC8AHDAPQBgy70AgLO8AAAQuwAAMj0AgCM9AMCOPAAA2z0AIBu9AKCxvQAArrsAADG8AADDuwAAsDoAQD49AKBJPQDgFT0AgIG8AOANvQAA67wAABo9AAAlPQDgjb0AQF69AGAYvQAAv7wAYCw9AEDiPAAwkL0AgBa8AGAavQCAIbwAABi7AMCKvABA8zwAAGO9AECkPADAiDwAwN08AABkPACAMDwAANC6AEB6PQBADj0AAJQ8AEC0vACAL7wAAMC4AIBaPQDAhTwAACk8ACAePQAA2zwAwLa8AICEPAAATjsAAEm8AMCxvQCAyrwAgMi8AECrPACADDwAgDa8AIAJPACAZz0AgDG9AEDHvABA4jwAMIe9AAAjvQAAALkAAAC7AIDDPAAANLsAULU9AIDWPABA/LwAAPG7AECEPAAAUjwAYE89AEAbvQAAXrsAQDs9AEDbPQBAwjwAQAm9AADHvACA8rwAgLC8AIDUvAAAujwAAB28AIBAvABgZr0AwAK9ACAHvQAAcbwAAJA7AECBPAAA4LkAwM49AADkuwAgVz0AgBI8AABTPQBgmr0AULi9AKBsvQCAVT0AAKA5AIA4vACgnr0A4Gw9ACAdPQDAKr0AAOw8AAA4OgAAl7wA4Gq9APDbvQAAvTsAwLK8AEDdPAAA8DoAAF+8AADSvQDgCj0AIGs9AACpuwCArbwAYHw9AGA1vQDABD0AgOw8AAACuwCwk70AAB89AOB0vQBAPj0AwMa9AIDtvACgZz0AwLY8AGApvQDA87wAAN08AIBBPQCQlD0AACg8AACguQDAMr0AAFk8AKA2vQAApbwAYI09AID8PACAzrwAEJi9AAA1PQDAjT0AYFI9AIAXPACAVD0AoFE9AOBVPQCgtb0AgMc9APCGvQAA2TsAAAC4ALCrPQCAiTwAwOA8ANCPvQCAhT0AgLI9AMDJvQDAA70AAPy7AECcvADAUb0AgGi8AAByPAAAUzwAgMs8AIAdvQBAm7wAAIA7AJCEvQAATbwAQLA8AGDaPQDAqr0AQJ28AMAnPQAALjwAoAS9AICGvQCAK7wAoKU9AEDBvAAAMzwAAFi6ACCrPQCANLwAABQ8AIB5vQBACL0AQO+8AAACuwBAxTwAwLi8AAC8ugAABLsAAGC6AEAUPQCAp7wAQEC9AIBsvAAABD0AAAK7AMCSPQDQnz0AQDw9ACBSPQCgaD0A4Bm9AMBDvQAA3TsAABU8AACVvABA8jwAAII7AIBqPQBQj70AQGg9AADZuwDgMj0AAPY7AMAlPQCwjL0AQOW8AAB2OwBAxTwAwHa9AIBZPAAAKrwAwGy9AMCTPAAAHrsA2GE+ALCbvQBA1rwAQKK8AAB5PQAASLoAwPM8AGAPPQAAPbwAwMO8AICdvQCAjDwAQIQ8AECQvAAAcL0AoAK9AADcOgAAtLsAoLU9ACAHPQCgS70AAJK7AEAzPQCAaL0AoG09AKCDvQBgPD0=","chunkHash":"c4d68c099f79d610e4b1c1bec6d57aba210c93f8bc8db508dc5ef59f8085a7f6"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def save_checkpoint(self, is_best=False):\n        \"\"\"Save the model checkpoint\"\"\"\n        checkpoint = {\n            'epoch': self.current_epoch,\n            'model_state_dict': self.model.state_dict(),\n            'optimizer_state_dict': self.optimizer.state_dict(),\n            'best_val_loss': self.best_val_loss\n        }\n        \n        # Save the checkpoint\n        checkpoint_path = os.path.join(self.project_dir, 'Weights', f'checkpoint_epoch_{self.current_epoch}.pt')\n        torch.save(checkpoint, checkpoint_path)\n        \n        # If this is the best model, create a separate checkpoint\n        if is_best:\n            best_path = os.path.join(self.project_dir, 'Weights', 'best_model.pt')\n            torch.save(checkpoint, best_path)\n            logger.info(f'Saved best model to {best_path}')\n    #...\n```","range":{"startLineNumber":344,"startColumn":4,"endLineNumber":361,"endColumn":59},"embedding":"AIDcPABA2TwAAKu7AADHvQAAejwAANo8AICNPQAAZD0AgDa8AIB1PADAhLwAAHO8AABgugAA5rwAAOC5AIDtPABgLL0AYGE9AIDWvAAAdzwAoCA9AABUPQDAAj0AgEM9AGCYPQAAMzwAAFS8AMDyvAAA/zsAAF67AID7PACAcrwAkLO9ACCKvQAA9DoAADm8AIBzPABARj0AgJ+8AKACvQDADD0AAKy8AMApPQCA+T0AADu8AIAuPAAA5zwAMNs9AIBlvAAAXD0AABm9AMAHPQCws70A4AC9AADRuwDAhr0AgG89AMD3vADgSb0AAIc7AACQOgCQn70AgDM8AAA3PQCgNz0AAK68ACDEvQAAjDsAQGm9AACmPADAwjwAIDW9AADkPAAA0TsAAGU8ACBOvQDgUb0A4Jo9AIAZPAAAQLkAAOe8AADcugBA3TwAADo7AMCNPADgQb0AcNq9AOAAPQAA5zsAQIe9AICFvABAUT0AgLe8AEAsPQDgmD0AwOm8ACAcvQAASrwAoAM9AEDOvACAtrwAALS6AEDGvADQqT0AAMA8AECsvAAA6TsAgAG9AEA+vQAgdj0AwIy9AIAQvADQsD0AADQ9AICjvACg+L0AgD09AMAcPQBA4TwAQPW8AIC1PACgfz0AADU9ALCovQAAIDwAAKO8AEDvPAAA0bsAAIG7AADmuwAAULoAADU8AIDAPABAUL0AQIo8AADEvQDAH70AAIM8AAAMPACAzzwAQJq8AAAVvAAA9LoAkII9ADCEvQCAGTwAQBu9AAD/vABALT0AAEs9AIBcvQCgD70A8J49AEDhvADAq7wAwMy8ACADvQBgGT0AACy7ACBAvQBA0LwAIFs9AGAdvQAAUjsAQG+9AKAjPQCQtL0AAI88AIDDvABAUr0AwL89AGBaPQCAiDwAAE69AADTPACgzL0AwIe9AECzvABgkr0AAP07ALCxvQDAKj0AsM69AOAqPQDA5rwAAEY7AIBkPQAA4bsAAMs7ACCPPQDAQr0AwAm9AID0PAAAvzwA4As9AIANvADgJD0AAIq7AKACPQAA07wAwMC8ACA5PQAAMb0AgNO8AADcPADA87wAwEE9AMCOvABAvLwAALS7AAAlvACgJD0AAG49AADIvQCAPjwAAHK7AABIOgAA3zsAAP27AECMPQDAYT0AwKO8AEAIPQBgWz0AgCU9AADNuwDAn7wAABC9AEDePAAAprsAAFe8AACyuwAAsLsAgDg8APCoPQDAxr0AgBS9AABwuwCACj0AAAw9AIAsPABw0j0AIAm9AMA9vQAAXjsAANg7AMDRvACAV7wAgLw8ACATPQAAAD0AgHk8AACFPACALr0AgCM9AMAOPQDgjb0AAEi8AOBKvQCADLwAoIk9AEDHPACAT70AAOC6AIDivABAnjwAAIy6AADSvAAA+DsAwNu8AABJPQAA8bsAwNA8AMCUPACAW7wAgAE8ACBQPQAA4rsAgHs8AACWuwAAEDsAADw7AOCFPQCA6DwAwP88AMDkPABAqzwAQNa8AEDOPAAAGDwAAG+8AFCxvQDA4LwAQPu8AMATPQAAJTwAAHq9AIABPACgij0AAN+8AAAYuwAA5rwAIEm9AACnPABA9TwAgBW8AAB+PABAZr0AgMQ9AID1PAAAcLwAwOG8AABPPAAALTwAwGI9AMCovABA4zwA4D49AKDBPQCgGj0AgPu8AEASvQAAEb0AgE68AMDAvAAAHj0AALE7AADwOgAgJr0AQOy8AICLvABAt7wAAGA6AKAdPQAAXzwAsNc9AAC8vACgWT0AgNg8AMCrPADAyr0AgFi9AOC4vQBgfT0AgDi8ACAmvQDAa70AYDw9AIB+vACQgL0AYC89AIBlPABAu7wAkIG9APCevQAAdjwAgL68AADwuwAAJjwAAHY7AEATvgCAIjwAwIs9AICVvACAKL0AgAo9ADCovQBgnD0AsKo9AAAMvADAGL0AwF49ACB3vQBA+TwA8NG9AAATPADAkD0AoCk9AACsuwCAfrwA4EI9ALCBPQCgkD0AoDA9AAChOwCADr0AwG09AEBTvQCAWLwAwOg8AGADPQBAvbwAwMy8AKB1PQCgaj0A8Kk9AAAIugAgRD0AABE9AKAbPQBgkr0A0K09AEAevQCADb0AAOo7AECbPQBAGj0AAOi6AOAKvQBgUz0AgOk9AKCFvQBAAL0AAIK7AAAqvAAgI70AwPu8AADfOwAAzLsAgHo8AED4vADgPL0AADq7AKCHvQAAC70AgBQ9AKB4PQCAt70AAFE8AACvuwBAGz0AYAa9AEBwvQCASzwAsNk9AIAevQAAbTwAABY8AOCKPQAArrwAADM8AGB0vQCgQr0AgOy8AAC9PAAApLoAIDe9AAC0ugCAbbwAANK8AEAmPQAAbbwAgOm8AEAIPQAgeT0AgC48APCDPQDguT0AwOA8AGAKPQDQrz0A4Eq9AEChvADAlTwAACC6AIDAvACAJD0AAKC6AACTPADgk70AgGg8AADMvAAA4TsAgLe8AEARPQBwqr0AAC68AIB4PACAxzwAgB69AMASPQAAjrwA4F+9AECfPAAAhLsAQPs9AAC0vACAVbwAgD68AKCIPQAAnzwAgJ88ACAEPQCABbwAgBq8AMC2vQDgFz0AALi7AACluwBgT70AAJ68AADqOwDgWL0AqAo+AMBmPQCAF70AgJC8AKBmPQDgQL0AcIM9ACBavQBAdz0=","chunkHash":"4ef0b0232465a912f53e16c0f6074205270e5b3b03fafa8ac5a8d42708a1bfea"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n    def train(self):\n        \"\"\"Train the model for the specified number of epochs\"\"\"\n        logger.info(f\"Starting {self.model_type} texture model training with MONAI\")\n        \n        start_time = time.time()\n        \n        for epoch in range(self.num_epochs):\n            self.current_epoch = epoch\n            \n            # Train\n            train_loss = self.train_epoch()\n            \n            # Validate\n            val_loss = self.validate()\n            \n            # Save checkpoint periodically\n            if (epoch + 1) % 5 == 0:\n                self.save_checkpoint()\n        \n        end_time = time.time()\n        training_time = end_time - start_time\n        \n        logger.info(f\"The {self.model_type} texture training took {training_time // 3600} hours {training_time % 3600 // 60} minutes\")\n        logger.info(f\"Best validation loss: {self.best_val_loss:.3f}\")\n        \n        return self.best_val_loss \n```","range":{"startLineNumber":363,"startColumn":4,"endLineNumber":388,"endColumn":33},"embedding":"AADwugDAijwAgBU8ADDdvQAAzLoAAJQ7AOAoPQAgTD0AAJW7AACAPABAAr0AwIK8AADauwDgNr0AAAM8AADwOwCAtbwAIDc9AABIvQCAzTwAABs9AKAsPQAAQjwAICU9AKCXPQBAsjwAIB49AACLOwCA3TwAAKg6AACdOwAAcbwAYM+9AGCjvQAAl7sAICy9AICwPADgWT0AgKO8ACAavQAApDwAQMG8AADYOgBw4z0AwJC8AADwuwAAYrsAMOg9AACNuwCA/zwAAEG8AIAjPQBgor0AoAa9AEDhvADga70AgAE9AADwOwBgN70AAE88AADVOwBwlb0AgDM8ACAOPQAAWjwAADw7ALCsvQAApbwAID+9AGA1PQCAOzwAAHW9AMDMPAAA1jwAAOS6AEDQvAAAfb0A8I89AKAkvQAAHDsAAIM7AACLOwAAV7wAgGg8AACKPACAw7wA8La9AAAePQAAPzwAAIy9AMCrvABAFD0AwLu8AECrPACAgT0AYDu9AMDBvAAAi7wAANo8AACwOQCgJb0AAHa7AABtvACQ3j0AAFA7AADLuwCAdLwAQJC8AMBMvQAAbT0AwGi9AAAEPAAAzz0AAAa8AIB1vABA7L0AYAE9AAAkPQCANjwAYD69AAAYugBA6jwAsI49ANCfvQCAFzwAgMq8AOA8PQCAH7wAwLe8AIB5PAAAGjsAgFY8AIB9vAAAirwAADK7ADgAvgBAAr0AgJQ8AABMvADA1zwAwNm8AADAugAAhTwAEJQ9AABIvQAAQ7wAMIq9AOALvQDAEz0AYA49ANCKvQAAIr0AIGk9AEArvQAA67sAAFe9AIB8vADA5zwAQLU8AKBNvQCANLwAADQ9AIB7vACAJjwAgF69AEB9PQBAl70AADc8AIDivADANb0AQOs9AID4PAAAmbsAEJa9AADvPACgsr0AYGW9AMBEvQCgXr0AAKS6ACCYvQCgID0AsMi9AIA0PQAALL0AgHS8AABBPQAAizsAwLc8AEB9PQBA27wAoCq9AGCTPQBgFz0A4BY9AEC8vACgJz0AALe7AADLOwBA/rwAAFE8AABtPQAAtrwAAKy8AEAGPQAAALwAAAA9AMCGvACAQTwAoA49AACIOwCADjwAgIc9AODbvQAASrsAgHW9AICVvACA1rwAoBm9ADCOPQCwoD0AgAI8AICwPAAwmz0AoBk9AABgOQCAkrwAACS9AAACPQAACbwAAEY7AAAJPAAAqrwAACi8APDIPQAQzr0AAMa7AIA5vABgBj0AIDM9AIAKPACg1T0AYD+9AMCNvQAAarwAAFW8AIDGvABAmbwA4D49AEDfPADAzDwAALg6AMDevACgJr0AIC89AOBQPQBQpb0AAGu8ACAHvQCAcrwA4Is9AMAjPQCAdr0AgCg8AAC1vAAArjwAgEy8AECIvACgBD0AAAu9AECzPAAA5rsAwJU8AAC8OgCAmLwAADQ8ADCEPQCA3jwAgCw8AMDQvAAAQLoAgAA8ACBhPQAAVjwAACw8AIAwPABAzDwAQP68AAC1PAAASLoAANG8AGDhvQDAz7wAAPm8AMCLPACADDwAoAK9AABAOgDAnD0AIBi9AICjvACAX7wAYEi9AADovAAAcTwAAJE7AIA2PQBgBL0A8OI9AEDzPAAA4LkAgIS8AAD7OwCACDwA8Lw9AICKvACAJj0AwDU9ACC5PQCgCz0A4Ae9AGA1vQDABb0AAKu7AABxvAAAprsAQJs8AACsuwCwj70AoC+9AMAmvQCAKrwAgI68AOAYPQBAmDwAsLc9AACTuwDgCj0AAD89AOAoPQDwjr0AYGW9AJCPvQAAfT0AAPi7AABrvABwq70AwDs9AICiPAAgSL0AICQ9AECGvACAQbwAYFi9ALCJvQAAG7wAgHa8AABuOwAA6rsAgCk8AFAPvgAAXTwAIGI9AMDKvAAA3bwAYCQ9AIDZvADgpz0AQI09AIBcvABgHb0A4BM9AKCFvQCAwjwAMMe9AIBOPAAAgD0AwLc8AOAjvQAAjrwAYD89AGBSPQDgkT0AQLM8AACLuwCgT70AgK48ACBUvQDA4rwAYB09AKBLPQAAlrwAwF29AAAzPQCAkz0A4JE9AACBPADAKj0AQCY9AGBSPQBgkr0AcNc9AIBTvQDgAL0AAJA6ABCPPQCA0TwAAJ08AKBkvQAwlD0AQNo9ACC1vQDAhbwAAGS8AIBFvABAEr0AAA69AMDZPAAArrwAgB49AIA2vQDAzrwAgJA8AFCCvQCA47wAIB49ACCjPQDgub0AgCm8AAAAPQAAVTwAgDS8AKCCvQAAyzwAwHk9AEDdvAAA6TwAADg7AECHPQAAvLoAwO08AMBqvQAAP70A4Hm9AIAuPADADz0AgMu8AICIPAAAqDoAAJC5AEAJPQAA4DoAYAS9AIBiPAAgNz0AgLc8APCePQAwqj0AYAg9AAD4PAAwjz0AkIC9AMArvQAAzLsAgCa8AIC7vADgBD0AADi6AMBSPQDgnb0AoEY9AECKvADAhjwAQPK8AAD8OwAAdb0AgFm8AMDDPABgQz0AYF29AMCWPACAf7wAoFy9AMCNPACAdrwAUBU+AECXvQAA7bsAAJ67AOBFPQCACLwAAJs8AABuOwAAJbwAgH28AGCcvQAAuLoAAJc7AKAwvQAANL0AAKm7AIDJvABA5rwAYMs9AKAIPQCgNL0AACA8ABCEPQBgnb0A4Ho9AAB+vQBAHD0=","chunkHash":"78b960159ad72a88f0d73ab57df04f387b57ab04ef91448766ac3593e1a86fe8"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    def __init__(self, config, model_type='lowres'):\n        #...\n    def setup_model(self):\n        \"\"\"Set up the MONAI UNet model, criterion, and optimizer\"\"\"\n        #...\n    def setup_dataloaders(self):\n        \"\"\"Setup dataloaders for training and validation\"\"\"\n        #...\n    def train_epoch(self):\n        \"\"\"Train the model for one epoch\"\"\"\n        #...\n    def validate(self):\n        \"\"\"Validate the model\"\"\"\n        #...\n    def save_checkpoint(self, is_best=False):\n        \"\"\"Save the model checkpoint\"\"\"\n        #...\n    def train(self):\n        \"\"\"Train the model for the specified number of epochs\"\"\"\n        #...\n```","range":{"startLineNumber":139,"startColumn":0,"endLineNumber":364,"endColumn":64},"embedding":"AAChuwAAwTwAANE8ACDivQCA6TwAACC8AKBoPQDghD0AgIO8AICcPACgJb0A4By9AADQuwAAArwAAJa7AAAFPADA8bwAoG49AIAgvQDACj0AEI09AEDLPABAiDwAgIw8AFCsPQCA7jwAQCk9ACABPQAAXjsAABQ7AAC7PABAjbwAgFu9AECIvQAAQDsAwKa8AOAOPQDAWj0AALM7AEASvQCA2TwAYF69AICcPADQtz0AwPW8AABouwAApDoA8Ow9AEDqvACAojwA4Du9AKA3PQCghb0AAIO8AMCtvACAZ70AQKA8AAASOwAwjL0AgEA8AIAtPABQib0AAO67ACAkPQCgHz0AAMG7AACjvQDA57wAIHy9AEBaPQCAkDwAYIK9AAA1PQAAIbwAgBU9AADLuwBgRb0AwL09AABMvQCAbTwAALG8AABguQAAQLkAAJS6AED1PACAdb0A4MG9AEC5PAAAgzwAYG29AIDqvAAA6DwAQOC8ACAPPQCgZj0AwNq8AIDiPABA27wAgA89AADHuwCA57wAAP07AICFvAAw1T0AwIU8AAATvABAu7wAAAW9AKAMvQBwkT0AIH+9AABUOwCQ8D0AAD48AEDjvAAIC74AgDU9AAD3PAAAxTsAgNa8AAAKOwBA4zwAsJg9AIBXvQBAID0AwIe8AOBAPQAAQDsAAEO9AMC7vADA+jwAQLE8AACMuwCAEL0AAAQ7ALDVvQBAYr0AAMA8AAB8vAAgDD0AAMa8AIB1PACAaTwAQB49APCMvQAAPDsAgHS9AKAdvQDA5TwA4E09ALCOvQAAjLwAYIM9AEA5vQDA1rwAgEq9AMD4vADA3TwAQAg9ADCXvQBAqzwAgFc9AAC2vAAACjwAgEm9AABfPQCgpb0AwIg8AADkvABA37wAQMI9AECePQAALrsAAEu9AMAePQCgvL0A8JC9AAC3uwCgXr0AAAg7ACB6vQCALz0AkLG9AAAaOwAQjb0AgGO8ACAyPQAACjsAgC48AED0PADAwbwAAGq7AOBSPQCgHj0AwHM9AIDPvACgHD0AAEA5AABcPAAAcLwAAMA8AMCwPAAA77sAAOq7AEDLPADgEL0AAKg8AID7vAAA0TwAwKU8AABPvACAMbwA4FQ9ACCGvQDAoDwAgEu9AACrvADAzLwAwJa8AIB9PQBwkT0AADY7AAB5PACgVD0AQLo8AABLvABgCb0AoAK9AMDgPADAvbwAAKc7AMCFPADAnrwAgEQ8ACCBPQAQzL0AADy8AIAgvQBAhD0AYGw9AAAoPAAQrD0AwC+9APCMvQCAuTwAgFW8AGAjvQCAmbwAoCQ9AMDYPADAuzwAgHw8AAD/vACAsrwAgBs9AMA8PQAQjL0AwPC8ACAvvQAADr0AcI09AKAHPQBAxbwAAM87AOApvQAAkDkAAHG8AID4vACAWzwAABy9AMDXPACAKbwAAN88AABcPAAAqbsAgK08AGBWPQDAjzwAANS6AADguwCAe7wAgDU8AGBEPQCgFj0AAFo8AMDtPAAAiLsAwI+8AEDMPAAAfrsAwIi8AICivQBA+7wAoAq9AADuPACAkDwAYGC9AECCPACAJD0AQA69AEDNPABApDwAADS9AIBFvQCgDz0AgCy8AMDwPAAAv7wAgN09AIAAPQAAHr0AAIC8AAA4PAAA0TsAoHM9AAAsvADAnDwAABI8AFDKPQBgND0AIDG9AACdvABAtrwAABA6AABYOgAA0jwAANu7AECBvABgg70AAA69AECGvAAgOL0AABi6ACAMPQAAATwAIN89AADsOgAAED0AwP08AID0PABgbr0AYHu9ANCJvQAwkz0AgKG8AIBpvAAAZr0AQD49AICWPACA17wAYCc9AMCMvAAAtrwAoEC9ABC1vQAAXDsAAFy8AIC/PAAAKDsAwMA8AND0vQDApzwAMJY9AIBBvABA5rwAQEU9AGAjvQBgnT0AoCk9AOANvQDAibwAQHg9AICevQDgeD0A8NC9AAAauwBAQT0AYBo9AMAMvQAAoLwAgCQ9AKAJPQCAhz0AALo8AACYuwBAWr0AYB89AOBwvQDA87wAIAk9AOBtPQBA0bwAAKO9AKB3PQBgwj0AMIs9AMDsPABAGT0AoCI9AGAjPQDgg70AMJY9AEASvQBAsrwAAOO7AFCqPQCANz0AgAM8AABAvQDANT0AYL09AJDOvQBA8rwAACe8AADtvAAAJr0AACi9AADkOwAA37sA4Cc9AOA4vQAAJr0AgCM8AICCvQAAsLsAwO48ANCKPQDAoL0AAKG8AADsugAA4DwAAN68AFCqvQBADD0A8LI9AABguwAAKDsAAN88AFCOPQAAljsAABY9AGALvQAAVL0AAB29AACcOgAAfDwAAEi9AIB5PABA3rwAgBk8AOAqPQCAibwAgKa8AAC5OwCAdz0AAIA8AHCAPQAw0D0AYEw9AMAvPQBQjD0AQFi9AID+vAAAYDwAAJA7AECJvADA3DwAAHw7ACAxPQAwj70AIC09AADAOgBgAD0AAKI8AADMPABggr0AAPy6AACgOwBgVT0AIBi9AACzOwBAnrwAoKS9AACyOwAAALoAkC4+ACBtvQAAPDsAgDa8AOA0PQAA0rwAwNE8AAA0PQAAFrwAoAS9AHDLvQAAQLkAAKK7AAAIvQBA2LwAQMO8AADnvAAgcr0AgMU9AEAEPQBgH70AALu7AEBoPQDQt70AEKs9AABqvQDwlz0=","chunkHash":"9f0940a5bdabaf636f80358b45bbfe0cb829ec54ffd6cd31932c7e4b2138f6c1"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#!/usr/bin/env python\nimport os\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nfrom torch.utils.data import Dataset, DataLoader\nimport numpy as np\nimport pandas as pd\nimport logging\nimport time\nimport sys\nfrom tqdm import tqdm\nimport monai\nfrom monai.networks.nets import UNet\nfrom monai.transforms import (\n    LoadImage, AddChannel, ScaleIntensity, ToTensor, Compose,\n    RandRotate90, RandFlip, RandZoom, RandGaussianNoise\n)\n\n# Setup logging\nlogging.basicConfig(format='[+][%(asctime)-15s][%(name)s %(levelname)s] %(message)s',\n                   stream=sys.stdout,\n                   level=logging.INFO)\nlogger = logging.getLogger(__name__)\n\nclass TextureDataset(Dataset):\n    \"\"\"\n    Custom dataset for loading 3D texture data\n    \"\"\"\n    #...\ndef get_morphofeatures_texture_dataloader(root_dir, batch_size=4, shuffle=True, num_workers=4,\n                                         class_csv_path=None, sample_ids=None, is_cytoplasm=False,\n                                #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":105,"endColumn":0},"embedding":"AEC3PADAJr0AwBE9ADC9vQAAJrwAoGq9AACcOwCAdDwAAFa9AMAuvQAANDsAAMC5AADGuwDgT70AAKQ7AMDXPAAATjsAgAI8ALCUvQAAEDwAgKk8AKAxPQAA3DsAYEC9AIDKPACAljwAAMg8AGAhPQBApTwAQAu9AGBRvQDAzLwAgMm9AIBbvQAgbb0AADY7AMC+PAAgmD0AALy6AEDMvADArjwAgFW9AECbPACwiz0AgAi9ALCLvQBA3LwAAKg7AAARPQCACz0AAN+7AOBOPQAgfL0AgFi9AMCUvABA8LwAQMy8AEDCPADAFL0AgA69AIAFvADA0LwAgHS8ACB/vQAAtjsAgCS8ACCcvQAA3LwAoF29AABguQAAMrwAQP68AACzPABgfL0AQK08AMDHvABAUL0AcLQ9AOBavQBABr0AgEU8AMAFPQAA+bsAgOA8AACrOwDwlL0AgOC9AGA2vQDA0bwAwIe8AGAtvQCA6TwAAEm8AMB3PQDA0zwAANG7AOAYvQDAUb0AgNs9ACAqPQAAErwAQHc9AIBJvQAwiD0AQJU8AIALvAAASrsAAP28AOAsvQAAgz0AMKi9AAAIuwAgWj0AgMs8AABQPABwhr0AIAU9AEApPQCAGTwAAKG9AIADvAAAETwAoBA9AIApvAAgHT0AgEi8AIBoPQDAhb0AQNu8AABSvADAtTwAwLS8AABIPACgg70AAAq7AHCUvQAgA70AAPE7AIDqvAAAtzwAwMC8AADavADgQj0AAHQ9AKAuvQAADT0A0Jy9AMBcPQAACzwA4Cs9AJCzvQAAgjsAIJw9AAAjvAAA3TwAYIG9AIDcPACArD0AgGY8AIBuvQCAVTwAgBO8AMCIvAAAqjsAQMO8AMDPPQCAzLwAgCq8AKAevQAgm70AENQ9AAAhPAAAfLsAQDa9AKAaPQDgWb0AgH69ACCDPQCA4bwAgAw8ACB3vQAAaDoAQB69AACdvABgeL0AoAS9ACBBPQDA1TwAAJA6AACTOwCAlbwAQIG8AICIvACAPT0AwCo9AAAkOwCAfD0AAIA8AAD+PAAAdjsAwMy8AHgDPgAANb0AgPO8AMAPPQAAqrsAAK27AIDuvABAZL0AAEw7AIBZPAAANbwAAPG7AIAlPQCAzzwAgJm8AGAXvQBAFT0AADq7AABRPQCAqj0AQPw8ACAsPQAA1DwAoAA9AMA/vQDgg70AIGi9AAAbPAAAtzsAgIq9AEDGvAAA3zsA4Aq9AAD/OwCAAr0AwP28AKAsvQBAjDwA8Is9AACIOgDgcz0A0NO9AOADvQCAnDwAAP87AACvuwBA67wAABO9AAB4PABgFj0AYFS9AMD8vACQv70AAEy7AMC+vABgeL0AAMI7AABPvQDAJD0AgK08ACA2PQBQor0AwHA9AIBxPAAAgLgAwPq8AADOvACAZj0AgCW9AJCiPQCAfbwAwFc9AIBwvABgW70AYE09AIBWvAAAWDoAgLg9AIApvAAAVrsAgAU9AACvPACAdD0AQIm8AEC3vADAvDwAAAg6AAD5uwCAzbwAAE+8AFDRvQCAyrwAgG69AICtPAAAEb0A4Bi9AMDzPAAA1DsAQHy9AIAAvQCArLwAAIM7AAACuwAA7zsAwLc8AAB6uwBgRb0AgLg9AAAcPADAqLwAAK68AAAEPQCAE7wAQOo8AGAVPQDAij0AAO07AGDaPQAAkDsAoBm9AJC/vQAA8rsAADo9AMB4vQAAxbwAAJW7AIAAPABAg70AEJS9AABmvAAAjb0AcIY9AABsPACARj0AgDo8AADquwBA4TwAYEe9ACABPQBA7L0AYAi9AEAQvQCA+7wAAEU8AMBWPQCAsDwAAPs9AIC+PAAgEL0AAGm8AHCAPQCgV70AgEk9AEBQvQCAMLwAANm8AAAwvQAAJDwAANC5AEBRvQBAjT0AIIo9AOAYvQCgKr0AwNY8AIDJvADwpD0AQL08AADAuAAAPzwAADI7AGCvvQAASDwAMPG9AACPuwAgtT0AIK89ACB3vQBA6LwAwCM9AABhPADAlT0AgIG8AAAAPAAAC7wAIBQ9AIBiPAAAh7wAgJA8AABJPQBgNr0AYDa9AGCmPQAAij0AwB09AAB6OwAA5DsA4HQ9AICpPQAAGDwAcKg9AAAAAADgLL0AQLI8AJCfPQCAyT0A8JA9AABAuQAATD0AoAY9AHCxvQAgRL0AQD29AECpvACAO70AYF69AEDGvADAF70AQLg9AIBpvAAA6DsAQJW8AID0vACAN70AMIk9AEDJPQBAmL0AgDW9ACAuPQBADz0AQAS9AOATvQCgFT0AIBg9AAD6uwAAOLoAgKm8AEDePAAAYLoAQAu9AMCdvACga70AgGi8AIBMPAAAnrwAIAG9AACMOgAAmDoAQCS9AACVvACAob0AwFu9AMDePABgwT0AgEK9AMCaPABAsTwAwJc8AMCjvAAAYz0AgIa8AAAEOwBAm7wAAMM7AAC3OwDAiLwAgNW8AID3PACAo70A4FE9AKAcPQAAPzwAwLM8AADruwAglr0AAIa8AADwuQBAnDwAAHw7AKB2PQAAUDsAoM+9AGBYPQAABj0A8Bk+AIAwvAAgKr0AAEA8AMCLPACA2bwAAIo9AKASPQCAQbwAAL28AIBJvQCgW70AAEC6AABEuwCANrwAYBU9AMDzvAAgEL0A4Dw9AAAjvAAgWr0AAGA6AIBEPAAAmb0AAKQ8AAAUuwCQvD0=","chunkHash":"5f07e0b32c671f564cf9cf07671bbe46ffcf33e4fefe3e1107b91eb55896958c"},{"text":"File: `scripts/temp/pytorch_texture_model.py`\n```python\n#...\n                                         box_size=(104, 104, 104), pin_memory=True, debug=False):\n    \"\"\"\n    Create a DataLoader for texture data\n    \"\"\"\n    #...\nclass PyTorchTextureTrainer:\n    \"\"\"\n    Trainer for texture models using MONAI/PyTorch\n    \"\"\"\n    #...\n```","range":{"startLineNumber":105,"startColumn":0,"endLineNumber":138,"endColumn":7},"embedding":"AADUOwAAzLoAgAc8ABDhvQAAmLoAAGO9AIC6PACAHT0AoFO9AADAvAAgBL0AwPY8AMDUPABAZr0AgIK8AEAEvQCAMjwAQIU8AIA+vQAANDwA4Cs9AOAJPQAA5zsAQCO9AIBOPQCAoTwAwDI9AICmPADA3DwAoAa9AAAevQBAzLwAIDa9AABFvQBA0TwAAIW7AMDgPAAw3T0AAJ+8AIDAvABAiLwAkMm9ACAaPQBQuj0AgJQ8AECFvAAADLsAoFA9AAAUOwAAwDwAAG68AIAZPQCAhL0AYBe9AACIvADgJr0AwJI8AKAQPQAATDwAgEA8AAArPQAA6LsAgD28AIDcvAAgWj0AAAq8AIBAvQCAbbwAkIK9APC1PQCAeDwAsK29AMDDPAAAmLwAgEE9AMCovADwkb0AkPA9ACBZvQAAkzwAALS7AMB4PQAAc7wAAJC6AIAePACgUL0AoGa9AMAOPQCA5TwAAKG9AACtuwCAPbwA4DO9ACAHPQDAFz0AwIS8AACAOQBgS70AYEo9AIB5PADAGb0AgKE8AAAEvABggD0AAHA8AEAgvQBA/LwAAIO8AAAQvQBgUD0AQMS9AACCPABw8D0AAOA5AACkOwCQ5L0AcIY9AAB/PAAA7zsAAD47AIB6vAAAHz0AoD09AOAovQAAAzwAAIW7AGAPPQCAu70AAOK7AAC1PACAEj0AoBI9AACBPADgG70AADY7AEDDvQDAjb0AAEs8AABFvADADD0AIBm9AIANvAAALT0AANQ9AADsvAAAH7wA0JK9AADXOwCwlz0AwFo9AMDEvQDAiLwAoI09ABCEvQAALrsAIIK9AABwugBwgz0AQNg8AGAPvQAAazwA4Ck9AADSOwDAqjwAYGq9AOB+PQDAVr0AwMe8AMAQvQCwm70AaAQ+AMDqPAAAAbwAYFW9AIDTPAAAlL0AYBu9AIADPADAnLwAYCq9AKAIvQCgBT0AAFO9AMAhvQAgVr0AQLe8AOBKPQCAtjwAQKo8AIALPABApLwAADe8AABQPADgcT0AgEq8AAAYuwAgdT0AgAG8AOB+PQAAujwAgEW8ACBePQDgRL0AwI+8AADQugCAbrwAADy7AABOPAAANzwAgGM8AMD+vACApbwAAHA8ACB9vQCAB7wAgKW9AIDUvAAADDwAYAg9AKCgPQAQij0AAHQ9AIBFPACA1DwAgE08AABrvADgGL0A0Ja9AEDOPACA7zwAgLi8AAAaPADAxDwAwOO8AHCXPQAQmr0AQNy8AEDXvAAAZD0AwE89AAAEOwBAgD0A4Je9AGCFvQAAVjwAwOG8AADnOwAA1LsAAPY8AOBTPQAgXj0AwOK8AEAtvQDgVr0A4BQ9AEBPPQAAR70AAN+8AIBKvAAABzwAgKs9AADIugCAp70AEJM9AADcugAAJLsAAJK7AAC0uwBALD0AwPi8AIBePAAggr0AAFQ9AAC3vAAAN7wAAHW8AHCPPQCAfjwAQN88AOAsPQAAzLsAANM7AEDYPABghD0AgEI8AABOvAAA6LoAYCG9AAC3vACAeTwAANC8AGChvQAgG70AAGI7ABCWPQCAIzwAoFS9AMCUPADAED0AgN68ACBJvQAAXDsAgJw8AIBRvQBAzjwAgMS8AMDrPABAVr0A4BA+AIBGPQCgG70AALi6AEC1PADA3zwAoIU9AACrPAAgLz0AwMg8ANCqPQCAjDwAEI69AOB2vQAAuDoAQPq8ACAHvQAAKj0A4J+9AMCuvAAgf70A8I69AAASvQAAhrwAAMq7AAD4OgAAbjwAQCE9AACrPAAAkLoAQLs8AGBZPQCgdr0AAKM7AOB0vQCAZDwAIA89AEDmPAAArLwAANg9AABQugDA7LwAAF28AADfOwAAULsAAM68AIBqvQAAcjsAAAW9AAAuvQAATjsAAMg7AMgPvgBAkD0AgIg9AGAqvQAAG70AgFU9AAC1vACgYj0A4AY9AIB3vAAAOLwAgPQ8AJCHvQAANj0AoKu9AAC+vACw6T0AsIM9AABjvABAlzwAQIg8AEDbPAAQzj0AALO7AAB6vAAAtjsAgOY8AAC1uwAA3zsAADw8AGBaPQDAybwAwBW9AHCePQCACD0AoEI9ACADPQAAAT0AAHA8AIADPQDAhL0AcII9AACZvAAAOLwAgE48AICRPQBgQD0AgL48ACAfPQBA1jwAELM9AGA2vQDAv7wAAOo7AICqvADA5bwAQEe9AIBDvAAgb70AQJQ9AOCQvQAAWLsAAEg8AEA2vQAA4DoAgPc8ANCKPQCgHb0AYEC9AAA/PQAArbsAoCm9AAAuuwDgbD0AoHY9AIDvvABA+LwAwAa9AKCwPQBgMr0AAEo8AADwugDgIr0AAKA7AABVvAAAFr0AwJ+8AECbPADgFL0AAEQ8AAALPQBgUr0AAGu8AIBLPABAqT0AgK+8AACAuQCA+jwAgHw8AAAHPADgvz0AsIu9AIBGvQAA5rsAAOC7AADSuwDAHD0AAEu8AICdPQDABr0AAAY8AABougCgJD0AIAo9AACuuwBAL70AQCG9AAAeOwAAYrwAwO68AKAtPQDA8jwAoJS9AEC7vAAA5LsAEEI+APCSvQDAw7wAAOU8AAC7OwDwkb0AwGI9ALCqPQAA7LsAYDm9AMAwvQAAYLsAAIO7AAATvADAv7wAAO87AKAhvQCAA7wAQPQ8AMDWPABALr0AAIq8ACAVPQDwir0AwEc9AAC4vAAAyz0=","chunkHash":"4e765a02fb0146c726e6e8b21c2fa916dc9ef62603b715dbe606681c52d5eb41"}]},"file:///teamspace/studios/this_studio/scripts/temp/test_high_res.py":{"hash":"6804d10b8f0ddfbb22668cf33267d59b125dfa9bf618c22198e81958c8b2615b","entries":[{"text":"File: `scripts/temp/test_high_res.py`\n```python\n#...\ndef denormalize(tensor):\n    return tensor * 0.229 + 0.485\n#...\n```","range":{"startLineNumber":12,"startColumn":0,"endLineNumber":13,"endColumn":33},"embedding":"AIABvQDAjrwA4Ay9AACnvADALT0AYBC9AAAnvQDgMj0AACK9AKApPQDAprwAoFM9AIBvvABAD70AoBK9AMBiPQCgIj0AgC49AODEvQAAlTwAgAa8AMCDvAAAkzwAMLW9AGB7PQBA97wAAJY7AADVuwDw7z0AQAM9AADJuwCAxbwAsKK9AKAavQDQgL0AwKC8AGAXvQCQ3D0AwPg8AECMvADQjj0AAMS7ABCbvQCAOL0A0JQ9AECavADA/TwAYEq9AECPPAAAKrsAgGk8AADIugCAAr0A8Iw9AGBUvQAwmz0AoDi9AIAzPAAAFLsAgAC8AKBOPQCAUb0AAIA8AAD3vABAtbwAEJs9AEASvQDgAb0AgMk8AACvPAAAarwAACg8AEBDPQDAobwAoE49AMDqPAAAQLwA4G09AAAmvABAc70AwDW9AMCGvAAAw7sAgKo9AABfPQAgUL0AIFi9ALClvQAA6LwAQGu9AMCNPACgDz0AgNQ8AGAJPQDgT70AAMG8AABWPAAAIbwAcIk9AADDPACA1zwAAHY9AOApvQBghD0AADi8AGABPQBAhrwAwDa9AAAuPQDg6j0AgBY9AHClvQAAeLoAgC68AABzPQAwmr0AQP68AEDaPAAAIb0AwMy8AABZvAAgQ70AQPw8AADivAAAKr0A4Ay9AEAuPQBgrL0AgFy8AKA9vQBgMD0AgIy8AID4PAAAeL0AAFC7AOCBvQAAirsAAFY7AOCYPQAQyT0AgBs8AAAUPQAAPDwAwDg9AOBqvQBgcj0A4Gm9ACDoPQBgEj0AMN89AKA4vQBQhT0AwPe8AACGPAAAMjwAAEm9AKAbPQBgfT0AwLG8ADCavQAAN7wAgPU8AMCPvAAA8TwAgCK9AEAFPQCAtLwA4GO9AMB7vQCQlb0AwPe8AAA7PABgDb0AYI69ACCXPQAAmjwAwNe8AECNvABAo70AAFk8APDYvQAgE70AgDG8AAAOPQAAb70AADe8AKBLvQBAkj0AQLY8AADvPACAATwAQEo9AIBGPQBAFD0AABC7ACAtvQCAPT0AADc8AACRvAAgsj0AwOu8AOBBPQDA/jwAQNA8AGALvQAgib0A8Ii9AAAuuwBAz7wAAFA8AAB+OwCgHz0AgFg8ACAbPQAgLz0AICW9AECdvABAIj0A4Gm9AABAPQDAk7wAgBY9AGBcPQDgmj0AACu8AIAXvABAnLwAYHe9AACRPACA+DwAAGC6AIBbPADAMj0AgK48AADpOwAAiTwAgA48AECovACAoLwAAH69ABC6vQAAETwAAH28AIAkvAAAdjsAACC5AAC0OwDARr0AIGw9ACAHPQAAhb0AAEk8AGAOvQBA2L0AoEO9AEAuvQDwob0AQAu9AIB8vQBA7DwAADs8AOA/vQBgGL0AgJ+9AIDlPACAz7wAADi6AIDZPACAG7wAgCq9AMBSPQCAcrwAAHw8AIC5vADgkL0AYF89AEDJPADA5TwAwIU8AEAivQAAK7wAgM68AIAwvACAlLwAANw6ACASvQAAabwAACY7AADuOwBwpr0AYEs9AMAcvQCAwzwAAAk8ALClvQBAjbwAQMS8AABwOgAAlrwAkAm+AICAvADgfL0AIAy9AACaOwBgaL0AwGM9AABUPAAAF7wAQJE9AACgPACAEzwAAAAAAID+PQCA/DwAANA8AABYvABAAT0AAOE7AEB3PQAAxDsAADi6ABABvgAAyTwAwOS8AABaOwAAgjsAIEe9AMCjvACAFbwAkIu9AMCOvQCgFL0AgHQ8AMDUvAAAEDwAQPc8AKBuvQDAID0AkIC9AEDdvABgCr0AoC69AKAovQAApjsAQB09AKA7PQBgoj0AgKI8ACBBPQAAeDwAAFC7AKA0PQAAKDsAQHE9AAAvPAAApjsAAAO9AMAnvQBwg70AgJe8AGB7vQDAyTwAwNQ9AACzPAAA+LsAIDQ9AABGOwDAQj0AAIQ6AABLvADAuLwAAKi8AABIugAA87sAsIW9AIBJvQDgwD0A0Io9AACMvAAAeDsAAE67AIAlPABgID0AACw8AAAOvQCA9jwAEJI9AAAAuAAAELwAAEI8AGCGPQBA8rwAQIy8ABCKPQCAbj0AQJA8AAD1uwDghT0AAMi6AAAmPQDQib0AAMM7AADKvADAXr0AwLU8AAAjPQCwgj0AcJA9ACBXPQAAsDsAAHg7APDHvQAAjDsAYGa9AABWuwAArzsAAOi6AMAAPQDQ2L0AgPU8APCvvQCAQbwAgKK8AAAFvQBAkLwAICc9AICIvAAAkbsAQJw8ACCPPQAAzD0AAMa8AKBevQDAFz0AgEO8AGBSPQCAX7wAoBM9AMDsPAAA2DsA4FG9AACAPAAgEL0AAEC5AED+vACAs7wAYKE9AADAvACAFzwAABg7AGAHPQAwqb0AoAm9AADTuwCADD0AQP68AIBBPAAAdLsAYBw9AADwuwAAbTwAwIC8AMByvQCApzwA4Aa9AICFvQAgVj0AIEo9AIBVvQAAuLsAAKi7AACFOwBgXD0AQBM9AAB6PADAnrwAYGU9AMCBPAAgFD0AYEe9AAAAPQCwh70AgBO9AMBFPQAAprsAUCg+AAANvAAA0DkAwAW9AACdPABgfb0AwME8AMASPQDAi7wAQPg8AADGPABA3jwA4Es9AMCOvAAgl70AoFQ9AEC1vAAAEDwAYDI9AKBhPQDAGL0AAJg9AIC0PAAALrwAgHA9AAA6vADgGD0=","chunkHash":"5fa48cff26d4d18815e128e05b62b3cc9f97c199bf5a05eb28a5887c40b2dc9e"},{"text":"File: `scripts/temp/test_high_res.py`\n```python\n#...\ndef batch_sample_to_gif(dataloader, \n                        sample_index=0, \n                        out_path=\"volume.gif\", \n                        duration=0.2):\n    \"\"\"\n    Take one sample (all its z_window_size images) from your high-res loader\n    and write them into an animated GIF.\n    \"\"\"\n    batch = next(iter(dataloader))\n    \n    imgs = batch['image'][sample_index]  \n    meta = batch['metadata']\n    sid = meta['sample_id'][sample_index]\n    \n    frames = []\n    \n    for z in range(imgs.shape[0]):  \n        img = imgs[z].cpu()  \n        img = denormalize(img)                   \n        img = img.clamp(0,1)                     \n        \n        npimg = (img.squeeze().numpy() * 255).astype(np.uint8)\n        pil = Image.fromarray(npimg)\n        frames.append(pil)\n    \n    imageio.mimsave(out_path, frames, format=\"GIF\", duration=duration)\n    print(f\"Saved GIF for sample {sid} with {len(frames)} frames to {out_path}\")\n#...\n```","range":{"startLineNumber":15,"startColumn":0,"endLineNumber":41,"endColumn":80},"embedding":"AGBwPQAA7TsA8IU9AEBrvQDgVb0A8M69AID7vAAAZzwAwMW8AGAavQBA9zwAQC89AMA7vQCAqr0AAOG8AIBxPQAAGb0AYME9AAAYvACAsjwAwBQ9ACASvQAAhLsAQI08AACquwBgKL0AAAi7AAA3PQDgdT0AwGq9ACBXvQBgWL0AYBK9AGCHvQCAtb0AAI88AADiOwCAZT0AQIm8AOBovQDAhD0AsLe9AAA1PQAAmbsAEOU9AGAAPQCAHz0AAEa8AMCqPAAAOjwAQJ+8AEAbPgAAyDsAAK28AIBXvADgVD0AYGa9AEAfvQDA3bwAwL+8ACAnPQBwib0A4Ho9AACXvACAobwAYAs9AEDFvACAJTwAAPU7ACAFvQAAwDgAwKK8AECLvABgnb0AAMW7AIDlvAAAQLsAAJg8ALClvQBA1LwAwPS8AIBlPACgKr0AwNU8AFCAvQAASrwAYI69AGAivQBgYT0AwMC8AMDNPAAQrD0AwHW9AAC/uwCAELwAgI68AKArPQCAk7wAwII8AACePADwkz0AwOU8AMBJvQBgAj0AAP87AEAvvQDABL0AMIQ9AED/PABABD0AAMA7AKDGvQBA9jwAALu8AECGPADger0AAPM7AACFvAAAiL0AAD28AMBrvQAAnjwAALi8AKA/vQAA3DoAgBu9AACjOwDgAb0AgKY8AICnPAAQuT0AgDW8AOAFPQAQ/70AAHo8AKBxvQAAUbwAADS9AIC1vACoED4AABu8AAC2PAAACD0AAMY7AADAOgCA2D0AQJi9AFCEPQDA9jwAAJc8AICLvACAqTwAADq8ANClvQDgAj0AQHe9AIAmvQAgOz0AAIy7AADQugDA6rwAQJA8AAAgOwDART0AwE69AGByPQCA27wAAMC6AMBnvQDAxbwAAKU8AAAoOwAAw7sAQA29AEBPPQAAADgAwES9AEBOPQDQhr0AADI8AMCVvAAAhTsAgEq8AMD0vAAQg70AoIq9AKATPQBAMz0AANC8AAA4PAAArLwAABI9AEClvABgMT0AgFq9AAAVvQBgmT0AAHo7AAAlPQAAZDsAAPy7AICNPQCAAT0AABm9AOAMvQAAtDoAgC48AADJuwCgVr0AYCy9AADguQBA2jwAQNg8AEB8vQAAvLwAIEu9AECZPAAgVj0AgHc8AAA3PQAAIL0AQJs8AGBsvQCQhD0AAAo7AIBdvABAZL0AQHK9AICavAAgZz0AABq8AECEvADAPr0AgDe8AABRPACA3rwAQOw8AGAlvQBAGD0AAHQ7AABwvABAVj0AQA89AGBevQAAzbsAALK8AEAdvQAANb0AIAg9AAAyvABAljwA8Ki9AACbvACA+L0AoCW9AKA/vQBAF70AQLI8AKDkvQBAhLwAICc9AAD1vAAAY7wAwC49ANCZPQAAj7sAgFg9AADEPACAcbwAIJ89AAB2uwAAEjwAAIo7AMCUPABgKr0AgJ09ANCSPQAAxbwAQFy9AADYOgDArLwAwNy8AAADvQAAkTwAACu8AGAjvQBAJb0AAJU8AACYPADwhL0AABa8AIApvQAgIr0AgE+9AIBhPADgCD0A8MW9APCvPQDAyLwAQG69AOBZvQAw4b0AgA08AABKPQAA2bwAQNg8ACBIvQDA3zwAQGU9AMBjPQCAGDwAAKi6ALCaPQAgMj0AQLk8ACAwPQAgJT0AAJE7AKBwPQCAEL0AAIe8AIBjvQAAcLoAIBw9AGCfvQBA7TwAwLS8AABkvAAARzwAoGK9AADNvAAAvDsAoCO9AAAHvQBAijwAAEi7AICGvAAgDr0AgAC8AAD8ugBwiL0AADk8AICPvQAAJLwAgJo9AKBtPQDwkz0A8Jg9AAD7PADQub0AAOA5AAA0uwAAaTwAIH89AIAMPQBAhTwAAAK7AEBtvQBAXr0AQOQ8ALCXvQAABzwA8N09AIBCPAAA4bwAIFw9AAAAAAAAtjsAIH49ACAJPQBgxz0AgEQ9AADMOwDARD0AYJy9AGAEvQDw9D0AwOw8AEDWPAAAAjwAgKe8AGAbPQCAIT0AgG+8AOAEvQDAvTwAgCY8AAB4PABgbb0AAKA8AOABPQDwx70AQPy8AKBPPQAALz0AQCw9AAAKOwBgAz0AACY7AMAgPQCwgL0AADI7AGAivQAAP70AAKG7AADBOwDA/TwAAHi6AECIPQCgYr0AACY7AED0vAAApLsA0KG9AABquwBAtbwAEKe9AACTOwDQnL0AgKE9AIB8vQAAT7wAAL+8AADBPACgeL0AQIU9AAAyPQCALLwAAJ08AAAZPAAAzTwAAJe7AOBevQBgfD0AAN07AACBPACAQ7wAgKS8AMB7PQDgD70AgJ48AAAzPACAAb0AAEY9AMBLvQAA9LoAoA69AAD+OwAASLwAwM28AMAjPQDAibwAgH+9AMCBvAAAybwAAEQ7AEBWvQCAFbwAALU7APDwvQAAK7wAoGg9AIAtvQCAVT0AAB88AMAKvQCABrwAgAC8AACFOwCAXrwAQMg8AOASvQAA8zwAsLE9AIA+vACATbwAAIo8AACKuwDAybwAgES9AIBnPACAUL0AcI69AACvPAAAwjwAELk9AIA4PQBAf70A0KM9ANDcvQBATr0AwCo9AGBUPQCAh7wAICi9AACkOgDAzrwAAP47AADgOwBggr0AADy8AACFvAAAejwAAPM7AIA+PACgzL0AAGc8AMCHPAAAd7wAwAQ9AIBRvQAA4zw=","chunkHash":"3c36363581bf7d0de402b2d6d364c1ae84d340b12535c680defbffaa5040a770"},{"text":"File: `scripts/temp/test_high_res.py`\n```python\nimport os\nimport numpy as np\nfrom PIL import Image\nimport imageio\nimport torch\n\nfrom torchvision import transforms\nimport sys\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))\nfrom dataloader.highres_image_dataloader import get_highres_image_dataloader\n\n\ndef denormalize(tensor):\n    #...\ndef batch_sample_to_gif(dataloader, \n                        sample_index=0, \n                        out_path=\"volume.gif\", \n                        duration=0.2):\n    #...\nif __name__ == \"__main__\":\n    \n    loader = get_highres_image_dataloader(\n        root_dir=\"data/nuclei_sample_1a_v1\",\n        batch_size=4,\n        class_csv_path=\"chromatin_classes_and_samples.csv\",\n        target_size=(224,224),  \n        sample_percent=20,\n        z_window_size=224,  \n        debug=False,\n        num_workers=0,\n        shuffle=False  \n    )\n\n    \n    batch = next(iter(loader))\n    print(f\"Batch image shape: {batch['image'].shape}\")  \n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":61,"endColumn":0},"embedding":"AABgugBA7bwAAE49AOAXvQAAwzsA8Jq9AEBHvQDAkDwAAGK9AICOvACAPrwAAIA9AECxvADAbb0AwNy8AACOPQAA2bwAgJY9AOBvvQAA2TwA4Fo9AECJvAAAgjsA4G69ACAqPQBA6LwAgBQ8AEAhPQAwuz0AAKS6AMB0vQBA2LwAYGu9AOBQvQCQ0b0AYDC9AICUvAAgfT0AgMM8AMC4vADgjj0AUJe9AAATPAAAXLsAwFA9AICvvADART0A4Gi9AACiPAAAhjwAAH08AIC5PQCAWTwAAAE9AEBovQAQgj0AgD+8AAB5vAAAmjsAANW7AIByPQDgbr0A4IA9AEDlvACgGb0AoAI9AID+vAAgaL0AwB49AIBWPACA1jwAgA08AIAKvABgur0AoIA9AIDuvACAh7wAwP48AMDIvADAZb0AQNC8AACYOgAAETwAMJc9AIB+PAAAWbwAgM+9AOBwvQAAmDsAQE+9AACxuwDQoD0AAHY7AAAGPQAAGL0AADc8AABOPADAXb0AQHo9AAC1PACA8zwAIHE9AAATvADQhT0AACM8AAD7uwCA1rwAwIA8AECcPADw4T0AAMg7ABCnvQAAizwAgIi8AAA/PQBQjr0AYCs9AADwOgBgC70AgEu8ACBwvQCATrwAAKE7APCEvQDAqrwAAJA5AMCrPADAm7wAACi6AAAovQCQhj0AwIS8AOA6PQAg+70AgGi8AKBGvQAAszwAgAu9AIBGPACg6T0AgEk8AECZPAAAiDsAoB89AADAvADANj0AAKS9ADDvPQBgJz0AQKo9AAD1uwAAuLoAQK68AICnvAAAwzsAwH29AAAAPADwpT0AAFa7AMDQvACAAjwAQLw8AAD8vABAgT0AYGu9AOB5PQDA2bwAgPO8AGBxvQBAdr0AQEa9AABwOwAAy7wAwOe8ACCUPQBAmzwAwG+9AAB2PADgo70AAHy8ADCOvQDAp7wAAKC7AAB1vACw0r0A4Ga9AIAfvABAjz0AgIe8AJCNPQCARrwAIF49AAAaOwAA0jwAAJm7AOASvQAgnz0AAF08AIDkvABgVz0AAO48AHC2PQBgPj0AIBa9AADDuwBAxL0AAIm8AICKvAAAwLwAQC+9AICiPADA3jwAgL08AABgPAAAfDsAsJS9AICqvAAwuz0AAPo7AAArPABA+TwAAEq7AMDoPACAhT0AACS8AADBvADA3LwAUJK9AECTvAAA9DsAALm8AACSOwAAADoAQIo8AAAAAACASLwAAAc8AEDmvAAAMrwAANK7AKB7vQBALj0AAJg8AMDxvAAAoLoAgLy8AIB8vAAgQr0AgBY9AEDbPACA3rwA4Bq9AMARvQAAx70AgHy9AOAuvQBAjb0A4Fy9AIAvvQAA3TsAAHM8AAAIOgAgOb0AQMu8AGAqPQAAN7wAABm8AMAhPQAA0rsAQJQ8AMDkPAAAtDoAQJQ8AABauwAAf70AYFs9AADuOwAAMjsAgMw8AECovABAjrwAgEc8AKATvQDA6DwAIDK9AACkOgDgPL0AgAu8AED/vACQuL0A4Aw9AECPvQAA3rwAAMi7AMDlvAAAYrsAQIC8AIB3PQBAFT0AsMO9AGBkvQDwyb0AAOk7AGAgPQCgPL0AgDU8AACpPAAASTwAAII8AIDJPACABDwAgFG8AKDYPQAAQDkAANY8AMClPACAGDwAgCi8ALCMPQAAljwAQNW8APCgvQBAobwAQPI8AICgvQBgWz0AoAq9AMDBvACA1TwAgG69AEAPvQCgMr0AgMQ8AACLvADAxDwAQPE8AICSvQDAjjwAQD29AIBxvADgfL0AIEG9AIBkvAAAujwAYHU9ADCBPQCQuD0AIBY9AEBJPQDAF70AAPS6AHCAPQBAjbwAQPY9AMDLvACAWTwAgDW8AOBrvQBALr0AAIC4AACuvQAA/DwACAE+AAA0PACAcbwAwDs9AEDdvABAlT0AAFE8AMD8PADAXT0AAGg6AIALvACAvjwA4P69AADrvACQxj0AgB09AABAuQDAujwAwLI8AAA9vACATT0AwJc8AOAivQAACjsA0Ig9ACAyvQBArLwAAAQ9AACePQDA/LwAwN68AAB2PQAALjsAICs9AOAEvQAAJz0AACC5AKB3PQAAnbwAgFW8AADbvADAbb0AQOs8AABiPABAXD0AwNE8AOBHPQDAEb0AAO+8AACKvQCAGbwAoM69AABhPACAyrwAAB+9AACSPACg070AQKA9AIDAvQAAvTwAQGW9AADougBwlL0AIF89AAD6PABgH70AAKw7AAB6OwDAbz0AAFe9AIBnvQDAZz0AAMA7AMDiPADAAr0AwN48AOBMPQCAALwAwMe8AACPOwBAT70AAAc8AAB1vQAAw7sAgIc8AABlvACA9rwAYAa9ALCBPQBAQr0AAG67AABRvADgEz0AgFK9AMDLvAAA67sAgCU9AEBDvQAAZjwAAMi7AADzOwCgdD0A4AM9AABWuwAAp7wAwLS8AAAGvADgS70AIDk9AIBYPACgAj0AYF09AACZPAAAkrwAgOw8AABAvABAHr0A4C29AIDSPAAAKb0AwKK9AADdPAAgJz0AoBI+AAAgOwAAebwAgLs8AEAVvQBglb0AoEM9AIBzPQCAhLwAQMS8AABRvACAA70AwLo8AMBPvQDgdb0AQC89AIDFvADAkTwAANg7AMAwPQBAv70AAJw7AADJPAAAZLwAwEU9AAAQuwAQnD0=","chunkHash":"39a5a6773d28d2c82289a894871bd630110189b3ff0589e430fbe1b6a526a50f"},{"text":"File: `scripts/temp/test_high_res.py`\n```python\n#...\n    batch_sample_to_gif(loader, sample_index=0, out_path=\"sample_highres.gif\", duration=0.15)\n\n```","range":{"startLineNumber":62,"startColumn":0,"endLineNumber":63,"endColumn":0},"embedding":"AMCzvABAg7wA4G09AFCFvQAAIb0AgHq9AEClvAAAqzsAAC+8AGAKvQAAfzwAAF48AGAtvQAwmL0AoB+9ABCPPQBARb0AUKk9AMDpvAAAeDoAANQ6AEBgvQCAzLwAAFY8AEAvPQAgY70AAH28AECbPABghz0AgKq8AABwvQAAgr0AAAa9AMDOvADQ870AgC28AIBGPACAWj0AABo7ALChvQDwnD0A0M+9AMC1PAAAKDsAAJU9AABAOgDgET0AgO28AGAdPQAANj0AgJy8AGDIPQAAnTsAAF08AMCivABgRD0A4Ei9AAAEuwBAw7wAQLW8AIA4PQCAgL0AwBY9AMAFvQBAEb0AANI8AIAPvQCAQTwAAEs8AMDmvAAAFTwAAGE8AABEvACgtL0AQDG9AMCdPACADLwA4C49AIB2vADAKb0AICy9AADJPACAr7wAwFY9AOAHvQCAZ7wAING9AOBovQCAizwAQEi9AIAiPACgbT0AANe7AIBePAAAMjsAAJu7AACwOwAgNL0AYD09AKAoPQBgnj0AIAE9ANCyvQDgSD0AAIw8AAD9vACAUDwAUJo9AKAoPQCwjT0AANI8AMCpvQDAhDwAAL+8AADKPADAfb0AwB09AICcPACAhb0AAIy7AECkvQAAxzwAAG68AEA+vQAAPjwAANC7AEAHPQAgWL0AgIM8AAAAPADAFD0AAM87AKCQPQCAsr0AAHc8AGCPvQCAHjwAAGO8ACABvQAwxj0AAJw8AEDaPAAACLwAACE8AACQuQCQ/T0AoNW9AFCaPQAgFj0AoG09AAAdvADA+zwAABy8ACBAvQAAwbsAwDq9AOAlvQCAuzwA4CG9AADhuwCAobwAgMA8AACnPACATz0AwPa8AAA6PQAADbwAQAm9AIAVvQAAAAAAgH08ACAMPQAAADoAICy9ADCQPQBAtTwAABS8AGAsPQAghL0AgBc9AMCcvACAnTwAABc9AABSOwCgL70AgLG9AADjPADAHz0AABq8AABWuwCACTwAYHs9AACXOwBAKD0AAKO7ACABvQAguj0AgDa8ACA8vQAgMj0AgI28ANCOPQAA0zsAgBa8AMCRvADAX70AgIQ8AACevAAABr0AgEG8AAAEPAAA2jwAgAU9AAD4vADAtbwAID69AAByuwCwpD0AgI08AID2PACAL70AAC08AMDdvAAQgT0AgGg8AAASuwAAFb0AACy9AAAfPABgBz0AALE7AADkuwAAlLwAAIy8AID+PAAAprsAAN87AGAlvQAAjzwA4Ay9AGAsvQBAQD0AAOA6AECGvAAArrwA4FO9AMARvQAgKL0AgC49AGAoPQDA6bwA4Bq9AIACvAAAAL4AgDC8AIBvvQDAML0AoAE9ALC1vQAAWrwAAFk9AKCBvQDA2rwAAK07AACFPQAAILoAQNg8ACA3PQAAh7sAwAA9AADEOwCANTwAoDM9AADsOgAAAAAAIGM9AOCmPQAAeLoAwIG8AABDPACAB7wAAGy7AAAEvQAAlLoAQM68ACCUvQAAJLsAQKS8AMCdPABgWr0AgGy8AAD4OgAANrwAkL29AIAQvACAgzwAwCu9AGCEPQAAODoAcLq9ACA3vQBgNr0AAHm8ALCEPQBA1rwAoDc9ACCOvQCAVD0AYBk9AEBQPQCAYDwAwPS8AFDDPQAATzwAwOE8AADGOwBAEz0AQMc8AGAZPQAA4bwAABC8AAC7vQDAnTwAAAI8AAB4vQAABzwAAOS8AEDqvACAgT0AgIy8AMDbvABgAb0AgIu9AADNOwAgYT0A4Ko9AED4vAAAljwAAFq8AADEOwCAtb0AgDi8AICGvQCAdTwAsNE9AKBFPQDQsz0AAGQ9APCvPQCgxr0AgAq8AOAIPQAAgDgAUIo9AACwuwBA4rwAAJU7ABCgvQDgfb0AQKk8AMBpvQDAzDwAsNE9AACLvAAAt7sAoBs9AIABvQCgF70AAGE9ADCNPQBATT0AsJM9AAAiuwCA1TwAYLm9ACCNvQCAmz0A4Cg9AAC/uwBgET0AwEm9AEDvPAAgCT0AQJ68AEDfvACADbwAwIU8AMD9PABQhL0AoCs9AEBwPQCgWb0AgJW8AEBUPQBgLj0AYF49AIAUPACA2T0AAKA7AAA4PQAQm70AgHI8AAAwvQAA8LkAAA47AAAAOwCAwDwAAGm8AHCWPQBAWr0AgLU8AIAxvQDAorwAQKK9AIBgvQDALL0AYF69AIA/vAAAiL0AABI9AGCEvQDAr7wAgA+9AKBNPQCgLr0AYIA9AGCkPQDAx7wAgAA9ACBRPQCAAD0AgJ28AAASvQCQpj0AwE89AMA9PQAABLwAAPy6AOAFPQAAqLsAgGo8AABeuwDAp7wAANY8AADVvQCAFr0AAJA5AECevAAAbTwAALe8AIBvPQAwhL0A4NK9AMBHvQCAqDwAgBY8AACcugAAADkAgPs8APCGvQCA3bwAwJw8AMAJvQCwkz0AgCc8AIDOvAAA+DsAgLo8AEAWvQAgAr0AgEI9AMCNvAAgiT0A4C89AABRvAAAA7wAAJU7AACQvACAbb0AgDa8AACQOQDAzrwA4Ae9AKCXPQAAyLsAwPA9AGCEPQCgN70AQMA8ACDMvQDAh70AwP08AMCBPQDAjbwAgF+9AADEOwCA+TwA4CU9AIB1vABgSb0AAJA6AIDPPABApzwAABU9AAAmPQCA3L0AgMA8AABVPQAAEDoAgAA9AIBOvQBANT0=","chunkHash":"bff8d03b9851f505e5c63ca6bd1623961aa59c1d41ee56643e9246c4fa34c073"}]},"file:///teamspace/studios/this_studio/scripts/temp/test_low_res.py":{"hash":"b612bbff1ed94b74a7c7dd34c23d62c00aba6a240e69f9d3c925fda874943544","entries":[{"text":"File: `scripts/temp/test_low_res.py`\n```python\n#...\ndef denormalize(tensor):\n    return tensor * 0.229 + 0.485\n#...\n```","range":{"startLineNumber":12,"startColumn":0,"endLineNumber":13,"endColumn":33},"embedding":"AEDavACAY7wAIBO9AMD7vABgHT0AQMC8AID8vABgID0AANC8AOB/PQBAAL0AYBM9AEChvACAT7wAQIi8ACAIPQBAlD0AwBM9ALDlvQBA9TwAAO07AACrvAAAEDwAgMy9AMCsPQCARb0AgIk8AIAxvACwzD0AwCA9AAA2PADAm7wA0My9AEBXvQAAFr0AgAi8AICvvADQvD0AANk8AMCRvACAIz0AQL+8ABCXvQBgLL0AgLQ9AAB2uwAAVj0AABe9AECEPADAEb0AAG+8AAAHvADAh7wA8IA9AAA4vQAwnD0AYBe9AIBqPACAALwAgBy8AKAQPQDgQb0AQIA8AADZuwAAr7wAUJs9AABOvQCAXrwAQJw8AIANPQDApbwAAPC6ANCBPQAAYLwAgHM9AKBcPQBAnrwAQEg9AGAJvQAgTb0AQO28AIAtvAAA3DoAELo9AGBwPQAAVL0A4Gu9ABCZvQCAU7wAgG29AIAAPABAvjwAAFw7AKBKPQAAj7wAgF68AAApPQAAwLkAQJM9AIDNPACAAT0AoHo9AMDbvADghT0AgKa8AGA2PQAAUrwAgKS9AAD2PAAA8T0AgA89AOCbvQAAnrsAwIq8ACBkPQAglL0AIDi9AECyPABgEr0A4ES9AIDYvAAQgr0AAPQ8AAByuwBgMb0AgH28AECMPQDwqr0AANC7ACBZvQDgbT0AwLG8AOAOPQBAMr0AAC28AOCAvQAAmrsAAJI7AICoPQAgzT0AwBY9AOAwPQAAuDsAYBE9AOCIvQCwgj0AIF+9AHDfPQAAEz0AENw9AADIvABAhj0AgAS9AAAoPAAAhDsAgEy9AOACPQBAZD0AABO8AECfvQAAlzsAAMY8AIA5PACAazwAgC29AMAPPQCAYrwA4HG9ADCOvQAAib0AAEi8AAAGPAAgUr0AgLW9AKA0PQAArDsAoBW9AEDkvAAQgb0AgJs8AADgvQBAH70AgIO8AMADPQBQlL0AQAO9ACBOvQBgbz0AwIM8AIBIPAAAzLoA4BY9AEAqPQBgBz0AQNs8AADGvADAQz0AQIY8AACoOwBAwj0AAB+9AGAePQCgKj0AALQ7AIDVvAAgXr0AQKW9AAD1uwDA+7wAAP47AABcuwBgCz0AgDE8AEAMPQAgJD0AgAe9AMCZvABAED0A8Je9AMAuPQAAyrsAAKY8ABCMPQBwnD0AQPC8AIBFvABAs7wAYJ69AED4PABAtDwAAHE8AICNPACA6TwAoCk9AMCVPAAA5TwAACC5AABdvACgAr0AQEe9AIDXvQCAgTwAAEO8AACCuwAAPLsAAAQ7AACSOwDAQr0AUIU9AACBPAAAP70AAFA6AMC9vACwyL0AQGK9AMDTvAAAa70AwAq9AKBdvQAgET0AALE7AGBZvQBAkrwAkKa9AMCGPAAAN70AgHE8AEDAPABAiLwAgCi9AKBUPQAAtrwAABI8AAA4vAAQqr0A4DE9AOADPQBgMj0AAAg6AMCJvADA8LwAQBK9AABZvAAAwbwAAHI8ACAcvQBAhLwAAHi7AACOPABwkL0AwCc9AICOvACAjTwAAEg6AHCzvQCgBr0AgN+8AIB+vABAwLwAWAG+AAA4uwDAUb0AABe9AAC6uwBgVr0AIBg9AIB2PACAZLwAMJU9AECZPAAAF7wAQL88AHDlPQCgAj0AwKQ8AABQOwCA/zwAgEA8AMCWPQCAHzwAANy8AHAnvgDAwTwAAN28AIA9PACASzwAwFa9AADyvADABb0AwJa9AGCKvQAA0rwAAPs8AABguQCAL7wAQI08AMD8vAAgWz0AQE69AACwOgAAEb0AQJ68AEA7vQCAATwAwPM8AED4PADAlD0AgHM8AOCaPQBAAT0AAMs8AKATPQAA5LsAgAg8AMCxPAAAMDwAgN68AMA4vQAAQ70AgC+8AOBBvQAAoDsAYNM9AAAoPQCAKrwAIC09AAB+PACA0DwAALK7AAAxvACAVrwAgAm8AACMvABAkbwAYGC9AKAVvQAQgT0AcMQ9AEDPvAAA7jwAgAm8AAACPABgFD0AgNU8AACivAAgVT0AUI09AABMPAAAPbwAAHY7AIBIPQCgH70AAJG8AOBCPQBgkD0AQOk8AIBPvABwmz0AAAS8AMDhPACANb0AALS6AOAWvQCAOb0AgAE8AIDrPAAQhz0AkKA9AAA/PQCALDwAAOc7AECwvQAAIjsAgCm9AADJuwAAWLsAAHo7AIAUPQBwvr0AAMg8ALC2vQAAWrwAACO8AGADvQAA6LsA4IU9AIC4vAAAwjsAAE48AABzPQCQxz0AoCK9AICXvQAA9DwAABC6AOAuPQCAlbwA4EI9AIDEPACATrwAAEm9AIAVPQBgAr0AACS7AACivACAm7wAQGI9AACxuwAAijwAADi6AAAjPQDAor0AgLK8AABgOQBAsjwA4Ha9AADKPAAAvLwAICY9AAAAOwAAijwAwLq8AIB6vQCAmTwAwOS8AGBUvQAAYT0AIEo9AABavQCAgTwAAHa7AECVPACA+jwA4FY9AABAPAAAoDoAsIM9AACguQAgWD0AoG69AAAFPQAgYb0AAH68AMCDPAAAXrwA8B4+AADAOQCgFj0A4GG9AECpPAAAX70AgD88AOAmPQCAjLwAwNc8AADAPABgGT0AEJE9AACTuwCwh70AoA09AAA3vACAHjwAIF49AMAkPQBAGb0AsLE9AAAePAAAVbwAgC49AAAEuwAgVT0=","chunkHash":"bd5606e299a380054eb2ba0c5be26dd0ba56537ea1987975bb6b8b2e6611e4b2"},{"text":"File: `scripts/temp/test_low_res.py`\n```python\n#...\ndef batch_sample_to_gif(dataloader, \n                        sample_index=0, \n                        out_path=\"volume.gif\", \n                        duration=0.2):\n    \"\"\"\n    Take one sample (all its z_window_size images) from your low-res loader\n    and write them into an animated GIF.\n    \"\"\"\n    batch = next(iter(dataloader))\n    \n    imgs = batch['image'][sample_index]  \n    meta = batch['metadata']\n    sid = meta['sample_id'][sample_index]\n    \n    frames = []\n    \n    for z in range(imgs.shape[0]):  \n        img = imgs[z].cpu()  \n        img = denormalize(img)                   \n        img = img.clamp(0,1)                     \n        \n        npimg = (img.squeeze().numpy() * 255).astype(np.uint8)\n        pil = Image.fromarray(npimg)\n        frames.append(pil)\n    \n    imageio.mimsave(out_path, frames, format=\"GIF\", duration=duration)\n    print(f\"Saved GIF for sample {sid} with {len(frames)} frames to {out_path}\")\n#...\n```","range":{"startLineNumber":15,"startColumn":0,"endLineNumber":41,"endColumn":80},"embedding":"AOByPQCAUzwAoHI9AFCMvQAgSr0A8LG9AICHvAAAIrsAQOa8AIBLvADAmTwAgOw8ALCFvQCwgr0AADC8AKAZPQAA/rsAgJo9AEDHvADgJD0AQEU9ACBavQAAIDoAAAg8AIBnPABgNb0AAAs8AKADPQCASD0AoFW9AGA9vQCAO70AsIK9ANCuvQAAkL0AwBw9AEDYPAAgMD0AQLm8AMCDvQDgED0AsNS9ACB8PQCAZrwACA4+AKA3PQAgdT0AALm7AIDIPAAAl7wAgD29AGgRPgCAAz0AgH68AIALvABAaT0AwCi9AOAQvQDAlrwAAM68AOBbPQCAab0AEIs9AADNOwCAb7wAAEo9AOAbvQDAgDwAgBI8AMCnvAAA8LoAQJm8AAAevACAmr0AgBE8AACEuwAAALoAALA7AJDBvQCAgrwAgGK8AMDDPABA1LwAQBk9AKBYvQDA2bwA8JO9AAAwvQCAmT0AQJq8AMCDPABAZT0AgKK9AIBmPADAqTwAAEQ7APCUPQDAx7wAgN48AIC+PADwrz0AQBA9AAD/vAAA6zwAgA68AIDJvAAAfbwAQNc8AID3PADgUz0AgCw8AICrvQBAAz0AAKu8AID2PABQgr0AABi8AIBzvACger0AAPO8ANCIvQAA0jsAQK28AAB3vAAAKDsAQPS8AIALPQBARb0AwLs8AADvOwDwuT0AAGG8AMDmPABw3r0AAOo7AEBqvQAA0LkA4Ea9AEChvACICT4AAFU8AMAZPQBAmTwAAPQ6AADWuwCw1T0AoJ69AIBmPQAA9DwAwJ08AADgOwDA4TwAAN67ADCnvQCAQDwAYFe9ACAovQBgIj0AAG67AABsOwAA3rwAALw6AIDoPACgAD0AoH69AICBPQAASrwAAAq8ADCBvQAAkLwAYCk9AABKOwCAf7wAoHS9AMDWPAAA2bsAgIG9AMAdPQCgMr0AgHs8AMDcvAAASjsAAIy8AMAqvQBQl70AILi9AAA0PQDAEz0AQA69AIAgvAAAML0AAMg8AGALvQAgBj0AwMC8AIDEvAAQlD0AAB28AOB7PQCA4DwAAAq8AMB4PQDAKj0AsIK9AMDYvAAAUzwAgDm8AECavABAUb0A4A69AADQOgCA0TwAwK88AABVvQAA87wAYBy9AIDSPACgOj0AAIQ6AMAzPQCgA70AADa7AKAPvQAQjT0AgFi8AADHvAAwir0AwJy9AABFvAAARj0AgEc8AAA+vABgd70AAMC4AOADPQBArrwAQNM8AEDsvACAcjwAwLY8AMCzvABgYT0AgPQ8AMAsvQAA9rsAAOO8AEAwvQDgfr0AoB89AMDZvABAIz0A8LS9AAAMvABw2r0AoB+9ACANvQBgAb0AgLw8AADhvQCAFrwAQB89AMDWvAAAULsAgB09AFCYPQCAn7wA0IY9AIB3PAAAcrwA4JI9AADhuwAAvjsAAGC5AAAcPQBgNr0AEIs9AKCBPQCAbLwAYIe9AMDaPABAHL0AQNO8AGARvQAAwTsAAJQ7AOBDvQCgGL0AAJQ7AIDSPACgdL0AAHq7AMAHvQAASb0A4Dm9AABgOQCAkjwA0MS9ABCQPQDgG70AAGG9ACAzvQBwzb0AABs8AEAePQCA37wAgF88ACAPvQDAzjwAQGY9ACCBPQCAWrwAwKU8AGCEPQDgIT0AwJw8AMCKPQDAKD0AALI7ADCYPQCgKb0AgBy9ANC3vQAAJzwA4BE9AACNvQDgCz0AgNu8AIDdvADAorwAMIC9AADcuwAARjsAgOm8AIA9vAAAlTsAACy7AAAXPABAlLwAAKg7AIAzPACQj70AwMk8AMCZvQAALLwAoHo9AKAMPQAghD0AEJg9AOBePQAgdb0AgOQ8AAAouwAAejwAQKY8ACAlPQAgOD0AAPC5AFCHvQBASL0AQCs9AOBnvQAAMrwA4NM9AKAfPQCAzbwAQFk9AICAPACAZbwAQIk9AKBbPQCQ4j0AQIQ9AIBxvACgJj0AIIe9AIDSvADwsT0AIE89AACHPABA6zwA4Ay9AKAkPQDgAT0AAJY7AECFvAAAEz0AgEA8AIAHPQAghr0AQKg8AACzPACw1L0A4AW9AGAIPQAgRD0AgE49AACAugDgJz0AAIS7AICRPAAA/LwAAOc7AIA7vQCAPb0AoAu9AADhuwBACD0AwLU8APCFPQBgRr0AgAi8AIDHvABAhLwAUI+9AAByvAAAurwAEKu9AADQuQBwgb0AMKY9AIB4vQBAxrwAABe8AIDDPAAAMb0AkMk9AOAbPQAA3DoAAH88AACiOwBA/TwAQOu8ACB1vQDAbD0AgG48AAAUOwAAeLwAAOe8AOBEPQBgXr0AgAk8AID9PADA97wA4EE9AMDpvAAA8jsAIGe9AKABPQCAErwAgD29AIA8PQAAI7wAYDm9AICcvADA2rwAwLS8AEAbvQDAR70AAGU8AODzvQAAwLkAID49AAAxvQCgVj0AgE08AECMvAAAD7wAgE+8AACsvAAAZDsAgNc8AAC/uwCApTwAcNY9AIC6vAAA8jsAoAk9AMC4vADAmLwAAIW9AIAdPACAQ70AwDS9AECLvACAsTwAwJw9AJCHPQDAKb0AEIc9AADhvQCATr0AIA49AIBNPQCAhrwAQDe9AADwuwCAE70AwDQ9AAAHPAAgRb0AAAO9AABeOwDAkDwAAEQ8AAC1uwDQub0AAJo8AADhOwCAm7wAQLA8AOADvQDgZj0=","chunkHash":"d407788b2a3ec48af4402c2942eb56c156b144caa42d59ec5fc9601151642091"},{"text":"File: `scripts/temp/test_low_res.py`\n```python\n#...\ndef default_transform(volume, target_size=(64, 64)):\n    \"\"\"\n    Default transform for 3D volume processing.\n    \n    Args:\n        volume (numpy.ndarray): Input volume of shape [Z, H, W]\n        target_size (tuple): Target size (height, width)\n        \n    Returns:\n        torch.Tensor: Processed volume tensor of shape [Z, H, W]\n    \"\"\"\n    transformed_slices = []\n    for z in range(volume.shape[0]):\n        slice_img = Image.fromarray(volume[z].astype(np.uint8))\n        transform = transforms.Compose([\n            transforms.Resize(target_size),\n            transforms.ToTensor(),\n            transforms.Normalize(mean=[0.485], std=[0.229])\n        ])\n        transformed_slices.append(transform(slice_img))\n    \n    return torch.stack(transformed_slices, dim=0)  \n#...\n```","range":{"startLineNumber":44,"startColumn":0,"endLineNumber":65,"endColumn":49},"embedding":"AEDDvAAA1LsAgJk9AICAvQDAFL0AQJS9AAAkOwCgCD0AwK29AEDEvACQir0AwKk9AACWvADAlDwAgPO8AIC8PABgID0AAI08AADwvADAKb0AgFK8ACAgvQCALT0AAIy7AIDcvAAAjLwAgMQ8AMDcPABgQj0AAHY7ACA2PQCA77wAILy9AOCsvQAAKb0AgC29ACB8vQDwsz0AABA6AIBaPAAASz0AoBC9AACgOwAAAAAAYKo9AIAdPQBgJT0AAHS7AEANPQAAYjsA4Bm9AMA6PQBgNT0AwCy9AIBXPABAVz0AwLq8AMB8vQCAmTwAAOw6AAALPACASr0AACA6AIBZPAAAVDwA4Bs9AKBdvQBAeL0AAKy7AMAXPQAAF70AAIw6AIALvAAApbsAgGM8AABiOwAgBr0AAMQ8AADSuwCA0LwAgJ28AIDKvAAAGz0A0J49AABavQAABDsAgB08AFC0vQAAuTsAsI69AAA+vQAANjsAAGC6AAA/PQCgXb0AQKs8AECXPQAA7bsAoKk9AKANPQAAibsA8LE9AAB1vACgJz0AoGo9AAAkvQDwpT0AQBq9ACCqPQCgrD0AwLw8AKBjvQBA5zwAwCa9AJChvQDAcr0AACK8AIBbvABAhb0AgH28AIDAvQDA87wAAIg7AEAYPQCA2TwAgNS8ACDXPQBgvb0AQCS9AMCMPABAmz0AAG88AMBoPQBQur0AQPE8AGCvvQCAG7wAIDg9AIDXPAAgwD0AoCm9AIAWPACAZD0AAME7ACAJvQBgfj0A4Fq9AGCoPQBA1rwAQHI9AIBLvACgCT0AAOK8AEDUvAAgar0AAGu9ABCePQBQtT0AkIc9AEA0vQAA0LsAAEu8AABTvACAzjwAIGS9AKAiPQBAmDwAAHc8AJCyvQAAhL0AwCg9AIDCvACAEbwAQK69ADC6PQAA4rsAIIC9ACBPvQAAILwAQJM8AABovAAAAzwAwDW9AMB2vQAAR70AwEk9AOBCvQDA4DwAgK+8AKAFPQCAAL0A4Cg9AMCfvAAAszsAgCi8AACLPADQnz0AoCY9AEAkPQAAlzwAgAo8AABgOwBgEj0A4EK9AAA2vAAAB70AAJi7AIABvAAgMr0AANY7AIAWvAAAGzwAELo9AIAWPACgRL0AICe9AOAjvQAgeT0AYCe9AACvPAAAyLsAEIk9AAA1PQAARLwAgIC9ACAFvQBAL70A4MC9AMDiPAAAzLwAAAi8AADwOwAAt7sAAJU8AAC4vAAAr70AAOS7AAC5OwBAAz0AQNu8AIDhvAAApDoAIAs9AABNvQAAJrsAIBu9AIA7vAAA+bwAgH49AAAaPAAAGD0AQLy9AMDtvAAgLr0AgGa8AGAvvQAAtbwAAEe8ACCUvQDAVD0AwNM8AEA8vQAA9rwAALY7AIAKPAAAUjwAoCw9AABJPADAtzwAIJg9ACDFPQAAHj0AQCs9AAAMuwDAgL0A4Bm9AJCGPQDAsDwAAF48AMCrPAAA2rsAAG48ACBTvQAAbDwAgEA9AKBLPQCA1rwAANE8AICRvAD4BL4AQEE9AGAivQDARb0AACi9AAAUPACAxD0AADe8AKAovQDABr0AgK+9AIApvABA+zwAgMA8AIAaPQCgJL0AAD48AIASPACAXbwAgHk8AMBNPQAApLoA4Fw9AHC4PQAAsjsAoF49AGAfvQCgVz0AADi7AICSPAAACDwA4Fu9AODsvQAAUT0AgC28AECBPQAAPLwAQKG8AADfuwBAybwAgHy9AGCFvQAAlLwAAD68ABCevQAA8DsAAPg6AAA4uwBgHD0AAFa8AAA4PQCgV70AADi6AKCBvQDgL70A4Fw9AEBEPQDAWj0AAM28AEC9PQAgAb0AwLG8AMDcvADwsr0AQFS9AIAEvAAAEjwAgC48AIBYvQDgVr0AwKG8AIBSvQAA7LsAAMQ9AICOPABAUb0AIHc9AKAJPQDA3LwAACK7AACNOwAAVj0AwO28AAAOuwAAArsAwMC9AGCYvQBglD0AoIM9AEANvQCAAj0AoAM9AIA6PAAAW7wA8MY9AIAJvQBgQD0AAGA8AIA0PQAAmrwAgBW8AECkPACgNr0AoEy9APCePQAwoT0AwAM9AEC6PAAAqz0AQIM8AEDBPAAAbrsAQNw8ADCIvQCgMb0AALA7AACgPACAJD0AALE8AMD2vADAobwA4CE9AOB8vQCAKTwAAPi6AAABvADAq7wAgFi8AMA+PQAAJr0AAMs7AEADvgAgJT0AAKm7AACbvACAFr0AsIs9AMBnPQAAwLkAwAk9AICsvAAApTsA4Cy9AACrOwAA+zsAALy8AACDOwBAt7wAwPM8AOCVPQBAkTwAAJW8AABAuQBAl70AQIq8AICsPAAAgbwAAOG7AKBKPQBA+rwA4CW9AEARPQBAqbwAQD+9AAA2vACA2jwAoKi9AAAfPAAAsLkAAJA6AAAWPACAxjwAoIK9AOAsvQAAKLoAwMK8AEDfvAAgkj0AACE8AGC8vQAATL0A4Cc9AAC3PAAQtD0AQEU9AACMPADAKL0AACS9AACbuwBAKb0AABe9AFDOPQAAJL0AgNC8AIBTPACgDz0A8KI9AACFOwBA2bwAgFI8AABYPACAmrwAALC7AIDmPAAAILwAQPo8AACAOQAARL0AQJg9AMDLvAAAOjsA0IY9AIC1vACA1z0AAGo7AIDbPABge70AAAg9AADguQAAIrsA4C89AIBvPACAYLw=","chunkHash":"d00abe2f90996e82ae441eaa7e5b37cdea6746fcb0cc2f8654aaf2fe67003b9a"},{"text":"File: `scripts/temp/test_low_res.py`\n```python\nimport os\nimport numpy as np\nfrom PIL import Image\nimport imageio\nimport torch\n\nfrom torchvision import transforms\nimport sys\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))\nfrom dataloader.lowres_image_dataloader import get_lowres_image_dataloader\n\n\ndef denormalize(tensor):\n    #...\ndef batch_sample_to_gif(dataloader, \n                        sample_index=0, \n                        out_path=\"volume.gif\", \n                        duration=0.2):\n    #...\ndef default_transform(volume, target_size=(64, 64)):\n    #...\nif __name__ == \"__main__\":\n    \n    loader = get_lowres_image_dataloader(\n        root_dir=\"data/nuclei_sample_1a_v1\",\n        batch_size=4,\n        class_csv_path=\"chromatin_classes_and_samples.csv\",\n        target_size=(80,80),\n        sample_percent=20,\n        z_window_size=80,  \n        \n        debug=False,\n        num_workers=0,\n        shuffle=False  \n    )\n\n    \n    batch = next(iter(loader))\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":85,"endColumn":0},"embedding":"AADAOACAE7wAYCk9AAB7vQAAnjsAoIW9AOAGvQAAHzwAwFq9AACPPADAybwAYD49AAAdvQCAfbwAgEC8ACA6PQCAfjwAwF89AHCyvQAADT0AAGo9AMAQvQAAELsAYG29ACB2PQCgB70AgMQ8AGACPQCwnj0AAGg7AGBMvQAAlrwAIJ+9AACJvQAQmr0AwM+8AAAYugAANT0AwIU8AEDGvABANz0AYKG9AMCsPADAh7wAIJA9AABUOwBQhj0AoBy9AEATPQDAorwAAO28AICOPQCAOT0AQMU8AIAvvQDQjD0AAGW8AIDBvAAANDwAAIS7AABPPQAgZr0AgHk9AACAuQCgGb0AYFs9ACBxvQDAPL0AAPk8AEDWPABAozwAAIs7AIAVPAAwpr0AAJY9AADUOgAAh7wAwMo8AKBYvQDANL0AAAy7AAC8OgDAmjwAEKI9AAAiOwCAb7wAQMe9APCFvQBAojwAIHi9AMCEvACQhz0AgJW8AABiPQCADbwAwNk8AMBAPQBgX70AcIs9AMA7PQCADD0AAI49AIASPACwhj0AAJk7AIAbPAAAvLsAYBq9AED8PABg+j0AQJY8AMCbvQCADjwAwNC8AABaPQDwmb0AgIo8AADOuwDgBL0AAN+8ADC3vQDAn7wAAHo7AED1vAAACbwAwJM8AKBxPQBAprwAAJW7AGAuvQAwkD0AQLa8AKBdPQDg870AgOS8AIBBvQBAhDwAAAW9AIBLPABw7D0AwOI8AICxPAAA6bsAwO88ACASvQBAFT0AAHO9AJDrPQAA6zwA4Kc9AICBPAAAaDoAgMC8AAC6vAAAoLwAUIO9AIAMPABwzz0AgA48AACHvAAA1jsAgGA8AADpOwBALT0AgIO9AEBtPQCAM7wAQMm8AMCRvQBAXr0AAJG8AADLOwBgGL0A4Iu9AOA2PQAAyLsAgIC9AIABPAAga70AAEY7ACCQvQBA1rwAwIm8ACAVvQBw6r0AIKG9AACvuwDgZz0AgNq8AOA4PQBAubwAgBg9AAAjvAAAYzwAwN48AAA2vADghj0AAOE7AAACvABQkD0AwJQ8AGCiPQCgfz0AsIW9AAAguwDwmL0AYCG9AAD3vAAgA70AgNu8AAB8PADAzzwAALU8AMCNPAAApLoAsJa9AIDYvAAQrj0AgA68AECjPADAGz0AAJu8AKBIPQCgZj0AgP28AAAPvQBAFL0AELm9AAB7vAAAgLkAAPC6AAAxPACAfbwAYAg9AMC4PACA4bwAAAC5AIC0vABAjrwAgDY8ANCJvQBgRT0AwKw8AICdvACAZ7wAAMm8AADLvACgYL0AIHA9AAAQOgAAGTwAoGa9AMDuvABwpr0AQIO9AADdvADgdL0AgDq9AMBpvQAAPjwAgIQ8AADCOwBAtbwAQAS9AOAIPQBgEb0AAAK7AEDwPACAB7wAAKk8AOASPQAAcrsAAGM8AAA+PACAq70AwBc9AIBnPAAAZzwAAPs7AECCPAAgIL0AAIs7AMBPvQDAkzwAQLu8AACROwAgdr0AgBC8AAD0vADgpr0AgCw9ACCWvQBgDL0AwJy8AIAevQAAv7sAwI+8AIAVPQCA1zwAAMW9AAAdvQBgq70AADA8AADOPABgQb0AAHy7AAD+PAAAPzwAAFI8AGA3PQCAlbwAAAE8AHDWPQCACDwAQN08AAAXPQBArzwAwMa8AFClPQBA0zwAoFa9AGAJvgCAULwA4AI9ACBivQDAQj0A4B+9AEAhvQCAUbwAAIG9AACVvACAMr0AgOo8AIAEPACACzwAgH08AEAnvQDgLD0AgC29AACRuwAgi70AgAK9AACmvABA6DwAQHo9AKATPQDgpz0AwAU9ABCjPQDAirwAgN08AABEPQBgE70AkIU9AABWvABgCj0AAAG8AABLvQBAFb0AgDw8AACFvQAAPjwACAQ+AIDyPABA1bwAoDQ9AIAKvADAMD0AACQ8AOAVPQBgez0AQKM8AEDgvACArjwA0Pu9AMDQvAAwhT0AIGw9AEDGvACAWD0AABk8AAAvvAAAKD0AYBc9AIAPvQAAezwAQIM9AMChvABAAL0AIAs9AABkPQAAM70AQB+9ACA1PQDAqzwAQFo9AMAlvQDgdz0AAIS7AAAbPQAAGDwAABK7AEAYvQBAUb0AAEA6AAAiuwBAPT0AoCo9AMAVPQBA9bwAYC69AEBvvQCAHbwAcK+9AAB8PADAoLwAAP28AMCjPACQxb0AcK89ABDVvQDAnzwAgES9AABivACgc70AoLU9AMAKPQAAmbwAAPM7AACquwDgXT0AIJS9AEBzvQCA/TwAANA6AABIPABADb0AQOc8AKAXPQDAAr0AAMm8AACXPADAe70AAG67AAD6vAAAUDsAAHA6AEC5PADAwrwAoDC9ADCQPQBAAb0AAHQ8AIBGvACAJj0A8LS9AAA2vABgPb0AYAg9AAA4vQAAXTwAALW8AIAbPACAaj0AYCM9AAC1PACAOrwAwLO8AEDfvACADb0AQEo9AIA8PQDA6DwAQJc9AACFPAAAyTsA4D89AIAEvQAA+rwAgFi9AIDoPABgEL0AgFe9AIDVvABARD0AMAc+AIC2PACAbzwAABQ7AEAgvQDgdL0AwPM8AKBwPQBAhrwAAOq8AMDmvABAMr0AIG89AEBOvQAAFb0AAME8AAAcvACArjwAAKU8ACAAPQCQnL0AwNU8AADqOwAAKrwAoA09AEDnPADA2D0=","chunkHash":"febbea6ecc63f6fbfb1ebd186a02f8d6ef651275385d9dc7158a71374c6e6777"},{"text":"File: `scripts/temp/test_low_res.py`\n```python\n#...\n    print(f\"Batch image shape: {batch['image'].shape}\")  \n    \n    batch_sample_to_gif(loader, sample_index=0, out_path=\"sample_lowres.gif\", duration=0.15)\n\n```","range":{"startLineNumber":85,"startColumn":0,"endLineNumber":88,"endColumn":0},"embedding":"AMDPvAAAorwAYHs9AOBdvQBgDr0AoDO9AEDjvAAAvDsAICC9AECWvABAgLwAACQ8AKCpvQBATr0AIB69APCHPQAA4rsAUKM9AGBfvQCAUzwAAAY9AICqvQAAtLoAgLu8AOAYPQBAR70AgDq8AABdvABgZj0AgCo9AAA8vQAAX70AoKW9AMBBvQBw3b0AAKs7AAASuwAAODwAQMQ8AKCqvQCA7zwAgOi9AIBSPQCARjwAgJQ9AIB/PADAhD0AQBK9AKAVPQBAGD0AgIW9AIDOPQDgGT0AAJy7AOAhvQAgQT0AgKu8AAAwugCAijwAAA28AACgPQCgQ70AAGg9AADGOwBAPr0AwAI9AMAPvQCAJLwAgE08AECgvACAFzwAgAU8AABUvADwr70AQKG8AEDVPADgNL0AwG49AECxvABAX70A4Ci9AIAUPQBA7zwAAIk9AAD4ugCAibwAMMC9AGB5vQCAGjwAgE29AAB8uwAA7jsAgCi8AMBTPQCAKTwAwPg8AMAiPQBgi70AAEE9AKAbPQBgtj0AAFI9ALCWvQDAUz0AAJq8AADiuwAALzwAoBY9AOA6PQBQ8z0AAL+7ACDRvQCA/zwAAHy8AABnPAAAer0AgBI8AADfPADgvL0AAJ68APCZvQAAvjsAQL28AIAYPAAAaLoAQKM8AGBhPQCgTL0AAFY8AADUvADgMz0AALY7AOANPQBgtr0AIAs9ALC2vQAAsjwAALm7AADdvACgfj0AwD89AAA5PQDAiLwAAO67AIDUvACQ6z0AMPS9APCHPQCgQz0AMJM9AAD2PAAAKD0AwJW8AGAXvQAgHr0AACO9AABdvACAOjwAAEq8AACHOwCAAbwAAMk7AOCpPQDAZT0AYDO9AGA2PQDAkjwAYAG9ACBkvQCACrwA4C49AOA9PQCAk7wAYJy9AMCyPACgGz0AIFe9AEDwPABAfL0AgIc8ACAMvQAAOjsAQIA8AACHvACwhL0A0Oq9AEAQPQDAszwAwJq8AICNvAAACr0AoDA9AACOuwCAdTwAYEQ9AGBJvQAgnT0AICS9AMDMvABgkz0AAAi8AAAcPQAAQDwAANm8AEDRvABQqr0AAJS7AEAsvQCAG70AAOm7AABYOwBAHT0AgPM8AIDPvAAAA70AAKG8AIBtPACAsT0AgFm8AECTPAAAm7wAwM68AIC2PABAaj0AoDK9AECmvAAATLwAQLS9AIC5PAAAgLkAQNc8AACvOwCAKr0AgHI8AID2PAAApDsAAE28AAAEvACAc7wAwNS8AEBMvQBgAz0AAIU8AAAMvAAAYLoAwHu9AMDavADQi70AgEA9AIA6PAAAsLoAYF69AGAOvQAg1r0AQPu8AKAXvQAAI7wAAJg6AMB7vQAAWDwAgH48AOA3vQDAgLwAAB+8AAAAPQAAf7wAYBs9AEDoPADAi7wAAB09AIBQvACAtjwAwCA9AIB/PACANjwAoCg9AMDYPAAA0TwAgJm8AAAlPABgEb0AADQ8ACA3vQAA17sAACU8AICsvQAAuTsAoB+9ACAmPQAAPb0AAEc8ACAKPQCA9LwAYGO9AIDbvAAAjLwAgLW8AKBPPQAAkTsAUKa9ADCUvQCgJb0AgB28ALCKPQBA8LwAAB67AABmvQBAQD0AgE08AOAUPQAATLwAAAg8AKB/PQAA5zsAAB67AIClPAAAs7sAIBc9AIBRPQCABbwAgL68AMD8vQAA0jwAAAI8ACBIvQDAkzwAAAu9ACAXvQBgDD0AYCq9AMAKvQDAtbwAgNm8AAAEPAAAvTwAwKU9AADjuwCADD0AAEA5AMDSPACwiL0AAPc7AKCEvQBA5TwA4Ik9AACOPABAkj0AoGQ9ADCsPQDAUr0AYBQ9AMDgPACAfrwAQOo8AMC2vAAAJ7wAgBe8AGC0vQDA6rwAgNg8AGB9vQBAH70AANE9AEDBPAAAzbsAAPc8AECkvABgKL0AgBY9ACC5PQBgcD0AEI89AEAJvQDAhjwAAKS9AGCFvQAgTj0AYJw9AIDXvACAij0AQBO9AACZuwDgWz0AQNI8AADgOQAAXDwAAKW7AOBqPQAgeL0AQMk8AMDUPABA27wAANU7AACBOwCgfz0AoKw9AABDvABQxT0AAFC7AMBcPQDgAb0AACo7AKA7vQBA2jwAQAe9AADGuwDADz0AAHi6AOCpPQAAVLwAgGo8AACtuwDAFL0A8JK9ALCQvQDgVr0AoDS9AAAbvACgfL0AwNg8APCZvQCAWLwAwPO8AGCEPQAADb0A0Ok9ALCQPQAAgLwAAOO7AICxPABgFD0AQHa9AIApvQBAYD0A8Ks9AIDCPAAAsrwAgDO8AAB8uwDA5rwAgB68AIAFPQAAQLoAAMc7AAC+vQAACrwAYAa9AACLPAAAnjwAoAe9AICDPQDAiL0AUI29AEBtvQAAiLoAQOq8AIAHPQDAO70AoHw9AMCLvQAAKjwAAIS6AMCzvAAwgz0AALi7AAA2OwAA5LsAAOS6AAA2vQAA0bwAYC89AACyOwAghD0A0Io9AIDyvAAAgzwAAF67ACALvQCAXL0AgAq8AAAaOwAArbwAQIu8AGAgPQCAU7wAIL49AOC/PQBA2bwAwJk8AFC/vQBQh70AAME8AGAnPQDAiLwA4D29AADnvADARD0AYHw9AIAAvACAN70AAEK7AIAJPQBAPD0AoC49AMDIPACwtr0AgBk9AAAbPQAA6rsAgHs8AAA8vACAYT0=","chunkHash":"46cf65c00e4a07ec3194b34aebd4ec19e462b5ae816ba794c789b4989d21e11c"}]},"file:///teamspace/studios/this_studio/scripts/temp/test_mesh.py":{"hash":"05f1562059977eb1fd9ebfc2619abcf5f177d990084a41249650f1911dd70d02","entries":[{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef create_mesh_from_mask_morphofeatures(mask_volume, voxel_size=(1.0, 1.0, 1.0), \n                                        smooth_iterations=10, decimate_target=5000,\n                                        sample_points=1024):\n    \"\"\"\n    Create and process a mesh from binary mask volume following MorphoFeatures approach.\n    \n    Args:\n        mask_volume (numpy.ndarray): 3D binary mask volume with shape (D, H, W)\n        voxel_size (tuple): Size of each voxel in 3D space (dz, dy, dx)\n        smooth_iterations (int): Number of iterations for Taubin smoothing\n        decimate_target (int): Target number of faces after decimation\n        sample_points (int): Number of points to sample from the mesh surface\n        \n    Returns:\n        tuple: (raw_mesh, smoothed_mesh, decimated_mesh, point_cloud)\n    \"\"\"\n    print(f\"Creating mesh from mask volume of shape {mask_volume.shape}...\")\n    \n    # Step 1: Create raw surface using marching cubes\n    print(\"Step 1: Generating raw surface with marching cubes...\")\n    #...\n```","range":{"startLineNumber":20,"startColumn":0,"endLineNumber":37,"endColumn":0},"embedding":"AGANPQCQgj0AAAo9AKBLvQDgQ70AwHK9AABkPAAwnD0AAFO8AMALPQDgAj0AAC+8AECOPAAgbL0AYIG9ACBjPQCAKjwAQL08AMCyPACAB70AwIQ8AEATPQAAIT0AAJe8AEBTvQAAH7wAAOE8AAAMuwCAODwAAGC6AECBvACAlbwAsLy9AICKvABwm70AAGy7AACTuwAwhT0AQAa9AMCCPADAnD0AYLO9AMCCPAAA8DoAwEA9AICKvACgtj0AgH29AMAYPQAAyDsAYAO9ACBEPQAAwrwAQPS9AADeOwAAOrsAUIW9AOBIvQAAirwAIHY9AIDuPAAAjr0AAFa8ACBHvQCAXD0AgDE9AOALvQBAIb0AACo7AGADvQCAurwAwIk8AEAXvQBAizwAALw6ANCxvQAAyLwAgJk8AADevQBA2rwAgCa9AAC2OwBAED0AAOY7ACgBvgCAL70AQG+9AIAgvACAdb0AYLu9AKA1vQBgLj0AAH+8AAAQPQBgcj0AwMm8AMBWvQDgKr0A4Jw9AADvvADApjwAoJA9AABfvACAWj0A8LY9AABYOgDwkz0AQNq8AADcOwCwtD0AwJA9AKBwvQCAzD0AwOq8AIBqPAAABTwAoIk9AMCnvAAAf70AQAk9AKCNvQBABL0AAJO8AMDavAAAsDsAIBq9ADDJPQBAm70AwD+9AOBaPQDQlD0AQO88AACRPQCQh70AAJG8AAB5vQCgPD0AQH49AAAUPQCwoz0AcKa9AIDyvABAvT0AACg6AFCUvQBAA70AAJm8AOCmPQBgFb0AQJo9AAD3vABA0zwA0LY9AACxvADABr0AEJC9AABOOwBgaz0AYCK9AECEvAAACbwAACA5AAAYOgCAJbwAQKo8AGCEPQBAUr0AQC09AAC+vABgwL0AoA89AMDqvACgVD0AYNG9AADbPAAAzrsAgG+8AKAkvQAAjbsAgGc8ALCRvQCAgjwAAMG7AABUPQAAA70AQJE8AAC0OwBwuT0AYCw9AOANPQAAfLsAIEY9AAB4vACAv7wAIFU9AAAAOQBwmT0AQAg9AADwPAAA3LsAAAu8AABIugDAg7wAAFk8AADHuwDAvrwAgC68AACYuwBwnr0AgHw8AADmOwCAljwAIHM9AEDyvACwqr0AwFY9AGBGvQAAnzsAABw8ABCUPQAA9DwAADS7AEDBPAAADDwAYCw9AAB8uwCAuLwAYGu9AIA+vADgKT0AAP47AIAFPABA9rwAgF08AABnvADgC70AwLy8AAC8uwAAijwAYI49AAAivAAARjsAgDw8AACAuwAA5LoAAN08AABFvACAdbwAgBY8AMCePAAApz0AgFm9AAChOwAAoTwAACE8AAD8vABwob0AgEU9AMDwvAAAAj0AIG09AECnvABw2L0A4Ag9ACBZPQCA9TwAAGg7AOBlPQAgRT0AAAM9AICaPADAmrwAABQ7AAAQugBApb0AQN08AADAuABA7DwAAO08AEDNvAAAdrsAwJm8AAAOOwCAZLwAoA09AABcPAAAzjsAAGo7AAAqvAAAh70AgDU9AIDSvACAdb0AAJ+8AIARvAAAyzwAADw7AMCWvACAGzwA0NK9AAAVPACAhLwAoFE9AOASvQDASr0AgIE8AADCOwCAGLwAwN09AIBFvACAcTwAAC68AIA5PAAAlDoAoGk9AABnvABwpj0AoCc9AEDEvADAIL0AoKm9AJCwvQCARz0AAGC5ACAvPQBAZT0AYCG9AIBsvACAqjwAcMG9AABJvACgEr0AAJE7AAA9vAAAFLsAwDQ9AKBWPQAAGz0AQLY8AJCXPQCApL0AYDy9APClvQCAcr0AwHA9AACvPAAAKz0AgO+8AGA4PQAAc7wAQIe8AEDJPAAA8zwA4Aa9ACASPQCAwDwAADQ8AEDvvAAADjsAACG9AAA0vQAwhT0AQEk9AGCHPQCAWDwAAJM9AABQuwCwmz0AQEe9AMDGPAAAl7wAYBm9ACAXvQAAeDoAYJW9AABYvQDA4jwA0Lk9AMDKvADAUz0AIPI9AEBWvQBggb0AAMA6AOBlvQDAqjwAwNo8AMCkPABA27wAQJE8AMA3PQCgcL0AAPY8AEDtPQDARD0A4DM9AMAEPQAArDwAAF28AMCdPQBAP70AADC6AABrvAAAtLoAoB+9AHCAPQAATj0AYB89AEDPPAAAD7wAYAc9AGD3vQAAt7sAoGu9AACwugAAxbsAcJe9AADfPAAAgLwAgAm8ADCZvQAAYLoAADi7AADmOwBA0rwAgHI8AIBtPABgST0AQEc9AOAnPQCAK70AAFu9AAC0OgCAOzwAwNm8AEBlvQBAlbwAAFg8AAAJPQCAHzwAIFa9AICJvADA5zwAAA09AAA4OgAAHb0AQNg8AAAYPAAASjsAMJS9AADAugCAhL0AwKE8AIDkvADA/zwAULW9AKBSPQCAUbwAgDu8AOBrvQAAkjsAAD29AADIuwBAmLwAUM69AED1PADAYz0AgEk8AIBFPQAAtDoAADQ8AHCyvQDAfz0AICo9AICBvABgDr0AgD88AABcOwDAEj0AoDE9AECRPQBA3rwAADC9APCCPQAAdbwAcL49AMAevQAAxzwAgFU8AMBHPQAgS70AAGI7AACYPAAA3bsAIEI9AAD8vACgk70AgD48AACvPAAAGLsAgPE8AAC4PABgKT0AwAi9AABgugBA/LwAALo7AMCcPABADz0AwKI8AIB4vABABL0=","chunkHash":"a5ea3c30aa58bd8800cffaa4f02e5f4e230c507dfa37e8216c8bfee0abd51e93"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef create_mesh_from_mask_morphofeatures(mask_volume, voxel_size=(1.0, 1.0, 1.0), \n                                        smooth_iterations=10, decimate_target=5000,\n                                        sample_points=1024):\n    #...\n    verts, faces, normals, _ = marching_cubes(mask_volume, level=0.5, spacing=voxel_size)\n    raw_mesh = trimesh.Trimesh(vertices=verts, faces=faces, vertex_normals=normals)\n    print(f\"Raw mesh has {len(raw_mesh.vertices)} vertices and {len(raw_mesh.faces)} faces\")\n    \n    # Step 2: Apply Taubin smoothing\n    print(f\"Step 2: Applying Taubin smoothing with {smooth_iterations} iterations...\")\n    smoothed_mesh = raw_mesh.copy()\n    try:\n        smoothed_mesh = smoothed_mesh.smoothed(filter='taubin', iterations=smooth_iterations, lamb=0.5, nu=-0.53)\n        print(f\"Smoothed mesh has {len(smoothed_mesh.vertices)} vertices and {len(smoothed_mesh.faces)} faces\")\n        #...\n```","range":{"startLineNumber":37,"startColumn":0,"endLineNumber":47,"endColumn":0},"embedding":"AABXPACAPj0AoAY9ACANvQDA8rwAgAa9AABRvACATT0AAGu8AAATPQAA+TwAgEe8AMC9PACgAb0AoBq9ANCTPQAA0bsAwIU8AAC7vADAkLwAQIs8AAD7PACgMT0AoDO9AIB1vQAAsrsAAGw7AED3vACgAT0AAGo7AMD7vACAdbwAsLO9AAD+vACwrr0AADA7AADIugDAJT0AgEm8AECpvACQuj0AwI+9AACyOwCAizwAoF09AEC6vACARz0A8J69AICxPAAAgDgAwK+8AHCNPQDAjbwAoJy9AECwvABgMr0AoDW9AKAMvQBAmLwAAFo9AMAvPQAAvrwAAIe7AOARvQAAjTwA4Bc9AIA6vQCA37wAgGQ8AIDOvAAAEL0AgCs8AEAPvQAApTwAgBS8AAAcvQCAzbwAAEY9ANCmvQDAnbwAgAC9AIBfPACQhT0AADq7AIDkvQBgmr0AgM+9AIA5vAAgT70A0LK9AOAkvQCAFT0AwO28AEAnPQCgmD0AgAW9AACsvABAVL0AQJM9AEDGvAAA2zwAgKs9AMCEvABgXj0AYG89AECRPADggj0AAJO8AACXOwDAoD0AgEQ9AMBQvQAwrT0AAP68AACtPAAA2zsAYEc9AIA9PAAQ1L0AAPA5AMDBvABAurwAgHg8AGA2vQDA0jwAgDu8AKDlPQCQsb0AgHe9AOAkPQBgQT0AoAc9AACdPQCAPL0AQAC9AEDvvAAAgzwAgJA9AED1PABAiT0AUIW9AECKvACgND0AAOc8AMA1vQAA1LwAQL28ALCFPQBA4LwA4Kk9AAAbvQCgZD0AwFY9AIAcvQCA9bwAIKq9AICMPACggT0AwEW9AADkvADgC70AAP68AAD8ugAATjwAADQ7AAB+PQBgWr0AgMc8AABmvQAg070AwKI8AOApvQCAIj0AIPO9AIAePQDAmzwAwBe9AABvvQDAE70AgCw8ACCvvQBA2jwAAJA7ADCGPQCgSb0AAJk7AIA8PADAjz0A4HU9AEDyPAAArDsAQFg9AACOvADA2rwA8KI9AGAIvQCAoz0AAOm7AIAoPQAAgbsAgLO8AECDPAAA8bwAQNs8AMCivACA67wAgFk8AABuuwDAeb0AwNU8AABePAAA1jwAoEs9AMCmvABAir0AQBk9AOAzvQCAmDwAAAA6AECqPQBAEj0AACw8AKCJPQDAjzwAoDM9AAAovAAAMLoAgDi9AADXOwDAJD0AAB47AACDPAAA4rwAAJO8AGAivQBAprwAgCK8AICGPAAAQbwAgGE9AABbvQAAQjsAAB67AAANPAAASbwAQJE8AGBJvQAggL0AQA09AAB6OwCgZz0AQB+9AIBIPAAAQDkAAH67AIDLvADAeL0AwEY9AAAAvQCgLT0AsIY9AICTvAAg370AwNE8ACBGPQDACT0AALc7AOAGPQAgAz0AwAw9AABPPACAiLwAwJE8AACkOwAglr0AQCg9AIAvPACAUjwAgJc9AIBavAAApLsAAO28AABYOgCASbwAgCw9AACsOgAAlDwA4CE9AABUuwBAjL0AwBw9AOAsvQDgWL0AwKQ8AAB8vQDA4zwAwAC9ACALvQAAKDsA4AC+AKBdPQBAmLwAwB89AICYvADAOr0AYAU9AIBAPQAAOrsA8Nc9AAAJvAAALTwAwAe9AIDkPACAarwAoGY9AIDzvABgrD0A4Gg9AICuPABgTr0AAGq9AMDFvQDAJD0AALC7AABJPAAAGT0AwBS9AMClvAAAAjwAINe9AAD1OwCA/LwAgN88AIBcPACAAzwAYGQ9AIAKPQDAcD0AAL47AMCkPQAAkr0AwCe9AOC8vQCA6bwAsIM9ALCNPQCgUT0AAFS8AEAYPQAASLoAoBs9AAD2PAAAs7sAgFa8AAAmPQAAgTsAQJG8AMAfvQAAAD0AwJ+8AEDCvADwjj0AQFc9AGCKPQAAjTsAQG89AMDcPAAg2z0AwB+9AMBIPQCAWrwAAH28ACAWvQAAorsAUJy9APCPvQBgNT0AIMo9AIAuvADgbD0A4LU9AIB/vQCADr0AAPm7AECDvACADbwAwL48AKAfPQDgM70AAP27ACARPQDwgL0AAME7ACD0PQCAmz0AQNk8AMA8PQBgCT0AQCG9AJClPQDAQ70AAOS7AOAqvQDAqbwAADq9AGDTPQCAFD0AICE9AIAKPAAAnjsAICw9AJD6vQAAlrsAIIq9AAB4uwAARbwAwDO9AACIOgAAyLwAwJm8AFCCvQAAdjsAAKu7AADkOwAAm7wAAGE8AABPPABAxTwAgEw8AAClPAAAN7wAAC69AADjOwBA0jwAAIW8AOCdvQBA87wAoAE9ACAZPQAAUjsAgFe9AECLvAAAZDwAQOw8AAAEuwBAW70AANM7AABoOwAAtjsAYH+9AAArvAAwub0AAEo7AICTvACAKj0AcM29AABAPQAAnDsAAGY7ACA+vQCAAj0AoEO9AIAqvQAAKDsAUK29AADbOwDAgT0AANQ8AOB6PQCAXLwAAIi8AECfvQCghz0AYBY9AADAOgBgJ70AAB49AACAvACgGT0AgCY9AMAqPQCgOb0A4BW9AHCVPQBAgbwAgNQ9AAACvQAArDwAAG08AGBePQDgjL0AAEq8AIDxPAAAdLwAYBg9AGBFvQDgXb0AAEA8AIBqPACAZzwAoFY9AAAcPABAxDwAQIk8AMC3PAAAKrwAAPY7AMCoPACgPT0AoBE9AECMvAAAQbw=","chunkHash":"a7bf1f3723d0bda1d42ea23c68ccab394b578480ea6620b035d0ddc094188b74"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef create_mesh_from_mask_morphofeatures(mask_volume, voxel_size=(1.0, 1.0, 1.0), \n                                        smooth_iterations=10, decimate_target=5000,\n                                        sample_points=1024):\n    #...\n    except Exception as e:\n        print(f\"Warning: Smoothing failed: {e}. Using raw mesh instead.\")\n        smoothed_mesh = raw_mesh\n    \n    # Step 3: Decimation and repair\n    print(f\"Step 3: Decimating to target {decimate_target} faces...\")\n    decimated_mesh = smoothed_mesh.copy()\n    try:\n        # Perform decimation (use trimesh's built-in decimation as a fallback)\n        # For more advanced decimation and repair, pymeshlab would be needed\n        if len(smoothed_mesh.faces) > decimate_target:\n            decimated_mesh = trimesh.simplify.simplify_quadratic_decimation(smoothed_mesh, decimate_target)\n            print(f\"Decimated mesh has {len(decimated_mesh.vertices)} vertices and {len(decimated_mesh.faces)} faces\")\n    except Exception as e:\n        #...\n```","range":{"startLineNumber":47,"startColumn":0,"endLineNumber":61,"endColumn":0},"embedding":"AECHPADgzz0A4Ck9AKAavQBAEL0AoAa9AMAAvQDAkz0AAFu8AIBcPQBALz0AQOC8AAA4PAAABb0AoDm9AMB6PQAAyLoAgBs8AMDGvADAkbwAAK08AAByPQBgLT0AwHy9AKBtvQCAfjwAACA8AECPvABAeT0AgA08AIBQvAAAMLwAILO9AIDyvADgz70AgEi8AED3vADAHz0AAJK8AABVvABwxT0A8KO9AABrPACAxTwA4A89AAAguwDgYT0AQHa9ACAoPQCAUrwAYC29AOCJPQDAg7wAsIy9AECRvADgEb0AICG9AIAjvQDgBr0A4HU9AGCIPQBA+rwAgKS8AIDhvAAAdjsAgNE8AEDrvACAC70AADi7AMCHvAAAsrwAgGk8AKAQvQAAuTsAwKC8AGBJvQCAi7wAsIc9AGChvQCALrwAwNK8AMAcPQAgOz0AABg6ALAWvgDwh70A8MK9AMCQvABwgb0AIKy9AMAdvQBA+DwAABe9AADXPABwjz0AwIe8AECqvADALL0AQKw9AABOvABA2zwAgKw9AAAjvQAgCD0AQIM9AIBjvADAKD0AgFm8ACAiPQDgnD0AgJw9AKA8vQBgej0AACi9AAASOwAATjsAQKo8AIAfPABAt70AAOC6AABzvQBAnLwAAPG7AABdvQDgJD0AgJa8AADmPQCQn70AAD29AAB8PACgVz0AoAE9AEDVPQDAdL0AQAW9AED5vAAARDwAQIM9AIDsPABQkz0A4JK9AABIOwBglz0AQMs8AABzvQAAoLoAAJm8ACBfPQAAr7wAYK89AOAcvQDgFz0AkIk9ACAOvQAAZL0AoJu9AEDbPACgYT0AYB29AECrvABAjLwAgIm8AAAlPADAhrwAAN87AIAdPQAgg70AAFc8AOA/vQCgpb0AANK7AMAnvQCAAz0AkOW9AIDePACASTwAgBa8ACBNvQDAtrwAwJc8AOCevQAAkTwAABq7AICCPQBgUr0AAK27AICUPABguT0AgBk9AICyPACALzwAgDA9AIAHvQDgD70AAKA9AECovAAgtD0AgEC8AKAQPQAADjwAYB29AADuOwCACLwAYAI9AAAGuwDAML0AgDW8AAAtvADALL0AwGY9AECPPAAACj0AcIU9AACNvACARb0AAHQ7AMAbvQDAsTwAgA68AKCIPQAAgDwAAEg7AKCQPQAAhDwA4C89AED1vACAgjwAID69AABAvABgQz0AAE68AABQOwDAwrwAQI+8AIADvQBgCL0AAB67AABgugAAubsAMI89AMAlvQAAVDwAAMg7AAASPAAA9LoAwAI9AGBJvQAgf70AgAQ9AMCLvACQij0AwNS8AABUPAAA+LoAgAK8AACfuwDQhL0AIDY9ACAOvQBAhDwAgDw9AIAqvACwqr0AoGo9AKAUPQCA2zwAAJI7AMDzPADA0TwAwK48AABAOgAAerwAAK87AAAauwCAS70AoDU9AAB6PADASz0AIG89AADMugAA0LoAAMm8AIArvAAAwrwAYC89AMCpPAAAArsAgKw8AAAiOwBwqL0AgKg8AMA0vQCAL70AADw8AKA2vQAAhjwAwLa8AABwvAAA0LkAgOG9ALCMPQAAgDgAgEE8AKBOvQAgDL0AgE49AAAKPQAAYLwAUOU9AAACPAAASDwAgCe8AEAiPQAADLwAoD89AMCuvACAsD0AALs7ACAWPQAAd70AAGi9AHDSvQAAdjwAwBO9AAC0ugBAyzwAoDa9AIDFvABAnTwAAKu9AAAsOwCA0rwAgD48AABEOwAATjwAoG89AIC6PACggj0A4Bg9AEBLPQCQiL0AYAu9AHDQvQBgYb0AQIo9AGCKPQCAMD0AAL67AEA/PQCAQjwAAC47AEDXPADAvbwAYAy9AGAqPQAAUDwAAJC7AGBYvQCAfjwAwMG8AAD2vADgVz0AACw9ABCHPQCAIrwAYHY9AGAbPQDApT0AQPa8AMAMPQAA8rsAoBW9ACAevQCARzwAkIK9ACCNvQCA9jwAUOQ9AAD2uwAgdz0AwOE9AGANvQCAiLwAAKS8AGAfvQAA4TsAAKU8AKA4PQAwsL0AAD+8AECaPQCQiL0AAP47AKDXPQDwjT0AIAI9AIDePAAAAT0AQCm9ANC3PQCgD70AAPC5ACApvQAAmLoAwNq8AKDrPQCAMj0AQCQ9AACvuwAAKLsAAEE9ALDnvQAApDoAAHi9AACIOwDA47wAAIe8AAAouwCgFL0AAKS7AOB0vQDAm7wAAPW7AKAsPQCAYbwAYBw9AABuuwAAeTwAgA89AIAwvAAA0rwAwJi8AMAsPQBAhDwAgC28AIBKvQCgMb0AAO87ACAUPQAAjDsAQF69AOACvQAA5DwAYFw9AABoOwCAgL0AAPC6AMCzPAAAqjsAAPq8AACEuwAgyL0AALc8AIC/vADgaz0AANK9ACB9PQAA9LoAgBg8AMBIvQAAbD0AAFq9ACBrvQAA5LoAAMi9AACSvADAOD0A4Cg9AECfPAAAUDoAABs8AOCJvQBgmj0AwFU9AIASvABAlrwAgDE8AMDlvACACj0AAFg9AMA0PQBgIr0AAPO7AABJPQDAlbwAEM49AMAsvQBAzTwAwIu8ACA5PQAwgr0AgCa8AOAOPQCAg7wAAMo8AABOvQBALb0AACw8AAC1PADAljwA4Cs9AMCFPACAqTwAAC+8AAAXPAAAWLsAAEQ7AMC/PACAYj0AALA8AIBmvAAA9Ls=","chunkHash":"af44e53fd4e5f8f03064466c167049c104c03e9e1d0b4d2be342e4406b3c9e82"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef create_mesh_from_mask_morphofeatures(mask_volume, voxel_size=(1.0, 1.0, 1.0), \n                                        smooth_iterations=10, decimate_target=5000,\n                                        sample_points=1024):\n    #...\n        print(f\"Warning: Decimation failed: {e}. Using smoothed mesh instead.\")\n        decimated_mesh = smoothed_mesh\n    \n    # Step 4: Sample a uniform point cloud from the surface\n    print(f\"Step 4: Sampling {sample_points} points from the surface...\")\n    try:\n        points, face_indices = trimesh.sample.sample_surface_even(decimated_mesh, sample_points)\n        normals = decimated_mesh.face_normals[face_indices]\n        point_cloud = np.hstack([points, normals]).astype(np.float32)\n        print(f\"Point cloud has shape {point_cloud.shape}\")\n    except Exception as e:\n        print(f\"Warning: Point cloud sampling failed: {e}. Using random points.\")\n        points = decimated_mesh.vertices[np.random.choice(\n            len(decimated_mesh.vertices), min(sample_points, len(decimated_mesh.vertices)), replace=False)]\n        #...\n```","range":{"startLineNumber":61,"startColumn":0,"endLineNumber":75,"endColumn":0},"embedding":"AAAAOwDAdz0A4FI9AMCXvABgO70AgDW9AMDMvACQjD0AAP67AOBHPQBAiDwAABC6AACQOgAAb7wAgPm8AAA0PQCAsrwAAGA5AACqvADAIb0AAOk7AABcPQBgWj0AgGS9ACB1vQCASDwA4Ac9AAAavACggD0AAMa7AAD3OwAAQLwAkJm9AMClvABgo70AAAq7AADPvAAAUD0AwCq9AACovADQoT0AYK+9AOAAPQAAUTwAgAk9AACYvACgPD0AQLq9AEDmPAAA9TsAAA29AACOPQAAQrwA0La9AACWvABAOL0AYEG9AIDgvADAl7wAwFM9ACBxPQAA0rwAgHC8AMCxvADApDwAgOE8AABSvADAR70AAJe7AMCZvACA37wAYAI9AID7vAAARzwAgBC8AAAXvQDgOr0AACc9AMCkvQAAZrsAwKO8AGAFPQAggD0AAAC6AJgHvgBgbb0AsKm9AIBDvAAgeb0AMIy9ACAfvQCAhjwAgOW8AIDXPACgOj0AAFK8AIBkvABgYr0AgL89AIClvAAAvzwAAKo9AACougCANj0AQI49AMCBvABgVz0AAJm7AED7PAAAxD0AMIQ9AKBOvQAgJj0AwCa9AAD8OgAAiLsAYDk9AIB9PACAxr0AAE48AECLvQAA3LwAAGO8AMDdvABAAT0AANW7AHDQPQDgXr0AgC69AICWPACAKT0AwBE9AFCoPQCga70AgA69AMA5vQBA5DwAIBU9AICLPADgiD0AcJG9AACzOwAghT0AgA49AABJvQAAnLwAwLK8AOBvPQAAGL0A4I09AEDXvABgHD0AUIQ9AOAAvQBADL0AgLa9AKAAPQCQgj0AgES9AECcvAAA57sAAA+8AEDYPAAAlbwAAO67AEAAPQDAd70AgHI8AIA6vQCwxb0AAAo8AGBrvQDAAT0AQM29AOATPQCAqTwAAD67ACA3vQCAvLwAAPA6AFCovQDgGz0AAGg7AKBxPQCgNr0AAGI7AICDPADAwz0AoAA9AMBPPQAAYDkAoA09AICIvABAibwAUJg9AADbvABQqD0AAFC7AMDSPAAACTwAwM+8AACMOwCANrwAAJs8AMCYvACgB70AAAA8AAB8uwCgQL0AQGE9AIAtPADgMT0A4C09AMCJvACwjb0AABw8AEDbvABA0DwAgD68AKCjPQDAxDwAAKo8AICCPQCgAT0AYBQ9AEDRvACgDz0AYB+9AACluwBgOz0AAIO7AAB3PABAyrwAgD68AAAjvQDgAb0AgEk8AABoPAAA3rwAQG09AGA2vQBgAj0AADo7AACfuwAAC7wAQK48AMAtvQCAQb0AwB09AADLuwBggz0AoAK9AACJPAAAWDoAgNW8AOAovQDAV70AYCo9AOAGvQCAizwA4C09AIAevACw5b0AAH89AMD/PACAbzwAAJW7AACyPABArDwAQAo9AACcOgBAB70AAD48AAAYvABwoL0AwKI8AIBSPACARz0A4Ec9AEC6vAAACLwAAL68AMCGvAAgE70AADo9AACJOwCAsjwAAHM8AICovABg3b0AwKg8AKBrvQDgaL0AAEU8AOA0vQCAXTwAAPe8AAD/uwAArrsAAAC+AGBkPQAAerwAwAE9AAAovQDAJ70AADo9AKA7PQAA8rsAoPk9AACKOwBAsDwAAAAAAAD3PAAAADgAYDY9AEDMvABgyj0AgAc9ACAxPQCARb0AwF69APDdvQBAxTwAQJO8AACVuwCA5zwAwA29AEApvQDAuDwAgLe9AAAmuwBAFr0AABE8AACgOgAAkjsAACA9AEDBPACAZj0AAMk8AOBKPQAAor0AgEO9AECqvQDAUL0AkI09AEB+PQBAnzwAAAi8AKCCPQAASDsAAJK7AEDQPACAgbwAAM68AADtPACAODwAABg6AMBOvQAAFrsAQLC8AABhvQDANz0AAEY9AEBUPQAALzwAQH89AIDKPABQvD0AABG9AEDkPAAAo7sAANi7AOBwvQAACjwA8Ka9AKB5vQDAET0A8Lk9AMCSvAAAez0AsPE9AKA+vQAAlrwAAP67AID2vAAAtTwAgCE8AMAoPQDgmb0AgDi8AICCPQBgXb0AACg8ACDlPQDAmz0AgG09AEAePQBAzzwAwLW8AJC5PQCA/bwAAGa7AEDYvAAAj7sAIDK9AHDQPQBAcT0AgNU8AACYOwAAkLwA4Dw9AGDhvQAAQDsAsKq9AAAguwAAkbwAQOa8AAAxvABgG70AACy7AFCIvQAA5DoAQKq8AGAPPQAAo7wAQCk9AABougDAwzwAwAk9AAAsPAAATrsAoCy9AIDkPAAA/DwAABa7AOCFvQAAGr0AAOE7AGAzPQAAlrsAgFm9ACA0vQAAkTsAwBE9AAAXvADQrr0AgGi8AAChPAAAIDwAQOa8AEDXPADwxr0AwM48AACjvAAARD0AsNy9AAB0PQAAqDsAgE08AGAZvQBAPj0AgHW9AIBwvQAAg7sA4Mu9AABeOwBAiD0AABM9AEAePQAAvbsAABg8AKB1vQCgxz0AAMU8AADAOQCAjbwAwPw8AIBUvACgGz0AwHU9AOArPQCA/rwAAOi8AGBiPQDArLwA4PI9AEDNvAAgUj0AgKS8AEBMPQDAn70AgCw8AGAWPQCAfbwAABU9AKBXvQBA/LwAgM88AAAZPAAAoLsA4D89AACEuwAAZDwAgAA8AACIOwAAMDsAgAA8AIBrPACgOD0AgBw8AOAIvQAAsDo=","chunkHash":"3761cd9dbd4643cbd606ea9331916ecfc0aeb37795e9cae104751f53b0d62a09"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef create_mesh_from_mask_morphofeatures(mask_volume, voxel_size=(1.0, 1.0, 1.0), \n                                        smooth_iterations=10, decimate_target=5000,\n                                        sample_points=1024):\n    #...\n        normals = np.zeros_like(points)\n        point_cloud = np.hstack([points, normals]).astype(np.float32)\n    \n    return raw_mesh, smoothed_mesh, decimated_mesh, point_cloud\n#...\n```","range":{"startLineNumber":75,"startColumn":0,"endLineNumber":78,"endColumn":63},"embedding":"AABtPABwkD0AQF09AEBwvQDgJ70AwIm9AIDfvAAAcj0AAOy7AOAfPQCACz0AAE08AECWPADAzrwAoDO9ACByPQCAfbwAQPc8AMDLvABAML0AANQ8AKA9PQDgAT0AgGC9ACB8vQAACjwAABY8AAA5PABAKD0AAAQ8AIC+vADAybwAMKy9AIAOvABwwr0AADq8AOAVvQDARz0AwM28AADbuwDglT0AIKO9AIDoPAAAS7wAIEs9AMDevABAYT0A8Jq9AEAvPQDAoDwAwLS8AMB8PQAA6zsAgJW9AAD1uwAAi7sAAFS9AAA6vQAA0LwAoG89ABCPPQAgLb0AAB28AMCUvACAqDwAAJ08AIApvQAge70AAKA5AABMvABAj7wA4B89AMDLvAAA9zsAABA6AOAuvQAAqbwAwBc9AMDDvQAA3bsAIBK9AKAfPQAgVD0AAJi8ABD4vQCAiL0AEJW9AEC+vADgpb0AwHy9AEArvQAAEjsAANi8AMC2PACAYT0AADa7AIA8vABgOL0AkJQ9AIDWvABA6DwAcKA9AECDvABwgz0A4Ks9AABSOwAQhD0AAGi8AOAIPQBwoD0AwDo9AEBsvQBwmD0A4FK9AAB2uwBAgLwAAOU8AACLvABgib0AAJs7AEBqvQAAJrwAAFa7AOAdvQCAvjwAACy8AEDpPQCwpr0AQDe9AIBcPACAcjwAgGM8ADDKPQBAvb0AYCi9AMDgvAAgLj0AQHA9AIBIPACgnz0AwFW9AIDOvABwmD0AIBQ9AOB3vQAA3rwAoE+9AMB0PQCAebwAUJo9AEDZvAAgOT0AAIo9AACevAAAPL0A8Ka9AAALPQCQiD0A4G69AAAAOQAANDsAwOm8AADbOwAAwTsAAFq8AEAMPQAgn70AACc8AMDuvACQzL0AAHQ7AAD8vADAlDwA0N69AMANPQAAHzwAAAK8AOAvvQAAZLwAAGM8ACBKvQAADj0AAJ67AABjPQBgDL0AAMI8AIBGPAAA1T0AYAY9AKARPQDAgDwAIDM9AADfuwAAdLsAILU9AOAKvQDgmT0AAKs7AADFPAAAGTwAwKO8AIDUPAAAsrsAAHA6AIApvAAgEL0AAIy7AAAtPACwjL0AQPw8AACZOwCABz0AYHc9AIBlvACgmb0AALw6AGAvvQAgIj0AwNC8AACePQAgKz0AAGg6AACWPQDAwzwAgD09AIA1vACAUDwAIEO9AIAnPAAAlTwAANA6AECgPABA3rwAAAC8AMAWvQAgIr0AAJO7AACIuwCAxrwAgGM9AMDkvAAArzsAgB28AAC0OgAAMLoAwIA8AEDyvAAA+rwAoAs9AAAougBQjj0AQIm8AACYPACAU7wAgGi8AKA9vQBgo70AYBQ9AADJvADADT0AIA49AIBXvACQyr0AoCc9AIAQPQAA0jwAAIK8AAAgPQAAVDwAABA9AIBVPACACrwAwLI8AICAvADgj70AABw9AABkvACAZT0AoHo9AIA0vACAgLwAgCm9AADEvAAAlbsA4B89AAAYugCAELwAQAo9AAAvvADgv70AALo8AKBVvQCAKb0AgE88AMCTvADAoTwAAJS6AIDmvADAwjwAEM69AICLPQAAJr0AANs8AEAavQAAa70AIDE9AIDjPAAAu7sAAP09AAC8vAAARLsAAL27AEBrPQAAaTwAQP88AABoOgBAqz0AAAA9AMAIPQDAQ70AwHW9ACDpvQCA/TwAAFy8AABmuwCgIz0AwDi9AGAvvQAA1DsAYM29AAAEuwAABr0AAEA6AAAiPAAANjwAAEE9AACfPACAbD0AQNU8AADyPACwvL0A4B29AFDYvQDANb0AMLo9AABCPQAAFj0AAKC5AMDbPAAARDsAgG08ACBHPQAgAr0AgGO8ACAEPQAA9zsAAKI7ACBXvQCAVjwAgG68ACAnvQDwgD0AwC49AECTPQAAi7sAQA89AIB2PAAwhT0AAE29ACBLPQAAgrwAwL+8AOBOvQAAgbsAAJy9ALCWvQDADD0AEMo9AIAZvQDgdj0AkPQ9AABQvQDAwrwAAJ28AIAhvQBAxTwAAMM8AOAGPQBAhL0AADc8AOB6PQDAVb0AgDA8ABDqPQCwoj0AADM9AIB/PQCA7TwAwBq9AACEPQDAO70AgLi8AAC9vABAm7wAYAq9ANDCPQDgIj0AwNo8AABvPAAAEbwA4DA9AICvvQAA87sAgDW9AAAgOwAAZbwA4Ai9AMCfvAAgS70AAMq7AMAxvQAACDoAgLa8AID9PACAarwAAGE9AADGPABA4jwAgFM8AACXPABA07wAoEa9AAC2PABAyzwAAGC7AEB3vQBAkbwAwOE8AGBJPQDgGD0AQOi8AEAfvQAA+7sAwCQ9AACauwCQkr0AgD+8AADFuwCAzTwA0JS9AMDlPADgqb0AgEI8AKBCvQDAPj0AUNK9AMCJPQAA0bsAAI48ACAPvQAAvjwAYGu9AMArvQAAADoAULa9AADkuwDQij0AIBw9AKA7PQAAVLwAQNU8AMB0vQBwpD0AwFY9AABAOQCAgbwAwL48AAD4ugAA2zwAYDc9AABOPQAAlbsAwBG9AMA9PQAAEDwAoPM9AACTvACA8DwAACq8AGATPQCAk70AgCk8AIDqPACAW7wAoDE9AGCEvQCgOb0AAPA8AAAIPAAAvrsAQBM9AAAAOAAA4zwAALe7AIDmPAAAkLoAAK67AIBZPAAgJz0AQLU8AAADvADA6jw=","chunkHash":"436f182f5adb95ce6a8b5b6d56c341e5ba3d74ef8c6b33a6d44373172f025852"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef save_mesh_plotly(mesh, output_path, title=\"Mesh\", color='red', opacity=0.7):\n    \"\"\"\n    Save a mesh visualization as an interactive HTML file using Plotly\n    \n    Args:\n        mesh (trimesh.Trimesh): Mesh to visualize\n        output_path (str): Path to save the HTML file\n        title (str): Title for the visualization\n        color (str): Color of the mesh\n        opacity (float): Opacity of the mesh\n    \"\"\"\n    # Create mesh visualization\n    vertices = mesh.vertices\n    faces = mesh.faces\n    \n    # Create x, y, z coordinates\n    x, y, z = vertices[:, 0], vertices[:, 1], vertices[:, 2]\n    \n    # Convert faces to the format expected by Plotly\n    i, j, k = faces[:, 0], faces[:, 1], faces[:, 2]\n    \n    # Create mesh3d trace\n    mesh_trace = go.Mesh3d(\n        x=x, y=y, z=z,\n        i=i, j=j, k=k,\n        opacity=opacity,\n        #...\n```","range":{"startLineNumber":82,"startColumn":0,"endLineNumber":107,"endColumn":0},"embedding":"AIAcPADgbT0AAPW7AHDZvQBAwrwAAD69AADAvADA5zwAcJw9AACpvABgEj0AQKE8AMC0PACAgr0AgDS9AGCXPQAAJDsAgAg8AADIOgDAFj0AQKM8AIBjvAAwlD0AALM7AMDjvABA3TwAwDy9AACduwCA0bwAQI49AHCovQCABr0AALy8AKBDvQDAi70AAHw8AIAiPAAAm7wAQCU9AIANvACgpT0AAFa8AEAePQCAZzwAQII9AIBUPQDArTwAABA7AMCNPQCAoLwAAIw8AFCRPQAAtrwAwEG9AEAxvQAAlLsAIDm9AACnuwAAhLoAgDa8ABDBPQAAFrwAAIk7AIDJPACASLwAgKA8AMB/vQAA/zwAgDQ8AIBjvADAYj0AsIi9AIDFPAAAiTsAgBi9AIALvADA1rwAEJW9AGBHvQBApr0AIEC9AADBuwAASLoAwH29AADauwDAI70AQMq9AGAdvQDgur0AgLo8AAA4ugDATD0A8Kq9AABsOwCABDwAcPw9AAD4vQAAWLoAANY8AOAGPQCwnj0AAO47AICzvQAAaDsAAPy7AABxvABgTz0AwDU9AHCVPQAAv7sAAAA8AADhvAAAcTwAgGO8AIAIvQCgsb0AQOo8AMDCPAAAOb0AgDC9AAAcvQCAIr0AIEg9AEDxvABA4bwAAHY7AMD8vACwiL0AgHA8AICMvABAHj0AQIq8AEDePADA970AACw8AAA+PAAA+bsAgOS8AECMPAAArz0AAIC5AADSPADAnzwAgEk8AACcOgBgGz0AAOM7AECwPQAA0DkAYF09ADCHPQDwqD0A0Lc9AAB/PABgMT0A4BK9AECjPAAAlzwA0IC9AKBLvQCAojwAAKw6AKCxvQDAPr0AAMU7AABUPQAgbb0AAKI7AEC8vABAJb0AAAA4AMBtvQCAUT0AgCO8AKCyPQDA97wAwDo9AAAcOwDgf70AgCA9AOCDvQCAjjwAAPC7AADquwDAIr0AAHU8AIBQPQAAC7wAAME8AMC0PADgKb0AAAY9AADKvQAAmb0AYCI9AECqvAAgyj0AgFW9AADCOwAArrsAALC8AAD+PAAAbL0AgIA8AICAvABArTwAADY8AHCRvQDATr0AQP08AIB9PACAvj0AIAw9AADUugBAyjwAoHS9AMDUvACApDwAQPg8AEC+PAAAdr0AwLA8AAAoOgBAkbwAgPQ8AAC8OgAA1zwAICy9AOAsPQAAVj0AQCe9AIAePAAARzwA8Jw9AABJvADgKb0AgEK8AACPOwAAMjsAgNs8AMAsvQCAWDwAwM68AKAnvQAw/z0AAKU8AAByOwDQhr0AgPS8AAA8OwCAmjwAAHY7AMAfPQDg3b0AAA47AACjvQAg6r0AAOE8AOAJvQCgIL0AgF08AIB9PAAAk7wAQPA8AHCgPQCAPD0AAGY8AICnPAAAQr0AoHG9AAByOwBgG70AgDU8AIBBvADQkb0AwAw9AAAAugDggT0AAIm7AMCAPQAAdjsAwF+9ACBxvQCgRD0AAPY7AMCtPABgF70AwLg8AADWPABwnL0AwL88AECKPAAAdr0AACo7AICOvABQkT0AAHg7AEBrPQBAOr0AwH69AAAwuwAA8rwAAPk7ACA1PQDAHj0AYDG9AAC2PADgFj0AsKg9AGAPPQDwlL0A8Ie9ACCMPQAAZjsAgBq8AADIOwDAvj0AoOk9AACgOwDQwr0AAKw7AMCZvADgFD0AAHg8ACBZvQAAPLsAADG9AEBSvQAAJL0AQCO9AAAFPACAgr0AALC8AADMOwBgbj0AAEw8AMAgPQAAvjsAwJs8AAAKPADAvb0AQJg8AIDivQAAq7wAAEA8AIAfPACAzjwAIFU9ANCHPQAAqrsA4Ay9AIDfvAAghL0AANA8AMCdPAAALLsAAFm9AABtvQAAHj0AwJg8APCFvQCAEDwAgHk8AECTPAAAn7sA0Jw9AEC0PADgPT0AACy7AECwPACAFD0AsJI9AGCAvQCgDD0AoCm9AJCHvQBgIj0AoAY9AECrPACAJLwAAEA6AAAoPQBA4bwAwFa9AKC8vQBAL70AoAU9AAC4PACAIb0AwLU8AMCiPQBwnr0AYFu9AEBhPQAARDsAAJo7AAB3PABgDj0AwKk8AADZvABQrL0AAIE7AOA7vQAA2bwAAF+8AGACPQDgIz0AwLK8AIBYvABgFb0AAEU8AEBdvQAASLwAACu9AECmvADAY70AANK7AEC+vQAAU70AgIU8AACNvAAgjb0AAG89AIBPPACA+rwA0JU9AKCmPQAAe7wAkJU9AAAivAAAPb0AQJ+8AAAzPQAQrT0AoIE9AEBxvQAAgLwAALK8AMCkPQAgb70AoCK9AMDtvABAj7wAAPs7AADguwAgZ70AAHw8AEAIvQAAFb0AwI69AMDlPAAATjwAABC9AIBfPADAqDwAIAY9AIBGPACgbr0AAIA5AADJOwCAnTwAgPw8AOBIvQBAej0AgIa8AGBlvQCAbD0AAKk7AIBmPADAZL0AQJ28AIATvQAgWz0AACA7AMCdvAAgFb0AAJC8AKACvQAADjwAgCC8APCTPQDAAL0AgEC8AEDdPAAA8bwAQGc9AADWvADgmb0AAEC6AACBvACgB70AAAA6AEDIPQAAAbwAALA7AMCLvQAQ470AAKa8AACDOwAAJr0AgHC8AAAQugAAwLgAAP+7AACrOwBA97wAgAw8AAB6vACAIbwAQFo9ACAbvQBATL0=","chunkHash":"084a5dc969a2ca25b123ae423e8c0e6f32c30203e79965b548f6027094dac3a9"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef save_mesh_plotly(mesh, output_path, title=\"Mesh\", color='red', opacity=0.7):\n    #...\n        color=color,\n        flatshading=True,\n        name=title\n    )\n    \n    # Create figure\n    fig = go.Figure(data=[mesh_trace])\n    \n    # Update layout\n    fig.update_layout(\n        title=title,\n        scene=dict(\n            xaxis=dict(title='X'),\n            yaxis=dict(title='Y'),\n            zaxis=dict(title='Z'),\n            aspectmode='data'\n        ),\n        margin=dict(l=0, r=0, t=30, b=0)\n    )\n    \n    # Save to HTML\n    os.makedirs(os.path.dirname(output_path), exist_ok=True)\n    pyo.plot(fig, filename=output_path, auto_open=False)\n    print(f\"Saved mesh visualization to {output_path}\")\n    \n    return output_path\n#...\n```","range":{"startLineNumber":107,"startColumn":0,"endLineNumber":132,"endColumn":22},"embedding":"AIBhPACABT0AAD88AICzvQDATL0AgC+9AACkuwDAjTwAwLk8AEANvQCA6TwAALc7AIBSPABAeb0AAFu9AKCiPQAAGrwAgJE8AGAXvQBAWz0AoCY9AABivAAAQD0AgIM8AABovQDADT0AYEi9AAC0PACARLwAwCc9ABCTvQCA2rwAAGW9AACwOQDA3L0AAAy8AACFOwCAL70AgGM9AEDXvADwmj0AwCy9AAA2PQAALrwAwJY8AACgPAAA3DsAgCW8AHChPQBAkrwAAKk7ACAdPQAAtLoAYAu9AMBnvQAAxTwAAC29AADROwAALTwAgPi8AKDpPQDAi7wAADs8AAC8PAAAGbwAADw7AMCJvQAAIrwAQMI8AABWvAAAzTwAYEm9AABxPAAA+LoAQCe9AIDzvAAAW7wA4Ca9ANCIvQDgk70AcJK9AACNPAAAET0AQKO8AADXuwCwhL0AINu9AIBSvQBA4b0AAFk8AABuvABACT0AwG69AICZPABgAj0AmAA+AGDhvQAA/DwAgLA8AMC9PABgzj0AAMK7AFCXvQBAyjwAACw7AGAbvQCAFT0AgGI9AFCTPQDAsDwAgEI8AKBjvQAAUjwAAFo7AACwvAAwh70AYBk9AAAlPQAAWrsAgFq8AEBtvQBAmbwAIGo9AIDjvACARTwAAD08AABuvADgk70AAGu8AAAOvACAOj0AgI68AID7PADA770AgBG9AACiOwCAabwAAP28AEC0PAAwtD0AAHQ7AOAIPQBAhTwAgGg8AIARvABART0AYBa9ALCrPQBAiTwA4JM9AIB1PQDwpT0AcIw9AID+PACgRT0A4I+9AAAKPQAA7jwAIF+9AADbvACA5jwAAIC6AJCpvQBAIL0AAMu7ACBWPQCwkr0AwCO9AOAqvQDAC70AAPS6AECRvAAAHT0AAEC9AFDLPQAAcbwAwIE8AADmuwBAlr0AwG09AABHvQAgHD0AgDe8AICIPADA1bwAAB+8AJCHPQBASj0AgC89AMDjPAAAjDwAABM8AMD7vADAZ70AAHY8AABVvQCgwz0AYC69AIANvAAAcLsAQDe9AKBpPQAAbrwAAOw6AIDEvACAuLwAAA68AKCsvQAwjr0AABc8AACIPACAkz0A4GI9AMCfPABgCz0AkIq9AEDbvABAhDwAgM88AMCrPACwiL0AwPE8AIBAPQAAKTwAgEA9AACbPACgNj0AAAG9AIDxPADgJz0AALC6AABwvABABT0A4Eo9AECRvABAZL0AgEa8AAA2uwAA6DsA4BA9AGAqvQAApDsAAOy6ACADvQBgwz0AAO07AAC9OwDAb70AYCa9AADGuwAA3DsAAJE8AEAVPQAwwL0AgCu8AEB0vQAAvr0AAE88AAAQvQBgF70AAJE7AIDgPACA0rwAQLo8AFClPQBgEz0AAMs8AIBlPADgOb0AgH69AAD0PAAAobwAAEc9AIB7PADghL0AYCs9AIA1vACwqz0AAAA5AOB7PQAAF7wAwEG9AIBzvAAADD0AAGY8AACGuwAgCr0AAFw8AMDCPABgbr0AgAE8AAAOPACAXL0AAMm7AADCvACAMDwAwIA8ACAsPQCAmrwAcJu9AAApPACAHr0AALM7AOA8PQAAtLoAQEa9ACBBPQDA9jwAcJI9AECCPABQir0AYHa9ABCsPQAAILwAAKU7AGAXPQCgpD0AIPg9AOBCPQDwmr0AQAa9AKBnvQBgRD0AABC6ACCUvQAAXrsAgD+9AABzvQCAmLwAgIK8AACJOwCwiL0AAMC6AID4PACQjD0AgBE9AEBIPQDgTD0AAMQ7AABPvABgYb0AAJS6AMDLvQAggb0AgAI9AABfPACAKj0AYE49ACCUPQBA77wAgEC8AACwOwCAK70AQNA8AAAJPQCA/LwA4EK9AOCLvQAAXT0AQAs9AMAUvQBAvTwAgJk8AACbPAAAWDsAMIg9AECPPAAA2TwAANW7AJCAPQCAdzwAoBY9AECLvQAgET0AYF69AOBTvQDgID0A8IA9AABpvAAA7DsAgK88AIAIPQAAw7wAQDC9AMB7vQBAkLwAwN88AKBDPQCwg70AAH88AFCXPQAAnL0AYA+9AKB6PQDAtTwAANQ6AEDVPADAsj0AADY8AIAOvACAmL0AAKi8AMBVvQDAhbwAYA29ACAePQCgJj0AAL67AACZuwDA5bwAwNE8AIB0vQCAT7wAgBO9AEClvABAgr0AAEy7ACC9vQDQvr0AABC7AIAUPAAger0AAC49AMCcPACAhbwAENE9AECtPQBATr0A0Kc9AICMvACABr0AAH28AMA0PQBgnj0AsIc9APCEvQDgC70AgF+8AIBOPQAALL0AABW8AIAQvQBAxrwAAEs8AACwuwDAf70AgDk8AABUvAAgIL0A8JC9AADuOwAAGLwAQEu9AAC+PAAAwjwAwMA8AICGPACgDb0AgBQ8AABYugAAXDwAwKU8ADClvQDgnT0AgHi8AMBnvQCAej0AANw7AABAugDQkr0AAK07AEATvQDgrj0AQI68AIA+vACABL0AgI68AEBLvQAAzzsAAAC8APCnPQCA8bwAAI68AKAiPQCAQ70AMLw9AADBuwBwiL0AACC8AAArPADAPL0AAKI7AODNPQAAS7wAAHI8AKBbvQDwtb0AALC5AAAAAADAQb0AAJw6AGAKPQAAhLoAgBu8AED9PABAQr0AAHi6AEDKvACAHz0AAK08AADfvACAKLw=","chunkHash":"c0cff9537b630d728c9354fa9189d8f0a564c653ba9d4e7910468f1d04637c54"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef save_pointcloud_plotly(points, output_path, title=\"Point Cloud\", color='red', size=2):\n    \"\"\"\n    Save a point cloud visualization as an interactive HTML file using Plotly\n    \n    Args:\n        points (numpy.ndarray): Point cloud data (N, 3) or (N, 6) with normals\n        output_path (str): Path to save the HTML file\n        title (str): Title for the visualization\n        color (str): Color of the points\n        size (float): Size of the points\n    \"\"\"\n    # If points include normals (shape[1] > 3), just use the position part\n    if points.shape[1] > 3:\n        pos = points[:, :3]\n    else:\n        pos = points\n    \n    # Create scatter3d trace\n    point_trace = go.Scatter3d(\n        x=pos[:, 0], y=pos[:, 1], z=pos[:, 2],\n        mode='markers',\n        marker=dict(\n            size=size,\n            color=color,\n            opacity=0.8\n        ),\n        name=title\n    )\n    #...\n```","range":{"startLineNumber":136,"startColumn":0,"endLineNumber":163,"endColumn":0},"embedding":"AOAFvQAA8TwAQA09AKDUvQCAN70AcJu9AIDNvABAjzwA0Jc9AMC1vADAvzwAAEM8AACCvAAgZb0AoBa9AMCFPQAASzwAQNc8AIBlPABAvjwAgJY8AADguQBQlj0AAAg9AECvvABA8zwAALO8AOA9PQBAlDwAgFE9AABYvQCARr0AgBG9AAAWvQCAf70AgDc8AAAWPACAkjwAAII7AABYOwBwjz0AgBm9AKDEPQCAaTwA4Kg9AOAbPQCAhzwAAIw8AABvPQBA+jwAAMk7AKBqPQAAdLwAIHe9APCOvQAAwLgAQDa9AADlPAAAYDoA4D+9AODYPQCA17wAAIC7AED+PACAJ7wAQO28AIBUvQAAxLwAgCi8AMCDPAAgQz0AQPe8AABgugAAkLkAwNm8AIAQvADAAL0AgGG9AKCDvQAQlL0AQLC8AACKuwCA9LwAcIK9AECIPAAgWL0AEK69AIAMvQAAJb0A4AA9AACAOgDA9TwAAHm9AACguQCAu7wAwPM9AJCPvQCAIjwAQEU9AIASvAAgiT0AgEy8AMBQvQBAvLwAALY8AIBGvADgaj0AAFU9AICFPQCAIDwAAMO7AECUPAAAmDoAgL48AKAevQDwor0AgBA9AAB+PABAgrwAIIG9AAAcvAAAeLwAwMY8AAD7vACAhLwAwNQ8AAAxvADwor0AYC89AEABvQCA2TwAgAa8AGCgPQAw2b0AQLy8AIClvAAACzwAQNG8AECMPACgQj0AMIE9AOArPQAA2TwAACC5AOAEvQDAtTwAwGK9AMC/PQAAMDoAMJM9ACBAPQDwgj0AoKA9AAAfvAAAxjwAoF29AIB2PAAgET0AwM+9AIAWvQAAQzwAALq8AIDpvABgd70AwLe8AAC3PACgHb0AAIy7AIDvvAAwo70AwFK9AJDFvQBgcz0AYDM9APCPPQDgG70AwPM8AMDcvADAJL0AgEE8ABCYvQAAnzwAABA6AMA/vQDAeb0AQHU9AIA2PQAAiTwAAG67AMBqPQAgUb0AAF48AOCZvQCgCb0AAGa7ACBDvQDAhD0A4Ee9AACQuwAAMTwAgDq8ACCSPQCAOL0AgBi8AMCGvAAA8TsAAIY8ACBivQBAcr0AAMY7AAAwugBwgT0AAK48AIBSPACAOLwAYGS9ACBKvQDQij0AAN47AAAougCgjb0AwNk8AAAzPAAAsLsA4EM9AIAaPACAST0AYCG9AAB4PQBA2jwAgJe8AIAJvADgFT0AwKU9AAA4ugAAt7wAQBw9AACjuwBA17wAwAU9AEAkvQAATLsAAEC9ACBmvQDg8j0AAOU7AACYuwAAGb0AAEY8AIDKPAAALDwAgJW8AOCNPQAQwr0AgCC8AJCivQBAfL0AAKo7AABKuwBAY70AAEg6AECwvADAYb0AAHU8AGCJPQAgBD0AAKO7ACAjPQDQl70AYAm9AKASPQDgK70AAAA4AICFvABgOL0A4AQ9AADkuwDAxjwAgBy8AADvOwCASbwAQIC9AICovQCANj0AwNQ8AIA5vAAANr0AABQ8AACIOwDQur0AwFY9AIACvQCAnL0AQLY8AOAhvQDgjT0AgFS8AABfPQAAcjwAMKO9AOBcvQBASL0AAHS7AIB/PQCAMjwAgCK8AMC/PACA3DwAEKM9AID4PACgSb0AwMC8AKDDPQCAbzwAwCK9AMCfvABgqT0A4LA9AAByOwDwmr0AwKY8AAAPvQBgJj0AQOg8APCOvQCALDwAQBK9AABxvQCA4rwAAHW8AIBOvAAghb0AAAy9AGANPQBAZz0AgOi8AECyPADAj7wAwMQ8AAC4uwCQ0b0AALK7AECOvQDAGL0AAAc9AMC+vABAjjwAgCI9AFCiPQCAoLwA8J+9AIBlvABAbb0AsI49AED0PAAAWjsAYCm9APCOvQAA3DoAwNc8ACB2vQAAtjwAADg8AAC8uwAA1LsAoHk9AGBBvQAAPDsAwJs8AIAkPQCgRD0AwDo9AIBavQBAjzwAYF69AKBIvQDAPT0AQLs8AAA3PABAsbwAAMS7AMDHPAAAfrwAAJK8APC5vQAAhzsA0IE9AMDyPADA0bwAABs8AFCqPQBw6r0AgNe8AGA1PQAAxTsAgB49ACARPQDgRD0AAFY8AGBTvQAwgr0AgLs8AMDpvAAAGr0AACC5AAAVPQAAfTwAwIK8AADOvABwor0AAG68ADCHvQAAxrsAYGy9AADjOwBAlLwAgGa8AGC5vQBAa70AUJ89AMDGvABgZL0AgAA9AAAYOwAgeb0AAJo9ALCmPQAAijwAgMM9AICTPAAAirsAAO68AECNPACAZz0AwCI9ACCCvQBgOL0AIB69AOC/PQCAgrwAQDK9AEBqvQAAZr0AgAe8AADUuwDASr0AgP88AADgvABAtbwAQJC8AIBGPACAaTwAYAC9AACvvAAARLsAwME8AEAOPQDQj70AQNY8AIAhPAAgLT0A4Bs9AKAzvQCwyT0AgF28AEBfvQDQyT0AQFE9AADrOwAgRb0AwPA8AMAuvQAAfz0AAJM8AMDNvACAP70AAI28AABtvAAAx7sAADS8AOCYPQAAZDwAAJu7AACwugAArTsAoJE9AADzOwCgSL0AAFu8AAAuvAAAUr0AAMu7ACDBPQAAH7wAAJw7ALCivQDQ8L0AwBQ9AADlPAAgbL0AAIu8AACsugAAhTsAAFa8AECHPAAAcr0AANS6AACHvACAXbwAAPk8AADuvACAjzw=","chunkHash":"9ddb6bb308ec08515d007f4c251362933a3ff207aeb57d09b24c024cb733ddd0"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef save_pointcloud_plotly(points, output_path, title=\"Point Cloud\", color='red', size=2):\n    #...\n    # Create figure\n    fig = go.Figure(data=[point_trace])\n    \n    # Update layout\n    fig.update_layout(\n        title=title,\n        scene=dict(\n            xaxis=dict(title='X'),\n            yaxis=dict(title='Y'),\n            zaxis=dict(title='Z'),\n            aspectmode='data'\n        ),\n        margin=dict(l=0, r=0, t=30, b=0)\n    )\n    \n    # Save to HTML\n    os.makedirs(os.path.dirname(output_path), exist_ok=True)\n    pyo.plot(fig, filename=output_path, auto_open=False)\n    print(f\"Saved point cloud visualization to {output_path}\")\n    \n    return output_path\n#...\n```","range":{"startLineNumber":164,"startColumn":0,"endLineNumber":184,"endColumn":22},"embedding":"AICtvABAzzwA4GU9AFDLvQCwgb0AcKO9AABguwAAmTwAAJc8AGAAvQAAGLsAAI07AEDOvAAAa70AYD29AICNPQAAzDoAoAI9AIDCvADgNz0AQP88AAA7PADAbz0AwC09ALCYvQBACz0AQPa8AMBcPQCAXDwAQKI8AAA6vQCALr0AgKy9AIAivACgsb0AAFi6AIAOvAAAMDsAIAQ9AAB3vABglD0AwD29AJChPQAABL0AAKQ8AAAMPACACjwAACC5AABaPQBAoTwAAHS7AADiPACABTwAIGO9AOCXvQAAJrsA4Bq9ACATPQCAGzwAgB69AIAEPgCA/LwAABq7AAAsPQAACrsAAJq8AEBKvQBALb0AAGS7AIABPABA2TwAAHO8AAD6OwAAhbsAABi8AID9vAAAm7sAAGi8ACCbvQAgrr0AIAW9AIB8PAAAnjwAoCS9AAAvPADQir0AANO9AFCDvQDATb0AgJM8AADhuwBAzzwAwO68AICqPAAAqDoA8N89AKCbvQAAAjwAgAs9AIBrvACAxT0AQKe8ACBfvQAAjzsAgA09ACAEvQBgID0AYEE9AECUPQBgJj0AwLu8AADLuwAAwrsAwAg9AAAMvABAfr0AACg9AICgPAAAdDsAwPi8AIC+vAAAR7wAACk9AIBhvACABDwAQOw8AIAvPABQqL0AgJc8AABCuwBgFD0AAGC7AMCZPQAgw70AQEe9AIASvQCAgrwAgJK8AMCHPACgUj0AAHo9AAA8PQAA0DwAgHE8AGA5vQDgAj0AQKC9AEDTPQAABrsAIJk9AAATPQDgfz0AoJc9AAAAOAAAoDsAAL69AIDjPACA8zwAoKK9AIDSvAAAEDoAgBu9AEDAvABgAL0AwOe8AMDTPABAcr0AgAu9AKBWvQCwt70AwC+9AOCavQBA+DwAAAo7ACCRPQCAZ7wAAAe8AIAzvADgSb0AgL48APCDvQAAszwAAKg7AKAUvQDgDL0AwKQ8AMB+PQAAnz0A4B49AOChPQAAJjsAwMM8AED+vAAArbwAAIm7ACBZvQCQkT0AAKy8AIA2vAAANzwAYDC9AGCPPQCAD7wAABg7AEDxvABA5bwAwLE8ACBzvQDwvr0AgFy8AAAgugAAMT0AQCQ9AMAGPQAADrwAAGi9AGBNvQDAST0AANu7AEDVPABQiL0AoBI9ALCMPQCAKTwAAHs9AAAzPABAgD0A4CG9ADCJPQBgKj0AAG47AECkvAAAMj0AsIM9AAD6uwDgKb0AwBU9AIBRvAAA7LwAwMU8AOA/vQAA0rsAgN68AIBmvQBQxj0AANm7AIBLPABgKb0AAFg7AIAvPAAAODwAAP87AKBKPQAAlr0AwJi8AIBwvQBgYr0AAPc7AAAovADgbb0AAB28AAAguwDQib0AAF88AMCDPQDA4TwAAIQ8AEC3PAAQib0AABa9AAAqPQCAebwAAD09AABYuwCgMb0A4CU9AACgugAAPj0AAFQ7AMDZPABAz7wAoGS9AMDtvACgGT0AgB09AEDjvADAz7wAAGo8AADHOwBga70AAOA8AGAOvQCwn70AQJw8AIA5vQCAiDwAwJK8AADRPADAzzwA8L69AMCZvABgEb0AAMA7AKB3PQAA2bwAAIa8AMBBPQDANT0A8Io9AABfPADggL0AgPS8AODUPQAAILsAAMQ7AAAAOQCQnT0AUNU9AKBMPQAwjr0AgFO8AECNvQDgBz0AQLQ8AGCHvQAA7zsAoCm9AKCFvQAAorsAAL27AAAxvAAgMr0AgE28AOBlPQCAaD0AAJE8AAD6PAAAwjwAgKg8AMCKvADwkb0AgC+8AAB/vQCwpr0AgH49AIA3PAAgEz0AwNU8AKC4PQBgV70AQEm9AACeOwBgEr0AAAo9AADlPADAiLwAYEq9AICQvQAAEjwAYEo9AABHvQAAZzwAgLw8AABeuwAAnLoAIJQ9AMAdvQAALrsAANw7AECHPQCAkTwAwIM8AKB3vQAAPDsAsIO9AOBfvQBAKj0AcII9AICHvAAAojwAgKU8AAAtPAAATLwAwIS8ACBtvQDApTwAoE49AKBAPQCgYL0AAAAAAKClPQDQu70AAJC7AGBDPQAAgjwAANA8AIBkPQDgvT0AAL07AGAIvQBgbr0AgCA8AGBnvQCAi7wAgBe8AEBUPQDAmzwAgJ+8AADrvACAi70AgIE8AFCDvQAAP7wAQEm9AAA2vAAA8bwAAIu8APC1vQBgyL0AAN08AABevACAHr0AQPU8AGAiPQAAIb0AYNE9APCdPQBAg7wA4NI9AAB4OwAAarwA4DO9AMCRPACANj0AoAg9AECbvQBARb0AwOe8ADCCPQAA6bsAALi8AGCXvQBgEb0AwJs8AADoOgBgdb0AgOo8AMCAvADA+rwAACC8AADjOwAAIrwAQE+9AAD0OgAATjsAgFw8AIAEPQBgX70AAPI8AABMPACAijwAAKo8AICXvQAwzT0AAL67AMAxvQCAzz0AACo9AAAQPAAAlL0A4Cc9AMAevQAgtz0AAOC5AICJvAAA/bwAADq8AACivAAABDsAAIC5ANCMPQCAQDwAAIO7AADGPACArLwAgPk9AAACPAAALL0AACO8AMCmPADgpb0AAKA5AGCnPQCAXrwAAIo8AGCIvQBQr70AACw9AID6PACwj70AgA68ACASPQCAPDwAAEg6AAC1PAAAPr0AAJ67AGACvQAAsDwAANk7AID0vABAMD0=","chunkHash":"c3286ca553d75eb4b8598769286fa822bcb30eba60d4d085175280d326952385"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef save_processed_data(sample_id, raw_mesh, smoothed_mesh, decimated_mesh, point_cloud, output_dir=\"results\"):\n    \"\"\"\n    Save processed mesh and point cloud data following MorphoFeatures approach\n    \"\"\"\n    # Create output directories\n    mesh_dir = os.path.join(output_dir, \"meshes\")\n    pc_dir = os.path.join(output_dir, \"pointclouds\")\n    html_dir = os.path.join(output_dir, \"html\")\n    \n    os.makedirs(mesh_dir, exist_ok=True)\n    os.makedirs(pc_dir, exist_ok=True)\n    os.makedirs(html_dir, exist_ok=True)\n    \n    # Save meshes at different processing stages\n    sample_id_str = str(sample_id).zfill(6)\n    raw_mesh.export(os.path.join(mesh_dir, f\"{sample_id_str}_raw.ply\"))\n    smoothed_mesh.export(os.path.join(mesh_dir, f\"{sample_id_str}_smoothed.ply\"))\n    decimated_mesh.export(os.path.join(mesh_dir, f\"{sample_id_str}_mesh.ply\"))\n    \n    # Save point cloud\n    #...\n```","range":{"startLineNumber":191,"startColumn":0,"endLineNumber":207,"endColumn":0},"embedding":"ABCePQBQpz0AgF49AFCCvQDAvrwAQEi9AMDfvAAAqzwAwMk8AIBTvADgZj0AAN28AIAkvQCAxL0AALu9AICCPQDAjTwAIHY9AECSPADgPT0AoIQ9AAD6PABAzTwAgE08AMC1vQAAILoAACi9AMBhPQCAyzwAgHi8AICIvACAabwAkKa9AAC7uwCwvr0AQE89AOBovQBAbT0AIAa9AIBCPADQ8z0AMKC9AMAAPQDAq7wAAOw6AACvvAAgEj0AQFi9AJC0PQCAyjwAQNo8AMAnPQDAtjwA4M69AMDnPADA8jwAAKw8AKAbvQDAK70AgIi8AKCPPQAgfL0AwPA8AACavAAAADsAAOA5AOBLvQAAljsAAEI8AEA/PQAAqTwAwLg8AECpPADA+LwAANa7ACCwvQBggL0AgPo8AMAPvQDge70AQBu9AAA/PABA5DwAgCW9AOBLvQAA07wAgKe9AMDNvABQqL0AgAa9AOAJvQCAcT0AkI29AADKOwDgXz0AQMw8AKB7vQAAzbwAAPU8AAAWOwBgsD0AANa7ACA9vQAAcDwA4Eg9AKBlvQDwjD0AgF48AAD4uwCAjTwAwOk8AGCwvQDgaD0AwHI9AABbPQAAVDsAwEI9AGATPQCAJbwAgO68ABCSvQBAwzwAAIA5AMDfvAAAlrwAwII8AAAnPQAAl70AAMc7AMCCvABA3DwAgNE8AHC7PQDA170AAKy6AEDSvAAA3DsAANk7AACHOwAABT0AALM8AIAsvABgfD0AUKA9ADCSvQCAV7wAYCi9ANAQPgCAU7wAoEc9AEDXvAAAQDoAII49AECuPACA3zwAoBG9AADeuwAAwLsAMK+9AAC0PACAbTwAQIu8AMD4vABAzLwAALy7AEDmPABgUr0AAKs8AHCSvQBQo70AQIi8AMCpvQDAJj0AIBK9AADfPABAqbwAgE28AMBkvQDgO70AAEy7AOCbvQAAoDwAIDa9AID5PAAAab0AgHs8AEClPAAQuj0AAGA8ACCtPQBgCT0AgB09AMAwvQAgOr0AQMQ8AEAsvQCglj0AAHG8AECEPAAgHb0AgPK8ACAZvQCAAD0AYBY9AMCxvAAA6rwAwNC8AGAHvQCAOb0AAEi6AAC8ugAgjj0AYHE9AEBNPQCAML0AoAe9AOBqvQAAoDkAAI67AAC7PAAAybwAAI28AGAvPQBA6jwAAPs8AACIvAAArrwAwFW9AADROwAAK70AgLA8AIBVPAAAXLsAEJI9AACzOwDAAL0AAPi7AOBavQAAXzwAsJI9AABrvQAAorsAAEA7AACEuwDAST0AgCc8AAD7OwBAQL0AAEE8AMC/vABgAD0AAKE7AAA+PQDw270AAJO7AEB5vQBwnr0AIDY9ADCIvQDAszwAAJU7AACgOgDATb0A4GQ9AIAxPQDgRj0AgHQ8AIAtPQAA/jsAAIy6AAAKvQBAirwAICE9AADHPAAAmr0AIIA9AAAtPABAOT0AQKE8AICPPADADb0AALy9AIAUPQAAjrsAAIk7AACMOgCAObwAIAM9AID5PACAQ70AQAS9AIA2PADADL0AYBa9AIAJvQBAlzwAgP+8AIAYPAAApTsAQGS9AEBKPQCAibwAIAE9AICZPABAJL0AQNu8ACB0vQDAE70A8LA9AADvOwAA1bwAgBW9AOB9PQCAl7wAABM8AEDJPABQsz0AcNo9AMB8PQAA6bsA4FS9AMA8vQBA4TwAwBm9AMBGvQAAqjwAgIi9AACcvQDA2zwAAPQ8AAAnPADAVr0AAI+7AMC9PABwvT0A4DY9AOABPQDgSz0AIB09AAA4uwAg7L0AwHu9ANCvvQAANL0AoGg9AOBBPQAAnDsAQEA9AMDWPAAAYLsAgF68AACxOwDAhLwAgKs8AABuPAAwjz0AAJm8AACQvAAAa7wAgES8AACPvACAMT0AAIw9ACBiPQAA3DoAIHI9AGBdvQCAqTwA4Bm9AADyPAAATDsAQJy8AICavABACT0AcIS9AADivAAArbsAUNg9AACDPAAgUj0AYNY9AADVOwDAg70AQMK8AEDxvACQiT0AQOc8AECGPADgOb0AgHQ8AIBtPQDATb0AoDA9ACBePQBA5DwAgH09AIApPQCgFz0AQIm8AAAnPADAY70AQI68AOABvQAgRr0AAEA7AOB8PQAALDwAgHa8AADEPAAA7rwAUJQ9AKDNvQAA+zwAQB+9AAAGvQAAZb0AYL+9AAAEuwAgt70AYBS9AIABvAAAVrwAAMu7AKBHvQDAJr0AoGI9AEAAPQCADLwAAIo9AAD+OwAAS70AgB+9AADbPADgYD0AAMc8AMB+vQDgJL0AAMq7AIAFPQBgLL0AAAy8AGCMvQAAmDoAgAM9AMCBvAAAi70AAOG7AEAoPQAwjb0AUK+9AMDHvABgK70AAIw7AAAjvABgGT0AADC8AAAZvAAAAbwA4DA9AMDUvADAOD0AAEE8AIDJvACAJjwAQDO9AADjOwAA/zwAQOY8AADPuwCgAL0AIBY9AIBlvQAA0DoAQAg9AEDDvADwgb0AgBq8AIDUvAAALDsAgJM8ACB/PQBA9bwAQFa9AABZPQBgRL0AoNU9AMDevACACzwAAK+7ACCCPQBAQ70AAIg7AOBePQCAXLwAgMg8AGA+vQBgZ70AgBk8AAD0PABAyLwAAEE8AECpPQCAHzwAAC49AEAOvQAA9bwA4LW9AAARPAAAVLsAAIu7AMDwPADgJT0=","chunkHash":"279bafbd5050ed1f0ad6b9e22b04b523a594ba2e8a851c6a5f9f56d73b1e602c"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef save_processed_data(sample_id, raw_mesh, smoothed_mesh, decimated_mesh, point_cloud, output_dir=\"results\"):\n    \"\"\"\n    Save processed mesh and point cloud data following MorphoFeatures approach\n    \"\"\"\n    #...\n    np.save(os.path.join(pc_dir, f\"{sample_id_str}_pc.npy\"), point_cloud)\n    \n    # Save HTML visualizations\n    save_mesh_plotly(raw_mesh, os.path.join(html_dir, f\"{sample_id_str}_raw_mesh.html\"), \n                    title=f\"Raw Mesh - Sample {sample_id}\", color='blue', opacity=0.6)\n    \n    save_mesh_plotly(smoothed_mesh, os.path.join(html_dir, f\"{sample_id_str}_smoothed_mesh.html\"), \n                    title=f\"Smoothed Mesh - Sample {sample_id}\", color='green', opacity=0.6)\n    \n    save_mesh_plotly(decimated_mesh, os.path.join(html_dir, f\"{sample_id_str}_final_mesh.html\"), \n                    title=f\"Final Mesh - Sample {sample_id}\", color='red', opacity=0.6)\n    #...\n```","range":{"startLineNumber":207,"startColumn":0,"endLineNumber":218,"endColumn":0},"embedding":"AKB5PQCAmz0AwE49AKB0vQDA5bwAID29AIDbvACAYjwAACY9AAAFvAAAZz0AAO67AKBAvQCg2r0AcLK9AGCGPQBA1jwAYH89AIAEPADAIT0AAFE9AMCtPADAET0AAIk8APCovQAAALkAYBS9AKBrPQAAID0AAIC7AAChvAAAjrwA4Jm9AECEvADQzb0AQF09AMBAvQCgQT0AoAy9AECUPACA5j0AQJS9AEDtPACAT7wAAFA6AADJvABACT0AYH29ADCqPQAAFz0AwL48ACAqPQAApDwA8My9AIB4PABABj0AgH48AMC/vAAgOb0AAEa8AMCKPQCgXr0AIAE9AIAavAAAgDsAgCW8AKBevQAAJzwAwNo8AEAcPQCAajwAAJw8AEClPABA/LwAgIW8AAChvQAwh70AgNs8AEAxvQAwiL0AoCK9AABCPACA1TwAwA29AOA4vQAA4bwAUL29AMC8vAAAsb0AAM+8AMD8vAAAWT0AsKC9AIATPACgTj0AgCs9ACBrvQCAy7wAQI88AIBLPAAAuD0AAOu7AKA9vQAA4zsAwFQ9AIBFvQBgnD0AwLQ8AABgugDAlDwAAAo9AJCZvQAAWD0AQHc9AOBJPQAA8LkA4CQ9AKAlPQAAdLwAAAq9AECJvQDgCT0AAP67AAAIvQAAYrwAAME8AIAQPQDAkb0AAIM7AMDVvACA7DwAAHo8ABCjPQDQ8L0AAL27AEC+vAAACjwAAA08AAALPABAHz0AgGk8AECDvAAwiT0AYIk9AFCSvQCACLwAYBi9AEAIPgAAILkAoBs9AACovACAYDwAYI89AACLPABArDwAACq9AAAnPAAAursAULK9AIBMPAAACzwAAHa8AIAgvQCA8LwAANW7AABSPAAgXb0AQLA8AICdvQCQmL0AQLy8APCzvQDgQT0AwFy9AMBPPQBA1LwAAJY7AABhvQCgEL0AAF48ABCQvQDAhDwAIB+9AADePABQl70AgBo8AECxPADgkj0AAP47AKCRPQDACz0AoD49AEA5vQAgR70AQO88AIASvQBQkz0AgKq8AAA5PADAHL0AgN28AABnvADgCD0AYB89AECKvADA1rwAoAq9AKAGvQAAzLwAAGy7AAAjvADgqT0AgEM9ACBvPQCAXL0AAAm9ANCFvQAATDsAAAA4AIA2PABAhrwAgG28ACBYPQCAbjwAIBk9AIBfvACAkLwAwEq9AABDPACA4bwA4B09AECTPAAA57sA0K49AAAmuwBAIr0AACi6AGAjvQCATjwAEIU9AOBNvQAA4LsAALc7AACMugCgTz0AgIY8AABguQBAXb0AgFA8AAB4vADA1jwAADg7AMBNPQCw2L0AALG7AKCNvQCAnb0AIDE9ACB6vQCAozwAAPg6AADwOwDgX70AIF49AIBIPQDgYD0AgAo8AGAZPQAAursAAOk7AGAKvQDAi7wAQBU9ACAJPQDApL0AEIc9AABzPAAAZD0AwIY8AIBcPADgFr0AAKe9AEDBPAAA3LoAAKe7AACAuADAiLwAQBU9AADaPABAZb0AgAG9AABcOwBAJb0AAA+9AMAYvQCA6zwAQAq9AMCOPAAAbrsA4Fa9AKALPQAAprwAAKU8AIC7PACAIr0AAJG8ACB0vQCABb0AcJo9AADdOwBAAL0AIH+9AOCYPQAAZrwAgEu8AAA2PADAqT0AMNQ9AKBuPQAAGbwAYHq9AMA0vQAA5jwAIAm9AIBIvQAAtjwAIIi9AHCgvQCA0zwAwOM8AAACPADgT70AAJk7AMAEPQAgmT0AYF89AEDuPADAtTwAQIk8AACYuwDg6b0A4JG9ALCtvQAgM70AgF49AOAtPQAAaTwAwGI9AADrPAAAjDoAgH68AACQuQDA2LwA4AI9AADHPABgkD0AwOu8AGALvQCApLwAAIe8AACEvACgGT0AAKY9AGB4PQAANLsAYFQ9AABGvQAAzzwAAK28AIALPQAAKDoAAMC8AIAHvACANz0AYLq9AADtvAAAODsAML09AMCpPABA/DwAMNo9AAAsOwDgab0AgLO8AOACvQBQhj0AAP08AAB3PAAAFb0AAFQ8ACBlPQBAiL0AIBg9AKBxPQDA7DwAoHo9AIAXPQBgMj0AAP67AICePADAbb0AABO8AAARvQBge70AAO47AEB+PQDAlDwAAL28AEDkPACAt7wAMIw9AJC5vQAgAD0AgEO9AIAFvQDQhb0AELC9AADYOwAApr0AoAa9AECtvAAAT7wAAMC4AIBTvQCABr0AAGo9AADYPAAA0LkA8IM9AADIuwDAOL0AAFC9AICsPAAAbz0AoCk9AIBGvQAALr0AAJC7AAAnPQAgKL0AAGK8AGBavQAAeLoAgMo8AMDJvABAeb0AgHG8ACAkPQCwlL0AwLW9AICUvADgAb0AAKm7AIBCvABABz0AACK7AACwugDAvLwAIDE9AKAVvQBwgz0AAGE8ACAUvQAAkDsA4Cq9AAA9vADAsTwAwN48AADuuwDA6bwAYDQ9ACBPvQCAFbwAAAo9AEDDvABgj70AAIG8AADPvAAA2zsAwIY8APCMPQDAD70AwHm9AEBUPQCgKb0AUNs9AIDLvAAAKbwAAPw6ADCRPQAgYL0AABk8AKBuPQCAf7wAAMo8AABMvQDwgr0AADI8AMDgPADA27wAAJA8AHC+PQDAjzwAYAI9AICSvAAA0rwAAK29AIApPAAAELwAAGq7AEAXPQAgHj0=","chunkHash":"5a449b7fdf791f88662bdd82c3c17dd4d35a288fd6017657e6a6791b395cbef8"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef save_processed_data(sample_id, raw_mesh, smoothed_mesh, decimated_mesh, point_cloud, output_dir=\"results\"):\n    \"\"\"\n    Save processed mesh and point cloud data following MorphoFeatures approach\n    \"\"\"\n    #...\n    save_pointcloud_plotly(point_cloud[:, :3], os.path.join(html_dir, f\"{sample_id_str}_pointcloud.html\"), \n                          title=f\"Point Cloud - Sample {sample_id}\", color='purple', size=3)\n    \n    print(f\"Saved processed data for sample {sample_id_str}:\")\n    print(f\"  - Raw mesh: {os.path.join(mesh_dir, f'{sample_id_str}_raw.ply')}\")\n    print(f\"  - Smoothed mesh: {os.path.join(mesh_dir, f'{sample_id_str}_smoothed.ply')}\")\n    print(f\"  - Final mesh: {os.path.join(mesh_dir, f'{sample_id_str}_mesh.ply')}\")\n    print(f\"  - Point cloud: {os.path.join(pc_dir, f'{sample_id_str}_pc.npy')}\")\n    #...\n```","range":{"startLineNumber":219,"startColumn":0,"endLineNumber":227,"endColumn":0},"embedding":"AOCCPQBwjT0AwDI9AIBnvQDAlrwAYE+9AMACvQAADzwAQA89AIAKvADAcz0AAH68AGAsvQCgxb0AAL+9AHCEPQBAqzwAgGg9AAAwugCAJz0AwE89AICyPACgOT0AAEM8ANCcvQAADDsAgBu9ACBJPQDAAD0AABA7AMCIvACAarwAwKK9AADTuwCQ1L0AAEs9AGBJvQAgLj0AwPa8AIA1PACg7D0AoJS9AEAdPQCAeLwAACg7AKADvQCA7jwAAGm9ACC0PQAgET0AQLs8AOATPQAAlzwAULq9AIAyPADAmzwAgAQ9AADrvAAgK70AAJu8AHCbPQAgdb0AQAU9AAAyvAAATDsAAPe7AAB9vQAAiTsAAEg8AMAcPQCAyzwAAJc8AIBpPACgAb0AQJK8ACCvvQAgUr0AgJ88AEBCvQBgir0AQOi8AIAKPAAAAz0AoAu9AEAGvQDAjrwAwMW9AIDTvAAQmb0AgKm8AAC8vADgPT0AYJi9AABWPADAXz0AAB49AOB7vQCA1LwAwJQ8AAAxPABwpT0AAJ+7AABtvQAAjzsAoFM9ACBHvQCgmz0AAH47AAD+uwCAbjwAQAU9AACevQCgXD0A0JA9AIBLPQAAHTwAQHM9AAA8PQCAR7wAABe9APCQvQBAqTwAgAG8AMD7vACAa7wAAIU8AAATPQDQrL0AAAo7AAA+vABA8DwAwMk8AGCkPQCw7b0AAOA5AMCFvAAApTwAgA08AABiPACAET0AANg8AIBZvAAAkD0AgJE9AJCVvQCABLwAoCO9AGgIPgAAUbwAIE49AIBMvAAAlDwAIJg9AED3PADAjTwAYCG9AAD0ugAAw7sAIMa9AIAbPACAazwAgIq8AKATvQAgBL0AAHy7AICePABAUb0AAHU8AICfvQDAm70AwKe8ACC0vQAAKD0AADa9AMAhPQCAgbwAAIC5AEBQvQBgB70AAM07APCVvQAAmDwAQLq8AICzPACggr0AAJI8AMC3PAAgrT0AgEo8APCcPQCA2TwAYB49AAA0vQDAUr0AQNw8AEAFvQBwpT0AAEK8AABLPABgF70AwOC8AACXvAAAjjwAQCs9AACPvACAY7wAQPi8AMBUvQAgHb0AAHI7AADxOwDwjD0AgEo9AOBtPQCAMr0AgOS8AMBsvQAA2rsAAHC6AABtPACA6bwAAMy7AOBMPQCAuTwAQOU8AIBqvAAANbwAIEi9AADiOwDA/LwAQPc8AABKPAAA1LsAMLI9AADQugCAAL0AAAC8AKBEvQAAZDwAYJY9APCCvQDAq7wAADQ7AACCuwDAdj0AgGA8AACUOgCgSr0AAJo8AMClvADArTwAAJc7ACBVPQCA7L0AAAa8AGBuvQCApr0AwDY9AIB6vQCAoDwAAPe7AADHOwAAWL0AoGU9ACBZPQAgXj0AgEM8AABFPQAA/rsAAFq7AMC5vACA8bwAQMY8AIDxPADQnL0AkIg9AIAFPAAgYz0AAPk7AMCkPACAA70AwLS9AICUPAAArDoAALk7AABIuwAAZrwAwL08AMDNPAAARb0AYB+9AAABPACAEb0AQAq9AAA9vQAAnzwAYAK9AICyPAAA3LoAgEy9AKAPPQBAhrwAgJI8AMDAPAAgMb0AgLe8AOBevQDgDr0A8KY9AABAugCgFr0AAFe9ABCUPQDArbwAAOG7AMCsPABgsT0AMNo9AKBoPQDAmbwAQE+9AAA0vQDAyzwAwO+8AEAcvQDA3DwAYHi9AGCdvQDAzzwAQP48AIAlPABAMr0AAHg7AAD2PADAsD0AYG49ACAsPQAAEj0AAOc8AAA8uwDA6r0AwI29AFCuvQBgG70AwDw9AMArPQAAMTwAwG09AAD/PAAAbLsAAIq8AACQOQBAo7wAgOg8AMCOPADQlT0AwPS8AKABvQCAiLwAAFu8AACKvABAFj0AkJI9AIBaPQAAaDsAYH09AOBXvQAAczwAAOS8AED4PAAAmjsAAJC8AAChvACgNT0AUJS9AIAUvQAArLsA0M09AMCjPAAAJz0AILo9AACeOwBAVb0AAM+8AIDivABwlz0AQNQ8AMDMPACAC70AgE08AMCRPQBAcr0AIBw9AIBbPQAAuTwAQGY9AEAiPQAgKj0AAL+7AIA5PAAAQr0AAKK7AED9vABgSb0AABY8AECTPQBAlzwAAGi8AIBEPABAurwAYIo9AADSvQDA6TwAQE69AAC9vADwiL0A8KW9AACmuwCAvb0AwAy9AMCHvADAurwAAIC4AGAyvQAAH70AwIA9AOAOPQAA1LsAMIs9AADmOwDAPb0AAFG9AMDWPABgdz0AgB49ACB0vQBgN70AACK8AMAKPQCgG70AABy8AEBtvQAAtTsAQPg8AICpvACAd70AAAA4AADfPADAmL0AELC9AADCvADAKb0AANQ6AAAsvACAAz0AAJy6AAAIvADAt7wAoDA9AIDVvACAeD0AACw8AADnvAAACzwAIDq9AAAmuwAAEj0AIAc9AIAwvAAgIL0AgBY9AKBxvQAA6LsA4Cc9AIASvQCgh70AAN67AEDdvACAEzwAAIM8ADCLPQCAD70AAEu9AGBHPQAgO70AwM49AECuvAAAkLsAABA7AICKPQBAZr0AAJQ7ADCGPQAAWbwAwNw8AKBpvQBgcb0AAJ07AAAoPQAgBL0AAJw7ALDDPQBA6TwAYAA9AEDyvABAAL0AAKq9AAAZPAAAJbwAAGi6AMD6PACgCz0=","chunkHash":"827d2c87dbb658403773633c40a4c08805ce08536797267b43b8d8687ec0e765"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef save_processed_data(sample_id, raw_mesh, smoothed_mesh, decimated_mesh, point_cloud, output_dir=\"results\"):\n    \"\"\"\n    Save processed mesh and point cloud data following MorphoFeatures approach\n    \"\"\"\n    #...\n    print(f\"  - HTML visualizations saved in: {html_dir}\")\n#...\n```","range":{"startLineNumber":227,"startColumn":0,"endLineNumber":227,"endColumn":58},"embedding":"AIA4PQDwjD0AIEE9AECLvQCAk7wA4Di9AEDuvAAAGTwAoCE9AKACvQAAZD0AAPQ7AMDavABg1L0AMMe9AICyPQCAPzwAQFw9AAA+vACgOj0AwDg9AICLPACgND0AALA6AACYvQAAdDwA4Ga9AGA0PQBAGD0AAE68AOAWvQCgA70A0Iy9AACHOwDA1r0AQC89AOA2vQCAYT0AgBS8AAAoOgDA7D0AIJa9AIBjPQBAhbwAAJy7AECqvADA3zwAwIu9AADAPQDApjwAoBw9AOAhPQDAozwAYJW9AIAuPABA8jwAAJO7AACVvACAGb0AgB68APCMPQDAfL0AAKY8AIBUvAAAvLoAAEe8AIBjvQCAIrwAgCc8AABUPADA9DwAgMI8AIDDPADAm7wAAES8AOCnvQDAJr0AQNs8AOAovQBAdL0AYFa9AADcPAAgAT0AIFC9AEAFvQCAk7wA8MS9AAALvQAQlb0AgNa8AADqvABALD0AYH69AMDCPABgVj0A4Bs9ADCbvQBAr7wAgGs8AIClPAAgpj0AAOm7AABhvQCASTwAAC49AMDTvABguj0AABu8AAAKvACANDwAAIc8ABCvvQAgZT0AAAA9AGA6PQCAdLwAoH89AMAoPQAAi7wAYBm9AMBSvQBAGT0AgEO8AIC+vAAAUrwAQN88AEASPQDQpL0AAM87AAD2uwDAgDwAwJI8APDEPQCg7L0AgBQ8AMC8vAAAeTwAAAA7AADTOwBAcT0AgLA8AADMuwAAWT0AEJk9AGBsvQAAr7sAQHW9ALAOPgAAkzsA4Do9AIBJvABAszwAwD49AIBVPAAAaTwAoBi9AIBqvACAXrwAoNi9AADwugBAAj0AQJa8AIDsvAAA/7wAAD47AEAOPQDA87wAAIc8AKCTvQDwjL0AQMy8ABChvQDgTD0AQCa9AIDPPACAabwAAM07AMA5vQDAMb0AgBo9ANCDvQCA2zwAAGO8AIDgPAAgZ70AgAs8AIDmPACAqj0AwLE8ANCHPQAA/zwAwEA9ACAQvQAAOb0AQMk8AADsvACgfj0AAJu8AIBpPAAA17sAwMm8AECDvADAgjwAgDI9AMBCvQCApLwAwLu8AEBCvQBgIL0AAMo7AADguQCQqD0AADE9AKAwPQDgCb0AAG+8AABGvQAAjDoAACg6AACJPACgJb0AAKQ7AMAFPQAAwjwAAOA5AADEvADAt7wAADq9AIDEPAAA4bwAYBc9AABuPACAV7wAsJg9AABWOwBAybwAAMi6AOAwvQCAWjwAMIQ9AACcvQBAsLwAgI68AACGuwAAaD0AAJM8AIAGPABgDL0AAN67AIA1vAAAwjsAAGu8AGBAPQCQ4b0AAIU8AKB3vQDAq70AoDg9ADCEvQDADz0AQJ08AABbvABgRL0AwGo9AKBCPQBgcT0AwLs8AMBLPQAAgLkAgLO8AED/vADAgLwA4Cs9AIB5PACgpb0AgJs9AADoOwBAFj0AgIs8AAC9PAAA57wAsLK9AACAOAAA+TsAANi6AABAuwAAoTsAAL88AEDhPAAgJL0AAPm8AAAfPABAE70AgP68AOBBvQCAVDwAADS8AACMOwAAH7wA0IK9AOA5PQAAQLsAwNg8AMC7PADgCr0AwJS8AACavQAA9rwAYK49AABMOwCAG70AYEy9ACCyPQAAp7sAgF+8AECmPAAwhD0AMPg9AOCHPQAAmrwAQBm9AGBXvQCADT0AADa9AGAdvQCA+DwAcI69AICVvQCANTwAwMc8AAAKOwDAgb0AAIM7AMDEPAAwxz0A4EA9AGAtPQDgPD0AAEI8AAAMvAAA170AwIm9AFC7vQBAU70AsII9AIAXPQBAszwAgGA9AEAGPQCAcrwAgAe8AACzuwAgI70AgIg8AIAIPACAPz0AwCW9AOAJvQCAb7wAACO8AEDWvAAARz0A4KM9AEBuPQDAhTwAQJQ9AMAvvQCAeTwA4DO9AOAPPQAAKLsAQNC8AIDivAAADz0AsKa9AEDMvAAAaDwA4M49AICQPACAIj0A4KM9AECNPACQgL0AQPq8AMC4vAAAhD0A4As9ACAJPQCAO70AAHo7AICJPQDANL0AwK48AIB1PQAAgTwAMIU9ABCFPQCgHj0AQIW8AAAUPACgSb0AADy8AOAtvQBANb0AAIa7AABoPQBA8jwAAOi8AMCrPAAgaL0AwF49AFDdvQAABjwAABO9AGBavQDQhL0AEKW9AGAPvQBQq70AoCi9AEDGvAAAabwAANS6AOAfvQAAKr0AsIY9AGBEPQAA5DsAQFU9AICuPACgOr0AwB29AECoPABggz0AwEE9ACBxvQCAJ70AAEO8AGA0PQBAorwAAAy8AKBJvQCAGDwAoBU9AIDWvADQkr0AABY7AACjPADwnr0AgMi9AABNvAAAX70AgCm8AMCgvACgKT0AAHO8AAC+OwAAPLwAIAI9AADQugDA+DwAAF48AMAIvQCAtTwAYB69AAD3uwBgMD0AIFM9AACDuwBgTL0AQOw8AAADvQAAmTsAwNk8AAAuvQAgdL0AwIK8AEDgvABAmTwAwIE8AIBHPQBAqbwAIFe9AGBnPQBgIb0AgAk+AIDRvAAASDwAgEI8AGA3PQAgXb0AAMU7AGCIPQAAULwAgMI8AAA4vQDgN70AANQ8AGAbPQBAEb0AABo7AOCxPQAAVDwA4Do9AACfuwDgDr0AoJG9AAAIPACANjwAAA+8AMD3PACgLD0=","chunkHash":"eec70f32db8d0777d5f20c99a022fdfcfc41d00a540efcb767ed27ed3650520e"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef find_sample_dirs(root_dir):\n    sample_dirs = []\n    try:\n        for item in os.listdir(root_dir):\n            # Check if it's a directory with a 4-digit name\n            if os.path.isdir(os.path.join(root_dir, item)) and item.isdigit() and len(item) == 4:\n                # Check if it has a mask subdirectory\n                mask_dir = os.path.join(root_dir, item, 'mask')\n                if os.path.isdir(mask_dir) and len(os.listdir(mask_dir)) > 0:\n                    sample_dirs.append(item)\n    except Exception as e:\n        print(f\"Error scanning directory {root_dir}: {e}\")\n    \n    return sample_dirs\n#...\n```","range":{"startLineNumber":230,"startColumn":0,"endLineNumber":243,"endColumn":22},"embedding":"AABsOwAAlrsAwEE9AIDVvABgLL0AoEy9AMALvQBAl7wAgPa8AACOPQAAjDsAgAi9ALCRPQBwp70AAKu8AOBEPQAAQrsAAIw8AJCOvQAAojsAEMA9AIB7vACA9zwAwLu8AABUOwCAljwAgPW8AACGPABQxD0AABi6AKCDvQAADTwAwHu9ACAyPQBgzL0AAEw7AAASPAAAgzwAgEI9AMC9vQAAuz0AwKe8AAAMPQAAu7sAAAC6AOCqvQAAnTsAIKu9ANCuPQAge70AoAw9AKCQPQAAfLwAgMC8AMBOvQCASLwAcKS9AICLPABgDj0AwNc8AGCDPQCgQ70AAMC8AAC+vABAUD0AALw6AECLPABQnb0AIDs9AIDwPACgDL0A4Ag9AIAFPQDwir0AAKw6AADAuwCAPLwAgEc8AGgBvgDA3rwAAJ47AEBCPQBAZT0AAPi6ANCfvQBgjL0AMLG9AIAQvACAML0AEJO9AEDBPAAANLsAIAG9AIAtPAAAQLoAwO68AEBGvQCAQ70AACg6AGAUPQCAHT0AQI48AAAjvACAnjwAQH89AGBHPQBwyj0AACk8AADIOgBA0zwAALY8AFC+vQAAHz0AAI47AECKPQBgMz0AgMA8AACoOgBAOb0AQPW8AOBEvQDArDwAgBw9AADlOwCAyjwAANa7ACA+PQDgk70AADA6AACSPACAALwAAMI7AIAaPACAubwAAJS6AADSvAAgJb0AwKm8AIAGPACgzT0AAMK7AKBXPQAA+TwAYLk9AADKPABgLj0AgHe9APCfPQAAgTsAYMY9AIC8vABA1bwAwJk8AAAvvQCgUD0AoBm9AAA5vQAAuTsAgDy9AIBKPADgTL0AACC8AEBBPQAApbwAAEC5AEAUPQAAyzsAgH+8AOBcvQAgFb0AQLo8AICDPAAQlj0AUNi9AOBcPQBA0jwAgFm9AIBmPQDgc70AAM88AMAvvQAAvLsAYAg9AIDDPACAG7wAQJ28AKBxPQBgOz0AgAY9AAAYOgAgmz0AoB09AACVOwAAoLoAAN48AABSvQBgmz0AwLm8AICePADADD0AgM+9AABevABAtrwAoFA9AACGvQBAhrwAoAW9AIAjvAAA5LoAADQ7AADbOwBAzjwAADI8AICRPACAOjwAAKG8AIB1PACAyDwAwHi9AMDLPACAOjwAAFq7AMCrPABw3j0A8I89AICrPAAA87wAgHy8AACZPABgbT0AwLA8AEDaPACAzbwAgOg8AACzuwAAwDoAgJy9AACgvABAj7wAAPC6AKAZvQAAiDwAICI9AAAfvAAA1rsAAG68AAC0OgDAr7wAADs8AACKvACANbwAgEM8AAAyvACwnr0AAM07AIClPAAgm70AALy8AADSuwDgJj0AALc8AMDXPACgFb0AwMG8AIBMPACAELwAAOQ8AGBGPQCAerwAwAS9AIAZPQDAkLwAEIc9AEBfvQCAZLwAAOS6AIBSPAAAdjwAIHE9AAD7uwAAybsAAGA8AGBSPQCAAbwAQIs8AEBwvQCAjD0AgBo9AABUuwAA9rsAAKK8AGA6vQAAHDsAIDW9AEB0vQBAuL0AANY8AACYvACAfbwAQIi9AIDgPACAw70AAFG8AECoPADgD70AII69AEDCPAAA+TsAAA67AIAkPAAARrwAgDo8AECsPAAAnLsAcJA9AICAvQCgIj0AIEA9AGCfPQCAX70A8Jy9ACB/vQBAQz0AQLS8AAD9uwCwmD0AgES8AGBivQAAxLwAIMK9AEDVPADAaL0AAPo7AMCfvABAaD0AAO+7AIDqPQDA/zwAIAS9AEC7PACAIzwAgBw8AIDkvACgIr0AQM48ACAYPQAgCL0AcJc9ACBtPQAACjwAQOE8AIAbvAAAELwAAGG8AMCiPAAAXDwAACe9AECgvADgNj0AgPu8AOAEvQCASz0AAKg9AAAMOwDAhzwAgI89AEDgPABAwjwAAMC4AJCYPQBAjTwAQJm8AMCCvABgIL0AcJq9AAALvAAART0AIAE9AID2PABwpD0AAGI8AIAWvAAA+bwAgEy8AABkPACgKT0AgFa8AADCOwAgrr0AgFa9AABBPQDQjr0A0Jg9AAC/PQDAYD0AgEO8AFChPQBAjD0AQKe8AOBUPQDAXL0AwIM8ACCivQDAiT0AgKM8AMCaPQDgPj0AgFg9AAD2PADAk70AAH89ACDCvQAAhjsAQCa9AMCrvACACLwAoHK9AIAwvACQyL0AIEG9AICNvAAAiLoAANW7AABVPABAyjwAAKU9AIAcPQCAND0AgD28AIAHPAAApDsAgB68AACwuwAgvj0AAIG7ABC2vQAAl7wAgHS8AECJPAAAiLwAwNE8AADzuwCgNz0AAHs9AIDdvACAML0AAEC5AABKvACAdbwAoGC9AAAIuwDoHL4AwCm9AIA6PADwkj0AAEC5AADAugCACjwAANK7AMCovAAAHrwA4KM9ACA/vQAARzwAgKQ8AADquwAA/jsAgG+8AGBrPQCAbrwAALI8ACCevQAAIj0AAAY9AIB6vADAPr0AgGc8AACLuwCAN7wAAGa9AKAmPQCANL0AgJa9AKDXPQAAQ7wAQK89AEDUvACwmD0AAFw9AACuOwA4Fr4AAP08AKA0PQCAbrwAQJS8AMC8PABgUD0AwEk9AAAfvQCA5DwAANY8AABuPQAAnTsAIF49AIAzPQAA17wAIJ+9AAAPvAAAJD0AAGY8AIC8vADAbD0=","chunkHash":"ba1534176daf9193a329b84b57b25e5e9832e4defac8544f7f2e471ce37e7161"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\nimport sys\nimport os\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))\n\nfrom dataloader.mesh_dataloader import get_mesh_dataloader\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport numpy as np\nimport open3d as o3d\nfrom skimage.measure import marching_cubes\nimport trimesh\nimport pathlib\nfrom utils.pointcloud import load_mask_volume\nimport plotly.graph_objects as go\nimport plotly.offline as pyo\n\n# Load mask volume and create mesh using MorphoFeatures-like pipeline\ndef create_mesh_from_mask_morphofeatures(mask_volume, voxel_size=(1.0, 1.0, 1.0), \n                                        smooth_iterations=10, decimate_target=5000,\n                                        sample_points=1024):\n    #...\n# Function to save mesh visualization as HTML using Plotly\ndef save_mesh_plotly(mesh, output_path, title=\"Mesh\", color='red', opacity=0.7):\n    #...\n# Function to save point cloud visualization as HTML using Plotly\n#...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":135,"endColumn":0},"embedding":"AIAePAAAbj0AoFk9AOBtvQBAzrwAwHe9AAASvAAA1TwAANm7AIByvABAkTwAAK67AIDCPAAgcr0AAAi9ACCWPQAAnbwAANu7ACBGvQCAKD0AIJU9ALCKPQBgIz0AQJC8AMBJvQAAEDwAwIY8ACBNPQBAGT0AAJ87AOAPvQAAq7wAsLy9AACuPABgub0AAPy6AAAQuwCgBD0AAKU7AOABvQCAnz0AQNG9AGBMPQAASjsAALY8AEBOvQAA/DwAYHW9ALCTPQAAqrsAAMC6AMA9PQCANLwAYAq9AGBqvQAAn7sAQFy9AADxuwAAYDoAAKy7ADCPPQCgIL0AoCW9AECePAAApTwAAOU8ACAivQAQh70AAMg7AAAcuwAALbwAACA9AACUOgBgYL0AgCo8AGBuvQAAx7wAYCI9AJDRvQAAB70AIFu9AIC7PAAADj0AAAq8AMB1vQCgfr0AcOi9AACovAAgk70AQAW9AICvvACAMjwAoB69AKALPQAA0TwAYBY9ACCIvQBAX70AQHg9AAAAOQAgbz0AYDg9AGAlvQCAbz0AwA49AICLPADwjD0AQKe8AKApPQDgkT0AwMy8AMD7vAAgWz0AAPO7AAA+OwAAGjwAwI89AADLuwDgJ70AgAw8APCjvQAAQ7wAgFQ8AMD6vAAAIDsAAJK7AAC2PADAWr0AAP+8AABHPADApDwAAMm7AIA6PQCIAL4AgAq9AIA5vACAJDwAoCu9AMCjPADA4j0AoIS9AADxuwBgTz0A4AQ9AIBOvAAAXLwAgIi8ABDhPQCADLwAoD89AADTuwAAVT0A8NQ9AIAOPADAgzwAALG9AICpPAAgjD0AoDC9AEDfvAAAwLoAALm7AADNvAAAajsAAOC7AOCUPQBgJr0AgBq9AKBOvQBA9b0AAJQ7AOBbvQBA3zwAkJS9ALCPPQDAlbwAIBy9AIAYPAAAAr0AwCo9AABWvQCA2zwAAGa8AIAEPABAOr0AAAc8AICDPQAg7j0AgP48AOCxPQCAlzwAoIc9AIDvvADAlLwAYE09ACCDvQAAtj0AAIu7AADVOwAAPTwAQOa8AGBTPQAAZjwAwJC8AIDVvACA1rwAAJ28AAD5vAAgNL0AAAA7AMDgPACAWT0AYCY9AMAlPQAAo7sAQKm8AABCvQCAWD0AwIA8ACAqPQAAGDoAwBY9AIA2PQAAKzwAwEE9AAC8ugAA1jsAACC9AID2PADAEz0AgFY8AADROwAANbwAoHs9AAACuwDgLr0AwPO8AIB8vABgGb0AYJk9AMCHvAAADj0AALm8AABQuwBwlD0AgEk8AOAEvQBAML0AAH47AACEOgAgUT0AALG8AGA0PQCgSr0AgPG8AMB6vQDAx70AAAy7ACAevQAAnjsAQJw8AICXPADgkb0AwE09AGBjPQAAgbsAAJC8AEDAPAAANLsAYA29AAD8PAAAjLoAQGE9AIA/vADQ170AIDQ9AMDxvADgPT0AwFI9AAAVPQAAGrwAADS7AIBdPAAAKTwAABg8AACwOQAAFrsAIBY9AIDOvABAd70AgFM8AIBwvAAge70AwJG8AIBdvABAv7wAADS7AAAKOwAA2LoA0Ny9AEA3PQAAfLwAwIU8AIBVvABA5LwAACm8AGAXPQBA6zwAIJY9AABsuwAAkL0AgHG8AOA/PQAAcDsAAJg8AADoOgAwpD0A4JE9AEBuPQAAmb0AQE69AIC+vQAAxTsAACa8AEBLvQCAPD0AoHq9ACAtvQAAR7wAkIq9AADhOwAQjL0AQK48AABaPACADzwA4C89AMAcPQAQgD0AgFg8AEAFPQAwrb0AAIG7AFCSvQCwlr0A4Io9AEDpPAAAlzwAYA09AKBDPQCAAb0AoES9AMCBPABgAL0AgG08AICWvAAAIrwAAMy7APCDvQDgDD0AwIu8AKBDvQBAgTwAoCg9ACBAPQAAVjsAUMg9AAA7vABAbT0AsLa9AFCDPQDgGD0AAHy7AKA4vQCAFLwAoKe9AEA6vQDA/DwAgJw9AIBtvABgjj0AILA9AMDcvABAkbwAANa8AEBNvQAAPjwAQIQ8AIBbPADAWb0AgB09AIDePQBQkL0AAGA6APDAPQAACD0AQIi8AFClPQCAZTwAAJc7AECIPABgI70AAIu7ACAuvQAAALsAAB47AEBoPQCApD0AAAAAAIBlvAAgSr0AQCI9AODjvQCARbwAYGq9AABRvADAuLwAwLS8AAA3vQBAPb0AwMo8AMAovQBABL0AAEM8AIAqPABAEL0AwMI9AJCbPQAAlLwAAA09AADQOgBgeL0AAE+9AADePABggj0AwN48AEBdvQDgGb0AwEo9AOBPPQCARzwAwAC9AAD6vACADDwAYA89AMBQvQCgqb0AgA48AAAIOwAAnLwAAGe9AAD8PACgn70AAIA6AACEOwBgej0AsIS9AMDjPACADL0AAA67AACTuwCAlDwAABA7AADivACgRT0AAP+8AAAwPADgPj0AAA28AAA4PQAAFb0AIGs9AICGvQBAjj0AoBw9AIBPvABA3rwAAIu8AIDivADAmLwAgHs8AACDPQBAIr0A4Ee9AOAxPQAA/rsA6Ak+AIAhvQAA3LoAQM08AMCnPACgyb0AAGM9AFDCPQDAg7wAgBY8AOBPvQBAnL0AgDI8AEDkvADA+7wAAMQ7AIAuvAAALDsAALc7AIBnPABABb0AIAO9AKAAvQDAyzwAAEi6AMAJvQBAxTw=","chunkHash":"4fb4524259a5438a1a8f7e3de58d6d4e056703c805c9f8b142e70d93ee342358"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\ndef save_pointcloud_plotly(points, output_path, title=\"Point Cloud\", color='red', size=2):\n    #...\n# Function to save processed mesh and point cloud\ndef save_processed_data(sample_id, raw_mesh, smoothed_mesh, decimated_mesh, point_cloud, output_dir=\"results\"):\n    \"\"\"\n    Save processed mesh and point cloud data following MorphoFeatures approach\n    \"\"\"\n    #...\n# Find available sample directories\ndef find_sample_dirs(root_dir):\n    #...\n# Main execution\nif __name__ == \"__main__\":\n    print(\"Starting mesh generation process...\")\n    \n    # Parameters\n    root_dir = \"data/nuclei_sample_1a_v1\"\n    sample_id = None  # Will be set from available samples\n    voxel_size = (1.0, 1.0, 1.0)  # Voxel spacing in 3D space\n    smooth_iterations = 10  # Number of Taubin smoothing iterations\n    decimate_target = 5000  # Target number of faces after decimation\n    #...\n```","range":{"startLineNumber":135,"startColumn":0,"endLineNumber":255,"endColumn":0},"embedding":"AIAcPQDgbT0AQFg9ANCVvQCgVL0AIHO9AEDOvAAAELoAgJ88AAA6vAAAyDwAAIA6AADxvABAzb0AcKe9ACCmPQCAmTwAIBg9AABgOwDAKj0AQF49AMAbPQBgTT0AAMc8AMCAvQCASTwAgNK8AEB2PQCgJT0AAFE8ACAZvQBAo7wAIMm9AAAXvACgvb0AAKw8AMAgvQBAlzwAwNq8AAAbPADQ1z0AAIm9AOBkPQCAE7wAAIY7AEALvQAAsDsAwFm9AGCyPQBAJz0AALQ7AMCXPAAAm7sAYJi9AAD9vADAwzwAAJA6AMCKvADA67wAwAi9APC0PQCAbL0AgMI8AIA3PACAYzwAgIq8AHCEvQAALL0AgCk8AIAyPQBA5zwAgL48AABYPACAtLwAgKC8AGBBvQAA8LwAABI7ANDAvQCAc70AgNS8AAAwOwCgAT0AAMS8AMAQvQBgfb0AsLK9AIAavQAAWr0AAL+8AIA7vACAVD0AYI29AMDgPAAgID0A8K49AAB0vQAAurwAABU9AIAqPAAgcj0AAKQ7AABlvQAAQrwAYGc9AIA3vQBAeT0A4BE9AADXPAAgPD0AgNM8AOAzvQAA7TwAwEM9AACHPAAAbLwAYIM9AABZPQCAZ7wAAHq8AEBlvQCASTwAAJo7AABYvAAAobwA4Dc9AOA+PQDghb0AgFU8AMCGPADgMT0AgBc8AACSPQBw470AIBa9AEAZvQAA2TsAgCE8AOAOPQCgRT0AQNs8AADsPACAiz0AYAk9AEBsvQAAJDsAQIK9AEACPgAAK7wAMLU9AAAOuwDAujwAAOs9AICiPAAAmzwAQJa9AICXvAAAVjwAoOS9AAADPAAAZjwAICu9AAB1vAAAzbwAwLe8AADcPADga70AAFA7APCXvQAwur0AgMi8AJCzvQAgHj0AQMy8AACJPQAAb7wAAIA4AED7vADA5rwAALY7AJCTvQDA0DwAAHK7AIBHPABQjr0AIAE9ACAUPQDQ2z0AQN88AHCqPQAANTwAQBQ9AIB5vQCAwbwAAL47AMAkvQBwkz0AgIS8AMDBvACAj7wAwKS8AAD4ugCAPDwAAKE8AMCLvACAerwAgBK8AEBfvQAgRr0AAMQ6AABSOwAggD0AACA9AADVPAAAbL0AIEW9APCDvQCADD0AACS7AIAjPQDgCr0AAKg6AFCAPQDAvTwA4Fc9AABuOwAARrsAwFO9AMDtPAAATzwAgCM8AADOuwCAPjwAgKQ9AKAJvQBAKL0AAK67AIBvvQAASzwAgEc9ALCQvQDAuLwAgFm8AADJuwCQgz0AgLQ8AABBvACAIb0AwNs8AEDSvACAtDwAAME7AEBDPQDAxr0AAHi7AIBcvQDgLr0AwFQ9AIAGvQCAi7wAAJi7AADDPACglL0AAKU8AICIPQDAFT0AANg8AIARPQBA87wAwPu8AABvvABgIL0AADw8AADBPAAAdb0AgGk9AABcuwAAbz0AgAc8AIBEPACAk7wAoJG9AAC8OwAAEjsAQKM8AACFvACAdbwAANo8AADZOwCAe70AAEK8AADPOwCglr0AQPK8AOBVvQAAfTwA4AG9AIBBPQAA+zsAEJi9AADOOwDgA70AQIQ8AICoPAAAlbsAwJO8AADZuwAAcrsAsJc9AIBnPADgRL0AQGS9ADCIPQCAkrwAAFQ7AIABPABQxz0AwNE9ANCCPQDgV70AgAa9AMCYvQBA7TwAAI+7AEDevAAA0DwAoDe9ANCHvQAAmDwAABs8AIBMPADAa70AAEi7AKCGPQBgqD0AwKo8AEBKPQBAgjwAoAQ9AAAEPADQ3r0AQEq9ADC6vQBAfL0AAIs9AOA2PQCA4DwAoC09AMCRPQBAgbwAYGO9AAAyvAAA0LwAwKI8AIDoPACA8TwAAPa8AKBfvQAA/LsAgBc8AMAYvQAgCD0AoEo9AMDWPAAAHDwAoHs9AMBJvQAgFz0AwNe8AIARPQCALTwAAKg7AIBZvQAAyTwA0IW9AEDqvACAQjwA0K49AIBAPACA1jwAgI09AIBhvABA7bwAALW7AKAzvQBAaz0AQAM9AIDXPABASr0AAAk8AKCqPQCwsL0AgMs8ALCJPQBA7DwAQFE9AMBGPQDgfj0AAII7AAAzPACgHL0AAHC6AIBbvQBAn7wAQI68AICLPQAgKD0AAIi7AABuPACgZr0AAB49APD0vQAAgDoAgDi9AAAEOwAARb0AcIq9AMACvQBgq70AACQ7AMDlvACAy7wAAO07AEDwvABgRr0AcLA9ALCAPQAAEjwAkLk9AGAfPQDAurwAwDK9AMCvPACgbD0AAIQ7ALCyvQBAK70AAHC8ACBLPQAgGr0AgGy8AEBJvQBAjzwAgKU8AECgvAAATb0AgN88AABIOwDggL0A4EW9AMCTvABAC70AgE68AAC9uwBA/jwAAOm7AADIOgAARLwA4Bo9AIAjvAAgQD0AACY7AAAYvQDACj0AYHC9AIBuvABgiz0AIAg9AACROwBAeb0AACU9AIAvvQAAkDwAAEE8AMDLvACgYb0AgGU8AIDAvAAgHD0AQO88ALC1PQAAdLsAACS9AIAEPQDgKL0AsPA9AICevACAULwAAD67AIB4PQDQkr0AAPC6AGCkPQAAR7wAANI8AIBfvQCQjL0AAN88AKAmPQDgEr0AACa8ABCxPQAgIj0AwLo8AABcvACgEL0AwP68AADgugAAGjwAQIc8AACbuwCAXz0=","chunkHash":"97a8a8618b2b84358c74f6aa2c1d4990d61768217ff4ccad024f39e0e443f82a"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\n    sample_points = 1024  # Number of points to sample from surface\n    output_dir = \"results\"  # Output directory for saving data\n    \n    # Find available samples\n    sample_dirs = find_sample_dirs(root_dir)\n    \n    if not sample_dirs:\n        print(f\"No sample directories found in {root_dir}!\")\n        print(\"Please check the path and ensure there are valid samples with mask directories.\")\n        sys.exit(1)\n    \n    print(f\"Found {len(sample_dirs)} sample directories: {sample_dirs[:5]}{'...' if len(sample_dirs) > 5 else ''}\")\n    \n    # Use the first sample directory found\n    sample_id = int(sample_dirs[0])\n    sample_id_str = str(sample_id).zfill(4)\n    print(f\"Using sample {sample_id_str}\")\n    \n    try:\n        # Find the sample directory\n        sample_dir = os.path.join(root_dir, sample_id_str)\n        mask_dir = os.path.join(sample_dir, 'mask')\n        \n        if not os.path.exists(mask_dir):\n            raise ValueError(f\"Mask directory not found: {mask_dir}\")\n        #...\n```","range":{"startLineNumber":255,"startColumn":0,"endLineNumber":280,"endColumn":0},"embedding":"AIAjvAAA/DsAIIc9AABEvQBgf70AgKi9AIDuvACAcDwAwJo8AMDXPABAkrwAQPy8AACIuwBgAb0AgOu8AMB9PQAAZDsAYBc9AMB+vQAAADgAMJQ9AEDiPAAAiDwAAD47AOApvQAA6LsAwKW8AIAWPACAij0AAG88ABCrvQDAlbwAEMi9AIDIPABws70AQJ08AACauwCgND0AAIG7AEBOvQCwpj0AoBG9AIAjPQCAmbwAgDi8AJCQvQAACjsAEN69ALCuPQCA4bwAwLs8ABCSPQBADL0AgF69AIDIvACATDwAwHK9AAAcPAAAKLwAwOG8AOCWPQBAz7wAgNK8AAAOPACA2TwAAIw6AACvOwCgSb0AAL67AECJPAAALjsAYCw9AAAAuQDgEb0AwIG8AEAcvQDA4bwAwP88AEAJvgAgIb0AgH28AMC8PADQnz0AYAC9AABjvQDAVr0AAMu9AABDvQDggb0AQP28AABIOwAA5TsAwIG8AOAhPQDAkTwAAGC5AICTvQCAKr0AABA9AAAlvABgbT0AAJY8ACAHvQDA6TwAoGo9AAD2PACgfz0AAGk9AIAGvACgkj0AwEA9APCGvQAAQz0AAAI8AMDGPAAAxjwAQME8AACAOwAAtrwAQLC8AKBGvQCARLwAAJw6AADVOwDAtDwAAJg7AACWPQBwpb0AACC8ACAfPQAAkLoAAJw7AICoPADAzLwA4C29ACAYvQAAkDoAAMs7AADUOwDgdj0AgKG8APCJPQBAxjwAcKQ9AABTvAAA2DwAIJ69AFDAPQBA/DwAcMI9AAAWOwBwij0AADk9AADsuwAAtDwAoOW9AAD9OwCARDwAALS9AAAwvACAnrwAoCe9AAAVPQAAGLwAABi6AIBqPAAAezwAgGK8AKA4vQAAb70AAKA7AICWvACAMT0AEKO9ACA+PQAASDsAYDe9AAAAPQBgkL0AACA5APCgvQAAAAAAALM8AAA1PAAAt7wAAKy8AMAWPQAAvT0AABQ8AICJPABQkz0AIAk9AACbuwBAorwAgCE8ACBvvQCYAT4AwAu9AACJOwBAgDwAoFu9AACkOwAAxzsAAFs9AEBKvQCAK70AgFS8AIApvQBgG70AADq7AAAEuwCAWz0AoGQ9AAAKOwDA9LwAgCa8AKAmvQAA9jwAwP+8AIAmPQAAiLwAAMw8ACBDPQAwmz0A0Io9AIB9PAAAlzwAQLe8AACBPABgPD0AAIa7AICLPAAAAjwAgMc8AMCuPAAA4rsAgEK8AECDvADArbwAgBo8AEBqvQAAODsAgEs8AIArPABACD0AIA+9AABAuwAAU7wAAK07AADWuwAApzsAAOS7AEDsPADgnb0AgBQ8AECpvADAd70AAPi7AIB+vACAF7wAACE8AACSvAAQmb0AAIA8AIBtPAAAAjwAABq7AOBgPQCAA7wAIHa9AAB6uwAAvTsAENU9AGAHvQAgML0AAMI8AACZPAAAXD0AQDo9AAAKuwCABr0AwEO9AGAEPQAAMDwA4C49AACfvQAAl7sAwKe8AACrPACgQr0AAJA7AIBwvADgOb0AgEK8AMD6vABA+LwAgHe8AAA4ugBAp7wAMKO9AABRPQAgVb0AQNE8AMDpPACgGL0AoEe9AEAkPQBA2TwAoDE9AABgOQBADb0AQIa8AKBgPQCAtTwAgIs9AIAwvAAwmz0AwMI9ADCFPQCgkr0AIH+9ABC4vQCAkz0AAK68AOAHvQAAUD0AwBG9ANC8vQCAsTwAkLW9AACsPABQjr0AAJA6AICCvAAgbj0AgMY8AHCEPQBgJT0AAA67AAAHPQDgUb0AgM88AIBjvQAAQL0AkI09AGAZPQAAMjsAgE89AMC5PQDA+rwAAEK7AABIOgAAybwAAEK8AOARPQAA5DsAgBC9AABhvQAAhjwAANm8AIBXvQAAID0AgOY8AAAquwAA0zsAEKM9AIASvADAxjwAwGa9AKCFPQAAsLoAAH48ACADvQCABTwA4Ja9AGB1vQAgMj0AUIg9AADMOgDAqz0AwDc9AADcugCgBb0AQAm9AAC7OwDgST0AQLg8AAB4PQBQsb0AgEC8AOA9PQBAZb0AQAU9AGDHPQCQiz0AQPM8ANCHPQBAjz0AACq7AGApPQCwg70AgLu8AICIvQDgCz0AAOW8AAAePQCAbj0AwJg8ACAlPQCgcL0A4EQ9ACCevQAAnbsAYHG9AICmvACAZ7wAYH+9AIB5vAAA4r0AgCi9AAD5vAAAAL0AgI+8AOBxPQAAzbwAcN89AMBUPQDAhTwAgL08AMC8PAAAMLwAgNm8AEDiPADQkD0AAOS7ANCPvQAAo7wAAEg6AADsOgBAlTwAACy7AMCavAAAlzsAgD49ACAavQAAXL0AAPS7AAC2uwAAi7wAwLO8AMCyPADADL4AgCS8AIAfPABgKj0AwDe9AGBcPQCATzwAQIO8AAC8OwAAALsAAFg7AKA0vQBQlD0AgNi8AIDUPAAQqz0AgGg8AABIPQAAJzwAQOC8AGC4vQBAdD0AAAA7AEDJvACARb0AALA7AIDmvACA/zwAwIy8ACBTPQBgAb0AQEe9AJC8PQCASjwAgOY9AACDuwAA1zwAAAc9AMACvQAoFr4AANk7ALC0PQCAebwAAPU8AGApvQAAVTwAYFQ9AIABvQAAYLkAADM8ACCDPQDgTj0A4Hg9AABuPQCAurwAoEO9AIBfPAAAEjwAQCU9AKAUvQDAfj0=","chunkHash":"8418ddbd581a7d6778844acb7e3ec672f65d238a7e48a946055a03400a65a8b9"},{"text":"File: `scripts/temp/test_mesh.py`\n```python\n#...\n        # Load the mask volume\n        mask_volume = load_mask_volume(mask_dir)\n        print(f\"Loaded mask volume of shape {mask_volume.shape}\")\n        \n        # Process the mask volume to create meshes\n        raw_mesh, smoothed_mesh, decimated_mesh, point_cloud = create_mesh_from_mask_morphofeatures(\n            mask_volume, \n            voxel_size=voxel_size,\n            smooth_iterations=smooth_iterations,\n            decimate_target=decimate_target,\n            sample_points=sample_points\n        )\n        \n        # Save processed data and HTML visualizations\n        save_processed_data(\n            sample_id, \n            raw_mesh, \n            smoothed_mesh, \n            decimated_mesh, \n            point_cloud, \n            output_dir=output_dir\n        )\n        \n        print(\"\\nProcessing complete!\")\n        print(f\"All data and visualizations have been saved to the {output_dir} directory.\")\n        print(f\"You can open the HTML files in a web browser to interact with the 3D visualizations.\")\n        \n    except Exception as e:\n        print(f\"Error processing sample: {e}\")\n        import traceback\n        traceback.print_exc()\n\n\n\n\n\n\n\n\n\n\n\n\n```","range":{"startLineNumber":281,"startColumn":0,"endLineNumber":312,"endColumn":0},"embedding":"AAD3uwBgZT0AYEU9AGA7vQBAJb0AQDS9AECDvACgXj0AAGm8AABAOwCgPT0AgAO8AAC+PADgir0AQF29ACB6PQCAc7wAYGM9AIDuvABA3TwAYIQ9AICoPABgKT0AAKs7ADCqvQAANrwAwKG8AECzPABgHT0AgDE8AKAtvQDgCr0AAM+9AAB9vAAw/b0AAAo8AIB0vADAyjwAgBE8AMDUvABAAT4AwKO9AKABPQAA8zwAgAk9AMCjvADAgTwAELG9AMBrPQAAsLsAAFY7ACCIPQDAAr0AIJW9AIAyvAAA9TsAIFC9AACkugCACL0AAAQ7AMB0PQDgGL0AgEa8AACKuwAANjwAAPG7AABevAAgK70AgM+8AIByvAAAGbwAgJU8AEDYvAAAibsAgAG8AMBuvQBA1rwAQA49AEDovQDANL0AYGe9AAApPQAgEj0AABu8ABCIvQCAurwAoNy9AADZvACAfL0AoCu9ACA4vQAArzwAQKC8APCQPQDAxjwAQKY8ADCGvQBgDb0AwKU9AAC7OwAwgT0AQPU8AMCjvADgAD0A8Ig9AMCxPADQtT0AADm8AEAXPQDgMT0AAJQ8ALC+vQDAsj0AAKq8AIBFPACAKTwAoD09AADAugAAVb0AAMi8AKB/vQAANDwAADC6AKA0vQAAiDsAwMe8ACCPPQCgt70AAL68AMCTPACAHD0AYBc9ALCHPQBA5r0AgEq8AIALvACAvDwAgOg8AEDqvAAgyj0AoGC9AICkPACgrj0AgHw9AOBlvQAAkTsAgPW8AADAPQAA4DsAYB89AADhvADAfT0AQE49AIDPvABAnLwAAHi9AABYPADgaz0A4Fq9AIBHvAAAIDoAgAS8AOAEPQDAnbwAgKC8ACCbPQAAtbwAAIS7AKBjvQCQzL0AwK88AAA6vQDAIj0AoNO9AGBhPQAAErsAwJm8AIBtPAAAP7wAAPk7ACBbvQAA+zwAgNc8AKBLPQDgnr0AADw7AABHPADQwD0AAKC5AKBGPQCADjwAAGA9AACLOwAAIDoAwC49AEDVvABAmT0AAFS7AAD+PABAwDwAgJe8AMADPQBAijwAAGq7AABkvAAgGb0AAKi7AEALvQBA/7wAAEe8AMDMPADgFD0AYI09AABoOwAAGr0AwIG8AIAovQDAOT0AAIc7AIApPQAA57sA8II9AMA0PQAA1zwA4CU9AAAivAAAaLsA4G29AACHOwAA6DwAQN48AICRPAAA5rsAgD49AABrvABAHL0AwLO8AAD0uwBAujwA8JI9AAA8uwAArjwAgL48AIAcvACgUj0AgC48AIAqvACgsr0AwI88AADPuwBgZz0AgKC8AIBCPAAAeb0AAPy7AIBsvAAw2L0AwLQ8ACA7vQAA0jwAgIM8AKALvQAgnL0AYDY9AADKPADAtzwAgDg8AEDzPAAAGLwAAAC7AGBEPQCAKDwAQG89AADauwAAxr0AwB89AMCSPADgSD0AgD09AACguwAAq7sAAAy8AIBivABAuDwAIBk9AADouwAAXLwAQKw8AIANvADgpb0AYB49AKBfvQDAsbwAAHu8AIAnvADA5TwAADI8AABquwAADrwAkJ+9AICVPAAAXLwAAEg8ACAJPQAAWr0AAGA6AABFPACAGTwAgN49AIADvABA4LwAgEo8AJCDPQCAM7wAQBk9AEC5vAAgmj0A0Lc9AFCAPQDgUb0AABe9AACnvQCgAj0AgKK8AIAFvQBAST0AYDO9AGArvQAABDwAsJS9AIByvACANL0AwLU8AADkuwCQkT0AQIQ8AIBgPQDgIT0AAKw8AICsPAAQrb0A4Ci9APCzvQAAf70AYBo9AEDZPAAAODwAwAg9AIAdPQCAGL0AgJ+8AACPPACgYr0AAMA5AECGPABAtjwAAMO7AOBZvQAAoTsAwP+8AMDgvABAOz0AcKc9ACBqPQAAvDoA8JQ9AAA1PABgIj0AgPq8AEATPQDA3zwAMIK9AED7vACAHrwAQAC+AACQvQBAWD0AAMI9AAD2uwCQkD0AUKA9AIC/vADAXb0AgO+8AID3vADAzjwAANE8AIA0PQAAQb0AAFY8APCzPQBQor0AwOi8AKCsPQCgrT0AQMk8AEBbPQDgGT0AgFS8ACAhPQDgKL0AwLQ8AEAgvQCAE7wAAAG8AEBxPQCAOT0AACw7AEDEPADAib0AIHw9AOD8vQAA67sAIIS9AIByvAAAGbwAAEK9AACXuwAQgr0AgD69AGBxvQDAo7wAAGi8AEA5PQBAS70AEIs9ABCIPQAA7LsAgAc9AIALvAAgDr0AoBC9AIAivAAgjT0AAH08AEDlvABgY70AAGE8AAAEOwAAkTwAgN+8AGBCvQCAJDwAgAc9AAB/vAAgbb0AQLW8AACGvAAAfbwAYFC9AOADPQBwxL0AgES8AABAuQCAazwAoI29AOBMPQAAWjsAALe7AMDSvAAAMrsAAFS7AIB9vQAA4DwAwHK9AABYuwDgpT0AAFk8AKAqPQAAerwAgOQ8ACBcvQAgXj0AwLE8AIC+vAAgXr0AAOO8AIByvACAmbwAgCW8ACBVPQAAl7wAUKG9AMClPQDAzDwAeAQ+ACCOvQDgBj0AIHA9AADOPADAkr0AIBQ9AKBQPQBAirwAAO07AICYvADwh70AAPy7AAAQuwDAx7wA4Bo9AEDePACgSD0AAI+8AIANvACgFb0A4BG9AMCdPAAAxjwAQAQ9AAByuwAAqjs=","chunkHash":"90c3465260809a6c888dba666b8e31cfd2a843e70aa8487d86ec1a03b4edbac9"}]},"file:///teamspace/studios/this_studio/scripts/temp/test_mesh_dataloader_compatibility.py":{"hash":"ebc5411b97555f32fe5455c7c6b2189f8c7bc9e8115678b054c3ab1cc2a3beec","entries":[{"text":"File: `scripts/temp/test_mesh_dataloader_compatibility.py`\n```python\n#...\ndef reshape_for_morphofeatures(batch):\n    \"\"\"\n    Reshape the batched data to match MorphoFeatures model expectations.\n    \n    Args:\n        batch (dict): Batch data from the mesh dataloader\n        \n    Returns:\n        dict: Reshaped batch for MorphoFeatures\n    \"\"\"\n    # We noticed the points are already in the correct format [B, 3, N, 1]\n    # and features is already provided in the right format [B, 6, N, 1]\n    points = batch['points']\n    features = batch.get('features')\n    \n    if features is None and 'normals' in batch:\n        # If features is missing but we have normals, we'd need to create it\n        normals = batch['normals']\n        # However, your normals are [B, N, 3] but points are [B, 3, N, 1]\n        # So we need to reshape normals to match\n        if len(normals.shape) == 3:  # If normals is [B, N, 3]\n            #...\n```","range":{"startLineNumber":9,"startColumn":0,"endLineNumber":29,"endColumn":0},"embedding":"AIChPQBgED0AUL09AIBKvQAgfL0AwK69AGB4vQAAyTwAgI+9AECQPAAAyDoAQJS8AMCdvAAAdLsAwD+9AIBsPQCAGj0AYBw9AACPuwAAkjwAAEE8AACgPAAAPDwAoC+9AAA/vQAAMjwAgBO8AMACPQDgTz0AAOI8AECaPACAdLwAUJa9AACtPACwo70AAPC8AAD+vACwnj0AwM68AAC4OwAAOj0AMIi9AADuuwCAQbwAAHQ8AIAdvABAaD0AgDK8AGAKPQCgtz0AgCa8AMDMPQAgBz0AAA28AAAHPQDwoT0AwLA8ACB4vQCAK7wAAPy6ACBXPQBAYL0AwKo8AADtvABAsLwAYDE9AMCovQAA1rwAwP88AAC/PADAAb0AADw8AIDuvACAgb0AAMu8ANCvvQCAubwAQMM9AGCqvQAADr0AIGa9AABsOwAAWDwAwKa8AEBcvQAAxrwAAMa8AEAGvQCA7LwAQMm9AAA2PQCARzwAUL69AIAhPABA27wAAEA6AICcvABw5b0AgF09AECPvABA8TwAQOs8AIC/vABAAT0AAHE8ACCLvQAA57sAAJQ6AIBCPACggj0AAEC8AIB8vQBgoT0AQIs8AACKuwBAX70AwLM8AGBLPQAAbL0A4BE9AAADvQDA6jwAoD69AKAPvQBANb0AgEk8AIAkPQBgMb0AQFq9AADWvAAABDwAAFI7AAD7uwBg1b0AkJq9ALDhvQBARr0AwLa8AMDEPAAAfDsAgBw8AIAIPQCAaDwAgMC8AFCHvQCgSz0AwBa9AFCBPQAAUTwAAL89AEBWvQCAALwAQFQ9AIBbPAAAvjsAoCO9AACkugBgWD0AwO48AMCYvAAgNj0AgBC9AECdvADAJT0AAKC7AGACPQBAg70AAH48ACBlvQCw4L0AAHo8AMCRvAAATDsAwFa9AIB3PAAAKrwAAPy8ACC7vQCA7LwAwDy9AABovAAAlDoAQNu8AAA6PADwh70AQEO9AADVvADwsz0AwBQ9AACTOwCAFDwAAIk8AEAsvQDAz7wAoHY9AHD2vQCgvj0A8KG9AABoOwAAULsA4C+9AADUOgAAxTsAAFw7AIBtvACQlL0AgAu9AADgOgCgbL0AAPg7AAB8OwCQlT0AAP28AEAEPQCANLwAQEC9AKCOvQCABzwAQM28AOA6PQDAqTwAQDK9ACBmPQAAoT0AgOi8AEANvQBgNj0A0J69AACcOgBA/rwAoFm9AEAKvQBgKz0AwOE8AICxPACgbb0AgPC8ANCPvQDAHb0A0JU9AIDgvADAbj0AQC29AMDtPAAA8zwAgIq8AEDdvAAAGr0AAGC7AMD9vACADz0AAEO8AMAxPQAgtr0AwEa9AKBpvQAAW70AAIo8AADyvAAA2zwAwIU8ACASPQBAcr0AYOM9AGARPQCgeL0AAOG7AAA2uwCA4jwAwIs8AABAOQDAHz0AACE8AAAEvQAgOL0AQDs9AOB3vQCgTT0AwFA9ACAMvQAAIDwAANe8AEB3PQCAiLwAQMq8AKBHvQBgBb0AgEY8AIBGPADwhr0AgBA8AOAAPQAAcbwAAGK8AADcuwDAyLwAALC8AECmPACgOT0AkLO9AIAWvQDAMb0AQPE8AKAJPQDAvTwAADS8ACA5vQCAMLwAMKw9AAABPQAAZDwAQPq8AMCBPACANrwA4I69AIBoPABAbz0AAEm8AICfPQCAhzwAINK9AKBGvQAAlbsAgLO8AACSOwDApDwAwMa8AIDfvAAAhTwAABa7AECUvAAA1r0AAK07AEBSvQAAJLwAAG49AACwOwAgVj0AoC09AAAAugC4BL4AIB+9AIAwvABArbwAAC68AABBPAAAujwAYFI9ACAxvQAA9rwAIAS9AIByPAAAfDsAEIQ9AKASvQAAlLsAAG47AEC8vADgBj0AAAg7AICzvAAAXD0AAFc8AGCTPQDAAL0AQBM9AEAkvQDglz0AQNS8AAC5uwBAmLwAQIa8AMCJvQAAyTwAoJa9AKCJvQAATT0A0Iw9AIDzvADgHT0A8I89AID0vAAADTwAANS7AAA4OwBA0jwAoBO9AADsOwDASL0AIDg9AAAAPQCA4TwA8Ig9AIAuPACAcD0AAEI9AAAAPQAAgbwAgDa8AIBlPADAXL0AgCm9AACEvACAerwAAKA6APCLPQBApjwAgDg9AEDWPABgNT0AAGk8ACC8vQBAszwAYJu9AACYugDA1bwAwHy9AIABvQBQkL0A8IY9AAAfPADgBL0AAD67AAC5uwCgSL0AUMU9AAASPADA5TwAwN28AABSOwAAP70AwBu9AEDEPQCAZrwAgD89AIB9vACAh7wAgKU8AECyPAAAXL0A4D69AIAVvQDgQD0AwOU8AGAKvQCAhrwAUJG9AID3PABAirwAALe9AICHPADAorwAAAs8AGBsvQCAZD0A4Cm9AIDtvACADbwAIIs9AMCJvQCgpD0AwFS9AMAWPQAAO70A+AS+AOB3PQCAdTwAgAg8AIAvPAAAejsAQJc9AGAtPQCAmD0AQIo9AGAZvQAAbrwAAAa7AIAdPAAAmLoAwOU8AOCWPQAA0jwAoDa9AMDHPACAjzwAsKs9AGAFPQAgI70AAHW8AAD9PADQlb0AAIo9AEAGvQAAMbwAoBk9AKCOvQAAk7sAgBM8AABFPAAAMzwAAIy8ACAOvQAgVD0AwM48AIBkvAAAaLwA4DS9AABDPACQgr0AAIC7AOAmPQBANT0=","chunkHash":"c15acb6eeaa3ebaca00c1e7a8f97449f5b5e631efe1150ec0258e9333df1b972"},{"text":"File: `scripts/temp/test_mesh_dataloader_compatibility.py`\n```python\n#...\ndef reshape_for_morphofeatures(batch):\n    #...\n            normals_reshaped = normals.transpose(1, 2).unsqueeze(-1)  # Now [B, 3, N, 1]\n            # Concatenate along the feature dimension\n            points_squeezed = points.squeeze(-1)  # [B, 3, N]\n            normals_squeezed = normals_reshaped.squeeze(-1)  # [B, 3, N]\n            features = torch.cat([points_squeezed, normals_squeezed], dim=1).unsqueeze(-1)  # [B, 6, N, 1]\n    \n    # Create a new batch with the correct tensors\n    morpho_batch = {\n        'points': points,\n        'features': features if features is not None else batch.get('features', points),\n        'label': batch['label'],\n        'metadata': batch['metadata']\n    }\n    \n    return morpho_batch\n#...\n```","range":{"startLineNumber":29,"startColumn":0,"endLineNumber":43,"endColumn":23},"embedding":"AMAqPQCABLwAIMg9AKAPvQCgH70AwI29ACBWvQBA9jwAkJq9AADduwAA5rsAQKA8AACbvAAAMDoAgCu9ANCLPQAAALoAgOk8AIA6vAAAQLkAAHk8AIAAPADArjwAwI29AFCVvQCASbwAAGu8AABTPQDwhT0AgDg8AMCLPADAo7wA4LO9AECRPACAtr0AQNG8AABIvACwlj0AABe8AADlvACANz0AUIC9AAAwOgAAOrwAAAY7AAAoOwDgGD0AgOK8AABWPQCwhz0AAJs7AMCMPQCgIz0AAKC6AABfPACwjj0AAP67AEAUvQAAGLsAABA7AKAiPQDgEb0AoBQ9AEAivQCAGr0AoDo9AMBOvQDgFL0AgPE8AACyPABA97wAAEg7AECDvACA7LwAACK8AAB7vQCA7LwA4AI+ACCHvQAgNb0A4E29AAAUPAAApzwAAEa7AGA6vQBA3bwAAF+9AABXvQBgCb0AoLK9AAD9PAAARLsAwI29AAC2PAAAArwAAIM7AIAVPADA0L0AgM88AICOvACAvDwAwAE9AABYuwAgQz0AgEY8ACCHvQAAlLsAADa7AIDGPAAApj0AALa8AGBhvQBAeD0AQOo8AMCOPACger0AwEQ9AMAZPQCgUr0AwOY8AAAevQDAHD0AAIa8AICNvADwgb0AgE88AHChPQAQhL0AoDm9AEDVvABgED0AAIc7AIBPPABAsb0AgGm9AIDbvQDAhb0AgBm8AACiPADA/zwAAE88AAABPQCAgzwAAJq7AGCfvQCgUD0AQFa9ACCTPQAAiDoAAF49AKAbvQAAfDsAQO88AIAIvAAATrwAQHu9AECsvABgqj0AICQ9ACBHvQDgDT0AAAy9AIBCPACgTT0AANC8AEDTPAAAiL0AAE67AFCcvQAg9b0AAE49AIBzvAAAgrwAgHK9AIB/PAAAVLsAgCK9AGDLvQAArLsA8JC9AABwuwCAIjwAAAw7AACwuwCwx70AABG9AEC+vACwoj0AgA09AIAgPACArzwAwDk9AICfvAAAZDsAEJw9AADZvQCwvD0A4Iy9AECgPAAAZLwAgCW9AIBGPAAAhDoAQJw8AAC4uwBAqb0AgMO8AACzOwAgf70AgB28AAAyuwBwlT0AQM28AGBAPQCAIzwAwGu9AIB8vQBA8DwAwOy8AKAVPQCA6jwAwCa9AGB4PQAQiD0AAHe8AADKvACgaj0AMJ29AIB+PAAA/rsAQD+9AACPvADgAD0AgKY8AICuPAAAXr0AANu8AEBtvQCgTL0AgFU9AKAxvQBwkT0AYEe9AABgugCAHDwAAPu7AAAIvAAAPL0AADY7AAADvQCASzwAALw7AMATPQAQt70AIF29ACAMvQBAvrwAAMC8AACCvAAADz0AACq8AIC6PADwhr0AIM89AMC4PAAAOL0AAGw8AAA+OwBADz0AQIM8AECLPABgVT0AAPG7AIBIvQAgdr0AYEg9AKA6vQCwlj0AgGk9AECjvAAASbwAQPu8ACABPQAA9bsAADe8ACBMvQBAs7wAoCI9AEAMPQDgZb0AwLU8AAD9OwCATTwAgIA8AADNuwDAmrwAwLS8AMCMPADAAD0AwKe9AADnvACAPr0AQBM9AOAFPQCAQD0AAAy7AICGvQCAGTwAEJw9AOAvPQAAHLwAICi9ACA7PQCAPTwAYDa9AIAUPAAgJz0AwBq9AFDNPQAA2LsAAKK9AGCHvQCAMbwAgA68AABmvAAACj0AIEi9AOBkvQAALjsAABO8AMDhvADg0b0AwOU8AMCgvAAAALkA4E09AIA/PACglT0AwOU8AACROwA4FL4AQAy9AABdvADA97wAwJI8AIChPABAHj0AYFs9AIAsvQDAB70AgGm8AIACPQAAt7sAoDw9ACAEvQCATrwAAK+8AEDnvAAA2DwAAIm7AIAEvAAgZD0AAHU8AAA/PQCAArwAYBc9AICFvAAQlT0AACS9AADgOgAAAAAAAMA7AEArvQDABD0AAIy9AKBuvQAARj0AkJ49AOA9vQBAQT0AYIw9AEC3vACAXTwAAEi6AIABvACgBT0AAOi8AIAAPABgN70AwN88AMASPQDAvDwAQFQ9AIBbPACgSj0AQP08AACQPADAirwAADW8AABdPABABb0AwAO9AADzvACAAL0AAO48APC4PQAA/jwAoHw9AAAOPQBgMz0AwLw8ALClvQAApDoAUJy9AADkuwDABL0AMNS9AABZvAAApb0AkKI9AIBZvACAfrwAIAG9AAChOwBwgb0AUK89AEDsPAAArLsAwEG9AADuuwBAj70AABG9ANCDPQBAjzwAwDQ9AIB+vAAAg7sAYCA9AIACPQBAGb0AcIy9AAC1vABgGD0AAL88AIAxvQCgCr0AIIu9AKAqPQAA+jsAoJG9AAA0PADgSL0AAEQ8AKBnvQAATD0AoIG9AIDzvABAh7wAoJE9AHCJvQDgkT0AAGq9AIB0PAAA3LwA4LC9AAAoPQCAOD0AgLy8AADFPAAAi7wAMK89AMDbPACQjz0AoIA9AOAdvQCAT7wAALw6AIALPQCAD7wAACo7ACCbPQAASD0AQG69AAAHPABAAj0AkBY+AECnPACA9bwAgJ68AGAzPQAQr70AwHs9AIA6PAAAebwAYAQ9AIB4vQCAKbwAAGo7AGBMPQAAYLoAAFA7AICrvAAAaT0AgEk8AACkOgCAQb0AgKe8AAAAugDgKr0AAPg7AMBwPQDAMj0=","chunkHash":"7da83d7722fdb93736aedc7645f3bba8480ababf9dc3e17f7476e2b94e9299f5"},{"text":"File: `scripts/temp/test_mesh_dataloader_compatibility.py`\n```python\n#...\ndef test_deepgcn_model(model, batch):\n    \"\"\"\n    Test if a batch is compatible with MorphoFeatures DeepGCN model.\n    \n    Args:\n        model: DeepGCN model instance\n        batch (dict): Batch data formatted for MorphoFeatures\n    \n    Returns:\n        bool: True if compatible, False otherwise\n    \"\"\"\n    try:\n        points = batch['points']\n        features = batch['features']\n        \n        print(f\"Input shapes: points={points.shape}, features={features.shape}\")\n        \n        # Forward pass\n        out, h = model(points, features)\n        \n        print(f\"Output shapes: out={out.shape}, h={h.shape}\")\n        return True\n    except Exception as e:\n        print(f\"Error running model: {e}\")\n        return False\n#...\n```","range":{"startLineNumber":45,"startColumn":0,"endLineNumber":69,"endColumn":20},"embedding":"AEADPQCAxrwAgIc9AOBDvQBQjr0AABe9AIBmvQDA4jwAQCy9AABdvACAzTwAAH68AABJvQAAPLsAkIK9AICTPQDAWb0A8IA9AEAWPQDAqTwAQDk9ADCuPQAASDsAQOe8AABauwBgH70AAFO8AABAPQBAaT0AAPg6AMBNPQAAuLsACBC+AABWOwCgCL4AgG28AECjPADQwj0AgDe9AAA3PACAHjwAgKi9AABAOwCAtjwAIA+9AADGOwBQlD0AgJ+8AGAQPQAgOT0AgBy9ABDOPQBAlDwAsIC9AIDPPAAgBT0AAH88AMCcvAAA6LoAAMY7AIBHvQCQqb0AwAC9AADUvABwor0AAAC9AIBXvADA+bwAAE47AEAEvQDATr0AANg6AAAtvABgZr0AIGq9ACCPvQAgFT0AkJw9AABjvQBABL0AQAC9AKAlPQCAqDwAANW7ACB+vQCAGrwAgMG9AEDhvAAgLL0AwIe9ACBLPQAAVD0AwMq8AEDqPADA3jwAgNS8AACAuwAg+r0AAKc7AABavABA4TwA4EQ9AADBvADAaj0AgN08AMDivACA3TwAQMI8AMDVvADAaD0AAHQ7ACALvQCAAD0AACY9AOAuvQCAlr0AoAM9AADvOwAgcL0AwO48AKACvQCAkTwAwJe8AOCDvQAAorwAAIc8AACsPQDAHr0AILO9AAAmOwBAubwAQMc8AOB7PQDgIb0A8JS9AJDGvQDQpr0AAG28AGABvQAAPrsAAOA6AIChPAAAE7wAACA6AOAkvQBgOT0AALu8AAAhvADgZL0AQGM9AAAYvAAAtTsAIGk9AIDCvAAAOL0AQOy8AACkvACgMj0AIFc9AOACvQDgSj0AwAY9AAC7OwAwhj0AAI47APCxPQDAh70AoB89AMD6vACAqL0AcKY9AJCXPQDger0AgEe9AABIPAAATb0AAC+9AMDEvQDAq7wA0Ju9AADMuwCgST0AgGe8AAAYPACgi70AwJG8AABqPACgYj0AQMk8AADQvABAjDwAAFs9AIAMPADAQr0AIHA9AIC9vQBAwj0AwMW8AICNPABA97wAYES9AADFPACASbwAgBk8AADwOwCgHL0AQIo8AOBvPQCA3r0AgOc8AECGPAAwoD0AQIS8AMDavACAFjwAIHa9AMBYvQBgYr0AAEQ8AKAmPQAAeLoAgDc8AIAmPACgpT0AAOA6AACCuwBACj0AIJC9AOAlPQCAoLwAAAa9AAASvQCgBT0AQAU9AIDfPACAt70AAFO8AECovAAAj7wAgEs9AMD6vAAgkD0AAGq8AIAOvACAEDwAoAy9AAAMuwBgPL0AALK8AABAOgAAubsAAH67AABOPAAA3r0AAOO7AADFvAAATb0AAPO8AMDtvAAA97wAYCe9AEAAPQDAp7wAQIM8AECrvAAA6rwAIA09AIBRvQCAfLwAQMy8ACA3PQAAazwA8M49ACB2vQAwoL0AQNw8AAAwvQBgGz0AQFs9AMBOvQCAGbwAAD29AGBxPQAApLoAgCe8AEClvACAYL0AQIw8AEDqvABA9LwAwJU8AIBhvAAAjjwAwKG8AAAZPACgQL0AgJe8AICgPQBAlzwAMLW9AMA1vQDgHz0AADg7AABpPACAWzwAQIG8AHCbvQAgOD0A4IQ9AOAxPQAAXb0AQCy9AIALPADAtbwAoDm9AMD+vAAADLsAAHs8ALCfPQBAvDwAoEm9AAA7vABA7bwAwIY8AEBAvQAALD0AQI88AMCCvQAAkDkAQEs9AADMOwBwjb0AQKQ8AAB6OwBAl7wAsLE9AEDhvADQqj0AYB49AAD1OwAADL4AwN68AIBqPABAoLwAAIk8AIADPQDAmrwAoDM9AMD7PAAgRb0AAOe7AAAHvQCAe7wAQBU9AABqPAAAQLoAAOK8AIAnPABgPT0AwKU8AABWPACgNj0AwP48AABPPQAARrwAgAC8ACBHvQAAojwAAIq8AICvPAAARLwA8IU9AABQvQAAPTwAULG9AAAzvAAAm7wAgPo8AIAGvAAAYrsAwJI9AABTPACA5DwA4Be9AABFPACAAz0AYHq9AKBHvQBgZr0AALs8AICQPACgCb0AgBo8AABqvABAxzwAIFk9AFCgPQCAKLwAQBQ9AICJPABARL0AYA29AOCLvQAgoT0AAM88ACCBPQBQiT0AYFk9AAAFPADgJz0AgGU9AOB+vQAA7LoAMIa9AAA+uwCgKr0AMJW9AEAnPQAA1jwAAPQ8AAALPQBgOr0AoD29AICCPABA37wAgBM9AMAcPQAA8DkAAFI7AMD2vAAgmr0AYAu9AOAkPQAAvLoAALo8AAAyvAAAyDwAAH48AACWuwDAkr0AwI68AEAJvQAAqzwAAK28AADwvABA0jwAgIi9AACAOgDAsDwAgFO9AECVvABgRb0AoAO9ANC/vQAAdrwAIAi9AKBOPQCABT0A4Ow9APCevQCAIT0AcMC9AKA1vQDAwLwAYHW9ACBJPQCAgDwAAIC7AOAAPQAAKLwAUJw9AAC5OwBA6DwAwKM8AIATPACAJr0AQIk8AKAzPQCAMDwAAEC5AADPOwAAozsAAC29AABWPACgEz0A0AY+AIAaPAAAlzsAwIe9AKAOPQAQmb0AADk9AADKuwAATrwAoFo9AKBzvQDAxjwAwJA8AADUPAAA2jwAwEe9AABSOwDAjj0AAOm7AGAgvQBgK70AwI68AABQOgBgXb0AQJK8AABSPQAgnj0=","chunkHash":"30e30a5345f5164a39c90dd3649c897eb1fd0fc62f9e0cb6a91d0ff5e48d29b5"},{"text":"File: `scripts/temp/test_mesh_dataloader_compatibility.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Test mesh dataloader compatibility with MorphoFeatures\")\n    parser.add_argument(\"--root_dir\", type=str, default=\"data\", help=\"Root directory for data\")\n    parser.add_argument(\"--class_csv\", type=str, default=\"chromatin_classes_and_samples.csv\", help=\"CSV with class info\")\n    parser.add_argument(\"--batch_size\", type=int, default=2, help=\"Batch size\")\n    parser.add_argument(\"--num_points\", type=int, default=1024, help=\"Number of points per mesh\")\n    args = parser.parse_args()\n    \n    # Create a dataloader\n    dataloader = get_mesh_dataloader_v2(\n        root_dir=args.root_dir,\n        class_csv_path=args.class_csv,\n        batch_size=args.batch_size,\n        return_type='pointcloud',\n        num_points=args.num_points,\n        debug=True\n    )\n    \n    print(f\"Dataset size: {len(dataloader.dataset)}\")\n    \n    # Test the first batch\n    try:\n        for batch in dataloader:\n            print(\"\\nOriginal batch shapes:\")\n            #...\n```","range":{"startLineNumber":72,"startColumn":0,"endLineNumber":95,"endColumn":0},"embedding":"AGB1PQCA2jwAUO89APCAvQBAQr0AQKa8AOBEvQAASLsAgEq8AAAsPAAAVLwAAEq7AAD8uwCALr0AAG69AFCoPQCALLwAYBA9AADEuwAwij0A4K49AIBoPQBADj0AQAi9AMDQvADAkL0AgAO9AKB6PQCggD0AIFG9AIBVPACAzrwAIHa9AOBpPQDgo70AwBK9ACAOPQAAlT0AgF88AABRvQBgaz0AgNO9ACAcPQCAEzwAwL28AKBVvQCAQT0AgN+8AMBnPQAAr7wAQP68ANCcPQDAtjwAwOu8AACduwDgQD0AAIO8AEC2vAAA3rsAYC69AED5PAAAA70AAIC4AAC6vADgSb0AALc8AMCbvAAAZb0AAGi6AMC7PADArDwAANU8AMDAvAAgfb0AAJi7AEDPvQCAAbwAoMI9AECYvQAgRL0AYE+9AHDFPQBAszwAgJ+8AICwvADAE70AQEG9AKBEvQCAyLwAkNa9AIDEPAAA1zwA4Ai9AED3PAAgFD0AgAu9AEA9vQAQDL4AAHg8AAA2PAAAfT0AAAQ9AGA5vQDABT0AQCA9AOAFvQDAPz0AwKa8AID3PABgmj0AYB+9AICsvADAfD0AADm8AIAbPAAA6bwAoCA9AAAMPACA/7wAALi6AGAgvQBAqTwAAKQ7AECVvAAA+LwAQJ48ADCEPQAAJ70AAEK9AOAWPQBgDz0AgNg8AICIPQDAhL0A4Ei9AGDCvQAgq70A4CS9AABMOwCQjT0AgGu8AABoOwAAjDsAAJg8AHCFvQCAkTwAYFK9AODFPQDA2bwAoFQ9AADCvADA5jwAoGI9AADbuwAAlzsAQN28AABkuwAgMT0AAJY7ACAZvQAA9zsAADg6AAAAugAAqbsAwAy9AAAAPQCAOb0AgLa8AGCYvQCAtL0A8Jo9AMCavAAAZDsA4Gm9AAA4OwCA0rwAYAu9AAB7vACAkrwAICO9AECyvAAAoDkAAH08AIAFPACAe70AYJK9AACYugCQrj0AwL88AIBLPADgdz0AAJM9AECMvACgH70AwNw8AEB0vQAw9T0AQB69AACIOwCAOTwAgBe9AMBAPQDgJD0AALS8AABcvACwhr0AIBu9AACwuwAAdL0AAOq8AAAsPABgWz0AIBS9AAC3PACAQrwAQCy9AFCGvQDgSD0AAKa7AMDKPAAgBz0AwJM8AOBxPQBAYj0AABK7AADruwBAxTwAwDy9AADjuwDA1zwAAAC8AIAvvQAAhjsAkIQ9ACANPQAQl70AgAk8AOA8vQDgLr0A4Lo9AABZvQCAdT0AAOK7AADTuwBAhzwAAKM7AABOvACAZr0AIBA9AIA2vABAIj0AADi8AKBePQBA1b0AoEW9AMBYvQDgF70AAAA8ACBNvQDA+TwAYDW9AACwPADgY70AcJ89AKA9PQBAGL0AYAE9AABsuwCAbrwAoBG9AMAUPQCAuTwAACw9AICuvAAA1b0AwE09AMCyvADAoz0AYKU9AAD9OwCAsbwA4Be9AICqPADA+DwAAIE7AACTuwAAtbwAAMs7AACVvABAqLwAAIK8AAAbvACAuzwAADe8AMDXvAAAtLoAgFK8ACA7PQAANjsA4MW9AADZuwDAjLwAwCs9AAC8OgCATT0AwK+8ACAGvQAgIj0AIBs9AABjPADgcL0AICm9AICcPAAAUjwAgNS8AADwuQBgMz0AgNw8ADDWPQAAOLsAIFy9AAD0vACAlDwAwKE8AMBLvQDgQj0AACm9AKAtvQAAGDoAAPY7AIAHvACQ570AQAw9AAAlvAAADDsAAAE9AAD4OwBArT0AwPE8AOBiPQBA7r0AgE68ANCVvQCAWTwAQJ08ACAOPQAAyTsAYIE9AAAyvADAGL0AAAa9AACzuwCAJb0AwPc8AIA/vAAAyjwA4Ha9AEDHvACwiT0AAD68AACruwCAcz0AAAy8AIAQPAAAljwAYF89AFCMvQCAXz0AAA29AADnOwAA0LkAQEs9ACArvQAAzDwAQIO9AOAavQAABzwAgIk9AADVvACAPj0AMIc9AICQPAAAO7wAQIq8AACQOgAAtzwAAJO7AICOPAAgkb0AAOc7ABCfPQAAqbsAwKU8AECwPAAAjbwAgOg8AHCKPQAAmzsAQBE9AMCXPAAAWLsAwNG8AECpvQCAIz0AAPo8ACBjPQDgIT0AwA09AAD6PAAAPzwA4GQ9AOCwvQCAFD0AIGu9AOAcvQAAT70AcAG+AAC4ugCgQr0AACM9AIAWPQAASDsAYH69AMDMPADAL70AIPs9ABCFPQCAULwAAEs8AACCOwCQor0AgOG8AMA2PQDAjj0AgJw8AOBOvQAAUDoA4Dg9AAAePQCAzrwAgCy9AMCZvADAYj0AYEA9AMD+vADAprwAwDG9ANCBPQAA0LoAQJq9AADkugBgWr0AAOw6ACApvQDATz0AcJG9AABwuwAA67sAMIg9AIDNvADgYz0AICK9AMA+vQAA4rwAAJG9AACguQBAPz0AALs7AEDlPADA97wA0IY9AAA2vADArDwAQEs9ACCJvQDAZL0AAI67AMCfPAAASbwAAAC8AEA6PQCACjwAgFq9AIDIPAAAg7sAGBY+AAA5vQCAxTwAgLm8AAAOPABgwL0AAIE9AOBJPQCAV7wAoAY9AEDevAAAmDoAgAE8AADkugAAo7wAwIa8AACEPADgZz0AACY9AAD8ugBQm70AYBG9AIBbvACAzbwAwCi9AIAmvACgQT0=","chunkHash":"1746191ca18dc05cd2a25c5a49b9f0ceb6d3b6f707b181c50b3ddacd5936d4c8"},{"text":"File: `scripts/temp/test_mesh_dataloader_compatibility.py`\n```python\n#...\ndef main():\n    #...\n            for key, value in batch.items():\n                if isinstance(value, torch.Tensor):\n                    print(f\"  {key}: {value.shape}\")\n                elif isinstance(value, dict):\n                    print(f\"  {key}: (dict)\")\n            \n            # If features already exists in the batch, use it directly\n            if 'features' in batch:\n                morpho_batch = batch  # Already in the correct format\n            else:\n                # Reshape the batch for MorphoFeatures\n                morpho_batch = reshape_for_morphofeatures(batch)\n            \n            print(\"\\nReshaped batch for MorphoFeatures:\")\n            for key, value in morpho_batch.items():\n                if isinstance(value, torch.Tensor):\n                    print(f\"  {key}: {value.shape}\")\n                elif isinstance(value, dict):\n                    print(f\"  {key}: (dict)\")\n            \n            # Check DeepGCN compatibility if available\n            try:\n                from MorphoFeatures.morphofeatures.shape.network import DeepGCN\n                \n                print(\"\\nTesting compatibility with DeepGCN model...\")\n                model = DeepGCN(\n                    #...\n```","range":{"startLineNumber":95,"startColumn":0,"endLineNumber":121,"endColumn":0},"embedding":"ACAzPQCgC70AgJg9AMB0vQBgD70A4Bi9AKAUvQBAgD0AAFS9AKAEvQBA7jwAAEi7AADgvACgF70AoHC9AMCcPQAgSL0AIF09AAB4uwCA3DwAgGY9AMD+PADA9DwAwNm8AMDZvADANr0A4EC9AABhPQBwhD0AAAS8AMBEPQCAJ7wAUNC9AKAFPQCQ4b0AAMa7AACiOwAQpj0AAAA4AEClvAAgUD0AkMO9AACPPACAdDwAQIu8AICevABgQD0AgEC9AAD0PACAArwA4Bu9AKCXPQBAszwAoEO9AACPOwCgVD0AgAm8AOAbvQAAorsAAIW7AIBovABAg70AAP47AMCqvABAer0AAFQ7AIClvABAr7wAAP87AIDdvABA7LwAgA+8AIC0vAAwq70AgJS8AMCCvQAA4DoAwL09ACBOvQCgYL0AgD69AEAtPQCAEjwAADc8AMAZvQAgOr0AUO69AEBgvQAAvrwAAKS9AABCPABApjwAQGW9AMAqPQBA1jwAAFq7AABavAAA770AACA7AABrPADQiz0AAFc9AEAZvQBgRD0AgLE8AIA0vQCAmjwAQN68AIBcvAAAoT0AwEq9AGBGvQCAEz0AIDU9AACzOwBgQL0AIHs9AAC6PABAFL0AwPM8ACAfvQAAKrsAAGC8AGByvQDASL0AAKM8AJCBPQAgGr0AoG69AAAKPAAAiTsAQIy8AIApPADAb70AQHG9ACDAvQAQyb0AgAC9AACnuwAAJz0AwMK8AADCvAAA3DwAAM87AFDGvQCART0AgFG9ACCGPQBgF70AAFM9AAD4vADgFD0AwPQ8AEAFvQDAn7wAgCu9AMDOvACgxD0AwCg9AEB+vQAAALsAgB48AIA5PACgPj0AAJa8AOBvPQAAWr0AQP48AHCNvQDApr0AoGY9AICLPAAAybsAAHS8AACvOwDAL70AMKu9AOB/vQAA5LwA4Da9AMDlvACAsDwAALA7AAAmuwCQv70AgD29AIBkPADAYz0AAEi8AADCvADgcj0AcIw9AACyvAAAgLgAEI09AFDNvQAgwz0AcJW9AACROwAAWDwAgAm9AOAYPQCADrwAAMq7AACuPACw2r0AAJC6AECcPABwkr0AgA+8AADNOwAwlD0AwNS8AADTOwAApLsAYB69AGBbvQAA9rsAAIo7AABcPQBAxzwAgLM8AMC+PADgdz0AAIG7AIBRvADApTwA8Km9AADyPAAA4DkAgOm8AOAZvQAgMj0AgK08AADVOwDwpb0AAGC6AMAFvQBgCL0AYLU9AGARvQBQjT0AgAS9AABSvAAA+rsAALm8AECivACAS70AAL87AIB7PAAAOjwAAOa7AEAyPQCAy70AQBu9AMDpvABA67wAgAK9AAB0OwCAqDwAAC68AICEPABAML0AQL08AABAugDAGL0AwPo8AACPvAAAtDsAQI68AMAyPQCAXTwAQGk9AEDDvACwjL0AwCc9ACBOvQDQlj0AALA9AAAmvAAAkbwAQMy8ABCRPQDAjbwAgLq8AAD9vACADr0AID09AADPuwAAsbwAQIU8AMDwPABgEz0AALC5AAARPADAGL0AAMm8ANCaPQCAbzwAkMK9AKAUvQAANjsAAJQ8AICFPAAAqzsAQIS8AKBPvQAgLj0AIJY9AKAoPQDAF70AwHy9AED9PAAA37wAQF+9AECyvABgDj0AAL27AODYPQAAFLsAIEu9ACBtvQAAoDkAAHS7AMBHvQCA5zwAAJG8ACBbvQAACDoAAPk7AIAzPACws70A4FA9AAD0OwAA87sAwEU9AIBIPACQ3D0AACI8AIDAPACQ7L0AgFW8AMCCvADAmrwAAAU9AABVPQBAkzwAQJs9AADOOwAAbbwAAHo7AIBlPABAMr0AQFM9AIAavACAa7wAgOq8AABuPABQ0T0AABQ7AOAWvQBAKj0AQNM8AAD2PACARjwAgPk8AACmuwBwjT0AgCe9AID6PAAAlLwAgMg8ACBhvQCAfDwAoL29AMCmvACAQ7wAwJ89AACHuwCA6zwAwG09AAD7uwAAvjsAQNm8AAAvPACA9TwAQNu8AECSvACQmb0AQJY8AAAOPQAA4rwAAPU7AABAPABAsDwAYDQ9AKB+PQAApbsAYGQ9AMCCPACA2bwAYAy9AOBzvQCACz0AYCM9ADCAPQBAVT0AELI9AADTOwDAojwAQIs9AOB3vQAAOrwA0LS9AKAIvQBgZ70A4Mm9ACA+PQAA4LsAADU9AMAePQBgL70AoIq9AAAQPAAA37wA8LE9AGAqPQAAf7wAAEg6AMCSvACQkb0AYBe9AMDLPACQiD0AAFY9AAC4OgAA8DkAgIA9AACyPACgX70A4IW9AABcvAAgCj0AgCs8AOCcvQAAJ7wAYJq9AABoOwAAULsA4Ie9AABEuwDgdb0AAAC4ANCTvQDA3TwAYA29AIDnPAAAVzwAMJg9AGAxvQDABj0AEKO9AEA5vQBAOL0A4AG9AED5PADgQT0AgJ28AOBVPQAAuTsAgFE9AACTOwAA2DsAAOA8AMAxvQAAB70AQMY8AEDYPACgOL0AAJw7AMBFPQAAcTwAILi9AAAPPQAAxjwAYAw+AGAcvQAAWLoAgHK8AMCkPADAvb0AYGI9AIDrPACAc7wAQAE9AGCavQAAWrsAgDG8AECPPAAAiLoAAOm8AACVuwAAKD0AABg8AIBsPAAgab0AALm7AACRuwDAxbwAQMS8AOAOPQDgLz0=","chunkHash":"a87fe0e24d71bc7394ebde78d380c487b1b7049a2da325260d10c5fe582a6126"},{"text":"File: `scripts/temp/test_mesh_dataloader_compatibility.py`\n```python\n#...\ndef main():\n    #...\n                    in_channels=6,  # 3D coordinates + normals\n                    channels=64,\n                    out_channels=64\n                )\n                \n                is_compatible = test_deepgcn_model(model, morpho_batch)\n                if is_compatible:\n                    print(\"\\n✅ Mesh dataloader is compatible with MorphoFeatures shape model!\")\n                else:\n                    print(\"\\n❌ Mesh dataloader is NOT compatible with MorphoFeatures shape model.\")\n            except ImportError:\n                print(\"\\nMorphoFeatures DeepGCN model not available for testing.\")\n                print(\"You can still check if the shapes match what's expected:\")\n                print(\"  - points should be [B, 3, N, 1]\")\n                print(\"  - features should be [B, 6, N, 1]\")\n            \n            # Only test the first batch\n            break\n            \n    except Exception as e:\n        print(f\"Error during testing: {e}\")\n        import traceback\n        traceback.print_exc()\n#...\n```","range":{"startLineNumber":121,"startColumn":0,"endLineNumber":143,"endColumn":29},"embedding":"AAA2PQAADrwAIJg9AEBevQCgOb0AQM+8AEASvQAgCz0AICS9AABSvADArzwAANY7AMCSvAAAsLwAoIe9AEC2PQAANLwAgJk8AACsOwDgMT0AgIA9AICcPQCgJD0AAKi8AABwvADgP70AgKm8AMBRPQAgUT0AAJW7AKAyPQCAY7wAcLe9AEC6PACA5L0A4Aa9AAANPABA1T0AAGm8AABcvAAAdD0AoHO9AEDjPAAA2jsAwCW9AAAavABAJz0AgJ28AIAsPQDAkjwAwDy9ADCvPQDAmbwAYCK9AMCrPACgXD0AgOw8AKBovQCApLwAQMG8AIB5vABAgb0AgMm8AEB8vQDgdL0AABG9AMC5vADgBL0AAG88AAAgOwCgUb0AgEQ8AAAyOwAgHr0AAB68ACBwvQAAKjwA0OM9AAAQvQCAhb0AcJC9AECBPQCAIzwAAJE8AIAlvQAA47sAcIy9AID5vACApLwAoFe9AAAcOwDAkzwAQMy8AOAUPQDgGj0AYAa9AICIvABgyr0AgPw8AACiOwCgLT0AIH49AAAwvQBgID0AwOQ8AOAuvQBQkD0AAHY7AABgugBAvT0AACI8AABAuQBAEj0AAPw7AABsOwDAxrwAoB89AABxPADAgTwAwPI8AEA5vQDA3zwAQAQ9AIBqvQCA3rwAAFI7AOCXPQBghr0AMLi9AADNPACABD0AAJE8AIBCPQAAGb0AYH+9ADCCvQBw0b0AgFC8AMCcvABwjj0AgA28AMDlPAAA3DwAAJ07AKAyvQBAYD0AwGe9AGBxPQAAVLwA4Gg9AIAuvADgAj0AYH49AMAYvQCAKr0AgHC9AID3vABgDD0AwMc8AGCYvQCAHDwAAPk7AIAWvACALT0AAK+7AFCCPQBQjL0AABs8AEB2vQBgb70AoLY9AMDkPADA97wAgE+9AECBPAAAVL0AwP68AHDEvQAAIb0AQCi9AGBPvQDA6TwAAAA8AADaPADAr70AgMK8AAChPACgKj0AgOw8AACrOwAACjwAwF49AIDpPABAjLwAgMg8AADMvQCAyj0AAHG8AIAYPQCAPrwAAN+8AIBnPQBAqjwAwLO8AIDPvADAnL0AAAa7AADhPADQvr0AgIw8AABrPACACz0AAEC5AAAauwDArbwAIDa9AKCavQAAs7wAAAo8AOB0PQBAoTwAgL48AGAFPQBgMj0AQKu8AABzvAAAAj0AEJG9AMDbPAAAqLoAgAY9AIDdvABgFT0AwKY8AAB3PACAw70AAJA7AMCvvACAgbwA4Lo9AEApvQBAnz0AANC7AAD8ugCArDwAgE28AMCLvAAgO70AALC6AAA6OwBAjDwAQA89AMC5PADg4b0AwPK8AACEOgCAz7wAAL68AECnvQCAX7wAgGm8AACEOgAgHr0A8I49AADPOwCgG70AwJQ8AICcvAAAwDkAgBG9AMBuPQAA+LwA0JQ9AAAHvQBAob0A4DE9ACBGvQAgBj0AgKk9AIAXvQAAZbwAAIK8AEA7PQCADDwAgEK8AIBMvAAAPL0AgKE8AADsvACA8LwAwKw8AIAQvACAdLwAAJ07AAD/uwDAo7wAQLa8AECSPQAANjsA8KO9AADVvAAAwzsAABo9AICmPAAAKLsAgCQ8AIAPvQBgKz0AgLs9AADnOwDga70AYB+9AECbPAAAT7wAQPS8AADIvAAAqTwAQKY8ANDiPQCAdTwAIHq9AIAjvQCA/bwAAFa7AMBivQCgcj0AgFe8AKCNvQAA4LsAALQ7AACTOwBw7r0AwLc8AAALvABAhzwAIBU9AABTvABg3j0AgMA8AEDAPAAg4r0AgIc8AABAuQAAYLsAoC09AGBDPQCAQ7wAsIU9AMDRPABAibwAAMm8AADovACAAbwAYFY9AABuPADgIj0AgEm9AAAjPADAhD0AwLI8AIAhvQAA5TwAwBo9AEDzPAAAPTwAAAi6AABovACAbD0AMIy9AACWOwBA8bwAQAo9AIClvQAAtjwAUJu9AIAwvQCAlDwAYEQ9AACvOwDAmDwAAKE9AAD8OgBgKD0AQF+9AACbuwBAizwAANi8ACAAvQAAob0AAAAAAOBDPQDAL70AAEA6AGAnPQBgTz0AAOI8AAC9PQAAvLoAgKY8AIAiPQBgM70AYBq9ABCkvQAgRT0AQBQ9AGBmPQAwjD0AQFk9AAARvACApjwAMIg9AJDavQAAvTsAwCa9AIDkvAAAU70A8Ja9AEDUPAAAorsAwJY8AIAsPQCASL0AQHC9AADcugBgQL0A8JQ9AKAyPQAAEr0AYCc9ACAIvQCAc70AoFa9AEChPACAQT0AIFY9AABavAAAjDoA4A09AAC1PABAUr0A8JS9AADcugBA9jwAALi8AMDZvAAAwDgAQE29AACrPABAkrwAQEO9AAAdvACwu70AIA+9ACCfvQCAwDwAYAG9AABWPQBAQD0AYLI9ALCCvQDA1zwAgJq9AKCBvQDA+rwAgJa9AKAyPQDAGz0AgHC8AID/PABAg7wAsKY9AAAYuwCgDz0AQCI9AEDBvAAA1bwAAH88AACQPAAAz7wAAIK8ACAgPQAAhDsA4Je9AIC5PAAAmjwACA4+AMBZvQAA9rsAAEy9ADCGPQBAub0AYFI9AOAuPQAAabwAAPk8ACAovQAA4TwAAKc7AAAouwAAADwAQL28AABdvADAeD0AwPI8AEDaPACQgL0AAPe8AAApPACAv7wAAIq8AACZPAAgrj0=","chunkHash":"70110ed61de4a0dba5f7db086e2e08db09d52b402aee365f85ebf7786f32e4d8"},{"text":"File: `scripts/temp/test_mesh_dataloader_compatibility.py`\n```python\nimport os\nimport torch\nimport numpy as np\nimport argparse\nfrom tqdm import tqdm\n\nfrom dataloader.mesh_dataloader import get_mesh_dataloader_v2\n\ndef reshape_for_morphofeatures(batch):\n    #...\ndef test_deepgcn_model(model, batch):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":147,"endColumn":0},"embedding":"AECNPAAAeLoAMO09ACCEvQDgUL0AwI+8AOCGvQAAgzsAwPm8AIBIvACADzwAwLE8AABIuwDA0bwAoAu9ADCYPQDgJb0AwAI9AABSvADAKT0AoHg9AECHPQAAWjwAYE69AIBtvABgYr0AgFu8AGB7PQDAZj0AwMS8AAAQugAAHLwAAKS9ACBEPQBgub0AADS9AAD6OwDA9DwAgDs8AIAcvADgWD0AMNG9AMDFPADgfD0AQJK8AOAlvQAA5DsAYGi9AEBkPQAA9rsAQK08AEBcPQDAgrwAAEy8AIBhvADApDwAgCC9AMCHvAAAPzwAAES8AEAOvQBgNL0AAEC7AICovAAAPLwAADg7AEDqvACgKr0AgAS8AADOvACASr0AAGs8AAA4vADAtb0AIDU9APCCvQAAdrwAWAE+AAAqvACA4bwAID69AEBLPQDA5TwAgDU8ACA2vQAAFL0AULi9AECFvABAFb0A8JW9AACAOQAAZDsAIFq9AMBGPQDAGj0AAE47AIA1vABgEL4AwFc9AADvuwAAFj0AYDc9AADBuwDQsT0AgOo8AABfvACAtTwAAPq8AACqOwBAkz0AoA69AABoOgBgZT0AAKw7AICLvADgcb0AEMg9AECmPAAA+rsAwC49AIDmvABA9TwAgES8AKAqvQCARrwAgKQ8ACBKPQCgGb0AQF29AADvOwAAsbwAACg7AGCAPQBgqb0AgPa8AHCuvQDg3r0AQO28AACqOwBQwT0AgKa8AECWPADA5LwAAOi6AOB/vQAAkzwAgBi8AEAxPQDA6LwA4B09AMDEvACAwzwA4AU9AIB0vAAAXjsAgFG9AAD9uwCAZz0AoBA9AKACvQCAkjwAIAE9AIDIvABALD0AgG08AABzPQDwi70AAHS7AKBCvQBAwL0A4Io9AACqPAAAU7wAQKq9AAAjPQCA/bwAoHi9AIDZvABgVr0AIGO9AABovAAAJDsAgIA8AIBOvAAQlr0AYC29AACEPADAYT0AgGQ8AGAlPQBgZj0AMIk9AABiuwAAfrsAwIk9ACBTvQCwuD0AwIa9AECoPAAAtbsAgE08AIDCPAAAizwAgEG8AIBPPABAfr0AgP+8AIB3vAAAWb0AwL+8AAAEPQCwuz0AQEC9AGAaPQCAFTwAYGW9AAAUvQAgNT0AACC7AGB7PQAAUD0AwIk8AICVPABArTwAANG7AAAyvACgAj0AgFu9AKAhPQAAHD0AgKO8AAAcuwAAfLwAQI48AMCDPQCgE70AAA67AOAFvQAQg70AYFw9AICUvADwjj0AwKC8AACCuwCA/jwAwNa8AAB4OwAQtL0AAIA6AIBavAAAyDoAAPY7AEDKPABA2L0AgBS9AEDtvABAWb0AgC+8AICavACAPD0AAPq7AACnPACgDb0AQK09AGAFPQAAWLwAALi6AADBuwCAoDwAwPO8AGBIPQAA2zwAwEE9AADbuwCg3r0AYGg9AGBCvQCADz0AcMo9AACUvABAjzwAgOO8AADhPACAGjwAADC8AECrvAAAOLwAwC89AAB7vAAAA70AAAi7AECqvAAAyDoAAPC6AAB4PAAAybsAABA6AKAtPQDAgDwA4Mi9AECQvAAAnTwAQO88AMCOvAAAszsAYGa9AIA6vQCgsz0AwEg9AMAEPQCgfL0AgMm8AED3PACAkbwAQLK8AICrvAAA+TsAAGK7AOC8PQAAfjsAgPe8ANCXvQCAerwAAHQ8AGBfvQDwgz0AAGE8AOAvvQDAvrwAAM67AAAAvADgv70A8NM9AAB4PADAzDwAIIc9AABqOwBAwD0A4Cc9AMDDPACg5b0AIEW9AGAQvQAAW7wAADo9AAAuPQCABT0AALE8AACFOwDA5bwAgHE8AAAGPAAA/LwAAOc7AIAtvACABzwAQJC8AKASvQAAqj0AwKI8ACAcvQCAaj0AwDU9AMCrPAAAvjsAgM08AICVvADgkz0AQE69AEC0PAAAWDwAQOE8ACBwvQAAtjsAsNe9AIAOPACAUTwAsI89AICSPAAA/jsAgI09AIANvACACrwAYCG9AADwuwBA0zwAAGi7AMCrvAAgKL0AQI08AKCKPQBAk7wAABI8AEAPPQAAkTsAACo7AOBnPQAA+TsAgG08AKAXPQAAtDsAQI+8AEBmvQAAFzwA4BQ9ANCkPQAAdz0AoJk9AEDxPAAArbwAQDU9ALDsvQAAjDoAABW9AECIvAAAir0AoFG9AIAsPAAAR70AgIY9AABiOwDA6rwA4Bq9AABYugBAOb0AgHM9AAAjPQAgNL0AQMq8AOAZvQAAdb0AUKW9AMCcPABAWj0AQE09AAAVPACAFLwAMJg9AEA1PQDAZb0AIEy9AABPvAAAhDwAwKA8AEBzvQAAJLwAIIK9AAD8PAAA6DoAgIC9AEDGPAAApL0AALA7AMCTvQAQiT0AsJ69AMDOPAAAnDsAIJE9AMD6vABwjD0AYNi9AKAfvQDA17wAgFk8AAAkPAAATz0AALg6AOAhPQAAi7sA4Mw9AACKPAAAtDsAgN48AMBDvQAABb0AgBs8AMDgPABAE70AAM28AOA4PQAA5jwA0JK9AKBIPQCAgz0AIDM+AMDjvAAApjwAAN87AIDxPADwmL0AIJ09AECUPQCAXLwAQIM8AABlvACAELwAwJw8AAAuvACAPDwAgLq8AABSPAAgQj0AwNo8AACuPACgKr0AQCu9AAAKvAAAXrsAwPe8AED0PABQuD0=","chunkHash":"cb0d07d2d3de178b6e24f7fff7fe08916d9246c6b6d5c419f15342174a2a2945"}]},"file:///teamspace/studios/this_studio/scripts/temp/verify_downsampling.py":{"hash":"1960a977c399cd55c8a3e52ab003f67bc161c854f5ab9bf4abd2a74f5e0f06df","entries":[{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef parse_args():\n    parser = argparse.ArgumentParser(description=\"Verify downsampling in lowres vs highres data\")\n    parser.add_argument(\"--sample_id\", type=str, default=None, help=\"Specific sample ID to check\")\n    parser.add_argument(\"--root_dir\", type=str, default=\"data\", help=\"Root directory for data\")\n    parser.add_argument(\"--class_csv_path\", type=str, default=\"chromatin_classes_and_samples.csv\", \n                        help=\"CSV file with class and sample information\")\n    return parser.parse_args()\n#...\n```","range":{"startLineNumber":17,"startColumn":0,"endLineNumber":23,"endColumn":30},"embedding":"AIAWvQAA0DwAADQ9AOBLvQBANr0AQOc8AAA+OwDA2bwAAOi8AGCJPQAAsrsAADQ7AAA3vQDAiz0AAEu8AAB6PAAAs7sAoII9AGBuvQAwhD0AgBk9AIAyvACAETwAwIq8AGAKPQCgH70AACo7AAAOuwBgiT0AoAe9AICBvAAger0A0LO9AAB9vAAgxr0AYD69AEC4PAAASDsAIH09AKBVvQAQlz0AAJu9AADsuwDAgjwAgKi8AADGOwCAszwAYA29ACC9PQCAf7wAUIe9AAAdPQCA6DwAIGM9AIBcvACAcD0AAIq7AIBEPACgI70AMIy9AIDWPABAjr0AAN87AMAqPQAA37wA4BU9AAAXvADAl70AUIM9ALCMPQAAuLwAoAQ9AAB/PABAaL0AQM88AOADPQBASL0AQN09AIAbPAAAgL0AgEU8AECWPABggT0AAPe7AAC6PAAAf70AwHe9AIChPAAAbLwAABe8AEAwPQBA/zwAAHg7AEAFPQDAHD0AAAY7AAAAuACAdb0AwKQ9AFCXPQAwgT0AgIY8AOCYvQAAALkAAOw8AIBnvADA4zwAAIk8AECGPAAgPD0AYDc9AHCKvQAAbjsAACo7AOABPQDAWL0AUK+9AOAkvQDgFr0AgCK8AIC3vACgHr0AQN08AAA8OwBgAz0AwKK8AGB3PQBA2LwAANY7AICnPABArTwAwIE8AMA1PQBAiTwAACC5ADCBvQCABL0AAKy8AECCPACwxD0AQMU8AIC5PACgMb0A0JI9AAACPACgiT0AELa9APDKPQBAM70AUP89AMDcPAAAMz0AgEC8AMCVvABAmLwAgBa8AKANPQAALrsAANE7AAAavACgXL0AgMU8AKBCPQBAobwAEJe9AIBbvACABrwAwJe8APDUvQDAvLwAAAG9AECDPQAQqz0AgB68AACUOgCArTwAwIK8AACBPQCARr0AwPy8AMA6vQBAsL0AALE7AEBcvQDgU70AQFS9AMDvPAAgJD0A4Hi9AADBPABgcj0AwN48AGAYvQDAqLwAgD+8AIAuvAAAcj0AgHA8AID0vACAyz0AID69AACjOwBAzjwAAP08AMCFvACAgLwAgIY8ALCNvQAAkDkAgPs8AAB8PACASzwAQLy8AMB/PQAAAr0AgFS8AACEvABQoz0AALY7AMD6vADAsLwAQI69AECbPQAAVj0AAGw7ACBCvQAwhD0AgCu8AABsvADA+DwAQOE8AIA2PQDArrwA4Ik9ACBCPQAAb70AgDs8AMA6vQAAJzwAQEO9AIASvQBAtzwAgGm8AIA7vQCACDwAwBM9AIBQPABw7b0A4CE9AACjPADAY70A4CU9AIBGvAC4JL4AAAK8ACAdvQDAgTwAgGW8ALCwvQCAk7wA4FQ9AMCEPAAAD70AgNw8AAAHPQAAHzwAIBA9AIAHPQCAF70AQBm9AAB4OwDgij0AMI49AKBovQAA5LoAQJM8ACDRPQCAIj0AgMs8AECYPADAZr0AwKE8AKAEPQCA0T0AAD49AADUOgCA+DwAgOe8AID1vAAAg7wAwLq8AIAOvACArbwAYNC9AECcvQCgEr0AAPy6AECHvAAAnrwA4OC9AADgPACA5DwAAN87AAA5vAAAmDsAAPQ7AEC6vACAFj0AAJ+8AADlPACAYrwAAHA6AABguQCAbjwAgBc9AHCGvQAAKT0AAOm7AHClPQAAOb0A4Ca9AEC7vQAAPTwAoCc9AADevADAuDwAgLa8AAAWOwBA8jwA0Ig9AIDLvABA8r0AAAU8AAC0uwAgEz0AIDQ9AABjvQAgiz0A4Eu9AOCJPQDwk70AwLm8AECMvADA4jwAgMW8AAArPAAAAj0AoJ89AICOPQBA7TwAgG48AABgPAAAOLwAQDq9AACRuwAAUDwAoHO9AMBUvQAAa70AQM+8AMARvQAA3LoA4EQ9AADEugAAfD0AgB89ABCOvQBAfr0AwO08AMAtPQCAST0A4HS9AGAxvQAAl7wAUIi9AOB2vQDAmjwAkI89AIAtvADgLz0A4IK9AABWOwBAAj0AMIy9AAAePAAAxjsAAN27AACgOQDwk70AABS8AACwOwCASL0AgEY9AIAbPACAGDwAAL48AIAuPADgjz0AAFS7AKA9PQAA+zsAIA49AGCNvQDA7TwAgB+8AOBTPQDAwTwAQAE9AIB9PQAAF7wAQJ88AKB3vQAwhD0AID69AABHPADARb0A4Ae9AAACOwAgbr0AIBu9AABNvADAXj0AAAy7ACAUPQDA8DwAsIk9AEALPQBAqrwAQDw9AID5vAAAOLwAoAO9AABIOgBAtLwAACq8AADAvAAA7bsAALi8AEAWPQCAurwAwNC8AJCFPQCA27wA4EY9AGAlvQBgE70AACC7AECEvAAAsLwAQKO8AECmvAAgsr0AgGC9AGAyPQAAtbsAMMG9AICoPABgUb0AwGY9AIBCvAAAnDsA4Eo9AOAVvQAwhD0AIAq9AIAvPAAA7bsAQHk9AABCOwCAzbwAIBY9AADUuwBAgjwAwHw9AKBDvQAASr0AgBQ9AIAXvQAA/7sAAN28AIBRPAAA77wAgEK9ABDfPQCA+jwAYG89ALCEvQAgIz0AgEK9AADbvAAQ0r0AABO8AIAePAAAdrwAQCm9AABnPADwvz0AwE89AAB0PAAA2TsAQI68AIAxPQBgkz0AQNw9AGAwPQAQmL0AoFe9AAA1PADgCr0AAKi8AADHvADgKz0=","chunkHash":"f505d48715f4e99c5449acf1caf16944d56af2161bec11c2660fdac4bcbf1fae"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    args = parse_args()\n    \n    # Create output directory\n    os.makedirs(\"visualizations\", exist_ok=True)\n    \n    print(\"Loading lowres and highres dataloaders...\")\n    \n    # Get raw image dataloaders first to check the original data\n    print(\"Loading raw image dataloaders...\")\n    lowres_image_dataloader = get_lowres_image_dataloader(\n        root_dir=args.root_dir,\n        class_csv_path=args.class_csv_path,\n        batch_size=1,\n        shuffle=False,\n        num_workers=0,\n        sample_ids=[args.sample_id] if args.sample_id else None\n    )\n    \n    highres_image_dataloader = get_highres_image_dataloader(\n        root_dir=args.root_dir,\n        class_csv_path=args.class_csv_path,\n        batch_size=1,\n        shuffle=False,\n        num_workers=0,\n        sample_ids=[args.sample_id] if args.sample_id else None\n    )\n    \n    # Get texture dataloaders (these may have additional processing)\n    print(\"Loading texture dataloaders...\")\n    try:\n        #...\n```","range":{"startLineNumber":26,"startColumn":0,"endLineNumber":56,"endColumn":0},"embedding":"AAApvACA1jwAsKs9AMCSvQDAZb0AgHM8AMDjPADApbwAgKS8AEDDPACA+zwAQMg8AGBuvQAApjsAAL68AADIPAAABjwAQGE9ADCcvQDAZT0AoI09AOB9vQCA0zwAgDI8AAB7PADgFL0AAMm7AIC+PAAAnz0AIHe9AADlvAAAVb0AYPC9AAA5vACAsr0AIBq9AEDYPAAgEz0AwBg9AGAvvQAA4j0AkIi9AKA1vQAAgzwAgFe8AADYPACA8jwAAA29AJCePQCAjrwAoIa9ACBpPQAAuTwAgFM8AEC4vAAgVT0AQBi9AECpvACAzrwAcJ29AKAJPQAAHbwAQI88AOABPQDAE70AAJg6AAC0ugDABr0AgBc9ACA0PQAAOL0AAF+8AEA4PQAQjL0AQB89AIAXPAAAELwAkLE9AIChvADAU70AADC6AOBlPQDAlj0AAPw6AAC0uwCgt70AwCO9AABpPAAAPzwAwIK8AEDZPABglT0AANM8AGCWPQDABj0AgC+8AMDgPAAgQ70AoIQ9APCqPQBgDT0AgPI8AIB6vAAA37wAYDs9AIAgvABAojwAQAo9AABQOwBgTj0AADa8ALCkvQAAhzwAQJ08AMBNPQCAJ70AwAm9AMAHvQAANrwAwPC8ALCQvQBA3LwAAEc8AIBKvABAqzwAAJC7ABCiPQAAzrsAgAI8AAAsPACgJj0AQMU8AAA7PQBAIL0AAJM8ACCEvQCAg7wAwNK8AABiPACA4z0AAFa8AOAGPQDA+rwAYF49AICJvADwsD0AAF+9AFCjPQAApbsAoFA9AICjvACgFD0AAGY7AOBivQAA2LoAoDe9AACiPADAOD0AwPw8AABEvACQh70AAJW7ACAqPQAAIzwAAK69AAC6vAAA9bsAgO68ACDHvQCggL0AAOC6AIALPQCghD0AAFe9AGBlPQAAyLoAQDW9AKAXPQAACL0AUIC9AGBdvQCgiL0AAOI7AOACvQAgs70AQIC9AAASPABgID0AAE29AGAtPQAgCz0A4Jw9AKBGvQAAQjwAANi7AAAwvQAAQT0AAOM7AACgOgBAdD0AgJO8AIDpPAAAhj0AgBs8AABCOwDQlr0AAEk8AKBHvQAAmzwAgAg8AABCuwAARjsAAGu8AOCHPQAAXDsAwJ+8AAABvADwsz0AAKK7AIAqvAAArrsAgA48AAA9PQBAFD0AoEU9AACXuwCA3zwAgIa8AEChPADgaz0AwLo8AIA2PAAANrwAcIQ9AADPPADQlr0AAG68AGA6vQDADz0AAMq7AIAbvACAMj0AAK67AACzvQAA0DkAQKU8ACADvQCAtL0AQIc8AIA+vADgh70AIEu9ACA2vQCQEb4AYBe9AOBgvQAAwLkAwDG9AODMvQCAbzwAAG89AICGPACwhr0AQAQ9AMBcPQAAQD0AQBk9AIDBPAAAa70AAH+8AOA7PQDAXD0AoG09ACAZvQCAIjwAwO48ABCwPQCAvzwAwNQ8AADjOwBgIL0AAEc8AEABPQBQ6D0AAG08AKAvvQCA9bwAAAg6AICYvAAAxDsAANo8AKBavQDAzLwAII+9AKAAvQBAgLwAgLm8AAAYPACgHr0A4Ne9AKA1PQAAsDkAAFQ8AICSPAAAorsAAGQ8AAAwugDAHT0AAFy7AIDvPAAA3DsAwAO9AIAjPAAACT0AQB49AMDuvABAFz0AAL88AMDMPQAwnL0A4Cm9AHDvvQAAorsAICs9AED/vACAfzwAwMi8AADZvACAlbwAQAo9AGAPvQCAPr0AgGU8AIB2PAAAbjwAQIA8ANCKvQBgdT0AAOC8AIB2PQAQrb0AALm8AAD8ugDgBr0AAPU8AMDKPAAgKD0AUMI9AGBOPQBAtzwAAPw7AECdvAAAMLsAAD+8AOAmvQCABTwAQKW8ADCNvQBgq70AgNq8AEA8vQCgAj0A0Oo9AMDEvAAAtjsAsIs9AEDjvAAAbrsAQJ88APCbPQDgiz0AAAm8ACCEvQBA2zwAsJe9AJCTvQDAaT0AQH49AACnvABgTz0AgNe8AIDTPACAOT0AMIm9AAC4ugBA4jwAAJA7AAA3vABA2r0AIAW9AICpPAAQq70AACC8ACBHPQCADjwAQLQ8AACfvADgnz0AAOA6AGByPQCAwzwAwFE9ABCOvQDAE70AgKw8ALCtPQBAqTwAgIw8AEBTPQCA7zwAQM48AMCCvQBADz0AINm9AIDKPADASr0AgB28AOACPQAgS70AgAI9AEA8vQAgRz0AAIe7AABIOwDAuzwAoHU9AOBjPQDgOr0AAAE9AGA5vQCgHL0AgJK8AIDDPACAjDwAANK7AIB7vACAuLwAgJS8AAA9PQAAUbwAQKe8AKBDPQDAOL0AACy7ABCavQAAML0AwCW9AABcPAAAWrwAgJC8AAAHPADAQL0AgLu8AABGPAAAPbwA4JC9AADqPACgMr0AYH09AAC0OwCAvDwAoIA9AOCBvQBAaj0AAAS7AIAFPQAAkDkAwN88AID0PAAgSb0AgBk8AADPOwCAtjwAIDU9AAAAvQDgKb0AADi7AICQvADAg7wAoAC9ACAJPQCAQ7wAcKq9AAC6PABA7TwAELQ9APCbvQDAIT0AIEe9AADjuwDQwL0AACg7ACBcPQBAp7wA4HK9AGAVvQAAjTwAgO48AICSPAAAyDsAABY7AACAuQAgQT0A4Gs9AOCLPQAAo70AQGS9AAAcOwAA9jsAAKC5AIAcvACwyj0=","chunkHash":"7bebcfa4277d37f35ce56434ecc3342e66aa1dab4d21b3bfac36b7a71ae8a272"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n        lowres_texture_dataloader = get_lowres_texture_dataloader(\n            root_dir=args.root_dir,\n            class_csv_path=args.class_csv_path,\n            batch_size=1,\n            shuffle=False,\n            num_workers=0,\n            sample_ids=[args.sample_id] if args.sample_id else None\n        )\n        \n        highres_texture_dataloader = get_highres_texture_dataloader(\n            root_dir=args.root_dir,\n            class_csv_path=args.class_csv_path,\n            batch_size=1,\n            shuffle=False,\n            num_workers=0,\n            sample_ids=[args.sample_id] if args.sample_id else None\n        )\n        has_texture_dataloaders = True\n    except Exception as e:\n        print(f\"Error loading texture dataloaders: {e}\")\n        print(\"Continuing with only image dataloaders\")\n        has_texture_dataloaders = False\n    \n    # Get a single sample from raw image dataloaders\n    lowres_image_batch = next(iter(lowres_image_dataloader))\n    highres_image_batch = next(iter(highres_image_dataloader))\n    #...\n```","range":{"startLineNumber":56,"startColumn":0,"endLineNumber":82,"endColumn":0},"embedding":"AADIOwBAvzwAAJc9AABRvQBAs7wAACW8AGAbPQAASLwAgPS8AAAGOwAAfjwAAHU8AIBCvQCA/TwAwKu8AAD2PAAACDsAwD49ANCdvQDA9TwA4Jk9AMBRvQAAhTwAAPI7AEDcPADAB70AADq8AACnuwCwiz0A4CO9AEA4vQDgRb0A8MK9AEDPvADg0b0AgHa8AIDMPAAAdT0AQLM8AKB5vQDw6D0AgGy9AADKvAAAeDoAAC28AAAmPABAxTwAgLe8AMC5PQAAVjwAYEm9AMA9PQAAALkAABK7AAB/vQCAjTwAwDG9AKAPvQCAkrwAIKe9AMBKPQCAaLwAgFg8AAD9OwDA77wAgIA8AACYugDgEL0AAMY8AABdPQDgWr0AQLG8AAD9PADAR70AwBw9AMCZPAAATLwAMMc9AAD1vABALb0AAPU7AIA4PQDwkT0AwIw8AAD3uwAwzr0AgGa9AADxOwCAjjwAAFO8AADEugAgjj0A4BY9AECFPQCA1zwAgD28AGAqPQAAN70AYHM9AKCOPQCAvzwAIEI9AIAkvQBAzbwAAA49AMDivAAA9zsAAFo8AIB6vABAQT0AgHA8AMC1vQCAADwAIC09AICDPQBgQb0AQOS8AICfvACAJbwAwL+8AGCRvQCAtbwAAOm7AKAivQAAGjwAgJS8AMCyPQDADL0AAIw6AACBPADgbz0AAJY8AMAcPQAA8bsAALo7ANCmvQCAADwAgKW8AEC+PADgpz0AgOK8AABEPABgW70AIIU9AAAQPADggz0AMI+9AMCUPQAAHzwAEK89AMAHvQAAtzsAAGi6AKA6vQAA4TsAII+9AIAjPABAcj0AALy6AAA+uwDgir0AgJe8AKBkPQAAsDsAIKm9AACMvACAOLwAgOi8AHDEvQCADr0AQKE8AMAVPQAAXT0AMIq9AMDoPACAoLwAgCC9AABLPQDgAb0AkIW9AGBJvQDAnL0AAHa7AABmuwBger0AkNO9AIAePQAA5DwAwJC9AGAAPQCAYDwAEKQ9APCBvQAAtbsAALQ8AOBNvQBAaT0AgKM8AIAwPADANj0AYBW9AABUPQAA/zwAgBU9AIBJvADAEb0AAHw7AKBtvQDAmrwAAOs8AACAOwAAtDsAAJu8ACAYPQAA5DoAAPq8AIAEPABgjT0AgAC8AMDAPAAA8LoAAJO8ALCJPQCgez0AAO88AIB8vACAvjwAwIO8AAANPADAJj0AgDY8AAAWuwCAPjwAgMg8AEBxPQBwnL0AQN28AIBVvQAAsDwAwJm8AGAavQDAtjwAAGC6ADC8vQCAsbwAgDQ8AAB/vACwv70AQIc8AEDyvABwlb0AQDu9AOBlvQAIEL4AgPK8AEAlvQAAkzwAYCm9ANDQvQAA6DsAYFs9AIA/PQDgoL0AQOo8AEBwPQAARDwAgB09AMD5PACA4LwAAIi8AEDsPACgQz0AgPc8AMBHvQAAHDwAANM8AGC4PQCAyDwAYAM9AECxPAAARr0AAJk7AEC/PAAgvT0AoC09ALCXvQCgEb0AAHQ7AACEuwAAwzsAAHI8AGCUvQBAMb0AIIO9AAB3vADgIL0AYCa9AAAAOwAgNb0AoOa9AICoPABA9LwAgEA8AAD0ugAAzTsAAAu8AAASPACAZzwAgA+8AIC/PAAAXLwAwKa8AMCuvACAMT0AgEw9AOAEvQAAZj0AgEO8AJC7PQAgU70AgLe8ANAGvgDApLwAYFw9AGAlvQCAxDwAgA29AEAmvQAAfLwAQNU8AKAivQCATL0AQLU8AECQvAAAdzwAQLg8AIBEvQBwpT0AgJG8ACB1PQBwvb0AALG7AADtuwCAAbwAAF89AIDTPACgET0AsNs9AIBYPQCACT0AgLA8AIBNPAAAkDkAwK28AEB8vQCAJDwAgKu8AMBavQCAiL0AYAG9APCfvQCA9jwAUMI9AABmvAAAibwAIEY9AKAKvQAAvrsAoC49AABUPQBAkD0AgKI8AICavQDAujwAQIe9AIAevQAAWz0A8KY9AACUuwBATj0AgPG8AGAvPQAAlj0AQIq9AACKOwDAtzwAgCo8AECRvAAAtb0A4CK9AMCkPADAn70AgEW8AID4PABArTwAgKw8AOApvQDAVj0AgC48ABCDPQAAbjwAoGE9AGB8vQAgCr0AwJs8AGC4PQCAdTwAgA49ACCJPQBA4TwAQPU8ACCEvQDADT0AYM69AIBzPAAgHL0AQAa9AIAyPAAwhb0AgMo8AAC2vACgUj0AwKi8AADXPACgVD0AoHg9AIAuPQAA6rwAQMM8AEDbvABAx7wAwLK8AIDiPADAhDwAAIa7AECHvADgGL0AAMi8AADkPABgUb0AABy9AMBpPQAQgr0AAPS7AIBkvQDAkrwAwPq8AIBlPABArrwAAIG8AAD8OgDAbr0AAMM8AICWPACAnzwAcJu9AMDiPACAH70AQHo9AAArvABAkDwAQAI9AABdvAAggT0AgEQ8AMAfPQCAUTwAAAQ9AIADPQAgXL0AAK07AECpPACApzwAQBo9AAD3uwBgMb0AgGY8AAA2vACAR70AwI+8AMD+PADAn7wAUKy9AAAmPQCA+TwAEMo9AEAnvQDAqTwAAGS9AAApPADgu70AAHo7AOAkPQCAoLwAgE69ACAQvQDgHj0AIEA9AMCGPAAAzDsAgJC8AAAwOgBgHj0AQL09AABhPQDQsb0AIFW9AIBQvACAqrwAQKM8AABfPAAAvj0=","chunkHash":"63a1b8e283fb4cc75e37761e1ba239c82643bcae307461edfe9612aedf6e8308"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n    # Debug print to see the batch structure\n    print(\"\\nBatch structure:\")\n    print(f\"Lowres batch type: {type(lowres_image_batch)}\")\n    if isinstance(lowres_image_batch, dict):\n        print(f\"Lowres batch keys: {list(lowres_image_batch.keys())}\")\n    elif isinstance(lowres_image_batch, (list, tuple)):\n        print(f\"Lowres batch length: {len(lowres_image_batch)}\")\n        for i, item in enumerate(lowres_image_batch):\n            print(f\"Item {i} type: {type(item)}\")\n            if hasattr(item, 'shape'):\n                print(f\"Item {i} shape: {item.shape}\")\n    \n    # Extract raw image data based on batch structure\n    if isinstance(lowres_image_batch, dict) and 'image' in lowres_image_batch:\n        lowres_volume = lowres_image_batch['image'].cpu().numpy()\n    elif isinstance(lowres_image_batch, (list, tuple)) and len(lowres_image_batch) > 0:\n        #...\n```","range":{"startLineNumber":83,"startColumn":0,"endLineNumber":99,"endColumn":0},"embedding":"AGAYvQBA7jwAgEU9ACB1vQBAx7wAAA47AEDIPACARjwAoES9AIAKPQAAADoAQLs8AFCvvQBgiD0AQOu8ACAIPQAA2rsAcLs9ABCMvQAAsLsAUII9ALCsvQCAuDwAAK67AAAsPACAYjwAwCq9ACBevQCgfj0AAJw7AEDjvADACb0AUOW9AABivABwx70AwNm8AADgugCAiTwAYCw9AABUvQDwyj0AIH+9AIACvQCASbwAgEk8AOAAPQAA/TwAgBa9AACbPQDACD0AwF+9ACCaPQCgbT0AwK48AMDjvACgUj0AAEa8AICsvAAA5DsAgIa8AIB6PQCgUL0AgNI8AID4PACAXb0AQIw8AADFuwDArrwA4Gs9AOABPQDANr0AANA7AAA4OgAglL0AgNg8AICqPACAGbwAcJI9AADsuwAAhL0AAJy6AABePAAAuT0AwBQ9AOAKPQBAs70AgKu9AAAkOwAA2zsAkIW9AIDFvABgej0AAA09AMDNPQBABT0AAOq7AMAwPQBQh70AQHY9ABCKPQCgnj0AQJ89AKBQvQCAzLwAAFU8AAAjvQAAnTwAQBA9AABGOwDgeD0AwAA9AKC2vQAAxDsAgBo8AIDCPAAQgb0AwPe8AAAEPACAPL0AAJa7AMB5vQAAmLoAAEC8AECjvACAhjwAwPG8ALC+PQCApLwAAG88AICyPAAgMj0AgII8AABgOQDgNr0AQJ48AGCVvQAAhzsAAN68AIBgvACQgj0AACU9AAA8uwCA0bwAQKc8AICJvAAQwj0AENC9AABqPQCA77wAoNU9AAB4PACAOD0AQIm8AKAMvQAAybwAgNq8AAAvPQAAdj0AIDg9AMAuPQBgQL0AACo7AADTPQBAxTwAAKe9AAASvQCAHTwAADE8AOCnvQCgN70AgFC8AKCEPQAAPj0AwJa9AICaPAAApjsAAIC9AEChPAAgFr0AACa9AMDJvADgg70AgMu8AIAfvQAwh70AUIC9AIAlPQDgDz0AwEW9AKAQPQAAILsAwJs9ADCovQAACLoAYDA9AGCUvQBAmT0AQI68AACavABgaD0AYBi9AIAnvAAARDwAAPM8AGAfPQCgl70AgA08AIBTvQCAb7wAQJU8AAAYOgDgRD0AAE28AIC8PACAfbwAALm7AABSOwAgdz0AgP28AEDMPAAAorwAQFu9ABCePQDgXj0AAH08AAD6uwBAbj0A4F29ACAfPQAAWjsAgPk8AACcPAAADjwAgI48AKARPQCAYb0AAAO8AMDEvACgZz0AwNa8AMDvvAAAOTwAAAu8AIAfvQCANLwAAF67AAC0OwDww70AgA49AIBqvAAwl70AoIi9AECDvQDg/b0AgBO8ACAKvQAArTwAAE+9AECgvQCAyjwAoBY9AEDbPADgfr0AQKo8AAA3PAAAFT0AgNo8AEAiPQBgMr0AAI67AABKPABAHz0AgHM9AAADvQAgED0AAAY9AGCMPQAALTwAANc8AAD2OwCAA70AgA48AGADPQDgiz0A4Bo9AEB1vQBArbwAQI48AAC0OwDAFr0AYGc9AACkvAAAM70AYC29AKBbvQCAg70A4BK9AAAmOwAA9LsAIMy9AIAqvAAAgDkAAJw6AAAtPACgBr0AoAg9AACAvADgGT0AwMa8AOA6PQCAGLwAQJS8AIBIPABAmDwAgIk8ACAcvQBgHT0AAF28AICNPQDgjr0AAL67ABDhvQCAcbwAgNU8AIBqvAAAizsAIHa9AIB3vADAtjwAgAK9AIC8vADAKL0AAN47AGBWvQCA2jwAIBY9ACB9vQCgyD0AoE29AEB8PQDAQ70AAIe8AACMugAAvzwA4Ag9AABpPABgZD0AoLY9AEDtPADAtzwAIGw9AABUuwAAxDoAABi8AICWvAAAIDkAAOQ7APCRvQCgi70AAP+7AEC3vQAAO7wAkPI9AABwugDgHL0AwFY9AMDrvAAAP7wAAC67AGCqPQDA2T0AgDs8AABKvQAAgzsA4K29AEBKvQAgRD0AEKU9AGBcvQAgXT0AgJq8AIA+vACwpT0AgPS8AECWPABgFD0AAAw8AMAHPQBw2b0AQLG8AACvOwDA97wAgHY8AABMOwCA/zwAYC09AMDivABwiD0AAB47AOBlPQAAErsAIA09AGAvvQDAnLwAANM7ALCsPQBgCD0AwPo8AMAiPQDAHD0AwM88AIBHvQAAwjwAcPe9AADMPACgCb0AYCa9AAAgOgDAO70AgIA8AMAvvQAA/jsAgKK8ACB1PQAACz0AUIg9AKAhPQBAmbwAgJQ8AIBpvQAACbwAgMq8AAAFPADgIb0AAIy7AACEugBAbr0AoE29AIBAvACATrwAwFC9AADqPABAoL0AAEq7AABMvQAA+7sAICu9AIAoPAAAFz0AADe8AIDePACgUL0AAFO8AAAxvABA9rwAAJu9AMBVPQAARL0AgEg9ACAvvQCAHjwAgJA8AAD8uwDAhz0AALe8AIB9PQDAh7wAgFI8AADovABA1rwAAJU8AAB+OwDgVz0AYDM9AECuvACAJLwAABu8AAA6uwAAIb0AAAQ8AAD3PADAy7wAAEG9AKB5PQBAGT0AYIA9AECbvACA7zwAwHm9AAAMvQAwyb0AgCW8AMAOPQDAkbwAgM+8AEA5vQAAozsA4Dk9AEDrPAAAUDoAAKC6AADjPADgjD0AAKQ7AGBbPQAAmr0AAKK8AAB8uwDAAr0AAI48ACAZPQDwmD0=","chunkHash":"6c80378815b67ff402382263e4cfa8b021372db233e5ca575ca2282a9c7b5ba9"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n        if isinstance(lowres_image_batch[0], dict) and 'image' in lowres_image_batch[0]:\n            lowres_volume = lowres_image_batch[0]['image'].cpu().numpy()\n        else:\n            lowres_volume = lowres_image_batch[0].cpu().numpy()\n    else:\n        raise ValueError(\"Unexpected lowres batch format\")\n    \n    if isinstance(highres_image_batch, dict) and 'image' in highres_image_batch:\n        highres_volume = highres_image_batch['image'].cpu().numpy()\n    elif isinstance(highres_image_batch, (list, tuple)) and len(highres_image_batch) > 0:\n        if isinstance(highres_image_batch[0], dict) and 'image' in highres_image_batch[0]:\n            highres_volume = highres_image_batch[0]['image'].cpu().numpy()\n        else:\n            highres_volume = highres_image_batch[0].cpu().numpy()\n    else:\n        raise ValueError(\"Unexpected highres batch format\")\n    #...\n```","range":{"startLineNumber":99,"startColumn":0,"endLineNumber":115,"endColumn":0},"embedding":"AEBnvQCASDwAQO88AHCKvQCAR7wAAMS6AACdPABAGj0AoFC9ACAAPQAA5LsAQIs8AMC3vQBApz0AwBO9AADtPAAAqrwAoJQ9ABC0vQAAjLsAwDE9AGCRvQCAPTwAAG28AMCCvAAA0LkAQLq8AEA8vQAARz0AAEI7AIAevABgHr0AgOa9AIDvvACQ8b0AgPC8AAAwuwCgGj0AgDQ9AMAdvQDgrT0AQFi9AOAAvQAAnbsAAIK8AEAePQDAAT0AwDi9AACEPQAAnDwAYHW9AEBbPQCApD0AQKc8AMDNvABAaT0AADC7AADTuwCAPzwAgNC8AABRPQBgOb0AwOE8AMC3PACAb70AgAM9AADtPABgLr0AQFk9AICjPACgfb0AQKc8AADdPACQkb0AANU8AACfPACgE70AQJI9AIBrvABgZ70AQIe8AIAPPAAAoz0AgE49AACzPACAfr0AMKS9AIAcvAAAnzsAYI69AEDlvAAQiz0AQHU9AACkPQAAxLsAQJe8AIB3PQCwgb0AIHI9AEBmPQAARz0AoIY9ACAPvQCAQTwAgKI8AMBMvQCAcjwAAK88AMD/PADQtD0A4J49ABDTvQBAmbwAgG08AAAAPACAjL0AgLO8AECvvADwjL0AAOE8AJCBvQAAkLsAAFC6ACAevQBAzjwAAAa9ACCOPQAAs7sAAAC5AIDrPADgHT0AAKA8AIAmPAAgPb0AQI48AKCSvQAA37sAwLC8AEChvACghj0AQP08AACgOgDgCr0AAHi6AACguwBQ1j0AAJq9AAAEPQCAmrwAAMg9AADEOwBAZj0AAFe9AGBavQAAX7wAQCu9ALCdPQBAIT0AYHU9AACYPACAfL0AAJI8AACePQAAtzwAEI29AABRvQAAfjwAgDo8AICgvQDAOL0AAGy8ABCzPQAAPz0AIKe9AEAuPQAAgLkA4DW9AIBLPAAAA70AQLe8AICJvABQgb0AgA68AAAVvQCAS70AMJy9AOAmPQCA1zwAoAG9AMA3PQCAIrwAoKk9AEC4vABA/jwAgFs9AEB2vQBgUD0AAMi6AIBYvABAwzwAQA69AABbPAAATDwAoE89AIBwPACgrr0AAGg7AAB5vQCAlbwAgF08AAAAAABgST0AAAQ7AMCGPAAAK7wAAJ+7AAAgOwDAgD0AwD+9AIBQPAAgBb0AQPi8AMCHPQCAaT0AgGW8AAD9vAAAND0AAP28AABXPQAAzzsAwJc8AADzOwAAZDwAANE8ACBCPQDQjr0AAE47AAB5vAAgLT0AQP+8AABPPADAAT0AAFC7AOAxvQDAsLwAADO8AMCZPADQs70AIEg9AAAIvAAwl70AoDO9AOBTvQCA8L0A4AG9AOA+vQAAcDwAgHm9ABCmvQCAYzwAgP88AMCjPAAAVb0AAIg7AAC2OwAAWDwAAIm7ACBsPQAwgr0AACI7AIAYPQDgBD0AIE09ACAtvQCApDwAgOM8APDGPQCgAD0AIAE9AAC3OwAgJL0AAE47AABAOgDQuD0AoAo9AJCWvQAA27sAAMI8AACKuwBAtL0AQGA9AMCbvAAAJL0AIC29AOBpvQAgRb0AANi8AMCOvACAZ7wA8Le9AAC5uwBAo7wAwKO8AAAIugBADL0AABK8AADZvABAWT0A4BO9AGBDPQAA6rsAwLO8AADguQBAqjwAAKc7AJCYvQAgCj0A4CK9AKBWPQAAJL0AACK7ADABvgAA+7sAQDo9AAB7vACAjjwAIDC9AMCNvAAAXrwAgA+9AKAOvQCA4LwAALQ7AMBjvQAAAzwAAO08AJDavQDgrT0AYEa9AAAWPQBAeb0AQKm8AADhOwCAOD0AgDY9AADmuwCAVz0A8LI9AOAJPQAAHDsAQFo9AABjvABArTwAoAi9AIB/vABAgjwAAP87AMAdvQDgrL0AgF+8ABDPvQAAk7wAgPg9AABQOgCA6bwAABA9AAASuwCgEb0AgDE8ACCnPQAAnz0AAFq8ANCYvQAAWDwAsLS9AAB9vQAgKT0A8JY9AKBnvQDgOT0AwMG8AADAOAAQqT0AQFm9AIA6PADgGT0AAO67AAASPAAgq70AAIO7AACwOQAgRr0AgCk8AADbOwCAAT0AwB49AIAlvQCgUT0AgC88AMAkPQCATrwAYGs9AEAsvQCAvLwAAAA9ALC1PQCABz0A4As9AIBgPQDgBT0AAJA5AOAUvQDAmTwA4Pa9AEDTPABALr0AgJa8AMCKPAAA6rwAAOs7AGA4vQAAjjwAQKe8AMBoPQCgOj0AICs9AADUPABACb0AAOM8AGB4vQAAyLwAwOy8AADHOwDgN70AgAY8AABvvADABr0AAD28AMCNPAAAsLoA4DS9ACBnPQBwmb0AQKC8AMBIvQAAEbwAoBO9AACdPABgUz0AAE88AMDkPAAgWb0AADC7AAB1vAAArrwA4J69APCEPQBACr0AQK08AGAGvQDAvrwAAJ87AIBzvABgKT0AwKy8AIA0PQAA8DkA4CQ9AKATvQCgVL0AgN48AACGOwAwnD0AAF09AACRuwAAMrsAAO87AABwPADAgb0AADQ7AIDDPAAgML0AwIi9AABNPQAA+jwAQIw9AACwvADA8TwAACu9AMACvQDArL0AQNG8AAASPQBAkrwAgJm8AICsvADAqzwAYHg9AMDjPAAAgzsAAIa7AADQOgDgUD0AANk8AEBjPQBgQb0AAGS7AADWuwCAA70AgPo8AGBhPQDAaD0=","chunkHash":"ae53713f358e1607a1c10497208463352d39d1d3567ca51e90cfb5dce51601ce"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n    # Ensure volumes are in the expected format [C, D, H, W]\n    if lowres_volume.ndim == 3:  # [D, H, W]\n        lowres_volume = np.expand_dims(lowres_volume, axis=0)\n    elif lowres_volume.ndim == 4 and lowres_volume.shape[0] == 1:  # [1, D, H, W]\n        pass  # Already in the right format\n    else:\n        print(f\"Warning: Unexpected lowres volume shape: {lowres_volume.shape}\")\n    \n    if highres_volume.ndim == 3:  # [D, H, W]\n        highres_volume = np.expand_dims(highres_volume, axis=0)\n    elif highres_volume.ndim == 4 and highres_volume.shape[0] == 1:  # [1, D, H, W]\n        pass  # Already in the right format\n    else:\n        print(f\"Warning: Unexpected highres volume shape: {highres_volume.shape}\")\n    \n    # Get sample ID\n    #...\n```","range":{"startLineNumber":116,"startColumn":0,"endLineNumber":132,"endColumn":0},"embedding":"AEAavQAA9jsAIGg9ACBOvQDABL0AAKs7AIANPAAA8LkAQAS9AAB6PQAAYTwAAJ08AFC7vQCgzz0AwKK8AACaPQAgEL0AkLE9AACgvQAARjsAAD88ACB3vQBA6zwAACU8AIB3PAAAQLsAAHA7AIAYPACQhj0AAMm7AMDPPABAOr0AsLO9AMDFPACg4L0AgLa8AAA+vAAA+zwAgNg8ACBovQCgpj0A4Fa9AAAgvACAurwAgC09ACAgPQBAET0AQMW8AKC0PQAAODwA8IG9AECBPQAgfz0AAGg6AID8vABgkz0AgHK8AMDcvADAlTwAwIi9AAA4PQCAUb0AgDO8AIC/PAAAH7wAwCM9AABQOgCgc70AgKE9AAAhPQAgJL0AgEs9AAAkPADgTL0AgP48AEAFPQDAPb0AIHA9AID0vADgR70AALy8AAD0OgBALz0AAOE8AAAsuwCQj70AsIK9AOAaPQCAiLwAwHy9AADduwDAED0AgHI8AOBAPQCAJbwAAH68AIApPQDgUr0AMJA9AIBRPQDAqDwA4KA9AEAxvQBAAD0A8I09AAD2uwCAlDwAADw7AICbPAAAmT0A4Js9AGC6vQAAnDoAAAo7AAAfPABgU70AYF69AECXvAAgi70AgCU9AADCvQBAE70AAEo8AIAOvQAAwzwAwNW8AOCRPQDA4LwAQAC9AAB1PQCAvzwAwIc8AEA4PQDgfr0AwII8AIB7vQCAB7wAAAm9AEADPQBg4T0AgGG8ACAFPQCAQjwAQKA8AAAKOwCwpD0AIHe9AFCNPQCAHr0AgKs9AADAuQCQpT0AIEK9AKA3vQAAyTsAYE+9APCLPQAA9TwAYGo9AACSuwCws70AgC89AAD6PAAA2zsAgD+9AADTvADAqjwAwOC8AEByvQDgK70AAEW8AJCPPQBgTj0AsLq9AFCZPQAAB7wAIBS9AEDwPADAX70AgJu8AGABvQDQpr0AAKg7AEAZvQDAdr0AIA69AAC9PACAxDwAgD28AED0PAAApjwA4Jc9AIBCvACgET0AAJM7AGA6vQDgXj0AADg7AABgugCgVz0AoFi9AAAqvACAZjwAoAY9AACUPABgQ70AQIK8AOCFvQAA67wAgF48AACuOwDAHD0AQIU8ACAHPQBAzLwAALs7AABUuwBwmz0AYB+9AECaPADAubwAAAC4AKCIPQDAKD0AANY7AIA5vQBgZz0AAAq9AIB4PACgEj0AgBk9AADtPAAAuLwAwPQ8AIAOPABgir0AAKC7AAA6vABAlzwAAGo8AMChPADAzTwAgGs8AEAfvQAAozsAAAw8AIAsvABggb0AoF49AABgOwBAXb0AAMq8AAB8vAAg5L0AoAi9ACBEvQAAuDsAgFW9ANCcvQAAyDoAAEU9AMDEvABwrL0AwCY9AACSPAAAELoAwBg9AOBAPQDAWb0AAOi7AADrPADAgTwAYDE9AEDovACA9TwAAEA6AHCEPQCAkjwAgHc8AADsPABA9rwAACI7AMCUvACgqj0AIEk9AKAQvQCAWLwAQMo8AOAUvQAQwb0AgEM9AMBVvQBAZL0AgG29AGBtvQBgPr0AAAQ8AMAxvQAAarsAMPi9AADkuwBA7LwAAOo7AIAhvADADb0AgMM8AACQvADA2DwAQBC9AIA8PQDgFz0AAN87AAApPAAAprsAAGI9AODEvQAAdj0AAMG8AMCSPQDARb0AYAa9APDxvQAA1DoAANS6AIBRPAAAOT0AQCa9AICDvACAFTwAQA+9ACBivQBATr0AAPi7AIBqvQAARDwAAHS7APCcvQCgqj0A8Ie9AACPPQBAu7wAABO8AADauwAAhTwAQPc8AECyvABAVD0AQGY9AID6PACAljwAAOG7AAA4OgAAdTwAwPm8AAAxvACgHz0AAK47ACCQvQCgqr0AYDq9ADDZvQAAsLwAAMc9AIAEvAAANDsAAPw8AADMOgAABL0AAOK7AOCdPQCAuT0AQA29AOANvQAAmLoA0LK9AKAmvQDgCT0AADg9AKAVvQDgQT0AwJ28AAAhPAAAOz0AALG8AACkugBAKj0AAGC6AACfPABgpL0AYAS9AAB1PADQhL0AAHA8AABbPQDAfT0AAKy7AIAoPABAID0AQME8AGBDPQAA7DsAQBQ9AGAdvQBAyzwAoB49ANDIPQBAaz0AAEc9AOAaPQBAFb0AgBc8AOBovQAAzzwAINq9AMAmPQAA2bwAANA5AACMugBgAb0AAPm7AKCTvQAAET0AAG28AIDoPACgMD0AQMk8AIBsvADgP70AYCE9AKCqvQAAyDoAgIO8AECfPABArLwAQJS8AADzvACAY70AgCa9AEBAPQCAGzwAQG69AMD4PADAj70AgEA8AIArvACARb0AAAm8AAAgOgBAyTwAAAAAAABDPAAALL0AANa8AABfvACAebwAMJu9AMARPQCgE70AAAs9AED0vAAA5LsA4Bs9AOA7vQBwiD0AQCy9AAC9OwAAtbsAgJQ8AAC3uwDAk70AwO88AAB1vADQtz0AIEY9AAAauwBAkDwAwMa8AACOOwAgRr0AwJK8AEArPQBACr0AwKO9AHCqPQBQoD0AQHc9AMA4vQBgGz0AgCq9AIB0vAAQ3L0AIAy9AIClPAAAnLwAAAC9AAB7vABgeD0AIH89AMDGPADAqDwAgCg8AACwOQAAoD0AQD09AAAPPQDAkL0AACs8AACDvAAgLr0AgA09AIAfPQDgij0=","chunkHash":"85c58baf85daf2d2ad61d2e84857723fc0e70eef7a6dc9fcdb17c61f439b0044"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n    sample_id = args.sample_id if args.sample_id else \"random\"\n    \n    # Print basic information\n    print(f\"\\nSample ID: {sample_id}\")\n    print(f\"Raw lowres volume shape: {lowres_volume.shape}\")\n    print(f\"Raw highres volume shape: {highres_volume.shape}\")\n    \n    # Calculate statistics for raw data\n    print(\"\\nRaw pixel value statistics:\")\n    print(f\"Lowres - Min: {lowres_volume.min():.4f}, Max: {lowres_volume.max():.4f}, Mean: {lowres_volume.mean():.4f}\")\n    print(f\"Highres - Min: {highres_volume.min():.4f}, Max: {highres_volume.max():.4f}, Mean: {highres_volume.mean():.4f}\")\n    \n    # Take middle slices of raw data\n    print(\"\\nExtracting middle slices for visualization...\")\n    \n    # For lowres volume with shape (1, 80, 1, 64, 64)\n    if lowres_volume.ndim == 5:\n        #...\n```","range":{"startLineNumber":132,"startColumn":0,"endLineNumber":149,"endColumn":0},"embedding":"AADzuwAA1bsAwBA9AOBdvQDgKL0AAK67AACkPAAA7bsAgN+8AEDGPABAtjwAAOQ6AHCDvQCghz0AAKg7AMA6PQBAqLwAUIc9AECwvQAAjjwAwN08ACBYvQDArjwAAGs8AMDQPAAAZjsAAP47AMCBvAAQgz0AAFO8AMAfvQDANr0AMMm9AACdvABA1r0AQAq9AIB4vACAi7wAAPw8AOCCvQDw7T0AgIa9AIAuvACAqjwAIFg9AECKPADgPT0AkIS9AAC9PQAALzwAQEq9AABzPQAAHzwAAO07AACHOwBAUD0AQOO8AICovACAU7wAgEC9ACA2PQBAXb0AANA5AIAvPQDAobwAYC09AAB/vACgE70AEIU9AAA+PQCANr0AgBI9AAB6uwCARr0AgIc8AGB8PQBAAr0AwHE9AIADvQAwiL0AAHm8AAAHPADAmj0AoBI9AABwOwBQmr0AwDa9AACGOwAA0TwAgOu8AMDJvABAAD0AADC6ACBMPQCAAjwAwJ68AMC7PABABL0AwHY9AOAZPQAAFT0AEJA9AICWvQAAHrwA4DQ9AIByvADAMT0AoCY9AAD8OgDwiD0AgJI9APDHvQAAmTsAAPc7AAC2OwAAJr0AgB69AADQvABA0rwAwLi8ANCpvQAASb0AAOQ6AAAYugDA+TwAwLC8AKC1PQBgMr0AADK7AMB9PQCAgD0AgCs8AMD5PAAAvLwAwPo8AEBxvQAAxLsAgEW8AECFPABAxT0AAFW8AMDXPAAAXDsAIAE9AIC2PABAsD0AEMG9AMC9PQCgR70AUNg9AKAHPQDAVD0AgMe8AIAyvQCAs7wAoAK9AJCTPQDAhzwAAMM7AAAougCQn70AAE48AGAtPQAA4zsAwKK9AIAPvACAHLwAgMe8ANDEvQBAg70AAMe8AKAIPQCApj0AAJa9AKBDPQBAj7wAIDy9AABkPABA3rwAAL+8AAB7vQCwmL0AAJS7AADoOgAAQL0AYC+9AADmPAAAszwAABS8AEAePQDAAD0AYIE9AOBJvQAAGrsAAK67AMB9vQCwiT0AAIC4AABWuwAgej0A0JO9AEDBPAAAmTsAAJc8AADAuADARr0AANE8AGB3vQAAybsAoDQ9AAA+PAAA/DoAAAg9AIAVPAAAlbwAANe7AECTvABAtj0AAJg6AAADPQBAGb0AAMS8AFCNPQAgNz0AoBk9AOBNvQDAdj0AoB29AAB2OwBgSj0AwPY8AMDOPABAC70AgI08AAAxPAAgOb0AgJq8AMCjvAAAjDwAgDy8AAB4OgCADTwAAJM7AGBBvQDA6TwAAKw6AMAOvQAAur0AYE09AACwuwDQm70AoBa9AEAuvQA4A74AALw6AEAsvQAAozsAQOK8AFClvQAAB7wAwEc9AIDjvADwrL0AAOc8AMD9PAAAZzwAwNc8AMA/PQAgB70AgJq8AMCmPACgEz0AIAY9AAA6vADAjzwAAEq7AJClPQCA5DwAgHg8AAAMPAAgKL0AAJi8AADduwBwxj0AEIw9ACAwvQAAzrsAwM08AACQuwCAIL0AANE8AMCgvABAcb0AwJa9AKBnvQBAGb0AAK28AMDhvACA97wA0NO9AMCTPACAEb0AgNU8AACVOwDA7rwAAHs8AACIvABANT0AABi8AAAgPQBAvzwAAAK8AID3PAAAljwAAII9AMBYvQAgtj0AAJG8ALDCPQCwk70AQLq8AEgJvgCAvDwAALw8AIDPvACAiDwAAPi7AAAVvACA/TwAoCG9AAAivQBgrb0AgCW8AAA0vQAgKj0AAF08AKBAvQBgbT0AsKG9AJCiPQAgI70AABC6AMAovQCAsLwAgJw8AICkPABgNT0AgHk9AAAAPQAAzbsAgHY8AIAwvAAAc7wAgAG9AABIOwAAr7sAALw7ABCqvQCQ470AwDS9AADGvQAApDoA0Pk9AIAmvABAxTwA4C09AABivABQgr0AgGC8ACB1PQBgaD0AADO8AIBkvQAAR7wAcJa9ACCYvQAAPj0AQJk9AKASvQDgPT0AgK68AEClPADgUz0AgCO8AACePABApTwAAIC5ACAVPQCgtL0AwIq8AABmvACwhL0AACM8AMBJPQCAMj0AgFs8AAAwOwDgdz0AgDA8AKAyPQAAl7sAYII9AIBevQAAWDsAQJC8AICVPQBAAz0AAPc8ACA6PQAADzwAwPo8AICpvQBA9TwAIPW9AADtPAAAWr0AAMA7AAB8PACALr0AQK+8AOAKvQCAwjwAAE47AMCXPABA+DwAAGQ9AIAaPACABL0AgC09AKBevQAAoDkAgO28AIAIPQCgMb0AAAA8AADrvABgab0AYCK9AOAmPQBAgjwAYBC9AIDpPADgl70AQK48AAAAvQCgVr0AAMk7AAAQvAAAwDsAAHy8AACIugDAeL0AgDa9AMC8PAAAKTwAoHC9AMAfPQAgJr0AYCc9AAAfvACAELwAgGI9AIB7vQCwxz0AYCa9AACwOQDA4bwAoBo9AADVOwDAn7wAIAI9AAAAvQDAQD0AUIs9AGAXvQDAR70AACc8AAB4vAAAOrwAAAo8AMC4PACAG7wAQHS9ACCoPQAAxzwAAGQ9AMD1vABA4DwAgMG8AABbvACwBb4AQNO8AMDLPADAl7wAgJG8AAAguQBgED0AkKU9AAAoOgCAGTwAAMY8AMCJPAAgmT0A4Iw9AEBTPQBgX70AAOq8AIASvABAprwAAPQ6AMDfPABAfT0=","chunkHash":"ac33b84a80bda7b43cf66e12f6da65a9e8cca39b7f1dd05bcfd870ae787ddad8"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n        # Shape is [B, Z, C, H, W]\n        z_mid = lowres_volume.shape[1] // 2\n        lowres_mid_slice = lowres_volume[0, z_mid, 0]  # [H, W]\n        print(f\"Lowres middle slice shape: {lowres_mid_slice.shape}\")\n    elif lowres_volume.ndim == 4:\n        # Shape is [C, Z, H, W]\n        z_mid = lowres_volume.shape[1] // 2\n        lowres_mid_slice = lowres_volume[0, z_mid]  # [H, W]\n    elif lowres_volume.ndim == 3:\n        # Shape is [Z, H, W]\n        z_mid = lowres_volume.shape[0] // 2\n        lowres_mid_slice = lowres_volume[z_mid]  # [H, W]\n    else:\n        print(f\"Error: Lowres volume has unexpected dimensions: {lowres_volume.ndim}\")\n        return\n    #...\n```","range":{"startLineNumber":149,"startColumn":0,"endLineNumber":164,"endColumn":0},"embedding":"AABOuwBAED0AwFY9AIBLvQBgFr0AgCA9AADLPACA/DwA0JW9AIDzPAAAJLwAAHk8AFC3vQDA9D0AADe8AGCDPQAANDwAEK09AJDOvQAAUDwAAHk8AHCwvQCgHj0AADK8AIA1vACAqjwAAEc8AABAuQAAlD0AQA49AOAjPQBAJ70AAJW9AEC1vABg6r0AQEG9AKAfvQCAJj0AwHE9AGBWvQDAlT0AAEA5AABNvACA7bwAIHg9AAA0PQDAujwAgKE8AKCaPQAAaDwA0LS9AKBkPQCAdT0AAAA5AAD7vADASz0AACg8AEAWvQAAqTsAQJ+8ACApPQDggb0AgEa8AAAVPAAAw7wAQIw8AMCVvAAge70AUII9AEC6PAAwpb0AYFI9AAC0OwCA2LwAwAs9AMADPQAAIbwAAE89AABkvACAZ70AgOO8AAByuwDAkD0AABw9AIDBPABgKL0AgJK8ACA2PQCAILwAIKm9AMD3vAAgIT0AAPw8AOCCPQCAcLwAQMK8AKBcPQDgA70AAKk9AGA+PQAA1DsAsJA9ACBSvQCALbwA4B89AAAAAACABD0AALQ6AOAGPQCgtz0AkIg9AKCfvQDAhzwA4Am9AAAgOQDAdL0AQAy9AADRvABwl70AgDE9APCVvQAA4rwAwMc8AAA5vAAAajwAQM+8AAAQPQBgP70AQAG9AJCiPQCgHj0AgPc8AACKPACQir0AABa7AOCpvQAARbwAgKe8AACiPAAQmz0AAOy7AAAiPQAAUDwAAB+9AABBvACAxD0A4GW9AIB/PQDgE70AQOM9AADsOwDgqj0AgOG8AABOvQBAR70AAE+9ANCPPQAAFzwAgHM9AIAlPADATL0AgJw8AIBoPQAAUjwAwCu9AOArvQAA2jsAAMC5AKCmvQAgOb0AAAy8AABrPQCgPz0AANu9AMAjPQAA1jsAUJS9AACRPABAB70AwIm8AMAKvQBgPr0AgG08AADdvAAgf70AAPG7AIA7PAAA6DwAACA7AIDtPABA6rwA4JI9AEDpvADAujwAAKy7AEA7vQCgHj0AwLM8AECLPACgNz0AIFi9AABbPAAAKD0AAFi8AADwugAAgbsAgCU8AACKvQCAAb0A4Bc9AACBvACAPj0AYE89AACIOwAAXrsAgI48AIBqPADAlD0AYGK9AIDHPABAOr0AACo8AGB7PQDgOT0AAJg7ALCbvQAwij0AABW9AMBMPQDgjD0AAFI9AIAHPQAAqLwAQDA9AAC/uwCQiL0AAAe8AIAOvAAAjDwAAPy6AACDPAAAxLoAAL48AMCQvAAAYDwAANo7AAC7OwDwrL0AwHQ9AOAZvQCAdbwAgES9AAA+vQDAsb0AgI+8ACALvQAApjsAYBG9AMCFvQAAlLoAwHI9AKAwvQCwxr0AAJE8AIDhPADAhTwAoCM9AMD0PABgb70AAJy6AIBdPADADj0AwHU9AGBZvQDgCT0AAAa7AJCJPQCA0zwAgGU8AKAfPQDAmbwAgBA8AIAJvQBgpj0AYFk9AADkvAAAAAAAQNo8AACyuwCwlb0AQJA9ALCBvQBwo70AQBC9AMCAvQAAML0AAKy6ADCUvQAAsLwAkPe9AABbPACAV7wAAIQ8AADZOwCA7rwAIAc9AAD0ugCgHz0AgPy8AOAlPQAAFzwAAKA6AACMOwAAszsAAK48AGCnvQBQij0AANu8AOBZPQBgp70AAN47APDKvQAAvbsAAKk7AADePADAGj0AAES9AAAMvABgPr0AkKK9AEDUvACgYr0AAAC8ALC5vQAA9DoAAES8AOCFvQCgoD0AgFi9AICHPQAAcjsAgBw8AACCuwBAAz0AAL48AACEvADAaT0AQJg8AIDCPAAABjwAAAm8AMAivQAAmzsAgBq9AIANPAAAfz0AAAI7ACCIvQAgr70AwIq8AADgvQAAPb0AEKY9AIA1PAAAWLoAIHM9AAClPACAxrwAgJC8AMBiPQCwhD0AYFe9AMCpvQAAUjwAAHe9AMB1vQDAUT0AcIE9AGCDvQBAzDwAgN28AIAEPADgOT0AgNG8AIAsPAAAKLoAAMi6AMBuPQCg0L0AQJy8AAACvAAgQ70AIAk9AMCQPAAQkj0AgE+8AKAIPQCA8TwAADq7AADXPACAJTwAAPM8AIBMvQCAPjwAgGU8AKByPQBgSz0AgBw9AADgugAANrsAwNc8AABSvQAgFj0AcI69AABpPAAAvrwAAAA5AAB5vACAAbwAgLe8AEB4vQAA8zwAAGI8AIDoPACgaT0AYAQ9AIALPAAAtzsAwBg9AGBNvQDA4jwAgHy8ALCPPQDgH70AgLC8AIDTvACAE70AgNm8AICsPADAmjwAsI+9ALCAPQCAfL0AIAO9AMCUvAAAjbwAgCo9AAANvAAACLoAAPW7AECrPABgSr0AgGC8AMCKvACgF70AoBO9AOBgPQBAI70AoE49AEAZvQAA47wAgB89AIBCvQBAdj0AABy9AAC0PAAA2DoAADA7AIA8vQDAhL0AANQ8AAD7uwDQlD0AYHQ9AAC4OwAArzwAgLW8AAAjvAAAXr0AAEA7AICfPABAUL0AYFy9AEBaPQBgwD0AADY9AGArvQBAsDwAABE8AGAHvQAgqL0AALa8AKAYPQAAi7wAAM67ACAmvQAAxDsAAPE8AMCWPAAA/DoAIAs9AAAwOwDwrT0AABc9AABWPQBAlr0AgGS8AMDEvAAAPL0AgHQ9AFCYPQAAUD0=","chunkHash":"9608dc41b231573fcb628e8f333fe12bec4c2128eb0ee4bc8400c92f36f25960"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n    # For highres volume with shape (1, 80, 1, 224, 224)\n    if highres_volume.ndim == 5:\n        # Shape is [B, Z, C, H, W]\n        z_mid = highres_volume.shape[1] // 2\n        highres_mid_slice = highres_volume[0, z_mid, 0]  # [H, W]\n        print(f\"Highres middle slice shape: {highres_mid_slice.shape}\")\n    elif highres_volume.ndim == 4:\n        # Shape is [C, Z, H, W]\n        z_mid = highres_volume.shape[1] // 2\n        highres_mid_slice = highres_volume[0, z_mid]  # [H, W]\n    elif highres_volume.ndim == 3:\n        # Shape is [Z, H, W]\n        z_mid = highres_volume.shape[0] // 2\n        highres_mid_slice = highres_volume[z_mid]  # [H, W]\n    else:\n        #...\n```","range":{"startLineNumber":165,"startColumn":0,"endLineNumber":180,"endColumn":0},"embedding":"AAAAuwAAgDwA4HI9AKBPvQAAV70AAFc8AMC5PACgND0AgHW9AIA+PAAAyLoAgNc8ABCbvQBAqD0AQP+8AOByPQAA2rsAwKQ9ALCyvQAAhLoAgJM8AAAuvQBgDD0AABI8AADJvACAODwAAAo7AAAoPAAAsT0AAKg7AAAfPAAgNb0AgJC9AAC3vADw+L0AAHy9AOBtvQDgTz0AgEQ9AOB1vQBA1z0AAFe8AMCcvAAA/DoAQEE9AICpPAAAhjwAACa8AMCIPQBAFT0AIHO9AECRPQDAyDwAANy6AEAgvQCwhj0AAH67AOBPvQAAgLsAAIC8AKBXPQAggr0AAGK7AABeuwDA97wAQI88AAAwOgCQh70AwIA9AABPPADwor0AoB09AACQOgCALr0AAL88AIARPQAACLwAcJ09AAB4PACAbr0AYA29AAB2uwBgoj0AwBg9AACkOgDgWL0AwC29ACApPQAAebwA0IK9AIBxvABwhz0AgL88ACAlPQAATrwAQIa8AEAoPQDA07wAkLc9AOBMPQAADbwAAF89AIBuvQCAB7wAQC49AID8vADArTwAwPM8AGAiPQCQpz0AwJE9AIC1vQAAuLsAAJi8AACFuwCgU70AgM+8AADNvACgab0AoD49AIBvvQAAv7wAAN07AKAAvQDAyTwAAMG8AGAgPQAgAb0AwPm8AKBpPQBgPz0A4Bk9AMDVPABQmb0AwKQ8AJC/vQAApzsAgA68AMCRPADgyD0AQI28AMDXPADApjwAABI7AAAbPABgzj0A4Ga9ALC2PQCADb0AYN49AIBIvACghD0AQCy9AOBIvQAAo7wA4CG9ACCCPQBAnjwAoGc9AAC4ugCwg70AwNc8AGA5PQCA/jwAwDC9AIAdvQCAwLwAAOO7AKCpvQAgar0AABS9ACBuPQBwhT0AcKC9AEBvPQCASTwAIIK9AIAyPAAgYL0AAAq8AIDVvABAFr0AgIk8AACVuwDAO70AgFC8AECKPAAgfj0AIAW9ADCFPQAAljsAkJ89ACAhvQBAwjwAAL68AKB5vQBgSj0AgAA8AACIOwAA9TwAYF69AABhPACARDwAALw6AAAAOQDgBr0AAO08ACBmvQBAirwAgA09AAADvADADj0AwC89AAASOwCAWLwAAE48AADAugCgqj0AwAK9AMDVPABgDL0AgA08ACB+PQBgbD0AgOs8AEBHvQBgMD0AQCG9AIAAPQBQiz0AYC09AAD5OwCAfLwAgBA9AADdOwAggL0AAJQ7AAD3vAAA0DwAACi8AIBpPAAA2bsAQPY8AOAlvQCAiDwAgNY8AAC5uwCwib0AAAI9AEC5vADgP70AwAa9AGBZvQBA6r0AQK28ACA6vQAAdTwAYCa9ALCSvQDAgjwAUIU9AGAgvQAwor0AQCI9AOA0PQAgGT0AwPU8AMBXPQDgP70AAMA7AABKPADgTD0A4HQ9AIA9vQAgIz0AQMI8AACsPQAAcDwAAP87AACcOwAAhLwAgAg8AACEvABQuT0AIFY9AKAWvQAAPDsAAPU8AAB8vADAmb0A8IQ9AIBUvQBAW70A4Dq9AEAXvQBA0bwAgKe8AEBIvQBAnbwAeAK+AACvPAAA8LwAQIs8AABLPABgAL0AYCI9AMDBvADAYj0AYAe9AEAgPQAAHT0AAJK7AICdPAAAgTsAYBY9ABCjvQCAiz0AQNC8AOCoPQBgm70AACs8AKDJvQCAQLwAAEg6AEDSPAAA2DwAwPy8AADsugAAUjsA4Hm9AGBRvQDAIb0AgGK8AAC1vQCALjwAAOy6AJDPvQDAMD0AQKC9AABZPQDAo7wAAJa8AIAavAAAwTwAYDc9AAD1PAAAVz0AQAk9AAA5PABAsbwAAKq8AMAovQAA3DoAAIK8AICXPABAIz0AAFC6AECnvQBAxr0AgG68APDovQCAOr0AANg9AAClvAAAYLsAMII9AAA6PAAAYbwAAHw7ANCCPQAATD0AgF69AMBivQAATjsAUIe9APCNvQAAiT0AYIw9AGAWvQDAhjwAALK8AIAfPADgYz0AgL68AAAFPAAAkDsAADg6ACAxPQCg3L0AwJq8AAAkPADAUb0AwJ48AEATPQBAjT0AgGG8AEC0PACAmzwAAOW7AABDPQAARLwAALM8AMBZvQAARDwAwIM8AMClPQAAYD0AgIM8AACgOwAAKLsA4FQ9ACCYvQDAJj0AwL29AADAPABA47wAAGY7AABSOwBA4bwAoAG9ACBhvQAAWj0AAFc8AOA0PQCA+DwAwNY8AIA8PAAAbDsAAEQ9AKB8vQCAlzwAQIK8AEBSPQAA6bwAgLu8AEDVvABgXb0AALK8AEBTPQCAXTwAgIW9AOAgPQCAmr0AwBC9AMBavQCAmLwAAN48AABGOwAAi7sAALy6AAAKOwCgS70AAOS8AACOuwAAtbwAwCa9AMAhPQAArrsAgE49ACAOvQBAxLwAQBs9AGAgvQCAjj0AwAW9AAAeuwAA6LoAABA6AEChvABAdb0AgBI9AICWvABAmD0AYFc9AAChPAAAabwAwO+8AACoOgDAJr0AAMq7AEAFPQCgW70AgIm9AECSPQAgbz0AAIY9AMBDvQAAQzwAAMo7ACARvQBQpb0AAMy7AGBTPQDAlLwAAAq8AOATvQAAszsAwO48AACtPAAAGrsAQMY8AADdOwAgsD0AQA09ACByPQBwoL0AgKu8AACTuwAAAb0AoCc9AOAxPQDAvTw=","chunkHash":"808c744b032d0e9baf7e2d977507718ed6e9eb7d5670a922180716e915cc1e8d"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n        print(f\"Error: Highres volume has unexpected dimensions: {highres_volume.ndim}\")\n        return\n    \n    # Create figure to compare raw data\n    fig, axes = plt.subplots(1, 3, figsize=(18, 6))\n    \n    # Show lowres slice\n    axes[0].imshow(lowres_mid_slice, cmap='gray')\n    axes[0].set_title(f\"Lowres (80×80×100nm)\\nShape: {lowres_mid_slice.shape}\")\n    \n    # Show highres slice\n    axes[1].imshow(highres_mid_slice, cmap='gray')\n    axes[1].set_title(f\"Highres (20×20×25nm)\\nShape: {highres_mid_slice.shape}\")\n    \n    # Create a downsampled version of highres to compare\n    # Assuming 4x downsampling factor\n    downsampling_factor = 4\n    \n    print(\"\\nCreating downsampled version of highres volume...\")\n    \n    # For highres volume with shape (1, 80, 1, 224, 224)\n    #...\n```","range":{"startLineNumber":180,"startColumn":0,"endLineNumber":201,"endColumn":0},"embedding":"AACtvAAAoTsAgEo9AEDXvACADb0AwPA8AAC4ugAA9jsAADO9AEDvPABAtzwAgEs8AHCwvQDAQT0AQOi8AEDEPADAEb0A4IM9ACBFvQCATzwAgLA8AKBdvQCgLD0AAGi6AAAKuwCACTwAgDE8AACSuwAwtT0AgEw8AIBRPADgMb0AkKm9AMCbvACg+r0AwDy9AIAsvADA4zwAYAg9ACB3vQDQ3T0AYFC9AACFvAAAaDoAwLs8AMDnPACAtjwAAPu8AGDcPQCAxDwAwBK9AEBWPQCADj0AAH68AAC9uwDwlj0AAPO7AIBhvABAiLwAIBO9AKA6PQCAlr0AANS6AIA5PACgMb0AgJg8AAD8OgBgVr0AEKY9AAD3PABAZ70A4GA9AIBovAAA27wAALY7AABIPAAA7rwAsMw9AAALPADgiL0AgB+8AMCqPACwrz0AoHc9AECSPACwo70AQIS9AIDtPACAPrwAAJO9AABiOwDghD0AwJk8AGAfPQAAHrsAgKy8AAChOwCgOL0AoJg9AMAZPQDA6TwA4HI9ABCBvQAAqDoAQNI8AEC0vABAgTwAAB08AEAkPQCwtz0A4L09ACDavQDAlTwAABe8AAAyvACgQb0AADG9AKAJvQDAhbwAgP48ACCAvQCgY70AwBI9AAD0uwCgBD0AQKW8ADCDPQAAErwAALC5AGAaPQBAoj0AICs9AACsPADwi70AwJ48AKAkvQAAb7wAAJk7AADQOgBwyj0AwIW8AACxPACABjwAAN67AEChPADg+j0A0IW9AOC0PQBgJ70AcPY9AACFPAAwhD0AAJC5ACA1vQCAYrwA4Bq9AMCnPQAA7DwAwN08AABuvACQo70AwM48AIAAPQCAKrwAAHm9AAAjvAAA2bwA4BG9AKCMvQAglb0AQCq9AEB8PQBAlD0AIHG9AIByPQAAWzwAwHi9AIAYPABAGL0AQIK8AIBHvQDgmr0AQAE9AICBvABgI70AoE69AACuPABgXD0AAHu8AAAMPQAARDwAIKk9AEBXvQAAcDoAAPe8AKBgvQAgiz0AAJM8AIAkPACAPj0AgPa8AIAXPQAAQDoAwP48AACSOwCgUL0AALE7AKB7vQAAzrsAQKI8AIBbPADAUD0A4BI9AABFvACAi7wAgOW8AAAiuwBQkT0AAFg6AAACPAAAKr0AALi6ACBtPQDAtTwAoEc9AACovAAAaD0AQCu9AADgugDALj0AwKg8AACVPAAAFrwAoAs9AAC4ugCQtr0AwP88AEC9vAAAuDwAANQ6AIBvPAAAoDoAgBE8AMA5vQBAmTwAgIM8AIADvQAAf70AwKg8AAAguQDgmb0AQI+8AMC/vACg370AgCu8AOBTvQAA+bsA4Di9AAB8vQAAxTsA4Dw9AMCYvADgjb0AAB09AAC8PACAHj0AwPg8AGCWPQBQib0AABo8AEBLPQDAJD0AYDU9AID0vABA9TwAgKM8AHCnPQBAKT0AgD08AADwugAA4rsAgPg8AIAYvADApz0AQCU9AAABvQBA97wAgFS8AECivADger0A4Ak9AADXvABgdL0AAC29ACA1vQCA4rwAgLC8AEDCvAAACDsAyAy+AABguQCgF70AgAe8AICePABANr0AYB09AAC8ugBAcj0AAHA6AKAAPQCAHD0AAOy8AMCrPAAAVzwAIHY9AKA1vQDAoD0AAF68ALCDPQCgfr0AABC8APDcvQCArjwAAHI7AAAYugDgET0AQPu8AAASuwCAoDwAgBi8AMAYvQBAP70AwCK9ACAEvQDAlDwAgHs8ADDLvQAQkD0AwF29AICkPQBgV70AQAC9AMANvQCADjwAIBM9AECYPADAPD0AwHI9AMAZPQCA7rwAwJq8AIBaPACAGzwAADU8AAAFPAAANzwAQJO8AHC2vQBAhr0A4BK9AIDqvQDgCL0AcNM9AAAsvQAAuLoAoBE9AACVuwCAFb0AgBc8APCPPQCwhT0AgLi8APCLvQCASDwAoI69AGCVvQBgVD0AIDo9AHCJvQCAbzwAQOy8AACGOwAgjD0AgNe8AACUOgAAzzwAQNY8AECUPADA170AAAS8AIDAPABgj70AgIY8AKB2PQBgLT0AAOE7AABePABA/TwAABM8AEB/PQDA9bwAwC09AGBtvQAALTwAAP07ACCyPQBwqD0AAKo8AECmPADA4jwAgKY8ABCYvQAAnjsAkPC9AIAfPQCA17wAACi8AEC5PABAt7wAAJy8AAAivQCALjwAAKM7AEAjPQDgKT0AQGo9AADtPABA07wAQHc9ANCMvQCAbLwAQJK8AAAAOQBAu7wAAEi9AIByvADAe70AoBe9AEBIPQAAQrsAAPS8AIAxPQCggb0AAFS7AIBNvQDA9rwAADA8AAD9OwAATjsAwLo8AAAWOwBgG70AgD29AABBPAAAVLwAYIa9AAAcPQAAOLwAQGk9AKADvQAARLsAAFE9AABwvQCgpj0AgGe8AAA4OgAAwLkAACY8AAAcuwAQpr0AAPS6AAA+vQBwpz0AQHY9AAD8ugCAOLwAAIq8AACQvABA7rwAgCA8AEAGPQBgEr0AQCa9AOC2PQDA1zwAYFs9AOB5vQAAJTwAgNy8AADjuwAQp70AAKc7AOARPQCAe7wAwLS8AEClvABgJT0AgA89AACwuQAAoLoAAEE9AID4PABwjT0AQDA9AABrPQBQu70AAH47AABAugDAsLwAYCE9AECpPADArTw=","chunkHash":"e6cc3df8dd667fef6682d37cf98e0d9c5a58cab7ea6e2598f4485427613e9145"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n    if highres_volume.ndim == 5:\n        # Extract the relevant parts: [B, Z, C, H, W] -> [Z, H, W]\n        highres_for_downsampling = highres_volume[0, :, 0, :, :]  # [Z, H, W]\n    elif highres_volume.ndim == 4:\n        highres_for_downsampling = highres_volume[0]  # [Z, H, W] or [C, Z, H, W]\n        if highres_for_downsampling.shape[0] == 1:  # [C, Z, H, W]\n            highres_for_downsampling = highres_for_downsampling[0]  # [Z, H, W]\n    else:\n        highres_for_downsampling = highres_volume  # Assume it's already [Z, H, W]\n    \n    print(f\"Highres for downsampling shape: {highres_for_downsampling.shape}\")\n    \n    # Ensure dimensions are divisible by downsampling factor\n    #...\n```","range":{"startLineNumber":201,"startColumn":0,"endLineNumber":214,"endColumn":0},"embedding":"AAAzvABAqjwAIIo9AAA2vQDgNL0AwKM8AMDLPAAAqDwAIFy9AIAHPQAAELwAAPA5AMDFvQDQlT0AAGg7AGAOPQAAFLsAgMA9AMCLvQAAerwAwLc8AIBgvQAA5DwAgA08AIA3vAAAIbwAAKM7AAB4vADAZj0AwJ08AIAVPQDgUr0A4GK9AACYvABQAL4AYHi9AKAOvQCA9TwAwCs9AGBTvQAA0z0AoDy9AABMvQDA9bwAABM8AMBMPQAAmzsAALK7APC0PQBA8TwAEJm9AGBSPQCA5zwAABI7AMDyvADgdj0AAPa7AEArvQCA7rwAoCe9AOBCPQCgbr0AAHG8AABQOgCA2LwAgJU8AAAaPAAAP70A4HA9AICAPADgR70AgN48AAClOwCgC70AgNQ8ACAUPQAAwDsAkLE9AACGuwAgSb0AgBS9AACFPABAez0AAEs9AED8PACAh70AwI+8AAA+PQAAXbwA4GO9AAA7vACwiD0AgN88AABZPQAA17wAIAu9AMC2PAAAzrwAEJk9AOBePQCAtDwAQFI9AKB8vQAAELwAQCk9AEDSvAAA9rsAADA6AECHPAAgoT0AIEU9AMCkvQAAJjwAAK67AAD3OwAAer0A4CW9AECsvACgWL0A4Eg9AEAnvQDgdL0AAKc7AAAnvQCAzDwAAPe7AOBZPQCAy7wAAOy7ADCLPQCgdz0AYCE9AAAgOQBgRb0AgGI8AAC+vQAA2LsAACE8AMCfPADw1T0AAEw7AABCOwAAcjsAgGi8AAAQugAgxz0AoGm9ALCUPQDwgL0AUOY9AAAZvACwnT0AgP+8AEBcvQAAqLsAICK9ANCPPQAALDwA4FM9AIAfPAAgn70AAEA9AOAIPQAASDwAoBa9AMBgvQAAADoAAIe7ALCIvQCAO70AgJ+8AKBqPQBgbD0AoIC9AGB1PQAA3jwAoI29AAC/OwBgNL0AQLC8AICnvABAib0AABY8AGBavQAA7bwAAEm9AADOOwDAOj0AQLy8AOAOPQBAuzwAsKE9AIDxvADA7TwAwP28AIAIvQCgZj0AgKo8AAADvABAojwA0J+9AADsOwAArTwA4CI9AAAwvAAAmbwAwMc8AOBzvQCABzwAwJI8AAB9vABgGj0AoBA9AACHPADA9bwAAMG8AAAxPADAfT0AYDW9AIArPAAAKL0AANE7AMB4PQCgDT0AwNc8AGBOvQBgWD0AQCi9AAAXPQDAaj0AwMA8AIDSPAAAersA4EQ9AADMugBwp70AALq7AADkvAAAbzwAIAW9AIAdPAAAy7sAAMw8AKANvQAA9jsAQKs8AABKOwBAl70AAA88AADTuwAwhb0AgIK8ACABvQDg0b0AgIe8AMBBvQAAojwA4Hy9AABovQCATzwAQCQ9APChvQDwoL0AIAU9AEB6PQDAYj0AgNg8AGAqPQCgVr0AgIs8AADKOwAgUT0AoJc9AABhvQAACj0AAKs8ADC5PQAAwjsAAHS8AABCvAAAl7sAgKg8AACSOwAQ7D0AYEM9AMAXvQBAkDwAgCA9AABQvABgc70AACI9AEAavQAwhr0AIIi9AMBOvQBgEL0AACO8AED7vAAAwrsAEAq+AMCtPACA27wAgBq8AABeuwBAI70AgMU8AICavAAADD0AAGq8AAB6PABAvjwAAIA4AABquwDAqjwAIIE9ALDHvQDQqT0AAMC8AGBpPQAwuL0AgDS8APCtvQAAqDoAgDS8AACFPACAYDwAICi9AADNuwAATbwAoCa9AKBhvQCgQb0AwMK8ABCOvQBAs7wAgOk8AJDGvQAwmD0AYG+9ABCJPQCAIr0AQIO8AAC8OwCAJTwAQO08AEDCPAAgYD0AQBg9AMAQPQAAarsAQJK8AEDavADAAz0AwBa9AACgOQAABj0AALK7AACRvQAwur0AwBS9APDDvQDAI70AsPQ9AICcvAAArrsA4E09AAA8vABA5rwAAJE8AAA8PQBAaD0AwCa9ADCKvQAANDsAwIe9AKCJvQCgST0AwCE9AIBpvQAAoDoAAJe8AECTPACgcT0AwGa9AADCOwCA8TwAgAk8AACcOgCAxL0AwA69AAAkuwCQkb0AAKo8AOAoPQDAiT0AgD28AACQOwDA9TwAABA6AAD9PAAAb7wAAOI8AEA8vQDAnDwAYBY9AFC9PQDAcT0AAMQ8AAD4PAAA3LoAwB09AGCgvQCAPj0AgMO9AEDMPACAqrwAAK87AADEOwCAvLwAYDq9ACCnvQCAOz0AAEY8AIBLPQCADD0AgB49AABavAAAnLwA4C89AOAovQAAlDwAAJW8AABGPQAAQLkAQAW9AIDBvABABr0AAGm8ADCRPQAA4LoAYIq9ALCLPQAQib0AAIw7ACBPvQCAVLwAAEA5AACoOgCAQLwAAE67AADVuwCgBr0AwJO8AIA0vACAW70A0Ia9AMDxPACAGzwAYE89ACA3vQBgF70AgAo9AOAmvQBgSj0AwMq8AABguwAAtTsAANc8AIBMvAAAX70AgDU8AABbvADgfT0A4J09AMCsPAAADrsAQAG9AECyPAAgPb0AAEG8AADNPACQib0AMIa9AMCjPQBgQj0AsIo9AIBWvQAArDwAwJy8AKABvQAQsL0AwPC8AICiPAAAb7wAwJa8AAB4vABgJD0AQMI8AEDwPACAZDwAgDo8AADwOwCwtj0AkIg9ACBiPQDQ070AAJI7AAA2vAAgQb0AIDs9AEDXPAAA8js=","chunkHash":"f929c9879402e05eee3ac6205c8aa812cbc054b3e9f3043d9b24c7accdabffb2"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n    d, h, w = highres_for_downsampling.shape\n    \n    # Adjust dimensions to be divisible by downsampling factor\n    d_adj = (d // downsampling_factor) * downsampling_factor\n    h_adj = (h // downsampling_factor) * downsampling_factor\n    w_adj = (w // downsampling_factor) * downsampling_factor\n    \n    if d != d_adj or h != h_adj or w != w_adj:\n        print(f\"Adjusting dimensions from {(d, h, w)} to {(d_adj, h_adj, w_adj)} to be divisible by {downsampling_factor}\")\n        highres_for_downsampling = highres_for_downsampling[:d_adj, :h_adj, :w_adj]\n    \n    try:\n        # Reshape to prepare for downsampling\n        reshaped = highres_for_downsampling.reshape(\n            d_adj // downsampling_factor, downsampling_factor,\n            h_adj // downsampling_factor, downsampling_factor,\n            w_adj // downsampling_factor, downsampling_factor\n        )\n        \n        # Average over the downsampling windows\n        #...\n```","range":{"startLineNumber":214,"startColumn":0,"endLineNumber":234,"endColumn":0},"embedding":"AMDUvABAlTwAgKg9AIDvvADA5LwAAFo7ACArPQAABDwAQPS8AIBFPQAAEDoAAHY7AIDJvQBQgj0AwJu8AEDzPAAAUDoAwKQ9AGCMvQCAGjwAAFc8AABHvQDAAD0AAII7AADPOwAAWDsAAB+9AEARvQDgkT0AALo7AICyPACALb0AQK29AEAYvQDw4r0AQNO8AKABvQAAUj0AABE9AKAnvQCw6j0AcIm9AABLvQBA3rwAYCC9AABFPQCANzwAgLy8AGDCPQDAyTwAwAi9AOAUPQBAozwAAGC5AIBBvADgbT0AgDU8AEAavQBA67wAYDy9ABCWPQDAA70AACi7AAD0OwDAK70AgBw8AABdPACgNb0AoI89AACOuwAAfr0AIFY9AED1PACASr0AgB89AKA7PQAArbsAAPY9AAAwuwBAlrwAQIi8AICxPADAUT0AMJw9AMD0PADgvr0AIAS9AMAhPQAA7rsAoGa9AABdPAAQxD0AAD08AAA4PQDA+LwAAOq8AIBIPACAVrwAIDg9AKBCPQDgjT0AAMQ6APCHvQCAGrwAQLc8AKA0vQCAdLwAgLo8AECsPABg3j0AwF89AMCpvQAAhDwAAAq8AGAzPQCAErwAwA29AACAOABA9LwAACg6AADSvABger0AAJY7AEBLvQCAzDwAAJ67ABCdPQAAprsAgJq8AGBXPQAAEj0AADE9AACRvABArLwAAE48ALCMvQAAnrsAgA68AAA+PADwwT0AgAk9AMBwPQCA57wAwLM8AABoOgCAyT0A4Hy9ALDGPQAA5bwAwLc9AAAOvACgHj0AwJa8AADHvAAAfLsAAEG9ACA0PQBApjwAgLQ8AACqPABgyL0AALs8AICjPAAAqLoAQCy9ABCBvQAAATwAgKa8AECovQCAd70AAOe7AIDNPACAjD0AoBe9AFCdPQAAvzsAIFO9AADgugBAEr0AABK9AIAjvQDwor0AgB28APCIvQBAAb0AgLC9AEDAPACA0zwAQKa8AIBzPAAABz0AkL89ACA1vQCAgLwAwJk8AEB0vQBQkT0AgGs8AAD0ugBAJz0AsIW9AACgvAAAGjsAQBQ9AAA2OwAAar0AgCk8AMAZvQAAhzsAADk8AAAwOwAA9zwAAOA8AOAPPQAA/rsAAAe9AAC1PAAAAj0AABG9AIAPvADgPb0AAFC8AEBEPQCgFD0AgFg9AICtvABgAT0AgLu8AACquwAgiT0AgFM8AIAmPAAAErwAgDg9AMAiPQDwmr0AgBM8AIBivQAACjwAABC7AACkugAAersAAPy7AOAkvQAAErsAgJk8AAApPAAAZr0AgJM8AIBhvACgfb0AYFK9AOAWvQAgzr0AAFa8AMAPvQAgEz0AgIy8ACCDvQDAHj0AYE89ACA/vQDwlL0AgOI8AHCBPQDA3jwAANE7APCUPQCgNL0AwLc8AGAkPQCwkT0AwAE9AGARvQDgXD0AQMw8AOC4PQBgFD0AgG08AIDdvAAAlzsAAPE7AICOPADA3z0AwE89AMA7vQAAF7wAwMs8AADAOQDgEL0AACm8AEDOvAAAYr0AkIG9AGA2vQAAPL0AwNa8AECRvAAAxrsAKAC+AGALPQCA1rwAYC69AAAXPACA9bwAgCk8AACbuwCASz0AAFq7AMD/PABAzTwAAGm8AADAOACAATwAMII9AEBqvQDgxT0AAKa7AJCAPQDQob0AAC+9ALDOvQAAhrwAAAI7AMCEvACAEDwAwDe9AIA5vAAASjsAAIO7AECDvQDAYb0AAKy7AGB/vQAAiTsAIA89AGC9vQBQlj0AgA69ACDqPQDAor0AoEa9AIAYvAAAo7sAAEk8AIAhvADgXD0AcJc9AMBRPQCA3jwAADS8AICLvADAyjwAgPS8AEDPvAAAWzwAgEk8AJCAvQBgr70AICe9AGCbvQBA7rwAgMk9AIAmvACASrwAgIA9AIBBPACAvrwAAPk7APCVPQAAez0AAAY8AGCbvQAgED0AkI69AIB7vQAgLT0AYAk9AAAqvQAAs7sAACC9AKArPQDAhT0A8Jq9AADcOwAAiTwAQOs8AADfOwDwyr0AwCK9AIC9PADAJL0AgAg8AMD4PACgWj0AAGy8AIANPACATz0AAAq7AGBbPQAAALkAgO08AEBLvQAAoLkAgOQ8AADhPQDA0DwAgBQ9ACAiPQDA/zwAgNY8AOCrvQAgCz0AAOe9AMCMPABgRL0AgBi8AIBVvAAgH70AgES8AIBwvQCAujwAAHM8AGAdPQDAijwAwHA9AADFOwCAH70AAEU9AGAnvQCASLwAALw7ACCgPQAAxLsAAAC5AAAwugBA6LwAgAG8APCKPQCAHbwAMJa9AEBjPQAAQ70AwMg8AOB2vQCANL0AQJK8AAAiPABAh7wAgO48AICSPADA2rwAgAa8AIBmPACAlbwA8IS9AICPPAAAGzwAwF49AMAbvQAAxLoAQAY9AFCFvQCgez0AABY8AIDSPABAoDwAAAw9AEAJvQAgEr0AAGS8AAC7PADATD0AAHQ9AIAgvAAAljsAgOw8AECgPAAAv7wAoAy9AID2PADAcr0AYBa9ADCDPQCA2jwAgMQ8AOCjvQAADjsAwP+8AMCZvADQzr0AgAs8AECnPACAcLwAAGG8AABDvQDgRz0AoBM9AKARPQAACjsAAPU7AEAHPQAwhT0AsIs9AKBMPQCAvb0AADC8AABguQAgBr0AAAY9AEC2vABAwjw=","chunkHash":"d0d980c84c4014cab4732d3894b5d18c0b9c1e9bcad939d9c6a3167242fbfb5f"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n        downsampled = reshaped.mean(axis=(1, 3, 5))\n        \n        print(f\"Downsampled shape: {downsampled.shape}\")\n        \n        # Get middle slice of downsampled volume\n        downsampled_mid_slice = downsampled[downsampled.shape[0]//2]\n        \n        # Compare with original lowres\n        print(\"\\nDownsampling comparison:\")\n        \n        # Extract lowres data for comparison\n        if lowres_volume.ndim == 5:\n            lowres_for_comparison = lowres_volume[0, :, 0, :, :]  # [Z, H, W]\n        elif lowres_volume.ndim == 4:\n            lowres_for_comparison = lowres_volume[0]  # [Z, H, W] or [C, Z, H, W]\n            if lowres_for_comparison.shape[0] == 1:  # [C, Z, H, W]\n                lowres_for_comparison = lowres_for_comparison[0]  # [Z, H, W]\n        else:\n            #...\n```","range":{"startLineNumber":234,"startColumn":0,"endLineNumber":252,"endColumn":0},"embedding":"AABmvACAMjwAYCQ9AEAKvQAAxLsA4Do9AOAjPQAAoTwAQE29AIDjPAAA3rsAAOY7ABCyvQBgxz0AAGi7AEDrPAAASDwAoA49AKCkvQBAjzwAQJs8AABMvQBAYj0AAH48AABWvABAhDwAAKI7AGAUvQBQnz0AAJU7AABUOwAAC70AoOe9AIBavABw0b0AgAm9AAD2vAAAkDwAAJA8AABnvQAAwT0AwNm8AMC1vABAk7wAQAc9AMC1PABgDj0AALO8AHCbPQAAXj0A8IO9AABAPQBA+DwAADC8AIAwvABgXT0AwKo8AMBIvQAAQLoAIAq9AAD4PACARr0AAPC5AAAlPABgPr0AACw8AMClvADAAL0AEKQ9AMCYPADgZb0AgHc9AAAkPAAAEb0AwPg8ACBYPQCAGrwAYKg9AAAhPADgWr0AgFe8AADkOgBQrD0AMIU9AAC4OgAgur0AwPG8AIBbPACAN7wA0La9AAAcuwCAOD0AADA8AOBfPQCAS7wAAII7AABMPACAt7wA8LU9ANCGPQAAdzwAACo9ABCPvQCARrwAwPo8AAAcvAAADj0AAJq7AAAsPQBw4j0AIKs9AIDUvQAAlTsAADY8AAB+OwDAab0AIBi9ACAYvQCQl70AACk8AIBMvQBAJL0AoBM9AACyOwCgAD0AwM+8AFCtPQDA7rwAAHe8AKA8PQDA/TwA4Ak9AADRvADwi70AALE8AEBGvQCAy7wAgAQ8AAB5vACwiT0AQI68AACsPAAAOLsAAAi7AAATvABw0D0AoHS9ALC4PQAA+bsA0Mc9AIDxPADATT0AQIW8AIAevQCAbb0A4DK9AKCHPQAAsLoAYEw9AIChvADAr70AgBw8AIAOPQAA8LoAYEi9AIDcvACAXLwAgC69AGCmvQCAi70AgNO8AGBePQDgmj0AYKW9ACA8PQAA4DoA4G+9AABouwAAdLwAALm7AGBHvQDwlL0AgPS8AADluwCgPb0AwKK8AKAePQDgXj0AIAG9AABWPQAApTsAIKc9ACBxvQAAtLwAAIg7AEBnvQBQnD0AACI7AICvvAAAEz0AgIi9AACRvAAA4jsAgK88AAA4ugBgDr0AAAo7AECHvQAAmbwA4G09AAAaPADgdT0AIF09AMCnPACABrwAANm8AABkuwBQgj0AQM+8AMC+PACAXLwAAFa7ALCmPQDgUT0AAMC5ALCLvQDAUT0AoBW9AAB+OwDAlDwAYDk9AMDuPADAE70AgHw9AIB4PACAkr0AAGC8AKBNvQDAzTwAAAI8AAAIugAALjsAABa7AOBwvQDAiDwAwLM8AABWuwBQkr0AYA49AMCXvABAQ70AAPO8AIAyvQAg0L0AgDy8AGB7vQBA/DwAAB29AFCevQDgBz0A4E49AMC5vABAOb0AgA89AKA/PQBA1DwAgPc8ADCFPQCgPb0AgAc8ACApPQDAeT0A4HM9AACBvAAA3TwAgDg8AGDGPQAA/DwAgLA8AAA2OwCAa7wAgBk8AAASuwBgqD0A4GU9AEBNvQDA6jwAAP48AMCFvADgYL0AAOk8AGCOvQBAV70AQJS9ACBlvQBgfr0AADO8AEDrvACAKbwASBC+ACAZPQDAGL0AAEI7AIC5PACAPbwAAPU7AABWOwCAKD0AYBW9AOAbPQDAmjwAALy8AAClOwCAFDwAQCQ9AGBYvQBA2T0AgG28AICHPQBwqr0AgE68AED9vQAATbwAAGw7AAC2uwDAqTwAQMe8AAAIvAAAubsA4A+9AAAOvQDAPr0AAAC6AHCbvQAAzTsAAGy7AAC7vQBgcT0AYHW9AMCbPQDgPb0AALK7AMCVvAAAwzsAgNw8AEDfvABARD0AYDo9AGAWPQAAKDsAgCg8AIAQvQAAcbwAQIO8AAAlPADApzwAgBS8AKChvQAgSb0AAE67AMCbvQAQg70AINs9AIBUPABAqDwAwH89AADPOwAA/TsAAOm7AACBPQBAPT0AICi9APC4vQAAMDsA4Ey9AAB+vQAgPD0AgHo9ABCHvQAgKz0A4DC9AACkuwCAOz0AgM28AIAsPADAIz0AAOY7AOAZPQAQxr0AACo8AAAVvAAgN70AQIw8AGAWPQDQkz0AAM27AAAQuwCA8DwAAC48ANCTPQAAm7sAIAo9AHCQvQAA27wAAO87ALDKPQAAiz0AQAE9AMCXvAAAODwAANQ7ADCQvQBA6jwA8Ma9AEAAPQAA37wAACS8AABiOwDATr0AIAG9AOA4vQAAhDoAgIy8AACYOwCAOD0AgHw9AABEuwCAbrwAAPQ8ANCOvQAAzDoAQOK8AOCGPQBA9bwAQIO8AIDrvAAgcb0AAJy7AMAGPQAAoLkAoIa9AKAiPQCAFL0A4BC9ACAxvQBA1LwAACA7AAC/OwCAHr0AAIi6AADMOgBABr0AALK7AADbOwAAErwA8KW9AIAGPQAAGL0AgDY9AIAXvAAAqrwAwN88AKBxvQCQqj0AwNW8AID0PACAELwAAAC4AECgvACAc70AwLO8AADjuwCgSj0A4Fo9AIBHvACANTwAAK88AAA2uwAAkLsAAEi7AMBdPQAAO70AgBW9AGAXPQDgLz0AACE9AMBPvQAA7zsAAOC8AAAqOwDwtL0AAPW7ACASPQCAhbwAQIu8AOBrvQAApTwAQG09AECLPABA2jwAQNM8AIDkPAAAXj0AUJA9AMBYPQDwtL0AQOO8AADLOwCAHr0AwD09AEDDPABQhj0=","chunkHash":"c2c2fa2b1c19adc615dc44fa788f85148a300191cc94d8813fe6544a5d25b2ee"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n            lowres_for_comparison = lowres_volume  # Assume it's already [Z, H, W]\n        \n        print(f\"Lowres for comparison shape: {lowres_for_comparison.shape}\")\n        \n        # Calculate similarity metrics if shapes allow\n        if lowres_for_comparison.shape == downsampled.shape:\n            # Calculate mean squared error\n            mse = np.mean((lowres_for_comparison - downsampled) ** 2)\n            print(f\"Mean Squared Error between lowres and downsampled highres: {mse:.6f}\")\n            \n            # Calculate structural similarity (if available)\n            try:\n                from skimage.metrics import structural_similarity as ssim\n                # Calculate SSIM for each z-slice and average\n                ssim_values = []\n                for z in range(lowres_for_comparison.shape[0]):\n                    ssim_val = ssim(lowres_for_comparison[z], downsampled[z])\n                    ssim_values.append(ssim_val)\n                avg_ssim = np.mean(ssim_values)\n                #...\n```","range":{"startLineNumber":252,"startColumn":0,"endLineNumber":271,"endColumn":0},"embedding":"AAAWvAAA1TsAANE8AEAevQAAeLwAAAw9ACBcPQAA/DsAgLq8AIAxPQAAaLwAAEI7AICivQDAfD0AAA88ACA8PQAAaLwAoBs9ACCIvQCAzTwAgFE9AAAcvQCAkT0AAOk8AACvOwAAzjwAALo8AACwuwAAtj0AADo7AADgugAABr0AcJy9AMCOvABwzL0AgII8AOBLvQCAUj0AAMk8ABCJvQBAqD0AgCm8AACruwAgKb0AgJm8AADoOwAwoj0AgDe9AEC2PQCAEzwAQEG9AIBWPQAgKj0AoA+9AIAmPAAgCT0AAJY7AIBivAAAzrsAYFW9AAAZPQBA/bwAADM8AAD/OwCgWb0AAKA5AAA0PACAU70A4Jw9AADPPABgT70AoDI9AAA6PQAA07wAAIC4AADmuwAA97sAQIY9AICEPQCAV70AAIy7AIB5PAAA9D0AsI89AEC5vADgoL0AIH+9AMDQPADAtrwAoGK9AIC+vAAwiD0AgJ48AACoPACAOz0AANi6AIC4PACA9bwAYLA9AGAnPQAADjsAgEo9AIBRvQCA0bwAoBE9AICIvAAAHj0AwMu8AMDjPACQmD0AIJc9AABRvQCAwLwAgFM8AEAAPQCAaL0AANC8AABSvQBAHL0AAO08ADCWvQBAN70AALo8AACnPADABj0AABG9AOAcPQAAaLwAAD+8ACBqPQCAvDwAANc7AACQugCA0rwA4AE9AGAlvQDA9bwAAOE7AACduwCgwD0AAMk7AAAQPAAAGLwA4D89AAD1PABAnD0A8JO9APCZPQBQhr0AII89AID7PAAAhTwAgAS8ACBavQCAjb0AID+9ACBPPQBA0rwAgCI8AAASuwAwtL0AwK08AJCLPQDA+zwAYFK9AACGvAAAybwAoCW9ANCovQBwoL0AANK8AEDNPABA5T0AcJG9AAAaPQCAv7wAgMi8AEA0vQAAzrwAAEw8AIADvQDAYb0AADk8AIC2PADAx7wAAF+9AADOPACA6TwAgAe8AEA3PQAA9jsAkNA9AOBFvQAAtrsAQAS9AKASvQBQiD0AYE49AECivADAfj0AwLu8AEALvQBgKD0AwNM8AADkugAgNr0AAK07APC0vQBADL0AQO48AIANPABgST0AQEg9AADsPACAkLwAgDm9AMDBvABwvz0AAKy8AAD9PAAgI70AAEy7AODEPQDgBD0AwPi8AKAjvQBARD0A4D+9AED4PACAQTwAoIA9AABFPQDgVL0AEIs9AAAauwCQqL0AACc8AED7vAAAFjwAACc8AACuPAAA3zwAgG88AMAHvQAAFDwAAIY8ACAEvQAAgb0AABE8AAA4vQAgbL0AAAg8AEDEvABAtr0AgAO9AEAOvQAA+DsAoAW9AFCBvQAAcDsAAFi7AAAFvQAQgL0AQP08AEDOPAAAbrsAwJ88ACCEPQCAH70AwOU8AGAaPQDAhz0AQIY9AICXPAAAfTwAQJK8AMBUPQBgMj0AwIU9AIAUvQAAHrwAgCW8AAC3OwDQmz0AwC89AEAFvQAAlbsAANy6AMARvQAA87wAAL88ALCFvQBgY70AoDK9AGCSvQAAE70AgHi8AKACvQBA77wAsNm9AAAuPQBgJb0AAMA6AAA4PQAAfr0AQN48AAC4uwDAuDwAAAq9AOAhPQAAjTsAAKO8AAACvACArTwAYFk9ADDKvQAg1T0AALK7ALCTPQDgoL0AANC5AIAAvgAA+zsAAJu8AECovADAeD0AYHu9AADWvACAUrwAgL28AIBzvAAAKL0AIBk9AGBuvQCAHDwAACA7ACBnvQAQ7T0AEJ+9AHDMPQCAfb0AAAC9AACYugBAPz0AoJI9AMDvvACgHj0AQEg9AIBFPQBA5jwAwJ48AACpvAAAFjwAAFi6AMDcPAAA3TwAwIW8AHCqvQAAKr0AYBy9ANCrvQBgWL0AoMA9AAAEvAAAVjsAgEA9AABcPAAAwbsAgMu8ACCBPQCgRT0AgA68AHCgvQBAmzwA0Lm9AIBhvADAID0AIJw9AKBrvQCAJD0AAKI7AEDqPAAAtTwAgOS8AMBnPQCgej0AAM87AIAOPAAA2r0AAJk8AEDTvABgbr0AAMU7AGANPQDA4zwAAJE7AMCrPABgMj0AAF47ANCbPQAAy7sAAAU8AAB+vQBAPb0AAEs8AOCOPQCAgDwAACU9AAByPABAJT0AwJs8AMB+vQCAgDwA4Oa9AABPPADAFr0AAOY7AMDhPAAAYDsAgCG9AAASuwBAuzwAgIQ8AMCIPACQgD0AYDo9AABouwBgD70AML09AEC+vQAACDsAQIS8ACApPQCAPbwAYBG9AIBIPABAZL0AgCy8ALCIPQAAcrwA4Aq9AIBGPQAAWr0AgHe8AOAfvQAAB7wAAAA6AAB1PAAAG7wAAAc8AABovABAtLwAAME7AIAmPABAxLwA0Ja9AAD8PACAcb0AsMM9AMDOvAAA0zsAQJM8AEA1vQAApT0AAC28AMCUPACAbjwAgCO8AADbuwAgSL0AgF48AKBAvQCAfj0AACY8AADEvAAAGzwAgEc8ACBSvQBAj7wAgE48AADBOwCALb0AwOC8AGBQPQDA6jwAAEM9AED9vAAAkbwAAKS7AIDkvADAs70AANC8AKAsPQCAkLwAwNG8AFCTvQDAEj0AsKA9AEClPAAAIzwAAEy7AIBYPAAAizsA8NY9AADDPABArb0AwCe9AIBHvABAJb0AwN88AADNOwCA/Tw=","chunkHash":"b199f388a082cb0deebca29d4d8c25ae16c6ac9c4329f6613ffb4dba746dfcf2"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n                print(f\"Average Structural Similarity (SSIM): {avg_ssim:.6f}\")\n            except ImportError:\n                print(\"skimage not available for SSIM calculation\")\n        else:\n            print(f\"Shape mismatch: Cannot compare lowres {lowres_for_comparison.shape} with downsampled {downsampled.shape}\")\n    except Exception as e:\n        print(f\"Error during downsampling: {e}\")\n        downsampled_mid_slice = None\n        downsampled = None\n    \n    # Show downsampled highres\n    if downsampled_mid_slice is not None:\n        axes[2].imshow(downsampled_mid_slice, cmap='gray')\n        axes[2].set_title(f\"Highres downsampled by {downsampling_factor}x\\nShape: {downsampled_mid_slice.shape}\")\n    else:\n        axes[2].text(0.5, 0.5, \"Downsampling failed\", ha='center', va='center', transform=axes[2].transAxes)\n        axes[2].set_title(\"Downsampling Error\")\n    #...\n```","range":{"startLineNumber":271,"startColumn":0,"endLineNumber":288,"endColumn":0},"embedding":"AIABvACArTwAcIg9AADyvABA6rwAQIk8AMC6PAAA8rsAAE+8AADIOwCAbbwAwAq9AFC7vQCA5jwAANi6AOAbPQAAnbwAoHI9AABYvQBAsjwAALg8AIAFvQBAEj0A4Ac9AAAfPAAAHrwAALc7AEAhvQBArD0AADo7AKAGvQCAbL0AkJ+9AEAVvQDA4L0AAHQ7AABpvAAADj0A4CA9AACUvQCQ0D0A4Fq9AABuvAAAOLwAYAq9AIAFvAAgLT0AAFi9AHCyPQAA7jwAwBW9AEArPQDANT0AgIu8AAC3PADgKT0AAA48AAASuwAAo7wAIJa9AICPPQAAA7wAwAS9AAAOOwCgVL0AAIS6AAAaPABAt7wAgDM9AAAKPADgcb0AgBs9AMCZPAAgBL0AwLu8AGAfPQCA3bwA8Pg9AHCEPQBAQr0AgFs8AGAnPQBAtj0AoLI9AIAOPAAwg70AYJ69AADcOwAAtLwAwLG8AABUOwBgNz0AAL47AIDyPACAKz0AwMC8AACZuwCANLwAoJc9AGBDPQDA6zwAYBQ9AIAvvQBA4rwAAKs7AOAGvQCgDz0AACa8AACrPACQjT0A0Ik9AIBCvQBAG70AgHY8AICBPADAuLwAoA69AKAJvQBgJr0AACg6AGAjvQCgab0AQIo8AABIOwAA7DwAQLG8AFCHPQDAobwAAHK8AIAqPQCA/jwAAK47AAB0vACAK7wAYEc9AIBhvACALL0AACS7AGA8vQDQ1D0AADK7AEACPQCAhLwAgGY9AIBAPQDgqT0AIJS9AECsPQDwhb0AINU9AKCDPQAAmjsAgJ+8AMArvQCwgb0AkJ+9AAAbPQDAkLwAgDK8AAA/PABwrb0AABy7AKByPQAAKrsAoHG9AMADvQCAJLwAACq9AKCIvQBA1L0AACg6AACnOwCgyT0AwC69AMAbPQAAU7wAAKi7AEA0vQAA8bwAANI7AABevQCgeb0AAGK7AAAbvACAWrwAcKS9AID2PAAA/jwAAJk7AOARPQBAnDwAgJM9AABavQAAF70AoBm9ACAevQCAjz0AAIc8AADgOwDQwj0AgPO8AAAkvAAAnDwAgHk8AEDfPAAAoL0AgFC8AIB8vQAAB70AQF89AACsOwBAijwAYD09AABfPABA0rwA4CO9AOALPQCAXj0AAKu7AAC1uwAgJb0AwJO8APCUPQCgED0AAOa7AABbvACgSD0AAOu8AAC+uwBA3TwAoEs9AOAJPQAAT7wA4D89AADoOwDgzL0AAOc8AAAVvQCADTwAwIY8AABaPAAA4DwAACQ9AIDLvAAAzzsAAJA8AMCEvADgbr0AADC6AEDyvADA270AAAk8AAA1vQBwsr0AoEC9AIALvACAD7wAQBO9AIBuvQAAm7sAAPE7AICevADgZ70AAG08AIA9PACANjwAgAY8AKBvPQAAkbsAAFC7AKAgPQCAcD0AAE49AAB0PACATD0AAOU7AKBfPQCghj0AoAM9AEDkvABAsrwAAJo7AICQPADwrz0AwIo8AMD+vACArbwAAMy7AAD+uwBARL0AAFA8AOBevQAgf70AQAS9AKCEvQCgU70AANO7AED7PADgOb0AQOu9AICLPQDAY70AgBu8AIAKPQCgWb0AAOU8AABgugCAQT0AgBk8AADOPAAAK7wAAEG9AIA5PABgJT0AgFM9ALCivQCQjj0AAKs8AHC3PQDgWr0AAFC7AGDYvQAAErwAAGQ8AECqvACA7TwAoGK9AACwOgAArLsAAIC6AADcvACA7bwAANW7AICSvABA2zwAANM7ACCevQBAsT0AwEm9AFDBPQAgi70AwI68AIBsvACAwzwAgCc9AACUugAAEDsAsJM9ALDDPQAAmTsAgLY8AADIugCAtDwAgLw8AACQvAAAIDsAwMa8APCTvQDQmb0AgOu8ALCFvQBgf70AkNs9AIALvQDADD0AYB49AECuvAAAILkAwPC8AFC8PQCAqzwAgGM8AJCjvQAA37sAwFG9AOA1vQBAUT0AIHs9AAA4vQBgIj0AIAy9AECTPABApzwAYDG9AMARPQDA7TwAADo8AAApPAAg7b0AgAc8AABYuwDgUb0AAGi7AMAOPQDA0DwAABa7AABAOgBgWD0AgOY8ANCZPQBAvTwAIDo9AOAHvQCANbwAALK7ADCcPQBA7zwAAOk8AIA0PACAWD0AgAQ9AJDnvQAArjwAoA6+AECyPACgXL0AACy7AIBjPAAAT7wAAIG8AACDuwAAlDsAQIs8AABAugDgIz0AIKQ9AAAfvABgNL0AgOY9AOBkvQAAAjwAgIC8AIB9PQAA/7sAoC29AAAFPAAA5rwA4DK9AGBWPQBAG70A0IW9ACBXPQBwgb0AAFm8AIAqvQAAU7wAANc7ACAzPQDAubwAAE49AADrOwDAV70AgNu8AIB9PADAlLwAIL+9AAAsPQBgLL0AcM49AIDdvACAPzwAQGM9AOAkvQDgZD0AQJi8AADyuwBAhrwAwCA9AADYOgCAFb0AgAy8AEDBvACwmj0AwJM8AMCbvACAk7wAgFc9AACAvQDAkbwAAOU8AADcOwDAFL0AYDq9AEA6PQAAADgA4GE9ACApvQDgH70AgFO9AADvOwDQ670AQAG9AACnPADAk7wA4AO9AEDfvADgTj0AgH49AADnuwAAhjsAgEQ8AIA3PQCAazwAYJU9AMC8PADgv70A4Aq9AAAiPAAAgbwAAKK7AICXPACAzjw=","chunkHash":"56101b5ca6959bd11916d9a10bd8641bf00b68d8ff3b8b565618d201b6a19b18"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n    # Add overall title\n    plt.suptitle(f\"Downsampling Verification for Sample {sample_id}\", fontsize=16)\n    \n    # Save figure\n    output_path = f\"visualizations/downsampling_verification_{sample_id}.png\"\n    plt.tight_layout()\n    plt.savefig(output_path)\n    print(f\"\\nVisualization saved to {output_path}\")\n    \n    # Additional analysis: histogram comparison\n    plt.figure(figsize=(12, 6))\n    \n    plt.subplot(1, 3, 1)\n    plt.hist(lowres_volume.flatten(), bins=50, alpha=0.7)\n    plt.title(\"Lowres Histogram\")\n    plt.xlabel(\"Pixel Value\")\n    plt.ylabel(\"Frequency\")\n    \n    plt.subplot(1, 3, 2)\n    plt.hist(highres_volume.flatten(), bins=50, alpha=0.7)\n    plt.title(\"Highres Histogram\")\n    plt.xlabel(\"Pixel Value\")\n    plt.ylabel(\"Frequency\")\n    \n    try:\n        plt.subplot(1, 3, 3)\n        if downsampled is not None:\n            #...\n```","range":{"startLineNumber":289,"startColumn":0,"endLineNumber":316,"endColumn":0},"embedding":"AADVuwAAQDsAQLY8AOB/vQBgl70AQA89AEDWPAAAYLwAgBi8AIAYPQBAEj0AQMk8ABC5vQDA8jwAAMU7AMAwPQDgML0AYF89AMB6vQCgTj0AgHg9AFCavQCgOD0AAPE8AACEuwAAjLoAgNy8AACguQDwgD0AAIw7AADguwCgKL0AYAS+AIAOvADw0r0AAI+7AACOPABAurwAAPy6AEBfvQBQwD0AwJu9AEDivACATDwAAJ48AKBYPQCAgTwA4AK9AFDOPQBA+jwAoE69AED5PABA3DwAAKW8AIADvACgRj0AALm8AAA+vACAqrwAIHm9AEBwPQAA2bsAIAg9AMAQPQAAPr0AgOI8AMABvQAAxbwAEJk9AKAGPQDABL0AwB89AIBRPAAgIr0AQOC8AIC6PADAz7wAYJQ9AADnuwAApL0AwIe8AAAcPABQpj0AoGI9AIAwPADQ2b0AQIW9AID4PAAATDsAQL68AAByuwDgYD0AgIG8AMC7PAAA9TwAgHM8AACQPAAgDL0AsIQ9AIDzPABglj0AIBg9AEAOvQAAmLwAIAk9AAAsvAAA3DwA4Fc9AMDgPADAiT0AQEs9AFDCvQCAEbwAwAw9AACIOwBAUr0AgOi8AIAjvAAA1bwAgKC8APCOvQDgX70AAGg7AIDqvADA2TwAgAu8AECdPQBAuLwAwKA8AACYPABANz0AgCI8AABwOgDA1bwAwK48AABqvQAAjrwAgA08AECtvAAQ3z0AYBs9AICBPACA7LwAgNk8AADPPADAoD0AcJW9AHDKPQBA+LwAkMc9AIDDPADgPz0AQIu8AMAavQAA07wAoBm9AIB3PQAAHD0AgG68AADOOwCgjL0AABI8AMA7PQCADr0AkJe9AOBKvQAAUjsAgCK9ACCcvQBAZb0AAOC5AOBOPQAgxj0AQFa9AHCPPQAAY7wAgBq9ACAdPQBABr0AAKE7AKAyvQCgpL0AALG8AIBqvADAgLwAkK+9AGAvPQCAFz0AAKQ7AMCMPABAST0AYBA9ACAnvQAAHLwAAIy8ACAyvQCgmz0AAAo8AACoOgDAiT0AwJq9AAA7PAAAujsAIF09AABAOQDA7bwAgBW8AFCevQAA8LoAgKo8AAARPAAA/jsA4AE9AAC5PADAy7wAgOW8AAAXvADgaz0AQJG8AMCsPAAAsbwAALa7AACTPQAAzzwAoIE9AICpvADgLz0AwJK8AIB3PACAAj0AIDU9AECAPADAA70AwBs9AAAwOgBQl70AAJQ7AADxuwBA2DwAQKC8AIDJvAAALDsAgCm8ACByvQAApTsAgII8AMCjvABAp70AgIs8AAAsPADwl70AAJw6AIBBvQBw2L0AwKi8AFCHvQCAn7wA4De9AECavQCAFzwAwB09AADluwCQlr0AwMs8AOAfPQBAvzwAgEM9AKBePQDgR70AANw7AIAgPQBANz0AIHc9AABiPADAxDwAALi6AHCwPQAAWD0AALA5AAAXvACAiLwAQN88AAAqOwDQ2T0AQCg9AOAdvQAACjwAgCY8AAACvADAo7wAwJY8AMClvAAgK70AoJS9ACBJvQAALrwAAD08AACpOwDAmrwAoAa+AIDnPAAgMb0AQOa8AABJPADACb0A4E09AAC0OwDgDj0AgC+8ACALPQCAjzwAwGy9AMD7PACAbTwAgFo9ACAgvQAgwD0AQKw8AMCAPQDgcL0AgFO8AMDQvQBAFD0AAEs8AMCivAAAnzsAAL68AADzuwAAUTwAAJw8AABaOwDgPr0AwKG8AAB+uwCAvzwAwNs8AJCcvQCQuT0AoK69AGDDPQAQs70AwLu8AAAmvQAAwbwAQPs8AAA6vABALT0AEIE9AJCZPQAAsDkAgJw8AACUOgCAHTwAAOO7AACbOwDAirwAwMW8ACCsvQBQor0AYGG9AHCsvQCAqbwAQL09AOA8vQBAk7wAIFY9AIANvQAAVL0AAKS6AJDHPQCAWD0AgIm8AMAdvQDAgrwAwFy9AMCEvQAgVz0A4EM9AKA4vQDAzzwAoB69AMDXPADAZT0AYFG9AADoOgBABT0AgII8AMAEPQDAuL0AAMq7AAB/vADAkr0AAJA5ACBSPQAAFD0AAOG7AABxvACQhT0AQCU9ACBpPQDApbwAIGI9AECavQAAtzwAAOO8AHCkPQDABz0AgC09AICXPABADj0AABw8ACCuvQAAgTwAKBK+AAB0PAAA17wAAJy6AACXOwBAvLwAAIG7AEAwvQDA7bwAAMI8AIDgPAAgLT0AQGc9AAD5OwAAVr0AoK49AEBVvQAAIDkA4Aq9AADePACAkbwAwJG8ACA9vQAABr0AwCS9AGBHPQBAlrwAwAm9AMAfPQDwhb0AQIY8AEBpvQAA07wAgOK8AACYuwAABzwAgCK8AIA8vADgG70AwHW9AMC6PAAA37sAUJG9AKAUPQCALb0A4C49AAAkvQAAnjsAQH89AIB6vQCQpT0AwIq8AADuuwAAd7wAQDM9AAAOPABAkb0AAIS7AAA3vACgmz0A4Bs9AAC0ugAASbwAwLs8AIBSvAAAYbwAQIy8AMDJPADgEb0AgDC9AOB2PQAAZzwAYGU9AED5vACAzTwAwHO9AEDzvAAA5L0AQLi8AMAtPQDAqLwAgDO9AIBIvQBAhzwAwIE9AICLPACAZbwAAFg7AOBvPQAgVj0AQEg9AEBSPQDAdL0AAHm8AADAuQAAYDoAAHU8AEDMPADgPD0=","chunkHash":"16786f5901d4a93d8ce62ba67bd80f203db224d8eb835ac837cf12caa401c39c"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n            plt.hist(downsampled.flatten(), bins=50, alpha=0.7)\n            plt.title(\"Downsampled Highres Histogram\")\n        else:\n            plt.text(0.5, 0.5, \"Downsampling failed\", ha='center', va='center')\n            plt.title(\"Downsampled Highres Histogram\")\n    except NameError:\n        plt.subplot(1, 3, 3)\n        plt.text(0.5, 0.5, \"Downsampling failed\", ha='center', va='center')\n        plt.title(\"Downsampled Highres Histogram\")\n    \n    plt.xlabel(\"Pixel Value\")\n    plt.ylabel(\"Frequency\")\n    \n    # Save histogram figure\n    hist_output_path = f\"visualizations/downsampling_histograms_{sample_id}.png\"\n    plt.tight_layout()\n    plt.savefig(hist_output_path)\n    print(f\"Histogram comparison saved to {hist_output_path}\")\n    \n    # If texture dataloaders are available, also analyze those\n    if has_texture_dataloaders:\n        print(\"\\nAnalyzing texture dataloader outputs...\")\n        #...\n```","range":{"startLineNumber":316,"startColumn":0,"endLineNumber":338,"endColumn":0},"embedding":"AADMuwAAdrsAAJE8AIBuvQAAPb0AAC08AABdPAAAV7wAAAA4AEDGPAAA3zwAoAg9AJCwvQCATTwAAPC5AEBLPQBAN70AcIA9AMA6vQCAyzwAwH89AGB5vQDAMD0AQN08AACLPAAAjLsAAFK7AAAjvAAAkD0AgBM8ACAjvQAALb0AMMy9AMCyvAAwxL0A4Bi9AAAXPACA2zwAAHo8AOADvQCQyD0AIGe9AEANvQBApzwAADA6AAAEPQBAmTwAoEu9AADCPQDAID0AwBG9AOBXPQAAGLsAAJu7AOAXvQAgbz0AwIi8AIB9vABAwLwA8K29AOCGPQCAmrwAABI8AACPOwAgUL0AQIw8AICAvACgZL0AgIA9AEBGPQBgEr0AAO87AAA7PADgQr0AwP+8AECEPAAA/TsAgJw9AABkvAAAeb0AALW7AMAhPQAQhT0A4Gg9AADQOgDQwL0AQHe9AAC3PAAAbTwAwNG8AAAoOgDgoz0AAGw8AED+PAAAeDoAgAC8AACVuwAAIr0AAE89AEDUPACwjT0AQD49AAAlvQAAtrwAALE8AECTvAAAn7sAwFA9AMDhPACAgD0AgFk9AOCZvQAAsbwAoF49AAAougAA77wAgAe8AACJOwDA4TwAANK7ACBivQBAGr0AAIy7ACA6vQAAhDwAgJ68AHCrPQBA2bwAgMo8AABxPACA0TwAgKA8AIDAvACgNb0AwLk8AABIvQAAILwAAJe7AACMOwCguz0AACA6AACOPADAtrwAQIE8AIDlPACAxD0AgGu9ANDHPQCA57wAwOs9AID7PADgGD0AAAg8AAB0vQAAsrwAQFi9ACAWPQDAyzwAwBS9AADouwAQjr0AAIy6AGBZPQDgQr0AEIK9AID7vACAwrwAwBO9ACCZvQBgh70AAAq8AMDTPADQyD0AgF29AABSPQAAETwAAA29AECfPAAgO70AAFK8AAB2vQDQjb0AANW7AAC9vABAPb0A0L+9AMANPQBART0AAI07AOAPPQCA6zwAAHY9AIBuvQDAkbwAYCa9ACBUvQCAtD0AwJw8AABIOwBwgT0A0J29AICDPADAyjwA4FI9AEACvQDA0LwAgG+8AMByvQAA4DsAwLM8AACxuwCAZTwAgGc8AIDhPAAAs7sAAEK9AAAQugDwlj0AgHm8AMCNPACAsbwAAIu8AKAFPQAgCT0AgEk9AAD2uwCgDz0AALa7AAB5PACwiD0AgAU8AAA4uwAA8bwAICw9AICdPACgm70AAPG7AABXvAAAzDwAgDa8ACAPvQAAojwAABK7AFCRvQAAtDoAANG7AMD5vADAor0AoBI9AIBKvACAv70AgIS8AEBdvQBg770AgA+8AMAgvQCAK7wAIGa9AICcvQAADLwAgG09AECvvABgd70AYII9AKAkPQCAeDwAICo9AIAvPQAAmL0AAEi8AEB+PQBAYj0AoF49AAAOPQDA6TwAAFk8AIC2PQAgST0AADI8AAAIuwAAZ7wAYAs9AECqPABQkj0A4AA9AKB0vQAAsbsAgA68AAAbvAAAgLkAALw7AIAGvQCAJr0AkI+9ACA+vQCAJLwAAEI8AEDRPACgKr0AcAW+AIDgPAAQlb0AAOO8AIAlPAAAWrwAYAg9AIAYPACgIz0AgHO8AKAXPQAAOLsAQEG9AMC1PAAAzDwA4Bc9AABrvADwvz0AALS6AKCFPQDwjr0AwOa8ADgFvgCAuzwAAKY8AADvvAAA37sAwIi8AACEOwAAwLoAoGM9AOATvQCAb7wAAKc7AACIOgBAMT0AABw9AJCEvQAQrT0AgGG9ALCvPQBQzb0AwPq8ACApvQBA3bwA0II9AAD2uwBAUD0AEL89AOBbPQAA5LoAAM87AABmPACAbDwAQIY8AABlvAAAtbsAAM+8AIB8vQDAfb0AwOW8ACCovQAA2DoAUMI9AOBUvQAAoLkAAI49AKAqvQCABb0AAOW7AKC7PQDgUD0AwJa8AIBHvQDA0rwA4FW9AGA0vQAwoz0AgFc9AIAIvQAAGDsAYBe9AEAMPQCQqT0AADy9AECsPACAsTwAQBc9AADvuwBwu70AQKu8AIDNPAAgkb0AAE68AABRPQAgCD0AAGi8AACWvACgWj0AAKA8AIBvPQAAaLsAgHg9AFCTvQAAGTwAAAA5AADJPQBAHD0AwA89AOANPQCAED0AAFU8AGDovQAAwDwACBS+AEDqPAAAC70AgDU8AIA5PADgCb0AAMA4AIAlvQDgAb0AQO88AAB2PADgED0AIHo9AIArPADAhb0AoL09AIDXvAAATjsAwPG8AAAHPACAvjwAgAm8ACA4vQAABb0A4DO9AGA6PQAAPrwAgFG9AKAVPQDAPr0AQJg8AECUvQDgGr0AgG+8AAClPAAAwzsAAKu7AACrOwBQgb0AADq9AECWPAAAsLsAYAm9AGAPPQAAIr0AYBM9AEA3vQAA4rsAYFY9AKBkvQDAfD0AgNS8AABYvACAOrwAQMM8AKAKPQDAhL0AAHY7AADCOwDgJT0AQNg8AAAWvABAkbwAAEk8AAAEPADAobwAQNy8AMAmPQCAMr0AAGC9AID+PACARDwAEJQ9AKBPvQCAETwA4JC9AAD1uwDg1L0AAGi7AMBDPQCAk7wAwGW9AOAdvQCAYjwAIDk9AAB4PAAAS7wAIAq9AIDIPACgPT0AQJ89AICCPQBwjL0AAI68AICIPAAArLwAAPC6AIDCPAAgWz0=","chunkHash":"8cb7d06d6509e41b32844d93c6481a830880fb67299c269ac410ad733af389f1"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n        # Get samples from texture dataloaders\n        lowres_texture_batch = next(iter(lowres_texture_dataloader))\n        highres_texture_batch = next(iter(highres_texture_dataloader))\n        \n        # Extract texture data\n        if isinstance(lowres_texture_batch, (list, tuple)):\n            lowres_texture = lowres_texture_batch[0][0].cpu().numpy()  # [C, D, H, W]\n        else:\n            lowres_texture = lowres_texture_batch[0].cpu().numpy()  # [C, D, H, W]\n            \n        if isinstance(highres_texture_batch, (list, tuple)):\n            highres_texture = highres_texture_batch[0][0].cpu().numpy()  # [C, D, H, W]\n        else:\n            highres_texture = highres_texture_batch[0].cpu().numpy()  # [C, D, H, W]\n        \n        print(f\"Texture lowres shape: {lowres_texture.shape}\")\n        print(f\"Texture highres shape: {highres_texture.shape}\")\n        #...\n```","range":{"startLineNumber":339,"startColumn":0,"endLineNumber":356,"endColumn":0},"embedding":"AIAqvACAhTwA8KY9AEAevQBA9rwAAGo8AABwOwCAebwAoAG9AEDQPAAAwLgAAHw8AHClvQBAYj0AgHG8AGACPQAAIDoAQDs9ABCFvQCAkLwA0JQ9ABCgvQAArDsAACw8AAAgPQAAULwAAKC6AADkvACwlT0AQIC8AEDlvADAKL0AcKa9AAAuvQBAu70AoAm9AAD/uwCwmz0AAA49AACBvQDQsT0AQNy8AKA6vQAAjbwAALW7AAB9PAAAMrsAAFq7AMCQPQDgJD0AIEu9AMBTPQAAnLoAAPw7APCOvQBgGD0AQK28AMDWvAAAgbwAYHe9AKAsPQAAAAAAAMY8AIBbPABgVr0AgMY8AACkOwCAX70AAD09AMAyPQBAUr0AALu7AIDVPAAAiL0AYFo9AAB+OwAAibsAYLE9AIAZvABA6bwAgHy8AEC/PABwhj0AANU7AIDiPADQrb0AYDe9AMDmPACAGzwAAFm8AADuOwDwmD0AQLo8AOByPQAAaDwAwLC8AADGPACAJL0AoGo9AKBaPQBAqjwAQEU9AGAFvQAAjTsAwLU8AECxvAAAYrsAwJA8AIAuPACAPT0AgBU8ALCevQBAmTwAoCM9AKB5PQCARr0AIGi9AIDBvAAAvjsAAOy7AGCevQAAlLoAwLo8AKBGvQCAqTwAgCS8AJCYPQCgHL0AAI+7AEDdPACgWD0AwMM8AACwugCAsbwAgDU8AHCGvQAANTwAgL+8AOBcPQBwpj0AAGy8AIBIPADAJr0AgD09AADQuQCgnT0A4JO9AMB4PQAAbDwA4MU9AIC/vADABz0AACo7AGB5vQAADDwAwL+9AEBnPQBA6jwAADA6AAA6PACArb0AgBW8AFCfPQAA7jsA4Iy9AABwvQBA0rwAgBW8AACmvQCAKL0AAAI7AIB8PQBAPD0AIKy9AIBBPQAAj7wAICO9AMC6PAAgFr0AAA+9ACA0vQCgUL0AAIg7AACgvAAgBL0A4Lu9AKAMPQBAJT0AAHu9AOBZPQAAwLgA8JY9ACAfvQAAITwAgDo8ACB1vQCwlD0AAKM8AICLPACAxTwA4Ay9AIBjPADA0TwAgKY8AADduwDA7bwAgNk8AKBivQAA0LoAAB89AABQOgCgMT0AgF28AADKPACAl7wAgAu8AGAPPQDQnT0AAMm7AIC/PAAA4bwAAPy7ABCUPQBARz0AwLs8AIDrvABAtzwAgHm8AOAmPQAAKj0AAG88AABGuwAAGDsAgOw8ACCYPQBQh70AAD28AEC5vAAAg7sAgH28AIAvvQAAnDoAAPi7ACB1vQAADDsAAAA6AIBJvAAwur0AQC49ACAIvQCwu70AwOO8AGBqvQC4Cr4AAEO8AKASvQAArzwAQFu9AJCrvQAA4zwA4HI9AMC0PAAQrb0AgL88ACBJPQDAzTwAAPA8AMDdPAAQmL0AQNa8AKAVPQBAWz0A4Eg9AMAcvQAAmTwAwL08AJCIPQCAgjwAwCk9AMBfPQAAQ70AgEi8AIBOPQBwhz0AAAA9ABC6vQCAbLwAAHK8AABtvACAubwAQCw9AKBMvQCQir0A0Iq9AEDOvABA0rwAgFa9AADguwCAvrwAYO29AACFuwDAVb0AAAg6AAB4OgBAmLwAgGM8AEDpPAAAOj0AQJK8ACBYPQCAezwAAK27AABuuwBAnTwAgKo8AAAyvQBQhz0AwJa8AMCXPQCAQb0AALi7AFAOvgAAhLoAgK48AEDQvAAAdTwAAG+9AICDvACAaLwAgD+8AIBavQAADb0AgNw8AABQvQAAgLoAgAk9AACEvQCQrj0AgPy8ACBRPQDwj70AoA+9AIAavAAANLwAwGE9AICsPACgBz0AoM09AMAZPQCAHj0AAGg8AACAvACAUTwAgB69ACA2vQBAhzwAAGK8AEBuvQBgbL0AwKq8AJDovQAAX7wAUPI9AAD5uwCAGLwA8I89AECZvABAQT0AQA49AEBuPQBgaD0AAG47ACC1vQBAET0AoIa9AKBKvQBwhD0AQJU9AOAKvQDAIj0AwJq8AIBtPQBA4T0AUIm9AADCOwAALjwAAGA8AACtvACwpL0AYA+9AACwPACQi70AgJ68AAAzPQDAhz0AAOA7AMCIPABAcj0AAPQ6AKBaPQCAyzwAoFU9APCAvQCAU70AAPY7ABC9PQAAQTwAgNI8AHCOPQBARz0AICY9AJCbvQDAhjwA8PC9AACwOQBAKL0AAN+7AAD7OwDAQr0AAK07AICBvQDgeT0AAN27AOAbPQBAOD0AoDE9AMCVPACADL0AAAA4AADWOwCAkrwAAJI7AIBlPACAOLwAwNS8AECDvACADL0AQPC8AAB4PABAJ70AIGu9AECJPAAAY70AACq8AMBDvQAATbwAQIW8AICHPACAA7wAAEg6AIC0PACACL0AAHC6AACCPACAQzwAIDS9AEAlPQCAibwA4Hk9AAC+vACA5zwAwL08AEDQvABAQD0AAAK8ACArPQDAAT0AgNI8AABZPADQhr0AAKs7AACqPAAgUT0AgN88AMCiPADA87wAAC47AACgOwAgDL0AADi6ACAmPQAgIr0A4JK9AOAQPQBgNj0AUL89ACCLvQAATTwAYC29AAAAAAAw0L0AACG8ADCWPQAAlLwAwNy8AIABvQDgOz0AoDg9AIDoPABAgrwAADa7AACTuwAQkD0A0Kc9AABPPQAAlL0AwI+8AAC6uwDAh70AYAM9AGAdPQCgvT0=","chunkHash":"810572f45c98101b0db5df5e49cfe9d25c326a6f901262a89ec5b0df84bd925f"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n        # Create figure for texture data\n        fig, axes = plt.subplots(1, 2, figsize=(12, 6))\n        \n        # Show middle slices\n        lowres_texture_mid = lowres_texture[0, lowres_texture.shape[1]//2] if lowres_texture.ndim > 3 else lowres_texture[lowres_texture.shape[0]//2]\n        highres_texture_mid = highres_texture[0, highres_texture.shape[1]//2] if highres_texture.ndim > 3 else highres_texture[highres_texture.shape[0]//2]\n        \n        axes[0].imshow(lowres_texture_mid, cmap='gray')\n        axes[0].set_title(f\"Lowres Texture\\nShape: {lowres_texture.shape}\")\n        \n        axes[1].imshow(highres_texture_mid, cmap='gray')\n        axes[1].set_title(f\"Highres Texture\\nShape: {highres_texture.shape}\")\n        \n        # Save texture figure\n        texture_output_path = f\"visualizations/texture_comparison_{sample_id}.png\"\n        #...\n```","range":{"startLineNumber":357,"startColumn":0,"endLineNumber":372,"endColumn":0},"embedding":"AADguQCAVTwAAFA9AOCEvQAAT70AABQ9AKAHPQCAXrwAQJq8AAC/OwBAnjwAwMo8AKCEvQAA7DsAAEi8AAAwPQAAjrwAIBs9AOBkvQAAqDwA4E49ADC3vQDAtTwAgIk8AIBHPAAAiTwAAL67AIBCvACggj0AwNs8AEDWvABAHL0AIK69AGAgvQBAvr0AADG8AABmuwDgSz0AAOI8ANCivQCwsz0AwIu8AMDhvAAAlDoAgCo8AMDOPAAAxTsAAI27AADHPQAAljwAgDm8AMD9PAAAvDsAwJq8AOB1vQDgEz0AgMe8AECTvACAHLwAoFy9AMBwPQAACLwAAJc8AAAUuwDgGr0AwLA8AIAfvACgHL0AQGw9AMDiPADQi70AgJE8AAB0OwBAvbwAgLc8AMCfPAAAZLwA0M09AACgOwBws70AgJ28AIDhPAAgqT0AAB49AIAgPAAAvL0AMJC9AAAzPQAAALgAAMQ6AACguQBQgD0AALC5AAAgPQAAVzwAgEa8AIB2vADAy7wAAH09ACBWPQDAhzwAQEw9AMBEvQAAI7wAgCg9AEDavABAEz0AADA9AMCMPAAAWT0AIIg9AFDSvQBABz0AwOg8AIApPQBQjL0AoE29AAAFvQAApzwAwJ28AKB8vQCAAL0AQP08AMDpvACAjDwAQIW8AABNPQDAEb0AgJY8AADHPABgXj0AAOQ7AEDzPAAAhbwAADq7AAAcvQAA/TsAAHu8AICMPACgvz0AAB+8AEC1PAAA8bwAICU9AECyPADQyD0AcLS9ANCqPQAA/bsAkN89AADtuwCABD0AgOk8AOBBvQDAibwA8Je9ACBzPQDAFz0AAD67AABkuwCAb70AQIe8AGCYPQAAxbwA4Ka9AADUugDA5rwAwNC8ANCfvQCAIb0AwK+8AIAqPQAAeD0AYJq9AGB5PQCAyLwAACu9AECCPABgIb0AgAS8AAA0vQAAjr0AACi6AOAVPQDgKL0AEI+9AIBEPQCA1DwAIAi9AAAbPQAANDwAEIA9AKBrvQCAJ7wAgE48AMCDvQCQmz0AwL88AIALPAAgfT0A4C69ACAkPQCAYDwAoBo9AADxuwAA2zsAABQ7ANCavQDAy7wAYH09AAD9uwBAKD0AAHg7AACYuwAAAAAA4Du9AIAjPABgfz0AgFO8AEC6PACgGr0AAC28ANCfPQBACD0AgJw9AMCJvACABD0AgIO8AAAIPQBgRT0AwLc8AADKOwAAsDoAYCI9AMDmPADgj70AANg6AIAyvABAtTwAAF48AKAlvQAAujsAwAu9AKCTvQAAYTwAAJA7ACAWvQDwv70AwME8AEDCvADwyL0AAJq8AGA7vQCQ9L0AAMy6AKAxvQAACDsAQPq8AOC2vQAAOjwAYIE9AECyPAAAnr0AYAY9AMAuPQDgAz0AwI48AABJPQBAeb0AAJG8AOAsPQDAST0AQH09AECavACA/TwAgOI8ACCmPQCAET0AwL88AGBwPQCA07wAABY8AGABPQDwnD0A4AM9AMBcvQDAA70AIAS9AIAIvABA6rwAYBI9AABIvQAgT70AIGy9AMDXvAAAtLsAAAW9AECsvABAA70AKAC+AABSvABARb0AgKW8AIByPACAULwAAPA8AIC5PAAgMz0AAHY8AKBBPQCACjwAQGa9AAD6PAAAbTwAAEY9AKAOvQAgqz0AgC08ACB7PQCAMr0AAJS7AFgcvgCAxTwAQAE9AICtvADA3TwAsI29AAAAvQAAY7wAAFs8AICmvADATL0AgGI8AEC0vACAQD0A4CI9AABFvQDg8j0AYHS9ALCPPQCgmb0AoBi9AKAxvQCAeLwAQDQ9AABGuwCgCD0AkNQ9AIBzPQAAejsAAII7AABougAADLsAANq7AMCPvABAijwAgEK9AJDBvQCgab0AgIm8ACDivQAAzLoA8Jw9AIAFvQAAjbwAAE09AMCCvAAAqzwAgEE8ALCwPQCATj0AgI08AGCtvQBAxzwAgIK9AMBRvQAQhD0AAHo9AGB3vQAAZDsA4Fy9AOBwPQAwpD0AQI69AAA9vACAZbwAgM88AADRuwDwob0AwIy8AOAAPQCgbr0AAEI7AMBRPQAAbj0AAGY7AAB7PADwgj0AgBQ8AMAoPQCADjwAAHU9AJCZvQBAyrwAgEm8AKDFPQAAszwAAFM8AABrPACAiT0AgK48AHCevQBAhzwAQNG9AADVOwDA9LwAAFc8AIAIvACgVL0AgLC8AMDxvABA2zwAQNw8AIBrvAAgfD0AIDQ9AMCYPABAE70AMIk9AADouwAACzwAQLm8AADoOwAAN7wAQBy9AIAhvQAgJL0AQCa9AIDYPAAASL0AwCS9AMAVPQAgP70AYAm9ACBPvQAgA70AAMg6AAAmuwBAlrwAABY8AADmuwBA0rwAwBW9AGAIPQAAAzwAwKK8AKArPQAAGb0AoEk9AABRPADAxjwAgIM8AGAnvQBwqz0AAJK7AABRPADA6DwAAKM8AAB7PABwqb0AgGq8AAAWvADggT0AgC08AABiuwCAN7wAAOk7AEDuvAAAKL0AAAA5AOBWPQBAM70AgA29AOBCPQAATzwAwJs9AGBMvQAACDoAgGW9AIAAvAAgsb0AgJC8AIAwPQDAmLwAgKa8AKBxvQDAND0AYBE9AAAiPABAwbwAwJc8AEBOPQDAgD0AgGU9AFCxPQBwm70AgJG8AIA/PABACb0AwCs9AIBAPQDART0=","chunkHash":"9de370f8af330633db5780c7865c10ad4443dafe769a77d0b2c8a9859a3dd53d"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\n#...\ndef main():\n    #...\n        plt.tight_layout()\n        plt.savefig(texture_output_path)\n        print(f\"Texture comparison saved to {texture_output_path}\")\n    \n    print(\"\\nVerification complete!\")\n#...\n```","range":{"startLineNumber":372,"startColumn":0,"endLineNumber":376,"endColumn":37},"embedding":"AADpuwCgHz0AAF08AOBcvQBgfb0AYA09ACCSPQAA5LsAAIi7AIB0vACAJrwAgBg9ACDAvQAAHjsAAP27AOCCPQAAzrwAgAo9AABEvQAArDwAICw9ALCFvQCgFD0AAFc8AMDzPACA/bwAANe7AMAsvQBAfT0AAOa7APCCvQDgc70AEK+9AGAwvQAAsb0AAKs8AICfPADgEz0AABC7AOCVvQDQuj0AwMy8AAAAOgAAijsAAFO8AMCvPACAELwAgEw8AIClPQAAzDwAgCK8AABOuwAAyTsAgDG8ADCSvQDAxzwAAOC6AACwvAAADrwA4JW9AKBpPQAAzzsAgFw8AABAOgDANr0AABI8AAAwOwCAD70AwFc9AGAOPQCA9rwAwJ48AADgOgBA3bwAAMQ7AIBavACAADwAMMs9AKA4PQDQtL0AAG68AADgPABAnT0AgOA8AACAuABg2r0AUIK9AMCvPACAgrwAwC89AGArPQAQzD0AAKk7AGBOPQAAtTwAgHw8ACBIvQAA9rwAgK08AGChPQBgQz0AIDk9AKCIvQDA5LwAQCI9AAC7OwAA2zsAgMM8AAAAuADQkT0AgBE9AOBjvQAAJLsAADw9AEBaPQBgmL0AAEe8AECFvAAA6jsAgGK9AKA3vQCA2bwAAOS7AABavQCASDwAAFw7AECqPADA3LwAAKw8AMA8PQCADTwAwLU8AMCVPACANrwAQCE9AHCQvQCAELwAgC28AMCYPAAw0T0AAAg7AAAwOwCgIL0AQIk9AICMPACgcD0A0KG9ABCXPQAAhbwAQJM9AABOOwDgJz0AgM88AIAivQAAdLsAoHa9AMBHPQAAFT0AgOC8AACpPABAjr0AoA29ACCKPQDgM70A0IW9AED3vAAApjsAgPy8AOBFvQAgGb0AAEA8AIByPQDwiT0AYJO9AMBRPQAA4LoAAMQ6AADIPACAH70AAOK7AICrvABgWb0AgHK8AABtPABAqrwA0I69AGB4PQAgDD0AIBa9AMAZPQAA0DsAgDA9AKCBvQDgA70AAGS8ACBzvQCAaj0AAKK8AACOuwDwhj0AAFS9AIC6PAAA+zwA0I09AADLuwCgGb0AwNK8AABNvQDAP70AQDk9AIAnvABgND0AAN67AACYuwAAsrsAIEC9ACATPQAAgT0AQP+8AAA8PABA6bwAwKi8AOBlPQBA2TwAwII9AMDFvABANj0AoA29AAAnPQBAvjwAgJ08AMCUPABgAL0AwCk9AABmPQDArr0A4BE9AAD/OwAAs7sAABg6AKAWvQDABD0AIAO9AOCtvQCAtTwAAEQ8AAAcOwBwn70AAHO8AACCOwAAqL0AgMo8AIAqvQDADr4AAKc8AMDZvAAAjLsAgL+8AICuvQCA1zwAIGI9AID8PACgtL0AwJI8AGA9PQDgGz0A4DM9AOBvPQAA77wAgJC8AMBGPQDgHj0AAME9AIAfvAAAEDoAAMs8AKBfPQCA+zwAYDo9AGA+PQDAi7wAgMs8AOAePQCwuT0AgEQ9ANCBvQDAorwAQKq8AABCvAAA7DsAgFw8AGAGvQDgCL0AAEu8AIBmvAAAODwAAAA4AIB/PABALL0A4MW9AIBivACQor0AAEA6AIBpPADgOL0AAL48AICVPACAfTwAwJk8AGBRPQBA4bwA4Fi9AABzPAAAojwAMJs9AMCovAAAFj0A4DE9AKBlPQBglb0AwAk9AOAGvgDgWT0AAOc7AGA2vQBAwjwAAEi9AECdvADAhrwAADA9AADCvABgU70AgH08AICKvACgaz0AUIo9AMA3vQDw1j0AoEC9AJCVPQAAsb0AgPq8AMAEvQAAq7wAIFg9AEC0vABATz0AoNQ9ABC4PQCANDwAAFC8AADGuwAAVDsAgGu8AKAwvQCA5zwAIEO9AKBsvQCAR70AwM28AKDLvQAArrsA0L09AOAZvQAAqLwAwIc9AADpvADAobwAABg8AIDQPQCA/TwAgF88APCBvQAAKjwAAFe9AMBMvQAAaz0AAG09APClvQAA1rsAgFa9AHCHPQCwmD0AIAy9AADXOwAApLoAwI08AACQOgCwhb0AgA68AMD0PACQnb0AwBS9AGACPQAgGD0AACQ7AECTPACQjT0AgCk8AICXPQBA/TwA4Bk9ACBvvQCAP7wAAM67AODhPQCAVjwAADQ7AECrPABQmj0AQBM9AECivQAAoTsAAPu9AAAAugAwg70AACC5AACouwBgMb0AIBu9AMCLvAAgPj0AwDc9AIBOPABgLD0AwEQ9AIA+PACgU70AwJo9AIBvvAAAqTwAABa9AADROwCAwzwAYBW9AEALvQAAQr0AALC7ACATPQAAuLwA4Jq9AACYPADgFb0AQJS8AGASvQCAVbwAAIm7AAC+uwCAu7wAAOS6AEAMvQBAgr0AwCG9AICZPACAdLwAALi6AKArPQBAVb0AUII9AAB4PACAtjwAAOk7AEC8vADQiz0AAGK7AAADPADgST0AIDM9AADwOwCgt70AAOO8AIDSvAAgZj0AgGQ8AECmvAAA/DoAADk8AAAbvAAAh70AwOW8ACB5PQAAMjsAAMm8AOABPQAAkDsAsLE9ACCNvQAAMDoAcKO9AADUuwDAS70AgCw8AMAsPQDAh7wAACe8AGBTvQBgMz0AQHI9AMCuPABgKL0AAMS7AIChPQBgSz0AoHw9ADCNPQAAXb0AgLi8AIAAPAAAybsAAOo7AAAAugBgBD0=","chunkHash":"e99042eef3efc8afc0feeec07fe87e1b0be86a7eeda52114634aae3244b3c051"},{"text":"File: `scripts/temp/verify_downsampling.py`\n```python\nimport os\nimport sys\nimport argparse\nimport numpy as np\nimport torch\nimport matplotlib.pyplot as plt\nfrom pathlib import Path\n\n# Add parent directory to path for imports\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n# Import dataloaders\nfrom dataloader.lowres_image_dataloader import get_lowres_image_dataloader, LowResImageDataset\nfrom dataloader.highres_image_dataloader import get_highres_image_dataloader\nfrom dataloader.lowres_texture_adapter import get_morphofeatures_texture_dataloader as get_lowres_texture_dataloader\nfrom dataloader.highres_texture_adapter import get_morphofeatures_highres_texture_dataloader as get_highres_texture_dataloader\n\ndef parse_args():\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":380,"endColumn":0},"embedding":"AAAAvQAAsDwAwIE9AICmvQAAWLwAgCY9AAA4OwDgBr0AQJy8AMBiPQDA5jwAgOg8AIBbvQDA+DwAAGQ8AOAKPQCAfrwAAG49AAC3vQAgNz0AQF49AADXuwCAHj0AgCu9AADkOwAAxrwAgFY8AIB2PABwsz0AADC6AMDHvACgFb0A0P+9AMCgPACwtb0AIAS9AIB6PAAAVLsAAMA8AIDsvAAQ5T0AALe9AIDKvAAAGDwAAEy8AAAgPAAATjwAIDC9AKDMPQAAcLoAYCS9AICRPAAALT0AoCE9AGBKvQDARD0AAM47AAA2uwAAjzwAABi9AADSPAAwjr0AAF88AMDPPAAA+bwAAGY7AIBCvQCQjb0AoGk9ACBVPQBAML0AgBw9AACkPAAAtb0AIFY9AADmOwCAurwAMAA+AIC/PABAPr0AQNI8AFCBPQAAjj0AQM08AAAVPABQsL0AgKS9AMARPQAAQrwAwPe8AMDtPADgHD0AAGY8ACA6PQBAHz0AAEQ8AADjuwDgMb0AgMk9AMDGPADgST0AwAc9AOBrvQAABjwAwEE9AIAyPAAAgDsAAOa7AMDqPADAsj0AgD48AIDmvAAADjwAwBc9ACADPQAAdL0AAPa7AAAsuwBA3DwAgKi8AKBJvQDA+LwAQPE8AADHuwAATT0AgHQ8ACBBPQAArDoAwJS8AABEOwAA1TsAwLY8AGBoPQCA3LwAAJA5AMCPvQAA4LsAUJa9AIAVPABQ6T0AgBO8AECRPABgUr0AQGU9AECWvACATT0A4FO9APDFPQAA6LwA4NU9AAD2OwCAvTwAANY7AEDzvABAjjwAAF29AIBxPACQnj0AQOM8AACUugAAB70AgPk8AMCXPADAuTwAgLm8AAAuOwAA8rsAACK8ABCPvQBQh70AwIy8AAAsPQAAdD0AYFW9AJCZPQCAGrwAIG69AID0PACAk7wA4Ci9AMCOvQDwkL0AAPS7AMBIvQBgpr0AYGK9AMDgPACAbz0AgG+8AMCPPQDgWj0AgHc9AABvvQAAdLsAwJ48ACAlvQCQmj0AAME7AIAovACgFj0AwLq8AOAwPQCwtz0AQLU8AICjPABABL0AQCa9ACCBvQCAgjwAAM27AABXPAAAmzsAgJ+8AECbPQAArbsA4Au9AEC5vACgqD0AAJ67AEC3PAAA7jwAIDq9ALCOPQAAKrsAQFQ9AKAevQCAwDwAwAe9ACAlPQCgQj0AgIu8AADKPAAAgrwAIH89AOA1PQAwkr0AgHO8AIDavAAAuDoAACK7AIC5vACAIj0AwLS8ABCtvQCARrwAQJg8AMC3vADgbr0AABQ8AAAKPACA2rwAQDe9AEDUvAAIAL4A4A+9AAAXvQCAWzwA8JC9AEDDvQCA8TwAoF49AABYOgDgF70AgGM8AGBiPQAAJzwAAKg6AIAIPQDA5bwAwLK8AKBzPQAAiz0A4Dc9AGA6vQDACL0AIAQ9AMCFPQDAmDwA4A09AAC9OwDgDb0AoAU9AMBGPQBAnT0AABi8ACA8vQAARLsAAC28AMD5vACAbLwAAHi7AOBqvQBANL0AYEu9AEDMvAAgYL0AALQ7AIBQPACAJzwAoOm9AAAIPACAjbwAAE+8AMBQvQCAArwAAAK8AAAvPADwgj0AACe8AMDaPAAAkLkAwLG8AABsPAAA/jsAgMg8AMAXvQBggz0AAK+8AHC5PQAgN70AQIW9APDkvQDAlLwAQAQ9ACBWvQCAGz0AAHq8AAAwuwCAEjwAwDQ9AIC6vAAAmr0AkIk9AICfPAAAMT0AoCA9APCivQBAuj0AQCi9AOAMPQAwqL0AAGy9AIBhvAAAybwAANw8AEATPQBgQT0AIJ09AHCUPQCgEz0AwI68AKAFPQDAjLwAAES8AMArvQAAwjwAAMq8ACBWvQBAYb0AAAy8AJCfvQAA3zsAQIo9AECRvACAMTwAwOw8AAAPvQDAhbwAwNm8AFCwPQAQpT0AwC+9AMA2vQAAOTwAILq9AIDXvAAA0LoAgME8AADjuwBAKj0AABe9AIC5vAAA4TwAIAa9AADKuwAAWjwAgC49ACAivQBgXr0AAIK7AEA1PQBgKL0AADO8AIBDPQAA/DwAABY7AAAGOwBAij0AAGE8AGBKPQAASzwAYBU9AGAuvQAAyDoAwDk9ADDOPQAwiT0AIEs9AACmPAAADjwAQKQ8AODUvQDACj0AoK69AIBgPQCgNr0AgH68AADpOwDAR70AgPA8AOAOvQBA1zwAAOM7AACVOwCAdbwAQH09AKBKPQDAb70AIB49AEAwvQBAlbwAQIa9AIAqPAAAXTwAAIO8AIDTvABAi7wA4BA9AIAFPQAApLsAwCG9AGAbPQDQjr0AAF47ACBtvQCATr0AgGy8AOAFPQAAJrsAAMw6AIAqPADQob0AgDA8AIA9vAAA4jsAEKq9AID7PACgab0A4Ck9AACSvABgCD0AANE8AEDkvADATj0AQK08AIA8PAAAA7wAgA+8AIBsPAAA7LwAoA89AEC5PAAALjsA8Ik9AECsvABACL0AAKg8AMCVvAAgWb0AYHu9ADCJPQAAbbwAwPO8AMD0PABgNz0A0OA9AGBwvQAAfT0AwLy8AIBCvACA4r0AgA88ACCaPQCAiLwAYEK9AMAzvQAAqrsAIH49AACbvAAAobsAAPy6AIAnPABARj0AAFc9ACCXPQDgRr0AoDO9AABJvAAAb7wAgGE8AAAOuwBgwD0=","chunkHash":"d0076adb5cfd44e94ece1812d9f78736259f81c831233f726e417e46debfce7b"}]},"file:///teamspace/studios/this_studio/scripts/temp/visualize_highres_samples.py":{"hash":"c612a6d8494bbfc2e08737f9c4ae114584415951d4310203882251fe9f5aa35d","entries":[{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_highres_cubes(batch, output_path=None, show=True):\n    \"\"\"\n    Visualize a batch of highres 32³ cubes (contrastive pairs).\n    \n    Args:\n        batch: Batch from the highres texture dataloader, containing 'view1' and 'view2'\n        output_path: Path to save the visualization (optional)\n        show: Whether to show the plot\n    \"\"\"\n    # Get views from batch\n    view1 = batch[0]  # [B, 1, Z, H, W]\n    view2 = batch[1]  # [B, 1, Z, H, W]\n    \n    batch_size = view1.shape[0]\n    \n    # Create figure for visualizing several pairs\n    fig = plt.figure(figsize=(12, 4 * min(batch_size, 4)))\n    \n    # Show only up to 4 pairs to avoid overcrowding\n    for b in range(min(batch_size, 4)):\n        # Get the mid-slice for each view\n        #...\n```","range":{"startLineNumber":14,"startColumn":0,"endLineNumber":34,"endColumn":0},"embedding":"AMCePAAAU70AoEo9AACuuwDgcL0AQF29AAD9OwAAF70A4IC9AADNvACgAz0AwIw8AMBHPQBQhr0AAP67AOCKPQCgbL0AwGw9AIDcvACATrwAwNW8AIBjvQDgMT0AAJk7AOBhvQAgVj0AAPI8AECZPABAbz0AgK48AKBGvQBAiLwAQBq9AICfvQBg370AQOK8AAAmvQCwrz0AwI48AACLPAAQjz0AYBW9AADsPAAA3TsAsJY9AABbPQDAaj0AIC+9AMC0PABAMj0AgBo8AOD7PQAAersAgCS9AABdvABA37wAAHO9AAC+vABA+TwAwBm9APCjPQCAPrwAgNY8AOAvPQBAprwAAPI8AIAHvAAApLwAAII8AICOvACAn7wAQLM8AGABvQAA4rsAIAS9AAAovADAnrwAAA88ACAzvQAwp70AgMm8AIATvABATD0AgMA8AMD1vABwlL0AACS7AADdvABAmjwA4F+9AAB4OgBAqT0AoIW9AAAeOwBgEL0AgFo9AIBCPQAwgL0AAJc8AABXvACASrwAAN48AGA1vQDAXj0A4A89AKAtPQAAszsAIEI9AAAWPACACD0AAOW7AACPvAAA8DkAQMu8AMCgvADA2LwA4B89AAANvQAA17wAAPk7AMClvQAAPrsAAHg6AAC6vACABb0AAK27AICmPAAAy7wAoFI9AGAUvQDA3TwAgLk8AAAiuwDgZr0AQC+9AOClvQDA8TwAYAc9AABXPAAQnj0A4BM9AKBLPQDgdT0AACu8AAB2uwAwxj0AYJ69AIDDPABAurwAIDY9AGBTvQAATj0AYCw9AMDmvQDAq7wAYL69AICiPAAAjzwAAJU7ACAOvQBA9LwAAGq9AEBbPQAgJj0AANC8AIDiPABQpb0AwF89AKCYvQCAVr0AwMU8AADVPAAA+jsA0K+9AHC6PQDAXT0AoH+9AOCJvQBge70AALW7AIApvAAAgDsAALY8AIBFvAAAsrwAoAq9AAB4PABA4LwAgPW8AMCtPADAnrwAYCM9AOBtvQAQjD0AQOc8ACC7vQAwmT0AANM7AKAcvQCgGr0AIGK9ALCOPQDAtbwAADC6AACLPAAQvr0AwKI8AAAbPAAAM70AAEg8AEANvQBwmT0A4Bg9AICFvADgS70AoCy9AAChvADAkz0AgCi8AIAaPQAwrb0AAJk8AAD0uwCgPz0AAB89AMA3PQAA0bwAIG+9AKDAPQDAGD0AgHO8ACBFvQAARLwAgJ09AIBxvAAAALkAAKg7AAAvvAAAA7wAQFy9AMDQvAAAwLgAwKE8AEDLvADgTz0AgC68AECcvQCwqL0AoCS9AEDpvAAAlrsAgEo8ACBJvQBw9L0AAGC8AAAwPACgKr0AgP+8AKASvQBAj7wAwNs8AACPuwAAL70AAOK8AABguwDAfj0AwAs9AAAAugAwrb0AgAS8AIBLPQBA3DwAAK09AACIugAAWrsAgC09AACUPADA5LwAAPQ6AMDXPADAAL0AAKe8AMCkPAAAIz0AAD88AICuvAAwwL0AQKA8AIDDvACAJ70AQBM9AMD2vADAfL0AAAe9ACBBvQCgUT0AICO9AMCNPACA3TwAAHO9AHCJvQAAFb0AAHg8AED+PQBAqLwAAIk7AABBPABgfD0AAAU9AEBEPQAgMb0AQHe9AACQPADACT0AQBG9AKCOvQBA9DwAYAk9AECTPAAAIDkAAMY8AAChvQBABD0AQHA9AMC7vAAAWrwA0Mi9AOAmvQAA0TwAcIm9AIBYvADgHL0AAGm8AMCkPACACrwAgAi9AMC8PAAgUj0AAJ08AOBHPQBwur0AAEC8AADHvQBAxLwAAGo9AECQPQAgvD0AYFY9AAC0PABQn70AABa8AIBqvQCAu7wAwPc8AID5PABAy7wAAEG9AEB3vQCAIr0AAOE8AGBxvQDgND0AsN09AIAvvABAzzwAAPk8AIC8vAAAlD0AQGs9AIArPACALT0AgBu8ADCCvQAAg7wAUKy9AMB/vQBQxj0AYA49ACAzvQCA8rwAgHy9AICzPACADTwAACY7AADNuwAA8rsAAAk9AMCDPAAACr0AgMK8ACAiPQDwl70AAJQ6AAAVPQCAUj0AAHI8AMBcPQAgHj0AQO48ACBrPQDQj70AwKG8AIBavADAp7wAAOi7ACB4PQCAqLwAIAg9AAD5PAAAKLoAACw8AAAtvQDA+7wAwLK9AACuuwDANr0AwBC9AADJOwAgSL0AoOs9AMC8vAAA1TsAgE68AMCrPAAA5jwAIC09AFCKPQBA6bwAQBE9AABYOgAAirsA4Bw9AGAjPQAA3bwA4Au9AACgvABwh70AwDI9AED0PAAgO70AAEo8AEAQvQAgJL0AQEy9AMCOvQCAubwAIBE9AACcOgDAmT0AAKA6ACBePQCAZTwAAMi9AADFPAAAJrsAAA68AECWPAAAujsAAIs8AECkvACAMD0AoCA9AACCvABgnD0AgLk8AAAGPQCAWT0AABA8AADyOwCwib0AYH89AAAWvAAggj0AABC7AGBevQDgZL0AQPq8AIAtvABgkL0AAOA8AKCePQAAyjsAkI69AICEPQAAj7sAAJs9AACMOwBgW70AAIw8ACA8vQAgD70AAHC7AACGuwCAW7wAAMO8AIA0vACApb0AwAg9AIDGPAAAELsAwIE8AOBCvQBgKj0AANI8AAAWPQDA4rwAgBm9AAAWPADA4bwAENk9AADbuwBA9Tw=","chunkHash":"e5c982ceed8a2f45109f7bcbc2df2885c2113bc9e1efab5694177b1423597f89"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_highres_cubes(batch, output_path=None, show=True):\n    #...\n        cube1 = view1[b, 0]  # [Z, H, W]\n        cube2 = view2[b, 0]  # [Z, H, W]\n        \n        z_mid = cube1.shape[0] // 2\n        slice1 = cube1[z_mid].cpu().numpy()\n        slice2 = cube2[z_mid].cpu().numpy()\n        \n        # Normalize for visualization if needed\n        if slice1.max() > 1.0:\n            slice1 = slice1 / 255.0\n        if slice2.max() > 1.0:\n            slice2 = slice2 / 255.0\n            \n        # Convert from [-1, 1] to [0, 1] range if needed\n        if slice1.min() < 0:\n            slice1 = (slice1 + 1) / 2\n        if slice2.min() < 0:\n            slice2 = (slice2 + 1) / 2\n        #...\n```","range":{"startLineNumber":34,"startColumn":0,"endLineNumber":52,"endColumn":0},"embedding":"AAD7OwBgBr0AgBM9AADsOgBARL0AAGe9AABsvACAObwAQJe9AAAGvABATz0AQOw8AABJvACgE70AAJq7ACAMPQBAT70AoHU9AIBhvQAAhLsAAGA5AIBCvQDAVT0AgGu8AIB8vQAAdj0AgB48AABkuwAQpD0AAEU8AADzvACARLwAcIq9ACCavQBgEL4AAA29AEBTvQDgMT0AQC89AADbPACAiz0AoBC9AKAOPQAABrsAcKs9AKAjPQCACDwAUK+9AIAuPQAAeDwAgAk8AADpPQCgAj0AgIE8AKARvQCAmTwAcI+9AECXvAAAZTwAgFS8ALCePQAApDoAwD89AIAXPQAAaLoAAMo8AMCovAAgHb0A4Bk9AACvuwBAQb0AAAo8AAAPvABAsbwAwMS8AABZvABgBr0A4CI9AOBJvQAAXb0AwCi9AIBPvAAAjD0AwM48AACaOwDgaL0AoBS9AMAxvQAAPjsAoGG9AACFvACgpj0AwBW9AADgPACA0LwAQJ89AMBRPQCAHr0A4Ck9AACbvADgTj0AwIM8AAAAvQBAeD0AQB09AMDvPAAAMLsAwAc9AACwuwDgKj0AAD47AAA2vQAAnLwAIBy9AEDHvACA17wAIAY9AACEuwDA0LwAANY8AGCcvQCAHzwAgHK8ACBmvQCA37wAANG7ACA/PQCAj7wAwDM9AACOOwAAVDwAwKI8AIBTPAAgd70AgFi9AHCsvQAA9TwAAG09AIBgvABg3D0AQBc9ACCMPQAAPD0AgDS8AAB6vABA8z0A4LK9AKABPQCAH7wAIE89AID3vAAAkT0AALy6AODovQCAerwAYG+9ACA3PQDACT0AAKO7AOBHvQCAKL0AwNO8AABWuwCAfz0AgLG8AABqOwBghL0AQLU8ACCXvQAAXL0AABK7AABvPAAAmDwA4K29AEDYPQBAND0AYAW9AMA9vQDwnr0AgNA8AMCOvAAAwDsAAI87AABfPACASL0AAPw7AIDBPAAAGrwAwNi8AIBdPAAAiDsAwFY9ABCHvQAwqz0AAE89AOCxvQBAej0AgEw8AOAcvQCASb0AIBK9ACAAPQAAvLoAANg7AABYOwBgwL0AgIs8AAAovAAAOLwAQPY8AEDgvACwsz0AAJQ9AADsOgCAebwAgGq8AIC5vABAvD0AQJK8AKAtPQBAor0AABQ9AAChPABwlD0AQCE9AIANPQCgFb0AwDS9ALDQPQBAUj0AAFa7AABsOwAANDwAoBU9AAALvADAQT0AALA6AOBKvQAAFrsAQJq9AIC2vAAAwrwAAPo7AACsvADAiz0AAMe8AKAMvQCwm70AwBC9AMDyvAAADbwAAMS6AEAPvQAA070AABO8AIADvQAATL0AALu8AAB9vAAAT7wAYA49AEAJvQDgcL0AgMy8AIA/PABAQj0AQK88AIAkPACgbb0AAHq8AABpPQAgST0AQKI9AIALPACAPbwAQEE9AIANPQAArzsAALs7AACIOgBgBb0AADK9AADwOQCAOz0AwIc8AEC1vACgRb0AYEM9AACaOwCwtr0AQAM9AACsOgDAUL0AQLC8AOAjvQDArzwAwJ68AAB4ugAAwDoAAOu8AIC5vAAgIb0AAEI8AIDlPQCA4LwAgDQ8AAAOOwCwuT0AMIA9ACBTPQBA7LwAAAq9AEBuPQCAjTwAAAa9AKBOvQDAMD0AQNQ8AAAnPQAAIb0AAI67ALCavQDA/DwAoFE9AECdvACAZLwAQIS9AEAJvQDgHD0AYL+9AAB4OgDAr7wAgIq8AADTOwAAkrsAYA69AMCePAAACD0AQE+9AMDUPADQtr0AoFC9AFCxvQBAtrwAUIc9AIBJPQDQvD0AAB49AED7PAAAi70AACQ7AGBGvQCgJb0AwOs8AEDfPACAQ7wAABO8ACByvQAAc70AgAs9AMCvvQDgDz0AMOE9AIBcPABAFj0AQOg8AABYOgCAQDwAQLY8AAATPQBAYz0AgAK9AEBzvQDATr0AgJ69ANC8vQCQrz0AIE89AAAyvAAAIrwA4De9AACWOwDgLj0AQJ+8AICtPACAZjwAYBk9AKBiPQAgDr0AAA28AAA8PQAA9rwAwA49AOBIPQAgaD0AAMy7AMBBPQCgJz0AwKM8AAAAPQBAXr0AQJC8AIAfvABA5rwAADm8AMAnPQCAYTwAQIY8AKAePQBAT70AQNI8AKCrvQCAk7wA0Lm9AMCMvACwob0AwKa8AICgvAAAdL0AMM09AIDRvAAA4rwAALS8AOB8PQAAkzsAQCI9AKBmPQBAvbwAYFk9AABvPACAyjwAAB48AABOPACAP7wAgNe8AMCYvACAML0AANg6AABlPQAA+LoAACy8AED/vACQkb0AYCO9AICIvQCgLr0AAIA8AECCvADAbj0AAHC8AIBZPQAgM70AcM+9AEDAPAAAfrwAYBi9AOAdPQBAnbwAADi8AMDDvAAAVzwAgNE8AMDZvABAtz0AALA5AABuOwCADT0AQIW8AIA8vADAlLwAQBs9AIBEvABAoD0AgEY8ACBevQCAN70AAPq8AIAYvADgK70AALM7AOBlPQBA/rwA4Ja9AEB2PQDAoDwAgKE9AABwOgCAar0AwEs9AGBjvQAgVb0AAM47AGBVPQDAhrwAgDe8AMC6vADAz70AQCM9AADqOwCAy7wAQAY9AEDLvABAPD0AQOu8AEAHPQAgAb0AwBm9AAAMOwAAQLwAoN89AIArPADApTw=","chunkHash":"54716445fd1bb8c1f0e9b304b8840bf8c6bbe0a6fa79936d212123d2e6d0ec35"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_highres_cubes(batch, output_path=None, show=True):\n    #...\n        # Plot the slices side by side\n        ax1 = fig.add_subplot(min(batch_size, 4), 2, b * 2 + 1)\n        ax1.imshow(slice1, cmap='gray')\n        ax1.set_title(f\"Pair {b}, View 1\")\n        ax1.axis('off')\n        \n        ax2 = fig.add_subplot(min(batch_size, 4), 2, b * 2 + 2)\n        ax2.imshow(slice2, cmap='gray')\n        ax2.set_title(f\"Pair {b}, View 2\")\n        ax2.axis('off')\n    \n    plt.suptitle(\"Contrastive Pairs for High-Resolution Texture Learning\")\n    plt.tight_layout()\n    \n    # Save if output path provided\n    if output_path:\n        plt.savefig(output_path)\n        print(f\"Visualization saved to {output_path}\")\n    \n    # Show if requested\n    if show:\n        plt.show()\n    else:\n        plt.close()\n#...\n```","range":{"startLineNumber":53,"startColumn":0,"endLineNumber":76,"endColumn":19},"embedding":"AADwOwBwhb0AwOU8AMDGvABgN70A4Ay9AAA4ugCAbrwA8IS9AEDhvAAALz0AgJE8AICBPAAgX70AgKO8AKBhPQBgUb0AkJQ9AIDEvAAA8bsAgK28APCgvQBA6zwAAKy7AMAmvQAANzwAwIw8AIDZPABguD0AQMQ8AMAlvQCAl7wA8Iq9AEBlvQCgwr0AQJC8ACATvQBgeD0AQBA9AMCEPACQjz0AgH+9AABmPADAyjwAwF89AEAbPQCgCj0AYF+9AEDOPAAgWz0AwP48AKDiPQAAsTsAYCK9AKAcvQCAM7wAQFG9AICIvADgAz0AABW9ADCiPQCAErwAwGo9AAAGPAAAdrsAgBw8AMCuvADAHb0AAOo8AIASvACAlLwAACq7AOADvQCAdrwAgCq9AIAdPACAEbwAADo9AIDbvACAo70AAIO8AACUugDwhD0AoAI9AAAquwAgfr0AwKG9AACSvAAApjsAoJ+9AABIOgCQtD0AgBm9AABQOgCAfLwAQIk9AIDXPABgWr0AgDM8AADcOgAAlzwAALQ6AKA9vQBAZj0AYB09AACHPACAITwAQOE8AAAaOwBA7jwAADA6AEBSvQAA9zsAAHS7AAAeuwBgPr0AQAA9AMAivQDgBL0AgH08AICdvQAAILoAABo8AEAdvQBgGb0AACo7AOATPQAgB70AoIY9AIAQvACAETwAAA88AAAVPADgM70AoFO9AEBCvQBA9TwAwIQ9AEDYvAAwpj0AgJw8AGAxPQAgST0AAMA6AECfPACw2D0AEJ69AIAiPQCAW7wAQFw9AADtvABQjD0AQC09AODPvQBAP70AMMy9AMALPQAgHD0AAF68ACA7vQCAsbwAQOi8AED2PACADz0AAJu8AMC4PADAiL0AoB89AKDCvQDAgb0AgAK8AABpPABA2TwAwEm9AODMPQDAvjwAYIi9AABgvQDQmL0AACu8AECOvACAbzwAgAc8AMDPPACAN70AQBO9AEDfPAAA5TsAwLq8AEAxPQAABLwAwDA9AABVvQBAaT0AgLc8ACCvvQBghD0AgPc8AMAnvQCAfrwAgAS9ABCkPQDgEb0AwN88AMC8PAAAzL0AgFG8AADEvAAA07wAgAU9AEAUvQDQlj0AYBo9AABlvABgEr0AwDS9AICpvAAQiz0AABK7AOAuPQCQkL0AAJy7AADYOwDgbz0AgCs9ACA1PQAAjzsAoJG9ALCvPQAAvjsAgIM8AACgOwCAcrwAUIk9AAA0PAAADzwAABs8AEA3vQBAmzwA4Fu9ACA3vQAATbwAgB08ACAPvQDQwD0AgCG8AABMvQDwmr0AwBm9AACRuwAAQLkAQNc8ABCBvQCgAL4AAKy7AAByvACA3rwAYA69AEDFvAAAE70AAL48AABBPACANr0AAGa7AIBKPAAgNj0AAAC6AIANPADwjL0AAEa8AEBNPQBAED0AgJo9AECsPADA07wAAOM8AADKPACAhDwAAGg7AABWPAAAMb0AAPC8AECcPACANz0AYAc9AIACvAAwrL0AACq7ACA0vQAgbb0AABs9AAAtvQAAFL0AgLO8AMAMvQCAXj0AADa8AICyPACArjwAgF69AKAxvQAAO70AAOa7AMDxPQDA0rwAwJs8AIC/PAAwgT0AAIA9AKBIPQBgYL0AYGm9ACB/PQAAMjsAAGe8AKBKvQAAWz0AALY8AIBgPQDA97wAABY8AGDDvQDgUz0AYHw9AADzvAAAzjsAgMK9AIB+vQCAAT0A4HK9AACYvAAgBr0AAL28AAAYPAAA4zsAwMi8AAB0PAAgdz0AwA29AAAcPQDAzr0AYBG9ABDGvQBAr7wAkJU9ADCqPQDAyD0A0IM9AIBqPAAQqL0AACc8AGA2vQCAu7wAoC49AADhOwBgE70AwD69ACCRvQAAorwAYCg9AECAvQCgDz0AoMg9AAAkOwDA3DwAwAc9AACtvAAgQz0AYBQ9AGAWPQCARD0AgAE8AAB1vQDAz7wAcNO9AABcvQCQsD0AIAQ9AEAtvQAABbwAoDe9AMDlPAAgAz0AALC6AEDDPAAAwDsAoCg9AADUOwDAn7wAAKC8AMAjPQAAXr0AADc8AMBwPQCQkT0AgKg8AGBKPQCA+jwAAKo8ACAWPQBgbr0AwOW8AMD+vAAAp7wAANU7AEBfPQCAyjwAADk8AGAVPQAAhrwAQAE9ALCCvQBAirwAoMW9AAAqvACgoL0AYDi9AADIOwBgOr0AcLU9AACWvACAFTwAgMq8ACABPQDA/TwAIE09AICXPQDA2rwAwAI9AADIOwAAuzsAIAg9AABmPABApbwAIAS9AMDmvAAggr0AAN88AIApPQBADr0AAOg6AEAdvQBglL0AoBe9AMB5vQDAB70AAN88AIB5vAAAxzwAgB48AADuPADA/bwAkM69AAA1PQAAADwAgGS8AOAnPQAAILkAgFY8AED6vAAALD0AALQ8AIAavQBAuD0AIBA9AABGOwBgMz0AgLS8AAB2PAAge70AQA49AECsvACAdD0AwI+8AEByvQAAeL0AwL68AEBqvQBglr0AAMc8AICPPQAA+TsAgJq9AKC/PQAARLsAkLU9AAAIvACwhb0AQAk9ACASvQDADL0AAAW8AADMPADAh7wAwOS8AACJuwAQnL0AgNA8AMCyPABATb0AQE49AMCavACgJj0AgIG8ACAuPQDgDL0AwKC8AAD+uwCAlLwAcLU9AACjOwAA1zs=","chunkHash":"3098abc8fc52846cecbf4bf808559df587b48ca7501e2a8a8776d5b422b6dae1"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_cube_grid(cubes, output_path=None, show=True, grid_size=(4, 4)):\n    \"\"\"\n    Visualize a grid of 32³ cubes.\n    \n    Args:\n        cubes: List of cube tensors of shape [1, Z, H, W]\n        output_path: Path to save the visualization (optional)\n        show: Whether to show the plot\n        grid_size: Tuple of (rows, cols) for the grid\n    \"\"\"\n    rows, cols = grid_size\n    max_cubes = rows * cols\n    \n    if len(cubes) < max_cubes:\n        rows = int(np.ceil(len(cubes) / cols))\n    \n    fig = plt.figure(figsize=(cols*3, rows*3))\n    \n    for i, cube in enumerate(cubes[:max_cubes]):\n        # Get the mid-slice\n        cube_data = cube[0]  # [Z, H, W]\n        z_mid = cube_data.shape[0] // 2\n        slice_img = cube_data[z_mid].cpu().numpy()\n        \n        # Normalize for visualization if needed\n        #...\n```","range":{"startLineNumber":79,"startColumn":0,"endLineNumber":103,"endColumn":0},"embedding":"AICUPAAASbwAABw9AACYugCgLr0AQE+9AIB0vAAATrwAQEW9AIChvACA6DwAQJO8AAChPABAJL0AAOs7ACAoPQCgD70AgBO8AIBSvAAAxTsA4AI9AAA5vQBgNz0AQKE8AEDzvAAwhT0AgMc8AGAFPQCAaz0AQLA8AKBGvQAAL7wAwHC9AGDMvQCgrL0AgNq8AMD0vAAAST0AYDg9AEAkPQAQhD0AAB+9AEDpPABA7LwAIMw9AMDoPAAABDwAIFG9AADSOwCAYTwAgDk9AGCjPQDAyLwAAGC8AICnvAAAuLsAwLq9AEDevACAOLwAQNK8AMBePQAAZLsAAPw8AKAsPQCgCj0AgCA9AADCPAAgKL0AQLw8AEDNPADAB70AQJw8AMD7PACAGjwAgEO8AAAIvACgHb0AACK7AABgOwCQpL0AgEm8ACA0vQBAfj0AAKw8AIBYPADgjr0AAAg7AEDWvACAYTwAwLu8AEC9vAAQhT0AQKy9AABvvAAgwL0AYCE9AGATPQAACb0AgAw9AMCPPACA6TwAgLA8APCgvQCgIj0AAEM9AICnPQCAvDwAAEg7AACiPAAALj0AAMS6AACHvAAA4DwAgAS9AAADvQCAaTwA4C09AMDlvAAALLwAADI8ACBsvQDAwbwAAMg6AAC5vABAqjwAgDa8AAAiPABALL0AQN08AAD1PAAAzLoAwKc8AOAKPQDgfr0AwFm9AIBnvAAgTD0AgLg8AIAXPABw2T0AwAE9AMD6PADAez0AAIU7AAC5OwAgtz0AkKS9AMCaPQAAM70AoCo9AECXvACAsT0AYC09AFgMvgCgEL0AYFO9AAAkPQBAhjwAAAA8AEByvQDACr0AYEi9AIBUvAAAZjwAQAu9AEDEPADgfr0AQPg8ACCBvQDgCL0AwLA8AABzvQBgHD0AYJC9AGAOPgDwgD0AgNO8AICMvADACb0AQKw8AOA7vQAA27wAAB+8AACBPACAKb0AIDs9AIBvPABA+LwAYBO9AACoOgAAh7wAIAs9ACCgvQAgJj0AwCw9AKADvQAgZj0AAGC5AOAAvQDA+bwAACq9ACCsPQAADzwAgHa8AOAlPQAgab0AAKw7AABQugCA1bwAAAE8AMCHvAAAlDwAQKE8AAD9OwAgTL0AAOu8AMDHvABgZz0AAOi8AMB8PQAg070AIEY9AEDtPAAAMz0AoGo9ACAZPQDAmL0AAP67ANCbPQCwuz0AgGs8AACkvAAAybsAgFs9AEDHvABAgT0AAD47AIB7vAAA5DwAwAe9AECZPAAA2rwAwJ28AIDevADAnDwAAEc8AMC9vACgs70AQAA9AACTvAAAHrsAAN87AIArvACQwL0AAN68AAAjPAAAKr0AQN68AADduwBgWr0AAHM9AIBRvABwub0AwGq9AIBLPADAiT0AAOY8AAAvPABgjr0AAGA8ANCwPQCAW7wA0KA9AIC9PAAA6TsAYFI9AAC2PAAATLwAgFe8AIBEvACAcrwAgNy8AAA0uwDgXT0AwAU9AACZuwDAFr0A0JA9AABbvABw170AAIA9AGANvQAAO70AQKc8AGB7vQBgOD0AwBe9AAAoPACAfbwAcI29AACzuwBA1bwAAIW7AICOPQAQn70AwEI9AICDvABgkj0AQH89AACQPAAA+bwAgJi8AOAWPQCgPT0AAO67AEBovQCAfz0AICM9ACCLPQAQir0AACg6AECGvQBQqz0AwDo9AADivADAJL0AYCa9AECOvADA27wAUJ29AMCQvACAWrwAAOS8AMCBPADAujwAoAW9AMCvPADAQz0AACe9AIDHPAAAm7wAAAA7AFCfvQDAcL0AoAo9ACDBPQAgiz0AQJ08AKCRPQBARr0AALm7AMBovQAAEL0AgBO8AIB4PACAwzwA4IG9AHCPvQBAnL0AgFo8AMCzvQBAAz0AUOc9AACvPADAvTwAAC49AAD5OwCA9zwAQMU8AKAOPQDAgjwAgAW8ACAovQAQpr0AQKC9AFCYvQBgjj0AgOo8AIBVvACA8bwAAGG9AABVPQAAFTwAgIm8AICfvAAAELsAAFk9ACBZPQAAHr0AADq8AACkPABQpL0AgBo8AABNPQAgvD0AgHK8AHC3PQBAqTwAwOw8AMADPQAAYb0AAK07AABqPACgEL0AAAa7AIDyPADgGj0AoEU9AIBUvABAs70AgC28AKCQvQAAzbwAIHm9AADwuwDgvb0AMJq9AADyuwDgMb0AYMM9AEB/vQBgR70AgCe8AIABvACA7jwAQBg9AMBqPQBA07wAEIo9AACluwAgPj0AQOY8AIA5PAAA9bsAgOG8AABEvQAAF7wAAA88AHCKPQAAo7sAAIo8AACAPAAgDL0AgOG8AAD7uwAAQL0AsJI9AABEvAAAzDwAwJa8AOBHPQDgfb0A4Ha9AADrPAAAnzsAAJS8AID2PAAAkDoAwJG8AGAoPQAAYzwAkJY9ACBkvQCglz0A4GI9AADdOwAAcjwAQNI8AACSvABAd70AADW8AMCfvACQgz0AgC89AICRvAAgO70AACQ7AKBxvQAA2LwAADq8AKCYPQCADb0AgFu9AIAMPQCAIrwAAK88AJCIvQAwir0AAIE9AIB/vACQi70AgEk8AIDXPACAQ7wAgBC8AABQuwCYEb4AYBs9AEAdvQCA6rwAoBk9AMCivADgaz0AQMA8AAAAOwDgCL0AACi8AAA4OgAAVLsA8Mc9AADVvAAAMz0=","chunkHash":"7d2812be2aaf80996e06a1f60d8673b25f3412211eda52e04ffeb52217e8d8f4"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_cube_grid(cubes, output_path=None, show=True, grid_size=(4, 4)):\n    #...\n        if slice_img.max() > 1.0:\n            slice_img = slice_img / 255.0\n            \n        # Convert from [-1, 1] to [0, 1] range if needed\n        if slice_img.min() < 0:\n            slice_img = (slice_img + 1) / 2\n        \n        # Plot the slice\n        ax = fig.add_subplot(rows, cols, i + 1)\n        ax.imshow(slice_img, cmap='gray')\n        ax.set_title(f\"Cube {i}\")\n        ax.axis('off')\n    \n    plt.suptitle(\"32³ Cubes Extracted for High-Resolution Texture Model\")\n    plt.tight_layout()\n    \n    # Save if output path provided\n    if output_path:\n        plt.savefig(output_path)\n        print(f\"Grid visualization saved to {output_path}\")\n    \n    # Show if requested\n    if show:\n        plt.show()\n    else:\n        plt.close()\n#...\n```","range":{"startLineNumber":103,"startColumn":0,"endLineNumber":128,"endColumn":19},"embedding":"AAC2PADArLwAQI48AECMvADQhb0AYCG9ACAXvQAA1bwAQPW8AKARvQBQjD0AADS8AABGuwCgSr0AAKC7AABTPQBA5rwAAM87AMDAvAAAkTwAIEM9AKBEvQCABDwAQMo8ACA0vQBAUz0AAIQ6AEDYPADQgT0AQLQ8ACBkvQDA0bwAsIW9AOCvvQAAv70AQD+9AAApvABA6jwAIIg9AADTuwCgtT0A0Iu9AOAOPQAA4DoA0KU9AIAWPADAlbwAUJS9AMCiPAAAJTwAwH89ADCLPQCAGzwAQAq9AEBgvQAA0rsA0Kq9AGAFvQAAHbwAQOy8APCPPQAAILoAABA9AIDcPAAASzwAQAE9AABgOwDAML0AwJg8AIAkvADAL70AgD88AACgOwCASbwAgKK8AMDDvACAebwAQNM8AACQugAwi70AAO27AMDovACgdz0AAKG7AIBzPADgd70AwGK9AIAvvACAebwAQOi8AED2vADgqD0AgD29AACUugBQjL0AIIg9AAA9vAAAjrsAQME8AABuPACAZj0AgGo8AABwvQAAaD0AYIk9AEBgPQDAmjwAgF+8AAAaOwAARz0AAAi7ACBKvQBA/TwAgJy8AMCVvAAA+7sAgC48AEC3vACAnbwAQN08AOBLvQAAMzwAAJE7AOBsvQAA/jsAAGq7AICgPABABL0AYBE9AIDOPACAcLwAQJc8ANCJPQCAeb0AgJG9AAAOuwAgDD0AADQ9AICVvACA7j0AgDm8AEAnPQAA7jwAgJk8AADrOwAAuT0AALG9AHCUPQCAwbwAoGk9AACFOwCAkj0AoB89AJDivQDgC70AsIC9AKBvPQCA6jwAQMq8ACCLvQAACL0AYCi9AGAAvQAAKzwAwCG9AGAHPQAgPb0AwLk8AMCnvQCA/7wAwI28AKA8vQAA5zsAEIK9AHDqPQBAOT0AgPO8AABAuQDwir0AAOQ8ACBtvQCA/rwAAE47AEDqPACA+rwAAOG8AOA/PQAAZrwAQMu8ACADPQCAoLwAQCU9AIB8vQBAWD0AAN48AMBGvQBAfj0AgMA8AEDgvABAnjwAgF68ALDBPQAAsLsAAO87AMDwPABwlL0AAOG7AAD4OwCAWbwAIA89ACAWvQCAAj0AgKw8AADgOQCAEb0AgPW8AAAevADQjz0AgEY8AKB6PQBAz70AwLA8AEA6PQAgbz0AAHU9AIDFPABA37wAAAi9ACBfPQAAKT0AIBg9AAC/OwCAB7wAwAk9AMDBvABAKz0AAEM8AMCXvAAAiTwAQLG8AACVvAAAU70AgGy8AIA8vQDAVj0AAFc8AGAKvQBAu70AABo7AAAGvAAANLwAgM48AMDTvABAub0AAFY7AIAdvQBAc70AQOq8AMC0vABAML0AQD49AADUvABQqL0AYAm9AMDWPABAaT0AgB28AIBHPACgir0AwMG8AGAyPQAAzTsAEK09AIClPADA5LwAsIQ9AIA0PQDA6jwAADw7AAChuwBA+LwAYC+9AIAuPADgoT0AgBY8AADouwCAbb0AwCg9AAB8vABgz70AAH89AAASvQBAPr0AAFs8AIB/vQAAPz0AQP+8AABQPAAAmLsAYFa9AMCWvABAy7wAAD+8ADCuPQDwg70AQEI9AIBZPABAUT0AgJA9AIBtPABAjrwAgF29ANCWPQAAkjwAgDw8AKALvQCgjT0AIFw9ABCXPQAA47wAgBs8ACDHvQCghz0AQCk9AECfvACgBb0AIIG9AMANvQCAHzwAYGS9AADDuwAAF7wAQAi9AEC3PAAAAT0AAAa8AADRuwBgSD0AoHe9AABGPACAAL0AQKG8AKCHvQDgB70AIFM9AFDNPQBAjD0AoFI9ACBxPQDwpL0AwL08AIA2vQCgNL0A4BI9AAAxPAAAOrwAcIi9AMCZvQCAl70AoBM9AFCTvQCAAj0AQPM9AACmOwAAjjwAYBk9AIBIvAAAzTwAAPs8AAAdPQDAjjwAANo7ACB/vQCApb0AkL69AHCHvQBwmz0AIBY9AAA7vACARbwAAOK8AGAiPQBAujwAALG8AACAuwCAWbwAAHM9AKAmPQDgKb0AgIO8AMB1PQCgZL0AwJM8ACB4PQBwoj0AAIE7AJC3PQCgJj0AgHg8AIDvPADgK70AwJc8AEC0vAAAXLsAAPy6AACYPAAAFT0AwLA8AIC1vADgor0AAO08AHC3vQCAALwAcLG9AAB2vAAgwL0AwB69AMC/vAAwjL0AMKY9AIBkvQAAlLsAADq8AAAKPADABT0AgCY9AOCiPQDAqrwAgDM9AAA/PAAgND0AAJw6AEDDPAAA3rsAQBu9AKB+vQAARLsAAOa7ADCFPQAAV7wAgCI8AMCTvACwg70AAMC8ACAwvQDAM70AwHs9AAA/vAAAq7wAQJW8AACJPABQmb0AcLC9AEDvPACASTwAgE68AAAjPQAADLwAAMe8AIBnPAAAGTwAwEg9AOAavQCw6z0AwOY8AICnvAAA8TsAACA6AABgOgCgXb0AAE68ACAlvQDgtj0AAM87AADJvACwjL0AgJO8AMC9vQDgV70AACY8AEAePQAAvbwAoEy9ACB6PQAAJ7wAkKo9AGBXvQBglr0AwEk9AECKvAAAS70AAFo8AKAyPQCAfbwAgNK8AADQuwCA2L0AQO08AAAGvQBASr0AQE09AAAcPQDANT0AAMw7AABdPABgR70AgHU8AACuOwDAoTwAAD49AAD8uwDAsDw=","chunkHash":"8978a11b7d591771c0a1e972da0f2d5ef9c86483584f424f88e182fa645b6d0b"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_cube_3d_slices(cube, output_path=None, show=True, slice_indices=None):\n    \"\"\"\n    Visualize slices from a 3D cube.\n    \n    Args:\n        cube: Tensor of shape [1, Z, H, W]\n        output_path: Path to save the visualization (optional)\n        show: Whether to show the plot\n        slice_indices: List of z-indices to show, or None to auto-select\n    \"\"\"\n    cube_data = cube[0]  # [Z, H, W]\n    depth = cube_data.shape[0]\n    \n    # Select slice indices if not provided\n    if slice_indices is None:\n        num_slices = min(5, depth)\n        slice_indices = [int(i * (depth-1) / (num_slices-1)) for i in range(num_slices)]\n    \n    fig, axes = plt.subplots(1, len(slice_indices), figsize=(3*len(slice_indices), 3))\n    if len(slice_indices) == 1:\n        axes = [axes]\n    \n    for i, z_idx in enumerate(slice_indices):\n        #...\n```","range":{"startLineNumber":131,"startColumn":0,"endLineNumber":153,"endColumn":0},"embedding":"AIDwPAAAVbwAgCU8AMA+vQAAq7sAIEe9AIBQvAAAyrsAwAS9AADQuwCAKj0AgOE8AKBEPQDAXr0AADm8AEAqPQAAVrwAAI47AAB5PABAizwAoDk9AAAuuwCAcD0AgKe8AIA7vQCQkD0AAOY8AADEPADgMD0AAF47AOBbvQCA8LwAYF+9AECvvQDgyL0AgKy8AGBVvQDgQj0AAIA4AADcOgCgtj0AgHO8AADZOwCAubwA4NE9AAA4OwAA17sAQA29AACQOgCA2jwAQOc8ACCcPQDAsLwAADU8AABEvADADj0AYHu9AID9vACAGLwAQIW8ANCmPQAAGjsAgNg8ADCgPQAAozwAYEM9AAAAOwAAOLwAAOQ6AIBPvACAlLwAgI08AADtuwDAwjwAABo7AMCVvAAA2LwAQIk8AIC7vABgwr0AgG68AIBovADAhj0AQC09AACAuACgd70AAI+8AIDAvADAnjwAQBa9AAA9PQCAEj0AgLS9AICBvACgar0AQBE9AACdPABAhbwAAE08AECKPACADTwAQIU8AKBdvQAA0zsAoBw9AMBnPQCAbT0AANU7AMC8PAAAdjwAwNY8AAC0ugDAizwAAHy8AIA9vQCAVjwAQA09AMBAvQAAMjsAQJk8AECjvQAAgDoAANM8AEDrPAAAvjsAAAy8AMD+PACgKL0AYDI9AMCmPAAAvjsAwMQ8AEDIPAAAvb0AgAe8AAAuuwAAITwAgGY8AOAtvQBw4z0AgA28AKBoPQBQkT0AwJC8AOABPQBAqT0AwIa9AOBuPQAAhrsAoJw9AACDOwDgeD0A4EA9AJDNvQDgTL0AAMS8AKBNPQAA+DoAALi6ACBWvQCQj70AwNe8AMCAvQDA0zwAQE29AKAZPQDgFb0AQAU9AKAfvQBQg70AAAi8AMBLvQDAwTwAoB29AAAAPgAgTD0AgEg8AICkvACAgrwAQK48AEA7vQAABDsAwPe8AGAzPQCggL0AAHs8AAAvvAAAxrwAwLC8AMBnPQAApbwA4KE9ABCzvQCgTT0AgBy8AEB3vQDgZz0AgDg9AEDkPAAAh7wAAKq8AMCVPQDAnLwAgO28AGA9PQCAuLwAACs8AIA6vACAJL0AgNE8AOAqvQDAoDwAMLE9AAChPACAxLwAAGy7AEDzvABAQT0AAFA7ACBbPQCAvb0AAFg9AOBRPQAgDD0AIMU9AIAuPABgTb0AgGW8AACcPQAgXT0AwAA9AACEOgAABDwAEKY9AIBQvQCAUz0AgDS8AICTvADAAz0AwKK8AACAPABgFb0AAKi8AAB1vAAg+j0AAAi8AMCOvADQo70AAKW8AIACvAAACDsAAOq7AOALvQDgy70AQPC8AAAKPABwi70AgJS8AACevACAsbwAgGI9AGAbvQCAr70AAAa8AAC4OwDAED0AIEI9AACqPAAArbwAwLe8AOCbPQDAxjwAEIQ9AIA8PACAn7wA4Cs9AIA0PQCAz7wAAIm8AIDwPACAAbwAwNW8AMCcvACAtzwAAKI8AAD9OwBgJr0AgCM9AECUvAAAnL0AMJY9ADCdvQBgQ70A4BE9AMDavABQxj0AQMC8AECHvAAAjL0AYA+9AIAJvACgDL0AIKI9ACDePQAAFbwAIBg9AAAaOwAAaz0A4Ho9AABXPAAAYrsAgCa9AOBrPQAAhTwAQP08AOCBvQDgjj0A4EM9AIAxPQBAZr0AoAu9AMAFvQBATz0AsKs9AMAbvQBA+LwAwDS9AADgugAAgLwAgAC+AAD+uwAAyLwAAIy9AAAwuwCARrwAoAi9AED/PACA/jwAgGi9AEAqPQCAZ70AQK88AODPvQCgp70AAB67AHCqPQBAXz0AAB67AAAOPQDQnL0AABg6AOB6vQCgRr0AAPS7AMDAPABAoTwAoGO9ACBmvQCAYb0AAFK8AKCMvQAAWDwAAKk9AMA2PQAAXD0AAOQ8AOANPQAA3jsAANs8AACbPACATz0AgK+8AAD4vAAAiL0AAFS9AHDPvQDwkT0AwDs9AACgOQAA2LsAgF69AADJuwBgKT0AgAq9AECsvACAvrwAwMk8AIAGPADA0bwAABu8AMDKPADgkr0AYBI9AGCUPQCQnj0AABa8ACAWPQCAgjwAIB89AACMPACANbwAQFE9AIAXvACgIb0AAKu7AIBbPABgZD0AANA8AAAsvQCgJr0AQPw8ABC7vQBAv7wAgES9AIBgvADgrb0AoDq9AABUvQCA1LwAgIU9AIC6vABgab0AALy7AAA3PAAAgDsAQJw9ADCJPQCAObwA0KQ9AIBJPABgWj0AoCM9AACOOwAAxzsAAC29AEBLvQAAVDsAgFy8AGBzPQAA+bsAAGA8AAAIOwBQhL0AsIm9AMDWvAAwkL0AQEI9AMDwvAAArzsAwKi8AEDvPABAJb0AkMa9AID9PAAAfLsAQCi9AEDvPADA2LwAAJm8AAAOvAAAMLwAoDQ9AGBhvQCgpz0AAEs8AGAavQAApzsAAJO7AECbPAAAOr0AAIQ6AEAhvQAAJz0AQLI8ADCJvQAAor0AoF+9AABsvQBAEr0AAKC5AICNPQCAbLwAgCy9AHCLPQDAJT0AgCc9AEDSvACQ2b0A0Lc9AABkuwCAubwAgEu8AOAcPQAAEbwAAJA8AACKOwDg3r0AwJ48AIBjvADA07wAUJ09AIA+vABwkT0AANS7AAD8uwBgK70AgLa8AIBYvACAELwAcMY9AAC5uwAAJTw=","chunkHash":"e5e8d9d1cf96b3660288cb26de2681dd28264f4aabc46d3b1954287ca78d2508"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_cube_3d_slices(cube, output_path=None, show=True, slice_indices=None):\n    #...\n        if z_idx >= depth:\n            continue\n            \n        # Get the slice\n        slice_img = cube_data[z_idx].cpu().numpy()\n        \n        # Normalize for visualization if needed\n        if slice_img.max() > 1.0:\n            slice_img = slice_img / 255.0\n            \n        # Convert from [-1, 1] to [0, 1] range if needed\n        if slice_img.min() < 0:\n            slice_img = (slice_img + 1) / 2\n        \n        # Plot the slice\n        axes[i].imshow(slice_img, cmap='gray')\n        axes[i].set_title(f\"Z = {z_idx}\")\n        axes[i].axis('off')\n    \n    plt.suptitle(\"Slices from 32³ Cube\")\n    plt.tight_layout()\n    \n    # Save if output path provided\n    if output_path:\n        plt.savefig(output_path)\n        print(f\"3D slice visualization saved to {output_path}\")\n    #...\n```","range":{"startLineNumber":153,"startColumn":0,"endLineNumber":179,"endColumn":0},"embedding":"AADzPAAA6DoAAAs8ACAcvQBA9bwAYE69AICDvAAAwDsAoEG9AAAfvQCQiD0AgMQ8AABiOwBgUr0AwI68AOBCPQDAlLwAAEI8AECevABAxjwAABs9AADrvABATD0AwJW8AKA/vQDAbT0AgBw8AICNPABAZj0AgCm8AMBnvQCgJL0AQFW9AGB0vQAA070AAC29AKA1vQCAfzwAoBQ9AABIvABQvz0AoEu9AOBdPQBApbwA0L49AIA7PAAAlrwAQD29AADlPAAACDwAgAs9AMCnPQCAYjwAAPE8AIDZvACgOT0A4FW9ACAAvQAAmLsAgMm8AHC6PQCARbwA4Cw9AABnPQAAvzwAgMM8AAAsuwCAbrwAALg8AACquwAA4rwAALk8AAA6vAAAlDsAANg6AMDQvAAA8rwA4A09AACVuwBArr0AQKW8AAAAAACAjD0AwKI8AIBQPABAT70AQFO9AAB0vAAArLwAQN28AIAPPAAgPD0A0Iu9AAAwuwDgJb0AgGo9AAC5PACAC7wAAPA7AAD8OwAA1zwAgBw8AOAYvQDAnjwAQGE9AMAzPQBAIj0AgBa8AIAlPACA9jwAANI7AADkvAAA8zwAwPS8AEAPvQAACLoA4AU9ACBQvQAAaDsAAM88AOCXvQAA6jsAACy7AACUOgAA4jsAgGK8AMDFPAAgD70A4D09AAA1PAAAWDwAAKI8AOBkPQAwt70AQB29AAA4ugCAYzwAAOs8AKBCvQDQ7D0AAJG8ANCEPQBANj0AgHG8AIAWPACQxD0AEI69AECoPQAAMDwAQI09AAD0OwAgmj0AQMI8AEC9vQDwjb0AAAy9AABcPQCApzwAQLq8AKBjvQAgBb0AAHu8AEBCvQAAEzwAwM68ACAxPQCAQ70AgAQ8AMBJvQDggb0AYAa9AOBJvQAA4jsAgFO9AAD6PQAANT0AwIW8AAAcOwCANL0AAMU8AEAVvQAAKzwAwKm8AABjPQDgYr0AAGC7AIA1PABgD70AwK+8AHCFPQAAzbsAcIU9APChvQCggT0AANa7AGCrvQAQgz0AgDw8AIDBPAAAjbsAwKy8AJCEPQAAVDsAAAu8AKAHPQAALb0AAGU8AIB7vADgDL0AAPQ8AOAtvQAAAD0AAJM9AIAnPACAGrwAALy6AECCvABAfz0AgMw8AMAcPQDgy70AADQ9AGB8PQBAyzwAwLU9AACMOwDA/7wAAM28AKCPPQCgPj0AoEA9AADpOwAASjsAoEE9AAAEvQAgOz0AAFC6AAAWvQDA7DwAAHy7AAAaOwDA0LwAgDq8AMCevACg+T0AAPg7AGAjvQBAnb0AgLa8AACsuwAAzTsAgC48AICQvACw2r0AwI28AMAavQCwlr0AAMu8AACmvADAzLwAIDQ9AGAwvQCQwr0AgEG8AKABPQCASz0AIAg9AMAOPQBAybwAwOa8AFCUPQDAtjwA4Mg9AIAXPQAArLwAwO08ACA9PQAAprsAAOC7AIDrPADA6rwAAOi8AIAGvADAbT0AABY8AADFuwBgX70AYBk9AAB6vAAQvL0AQF89AMBLvQAgSL0AoDM9AEDjvADgiT0AwOK8AIAqvACgNb0AQLe8AIAFPAAA8rwAYGg9ACDcPQCgGr0AAMc8AECEPADAdD0A0Ig9AICiPAAAQbwAwBm9AHCZPQDAojwAgAU9AKAevQAwnj0A4F09AMBQPQDAWr0AAAu8AKBYvQDghz0AQGg9AIDWvACAOzwA8IK9AABuvAAA5jsAgNa9AIAuPACAG70AoJe9AACAPAAAVrsAQMG8AMDRPABATz0AYJK9AEAQPQDgXr0AgBq8AFDHvQBgWL0AAO88AKCDPQBgPz0AgG48ACAcPQAApr0AAEq7AABEvQCgHr0AAPE8AGAVPQCARjwAgEC9ACCdvQAArb0AgHo8ACCYvQAARDwAALk9AOAdPQCgID0AIBY9AADUOwDArrwAwPQ8AGA4PQAgFj0AAJ68AEA7vQCArb0AwIe9ADC5vQAAmj0AYE89AAB4ugAAGDoAIH+9AACEPACAeD0AAPK8AIBhvAAAGLwAoA49AADkPADAQ70AQI+8ACBIPQDgM70A4A89ACCAPQDQoD0AANQ6AGB4PQCANT0AYAA9AABrPACA3LwAwBI9AACLOwDAubwAACA8AMCWPADgOD0AALO7AADWvACAgr0AwOw8ABCyvQAA0LkAwGW9AACoOgDQvr0AQKK8AABIvQCAbr0A4G49AMCKvAAgMb0AAJ27AACEugAAvzsAwIc9ANCGPQBA3bwA8K49AAA+vACgZT0AAB+8AADuOwAA0DsAwFu9ACAxvQDAlLwAgKS8AGB+PQAAk7sAAAM8AABcuwDQsb0AoGO9AMBAvQAQjL0AwDI9AMD0vAAA+DoAQAu9AIDYPADA/rwA8NG9AGAuPQAAybsAAL28AMBhPQBAE70AIA+9AADwuQAAWLwAYDM9ACBEvQCQyT0AAFI7AMAzvQCAEjwAQIW8AADPOwCAQb0AAAQ8AGAEvQCAbz0AADE8AEBkvQDwk70AQFW9AOBgvQAAWr0AAL+7AMA9PQAAKrwAYBK9AICgPQBgUD0AgI89AECqvAAgtr0A4Iw9AABnvACA8rwAAFg7AICHPQCAVbwAAIU8AADKuwDQoL0AwI08AOALvQDA5rwAYIc9AECnPACAXz0AAPC8AABQugBAZr0AAKi7AADluwAArDoA4LA9AIBAPAAA/rs=","chunkHash":"ff05d7f8a8b709a55839e9a7f9896c964f31923151d24c88a7a123c7ea969add"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_cube_3d_slices(cube, output_path=None, show=True, slice_indices=None):\n    #...\n    # Show if requested\n    if show:\n        plt.show()\n    else:\n        plt.close()\n#...\n```","range":{"startLineNumber":180,"startColumn":0,"endLineNumber":184,"endColumn":19},"embedding":"AADCOwCAc7wAABA7AADuvACAeLwAIBC9AAAMvAAAUbwAoC69AIB0vABAcj0AwKY8AADbOwCAHL0AgM28AEBXPQBA8rwAAEA6AMCJvAAA+DwAoDM9AACbvACAyjwAAMi7AMA0vQCwkz0AAAy8AAABPAAAgT0AAAc8AGCHvQBgWb0AoDy9AIBFvQCw2L0AQDS9ACAJvQBAxjwAQOo8AIDivABg3D0A4I+9AMBYPQAAfLwAAK89AAAsuwAAz7wAIG+9AAASPQDAgTwAoCc9ANCCPQAAnDwAAHU8AEDbvADABT0AQIS9AIABvQCACjwAoEW9ANC0PQAAgDkAAMI8AACEPQAAjDoAICk9AABKvADApLwAgE88AIAuvABAubwAQIg8AAAmvAAAObwAAJW7AECHvACAqLwAIGY9AIBevACAj70AgOe8AACMugDAeD0AwA09AACouwDwn70A0I29AABWuwAAn7wAADy9AMCTPADgIz0AIFC9AABouwCAz7wAMIM9AABOPAAApDoAgF88AEDmPADgBz0AgH48ACCQvQDAxjwAUIM9AJCYPQDgQT0AAEM8AADAOwAAHz0AACw8AMD6vABA2DwAQL68AKA7vQAANrsA4B49AEAzvQAATLwAQPM8AOCPvQDAhDwAANe7AICFvAAAaDoAALe7AID9PADAxbwAgE89AEC4PAAA+bsAwKs8AMB1PQCQur0AABi9AIABPADAgjwAYA89AOA3vQDoBj4AAD+8APCnPQAALT0AACA7AABuOwDgvj0AsJC9AIBuPQCAHjwA4GA9AMCWPADwpD0AgAU9AKCovQBwoL0AoBm9AOBQPQAAjzsAgMu8AIAkvQBgQ70AgAC8AIBLvQCASjwAAMK8ACBEPQCABb0AAOk7AIA6vQBAYr0AgP28AAC7uwAAujwAwDe9AHD3PQAgWD0AgFY8AIA0vABAJb0AgAA9AIDTvACApDwAAE88ACAPPQAAML0AQM+8AMD6PACArLwAwOW8AHCFPQAAQDsAkJ49ACCDvQCgqD0AACK8ABCtvQAgcD0AgI08AABuvACAGDwAQIq8AEB7PQAA/bsAALM7AKAgPQDQib0AAEI8AECpvACAq7wAgBw9AOACvQDAijwAIHg9AAB6PACABLwAAMC5AAAhvAAwhj0AAHU8AOA4PQCQx70AwMM8AGBMPQDgAj0AgIM9AICsPADAtbwAADi8AGA/PQBgPj0AQCg9AACZuwAAYDsA4Io9AIBXvABAzDwAgAE8AMDdvAAAYTwAAKK8AECNPADA5LwAwOK8AKAcvQAg7D0AAIg6AIAGvQAwj70AAMC8AADiOwAA0bsAgEQ8AAB4OgDQzb0AgAe8AKAPvQDQlr0AwK68AACIvACAN7wAQEo9AECHvQDwn70AABa8AACVOwCgLz0A4Ao9AEDFPABAv7wAIF69AOBuPQDAET0AUME9AACTPADAyLwAYAA9AKBvPQCANTwAANE7AACuPABAtrwA4B69AACMvACAej0AANQ7AAANvACAKr0AgB89AEAvvQCgir0A0Ik9AIB9vQCAIr0AwKc8AEAxvQDwiD0AAAw7AECQvAAAJL0AgP68AACgugDgGL0AoBw9ACDNPQAA37wAQD49AACUugCQkz0AwHw9AMDbPAAAALgAYE29ANCZPQCAOzwAoAQ9ACBAvQCAfT0AoHs9AEBoPQCAL70AAAi6AFCrvQBgZz0A4F09AIA3vQAAKrsAgJy9AADYvADgFD0A4LG9AECAvAAA3bwAYKK9AKAGPQAAXTwAAMi7AMCjPADAhzwAEJe9AIBZPABgSr0AAPS6AODVvQAAdL0AIDU9AABiPQAAfz0AgMA8AEBHPQDwuL0AgBI8AKA8vQCAIL0AgJg8AEDjPAAAFbwAYBS9AGCcvQAgmb0AQK48AHCBvQAAfTwAYLI9AID6PADADz0AICY9AIBJvAAgFL0A4Ak9ACBHPQAAujwAAMu8AIAevQCAl70AIH29AMCgvQDwiz0AQE09AACMOwAA7DsA8IG9AAA0PACwjT0AwA29AMDCvAAAqLsAALI8AACDPAAAv7wAAMS7ACCWPQCAAL0A4EU9AGB+PQCAgj0AAL67AEBqPQBAaj0AAPw8AIB0PACArbwAoAE9AAD2OwAA9LoAAES7AADmOwAgGj0AABW8AADwugCApb0AgBU9APCkvQAAWLwA4HK9AADQOQAA2L0AQAW9AEBuvQBgUL0AAFw9AIDJvACgKr0AAFa7AIBbPAAA1DwAkJY9AGClPQAA9LwAkI09AADIOgCgcT0AAOc7AMDHPAAAmbsAQKC8AMDWvAAAKDsAQJC8ALCQPQAAZrsAgGs8AECBvABgrb0AAFS9AFCQvQDgor0AoDQ9AADGvAAAvrsAACC8AEAQPQDAML0AQPK9AMAtPQAAnzsAACW9AACWPQCgMb0AwLa8AMC3PACAaDwAQA49AOAyvQAg6T0AgF88AOAavQAAADkAAN+7AABYPABgT70AAIM8AEBXvQBAoj0AANQ7ANCEvQCQhb0AIGW9AACOvQCge70AAHc8AMBIPQAAkTsAABy9ACDCPQAApDwAwIQ9AICDvABAlL0AoGo9AABNvAAAqbwAgGk8AMBWPQAAcrwAABC6AAAevAAgnr0A4BQ9AADLuwDgI70AADU9AMCVPABAOz0AYCa9AAC0OwCAX70AAD68AACVuwBA3DwAgB89AABYugAAADw=","chunkHash":"af5af64a32b576c8eb710fc171aac7d22c69d6d7265bb9cb5a5b5fc2bb81736f"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_augmented_examples(cube, num_augmentations=5, output_path=None, show=True):\n    \"\"\"\n    Visualize multiple augmentations of the same cube.\n    \n    Args:\n        cube: Tensor of shape [1, Z, H, W]\n        num_augmentations: Number of augmented versions to create\n        output_path: Path to save the visualization (optional)\n        show: Whether to show the plot\n    \"\"\"\n    from dataloader.highres_texture_adapter import augment_cube\n    \n    # Create augmentations\n    augmented_cubes = [cube]  # Start with the original\n    for _ in range(num_augmentations):\n        augmented_cubes.append(augment_cube(cube, p_rotate=0.8, p_flip=0.7, p_elastic=0.6))\n    \n    # Pick middle slice of each cube\n    slices = []\n    for c in augmented_cubes:\n        z_mid = c.shape[1] // 2  # Middle slice in Z dimension\n        slice_img = c[0, z_mid].cpu().numpy()\n        #...\n```","range":{"startLineNumber":187,"startColumn":0,"endLineNumber":208,"endColumn":0},"embedding":"ACAMPQCAfjwAANU8AAAVvACgfr0AgKS8AACfOwBAyLwAwHG9AAAkPQBAjjwAABA6AMAfPQCQyr0AgJK8AADRPAAAuLsAwOW8AEDpvABAED0AAOK8AKAevQCwrT0AwAU9AOA4vQAAyzwAAFS8AAD4PAAAaT0AAPw6AAD1uwBgCb0AgKi8AJCJvQCQv70AALc8AACzvAAA/DwAwJ08AIAEPQBg+T0AsIq9AMDPPACgED0AcKI9AMCrPADA4zwAwJy8AACpOwBAgz0AwCQ9AADtPADgIL0AgKK8AIBhPAAAJrwAoC+9AABzvACAJjwAkJm9APCFPQAAsLsAQJg9AECJPAAAPDsAADQ9AGBBvQBAhrwAAD88AMCCvAAAwbsAANC6AIA4vADgJD0AwIo8AABDPADghL0AIDo9AABfvABgrr0AAI48AAAovACgWD0AAJs8AACZPAAAPb0AwMC8ACBTvQAAqDsAQAO9AKByPQCwpD0AoJO9AMDPvAAADjwAYIk9AKBfPQCA17wAwBA9AMDuPABAtDwAANC7AMCevQCAeDwAQPI8AMC9PADgGz0AIAA9AECGPQDAnjwAgDE8AGA0vQBA7zwAwCG9AAA0vQAAobwAQL88AMC8vACAhzwAgCu9AHDSvQAAEL0AABU9AMD2vADgED0A4HS9AMCNPABAEb0AgDg9AIDHvAAAWLoAICY9AIAKPABAJ70AAPC7ACBmvQBA2TwAAKk8AIAQvAAQpj0AAPo8AEAfPQAgDT0AgBC8AAAIPAAgnT0AQDq9ABCCPQAAp7sA4HU9AABpvQAgbz0AQGk9AMBZvQBAb70AQGi9AADfOwCAeDwAwMe8ALCIvQAgNL0AwJW8ACBqvQAAtDsA4Ba9AID2PAAQ3L0AgII8AOBbvQCAnr0AQK08APCIvQAAaTwAYH+9ADgBPgDAgDwA4EW9AHCZvQAARbwAgBo8AOAEvQBAjLwAgIy8ALCSPQBgbb0AQKG8AADDOwAAibwAgD+9AAAOPABAkrwA4B49AMCKvACgmD0AAHk8AKCTvQBwsT0AoBY9AECgPABgkr0AwDq9AMBBPQBAJj0A8I29ADCBPQCgcr0AQAC9AABpvQDA1zwA4H09AIBBvQDgBj0AUJ49AACbuwAgGb0AAFm9ACBJvQBArjwAQIS8AIBXPQAAlL0AQJM8AABWPACAgjwAQJI9AGAjPQDgf70AgH+8AAA2PQCwpT0AAAe8AECgvABgV70AoG49AAAqOwAgKD0AAHY8AEDCvAAAsLoAAFA6AMDdPACAdrwAgLo8AMDGvAAAZT0AwDQ9AOAsvQCAd70AAPs7AECtPAAAljsAgOo8AKBfvQCwur0AgFy9AACruwAAbL0AANQ7ACB4vQAAZjsAcL09AKAjvQCA6b0AgEq8AABguwDgzz0AIHA9AAAgOQBA/bwAAEK7ALCyPQBgfj0AAOo8AIBYPACAQ7wAQMU8AEAHPQAAtLoAQJE8AECFvACA7bwAgOm8AMCOPADAMD0AADc9AECJPADgUr0AAM07AAAOvABgxr0AwF09ALC/vQBgDL0AAFe8AGAPvQBAnT0AwNi8AHCRPQAAK7wAIDa9AOBsvQCgGL0AoBw9ANDDPQBAtbwAgBU9AAB7vAAApjwAoDk9AEDRPADAhzwAIJ29AEAAPQCAUzwAALg7AICRvABAiT0AwD89AOAhPQAgAb0AwCg9ALCIvQDgRj0AAI89AGAzvQBAiLwAAGi9ACBbvQBAx7wAsOC9AIBpvAAAoTsAAMS8AEBfPQCAQjwAAPC7AABaPQDAkrwAANq7AACKuwDAb70AAB47AEBDvQCA4b0AwLo8ADCJPQDArD0AYCI9AED0PAAAFrwAgB48AKBlvQBgCr0AQKA8ADCWPQAA8LkAwDm9AAAWvAAALb0AgG68AAARvQCACj0AELQ9AAB2PABgCD0AgMU8ACAJPQDA9jwAQII9AMCMPABAPb0AAAQ8AADOvADgQb0AoKa9AGB/vQBwoT0AALA6AIBdPADAAT0AwGS9AACcugAApzwAgJo8AMD+vAAAYDoAAEQ9AAAgPQCAE7wAgGU8AIApPAAQxr0AADG8AIArPQAgID0AANk8AOAnPQCAIz0AQDM9AGANPQCADb0AQBY9AEDnvAAA6rsAAD47AACPPQCAnjwAoA49AMCFPAAAsrsAAL27AFCcvQDArbwAYIO9AECXvABAZL0AID+9ACArvQCAE70AsKQ9AGANvQBgJb0AwLM8AACuvADAkbwAQMw8AADiPACAjbwAYLA9AOAOPQCArTwAwPM8ANCGPQBAurwAAL27ADC5vQAAOTwAgNg8AIBTPQBgWb0AAAw8AAC+vADAk7wAwEO9ADDMvQCApLwAwO08AADkuwCAtDwAALA7AADsOwAAojsAAJ29AABnPQAAyLoAoAu9AMD1PAAA7zsAAIY9AEAJvQBAJT0AYA89AMAmvQDggT0AABk9AMAkvQAAq7wAABC8AIB6PADgKr0AwBM9AEAHvQAA1zwAwHc9AOBMvQBg6b0AgMk8AIAlvQCAD7wAgCE8AIDuPAAA9rsAQAO9AACMPQDAybwAYFg9AOA9vQAgfb0AEKs9AADzvADAhL0AALy6AADkOgAAYLwAgHq8AABMvABA9L0AwL+8AACivAAAFLwAgKw8AEDtvACAXzwAwIe8AIDqPACAXrwAAIy7AIAoPABAzTwAsPM9AEDGvAAAprw=","chunkHash":"ed8e08ef9d769380dc94812e46192ea53a4793293de788c0fb106c641571c5c8"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_augmented_examples(cube, num_augmentations=5, output_path=None, show=True):\n    #...\n        # Normalize for visualization if needed\n        if slice_img.max() > 1.0:\n            slice_img = slice_img / 255.0\n            \n        # Convert from [-1, 1] to [0, 1] range if needed\n        if slice_img.min() < 0:\n            slice_img = (slice_img + 1) / 2\n            \n        slices.append(slice_img)\n    \n    # Create plot\n    fig, axes = plt.subplots(1, len(slices), figsize=(3*len(slices), 3))\n    \n    for i, slice_img in enumerate(slices):\n        title = \"Original\" if i == 0 else f\"Aug {i}\"\n        axes[i].imshow(slice_img, cmap='gray')\n        axes[i].set_title(title)\n        axes[i].axis('off')\n    \n    plt.suptitle(\"Data Augmentation for Contrastive Learning\")\n    plt.tight_layout()\n    \n    # Save if output path provided\n    #...\n```","range":{"startLineNumber":209,"startColumn":0,"endLineNumber":232,"endColumn":0},"embedding":"AAD4OgAAmDoAAGA6AMDvvAAgVb0AwDK9AAAguwAARrwAIHK9AOABPQDgQT0AgGY8AABCOwBw0b0AQLq8AAA+PQCAfLwAAIa8AAAJvQAgLD0AAAW9AKA7vQDQhz0AwPs8AKBXvQCACbwAwOu8AAB/PACAVz0AgDE8AKAQvQCAPL0AgCy9AIBevQBAcr0AACw7AIASvAAA0DkAQM48AACROwDwwj0A0NK9ACAuPQCAHT0AQE89AGAcPQDAhTwAwOe8AAAPPADggT0AQB89AMC+PACAFrwAAIA8AABauwAgDT0AgNm8AAAQOwAAJTwAYJ69AIChPQAAsrwAsJI9AABqvACAxbwAQOk8AOCQvQCAA7wAAFg8AADZOwCA2zwAgJ28AMCvvACAdDwAALk7AADoOgBwlb0AwDo9AAAAvAAAt70AAP+7AADAuwDgPz0AgFk8AMAPPQDAk70AYMq9AABbvQAA07sAwA+9AIAwPQDAfT0AELK9AIDxvACADzwA0Kw9AACPPAAAZ7wAgFk9AAC2PAAAWT0AAMu8AMBqvQAAiTsAgIE9AADcugCAwjwAgB88AOBmPQAAsLsAgEE8AMB3vQBA/zwAgDO9AADbvABgN70AwJM8AADWuwDAhjwAwCe9AGCLvQAABb0A4C89AGCIvQAAMj0AgOO8AIAOPQDgDL0AAPU8AKAxvQAASLsA4Bs9ACAHPQCAYb0AgOe8AIAhvQAALjsAwIU9AIDqvAAArz0AQBs9AMBePQAAersAAEo7AAC1vABgez0AAE69APCzPQAAjDsAQM09AAC/uwDgQD0AQCk9AMDvvACgsb0AgGi9AACqPACAlDwAoA29ACCSvQAAqLsAgC88AGABvQAA+TsAAJm7AEC1PABwgL0AAGK8ACB9vQDwnb0AQJO8AABJvQBAxDwAwCq9ANDnPQAAyzsAQDW9ACB4vQAAuTsAIAM9ACA6vQAAcDoAAJK8AODAPQDAcb0AcI29AIBlPACAJrwAwKC8AIARPACAUzwAABo8AACluwCglD0AADU8AODBvQDA5j0AgEo8AADAOwBAo7wAwOq8AICEPQCAMTwA4AO9ACClPQDws70AIDa9AOBvvQDgCz0AgEE9AADHvABA0zwAwKo9AACcugBARL0A4CC9AGBhvQCAXj0AgM48ACBaPQDgeL0AADW8AICrPACA0zwAAGM9AMDgPAAA/rwAwAK9AIBhPACgLD0AQNM8AIAnvADAXr0AQJ88AAAAPACA3DwAgGc8AAAivQCADbwAgDM8AAAfPAAATjsAgC88AMCPvACggz0A4G49AOBrvQDAvbwAgDW8AOBSPQAARLsA4AQ9AAAQvQDwsL0AYCG9AADgvAAAN70AgIe8AHCVvQAAHjwAQHE9AGCCvQBwub0AAGS8AACePADAgj0AQPs8AAAaOwDAirwAAEW8ALCHPQDAQz0AQJI9AGA6PQAAorsAAF+8AEC1PACAfDwAwNw8AAD+OwAAA70AgEm8AIAGvABgiz0AICg9AMDRPABgPb0AQN28AAC2vACwnL0AEIg9AKCivQDA0rwAAHS7AKAXvQBwmT0AwMw8AOB0PQBAlDwAQGu9AEAWvQDAiLwAAGa7ALDYPQAgFb0AQLs8AACNuwDgPj0A4Hg9AMDwPACAfjwAkIy9AGDOPQAAoDsAgAw9AACMPAAALT0AQL08AOAzPQCAr7wAwP48AIBqvQCgRD0AII49AMANvQAAdTwAQIy9AEB2vQCAMDwAsLq9AIDfvAAgFL0AQCy9AEC7PAAAkLkAwN08AADjOwDAjTwAwCa9AADcugBArL0AYGa9AKBYvQBwhr0AwFc9AKCQPQBAnj0AAGs9AOCGPQAAEjsAgAA8AOAAvQBAqbwAoF49AMBcPQAAqbwA4Fa9AAACvQAgEb0AANg7AIAIvQBgDD0AAKE9AACgOwCAUD0AAAk8AADtPACAFbwA0LQ9AICfPAAgX70AAL+7AED4vADAZL0AgJu9AHCQvQDAwT0AADw8AAAAuADAyDwAoBG9AMCtvADATD0AgBs8AAAFvACAojwA8JI9AOAaPQCAuLwAQJc8AGBHPQDAIL0AAGQ7AAAFPQCAQz0AIAU9AMAMPQDAfz0AoDw9AOAOPQCAn7wAQBM9ACACvQCAGTwAAP88AIBXPQBAmjwAYBo9AEDEPADAQ70AAGg6ACCZvQAAobsAkNG9AIAKPAAAjb0AgOK8AAApvQBgR70AkKM9AIAWvACAurwAgDW8AACVuwAAozsAgG08AGBIPQBAuLwAIIc9AMCMPABA+jwAAGg8AEA3PQDAj7wAoBS9AFCYvQAATDwAAK+7AACRPQCAx7wAACw7AECavABAkr0AQPi8AHDUvQAARrsAAMs8AACNuwDAljwAgKA8AMCavAAAnLwAkMa9ACCRPQAASzwAIEW9AEAmPQAAlLoA4EU9AOAbvQDAIj0AwBg9AADMvADwxz0AAA89AGAzvQAgDL0AALC7AMAiPQAATr0AYCY9AEAMvQDgNj0A4Bg9AHCNvQAwtr0AYDo9AGBOvQBgJb0AwKg8AIDxPADAizwAALu8AGDGPQDAvbwAoLw9AKByvQAAY70AYCw9AKAYvQBAg70AgAK8AIBbPACAerwAAJ67AACrOwCArb0AwK28AKAZvQAALbwAwIk8AEDYvAAA/LsAwF69AAAOPQAAH70AwAg9AACmPAAgQz0AYKI9AACKuwCAv7w=","chunkHash":"ab257b119d424b6ceea701eda26a8f95b7226385fb7d5b211ed76e3bd1bf2971"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef visualize_augmented_examples(cube, num_augmentations=5, output_path=None, show=True):\n    #...\n    if output_path:\n        plt.savefig(output_path)\n        print(f\"Augmentation visualization saved to {output_path}\")\n    \n    # Show if requested\n    if show:\n        plt.show()\n    else:\n        plt.close()\n#...\n```","range":{"startLineNumber":232,"startColumn":0,"endLineNumber":240,"endColumn":19},"embedding":"AACPuwCAkzwAgKw8AICMvADgS70AQNW8AIBAvACABbwAgEe9AAC0PADgAj0AgNI8AABOOwDgvL0A4CK9AGBPPQCAjbwAQNi8AEDevABgPD0AAGA6AADBvABwhz0AYAs9AKBkvQAANrsAgCu9AAByOwCAWT0AgD88AIDEvACga70AwB29AOBLvQAgrr0AAPA6AADtOwAAobsAgFY8AABXvACg8z0AIMW9ACBCPQDAMz0AAHc9AGBoPQAACjwAoCC9AID3PADAYz0AAEM9AIAoPAAA27sAALI7AIC6vACAyjwAwNW8AAB2vAAAYrsAQJy9ABCJPQCAK7wA4I09AMCmPABgIr0AQDg9AAB8vQCAhrwAANQ6ACALvQCAeDwAAIW8AIC6vAAAHLsAACi7AAA6OwAAfr0AMIQ9AACTvABwq70AAA28AAAYOgBAKj0AgCU8AIBUPADQnb0AsMG9AIBGvQCAGbwAwNO8AIAPPQCwkD0AEIG9AACpvAAAXDsAIMU9AADzOwBAgLwAoAI9AEDVPADQgD0AoAO9ACCzvQAAyDoAgFk9AMDXPAAAmDsAQLc8AHCFPQAA8TwAgB88AICOvQCApTwAQA29AAAwvQCA7LwAAOA8AACcOgCAzjwAQN68AOCCvQAApbwAgAc8ABCCvQCgXT0AgLy8AICbPAAA4bwAoCo9ACAVvQAAAL0AIEA9AKBiPQDAer0AgJW8AIBfvQAAnjwAYGY9AABYvACwnz0AYDc9AGB2PQCAEDwAgEE8AMDuvADwkj0AAB69APCiPQAAXjsA4JM9AAC9uwBwmj0AgIk9AEDWvACQnr0AYHK9AECZPAAALTwAAPa8AEBtvQDAA70AwN08AKALvQCARrwAAKy6AICoPACAdr0AQN28AKA5vQAgHr0AADO8AACqvACAND0AoBO9AHDiPQCAXDwAAM68AIAivQAAfbwAACs8AMDUvAAALrsAAJS6AACaPQDgML0AgCe9AAAXPQAAUrsAgHW9AECXPABAnDwAALc8AAAKOwCAjj0AgGY8AODTvQCApD0AACI7AACMOgCAx7wAADK9AHCVPQDAyTwAwJ28AJCGPQBQzr0AoA29AOB+vQBgYT0AwFs9AIDRvACARDwAcK49AAAEvAAgLr0AAKS8AACOvAAwiD0AAKM8ACA1PQCQn70AAI27AAAZvACAEzwAII09AMA2PQDAP70AwKO8AMCFPADAZT0AAP87AACEuwBA+7wAgNc8AOAmPQBAAz0AwJs8AIDEvAAAN7wAAMC4AIDsPACAgLwAAEw8AECIvADgmT0AADk9AABGvQAgMr0AABg8AAAoPQAAUrsAgP88AACsuwBQp70AQOe8AIDZvAAgmb0AAIO7AKBtvQAA3zsAgGE9AACvvQCguL0AAPa8AAClPAAwlD0AIC49AAAQPACAfLwAAHu8AECePQDAbj0AcLs9AMDBPACAyLwAAGs8AAC+PAAAhDwAQNY8AADVOwBAqrwAAAu8AACsuwDAlD0AIA09AIDvPAAA4rwAAKG7AMDwvAAQhb0A4HE9AOB5vQAAtrwAAHu8AEByvQAASD0AgBw9ACBWPQBAljwAYHS9AAAQvQAAn7wAADa7AMC/PQCAJr0AwBY9AADEvABAIT0A4Ho9AGAIPQCAoDwAUJW9AGChPQAA/zsAQC89AABpPABAND0AwBA9AEAbPQDANr0AAC89AGCzvQBAjD0AoEQ9AABovQAAc7wAAI69AOBgvQBAwDwAAKu9AECuvACAUbwAAFS9AEArPQAAHzwA4EE9AABwPACAEjwAgA69AMDnvACgYr0AwOq8AHCVvQAwk70AAFk9AAB8PQAgmz0AAG09AMCMPQAAw7sAAGw8AOARvQBAt7wAgO08ACBqPQCA0LwAAIa8AEAxvQDAEL0AAAA6AADEvACA9DwAUKg9AADkOgBgSz0AQKI8AADnOwCgJ70AYHI9AMDxPADgSr0AAAu8AABNvAAQhL0A4Iy9ADCCvQAgwD0AAKE7AAAIOgCA9TwA4D+9AAB3PACgYD0AgA48AEDQvAAAzjsAUIE9AECcPAAAibwAQPY8AGBaPQDgX70AAIE7AEAIPQCALz0AgJ48AIBPPABgcD0AIDU9AMCiPABACL0AQCo9AMDAvACgAT0AgP08ACBSPQCAgDwAwN48AAAePQAQob0AgHy8ANCgvQCAN7wAkMW9AICLvAAAjr0AQLW8AKA4vQBAaL0A8JI9AOAOvQBAhbwAAEu8AADAOgAAjzsAAIc8AIBYPQAgUb0AsME9AACZOwAANj0AgAA8AMCsPAAAwrsAAJA6AICSvQAALzwAgGS8AHCXPQCAFbwAADs8AMD5vADggb0AYAO9APDrvQAAtrwAQNs8AABYOwAAGjsAwL88AIBYvACA37wAEMu9AEBpPQAA8jwAID29AAA8PQAAwLgAwO88AIAWvADgQD0AIDw9AMAzvQCgzT0AAN08AIB/vQCAAr0AAHY8ACAHPQBgT70AICw9AMAdvQCAYT0AYBA9ACBFvQBQ070AAOQ8AGA5vQAgPb0AgHA8AKAfPQBAjjwA4A69ACDmPQAAIb0AcJU9AEAEvQBAQr0AAEU9AAAtvQDgYb0AAOk7AIDUPACAibwAAPi6AAB3PACgu70AAMg6AABYvAAA9LwAAGa7AAB3vAAAKrsAgIW9ACBFPQBgJr0AIBA9AIAIPQDwgT0AAG09AIC5vAAAlrw=","chunkHash":"c075c1ad35f8dcfe6f3408aa77d38f3d85ea0c9aad4e63b9ec92490f8c7c8497"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Visualize highres texture samples\")\n    parser.add_argument(\"--root_dir\", type=str, default=\"data\", help=\"Root directory for data\")\n    parser.add_argument(\"--class_csv\", type=str, default=\"chromatin_classes_and_samples.csv\", help=\"CSV with class info\")\n    parser.add_argument(\"--sample_ids\", type=str, nargs=\"+\", help=\"Specific sample IDs to visualize\")\n    parser.add_argument(\"--is_cytoplasm\", action=\"store_true\", help=\"Use cytoplasm images instead of nucleus\")\n    parser.add_argument(\"--output_dir\", type=str, default=\"visualizations\", help=\"Directory to save visualizations\")\n    parser.add_argument(\"--cube_size\", type=int, default=32, help=\"Size of cubes to extract\")\n    parser.add_argument(\"--extract_cubes\", action=\"store_true\", help=\"Extract and visualize individual cubes\")\n    parser.add_argument(\"--batch_size\", type=int, default=4, help=\"Batch size\")\n    parser.add_argument(\"--no_show\", action=\"store_true\", help=\"Don't show plots, just save them\")\n    #...\n```","range":{"startLineNumber":243,"startColumn":0,"endLineNumber":253,"endColumn":0},"embedding":"AADMuwAAdLsAEIk9AKAQvQAgL70AYF+9AMBMvQBAMr0AcJi9AABOvAAAyjsAAB48AMCePACQob0AAEy7AOAMPQBghL0AQGM9AAB/vADAvTwAoHY9ACAevQAAlLoAwJ68AED4vABAuzwAgEu8AGA4PQCwpT0AoFK9AJCIvQCA4rwAAKG8AJCGvQAoIb4AAEK9AMCcPAAACz0AAEY9AEC8vADAqz0AQJy9AICkPADgOD0AQOs8AACWOwDA87wA0IG9ADCGPQAA6rsAALC6ALCIPQAA+7sAgBA9ACBjvQAAdrwA8Ki9AMDkvADgQr0AoAG9AKBNPQCAEL0AQAI9AEASPQBA0LwAYFI9AECWvADgLr0AANm7ACAvPQAATDsAAA+8AGBavQAAR70AADA8AACpOwCAXr0AQHg9AGACvQBAxr0AABq8AMCMPABgRz0AAMQ7AACwOgCgVr0AoB69AICWvAAAAzwAgCW9AACwuQAwwT0AwAe9AECAPAAAJLwAgD09AABkvACgVr0AAL08ACAYPQAAcT0AAKO7AACuvQCAPz0AgCU9AECbPACAcDwAAK47AACCOwBA8jwAACm8AGB9vQDgHz0AYHG9AICaPADgMr0AIAe9AACpvAAARLsAgH28AOB8vQBgET0AwJo8AKAtvQAAfTwAAAA7AADBPAAAOrwAoAY9AIDNPADAKT0AANi7AOBPPQDgKb0A4A69AEDlvAAA9DsA4Ao9AAC8vACg9j0AAFM8AABaPQAAJz0AAEI9AAC1uwDA2D0AkOW9ANDaPQCAS70A4JU9AAAyuwAAfj0AgDU9ANDFvQAAqzwAYBm9AOA4PQCATD0AwOO8AIAxvQDAmrwAADa7AIDBPAAAibwAMI69AECzPACAa7wAACA8ANCdvQAA5LwA4Gq9AAAwuwAgPT0A4AK9AOCIPQBAnDwAgJO8AOBTPQCAWL0AQKM8AMACvQBA9rwAACO8AKABvQAAqbwAAKq8AKAUPQAANDwA8Ia9AIDAPACACj0AALw8ACAGvQDQgD0AAEA5AADCvACwkD0AIBs9AKAXvQBA9zwA4AW9AKB8PQCAa7wAQN28AAASvQDwk70AIDw9AIAevAAAsDkAYDI9AKA4vQAA/DsAQAc9AAB2OwBgVb0AgGW8AACcvABAWT0AQJw8AMCpPABA0rwAAPq7AKAsPQDgVD0AQEY9AIB0PACAe7wAoDu9AABwOwBAaj0AYAY9AICiPAAAJLwAkI49AACZOwAAV7wAgMo8AMDwvADA4zwAgCu8AMBwvQAArzsAAP87AEDivABwjj0AADW8AMD/vAA4DL4AAJQ6AIAlvAAAxLsAYBo9AECNvABQEL4AgCu8AOAhvQAAeb0AQMO8AIAfvQCA4bwAoDA9AIBcPAAgJL0AgGO8AECNPABAyTwAAD+8AIADPQAAZ70AQHa9AMBEPQAApzsAYJw9AICmvACAXr0AYJw9AMASPQAA+zwAIDM9ADCKPQBAdb0AAE88AICGPAAggz0AwNA8AACWOwDgBb0AAKk7AIAivQDgeb0AAFw8AADCuwAAzrwAEIy9AOBUvQAABjwAgFS8AEBvPQAARzwA0Ie9AABCvAAA8bwAAIU7AKCCPQCAFj0AwLs8AIBPPABAvDwAAII9AKAePQDA47wAoCy9AOBxPQAASrsAYCo9AKBrvQAgaT0AAJg8ACBaPQAAhzsAYA29AJDZvQBgkD0AAC09AMD0vADAg7wAwGm9AACNvABAljwAwEG9AECWPACgV70AAPS7AMDnPABAJT0AQP+8AADLPADAkjwAQBa9AEBdPQCwnL0AYAW9ANC8vQAAdjwAAPg8AICdPQDgHz0AkKM9ACA+PQDAqbwAwIU8AMDrvABAir0A4EQ9AACLPACgB70AgHe9AEB4vQCAAL0AgF88ABCHvQBAIj0AEKc9AECLvADAbz0A4Es9AKAxvQDAvTwAgIk9AED6PACASD0AAAa9AIDvvACARb0AMJC9AOCMvQBQrT0AYEc9AAAmvQCATjwA4DO9ACAkPQBAwzwA4Di9AABovADAw7wAIGQ9AIBSPACA17wAAP+7AIC1PQCAN70AAHU8AAD4PABgKT0AAHQ7AKABPQBAuj0AgNI8AIDOPABA27wAQF09AOAhvQAANLwAAMA7AIAdPQAAuzwAQI08AIDYPADwtL0AwL48APCovQCATTwAwHO9AMCbvABAmb0AgFy9AECdvAAARr0A4HE9AACbvABA1TwA4D69AIBYPAAATDwAwFU9AKC9PQDgIL0AQLg8AAArPQBAoDwAgFQ8AABpvACgCz0AAD67AEClvQAAODsAAFa8AACGPAAABL0AABE8AABbvACAE7wAQLA8AKC1vQCgTr0AgKU8AOApvQAA97sAAGS9AKBAPQDAUL0AYOa9AECSPQAgcz0AANi6ADC2PQBAgbwAABE9AAAyPABA4TwAAIc9AGA4vQBgdD0AwL28AICaPAAA/7sAwLs8AMD0PABQlb0A4BI9AMC0vAAA8zwAADG8AAD5vAAgrb0AgG+8ACAovQCgJ70AADi7ADCDPQAAJbwAsIi9ANDGPQCAOjwAgJQ9AIB5vQBA3rwAQB09AGALvQCA+LwAADw8AACoPACAd7wAwNy8AADcugDgP70AAMQ8AAA8uwCAX70AYB49ACAiPQDQgz0AAMI8AKAzPQDggr0AAHY7AABAPAAAtrwAAGg9ACBxvQAAwDg=","chunkHash":"209f47f0f58f0c6f3ab1e08e73e541785c0f69de75c52c096a900d18ac63e781"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef main():\n    #...\n    args = parser.parse_args()\n    \n    # Create output directory if needed\n    if args.output_dir:\n        os.makedirs(args.output_dir, exist_ok=True)\n    \n    # Option 1: Visualize contrastive pairs from the dataloader\n    dataloader = get_morphofeatures_highres_texture_dataloader(\n        root_dir=args.root_dir,\n        batch_size=args.batch_size,\n        class_csv_path=args.class_csv,\n        sample_ids=args.sample_ids,\n        is_cytoplasm=args.is_cytoplasm,\n        cube_size=args.cube_size,\n        debug=True\n    )\n    \n    print(f\"Created highres texture dataloader with {len(dataloader.dataset)} contrastive pairs\")\n    \n    # Process two batches of contrastive pairs\n    for i, batch in enumerate(dataloader):\n        output_path = os.path.join(args.output_dir, f\"highres_contrastive_batch_{i}.png\") if args.output_dir else None\n        visualize_highres_cubes(batch, output_path=output_path, show=not args.no_show)\n        #...\n```","range":{"startLineNumber":253,"startColumn":0,"endLineNumber":276,"endColumn":0},"embedding":"AAD9OwAAhDoAwH49AEAevQAAUL0AwIW9AAAvvABA5bwAQGi9AAB0uwAABjsAAEk8AMANPQDQ5L0AgPG8AMAyPQCAHb0AAHM9AIDfvAAAhDoAYFY9ACBgvQAAwTsAQKA8AAAZPAAAA70AANc7AHClPQAwkj0AIAO9AGAsvQCgEb0AwKa8AEBuvQDw2r0AQNG8AACpPACAED0AwPU8AOA9vQAwnD0AwIq9AMDAPADAOz0AwCA9AMAOPQDAgj0AIE29AIB7PQAAtLoAYAu9AJC2PQAA37wAAK67AICVvAAAFLwAEIi9AIDqvADAtbwA4H69ADCePQCAyrwAoDk9AAARvACA0rwAAA49AOBSvQBAD70AAPS6AIC2PADgMz0AgJU8AEDDvADgPr0AQLg8AMCuvADA3bwAwMg8AMDwvAAAir0AAPw7AMBkPQBABz0AgBe8AIDFvAAwqb0AQBC9AECHvAAA3LoAQHq9AECfPADArz0AQMi8AICJvABAqDwAwBg9AADfvAAgVr0AgJQ8AEDYPADASz0AAE+8AOB/vQCAYj0AsIQ9AAAIuwCAoDwAgJA8AAB9PADAQj0A4Gu9AGAbvQCgfD0AwM+8AIBDPQCgS70AQBA9AACrvAAAALkAQCe9AHC1vQCAWzwAgEw8AMAqvQAAYbwAgIK8AMC3PAAAV7wAwJ08AACRPACApTwAAGo8ADCDPQBAK70AQCS9AOCTvQAAAbwAoCI9AACiOwBoCz4AAEo8AIBlPACwgz0AgFQ9AKAKvQCgrT0AoI69AOCkPQDgHb0AYE49AEDHvABA7TwAIFk9ALCgvQAAV7wAYJW9AADBOwDAhjwA4Ay9AOAtvQAAIjsAQO28AOBAPQAAmDwAQL68AAC+PAAAL70AwKQ8AEDBvQBwjL0AgAe9AAACOwAANDwAoIG9AMCiPQAA/TsAIE69AACJOwDAJr0AgLQ8AAAEvQCATLwAgIE8AAARPAAgRL0AwFO9AMCjPAAAFjwAoEa9ACBDPQAArzwAAEk9AABuOwDAEj0AgAW8AIB8vQCQrz0AgOQ8AGAsvQAAcTwAANm8AAClPQAAALsAQLS8AAAlvABQwL0AAP47AABOOwAAALwAwAg9AEDxvABgKD0AAMU8AEDdPADA8rwAwEa9AADAuwAw8j0AwLI8AADJOwBAw7wAALG7AGAmPQCAezwAwFY9AKAhPQAAhbwAADm9AADGPAAA3jwAwAM9AAAuvAAAKLoAwIk9ACAZPQCAJr0AwN88AGCMvQDA1zwAACw8AEC4vAAAJjsAAKg8AMChvADAIj0AAAY8ALClvQAQkr0AAIY7AIACPAAAjzwAgJU8AOAGvQA4Bb4AwA29AADPuwBQib0AAA29AECUvQAAirsAQNw8AEC2PAAgfr0AwK08AEBAPQAAGzwAgLC8AMCsPACgf70AAKe8AIAePQAAXDsAoJA9AACWPADgFL0AgGI9AED/PAAADz0AABc9AEDpPABgWL0AAJO7AEB7PQCgbD0AAFi7AEClvABgnL0AgDa8AOBfvQBAXb0AAM08AIDWvAAArrsAgJC9AECFvAAAVD0AANi7AGATPQBAojwAQJu9AMCfvABAer0AgEA8AFCpPQAAujwAQOw8AABwPAAAOzwAAFc9AIASPAAA7rwAoJK9ADCSPQAASjwAwLA8AAAvvQCgMT0AQK08AMDuPACAILwAAAq9ADCovQAAUT0AABs9AIDdvACAbjwAkLW9AMAjvQAAKDwAAGW8AIBSPADgNb0AAFC7AABsPQAAELwAgFE8AAAAuwAgJD0AALI8AID7PADYCL4AIBS9ACCHvQAAiLoAoF89AADuPQBQhT0AYKE9AABIvADAcr0AQIu8AADTvACAUDwAEIg9AECXvADAlrwAwC69AAByvQAACb0AAOG7ABCGvQAgYj0AkLs9AACxOwCAozwAACw9AABSvQCAIT0A8Jw9AAB+OwDgQD0AgBI8ADC/vQAAlrsAoKO9AEBJvQCwvD0AIDY9AOCevQBgFT0AQFS9AEBVPQAAgLoAQAO9AADUuwAA87sAIGI9AEDFvAAAeL0AAJG8ALCmPQDgnr0AAC47ADCePQAAoDkAgEs8AAD5PAAAwT0AQBk9ADCYPQCAKL0AgBA8ACBUvQBAyrwAoBw9ACALPQAAODwAAPA8AIArPQCAGrwAIDs9AOBfvQAAvzsAcLa9AICKvABASb0AAEO9AIAZPAAAKL0A4Ik9AADsOgCgXT0AAMm8AAADPAAAOTwAQJQ9AICXPQAAQbwAgKA8AGA2PQBA6LwAAEC5AIA5PADAxTwAAI68AIAbvQCAd7wAANM8ACAqPQBAlL0AwNM8AIBwvADgGL0AAKk7AHCfvQDgNr0AQAc9AADQOQAAdrwAgC68ACBgPQAAArsAsJq9AOA9PQCAWT0AALq7AAC1OwAAgTwAgFY9AACkOgDgcj0AgP08AEAIvQDgJz0AAFy8AACbOwCAYzwAgDi8ACAxPQBAgr0AQD49AAAPvADA9TwAgB48AICOvQBgU70AACC6AOA+vQBwib0AgBI8AHCvPQBAlDwAYLy9AOCDPQAADzwA8OU9ACBLvQCAN70AQOE8AAAQvQAAmrsAAOi7AEDdPACAdLwAsIG9AAAfvADgXb0AALI7AABZPADAGL0AQME8AMC2vAAgDz0AIDI9AIBrPQCAU70AQPI8AACWOwBAr7wAoGA9AJCZvQDA3jw=","chunkHash":"b619512f72c84d6c9c9d41da7b08e5729e357804e2ae8651eca336c0eebcb952"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef main():\n    #...\n        if i >= 1:  # Process only 2 batches\n            break\n    \n    # Option 2: Extract and visualize individual cubes from a volume directly\n    if args.extract_cubes:\n        # Load the raw highres volumes\n        raw_dataloader = get_highres_image_dataloader(\n            root_dir=args.root_dir,\n            batch_size=1,  # Process one sample at a time\n            class_csv_path=args.class_csv,\n            sample_ids=args.sample_ids,\n            num_workers=0,\n            debug=True\n        )\n        \n        print(f\"Created raw highres dataloader with {len(raw_dataloader.dataset)} samples\")\n        \n        # Process samples\n        for i, sample in enumerate(raw_dataloader):\n            volume = sample['image'][0]  # [Z, 1, H, W]\n            sample_id = sample['metadata']['sample_id'][0]\n            \n            # Extract cubes from this volume\n            cubes = extract_cubes(\n                volume=volume,\n                cube_size=args.cube_size,\n                #...\n```","range":{"startLineNumber":277,"startColumn":0,"endLineNumber":303,"endColumn":0},"embedding":"AAAsOwCAlrwAIHQ9AICpvADA2bwAgDi9AEDIvAAAIrsAcIS9AADquwCgeD0AAF67AAAKPADAeL0AgJu8ACCDPQDgNr0AABg9AEBnvQAAD7wAgA89AAAQvQAASjsAAOS6AKAzvQAAFDwAgBk8ACB0PQAAcz0AYCC9AMD8vAAAA70AQGa9AGA4vQBIEr4AgCu8AAAeuwBA8zwAAM88AADEuwAg8j0AAFy9AADtuwAAGD0AIMk9AACbPACACDwAALG9AGA7PQAAp7sAQM+8AODBPQCAPzwAgPa8AADqvACAPbwAMLW9AICFvAAAcLwAwKO8AEAuPQAAzLwAQBU9ACAnPQDA8rwAwLk8AAADvQDgE70AAIa7AIDpPADA/rwAABs8AADFvADA97wAAOI8AADivAAAnrwAgBs9AICsvQDgmr0AgMS8AEChPADAND0AAAg8AIADvQCwor0AAGK8AAD7vAAgGD0AwKu9AIA9vABA1T0AAL+8AADWPAAADLsAICA9AMDsPABAQL0AgAA9AMDVPAAARz0AIC09AABZvQAAKT0AYHE9AACcPACAkDwAAFE8AAA6vABAOj0AgHy8AADAvQAgET0AACG9AAAAAAAAfrwAAEE8AABmuwBAUr0AAKm8AODBvQAAxjwAADq8AMAwvQAAP7wAQC+9AAClPQCgDr0AAJU8ANCWPQCgGj0AACA8AGBHPQCQir0AAB88ANCPvQDAUT0AwAQ9AIAKPACQ/j0AAOO8AAA8PABAUz0AQIU8AAASvABgrD0A0KC9AECxPQCA5LwAIEs9AAAevQBQiT0AgHs8APC6vQAAYLwAgPy8AOCCPQBgTz0AAPg6AMC/vAAAQ70AAK28AAC7OwBA3TwAQIO9AADQPAAgJr0AALI7AJC+vQBAUr0AgI68AAAqvAAA1DoA8K+9ACDyPQAAhjsAYGO9AACHPADgZb0AgNU8AGAFvQCAUb0AAL67AADVuwDAZb0AQI08AAABPADA5DwAoE+9AIAaPQCgDD0AQGw9AEDgvACgnz0AgKI8AGAcvQDgZT0A4Ig9AADevAAAgbwAgNm8AKBGPQCAZbwAAAi9AABbPAAgpL0AQOA8AAAWvAAAEDsAQI+8AEDIvADAIT0A4EM9AAA8uwAAN70AgBO8AAAMvQDg5j0AwJU8AGA1PQBA4LwAgOE8AIAqPAAgbz0AIEE9AEDkPACA+bwAQF69AMC9PADgdT0AgHw8AMCZvACARjwAQHQ9AIBePACABTwAAAk8AOAfvQDA0jwAAKm8AEDfvAAA2TsAgPM8AOAkvQAgTD0AAIq7AGBGvQBArr0AAJc8AADEOwCAJjwAwCu9AEALvQDg6L0AwMO8AAB6vQDgQb0AAHC7AOCHvQAA/DoAgB09AABwOgBgcL0AAJg6AACvPAAgPD0AgPI8AAC5PABArrwAwLi8AMCYPACArjwAcIs9AADGvAAA8LwAoEk9ALClPQBAwTwAAME7AABWuwCAAb0AACi7AEDPPADgQj0AAHg8AECOvABAmL0AIBk9AICWvACQlr0AAFE9AAACvQAAwbwAoC69AEA6vQCgFT0AAFu8AACTOwAAmjsAQEe9AEDhvADgDL0AoDs9AHCbPQAAsrsAgDk8AAAEOwCADz0AwBA9AAAsPAAAN7wA4D29ANCIPQAA0DwAQBc9ABCSvQAgNj0AgA09ACBvPQDgT70AQCW9AIC6vQCA2jwAQHQ9AAAJvAAAg7wAoDa9AGAAvQDgJz0AQKK9AADAOAAAvjsAQAi9AIAhPAAAeDwA4Di9AABEPACAfTwA4CS9AIDNPABgkr0AABa8AOCPvQCAfrwA4Bg9AKDEPQCgaz0AwDg9AADQugBgfr0AAIo8AMCNvQDAGL0AQJs8AMCVPACAm7wAgGs8AJCyvQBgYL0AAHW8ANCfvQCARD0AsOU9AAAPPAAAwzwAYHg9AADEuwAAqbsAwDc9AIDmPADQij0AAE+8AHCCvQDAH70AUJ69AMCJvQAgsz0AIBQ9AAAAOgDAhD0AABK8AKAhPQAAmbsAAA68AAA0vADgEj0AICk9AMCvPADAmb0AgOi8AAB7PQCAkr0AQJ88AOA7PQDAQT0AQIi8AMBAPQCgTj0AAJI8AGAgPQDANL0AQLU8AMCQvABgHb0AAF08AEAaPQBgGD0AAEA9AKBPPQCQpr0A4E89ALCXvQDAujwAMMO9AABuOwCASL0AQHO9AADxPACgLr0AUJE9AKBAvQAAIzwAgDG9AMAlPQAALLsAQG89AGCiPQDgO70AwNY8AABYOwBAw7wAADg6AABouwCATjwAwIy8ACBxvQCAr7wAABa8AOAWPQBAhrwAAFA7AIBIvAAgVL0AAOO7AOCGvQDAer0AgHU8AECavAAAbjsA4Fi9ACBvPQAgcL0A8J29AMD3PADAsjwAwHe9AIAvPQAAxLwAgKA8AEDMPAAAUzwAAIE9AED9vADAQT0AoCe9AABTPAAAc7wAANw7AIBFPACAubwAoC89AIB0vADgEj0A4Cc9AACfvADgqb0AYBS9AAAvvADwnr0AQIA8ACBjPQAADLsAwN29ABC7PQBgRz0AoHU9AIBEvQAArDoAsIM9AAACvAAAE70AALm7AMAgPQDAjbwAIDK9AABWPADgw70AAOY7AIA4PAAAb7wAoBs9AADYugDgmj0AAPg7AEDePAAgHL0AgH28AECtvACAczwAUKo9AKAVvQAgED0=","chunkHash":"55ae3c06ba0b997df561a34245de5113d0aac09fdb4f2b6429e20ea757069fd8"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef main():\n    #...\n                min_foreground_percent=0.5\n            )\n            \n            if not cubes:\n                print(f\"No valid cubes found for sample {sample_id}\")\n                continue\n                \n            print(f\"Sample {sample_id}: Extracted {len(cubes)} valid cubes\")\n            \n            # Visualize grid of cubes\n            output_path = os.path.join(args.output_dir, f\"highres_cubes_sample_{sample_id}.png\") if args.output_dir else None\n            visualize_cube_grid(cubes, output_path=output_path, show=not args.no_show)\n            \n            # Visualize 3D slices of the first cube\n            if cubes:\n                output_path = os.path.join(args.output_dir, f\"highres_cube_slices_sample_{sample_id}.png\") if args.output_dir else None\n                visualize_cube_3d_slices(cubes[0], output_path=output_path, show=not args.no_show)\n                \n                # Visualize augmentations\n                #...\n```","range":{"startLineNumber":303,"startColumn":0,"endLineNumber":322,"endColumn":0},"embedding":"AECRvAAAWLwAQKU8AECFvACAL70AgGG9AEClvACgF70A4Cq9AIAgvACgTz0AQOe8AAA5PAAASL0AAOi7ACBePQCgF70AAKy7AOAuvQCAHTwAACg9AAAqvQCAtDwAAGU8AADnvACAVTwAANI7AMARPQCArT0AAP+7ACAWvQBA6LwA4KS9AEBhvQCwCL4AAIO8AIATvAAALDsAkIc9AICMvACw4D0AgKy9AAAPPACANTwAsIE9AAAYOwBAljwAAK+9AGAMPQCAWTwAAOg6ALCpPQCAKrwAALk7AEDZvAAAOTwAcI29AAAmOwAAurwAoBq9AKA8PQCAZrwAwK88AEB7PQAAHbwA4Ho9AGAhvQAAKr0AAII8AMABPQAAfbwAAO88AADLvAAAzLwAAFu8AAA+PAAAXLwAoCg9AIC1vACAi70AwO+8AICKPADgeD0AAMU7AABCvACQl70A8Ie9AAD4uwAAJrsAYFG9AADTOwDgvj0AQPW8AACROwAA/7sAAFQ9AAD1uwDAnLwAQNE8AOAkPQBAjj0AgEc8AKCIvQAgAj0AsIY9AMB9PQDA7zwAgCE8AAAMuwDgRD0AQI88AECbvQCAdzwAgHu8AACDuwAAyDsAgKc8AABHvADAjbwAALy6AJC7vQAAALsAANg6AACuvABAlTwAgAe8AMB/PQAAgrwAgKI8AGBUPQCAH7wAANQ8AEBwPQDA+rwAoCi9AABkuwDAjDwAACw9AGAMvQAQ8j0AAPA6AEAUPQCA/DwA4BM9AACWuwCw4T0AYK29ALC7PQBAqrwAIFw9AIC7PACAVj0AAHI8AIDHvQCA6rwAYFq9ACAqPQCA+jwAgAK9AIA+vQCAO70AABC9AIADvQAADjwAIFe9AAAtPAAAIL0AANg7AJC7vQAgBb0AAA29AAA4uwAAEDsAwEW9AHD8PQAACzwAAB69AABLvADgUL0AALo8AOBYvQCA9bwAACC6AECZPABAjL0AAJC8AEAuPQAAYDoAAGC8AKAHPQCABT0AgGM9AIAMvQBAgj0AgCM8AIBZvQCAoT0AwKg8AKATvQAAnLsAsIW9AIBUPQAAErwAAAu8AAD4OgBAzr0AAII8AID9vAAAtbsAYEk9AAD4vACAuTwA0IE9AADDOwBA8bwAYC69AOAKvQDAtz0AANM8AEC6PADAeL0AAFI8AEABPQCQqT0AcKQ9AIBMPADAHr0AQKi8AIBmPQDgNz0AYBU9AACkuwAAdbwAwB89AIBuPAAANDwAANg8AMDEvADAzDwAAK+8AAClvACAhLwAADo8AEAvvQCwqT0AAM07ACAcvQAwnr0AwN88AIAOPAAA3rsAALE8AACDvAAg+70AgPq8AGAIvQDALL0AgPe8ACAevQBAo7wAoEo9AAAPvQBAcb0AwPm8AMALPQBwlz0AAFw8AOAZPQDgD70AgGO8AIDpPAAAHT0A4KQ9AAAIvADAzLwAoCc9ANCLPQAAMD0AQP88AOAFvQDA5rwAAEC8AMACPQCggj0AADU8AADcuwDgXb0AYD89AGAKvQCgM70AoEY9AIDjvABgJ70A4A29ACBnvQCgEj0AYBK9AEAnPQAAhrwAgGm9AMCXPADA/rwAAPQ6ACCpPQAAh7wAAOU8AICkPADgYz0AUIY9AMCMPAAATLwAYGC9ADCrPQAAZjwAQAE9ACA3vQCQjD0AgFo9AICQPQAAIL0AQAK9ADDLvQCggD0AwOI8AIAgvQBAz7wAAOO8AMDZvACA0zwA4Hy9AACpOwDAqbwAIFG9AKAFPQBAGT0AAH68AAD0OwAA5jwAYBm9AIB6PABwlr0AgO+8ADCxvQDAnrwAICk9ABDlPQBgOD0A4Bg9AOBjPQBAg70AQLE8ACBkvQCgNr0AwKM8AIB0PABgRb0AQP+8AGCOvQDAqr0AAP07AGB7vQBALj0AkNw9AADhuwCABj0AwOE8AIA3vACAKrwAABY9AMAsPQDAmzwAgBE8AGBRvQAgnb0AAJ29AIClvQBAhj0A4D49AIBDvAAAvTwAAGC9AMDLPABAEj0AQLG8AABmuwAAOjsAoC49AAAaPABAcb0AgE+8ALCDPQBAlr0AADo8AKBpPQDgaz0AAOQ7AKBoPQCQrz0AQM88AID8PABgTL0AQPM8AEATvQAARjsAAE67ACBGPQDA8jwA4AI9AICzPACgi70AYGI9AGDUvQAAtDoAgMW9AACtOwBgob0AAJy7AAB3vABATb0AoCg9AABlvAAADbwAAK68AIDMPAAAPjwAoG89ALCbPQAgPL0AcIQ9AABcuwAAcTwAANy6AOANPQDAmTwAAO47AABnvQAAkLoAAIY8AECuPACAdLwAAHQ7AMCPvAAgb70AQLy8ANCPvQDQj70AAOo8AACSvAAAATwAQJC8AADnPACgmb0AEMC9ACA7PQCA5DwAICS9AICmPQAAmLwAABu8AOAuPQAAarsAUJE9AOB9vQBgzj0AQIK8AABcvAAAp7sAgIw8AMDBPADA/rwAAKI7ACAhvQAAZD0AQPc8AOAqvQCA0r0AgJe8AMCRvQCgGL0A4Ak9AGBkPQAAbLwAAJa9AJCqPQCAsTwAMJM9AOA5vQAAA70AgAw9AABjvACgar0AAEC7AKAhPQCAkrwAgBK9AACGvADATr0AwDY9AEADvQDgJr0AIHo9AAAFPQCAGj0AYBs9AKAQPQBgWr0AwLm8AABQOwCAbDwAgFM9AKACvQCAiTw=","chunkHash":"f32424bc3d137a500de5fa25bd9ef6c30c72fcb7c42fd4f276f46e74b4f1d500"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\n#...\ndef main():\n    #...\n                output_path = os.path.join(args.output_dir, f\"highres_cube_augmentations_sample_{sample_id}.png\") if args.output_dir else None\n                visualize_augmented_examples(cubes[0], output_path=output_path, show=not args.no_show)\n            \n            if i >= 2:  # Process only 3 samples\n                break\n    \n    print(\"Visualization complete!\")\n#...\n```","range":{"startLineNumber":322,"startColumn":0,"endLineNumber":328,"endColumn":36},"embedding":"AMDWPAAAKLsAwEA9ACAGvQDAoL0AQFC9AICGvADAC70AgA+9AIAsPAAAKz0AAPI7AADQOgBws70AgC29AFChPQBAab0AALC6AOAuvQCADjwAwAo9AKAZvQBA/zwAgNQ8AADavAAA8bsA4AK9AKBQPQCgcT0AgIy8AEDkvADANr0A4D+9AEBKvQDgFb4AAHw7AACzOwAARLwAYDw9AADVvACg9z0AAKG9AGAPPQDgPz0AMIc9AIBZPQAAJzwAoKO9AAAhPQAA7zwAgFc8AMBdPQAAfDwAABC8AMDUvABAvDwAwDC9AABGvAAAjLwAUJS9AFCVPQCADLwAIHw9AIDlPADAn7wAoGI9AKAXvQCA/bwAAG67AAByuwAAyjsAgGw8AMBkvQCAG7wAAI47AADeuwBgHb0AwOw8AADYuwDAdL0AgGq8AAAKPQCgOT0AgD88AIAyPADAML0AgHW9AGA3vQAASbwAIA29AADauwBg5T0AAE29AAB+OwAA87sA4HQ9AACfuwCACL0AgOk8AIAkPQBAbT0AgBI8AHChvQBA+jwAAF09AECtPADAhzwAIBE9AMDyPABgUz0AgFU8AMCXvQBgRD0AYBq9AABcOwCAabwAICc9AACsugCAGTwAwPS8ADCvvQAAxjsAgFC8AOCEvQCAVzwAQI68AIAmPQAAi7sAgAU9AEDqPAAAYLoAgGs8AFCYPQBgML0AAGS8ACAgvQCAsTwAYG89AIDOvACYAD4AQAM9AGAjPQCgET0AANs8AMCHPAAAtj0A4Iy9ADDMPQAArDsAQIU9AIAVPACwqD0AwDA9ANCAvQCgJL0AAAi9AADIPABAizwAQDG9AIDuvACATLwAgA+8AADYOwCADTwAgCy9AADXOwAA5bwAgEe8AACqvQCgQb0AgHq8AADeuwDAmDwA4Ea9AGAKPgAAGjsAgBG9AADxuwDA07wAIBA9AKANvQCA0rwAAOE7AOAhPQCQnL0A4B29AKB3PQAAR7wAwGm9AMD1PABAvDwAoFg9AADLuwCQqD0AAFU8AGCmvQDgjz0AgFQ8AECrvAAA8LsAICa9AGBmPQBAgzwAAKq7AIBvPACApb0AAMC6AEArvQAA5DwAIAI9AACCvACA5zwAUJg9AADgOQBgC70AwOq8AIBWvACguT0AALo8AEDdPADAdr0AgAA8AADuuwDAFD0AoIg9AIC5PACgHr0AgPW8AECtPACgZT0AgIs8AADOuwCAfLwAoA89AABxPAAAwDgAYA89ACBhvQCAZTwAoBu9AACvuwAASrsAgJw8AID4vAAAVD0AABI7AIA3vAAgU70AAIU7AADSuwAAUrwAwJ48AAC2uwCwB74AAJO8AMDjvADAF70AAGC6AEClvQCAJrwAAFs9AMBjvQAQkr0AQM68AIB/PACwnj0AwMk8AEDcPACAKrwAACC5AADrPADgRz0AkLQ9AABxPAAAi7sAYEc9AKAvPQCA/DwAwA09AOAJvQBAr7wAgH68AAAbPADgoT0AwKo8AADQOwBAZb0AAMU8AAALvQAAPr0AQBA9AMDDvABgab0AgJ+8AKBfvQDAiz0AALw6AICAPQCAPzwAoH69AIB+vADAqbwAABY7ACCfPQDAAr0AwN08AEC+vABAXj0A4J49ACAGPQAASDwAkJS9AICtPQAA7DsAAFw9AEA8vQDAxDwAQDg9AGB7PQDAKL0AAHA8ABCmvQBAXT0AoF49ACAMvQAAkLsAQB69AKBbvQAAMz0AYFu9AAC+uwCAGr0AgBu9AKBKPQDALj0AQL48AAAIuwCADTwAwN+8AAByuwBgpr0AgIy8ANDRvQBgBL0A4FU9APC7PQDAVj0A4G49AKBsPQAgcr0AgGE8AHCJvQBgG70AgAk8AADTOwDgK70AAI68AICbvQDAl70AAPa7AICLvQCAwjwAkN49AIAXvABgDT0AQOQ8AAAKvAAAcr0AIBQ9AOA0PQBAxzwAAJC5AADlvABgTL0AcL29AMCTvQDQpj0AQOk8AACAugDA7TwAwIK9AMCpPACgJD0AABe8AACYvAAA1TsAYFg9AIBEPACgCL0AAKw6AKBtPQCgmb0AAIQ6AMBsPQBgXz0AALw6AOAXPQBAkD0A4CI9AMCDPABgF70AQP88AGAKvQCADTwAwIM8AIDrPAAAmjwAAJ08AOApPQAAdb0AwLE8AMCuvQAApbsAkMe9AAAoOgCgar0AABe8AADwvABgAr0AgDw9AIBOvAAAOTwAoCK9AMCJPAAAx7sA4CE9ABCZPQCgKb0A4JQ9AACDPADAxTwAAEC6AACWOwCArTwAgAw8ACA6vQAAvLoAAP67AGBDPQCAJ7wAAMQ7AACXuwCAeb0AQOC8AKDMvQBAhL0AABg8AAB3vACAtbwAACc8AAC+OwDAaL0AAL+9AAAmPQBgLz0AIA29AAB1PQCAl7wAAMg7AKAVPQDAiDwA8JM9AKBJvQBg0D0AgBo8AGAIvQAAnrwAQJ48AMD4PAAAQb0AwNQ8AAB2vADAZD0AAOo8AMBUvQBA0r0AAOe7AMCQvQCgYL0AwBA9AABYPQCAJT0AoJa9AHDWPQAAZDwAcIU9AGAovQAAKL0AYBw9AICMvABAJb0AAF47AEDtPAAAjbwAwC29AABEvACQp70AgPM8AMBYvQBAzrwAgOA8AIBpPAAgRz0AAMc7AGBGPQDAGL0AAPg6AICQPABgFD0AwFo9AABjvQCANTw=","chunkHash":"5ac045bd302da34caa92e1fc5d8d9940f3e6db15568a3ca5056b40af2ebfc421"},{"text":"File: `scripts/temp/visualize_highres_samples.py`\n```python\nimport os\nimport sys\nimport torch\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom PIL import Image\nimport argparse\n\n# Add parent directory to path to allow imports\nsys.path.append(os.path.dirname(os.path.abspath(__file__)))\nfrom dataloader.highres_image_dataloader import get_highres_image_dataloader\nfrom dataloader.highres_texture_adapter import get_morphofeatures_highres_texture_dataloader, extract_cubes\n\ndef visualize_highres_cubes(batch, output_path=None, show=True):\n    #...\ndef visualize_cube_grid(cubes, output_path=None, show=True, grid_size=(4, 4)):\n    #...\ndef visualize_cube_3d_slices(cube, output_path=None, show=True, slice_indices=None):\n    #...\ndef visualize_augmented_examples(cube, num_augmentations=5, output_path=None, show=True):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":332,"endColumn":0},"embedding":"AAAYvAAAYrwAgEY9AAAkvQBA6rwAAFC9AAAavQBA7bwA4E69AMCavACADz0AAMI8AIBCPADQpb0AgBa8AOBbPQCAU70AoD09AIBGvQAAyzwA4Cg9AIAavAAAHDwAgM+8AADkvAAA5DsAAFg7AOBWPQBgrD0AAJI8AKAgvQAA47wAQHi9AGA8vQDw270A4C+9AAA2OwCAkDwAoCk9AABguwCw0D0AwN69AGAPPQAAhTwAYEw9AIArPAAAbzwA4M29AGB+PQAApTwAgOk8AACHPQCAqjwAAO07AOBIvQAAwzsAAGq9AMCHvABAtjwAAGS8AKA6PQCgAb0AAGE9AADUOwBA3rwAAM08AIBJvQAgR70AQK08AIB0PACAubwAACU8AECXvAAQp70AgGY8AAC0vADgML0AAIQ9AIC8vACghb0AAJg6AACRPAAAPD0AACA9AAAWvABgZL0AwLa9AECcvAAAoTsA0IC9AAD+uwDQoz0AoC69AECGPACAK7wAwIA9AICbPAAgfL0AoFM9AAC4OgAgWT0AwJk8ACA4vQAAZT0AIGY9AAC9PAAA47wAAPi7AAA3PADAVT0AgOK8AEBQvQBA6DwAAFm8AABKOwAA0rwAwJg9AIBlPAAAhrsAAKA8ABCVvQAAJDwAAFa8AAAcvQAA/TsAAIs8AAC9PAAAQLkAYCI9AACwuQCAfDwAgC88AOBuPQDQvL0AgPa8APCVvQCAejwAAOs7AIAGvACw/z0AAGQ8AIAVPQBAqTwAALw8AIByvACgbT0AQHO9ALC6PQAADrsAIHY9AIBvvABgKj0AQCo9ACCqvQAA9LoAgGy9AECyPABQjj0AAGa7AAAZvQAAGDsAABO8AMC1vABQgT0AQNe8AMBTPQDgXr0AAFw8AKBuvQDAn70AoAq9AECvvADgPD0AYIK9AGD5PQCAtzwAoEi9AAAuPACgKb0AgFG8AKA0vQAAIrsAAMs7AACDuwBAjL0AwOu8AEBUPQAAlTwAQKG8ACCcPQDAqzwAYEo9AMD6vAAgSz0AADE9AJCGvQBgpj0AAGQ7AABRvQCAm7wAAIu7AFDAPQBgLD0AABi6ACAEPQCQqr0AAMG7AIDAvAAAgLoAAO+7AMDPvACgNz0A4AA9AOAYPQBAg7wAYBy9AADzvACgnz0AQNI8ACAUPQCApLwAAN+7AAAqOwAAxzwAgCM9AMDCPACAzbwA4G+9ACCTPQDA+DwAACy8AIBlPACATjwAIE49AECjPAAAujsAAL+7ACA4vQCAgTwAgIm8AAAwPAAAfDwAACa7AIA/vQAgQz0AAEo7AEAhvQCAaL0AALq8AADAOwBA1TwAgEW8AACGvACg070AgAG9AAAzvAAger0AAHS9AIDOvAAAVbwAoBg9AADHuwAAYb0AgJ68AEDmPAAA0jwAgMm8AMCkPACAHb0AgLe8AFCXPQBgKj0AAIA9AIBMPABAb70A4JE9AEDYPABAjDwAYG09AAA+PACAs7wAgBS8AECDPACgdj0AQJi8AAChuwAgEL0AQKg8AMBEvQDwo70AALs8AGALvQCAQr0AwBK9AAC+uwAAITwAADo7AKBNPQCAQT0AMIO9AEAZvQDgW70AAMu7AIBBPQAApbsAgCY8AAACOwAAeT0AoFM9AAAFPQCAqbwAADy9ABC+PQAAyTsAALI7AEDzvABgXz0AAOw7AOBuPQBAI70AAA29AODIvQAA2jwAIFk9AACPvQAAULsAQGS9AECfvAAAGjwA4BO9AACUOgAAKb0AgAM8AAAxPQAAhzwAADg8AAAIugBABz0AwBm9AADHOwCAvr0AIFm9ALCUvQAAvLwAUI49AMC2PQBgnj0AIEA9AID4PACgRr0AAHq7AAAqOwDgDL0AIJI9AACpuwAAlbwAANW8AICCvQAAFL0AgA09ABCQvQBAfj0AgMw9AAAAuQBA0TwAIBY9AAC4vADgBT0AAKA8AIDZPACATD0AACS8AIA9vQCgiL0A4Oy9AOAwvQBAlD0AwJk8AADtvACAtjwAAAK9AAAwuwAAJT0AAHe8AECPvAAA7TsAYIM9AABlvACAjLwAgMk8AACGPQAAq7wAAIG7AKByPQCAwjwAAJK7AMC/PAAgOz0AACQ9AEDqPACA97wAAGY8AICGvACAgLwA4Ew9ACCNPQAAez0AoBU9AACfPABgSr0AIAA9AGDpvQBAtbwA0MG9AIAMPACwk70AIGq9AMDPvADgW70AsOE9AAAEvQCAD7wAwJ28AIAgPAAALLwAYIc9AADRPQBATL0AQLQ8AAB6OwCAaDwAgAC9AACEOwBA3zwAABS7AEBPvQAAeLwAYEQ9AGBlPQCAELwAAMg7AABEvABgPr0AgGi8AADRvQCghb0AgBc8AADgOgCAAzwAoAO9AKBDPQBgZ70AEIC9AKAXPQDA5jwAQJO9AEDtPACADbwAgEq8AMDMvACgRT0AwNc8AMD2vAAQjD0AYEU9AAAWPACARLwAwBC9AEA5PQAwg70A8KM9AABzvAAgFD0AwNw8AGAevQDgn70AwM+8AAD1vABAj70AgLK8AACbPQAApLoAALG9AMB7PQAAIDoAAAA+AIAzvQAA3LwAEIQ9AMDRvABAgr0A4As9AKCVPQDAh7wAABS9AIArvADg/L0AwAU9AADnvACgZL0AQO08AMDIvACAGz0AwJy8ANCFPQAAXb0AQO68AACMuwAAvDsAIH49AACsvADA5jw=","chunkHash":"53488dad849ec79d90f3cdb47fcf3f8fc70bdbf0af4f62a567838dad49c34b64"}]},"file:///teamspace/studios/this_studio/scripts/temp/visualize_lowres_samples.py":{"hash":"51405881210b41e291612a766fddead698f04a9d69741ab33b5fdd08b59c4c04","entries":[{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef visualize_lowres_batch(batch, output_path=None, show=True):\n    \"\"\"\n    Visualize a batch of lowres 3D volumes.\n    \n    Args:\n        batch: Batch of data from the lowres dataloader\n        output_path: Path to save the visualization (optional)\n        show: Whether to show the plot\n    \"\"\"\n    if 'image' in batch:\n        # Raw images from lowres_image_dataloader\n        volumes = batch['image']  # Shape [B, Z, 1, H, W]\n    else:\n        # Images already adapted for texture model\n        volumes = batch[0]  # Shape [B, 1, Z, H, W]\n        volumes = volumes.transpose(1, 2)  # Convert to [B, Z, 1, H, W] for visualization\n    \n    # Create a figure for all samples in batch\n    batch_size = volumes.shape[0]\n    fig = plt.figure(figsize=(16, 4 * batch_size))\n    \n    # For each sample in the batch\n    #...\n```","range":{"startLineNumber":14,"startColumn":0,"endLineNumber":35,"endColumn":0},"embedding":"AIBcPAAA+zsAQDY9AMCPvQAwrL0AIIm9AAD5vACA1rwAIC+9AAAcuwCAjLwAgIs9AAC1OwAA2LwAAJA7ANCDPQCA0bwAAGI9AIBGPAAAeTwA4A09ACB8vQCgZD0AAEG8AAA2vAAAxDwAALw8AIA/PAAgND0AQJ88AOBbvQDAvbwAsKC9AOCWvQBg4b0AgCi8AAATvAAAKrsAwJK8AAB0vQBgdT0AgBS9AEANPQAAzDwAcOo9ADCdPQBAgj0AYDq9AED5PABAsTwAAFC8ALgAPgAgFj0AgEm9AAC6OwCAyDwAwNa8ACAdvQBgQj0AgDO8AHCdPQAAsbsAwCI9AGCLPQAgL70AAA49AOA0vQCA+7wAAKo8AIA/PACAV7wAgHO8AAAJvQBAF70AAG28AIA2vACgNb0AQKi8ANAJvgBQyL0AAGy7AADZOwDAojwAABo9AGBBvQCAR70AgDk8AED7vACAHz0AgCi9AEAVPQCgGj0AcIm9AIAePQAA97sAMIo9AABLPQCgzr0AMIY9AABcuwAAzTsA4JY9AMDUvAAA5zsAwKs8AMCHPAAAZTwAADM9AIDcPABA8zwAAL28AKArvQBAizwAYBe9AOAAvQAgdL0AAAs9AIDevACgN70AADu9AOCvvQAA4jwAAIe8AAAQvACAdzwAAHi6AEApPQBAPL0AYBA9AMCFPAAgkD0AAHg6AMCBPAB4Cr4AAB67ABC+vQCAYjwAAOG7AADJuwDgdT0AAKm7AJCHPQBgLD0A4A+9AADguwDQ4j0AIDC9AMA+PQAAOLoAgJk9AIC9vACQqj0AABY9AJDKvQAADb0AAPG8AAAxPQDgEj0AAOo7AAACvAAAVrwAAAK8AMCrPQAAQLoAIDi9AMDCPACA/bwAwJY8AEBtvQDAfb0AAJA6AACwPAAAVz0AEPK9AIDfPQAAsjwAwP68AACguQAAA7wAALm7AICgvAAAPbwAABY7AOBPvQCAd70AAEC8AIBnPADAjzwA4Fe9AED9PACAHb0AQPg8AOADvQDAmTwAAPQ8AABnvQAgPz0AgM48AACmPAAAxLwAQJa8AEBpPQAA8bwAUKW9AIDePADA5LwAQLw8ACAMvQCAhLwAACq8AAAYvQAQoD0AAAI8AACmuwDAxrwAAFa7AAC0vADQtj0AwK48AECHPABgi70AAKy6AAB6vABgGT0AwOw8AAA+uwAA0LwAYLK9AOChPQBAujwAQJ08AMDevAAAJj0AkJ89AADGuwCAHLwAAB47AAAAOgDA3zwAAKA5AADwOQCgBD0AwN48AABgOQBAjT0AAJK8AGALvQDwrr0AgH68AECjvAAAQj0AQJO8AAD4vAAAxL0AQPK8AACcPABQ270AAKW8AKB2vQCAc7wAAOM8AADMOgAA/rsAAPw8AABVPADA4jwAwJU8AAAOPABgOb0AwEk9AOA2PQCAdrwAoHE9AICQvADA77wAwKU9AECOPAAAorwAAC88ACAJPQCAj7wAYAk9AIAQvACAjjwAAAS8AICqvADAj70AABs9AAB2vAAQlL0AAHk9AAAkuwAgU70A4Bu9AACguwBgBz0AAIy7AADQugDAvjwAYIK9AMBzvQAA37wAgKc8ADDvPQAA1jwAAP88AEDsvADAED0A4AM9AMAzPQCAPbwAAAa9AIAtPQDA3DwAADu8AGBJvQDAID0AAGw8AABnPAAA+bwA4IS9AHCTvQAADjwAIBY9AIACvQCgC70AcKq9AICTvACAXbwAkLS9AAAMPAAAArwAgCG9AIAQvACAvrwAgF88AIBnPAAAOz0AgIs8AABeuwCwrL0AALA8AFCHvQBAmDwAAJk8AOBKPQAggz0AQIc8AED2PACAQ70AAJ87AJCdvQDA7LwAAEQ7AEC9PAAA/LsAQN28ANCpvQDgKr0AAI08AAB9vQAANjsAkMA9AADeuwAArzsAgKc8AAAAOAAAkzwAYBU9AADHOwBA6T0AAIO8AKBuvQCAlrwAwMu9AJCbvQBgyT0AQFs9AMCjvQAAET0AoKu9AADAuACgFD0AAHC7AMAwvQCAETwAAKk7AGAdPQBA0rwAwLo8AIAQPADALr0AgB08AAApPQDAPz0AwOg8AABpvADwhj0AIBY9AGAtPQAAr7wAQJg8AEDvvACAOr0AAFg7AEBTPQAA+DsAQBQ9AIDwPAAAKLwAAD67AMDNvACAGL0A0NS9AAA0uwAAwDsAAAm8AACvuwDQk70AMPI9AGB8vQAAFrwAAE08AOCNPQAAArsAwM09AIDQPQAAVbwAAMi6AAACvQAAgLoAAEs8AMC7vAAAgjsAAPO7AADGvADAzbwAYCK9AEDCPADgM70AAMC7AABNvADABr0AIDW9AAAUvQAA27sAoDi9AEACPQCA3TwAQDS9ABCAPQBAsTwAQKm9AABZPAAAIDkA4BK9AEDKPABABr0AACQ8AEApvQBAdz0AwCQ9AACzvABwhD0AQLu8AGACPQAAsLoAQKq8AIC7PADAaL0A4FM9AIATvADgfj0AQNo8AMDkvADA17wAwEu9AADCOwDwmL0AANo7AHC9PQAAdzwAsIm9AABGuwDAjz0AgCs9AICVPACAXbwAwOc8AEBcvQDA3LwAAKS7AIAVPAAAP7wAAG69AID9vABQw70AwC89AGBMPQAAqLoAQL48AIBEvQDwxz0AAJE7AIDXPACgA70AAIm7AIAzPADAUL0AALU9AGAGvQBgUD0=","chunkHash":"2ff301d8242e30068e813d4db9f420e5eb71a26d2bf54fa3088316ad12399c67"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef visualize_lowres_batch(batch, output_path=None, show=True):\n    #...\n    for b in range(batch_size):\n        volume = volumes[b]  # Shape [Z, 1, H, W]\n        depth = volume.shape[0]\n        \n        # Select a subset of slices to visualize (start, middle, end)\n        slice_indices = [0, depth // 4, depth // 2, 3 * depth // 4, depth - 1]\n        \n        # Create subplot for each slice\n        for i, z_idx in enumerate(slice_indices):\n            if z_idx >= depth:\n                continue\n                \n            # Get the slice and remove channel dimension\n            slice_img = volume[z_idx, 0].cpu().numpy()\n            \n            # Normalize for better visualization if not already done\n            if slice_img.max() > 1.0:\n                slice_img = slice_img / 255.0\n                \n            # Convert from [-1, 1] to [0, 1] range if needed\n            if slice_img.min() < 0:\n                #...\n```","range":{"startLineNumber":35,"startColumn":0,"endLineNumber":56,"endColumn":0},"embedding":"AAA0uwAAjLoAAPC6AGApvQAQrr0AoEG9AABCuwAAojsAYIS9AIAUvADAoDwAQEI9AEBVvQAAsbsAAJQ8AFCePQDA/LwAgIA9AACfvQAAgLgAgDM8ABCWvQCAxDwAwLi8AIC0vABA/DwAAAw8AADVuwAgmT0AgHk8AED9vABAn7wAEI+9ABCBvQDw1b0AgH28AEDWvAAACLwAAGo7AICKvAAQqj0AQAu9AAC7PACAhjwAAPM9ALCsPQDA2DwAwG+9AIBUPQAAkLoAgHG8AODRPQCAuzwAACe8AECqvACA7zwAoFu9AMC6vADA9TwAAHu8ABCvPQCA2rwAYDA9AOA4PQAAqbwAICo9AMA0vQDA9LwAgPA8AIAgPACArLwAACe8AADbvACAT7wAAHA8AACIOgDgDr0AgCq8AHDZvQCws70AwKC8AAD8OwCgNj0A4As9AMD2vABgNL0AwNO8AADYugAAK7wAQFW9AAAeuwCgVz0A4Fe9AEAVPQAAzLsAELc9ACBzPQCgUb0AQE09AACwuwCAUDwAAEs9AIA1vQCADzwAYAY9AADWOwDAmzwAQCg9AAA+PACAeT0AALM7AKCvvQAA4zsAEIS9AAAMOwDAa70AwK88AIDWvACALr0AQK+8AJCzvQAAED0AoA69AIB+vAAAFDsAAOw7AAAtPQCAt7wA4DM9AACwOwDAFz0AAFI8AMARPQDA170AgI68AHDMvQCABj0AgCc9AIAhvABArD0AQJw8AECZPQBAVj0AQLm8AEDqvABA/z0AUMq9AGCcPQAAsDsAcKQ9AADsPADQpz0AAPs7ABC3vQCgYr0AwLC8AAACPQAAOj0AAPi7AIDAvAAAj7sAAO+7AFCKPQDAqzwAQDO9AAA2PAAAwrwAgAS8ADCcvQAAk70AgO+8AAACOwCAeT0AsOu9AODLPQDAxzwAYFq9AEDovADAHr0AADE8AMClvAAAuLoAAGa8AAC7OwAgM70AADi8AID2PACAHjwAoB69AEDXPADAibwAoAI9AKBUvQDAGz0A4D89AMB2vQBgMD0AQNA8AADwOQAA17sAgMO8AKBYPQBAjTwA4Fm9AADKOwBgQb0AgNE8AMDkvAAAprsAADQ8AMCDvACQuT0AYFo9AMCsvAAAcrsAACC8AED7vABw3j0AAK27AACxOwCga70AAM67AADUugBgYT0AAHA8AAA+OwCAmbwAYKG9AACtPQAAAD0AQOg8AIBUPAAAAjsAwFg9AACAOADAiDwAAN47AACovAAAcDoAwLu8AIAnvABAAD0AwJo8AMCCvACwgD0AAPu7AABevQCwn70AAL47AMDqvABgEz0AANa8AEBIvQCgo70AAEe8AADivABQxb0AgLK8AOBKvQAASDoAQOU8AIBqvABAaL0AAMY7AIDCPADArzwAQBs9AAANPAAgIr0AAGk8AGBIPQAASDwAoMM9AIBYPAAgPb0AgBA9AID2PAAAALgAAIs7ACBCPQBgG70AAKq7ACAcvQDgEj0A4AY9AMCIvADgY70AYCQ9AABEvAAAuL0AsJM9AIATPADAL70AYAO9AABHvAAA+DoAgAy8AABQvABAzTwAAFy9AADivADA2rwAAPc8AKCvPQAAcrsAgPI8AAAQOgDAeD0AABQ9AGBPPQAAKLoAQEC9AFCQPQDA5zwAgB08AEArvQCAUj0AAGq7ACAcPQCwgb0AwA+9AECgvQBArjwAICs9AIAHvACAAbwA0I69AKA7vQAAyzwAwMq9AABqPADA5rwAwOa8AAALvAAA5bsAANW8AABEPACgRD0AABa9AADNOwBgiL0AAFK7AKCFvQAA9LsAYHg9AID+PADQij0AQNE8AMDIPABgX70AgPU8AMBHvQAgR70AAJA6AAAKPQAA4zsAgBM8AKC8vQCwmL0AQAw9AACZvQAABDsAwMo9AIDHPABA3zwAwJQ8AEAlPQAAwLsAgGs8AADpPADw6D0AQJe8AIBZvQDgIr0AsLi9ACC0vQDgkD0AIDQ9AKB4vQBABT0A8IK9AACAPACAgD0AAJQ7AABBvAAAsrsAwJA8AGBtPQDge70AgBE8AIDbPAAAorwA4A09AEAPPQDAJD0AoAE9AABkOwDgpT0AAJk8ACANPQAAIDoAAK48AMAOvQCApbwAANS6AIA2PQCAAz0AADM9AEACPQAgfr0AgE08ADCRvQAAyrwAYKC9AACRuwBARL0AANS7AICDvAAwnL0A4Lc9AIAevQCAgbwAAP+7AACOPQAAm7sAUKM9AACLPQBAIL0AQL88AADauwCAZzwAgFC8AAAmOwAAhDsAwLK8AABSvQCAtLwAoDW9AMAjPQCAHLwAABi8AABguwCAar0AkJK9AACRvQAASLwAACC5AABYOwCAijwAwIG9ALChPQDAp7wAQKe9AECiPAAAADoAIDS9AEBFPQDATr0AgD08AEAjvQCgCz0AYBo9AIA3vQCgnT0AAGi7AICbPACAdrwAgD+9AACAOwAADb0A4DA9AIDqvAAAfD0AgIA8AKB8vQCAzbwA4Ci9AAC0ugBArr0AAMy7AIB1PQCA/bwAAJm9AIAOPABgtD0AoKI9AADoOgAAr7wAoAA9ANChvQCAZ70AgA28AACvPACAfbwAQO+8AMCmvADgxb0AQFc9AEDEPAAAXrwAoA09AIAwvAAAZT0AwJO8AABWPQBAAr0AANk7AADIOwCAtrwAMKQ9AIA2vABAJj0=","chunkHash":"220a1d80ee6a611dbf0effe465b6a2b2fdf9e324522b813f9045df9063cc16ab"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef visualize_lowres_batch(batch, output_path=None, show=True):\n    #...\n                slice_img = (slice_img + 1) / 2\n            \n            # Create subplot    \n            ax = fig.add_subplot(batch_size, len(slice_indices), b * len(slice_indices) + i + 1)\n            \n            # Display the image\n            ax.imshow(slice_img, cmap='gray')\n            ax.set_title(f\"Sample {b}, Slice {z_idx}\")\n            ax.axis('off')\n    \n    # Add metadata if available\n    if 'metadata' in batch:\n        metadata = batch['metadata']\n        if 'sample_id' in metadata:\n            plt.suptitle(f\"Sample IDs: {metadata['sample_id']}\\nClass: {metadata.get('class_name', 'N/A')}\")\n    \n    plt.tight_layout()\n    \n    # Save if output path provided\n    if output_path:\n        plt.savefig(output_path)\n        print(f\"Visualization saved to {output_path}\")\n    \n    # Show if requested\n    if show:\n        plt.show()\n    else:\n        plt.close()\n#...\n```","range":{"startLineNumber":56,"startColumn":0,"endLineNumber":83,"endColumn":19},"embedding":"AEDaPACAo7wAAHK7AHCPvQCwk70A4By9AAAjvABAmrwAAJu9AAB0OwDAzzwAYGQ9AMA7vQCArLwAAGu8AOBcPQCAxrwAQII9AIA6vQCA/DwAgHQ8AOBSvQCArjwAQNC8AIB6vAAAuDwAAKa8AACAOQBAfT0A4CU9AADkvAAAcbwA4Ke9AHCNvQDQ770AgHu8AACIuwAgZb0AAJw8AMAxvQDwgT0AoIW9ACBoPQBAuTwAANA9AOBlPQAgAz0AII29AAAFPQBA8TwAAKo7ANDGPQCAWD0AAIC4AICuvADgMz0AoC69AADxuwAACD0AgGO8ABC3PQCAmbwAEKo9AMAsPQCAK70AQGo9AABcvQBA/rwAAAY9AMARvQCALbwAgCu8AADUvACAuLwAwIe8AAAmPABAf70AAJ47ANCQvQDgz70AADA7AEDRPABgbj0AQKg8AADYOgDA6LwAQLa9AADzuwAAbjsAQCW9AAAyOwAwkj0AkIK9AIAXPQCAFLwAQM49AMDAPAAAUL0AAOU8AICAPACASD0AQJk8AMBVvQCAPjwAAKQ7AACMuwAAIDoAgDQ9AABcPABAYj0AAPi7ANC/vQBAJz0AAAW9AIBjPABgnL0AgDM9AICxvADAyrwAABS7ALChvQAAwDwAoHC9AIDDvAAAkbwAgB08AMAdPQCAy7wAgJw9AADKuwAgID0AAOE7AKAWPQDQyr0AAHy8AFC4vQDgNj0AYA49ACBQvQBAlD0AwCU9AHCTPQCASTwA4A+9AABfvADg1T0AENK9AEBmPQAASLsAkLg9AIA9PQDAsT0AQOI8AFCZvQCgg70AwCK9AAARPQDApDwAQOu8AIBZPACAZDwAgC28ACCRPQDAhDwAoCO9AAAmPACADLwAABM8ALCRvQDge70AwIK8AAAAOwDAQz0A4MK9ADCgPQAAAD0AYFi9AEDXvABgLb0AAHI7AOAbvQAAs7sAADe8AADeOwDAJL0AoIW9AKBCPQAALjwA4Di9ACAvPQAAFLsAQAI9AIBQvQAA5LoAIF49AMBcvQCgaj0AAP+7AAApvAAA0jsAQNK8AECiPQAA07sAgF68AICsPABAVL0AAHC6ACChvQCALbwAALY8AIC4vABAlD0AIE89AICvvAAAkLoAALq7AECdvAAw1T0AAIw6AAALPACAYr0AIGG9AACDuwAgeT0AIDU9AIDHPACAfLwAgKW9AOBQPQAAarsAICQ9AADJOwAA2jwAwCQ9AACVuwDAAj0AgG08ACAqvQAAlLwAgKq8AECyvADADz0AgE08AAC7uwDwpT0AQLC8AIBPvQCwsr0AADC7AMDyvACAZTwAgK68AIDevABw+L0AAHm8AECnvABglb0AgJ28AGBXvQBAtLwAAEA8AIBgvABgfr0AgBc8AADPOwCABT0AwPM8AMCbPADA87wAwIU8AAD6PACACj0A8JE9AMDaPAAgG70AgDw9AMDNPADAyzwAAMA7AADPPABgBb0AgPG8AABQOgCAGz0AwPQ8ACAXvQCQoL0AALw6AACrOwDAX70AAEk9AAB0PAAAKb0AgCW9AOASvQBAjTwAAIM7AACPPACA2DwAYFG9AACxvADgN70AALQ8APDDPQAAUjsAANC5AABjvADglT0AgFI9AMAhPQAgBL0AoIi9ACB0PQAAKzwAANM7AADUvADAFj0AwKs8AIA2PQDgE70AgLO8AIBzvQBA1DwAoGE9AKAkvQAAOjsAgJu9ACCUvQDANT0AQFq9AEC1PAAgAb0AwNW8ACAFPQAAuLsAQNM8AAClOwCASz0AQO28AACEOwAwur0AgHO8AHCrvQCABbwAgAY9AOADPQBwkz0AgFw9AMDYPABgrL0AIH09AAALvQAgU70AAGQ8AEDmPAAAXrsAACO8AADJvQDwg70AAA09AMBfvQAA5DsA0NA9AIAAPAAAtzwAgIs8AABWuwCAKr0AwDg9AGAVPQDAyD0AgDM8AOCFvQDgIr0AcM+9AMCwvQAgmz0AYGU9AMCBvQBgBD0AAMm9AIDGPAAAfj0AAB48AABaPABAhDwAwIE8AOAEPQAAG70AQIE8AEDMPAAAUbwA4AI9AADHPADgQj0AgEg9AADRuwDAoD0AwKE8AIC3PAAA07sAAN87AAAZvQBA8LwAAFW8AIAqPQDArjwAwMQ8AGBCPQAgG70AgAO8ANCCvQBAvLwAcK69AIAivABATL0AQMi8AMDMvABgib0A0MY9AMABvQCAoLwAAOe7ABCJPQCAG7wAYO89ADCFPQDAj7wAQLc8AADAOQCAKjwAAMi6AABUvAAA6DoAwLe8AADnvABA1rwAAKG8AIC1PADA27wAAC68AADUuwAwhr0AIGO9AKCJvQAAWzwAgNq8AIBZPADAiDwAADC9AKBQPQAAHbwAkJO9AIDWPAAAojwA4CO9AMCbPABgc70AAKY7AIBKvQBgKj0AALE8AACXvAAw1T0AAEo7AIDvPAAA9rwAgPy8AECiPADgB70AICA9AIAcvACAXz0AAOo8AOBxvQDAwrwAQM68AOAzvQDwm70AAH28AGApPQAA8rwA4Eu9AAAePQCAmzwAgJU9AIC5PAAAobwAgPw8ANCbvQBASb0AACC7AEAnPQAAb7wAQEK9ACADvQCAkr0AYDU9AMCHPABAxrwAAKQ8AIB8PACgRj0AAHe8AKAuPQBgS70AgHs8AAD/OwAAGrwAgHY9AAC8ugDAszw=","chunkHash":"40f0adf236a52ab80fdffd9ea050c3094e054e6c4f875ea7139c2377af5912b5"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef visualize_lowres_3d(batch, output_path=None, show=True):\n    \"\"\"\n    Create a 3D visualization of a lowres volume.\n    \n    Args:\n        batch: Batch of data from the lowres dataloader\n        output_path: Path to save the visualization (optional)\n        show: Whether to show the plot\n    \"\"\"\n    try:\n        import matplotlib\n        matplotlib.use('Agg')  # Use non-interactive backend\n        from mpl_toolkits.mplot3d import Axes3D\n    except ImportError:\n        print(\"3D visualization requires matplotlib with 3D support.\")\n        return\n        \n    # Get the first volume in the batch\n    if 'image' in batch:\n        # Raw images from lowres_image_dataloader\n        volume = batch['image'][0]  # Shape [Z, 1, H, W]\n    else:\n        # Images already adapted for texture model\n        volume = batch[0][0]  # Shape [1, Z, H, W]\n        #...\n```","range":{"startLineNumber":86,"startColumn":0,"endLineNumber":109,"endColumn":0},"embedding":"AAANPAAAiTwAQHM9APCZvQBAkr0AYI29AIAjvACAoLwAAAe9AACruwCANbwAIIY9AIDpPAAAh7wAwJ28AOBrPQCAoLwAAMw7AIBWPACAcTwAwA49AIAPvQDQnj0AAI28AIAHvABAuTwAQKE8AMCZPADAnDwAAPA6AOAgvQDAyrwAwKG9AMBlvQBA6b0AAAAAAADougAAOjwAgCO8AMBgvQAgYT0AwPe8AHCMPQBgBz0AeAc+AHCAPQAgaj0AwKa8AAASPQAApzsAwMi8ADDjPQDwiz0AgL28AADNuwAAgjsAQB69AKBYvQCgBT0AAPo7AKCLPQAAFrwAgMY8AECJPQBgX70AAOw8AADEvAAA47wAAEg7AADsPAAAQL0AAKy7AMC5vACAAL0AwKm8AAALvAAgUL0AwNC8AIAAvgCwj70AgD28AIBJvAAAfDwAIF49ACBsvQBgNL0AgLo8AGAtvQAA/DwAwHC9AIANPADA5zwA4H69AMBvPQAAtDsAUIY9AKBhPQCAkL0A4Iw9AIAHPAAAjbwAgJI9AACJvAAAhDoAQCk9AADDPAAA37sAAK08AKAjPQCgbD0AAO68AADOvAAAOjwAAD29AIBRvQCwhb0AgNU8AIDnvAAAJL0A4DO9AHCnvQCAuTwAgCK8AAAAuQBAEj0AgGe8AABGPQCAfb0AAAg9AMDVPADQuD0AQMM8AEDJPAAwBr4AgFi8AMCkvQAApDsAgNG8AAAGuwAAiD0AAEO8AOBZPQCAOj0AIEO9AIBAPABw7T0AAO+8AGBiPQAAmzwA0JY9AIDBvABQ+T0AoBw9AIDbvQCgF70AQIG8ACBOPQAgFD0AYA89AEA0vQBA8rwAAD67AIDDPQAALLwAAMi8AMD6PACAgLwAgMU8AKA0vQBgbL0AABo8AACHPABArjwAkMS9ADD3PQAAWTwAIF69AAASPADAsjwAgB88AMDCvADAurwAAHQ7AKBHvQAAKr0AAOs8AAAouwAANTwAgCO9AEDkPADAcb0AYCU9AKANvQAA8jwAoBQ9AKAivQDwgz0AAAw9AKBgPQCAcLwAAIU7AMAbPQCAcr0AAI29AGAtPQAAT7wAIAw9AGBDvQAA/rwAAAy7AMALvQCgFz0AANI7AACPPACAirwAAGY8AED3vACQhj0AAIc8AMCaPABApr0AALA8AAB+vABAhDwAIBQ9AMCjvACAfLwA4Jq9ANC0PQAA7zwAADU8AICGvAAgIz0AUIA9AIAhPACANzwAAAC6AADrPACgRz0AgDs8AADzPACA8DwAgBg8AADhuwAgZz0AgNi8AMAAvQDQlL0A4Am9AADZvAAAZz0AACi9AIAhvQDQr70AgLa8AMCKvACQ1b0AgOe8AGBbvQAgK70AwNQ8AIB+vACAMLwAwB49AADtOwAAHD0AwKA8AABXPAAAOr0AoEY9AKA4PQDgHL0AYEc9AADSuwDgAb0A4IE9AIAPPABAtrwAQMU8ACBrPQDAMr0AAEE8AAC0ugAAADgAAM67AAAEOwBAWL0AAL88AIDovADgt70A8J49AMCZvABwlL0AQIy8AAAlPABA5jwAAFG8ACAKvQCAGTwAICC9AOAivQCANDwAAOw8AAD1PQAAYjsAIDM9AIAkvACApjwAoFY9AEBUPQAAT7wAAMi8AIAJPQAAszwAAEa8AGAJvQAgVD0AQJU8AABOPAAgGr0AQKG9ANCvvQCAWDwAAJS6AMDKvADA0rwAIJ69AIBjvADAqLwA4MS9AIBBPACAnbwAwCi9AOAhvQCAbrwAALw6AKAAPQAAmjwAIAA9AAD8ugCwjb0AIBc9AACevQAAPzwAgAI9AAD9PADAiz0AgHs8AEB7PQCgYr0AANc7AOBrvQCAUr0AgDS8AMA1PQAAPjsAwMW8ABCzvQBgJb0AADk8AACIvQAAOLsAoH89AAApvAAAgLkAMIA9AADhuwAA1LsAwJQ8AABLPACgwz0AAFi7AJDOvQAAHbwAkMm9AECjvQAQ4z0AAHk9AAAlvQDgHz0AYJ69AAAquwCA8zwAAOC5AGAnvQDAiTwAwCY9AOAfPQCAq7wAwIA8AMAMPQDAfb0AgC28ACB/PQAAKD0AgNs8AACtuwDA1jwAoCs9AGAWPQAA9LwAAKE7AAB8uwAgKr0AgCY8AKAWPQCAMTwAAPs8AEDqPAAAFLwAANw7AAAMvQBACL0AAJa9AACeuwDAkzwAgEq8AMCsvAAgZb0AQNQ9AEBavQAA0bsAoFE9AABFPQAAFTwAUMs9APDKPQAAeLsAwKo8AOANvQAAl7sAAL08AEAevQAAVTwAALO8AAC1OwBAfr0AABe9AAALPQCASbwAAGK7AAAaPADgJ70AQAW9ACAmvQDAm7wAQM68AAD0PAAAXzwAgIm8AMAkPQAACDsA0JS9AABcPABApzwAwFW9AIBVPACA47wAAPC8AIA8vADgJD0AYA89AICOvABAcD0AgKq8AAChOwBAlTwAgAG8AECjPABgkL0AwD89AAAqvADgpD0AoD89AEApvQDAAr0AAGW9AABeuwDgdb0AAEA8AADrPQAACLsAgG29AIBbPACgXT0AQPI8AADPOwBA67wAQMM8AIBuvQCAdrwAABi6AMCjPAAATrwAoC29AKBBvQCw570AQCo9AEB4PQCAQzwAYCg9ALCKvQDQpT0AAGo7AADtOwCADb0AABi6AADtOwBgD70AEKk9AEDrvACAdT0=","chunkHash":"79254a02f7e6519a1df8615178ce18ac976ad64e3508b5282423d99cfa6064c6"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef visualize_lowres_3d(batch, output_path=None, show=True):\n    #...\n        volume = volume.transpose(0, 1)  # Convert to [Z, 1, H, W]\n    \n    # Get volume dimensions\n    depth, _, height, width = volume.shape\n    \n    # Create coordinates for plotting\n    z, y, x = np.mgrid[:depth, :height, :width]\n    \n    # Create thresholded volume for visualization (binary mask)\n    vol_data = volume[:, 0].cpu().numpy()\n    \n    # Normalize for better visualization if not already done\n    if vol_data.max() > 1.0:\n        vol_data = vol_data / 255.0\n        \n    # Convert from [-1, 1] to [0, 1] range if needed\n    if vol_data.min() < 0:\n        vol_data = (vol_data + 1) / 2\n    \n    # Threshold to create binary volume for visualization\n    threshold = 0.5\n    vol_binary = vol_data > threshold\n    #...\n```","range":{"startLineNumber":109,"startColumn":0,"endLineNumber":131,"endColumn":0},"embedding":"AAAIvACAujwAwMw8ACAevQAAjb0AMIe9AAAIuwAAAjsAcJ+9AADROwAADLsAoEc9AEDWvAAA/TsAAIW7ADCNPQAAFL0AADk9AAD1vAAArjsAAIU8AGBNvQAAXz0AgOq8AKADvQCAdTwAACQ9AAAsPACAaT0AQLg8AIBEvQAAy7wAgLW9ADCJvQAg9b0AQNa8AAD1vAAAkrwAgMY8AKAQvQBgRT0AQDK9AMAQPQDA8zwA8Lw9AJCWPQCAnzwAoJK9AACLPQAAHDsAgAK8ABDXPQAgSD0AANw6AAA/vABgMD0AgHi9AADDvACAzjwAgKC8AACpPQBA37wAYAw9AMBnPQAAQrwAoB49ACAfvQDAD70AwOE8AICMPABA97wAAKi6AEDuvAAgA70AAHo8AAAiOwAAOL0AAG28ANDZvQBgi70AwOu8AMCivABAPj0AQOs8AMBJvQBAe70AAPy8AEDqvABAzbwAIEm9AECGvABgNz0AgBG9AOBIPQAAObwAsLc9AMBCPQBger0AIHA9AIB/PAAA8jwAoGM9AGACvQCAljwAgDQ9AACtPAAAHDsAwKQ8AIAFPADgmT0AANC6ABCHvQAA+LoAgAG9AAD4uwDgg70AgNM8AAAkOwDA97wAAOa7ANCgvQCAtzwAgNq8AMAVvQAA7TsAAHQ7AGA5PQBAQL0AYAU9AEAFPQCAAD0AgK48AKA4PQBA3r0AQLO8AJCovQCA2DwAwOs8AICLPACQ0z0AADs8AACaPQCgST0AwAC9AEAuvQBYAD4A4Ia9AOCKPQAA8DkAoHA9AABqOwAQ3D0AAAw9AIC0vQCAU70AgPy8AJCWPQCgmD0AAFA7AECZvABA6rwAAA48AIB5PQAAIDoAAES7AAD8PACAFLwAAB88AGBSvQDAeb0AAPK7AIDJPADA+TwAEAW+AIDbPQCA+zwAYEC9AIAyPAAAXr0AQIs8AICovABAm7wAACm8AICKvADA7LwAADS8AEC5PADA0DwAgFa9AIAIPQAA+DoAAAM9AMDXvABAVT0AAC49AGA8vQDAXz0AgJk8AACMuwCALrwAAOW7ACBQPQCAFLwAgBy9AAAauwDAP70AIAo9AIBBvQDA1LwAACo8AAD1vADAdD0AgBw9AAAavABA/LwAACQ7AABAOQDAzj0AwKI8AIAUPQAgTL0AABC6AABIOgCAnjwAwOI8AAASOwCAsbwAwIi9AEDGPQBA1DwAQAQ9AIC6PACAIDwAoCA9AICrPACAKTwAAPo7AAAevACALTwAAAu8AACoOwCAFz0AwP88AACIuwAgQD0AwP68AAAavQDAnL0AwKO8AACQuwAA/jwAwJy8AKA5vQAgqL0AALO8AMCfvABwur0AgPi8AIA3vQBAh7wAQNA8AKASvQDAK70AAIO7AMDOPABAFz0AAA89AABdPABgL70AgHg8ALCRPQCAObwA0Lw9AAC+uwBgVb0AwDo9AADwPACAxTwAAOA8ACAWPQDgHr0AAJA7AACdvAAAILoAAHw8AADZvAAgcb0AoDM9AIAEvABA7L0AIJA9AAA2uwDAf70AgKm8AABSvAAAyjsAAN47AAC9vACA1TwAEIC9AIAmvQBAsrwAgNA8AEDLPQCAHbwAQLc8AADOuwDgQT0AwDg9AIAiPQAAx7sAQBW9AOCDPQBAxzwAAGA5AAA5vQAAdD0AADi6AMDtPADApr0AAGi9AODJvQBABD0AAMo7AAAqOwAAi7sAsJq9AMDrvABA5jwA4PS9AADFOwCADb0AQMi8AABLvAAAijsAAJK8AIByPACgRz0AAD29AACQugCwqL0AQOO8ACCavQCAk7wAMI89AIDJPACQmj0AAKI8AIBpPQAARb0AALE7AOA1vQDgHr0AgIc8AOAPPQAAADsAAH47AGCbvQDQkb0AAAw9ABCnvQBA0jwAkLw9AIBXPACACTwAYAg9AADkOgCAj7wAAIw7AIDPPABAnz0AwNC8ALCKvQDAJ70AEOG9AMDEvQDAqz0AAGs9AOBOvQBA6jwAwEK9AICGvABAzDwAACo7AACzvACA0zwAoAM9AICGPQBAS70AAAA7AEBsPQCAGr0AAIE8AKBqPQAgRj0AAOA5AICBPADgjj0AABI9AIAvPQDAyrwAAAM8AECTvABgGr0AABE8AEAyPQBgIT0AoEc9AABoPQBgY70AgLo8AOBivQAgC70A4Ke9AADoOgDA2LwAALy7AACwuwAAnr0AkJ49AKAxvQAA3rsAAKQ7AIB9PQAA4rsAcLw9AABKPQCAsrwAgM48AEDxvADA6jwAAEi8AIAKvAAA2DwAwLe8AMDHvABgJ70AwN28AAB9PQAAIDsAgNW8AIAFvADwrr0AICm9AEAovQAALbwAABy8AAB0PAAgJz0AAC+9AMBtPQDAy7wAkK69AIBqPACAUjwAgEm9AADoPABgJ70AAIC7AAAsvQBApjwAAOo8AICJvACghz0AAMy8AADaOwAAwDkAICG9AIANPABA+bwAICc9AAC7vAAgpD0AAO88AIAwvQAA7bsAANy8AAAqPAAAfL0AgE+8AADBPQCAKbwA4JC9AMAJPQBgrj0AIJU9AIBbPAAApbwAAPg8ADCHvQDgD70AAKQ6AADzPAAAfrwAANu8AGALvQBwxL0AYE09AEAdPQAAeLoAADk9AEDcvACghT0AALa8AIDhPADAt7wAAKA8AAAeOwCgCr0A8Lw9AICCvACgBz0=","chunkHash":"842d11f630c122c553d86ead4f46840f3b73c53da53be985a5327af58918d9f2"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef visualize_lowres_3d(batch, output_path=None, show=True):\n    #...\n    # Create coordinates for visualization (points where volume is above threshold)\n    z_coords, y_coords, x_coords = np.where(vol_binary)\n    \n    # Create figure for 3D plot\n    fig = plt.figure(figsize=(10, 8))\n    ax = fig.add_subplot(111, projection='3d')\n    \n    # Plot the points\n    ax.scatter(x_coords, y_coords, z_coords, alpha=0.1, s=1, c=vol_data[z_coords, y_coords, x_coords])\n    \n    # Set labels\n    ax.set_xlabel('X')\n    ax.set_ylabel('Y')\n    ax.set_zlabel('Z')\n    \n    # Add metadata if available\n    if 'metadata' in batch:\n        metadata = batch['metadata']\n        if 'sample_id' in metadata:\n            ax.set_title(f\"Sample ID: {metadata['sample_id'][0]}\\nClass: {metadata.get('class_name', ['N/A'])[0]}\")\n    #...\n```","range":{"startLineNumber":132,"startColumn":0,"endLineNumber":152,"endColumn":0},"embedding":"AADAOACAizwAgDw9AKB8vQBwmL0AIGm9AAByvAAAa7wAAKC9AAAWvAAAMzwAYE49AMCDvAAAabwAgEu8ABCqPQCgFL0AIHI9AADuvAAAwDwAwJg8AEDPvADAZT0AQBG9AIC3vACAIDwAgA08AAA9PQBwhj0AALw8AACYvAAAtrwAsKy9AOAzvQBYBb4AAGi8AAD4OgDAOr0AgIM8AMCCvQAgJj0AwBa9AKBHPQDAFj0AkJI9AECGPQCAhDwAwIq9AOCQPQAAwDwAAMo7AGDfPQCART0AALq7AICnvAAAxzwAwCi9AIAdvACgIz0AAMO8AKCVPQBA97wA4GU9AGB2PQCAIr0AoA09AOBPvQAgJr0AAEY9AACauwCAVLwAgL48AICGvAAgF70AQIC8AMCWvACAm70AQIK8AADevQDQrb0AgJm8AMCSvACALT0AQJY8AOABvQBQib0A0IK9AACavACARrwAwDC9AIAEvQCgMD0AQFq9AOALPQCAUrwAQMY9AOA9PQCgtL0A4DQ9AADSOwCANjwAoEE9AACrvAAAgjwAwAs9AMCLPAAAZjsA4Cs9AACAOAAAcj0AAFi7ACByvQCAKrwAAKy8AICMvACwn70AQKg8AACAuADAkrwAALS6AGC6vQCAAT0AQN+8AMCYvAAArjsAAIo8AIAfPQDgGL0AABI9AACvPAAgJj0AAEK7AMBHPQAA670AwIi8AECUvQAAIzwAgAE8AIAXvABAsj0AwOQ8AMB5PQCA6jwAYB29AACJvAAg4D0A0Ka9AABPPQAAFjwA0IE9AACoOgDAzz0A4Dg9AOCkvQBAGr0AAMi8AACOPQDgbT0AAIq8AIA/PAAA6jsAAPC6AMCGPQAABLsAAI68AACsPAAA9bsAgBM8AIBtvQDwiL0AgIK8AACHOwAgPz0AEOi9AHDjPQDA0DwAIBS9AADkOwCAGr0AAKE8AAC9vADAzbwAgAO8AMD0vABAO70AQI68AAC4PACANz0AwC+9AABdPQAA0DkAwKY8AIBrvAAAijwAgP88AGA6vQDgMT0AAL48AIBmvAAAfLsAgEm8AMCGPQCAbrwAwP68AACVuwCgTb0AgAg9AECuvQCgE70AgOw8AMADvQCgPj0AgCc9AAAquwCAvrwAADg7AACtuwAQtD0AgPc8AABnPADgUr0AAOa7AIARvACAujwAgAo9AACguwAAabwAYFK9AICbPQAAETwAIG09AIBuPADgFT0AoHQ9AAAmuwAABj0AgLE8AMDCvACAETwAADu8AADIuwBAET0AwJ88AIDFPABgcz0AQA69AKAKvQCQq70AAEO8AAAuOwDAlzwAAJa8AOANvQAQ1b0AAPq8AEDDvABgyL0AQKa8AOBJvQBgIL0AgM88AECdvACANb0AAKI8AAAOuwBAJD0AAAY9AIABPACAR70AAFU8AMB0PQCAQ7wAkKs9AAC5uwAgGr0AwIM9AIBmPAAAFD0AYAo9AACNPAAgF70AANS6AAAUuwAAersAADI7AECkvACAeL0AgC88AADKOwBgzL0A8IY9AADEuwAgWL0AYBO9AADVvACAJjwAgKU8AAACvAAAOzwAgIq9AEC/vAAAzjsAwMs8ABDiPQCAPrwAAEk8AIATvADgCj0AwBU9ACAgPQAAIDwAYGG9AMCNPQAAyzsAAHS7ACBHvQDgaD0AABA7AAAnPQAAPb0AYGy9AKCpvQCADT0AAAI8AEDwvADAtbwAoKO9AAAnvQDA7jwAYJq9AAAYOgBAAb0AAIW8AEC0PACAJjwAAEi7AECBPABgND0AwPm8AIBvPAAwlr0AoAa9ABCQvQAAQDoA4F49AIDsPACAej0AgL08AIB5PQDwjr0AAHc8ACBxvQBAMb0AwG09ACA3PQAAZrwAQNe8AECgvQAgU70AwAU9AFCJvQBgID0AgKc9AABAuwCAvjwA4AY9AIAWvABA/7wAAOQ6AMDGPACwmj0AgNK8AJCAvQAgB70AUOS9AMDOvQDgyz0A4GM9AGA8vQAAuzwAIC29AIBHvADAlTwAAAI8AEDavADgFj0AwIo8AABWPQDAV70AAKI8AKBZPQDA2bwAwNM8AOAzPQDgaT0AAM48AAAPPADQrT0AAD89AMBTPQCA77wAgEc8AEDivACA7bwAAN47AMAYPQAARDwA4Ds9AGBjPQDgA70AAL07AABavQCAJrwAMMS9AAAhvAAAsLkAQPe8AAAQOgAgjL0AYMc9ACAvvQAAMrwAAHM8AKBpPQAApLwAAOw9AIBNPQCgBb0AANg8AABXvQAAiDwAACU8AICMvACAuzwAABi9AAD6vABADr0AYAi9AKAYPQAAprsAwPq8AIDOvADAz70AoBC9AIBEvQAA2LsAgDa8AAACPACAcj0AYAq9AMA1PQCAU7wAcMW9AAAAPQBA0jwAYCm9AECAPACgOr0AgF08AMAMvQBABj0AYBA9AIBTvABAjj0AwPe8AAC7uwDApLwAANy8AADZPAAgRL0A4CI9AICOvABARD0AgJ48AAAyvQCAIb0AAPO8AAB0vAAAUr0AwKK8AFDLPQAAgLsA4J29AMBJPQDAPj0AMMk9AEDTPAAAi7wAALS7AIBNvQDAu7wAgFG8AIAuPQBAhbwAQNW8AOBKvQBAx70AwBw9AKBGPQAAW7wAQEk9AECRvACAlT0AAO+7AADVPAAAhLwAAHY8AIBXPAAAAr0AUOI9AADwOQCA+Tw=","chunkHash":"29472de60223bd6b021d497f32d06d7caadd9074d76e4373fd33a14b04a85b66"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef visualize_lowres_3d(batch, output_path=None, show=True):\n    #...\n    # Save if output path provided\n    if output_path:\n        plt.savefig(output_path)\n        print(f\"3D visualization saved to {output_path}\")\n    \n    # Show if requested\n    if show:\n        plt.show()\n    else:\n        plt.close()\n#...\n```","range":{"startLineNumber":153,"startColumn":0,"endLineNumber":162,"endColumn":19},"embedding":"AMCvvAAAQzwAIC09AMBzvQCgdr0A4FO9AABmvAAA07wA4Fa9AADfuwAAsDkAoEc9AAB6uwAA/LwAIDi9AIBXPQAAe7wAQLs8AAAAOwDA8DwAwFw9AMDrvACgaT0AQOy8AADEvABABT0AAEC6AAASuwCgNT0AQMo8AOBhvQDgKb0AEM29AMBgvQDQ+L0AgFs8AADMuwBAlrwAgJA8AAB0vQDAlD0A4Jq9AKCGPQCgCj0A4LI9AOCOPQCA7TwAoIO9AABiPQCATDwAALw7ACCfPQDAlD0AgHA8AED7vABgAj0A4AW9AOAQvQDAtDwAIAm9AHDXPQAAfDwAQC89AFCEPQBAJL0AAEo9AEBxvQDAubwAwL08AIBcvACAT70AAPy7AIDRvABAYb0AgM28AADwOwCAHr0AAA48AKCXvQAgq70AwM28AADLOwAgQj0AoEc9AMACvQBAir0AYHa9AOAnvQAAMjsAQBS9AADvOwCAND0AgEW9ACATPQAAQDwAcMA9AIASPACgWL0AgOA8AMDhPACAKT0AwMs8ACBtvQAAnLsAwNQ8AAAQPQAAv7sAAOc8AADROwBQiz0AAH28AGBhvQAA5zwAAFu8AIB6vABgZb0AgPk8AACfOwCAF70AQOi8AMCMvQDA/TwAgLi8AMCqvAAA5DsAANc8AOBAPQDggL0A0Io9AAB9PAAAgLsAgGk8AKBUPQCA4L0AAKO8ALCCvQAApjwAAB48AICBvADwtT0AgDY9ADCPPQAAmzwAgCO8AIANvQDA5D0AYKu9AOB2PQDAlTwAgI09AACAOACg9T0AQA89AMB/vQAQkL0AAOq8AEAnPQBAMD0AAHa8AECDvAAA2LwAAMy7AICGPQAASLsAgKi8AMDePAAAxDsAANw6AOA1vQAgTr0AAAS7AEACPQCAMT0A8Ly9AGDgPQDAHD0AAM68AAAKuwDANb0AAIC4AABEvAAA3TsAQLO8AGAFvQCAUbwAoBO9AECFPAAA+DoAAIC9AEBPPQCAFjwAIBg9AKADvQDADD0AQHI9AMB9vQDASD0AAP67AIA4vACAazwAgOG8AEBDPQBA4rwAwKy8AABCPABgk70AIAQ9AKBuvQCA67wAAJk8AADfvADgXj0AAI48AADCuwBAsLwAAMy6AIA9PABwuD0AADI8AMChPADwpL0AAHm8AAC4OwAgJD0A4C89AAAKPADAn7wAIIy9ABDBPQAAqzsAQAI9AACAOgBA+DwAgHA9AIDMPACAqzwAAEw7AIAOvAAAqzsAQOS8AIBXPAAAxjwAgGU8AADzOwCApD0AIAS9AACpvABAq70A4Bq9AMDCvABA2zwAwIO8AAAavQAQ8L0AAHg7AAD/uwDAv70AgNe8ACALvQCAMbwAACC7AABPvQCARrwAABQ7AMDZPADAaj0AoAc9AACMPAAgWL0AANC5ANCEPQAArjsAsJk9AAC7OwCgM70AYHA9AIAJPQDgGz0AALo8AIBpPQDAw7wAAOi6AAArvAAAPjwAAHY7AIDIvACgX70AQEI9AABYvACAYb0AQG89AABAugDgZb0AYBC9AOARvQAAWjwAgHY8AECJvAAAhzsAwGK9AEC2vACA77wAAOm7AOADPgBAjbwAYAg9AIAsvQDAdj0A4Io9AMBfPQAAJ70AAEC9AEB7PQCAcTwAgAS8AED9vADAIT0AQOs8AKA8PQAgUb0AQBq9AGDUvQBgST0AAIc7AKAQvQBAibwAILm9AEBgvQCAGT0AwGK9AIAZPAAAH70AgCW9AABsPAAAwDwAgMw8AECiPAAgMj0AAEO8AECvvAAgyb0AwJi8AADXvQCAQ7wAQH09AAAmPQDQkz0AAGk9AACSPQDgUL0AgBk9AKBTvQAAab0AgG88AAALPQAAWrsAgLO8AGDCvQAAiL0AwAw9AOBdvQCAKDwAgKM9AAClOwCALjwAYFI9AIAlvQCgSr0AwKw8AOAzPQDwmD0AAEi6ANCYvQDgJ70AkLm9AFCBvQDgoD0AMI89AMAOvQAAfDwAYNW9AMCNPACgWj0AgFa8AABnvAAAUzwAAPk8AOAEPQDAhrwAAC88ABCGPQAAG70AAM07AIDpPABgNz0AQO48AADdOwAgmz0AAL48AACtPAAA2bwAACC7AAA6vAAATbwAAOc7AOApPQBAzDwAAMk7AABnPQAAL70AgJY8AMB3vQDgEL0AcLm9AICtvADAJL0AwJu8AIAZvQBAlL0AkKs9AMAyvQAAMrwAAP07AEA8PQAAyjsAIO89AHCTPQAAz7wAQBE9AIAEvQCgIT0AgGW8AMDJvADA7DwAABI7AACgugCgGL0AIBa9AOAuPQAAYLwAgJy8AMC2vAAglL0AQBO9AMA/vQCAyLwA4BG9AAAsPQAAaDoAABi8AKA8PQDAtrwAYLy9AABzPAAAnTwAAAa9AOARPQAAT70AgAe8AADFuwBgOD0AgL08AEAOvQCQqz0AAA08AMCFvAAA5LoAAIm7AAD8ugAgVb0AADg9AABcuwAwjj0AwOc8AOA5vQDAEL0AwBy9AMDZvADQmL0AACe8APCpPQAA3DwAwDu9AKA5PQDA9TwAABY9AAAvPQAA27wAACM8AKBxvQCgE70AAEa7AED1PABAjbwAoCG9ACAAvQBwlL0AMIc9AIB5PQDAprwAAOY8AAAUOwDwiD0AQJy8AACXPADAFr0AALS6AACIPAAA6rsAYFg9AICrvAAgFj0=","chunkHash":"c263549b83d48e23c239fbb23183cdc53724fb9239071dc65b49e6d7cf677743"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef visualize_lowres_projections(batch, output_path=None, show=True):\n    \"\"\"\n    Visualize projections of a lowres 3D volume along each axis.\n    \n    Args:\n        batch: Batch of data from the lowres dataloader\n        output_path: Path to save the visualization (optional)\n        show: Whether to show the plot\n    \"\"\"\n    # Get the first volume in the batch\n    if 'image' in batch:\n        # Raw images from lowres_image_dataloader\n        volume = batch['image'][0]  # Shape [Z, 1, H, W]\n    else:\n        # Images already adapted for texture model\n        volume = batch[0][0]  # Shape [1, Z, H, W]\n        volume = volume.transpose(0, 1)  # Convert to [Z, 1, H, W]\n    \n    # Get volume dimensions\n    depth, _, height, width = volume.shape\n    vol_data = volume[:, 0].cpu().numpy()\n    \n    # Normalize for better visualization if not already done\n    #...\n```","range":{"startLineNumber":165,"startColumn":0,"endLineNumber":187,"endColumn":0},"embedding":"AIAwPAAAXDsAgOY9AKA4vQAwu70AAEW9AED0vACgWL0AYI29AAAqPADAF70AgD89AAC/PACAGbwAALA6AEDIPABA/bwAwBo9AACRvAAA6jwAQKk8ACApvQDQkj0AgI+8AMAkvQAA5TwAIAo9AADdPACgKT0AoBk9AKAZvQDAzrwAIGi9AMBtvQD4Cb4AQN68AOAJvQBA3TwAABg6ACAivQCQoj0AwO+8AIBrPQAAwLgAMO89ABCiPQAAgbsAYBm9AACpPABgQT0AgAe9ANDIPQCgqj0AAMm8AABMvADAzTwAgJ68AGBbvQBAxjwAIBu9APC+PQBAmbwAgO48AEBjPQDA37wAgPU8AKAMvQDgJr0AwII8AIATPABgVb0AAPQ7AKAUvQAAMbwAgFK8AIABvACgHb0AgF88AKABvgCQo70AAFy8AIBGPADACj0AIDc9AIA4vQDAvbwAQMc8AIC+vADAnTwAgAi8AADWuwAAtDwAwIu9AOA3PQAAJbwAYG09AMArPQCQvr0AkKM9AAAAPAAAkjwAAG89AAD4vAAAJbwAIEY9AGAoPQDAgDwAQJQ8AOBVPQBAKD0AAKC8AMCCvADAED0AgNy8AIAOPADAcb0AQJQ8AMC4vAAASb0AIGy9AIBVvQBgID0AAIS7AAA0vACAWLwAALg7AADSPADAfr0AQM08AIDBPADATj0AwJs8AEDkPABgDb4AgOi8AIB0vQCAYTwAAD47AIAEPADwrz0AAPC7AGCmPQBAlDwAwB69AADkOgAw+z0AgCG8AECCPQAAazwAgJE9AMC3vADgsz0AQKE8AGB5vQDgjb0AAOm7AABLPQBgZz0AYD89ACAkvQCAw7wAQIe8ADDZPQAAFDsAYBK9AACeOwCgSb0AAJo7AMA/vQDgq70AwKi8AABiPAAAgLgA8Oy9ABDXPQBAMD0A4E29AMCjvADAybwAIHK9AEC/vAAAlLwAAB67AKCYvQBAL70AgL48AAAquwCAOT0AQPS8ADCKPQAAILwAgMo8AEACvQDAJz0AALU8AMBavQBA/zwAAM88AAACOwBgMr0AAOC7AIBaPQAA9LwAQIK9AIAUvAAApbsAQBQ9AKCBvQCAP7wAgCE8AOAUvQBggT0AAHo8AIAJPABA3LwAgJG8AAAevADQlj0AwP08AECIvABgRr0AAEs8AAAHPAAASTwAgEw8AAC6uwBACb0AIKe9AECZPQAA2zsAAMM7AIDSvACAnDwAcLo9AGADPQAA9bsAAAG8AADqvAAAGz0AgMU8AADSPADAljwAgDM8AAAXPABgsz0AAOo7AOAPvQDQoL0AAP+7AAC2vACA7zwAgCO8AEBovQCgi70AgOG8AIDMvACw7r0AAFq8AICQvQAAY7wAQMk8AIAXPAAAbbwAwKo8AADwuwBgWT0AAME8AADgOgDAB70AgFs8AOBkPQDAlrwAQD09AAAauwAALr0AUKU9AMBfPQAAErwAALg6AOACPQBAt7wAABi6AEDLvACAqTwAwNi8AIAiPADwpL0AICA9AAC6vAAgqr0AEIs9AAC+PAAAbL0AABq9AIB2PABA6zwAAD67AAA1vQAA0jsAQFO9AKBDvQAAvrsA4Cg9AICaPQAAoLsAwFI9AADQuQBApTwAYDQ9ACAgPQAAgrsAgBS9AABYPACAcD0AAKW8AJCivQBgTz0AANy7AMDaPACAsbwAwJC9AJCgvQAAyLoAAAi6AIBmPACAlbwAEK29AAAqOwCABLwA4Ji9ACANPQAAlbsAIGC9AECEPAAAN7wAAJ+8AEDpPAAAuTwAANm7AICKPACQrb0AAAc9ANCUvQCAJ7wAwMo8AIAUPQDwiD0AgDQ8AMDPPACgDL0AACC8AEBmvQCAKr0AAA08AABaPQBA67wAAHo7AMAUvQCAjb0AgCo8ACBxvQCA+LwA8LE9AIBJvACAuzwAgLs8AACdOwAAnTsAgNM8AABgOwDg5j0AYCG9AKB5vQBAvrwA8K69AKCDvQAApj0A4HA9AIAtvQAAvDoAsMe9AADGvACAlzwAgHA8AGAvvQAAnTsAAJQ8AMA7PQCAb7wAQOM8AOBtPQAA17wAAMS7AEANPQDgQD0AAKY8AIATPACgPD0AwII8AECnPABAw7wAAAq8AIBmvACgM70AgKW8AEDvPAAA07sA4BA9AAALPQCAGrwAAMC7ACADvQBAA70AAI69AACdOwAA1LoAgDe8ACAQvQAAKr0AkNc9AOBtvQAAmDwA4Cc9AKBUPQCAubwAIOc9AECMPQAALLsAgDg8APCAvQDApDwAAIM7AACnuwAAnrsAAFi9AEBXvQCAPLwAQNm8AIBCPACASjwAABA6AIAavQBAgL0AMIq9AIDhvADANr0AIAS9AADCPACAYLwAwNm8AECZPQCA0DwAEJK9AICWPACACbwAwAG9AEDsPAAAg7sAACK7AMDVvACAFj0AwEs9AECDvQDgFz0AAEC6AIDCPADgAz0AwBS9AMCavADATL0AgGI9AIC1PACgjz0AoDI9AEAGvQAARbwAAKG7AEDEvADwvr0AAJo7AIC1PQCAoLwAkJS9AAC+OwDAbz0AYAw9AACgOgAA+7wAYDo9AMDzvAAAY7wAAC+8AIAZPAAALrwAIFG9AAA5vQCg5r0A4GQ9AMBfPQAAcjwAULE9AABqvQBggD0AAO07AEAzPQCgAr0AAJw7AIDGPADA57wAEPA9AEDvvABAWj0=","chunkHash":"fa5688c5083224b3c535de03e8176f2d3b8c2aa32643a28df49f123a630173eb"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef visualize_lowres_projections(batch, output_path=None, show=True):\n    #...\n    if vol_data.max() > 1.0:\n        vol_data = vol_data / 255.0\n        \n    # Convert from [-1, 1] to [0, 1] range if needed\n    if vol_data.min() < 0:\n        vol_data = (vol_data + 1) / 2\n    \n    # Create max intensity projections along each axis\n    proj_z = np.max(vol_data, axis=0)  # Top-down view\n    proj_y = np.max(vol_data, axis=1)  # Front view\n    proj_x = np.max(vol_data, axis=2)  # Side view\n    \n    # Create figure for projections\n    fig, axs = plt.subplots(1, 3, figsize=(15, 5))\n    \n    # Plot projections\n    axs[0].imshow(proj_z, cmap='gray')\n    axs[0].set_title('Top-down view (Z projection)')\n    axs[0].axis('off')\n    #...\n```","range":{"startLineNumber":187,"startColumn":0,"endLineNumber":206,"endColumn":0},"embedding":"AABquwAAGDoA8Jk9AIAgvQAws70AYEu9AAACvQBgBb0A8L69AICSPAAAkDsAwCk9AADbvACAG7wAgD08AEBzPQCA6LwAYJE9AOBtvQDAND0AwJc8AGB0vQCgND0AoG69AMBQvQAAiTwAgDg9AEAbPQDAij0A4Ik9AAC8vACAc7wA4JS9AOA/vQB4Ar4A4ES9AMCEvABgAL0AAPk8AMCCvACglD0AoAe9AMCSPQAA4zsAIL09ANCEPQAAgDsAIA69ACBjPQDA0zwAgFW8ANCEPQCQrD0AgAI8AEDUvADgJz0AAOi8AIC2vAAAELoAgAW8AODSPQAAorwAYHQ9AGBcPQCA2bwAwLw8AGBOvQDgKr0AwB89AACmvAAAML0AAJy7AABpvACATLwAAH68AADIuwDgRL0AAKc7AKCXvQBgd70AAMK7AIAhPABAQD0AQOI8AADQuwAAB70AgDm9AADUOgCAabwAALu7AEAivQDAWT0AgIe9AADVPAAATjsAQL49AID1PADwsL0AgEs9AAC7uwAgIz0AIAk9AOAAvQAAnTwAYA09AEC3PACAp7wAIBs9AEBDPQDQhz0AAH68AMBnvQBA8jwAQKu8AAAgOwBAar0AAKa7AADsuwCAuLwAgMK8AKAqvQCAkzwAgLy8AADvuwAA9LsAQLQ8AIBOPACAFb0AwIY8AACVPAAAmDwAgFM8AMBLPQDQ3L0AgEe9AICGvQDAjjwAYDA9AAD2OwBAqj0AQEo9ACBYPQCArjwAAN68AICMvABg6z0AYDa9AKAvPQAApDwAkIc9AIAnPADwnz0AwF49ACAlvQDAf70AAFq7AFCBPQBgXT0AACI8AAAYuwBApTwAAKw7AGCDPQCAbTwAoDa9AICqPAAANb0AAH28ADCIvQDAdr0AgEu9AECbPABA5TwA4Pe9AHC6PQBATj0AYJS9AABYugDANr0AAIC5AACzvACANLwAAOS8AIAUvQCgFr0AAH67AAB8PAAgRT0AwEu9AMAsPQCA2DwAACC8AECsvADAHD0AQBA9ACBLvQAALD0AACw8AECpvACAN7wAQBG9AAB9PQAAJDwAQMm8AIBVvABA2bwAAGE9AGBVvQDAjbwAAEC6AKAIvQAgfj0AwMg8AECuPAAAz7wAgDa9AIBCPACAuT0AYAc9AADuOwDgDL0AAHy8AACtOwAAljwAgM08AMDZPAAAfrwAoHW9ACDLPQAAkLoAQJU8AACYuwAARTwAcKM9AIBNPAAAaTwAAIA4AOBOvQDAvTwAAM67AIAIPABgJD0AwPo8AIDsPADQmz0AYA69AAA+vQCQlb0AADY7AABZvADA7jwAAJq7ACBcvQCwqb0AwKC8AIA+vQCgwb0A4Ba9ABDCvQAAujsAgL08AACUOgDAJr0AQIw8AAAWuwDgKT0AgDY8AADwOwAgTL0AgJ88AIBqPQAAszsAgK09AECYPACgP70AYF49AEBlPQCAMz0AAAW8AAA3PAAAv7sAgEC8ACAGvQCAczwAACq8AACAugAglr0AAJQ6AACcugAwq70AwIc9AAAGPQCAHb0A4G69AACAOAAA+DsAQII8AAAQOgBA0DwAIIa9AADLOwBAk7wAgE48AECNPQBAzLwAgCk8AICsPACAzjwAYG09AECZPQAACLsAwGK9AMB5PQDAyTwAgAW8ACB2vQCAYz0AALm7AAACPQAAyrwAoKK9AJDDvQAAkDwAgGg8AAAdvQAA07wAYOW9AAABvQBgOz0AwEW9AKArPQCAcLwAwOe8AKBIPQAAgDgAAB28AAC+OwCgMj0AwN28AMCZPAAgr70AQP+8AKCZvQCAirwAYHk9AIAhPAAgcz0AQNA8AGAYPQDgAL0AAM27AMAdvQAgEr0AIBw9ACBcPQAAnbsAAJm7AGAqvQAQtr0AwDw9ACCnvQCgCT0AAMM9AACiuwDAqTwAADc9AIAmvAAA1LwAAE08AAC2PADQ6j0AoIa9ANCBvQBAu7wAkJW9APDUvQAwlz0AgB49AKAGvQCAPLwAIKy9AADbuwAAizwAAIy7AABavABA9jwAgBY9AMBYPQAABr0AgPY8AECKPQBAr7wAgJA8AIAgPAAgLj0AgMo8AECEvABgoT0AAIw7AED8PACA5LwAANA5AIBcvADAtLwAALm8AACdPAAAUrwAYDE9AAAPPQCgRr0AABQ8AIBevQAAt7wAYH69AABUOwAAirsAAD47AACsuwDQqr0AwLw9AIAyvQAAADsAALE8AKBzPQDAo7wAcN89AIB1PQCABb0AgOo8AIBDvQAAIT0AgIe8AABAPABAxDwAoHa9ACA3vQAAtLwAQNG8AOA7PQCAFzwAACw7AKAhvQCA470AQGO9AKBevQDArLwAwFm9AAAgPQCAXDwAAH+8AICHPQAA4zsAUKu9AAC/OwCAq7wAYGu9AMCkPAAARrwAAIo7AIBJvQBgLj0AwLM8AGB+vQDwhT0AAGg6AABUOwCApDwAQH+9AACLOwBgEb0AIDE9AACtPABAfj0AQOQ8AEDBvAAA+7sAAJ87AMDwvADgbb0AAKK8APDGPQCgAr0AUIK9AABnPABAUj0A8LU9AAB8uwAABrsAgAQ8AAA7vQDA7LwAAEo7AADsPAAAe7wAAPq8AKAxvQAwl70AAEo9AEDLPAAAEbwAQGU9AAC0vAAgfD0AgNe8AABrPQBgGr0AQNw8AMACPQAAq7sAsAk+AACdvACgOT0=","chunkHash":"652a0c9dbbcdec7e45b706f423fe53b3c9e20615b2596d67ec1ee9eca5c1423b"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef visualize_lowres_projections(batch, output_path=None, show=True):\n    #...\n    axs[1].imshow(proj_y, cmap='gray')\n    axs[1].set_title('Front view (Y projection)')\n    axs[1].axis('off')\n    \n    axs[2].imshow(proj_x, cmap='gray')\n    axs[2].set_title('Side view (X projection)')\n    axs[2].axis('off')\n    \n    # Add metadata if available\n    if 'metadata' in batch:\n        metadata = batch['metadata']\n        if 'sample_id' in metadata:\n            plt.suptitle(f\"Sample ID: {metadata['sample_id'][0]}\\nClass: {metadata.get('class_name', ['N/A'])[0]}\")\n    \n    plt.tight_layout()\n    \n    # Save if output path provided\n    if output_path:\n        plt.savefig(output_path)\n        print(f\"Projection visualization saved to {output_path}\")\n    \n    # Show if requested\n    if show:\n        plt.show()\n    else:\n        plt.close()\n#...\n```","range":{"startLineNumber":207,"startColumn":0,"endLineNumber":232,"endColumn":19},"embedding":"AMDLvACAMrwAwCE9AOAwvQCAxr0AAOG8AEDZvAAgW70AMLm9AADoOgAAULoAgI08AIAdvACALr0AAGO8AMDaPADgYL0AwJY9AOANvQAgQD0AgAs9AEAavQCgHz0AgBm9AIAevQAAdTwAAAg7AMDsPAAgND0AcJc9AOANvQDArLwAgJm9ACA3vQCYB74AANW8AADpPABgJb0AwAA9AIDwvABAnT0A4HS9AGCYPQAAYzwAwLM9AKCZPQAAebwAQCi9AOAYPQCgdT0AAFi8ACCDPQAgsT0AgCI8AAC0vAAA+DoAYBS9AADVvAAAIzwAwDC9ANDfPQAAmbwAcJI9ADCDPQCAO70A4FM9AGAUvQDAlLwAgFs8AADKvACAybwAQKq8AECbvAAAhrsA8Ii9AACTvADgQr0AICk9ALCKvQAgl70AAJm7AAB0PADAlDwA4Dc9AMDqvACAAr0AMIG9AACqvAAAs7wAADw8AMAQvQBAtz0A4Iu9AAD9PAAAkzwAkOM9AAAyvAAAjr0AMIQ9AADguwDAjD0AwA09AGAgvQCAO7wAQN08AACPOwAAuLsAQCE9AEBmPQAgLz0AQEu9AKBhvQDAUD0AgAQ8AMDRPACQh70AAJk8AIAbvAAgI70AgNa8AOCEvQAA5zwAwCC9AECuvAAAfrwAgC48AAD2PADwiL0AQIM8AMC6PACALzwAAIA5AADkPACAt70AYCa9ALChvQDAAD0AgIs8AAAGOwBAmT0AYJk9ALCIPQAAersAwJm8ACAJvQCwoj0AgDa9AABcPQAAELsAUJs9AACCPABgsz0AAOc8AGAyvQBgQr0AAFy9AOAzPQBA8TwAANS7AIAiPAAAGDwAACo7ANCoPQBA6zwAgBm8AAA2OwAABb0AACw7ADCLvQCAW70AgO+8AADjOwBApjwAEMO9AICfPQCAdD0AADm9AABRvQBA9bwAAE28AKAbvQCAa7wAwIe8AABsvQCAVbwAQMG8AIB8PACgbT0AAF28AABzPQAAqzwAAPy6AEDgvABgCz0AoAQ9AMCDvQCA0jwAgC+8AMDlvAAAdDwAQE+9AGBfPQAAhLwAACi7AAAQuwAwm70A4EU9AMC+vQBAGb0AgEg8AIBGvACAPT0AgA09AMCWPAAAEDoAQLG8AABAOgBQoT0AAAc8AMDsvADAKL0AALS8AAAbPACA5DwAgPQ8AMBOPQBArLwAwIK9AACAPQBA4rwAAL88AIAYvABAjzwAUNM9AABVPAAAqDsAAKG7ABCAvQAATzwAACC7AACquwAgPz0AwM88AACiuwDgtT0AABO8AAAivQAwvr0AgDU8AEC2vACAoDwAQKg8AAAJvQCgtL0AAAQ8AGAtvQBg370AAMq8APCuvQCAYbwAALc7AMCFvAAA47wAAIC4AIAZvAAQiT0AQJA8AEDEPADAHr0AgAi8AMA4PQAAgjwAAGQ9AOALPQDQiL0A4IY9AIBDPQCgPT0AAJU7AABCOwAAhbwA4AW9AACmvABgTT0AgGQ8AIADvACAg70AAK27AIATvACAQr0AQCk9AMBrPQCADL0AIKK9AIB5vACAhzwAgEM8AACauwAA7DoAAD29AACkOwDA1LwAABw8ALCmPQBA+bwAANY8AACCPABA/zwAwKU9AOBjPQAADrwAgB+9AOBSPQBAgDwAQLS8AOA5vQBARz0AQKu8AMAZPQBA77wAQHy9AJCXvQAADT0AAL28AOBIvQAAjLwA8LG9AKBGvQDgIz0AALS8AKBfPQDAibwAwP+8AHCWPQAgBz0AAIE7AEAMPQAApDwAAJy7AADZOwBQpb0AQIy8AMCuvQDAqrwA4B09AAD/OwAAdj0AcIg9AGBPPQAAPb0AACA8AOAhvQCgir0AIF49AEB3PQDA/rwAQJC8AMA8vQCge70AYCo9AGAXvQAA6rsAEMI9AACHuwAA1TwAYFk9AACWvACAKr0AAFg9AACdOwBAzz0AwM+8AKBBvQDAQb0AsJO9APC4vQCQpz0AACU9AGAOvQAA7bsAcN69AIAWPADA4DwAACm8AAA6vADAwjwAgK88ACAAPQCAGbwAwLE8AKCRPQAAkrwAAKy8AMCWvABgNj0AgPo8AAA9PACgkD0AALi7AIA6PACgLb0AQIU8AIAWvQAAzLoAgEG9AKAOPQAAALwAwK48AKBuPQCAZ70AAA47AICavQDAprwAgGy9AADBuwAAqLwAABq8AEC4vABAgL0AoMI9AGBSvQCAZzwAgFE8ABCHPQDAR70AMAY+AKCAPQCgBL0AwCU9AEACvQCA8TwAAJQ6AACGuwAA+DsAQBK9AMDBvACASrwAQMK8AABvPAAAHjsAwK+8AGA4vQBQub0AQFW9AGB+vQBgJr0AAGy9AMCoPAAAk7wAgEG8AMBvPQAAejwA4KC9AIAqPQBAjjwAwNO8AACQPABAlrwAgIS8AABhvABgLT0AYAM9AOBsvQBQiz0AwIU8AACiOwCAkTwAID29AAD5OwCwg70AAB09AGAUPQDQlD0AABc9AMBxvQBAo7wAgHC8AOBYvQDAZL0AAKS8AGCVPQAAVrwAwJG9ACArPQBAm7wAYJQ9AABbvAAArLoAAJU7AEATvQAgT70AAFg7AADlPAAAhrwAQGO9APCEvQAQg70AgEE9ACAwPQBAlbwAAIg8AACxuwCAHT0AAM+7AEA7PQAAlrsAAM88AIDsPAAAxDoA0Lc9AEC3vABAyzw=","chunkHash":"22fc0e8b3ade8eb750f00eb1020bf615d0dd02807cd3597012e8d76a043113d4"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Visualize lowres texture samples\")\n    parser.add_argument(\"--root_dir\", type=str, default=\"data\", help=\"Root directory for data\")\n    parser.add_argument(\"--class_csv\", type=str, default=\"chromatin_classes_and_samples.csv\", help=\"CSV with class info\")\n    parser.add_argument(\"--sample_ids\", type=str, nargs=\"+\", help=\"Specific sample IDs to visualize\")\n    parser.add_argument(\"--batch_size\", type=int, default=2, help=\"Batch size\")\n    parser.add_argument(\"--is_cytoplasm\", action=\"store_true\", help=\"Use cytoplasm box size (144³) instead of nucleus (104³)\")\n    parser.add_argument(\"--output_dir\", type=str, default=\"visualizations\", help=\"Directory to save visualizations\")\n    parser.add_argument(\"--no_show\", action=\"store_true\", help=\"Don't show plots, just save them\")\n    parser.add_argument(\"--adapted\", action=\"store_true\", help=\"Visualize adapted data (as processed by texture model)\")\n    args = parser.parse_args()\n    #...\n```","range":{"startLineNumber":235,"startColumn":0,"endLineNumber":245,"endColumn":0},"embedding":"AACJvAAAdzwAoHw9AABavQBAZb0AoGm9AKAevQAgVb0AIKS9AMC4PAAAkbwAwLQ8AADQOwDAAr0AAIO7ACAkPQCgIL0AYE49AOAjvQCAAT0A4Gw9AACGvQAA7DoAgNK8AAA5PAAAdLsAwLO8AMC1PABQkj0AALm8AIBwvQAgHL0AQNO8ALCMvQBQBb4AAAy9AOALPQAAADsAgAs9AGA3vQCARD0AwKG9ACATPQCAWT0AgCM9AID4PACARLwAABi9ACBCPQAAdrwAAFO8AFCBPQAAKDoAAGs8ACAvvQAA/bsA0I29AMCovADgBL0AQPy8AIBoPQAA6bwAICs9AEDSPAAgCr0AIGs9AOBgvQDgGb0AAHK8AOA6PQAAyDsAANa8AKBGvQDgOr0AwL88AIA0PAAASb0AQCg9ABCHvQAgpL0AAJQ6AAAmPQBA4zwAgBW8AAC9OwDgLr0AwOK8AABBvAAAnzsAwCq9AABQugAghz0AwE69ACAVPQAAeLoAoFg9AAChvADAg70A4EY9AADWPACAfT0AABM8AKCGvQBA1jwAgMY8AECyPADA2jwAAFq7AABoPACATT0AgFa8AAB7vQCgPT0AIFe9AAAhPQBQlr0AYFm9AMCHvAAAjTsAgDK9AHCXvQAANT0AgK88AEDzvAAA0DwAwIo8AOA/PQBAFb0AwAM9AECGPACgTD0AALe7AIBbPQBgDr0AwDO9AEAOvQCAMjwAAB09AMCbvACgvj0AgI88ACByPQCA0jwAwEE9AACTvACw2j0A0PK9AGDMPQBAwLwAkMY9AMCNPADAnD0AIDM9AAC9vQAA3bsAwMS8ABCAPQDAOz0AQCu9AICqvAAAaDoAAC+8ALCePQDAzbwAIKC9AACbOwAAjjwAACQ8ADC2vQAAlbwAQAK9AAB1PABgiz0AYIK9AKCFPQAAqLsAQL+8ACA+PQCAAr0AYAo9AOAsvQDgBr0AgDi8AGARvQDAlLwAgG69AEAgPQAAIjwAoIy9AABwvAAAmDwAAP07AAAVvAAAQj0AgEU8AAADvACQkT0AgJU8AADpvABQiz0AgMC8ACBiPQAAjLoAgGC9AOA2vQAgC70A4BY9AMCevAAAPrwAoBg9AIAevQCAJDwAQJI8AACkOgBAVr0AgNa8AAAGvAAgRD0AgL08AIAIPABgAL0AwNS8AOBFPQCAZD0AAOE8AAAzvAAAZrwAAHm9AACkugCgPD0AQEg9AEDBPADAvrwAgJU9AECkPAAABL0AgLw8AIDJvADAyTwAADi7AIB5vQDA7zwAALk8AADAuwDAlD0AgHe8AIAEvQC4G74AALQ8AAADvQAAojwAQOk8AAAHvABwAL4AgD+8AIAzvAAQob0AAFW8AGBnvQBAx7wAoBQ9AAALPABAl7wAAFu8AAA8OwBAkzwAABA7AIDKPADgOr0A4FO9AAAyPQCAXTwAMJ09AIAbvADgPb0AoHU9AMDsPAAgSD0AwB89AEDNPQCgmb0AAGE8AID0PACgSz0AIAE9AADxuwCASb0AAKU7AEDRvACgYb0AgHo8AAAAOQCAFr0AEJ69AKBVvQAA8DsAAEm8AGBcPQCALDwA0Kq9AMCivACgEb0AAJI7AIBAPQAgIz0AgGc8AICAPADAwzwAQIw9AFCFPQAATb0AgOa8AAB9PQAA27sAgP08AEAWvQCAnj0AQJo8AKBcPQAALjsAwF69AAD0vQDwiz0AQOk8AICxvAAA6LsAgIq9ACAFvQAAGzwAIDi9AAClPABgZr0AAAw8AADTPAAgJT0AADe8AGAUPQDAGD0AgGi8AMDmPADAqb0AAK28AJCwvQAA8zwA4Bc9ACBsPQDABz0A0Lw9AKB7PQAAGLoAAPo8AADlvACAjL0AAIs8AIBjPACAj7wAgFi9AIB/vQAAG70AQAo9APCZvQBAFj0AkJc9AIAtvAAAYj0AwBY9AOAvvQAAwDsAQH89AMC0PAAgXD0AgC28AMAyvQCAGb0AAK29AJCAvQBwkj0AQIQ9AACTvQDAnzwAsIK9AIBTPQDA/jwAwNe8AABpvAAgJL0AQAM9AED0PABgFb0AAMA5AFC1PQBAUb0AAFw8AMD6PACACT0AAIU8AEAcPQCA4D0AwOI8AIDbPAAAGrwAcIg9AOB4vQCAfLwAAD+8AED5PACAADwAIBg9AKBAPQAwob0AAIg7AJCkvQAAnzsAwH69AIBjvABAgr0AQOy8AIBzvADgW70AAHA9AAAivACA7DwAQNy8AIAKPADAgjwA4Nc9AACbPQAgL70AAEQ8AABHPQCAKj0AACa7AIByvABAlDwAALA5AJCgvQAAy7sAwAO9AACxOwBAg70AAAS7AAAiuwDAiLwAANQ7AOBjvQAgCb0AAJC6AADtvAAAwbwAoHy9AABwPQCA9bwAULm9AACJPQCQjT0AgBi8AIChPQCgGb0AAHU9AACyOwCADz0AwFI9AKAZvQBgaz0AgOS8AGA2PQAAorsAAOA8AOAEPQBQkb0AgOc8AAClPAAApjwAAB48ACAFvQAgQr0AgEE8AOAgvQDgGL0AACe8AACCPQCAZTwA4E+9AIBHPQDA+DwAUIs9AGB/vQAAIbwAwJk8AEAFvQDASb0AANC7AAC+OwAAjLwA4Ay9AMACvQBACL0AYDI9AADIOwDgI70AABY9AIBlPQBAjD0AwO08ACA4PQAAa70AgDo8AECoPADAGb0AgBk9AKBZvQBA8jw=","chunkHash":"b698f5bbeb2829587f83b7d44f9637145f2e36bde7562f4c5dee6cf94fe2340f"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef main():\n    #...\n    # Create output directory if needed\n    if args.output_dir:\n        os.makedirs(args.output_dir, exist_ok=True)\n    \n    # Get dataloader\n    if args.adapted:\n        # Get adapted dataloader for texture model\n        box_size = (144, 144, 144) if args.is_cytoplasm else (104, 104, 104)\n        dataloader = get_morphofeatures_texture_dataloader(\n            root_dir=\"low_res_dataset\",\n            # class_csv_path=args.class_csv,\n            batch_size=args.batch_size,\n            num_workers=0,  # Set to 0 to avoid multiprocessing pickling issues\n            sample_ids=args.sample_ids,\n            is_cytoplasm=args.is_cytoplasm,\n            box_size=box_size,\n            debug=True\n        )\n        print(f\"Loaded adapted dataloader with {len(dataloader.dataset)} samples\")\n    else:\n        # Get raw lowres dataloader\n        dataloader = get_lowres_image_dataloader(\n            root_dir=\"low_res_dataset\",\n            #...\n```","range":{"startLineNumber":246,"startColumn":0,"endLineNumber":269,"endColumn":0},"embedding":"ACAUPQCA1DwAwLg9AGAgvQDgA70AgHK9AOAYvQAAKr0A4E+9AIAjPQCACzwAgM08AACPOwCAmrwAwIa8AOAMPQAA7jsAgJM8AOBHvQAAJj0AgIk9AICNvQAAZjwAgDa8AKAGPQCAybwAQM68AMAUPQBgaj0AQMu8AKAYvQDgPr0AgGS9AMDuvAAg770AwPa8AAAmPQCAdrwAAG48AECIvQBAXz0A4LS9AKAqPQAgGj0AQJg9AMDsPADA9jwAwF+9AKApPQCATLwAgFe9AOCIPQCACzwAAIK8AICmvADAozwAgCK9AMDyvACAMbwAQF+9AOBoPQAA5DsAwCg9AIDKPABABr0AANc8ALCIvQBA6rwAQCG9AEDxPAAAgDsAACe8AIAxvACwhL0AYBM9AIDGvAAAo7wAgMU8AFC4vQCAB70AAJk7AMCXPQBA/DwAgLi8AICNvABQkb0AAM28AIBJvABgHD0AoIq9AABOOwAAvD0AwA+9AIDlPAAAAAAA4CE9AABWOwCAjb0AUIs9AMDXPACAmD0AgBA8AKAKvQAAkDsAICs9AABiOwAA/TwAQNu8AABgPADQtj0AwGi9AEBnvQAgfj0AwNO8AGCBPQAAjb0AACQ7AIBtPAAA47sA4Am9ABDUvQDA8jwAAPG7AKAEvQCAezwAAPw6ANCQPQDA5LwAAKQ6AAACPQAghD0AgH08AMB1PQCgo70AwPu8AIBJvQCASjwAQMw8AACtuwDQ4z0AwKU8ACBIPQAA2jwAgDM9AIC4vABAyj0AMK69ACCEPQDAorwAMJ89AMCjPACAcz0AgP08ADCbvQAA9LoAwAK9AMD7PADAtzwAIAe9AIB2vAAAwbsAAGK8AACFPQAAiDwAQFW9AAC/uwCAObwAAJQ6AADdvQDAPL0AAPQ6AACFPADAJz0AYNG9AHCPPQBAgrwA4CC9AAB2PABAn7wAwLE8AKA/vQAgdr0AABM8AAACvQBgf70AcJm9AMCMPABAwDwAIEO9AABMOwAAgDsAoGU9AIAyvAAApDsAwJU8AADNuwBwoj0AgMw8AABAuwBAOz0AwJi8ALCEPQAAujsA4Fa9AEDqvABgdr0AgAo8AEChvADAqDwAABM8AABEvAAAlDwA4EA9AAB+PACALrwAwOq8AAAYvABwsD0AAAA9AAAAOAAAjrwAgGa8AEA0PQDAEz0AQOc8AAAZvAAgM70AgE29AAAuPAAAOD0AgBs9AICKvAAAMjwAgD09AGACPQAADr0AgNw8AHCZvQBgOz0AwMI8AIBgvAAAIzwAoAs9AACcuwBgNT0AQIW8AIB8vQCQ7L0AgMw8AMDvvADgEz0AAFG8AACCOwAgzr0AQCm9AICmPADwi70AAJi8AJCGvQCAVbwAQJs8AMCdvAAAsrwAgM08AMDpPACA2TwAAAS7AABXPABgKL0AQJS8AOAlPQAAALgA4Kg9AICCPADA4rwAoFc9AIA4PQBgPT0AACQ9AAB4PQDAJb0AQLm8AIDWPABA5jwAgK08AACEvABgr70AwAM9AACWvACAKL0AwPM8AMChvAAAPb0AAKG9AEC4vAAAuDwAgFC8AACmPAAAYLoAwL+9AACXuwAgGb0AgIw8ACBVPQAA0TsAgAM8AAC3OwCA4TwAoF49AOAEPQDA5bwAAGi9AHCZPQCASzwAQP08AIAsvADgjD0AAG88ADCHPQDA7rwA0K+9AODVvQDgLD0AANk8AMCqvAAAxzsAcMC9AFCNvQAAxbsA4Be9AMDOPADAvbwAAMi7AIC1PADAizwAAJ87AACVOwBAHT0AAHs8AIBzPACQsL0AgI08AFCevQBAsTwA4Gg9AGCcPQCAYj0AYKA9AIDoPABgI70AYAE9AGABvQCACr0AABU8AGABvQAA2rsAAJm7AOCevQCga70AAGA6AGB6vQAA/jwAYMU9AAA7PAAA5LoA4Bg9AACwvAAA2TsAwGY9AICxPAAQjT0A4BE9AFDIvQAAV7wAoJ69AFCRvQCgrj0AoIA9AIBavQAgtD0AUJe9ABCDPQCgRD0AAB29AACUugAAOrwAAAo8AIBvPAAAb70AgFm8AGCTPQDgcL0AAP07ALCYPQDAtjwAoBw9ACAlPQCQtz0AIAc9AEBLPQAAAbwAIAI9AKCFvQDA1LwAgHM8AIBHPAAA1zwAAPw8AOB/PQBAKL0AgKs8AHCtvQAAcrsAINa9AAC9OwDgFb0AgF68AACwuQCgI70AUIo9AICzvACAUDwAQNS8AIB1PACAfjwAQPM9AIB0PQDAA70AgKs8AIDxPACAGTwAAFy8AAAqvAAATTwAgDs8AOAXvQDArbwAQMy8AGAHPQDAk70AwOY8AADDPABgTL0AAJq7AIBXvQDAEL0AAEg7AABuPAAgWr0AgAa9AECCPQAADLsAoEi9AEDFPACQgT0AYGy9AIAMPQBgP70A4GQ9AABkuwAAMD0AgHM8AADovACAIz0AALi8AIAYPQCAKLwAAD28AOARPQBAeb0AgM48AKACPQAgPD0AgHU9AMCdvACAOb0AAKI7AOBzvQBQgL0AAKg7AGBnPQAA4LkA0NC9AABWOwCA/TwAQK89AEAKvQAAILkAABE9AMDzvABgaL0AACq7AKBXPQBAi7wAAJK9ACCavQCgXb0AYEg9AAAIOgAAxrsAACg7AECDPAAAeT0AALk8AKBqPQCQqL0AwIA8AIC0PADA3bwAgFg8AOBSvQDgsD0=","chunkHash":"4267774b8bb9f326d2608f1d45b9ab1736d78c93de62b49233649c1ec521d2ef"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef main():\n    #...\n            class_csv_path=args.class_csv,\n            batch_size=args.batch_size,\n            num_workers=0,  # Set to 0 to avoid multiprocessing pickling issues\n            sample_ids=args.sample_ids,\n            debug=True\n        )\n        print(f\"Loaded raw dataloader with {len(dataloader.dataset)} samples\")\n    \n    # Process batches\n    for i, batch in enumerate(dataloader):\n        prefix = \"adapted\" if args.adapted else \"raw\"\n        batch_name = f\"{prefix}_batch_{i}\"\n        type_name = \"cytoplasm\" if args.is_cytoplasm else \"nucleus\"\n        \n        # Create visualization of slices\n        output_path = os.path.join(args.output_dir, f\"{batch_name}_{type_name}_slices.png\") if args.output_dir else None\n        visualize_lowres_batch(batch, output_path=output_path, show=not args.no_show)\n        \n        # Create 3D visualization\n        #...\n```","range":{"startLineNumber":269,"startColumn":0,"endLineNumber":288,"endColumn":0},"embedding":"AABQPAAADDsAMIY9AIA6vQBAWb0AAHK9AIALvQAgaL0AsJS9AADtuwBAjDwAwI88AIA5PABgNb0AgKi8AIBfPQCAhbwAABU9AOAfvQBgCD0AIIw9AAAgvQCA8DwAgG08AAD1uwAAOrwAgGu8AEBrPQDgHD0AoDu9AGA4vQCAK70AgFW9AKAZvQDIAb4AALq8AIAjPQCATbwAALw8AOA8vQBwkT0AoMK9AOArPQCAhz0AoNI9AMAxPQBAzDwAoFq9AIBNPQCAYLwAgMK8ABDdPQAAdjwAgPc8AADBvADANz0AgFe9AACAuAAAG7wAgHy9ACCOPQAAyLsAICc9AMBWPQDAS70AgN48AOCTvQBADL0AwIi8AIBMPACACzwAAKi6AABYvADAYb0A4Bc9AECevAAA47wAgJQ8ADC8vQCAH70AACA7AICCPQBgDD0AAJM7AIAsvABQpL0AoCK9AED/vACgFT0AgD+9AAAVPADAbT0AMK29AKATPQAA/jwAMIs9AMCKPACghr0AQCY9AGAAPQAAbz0AQBg9AOA/vQBAwjwAQNg8AABZvAAAyDwAQOm8AADQugAgfj0AgK+8AAAVvQDAaz0AYDi9AEC8PADAhb0AANc7AECpvABApbwA4By9AGgAvgCAozwAgAu8AIC5vAAAirwAAEA7ALCCPQAAtbwAYAI9AIAgPQAAGj0AAPa7AMD5PABQtb0AgD68AEBivQCAFDwAgOE8AABkvABIAT4AgKE8AMBMPQDgED0AAEA6AECkvADgoD0AALO9AOCmPQDAr7wAAC09AIDnPADglD0AQNE8AFCWvQDAL70AQCS9AIC8PADgHz0AoAC9AAC3vAAAaDwAADi8AAAcPQAAOLoAwIa9AMChPACAL7wAgPq8AOC8vQAwor0AAAK7AAC7vAAALT0A4FO9AFCUPQCACzwAAMu8AABYOwDAy7wAALg6AMApvQCAI70AgI+8ACBpvQCwjr0AgGC9AICIPADAyTwAoAW9AAASPAAApTwAACY9AMDyvAAA0zsAwIU8AMD2vADAhD0AABk8AABGuwAgXj0AwMS8AHCXPQAACb0AYJG9AACAOAAgjb0AwCM9AOAqvQCAfrwAgHg8AACbOwCAejwAAH48AACZOwDA6rwAwMC8AMDsvABQzD0AQF89AABcOwAArLwAQJs8AACsuwBATD0AYBk9AABmvACAbLwAAOm8AAA4PADAOD0AQB89AIBHvQCAyDwA4CY9AMACPQAAKbwAgCg8AMChvQAA2TwAQKU8AMAyvQCACD0AAOU8AACHuwDgpT0AAFA6AOBTvQAQ1r0AgPU8AAAYugBA9TwAABG8AACIugBIBL4AICa9AECbvADAob0AAM68AGBVvQAAIbwAQKg8AABKuwCgGL0AABI9AEDiPADAAD0AAKU8AICTPAAA57wAADu8AOBlPQAA3DwAIBk9AACBPADAF70AICg9AMArPQAAmz0AwOE8AIAgPQCgYb0AAEQ7AADIOwCA+zwAAOY7AACmvADw2b0AAMQ8AMDTvACA8rwAwIg8AADVOwBAC70AsIW9AIBDvAAgED0AAMA4AEANPQAAa7wAwKi9AABjvABgNL0A4AU9AMC8PQAAGjwAALU7AEAsvQBgdz0AgGU9AEDxPAAAd70AAAW9AJClPQDA9TwAQL08AAAivACghz0AgHc8AOCMPQDA8rwAIJ+9ABCGvQCArTwAULM9AOAfvQCAazwAgCq9AMA9vQDgTT0AwGW9AABwuwAA77wAQOS8AAAbPQCAAbwAQKi8AABeuwAABz0AAFK7AEDZPACg0L0AQJS8AGDZvQAAWbwAQO88AMBPPQDAVj0AwKI9AABGOwDgT70AgJE8AABKvQCgVr0AANA8AADAOwAAzbwAgDe8ADDJvQDA7LwAAFC7AKAivQAgIT0AoNI9AIDGPADgCT0AoDs9AAAYOgCgJ70AwPY8AABsOwAQtT0AwNY8AOCTvQAACr0AAJe9ADClvQBwqj0AcIw9AMBevQAAfj0AYEm9AGCHPQBgET0AgMi8AMCgvACA9DwAQMo8AMCmPABgNb0AAA28AGBfPQDgQL0AQJE8AED4PAAAgLsAAMQ8AAApPAAAlj0AwBM9AEAJPQCAKzwAwOk8AAAVvQCAUb0AQK08AAC9PACAwTwAAO48AEBQPQBAVb0AALo8AMB2vQAACjsAIJW9AIBSPABgTL0AAIW9AIAzPACwgL0AwL89AMDMvACAFDwAACC9AEAuPQAAarwAIAY+AFCrPQCgPr0AgF48AIAdPAAA0DkAAOC5AAADvAAAfjsAwIq8AGALvQCAPbwAwOK8AEDTPABA/7wAADu8AAB3PADAVL0AYAe9AKAwvQBgSb0AAKq8AABYOwDAnLwAADy9AACtPQCAX7wA4Hu9AIAlPQDgCD0A4Iy9AMCaPADge70AIDU9AAB6vAAgPz0AgJA9AMAIvQDgLD0AADa7AKARPQBAyLwAAMK7AMBjPQAAPL0AQFI9AGAIPQAArzsAgD89AGBBvQDAL70AgEm8AOAfvQAAg70AgCC8AEBiPQAAozsAMKy9AICyPABARz0AUJ49AMCFvABAl7wAID89ACAdvQCAxbwAAF+8AMCaPAAAgrwA4C+9AMAcvQDAnr0AAHg8AAAlPADAHL0AgOk8AACwugCAhT0AAFI7ACAuPQDASb0AALm7AABhPAAAEDwAwNw8AACwvADATD0=","chunkHash":"c422f7f4ec07459f70e8dc84b9ed194cd863550dfffec51cf723943e48eda41d"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\n#...\ndef main():\n    #...\n        output_path = os.path.join(args.output_dir, f\"{batch_name}_{type_name}_3d.png\") if args.output_dir else None\n        visualize_lowres_3d(batch, output_path=output_path, show=not args.no_show)\n        \n        # Create projection visualization\n        output_path = os.path.join(args.output_dir, f\"{batch_name}_{type_name}_projections.png\") if args.output_dir else None\n        visualize_lowres_projections(batch, output_path=output_path, show=not args.no_show)\n        \n        # Only process 2 batches to avoid too many visualizations\n        if i >= 1:\n            break\n    \n    print(\"Visualization complete!\")\n#...\n```","range":{"startLineNumber":288,"startColumn":0,"endLineNumber":299,"endColumn":36},"embedding":"AMC9vAAAaTwAAHU9AOCvvQDg4L0AoIG9AAALvAAgV70AwGi9AAAQOgDAgLwAAN08AIAZvADASb0AYCa9AIA3PQAAhr0AQDM9AADEvAAADzwAoC49AMBZvQDA7jwAwJ68AMDjvAAA6DoAAHo7AOB9PQBA8zwAAMs8AEDBvACA+rwAsLK9AMBgvQB4Cb4AABi6AIADPACAE70AQDg9ACA5vQAQ0T0AcKa9AGAzPQBAdT0AMKA9AFCtPQAArzwAIGa9AIAEPQAA8zsAwPS8AKC1PQCAlT0AgAs8AABGOwCAgTwAYCu9AABSvAAAMrsAQIK9ALDLPQCAOTwAMJc9ACBuPQDA3rwAQDg9AMAZvQCA+LwAAF08AACMugAgPr0AAOQ7AGBWvQBA0rwAgEa8AAAguwAgSb0AAGS8AJCbvQCAkb0AAAi8AKA4PQDgUD0AIHE9AADruwDAeb0AoE+9AEAovQCAm7wAgBK9AKAGvQBAkj0AAGy9AECDPQCATjwAwHM9AICJPACQib0AQAk9AMAlPQBARj0AwLs8AKBmvQAA7jwAgN08AAAJPQAAQjsAYEA9AAANPQBAQT0AwNm8AAAnvQBwhz0AgHm8AECfPACAXb0A4Fs9AABEuwBgA70AgIO9AOBovQAAwjwAgIS8AMC9vAAACDsAAFc9AABbPQDgB70AwFI9AICiPAAAjbsAAJA6AKBNPQDQi70AwKq8AHClvQAAFjwAgBQ9AMDZvADQ4z0A4BY9AGB5PQAA0jwAAEA6AADruwDA2z0AIJy9AMAxPQAAWDoAYEk9AAAEOwAgwD0AQAI9ACB6vQCgR70AQMm8AMArPQAgVj0AgE88AAC4OgAAETwAAIS8AOCxPQAA7zsAwEC9AIBkPACAWjwAAA08AKCevQAgdr0AADE8AAAwPQAA/DoAgJK9AIgLPgCAIzwA8IG9AAAJvAAAGLsAAFw7AAB9vAAA+LoAQBq9AIBZvQCgbr0AwIa8ACA6PQAAt7sAwLy8AMAGPQCAFT0AYCs9AADougDgHD0AEJU9AOBrvQDAKz0AAEK8AEDrvACAID0AwLe8AIAcPQAABjsAwNe8AABXvAAgbr0AoBc9AJCcvQBArbwAANA6AIAtvAAAiT0AQN48AACkuwDAjbwAAES8AMD3vACQ1j0AAIM7AIBWvAAABL0AAG28AMCrvACAIz0AwHQ9AIDQPAAArbsAYGu9AIB+PQAAkjsAAIc7AADVuwAAfjwAAHM9AKAHPQBAs7wAgA08AED0vADApzwAwAW9AIC0PADATj0AYB89AIA1vABgnj0AwLa8AAAwuwAghL0AAOu7AIAPvQAAAjwAgCa8AAAkvQDw8r0AAEG8AMA8vQCAh70AQOG8AKBEvQAAh7sAAKY7AAC5vACAI70AAKe7AAAqvABwoz0AAGE8AABsPAAA6DoAADE8AMDnPABgKD0AAIg9AAC5PADAnrwAwIQ9ACAePQAAmD0AwO88AAA5vABAvLwAACC8AADjOwDgJD0AAMM7AAC5vACwir0AwAw9AIBxvACAKr0AoBU9AIDVPABAIb0AAFC9AIADvQAAFj0AAFI8AACAuAAA3zsAwPy8AADKuwDA4bwAgKy8AJC8PQAAgrsAgBI8AMCpvACggT0AgIw9ACBpPQAAt7wAAI+9AOBiPQAA1DsAANo7AIBwvQAAhDsAgDc9AKBMPQCgIL0AgGm8AICdvQCA8zwAIEs9AMCwvADAorwAgEe9ACAovQCA4TwAAMq8AAADPQAge70AwPq8AMBqPQBA5TwAgAU9AABAuwCANTwAwIQ8AACguQDg6b0AAGC8ACDuvQCAJrwAYDI9AAAYPQAATT0AwHE9AABMPQDgTb0AYC49ACBqvQAAZ70AACo7AECHPACAQL0AAMA5AJCavQAAhr0AwLc8AMAYvQCAbDwAIIQ9AABbvAAAeLwAQGw9AMCzvAAAJb0AoAg9AMAhPQBg5j0AANY8ADCGvQAA+7wAsMm9AECdvQBggD0AwFs9AIBqvQAAPjwA0Ne9AADQOwDAtjwAgA+8AKAWvQBApzwAANQ8AGAPPQCgK70AgAI8ACCzPQCAZr0AAIY7AECbPACgdz0A4A49AMCPPAAQtT0AgKM8AACUPAAAqbwAQKA8ACA2vQAAsrwAACq7ACBKPQDA1DwAABM8ANCbPQCgBL0AwPk8AKB7vQBAgLwAUMW9AIBIPABAK70AQJi8AIAFvABAXL0AYHI9AGAOvQAA9TwAgLO8AMCAPQDAtbwAoNA9AOCjPQCABrwAQPI8AMD2vAAAGDsAAGG8AIBtvAAgJT0AABQ7AKAYvQAA7LoAgAK9AAAWPAAANDwAADK8AEDRvADgbr0AIBi9AKCEvQDgX70A4Hq9AMClPAAA07sAwJe8AIC4PACAkLwAUKG9AAB0PACA0jwAAOu7AMBzPQDAm7wAgA68AIAOPADgFj0AYDQ9AABwvQAgTD0AgDq8AAChuwAA5zsAAF08AADyOwDgcr0AoBM9AAD4OgBAJD0AwOw8AACyvQAAbL0AAL+8AIDavACgaL0AALQ6AJCZPQBAljwAoJS9AGAJPQCAhTwAwFk9AAAiuwDAs7wAAHy8AMCQvACACb0AQI28AADXOwAAhbwAgJO9AEDsvABgm70A4BA9AADzOwCAkLwAUJc9AMCvPACAej0AAAS7AGBgPQCAt7wAwNY8AACYugAANDsAoFM9AAD5vADA+Dw=","chunkHash":"f8215d77fb6312204fed23dd70257532c4874f6cc364e8ceee1c5f347960b2a7"},{"text":"File: `scripts/temp/visualize_lowres_samples.py`\n```python\nimport os\nimport sys\nimport torch\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom PIL import Image\nimport argparse\n\n# Add parent directory to path to allow imports\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), \"../..\")))\nfrom dataloader.lowres_image_dataloader import get_lowres_image_dataloader\nfrom dataloader.lowres_texture_adapter import get_morphofeatures_texture_dataloader\n\ndef visualize_lowres_batch(batch, output_path=None, show=True):\n    #...\ndef visualize_lowres_3d(batch, output_path=None, show=True):\n    #...\ndef visualize_lowres_projections(batch, output_path=None, show=True):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":303,"endColumn":0},"embedding":"AIBnvAAAiLsAgEk9AKCPvQBgIr0AIDO9AMD4vADgKb0AkIi9AAANPAAAJjsAYGQ9AACyvACgKL0AAL07AKADPQDAuLwAgEc9AGBuvQCgID0AAFw9AID5vACALjwAQFW9AABQOgAAWLwAACA8AMAbPQAQhT0AYEE9AAAAvQCAprwAoJa9AEDqvACw7r0AQN68AADnOwBAqbwAwIs8AAAUvQDgoj0AAM29AKB3PQAAnDwAcIY9AIDgPADA0DwA4K29AHCPPQAAILsAgHC8AEB9PQDAaT0AwOU8AEAavQAAzDwAwPO8AECzvABA9DwAwIC8AHCDPQBA6bwAgGo9AEClPABARL0AYAw9ACCcvQCATb0AAMg8AAAbPADAs7wAAJU7AIB/vABgvr0AwAE9AACEuwAAXb0AACQ9AKCgvQAAar0AAL07AOBZPQDAID0AYEY9AMCgvADgYb0AcLC9AACevACAyDwAQHK9AMDYvAAAVj0AoDi9AKAvPQAAdTwA4Jk9AIDZPACQpL0AoGY9AADkOgAgYj0AIA49AEAAvQAACT0AAP88AEDRPABAhbwAgIe8AADZOwAQrT0AwCy9AABnvQAAPT0AAM67AMD2PAAAe70AYGA9AAAtPAAAWLoAgKa8AICyvQAA4jwAAHu8AADquwCAcDwAwBk9AMD7PABAi7wA4A89AACTuwCA9DwAAII7AGBnPQAg7r0AQK+8AOC2vQAA1TwAgJW8AIBmvABw4D0AwBo9AIAuPQAA5rsAgAQ8AIDsvACAjj0AQG29AECUPQAAIDwAoIo9AAAfPACAVT0AoAE9ACBbvQCAzbwAwDi9AADWPADQkj0AgES8AABIOwDAhzwAAJ87AEBXPQCgcD0AgO28AKALPQBA7LwAgFg8ACBRvQBAnr0AgMu8AAAGPABgIT0A0NK9AGDGPQAACDwAwFi9AADVOwCAz7wAAFK8AGAVvQAAILwAALS6AOAavQBwgL0AgIG9AKBAPQAgCj0AAAG9AIBsPQAA4jwAACk9AMDjvAAAuDwA8KA9AIAXvQCQhj0AAGS7AKAdvQCAITwAAJG7AKC/PQCAVz0AALq8AABOPADARL0AAE67ABCIvQAAvbsAABa8AECGvABAQj0AwIU8AAAOPQAAU7wAANm8AACZvADApD0AgGM8AIBCPAAAuTsAQD69AABXPABAsTwAwJM8AAACuwCABrwAYKe9ACCTPQAA3DoAAFQ7AIAZPACAsTwAwI89AEBFPQAAEDsAAF68AMA9vQCAMTwAANy6AADQuwAACD0AgIg8AAB7vAAAQz0AAGC8AIAwvQAAcL0AQIG8AMDQvABgVT0AwAu9AEDnvABg3L0AgNK8AAC3OwBwur0AQH29ACAbvQAA7LoAQJI8AAAAOQDAtLwAgEK8AICyPAAArDsAALm8AMDbPADAybwAAKu7AECUPQAgFT0AQH09AMC8PADgmr0AMIM9AABqPADgCT0AoFA9AOAmPQCAprwAAOW7AABKuwAA7zwAYBK9AADBvAAAX70AgIg8AKAEvQAAcr0AQOw8AAB2vAAgVL0AIGa9AAAYuwAAZrwAwOc8AMACPQAgPj0AEIm9AICrvABAVL0AAO+7AIAAPQAAjTwAAGK7AAB8OwAAZD0AIFk9AOA8PQDgN70AADK9AOCuPQCAFTwAAHK8AIDnvABAYz0AgEe8AEBhPQBA3rwAQIe9AFDtvQAA9zsAwPI8AKB2vQAAkjwA0JW9AMAqvQCARzwAQOu8AEC6PABAd70AQLA8AMAoPQAALjwAgPg8AADlOwBgUT0AgKS8AIAdvABQ1r0AQFC9AICevQAAdDsAEJY9AMBKPQDQgD0AAFE9AMAuPQCA0LwAQMs8AIBPPAAgLr0AIBg9AAAqvAAAcrsAAPg6AIAwvQAAMr0AIBE9ALCnvQAAFz0AsK89AIAJPACAcDwAgMY8AECgvAAAsDsAgBg8AED5PABgtT0AAJa7AIBpvQBAxbwAyAG+AOARvQDAPj0A4CE9AOBkvQAAFz0AwJm9AAAgvAAALj0AgDa8AMCBvAAAmDoAQGY9AIAMvAAAKbwAgMM8AKCYPQCACbwAACK7AAAxPQDAljwAQOE8AAADvADAoz0AAOs8AMDrPAAAfrwAgFg8AECWvABAxbwAQMs8ABCCPQCgQj0AQCw9AGAYPQCAzrwAAOU7AMDCvQAgEr0AAK69AADgOQAgNb0AAMa8AICIvAAgaL0A4Nc9AEAHvQAAJTwAAAu8AAAnPQAAX7wAMOs9AEDGPQDgAr0AAA47AAC1uwCAMzwAwD29AEDqvACgEj0AAH47AED0vAAAhbwAANU8AIBGPABA0rwAAL+7AADsuwDAUb0AoA+9AICXvQBgH70AACG9ACADPQCAHDwAYD29AACBPQCA7rwA4CS9AMCkPAAAMT0AIJG9AMDfPABgJ70AgAc8AEAnvQCgaT0AAAA4AACOvADgST0A4Bo9AED4PACARLwAgF69ACAcPQCAWr0A4KM9AADVPADA+DwAAFU9AEAcvQDA3rwAgHU8AAADvQCQuL0AoE69AFClPQAAAjwA4Iu9AACIOwDAtjwAAM09AIA/vAAASTwAgBc9AKA5vQCAgr0AAIo8APCJPQAAg7wAgHm9ACA/vQAA2L0A4Gw9AABAugBAEL0AgI48AICHvACATz0AgIe8APCSPQBgQL0AgGO8AADDuwCAvLwAwFY9AABavADQnz0=","chunkHash":"1333fc74377b607fe3f55bbe55f10c36c2a267c714a58f6764c2b4bb4da3afcb"}]},"file:///teamspace/studios/this_studio/scripts/finetune_vgg3d_masked.py":{"hash":"528bafae6ba00643aeb5ee7fd531271b48bb72d34ae65229ba4957dae36ec5b1","entries":[{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\nclass MaskAttentionModule(nn.Module):\n    def __init__(self, in_channels):\n        super(MaskAttentionModule, self).__init__()\n        self.conv = nn.Conv3d(1, in_channels, kernel_size=1, stride=1, padding=0, bias=False)\n        self.sigmoid = nn.Sigmoid()\n        \n    def forward(self, x, mask):\n        \"\"\"\n        Apply mask-guided attention to features\n        \n        Args:\n            x: Feature tensor (B, C, D, H, W)\n            mask: Binary mask tensor (B, 1, D, H, W) - already resized to match x\n            \n        Returns:\n            Attention-weighted features\n        \"\"\"\n        # Generate attention weights from mask\n        attention = self.conv(mask)\n        attention = self.sigmoid(attention)\n        \n        # Apply attention weights to features\n        return x * attention\n#...\n```","range":{"startLineNumber":38,"startColumn":0,"endLineNumber":60,"endColumn":28},"embedding":"AABdPAAAIrsAAHa7AIAJvQBAFL0A4Kq9AABDvAAQ0j0AoGq9AAA7PQAAaLwAQF69AECnvABArTwAAJu8ACAiPQAAFDsAYFk9AAASvACARTwAwB+9AICDPQAA4jwAwM48AEAvvQCAA70A4AA9AACrPADguT0AYAI9AIAyvAAA+bwAYHa9AHCXvQCQhb0AAPU8AMBlPQBwlD0AwBW9AIBUPQCgCT0AgLm9AOBXvQAAGrwAIB89AEAJvQAAEz0AgP68AEDRvABQlz0AQJ28AEDJPAAAtr0AgOE8AMA6PQAgDz0AAGw8AICIPAAA9TwAgGA9AIBuPABAy70AgD28AAAAPAAAWDsAQD49APDQvQCABLwAQI88AMBmvQAAo7sAAPo8AAASPACgTj0AcIU9AMD1PAAAcLwAAFc9AKA0vQAAPjwAgEY8AICBvABAvrwAAPQ8AKBgvQDQ5L0A8JS9ABCBvQBAW70AgGk8AABJvAAgVj0AAJC9AGBzPQAAhLoAMJ09AADouwBgL70AAGI9AICDPACoCz4AQPY8AEClPAAAI7wAgIs9AIAnPACgcz0AAF88AABIPQDAfT0AAO87ACBTvQAAhj0AgEo9AGBSPQCATDwAwKo8AABvPAAAJjsAgLE8AMBavQAAFrsAAIW8AACivQAA/LsAwI28ADCSPQCAs70AAKy7AADdvADA+TwAQCA9AMCyPAAA1rsAwLO8AADcvACAMbwAkMo9AADBvQCAST0AAJy7AEAtvQAAVT0AgK08AECavQAAjLwAMJu9AGClPQBgLr0AwKo9ACA6vQBwtj0AgII8AMDbvACgF70A4Ii9ACA3vQDAKz0AAG67AMC/vQAgBz0AQMC8AAAcPAAAibwAAIM7ACCaPQAAGr0AALw8AADyvACQrL0AALQ8AABkuwAQsD0AgFy8AIB9PQBAmzwAICC9AAC0vACQhb0AAOc7AEC/vAAA9jsAAJc7AAD8uwBADL0AAJ27AADPOwBA2bwAAFi7AABuPAAA1zwAoHk9AMC3PACAkj0AgIq8AKBlvQAgGD0AQKa8AJC2PQDA8jwAMPC9AIB4PADgGL0AwIS8AMAcPQCAVL0AwJq8AMDFPABQnb0AYAm9ACBKPQDgFL0AgIM9AIADvAAARb0AAJo8AIAgvAAAKrwAIAw9ALCQPQBgcT0AAAA7AKArPQAAKT0AwK+8AIBFvAAA7DoAADY8AAARvQDA7LwAAJ68AACKuwDAojwAAFK8AEBJvQBgqr0AwFQ9ACArvQCQqD0AwNQ8AGA+vQAAGDsAQJQ8AECWvAAAozsAAEc8AICbPADgHr0AgM08AGCaPQDgEj0AgIc9AEDTvABAFL0AgMS8AEASPQAAvDsAwLI8ABCCvQAAMr0AgE08AABqOwCgM70AIHC9AKAkPQAgPL0AQPy8ACB0PQAA0DkAAGA8AOA1PQAAZrwAICw9AAAguQAAKrwAoAw9AOBzPQAwoD0AgFs8AOCOvQBAYL0AAEi7AMBuPQBACj0AADs8AABYvQAgaL0AgJG9AOBtvQDA77wAYDU9AABuvQAAUD0AwIS8AAAQOgAAa7wAIDK9AKApvQAART0AYIO9AHCdPQAApzwAoGq9AAC3uwAAkL0AcJ09AIAmvAAAFz0AsJM9AOAXvQCA+DwAQAm9AMBuPQAACrwAgJq8AADkOgBgQT0AAJs8AMCPvAAAGjsAQLO9AGAavQAAmrwAAFC6AGBHPQBA0LwAwJe8AKAEPQBAnTwAIKO9AIAevAAAwDkAwD+9AKCKvQDwoL0AwA09AMC2vACgTD0AgEC8AABAOQAg7L0AIAm9AIDcvABAi70AAPo7AEAuPQAAQzwAwLM8AMD2PADAxbwAgGW9AACcuwBwjj0AKAC+AKAQvQAAkLkAgJe8AAA/vACAz7wAAKW7AOAsvQCAhjwAQHQ9AECFvACA/TwAQI+8AED9PAAAxLoAQLc8AKAvPQBgGT0AAGS7AOCOvQCAqr0AoKm9AEASvQDAZT0AAPs8AMCyvACAyLwA4Ds9AMBMPQAApjwA4Ka9AACYOgCANTwAYCE9AABYPABwgb0AAHm8ACAjvQAwmL0AgG88ALDiPQAAFjsAgDG8AABhPQAAazwAwMQ8AADxPQBA57wAwLI8AIAPPACAVLwAAGg8AKBmPQAAoDoA4HM9AICDvABApLwAgOI8AABAvQAAIj0AgGm8AGBVvQAAvjsAgJO8AAC0uwCQib0AAHg8AKBTvQDA6DwAACc9AAA6PADAB70AgD+8AADfPACgBL0AQO08AABCPQAAk70AQJQ8AEBEvQDAS70AwO+8ADCdvQDAkDwAMIQ9AADBuwCAP7wAQPG8AIAyvACAEL0AgKY8AAAzvAAAkzsAYCK9AMCAvAAABrwA4DK9AADwvABwk70AgCo9AEDdPAAAbzwAQHe9AGCzPQAATT0AgGW8AKAKvQDgDD0AQCe9AAC5uwBgWj0AoHe9AAD3PAAAzTsAAMQ6ACCUPQDAnjwAABg8AIB8PADAgz0AgOc8AABHvAAgH70AIFM9AMD8PAAAQDkAwCy9ADCDPQCA3zwAAE67AIAHvABAQj0A4OI9AAASvAAgIb0AgIM9AAAougAAAb0AwKU8AMDZvACAXrwAQCc9AGCMvQBgi70AACG8AACEOwBAG70AgC49AMCMPACgnD0AYDq9AMCgPAAANLsAwOM8AADmPABA5bwAADM8AED6vAAApzs=","chunkHash":"b59fb61c88bc4f95ccc993025908130f884fc2750e8b751121d41f457f384759"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\nclass MaskedVgg3DAdapter(nn.Module):\n    def __init__(self, base_model, input_size, num_classes, classifier_size=512):\n        super(MaskedVgg3DAdapter, self).__init__()\n        self.features = base_model.features\n        self.num_classes = num_classes\n        self.classifier_size = classifier_size\n        self.initialized = False\n        \n        # Create an attention module for each feature layer\n        self.attention_modules = nn.ModuleList()\n        for i, layer in enumerate(self.features):\n            if isinstance(layer, nn.Conv3d):\n                self.attention_modules.append(MaskAttentionModule(layer.out_channels))\n        \n        # We'll create the classifier during the first forward pass\n        # to ensure it matches the actual dimensions of the input data\n        self.classifier = None\n        print(\"Classifier will be initialized on first forward pass to match real input dimensions\")\n    #...\n```","range":{"startLineNumber":64,"startColumn":4,"endLineNumber":80,"endColumn":100},"embedding":"AMAJvQAA0LkAgA09AKCVvQCgh70AAHe9AIB8vADA1jwAgIG9ADCWPQAALrsAwLy8AACIugAA1jsAAJm7AIDavAAAN7wA4M89AIA/vABQoT0AgCw8AACcPACgHj0AgIG8AABovADAsrwAwIM9AIACPQDQqT0A4Ac9AADruwCA3rwA4OS9AADCuwAwnr0AACI7AKBgPQDgBT0AMIm9AIBfPQDgUD0AcMC9AAC4vADAWT0AIGw9AIDWvACgnj0AQIK8AABavQAAMz0AQKe8AGB4PQAgVr0AANk8AAA9PACARD0AAPY7AACMugAACD0AoDM9AADKuwCAlL0AACA6AACXOwAA3DsAABS7ACCcvQAA2DwAADm8AMDEvADAjL0AAIS8AIC7vADAyzwAAHo8AKA1PQBAozwAYMQ9AAC/vQAAtzwAANw7AACCPACgIb0AYG89ACCTvQAQw70AsN+9AGAfvQCwsL0AQNS8AIAyPABgHz0AENq9AODcPQCAFjwAQKo9AIBNPACwq70AMKc9AECZvAAA3j0AwBo9AACLOwBA0zwAoAs9AMAIvQAA/DoAgN48AMCSPACwwj0AAGK8AADDvACwgT0AwAe9AABYOgAAwDgAYDU9AIAQPQCASbwAAEy8AAB2uwCAVbwAwEQ9ACCrvQAAADgAAKU7AOBFPQCAkrwAoD+9AACquwDApbwAwCY9AMBCPQAAbDsAgNi8AAAmvQAAIrwAEJA9AGCqvQDAVD0AgFi8AADNvAAAIT0AAH67ACCDvQBAJT0AUJe9ACBRPQAwvr0A4EU9ADCQvQDQqz0AAM87AGA8vQCAfL0AgF68AABmuwDgBj0AYI09AEDvvAAAmDwAQPS8ACABPQBAyLwAAKe8ACBIPQDAEb0AAGC6ACCivQAAfb0A4G89AECMPAAgOz0AYCO9AKAnPQAAMbwAQNa8AAAtPAAA3bwAoH29AMAZvQAAx7sAAJs8AAAwOgDAHb0AgFY8AAAuvACAA7wAYAc9AAC5vABA/TwAgDs9AMCdPAAgZj0AIFE9AABOOwBADj0AIHS9AACqPQCALT0A4Gm9AADxOwAAtLwAwOi8AOA5PQBQmb0AABi7AACjPAAAPLwAAPK7AMCJPQAAPrwAUKE9ACB2vQDAybwAAMC4AIABvQAAr7sAwBk9AIDEPAAgCD0AQPs8AABRvACAn7wAwOU8AMDEvAAAELwAAN67ACCGvQAAjbwAANq8AECPvQAAmzwAwJ28AKAevQAAoL0AgCo8AGA/vQBAOz0AwHI9AADTOwAgOz0AQKQ8AAD6vAAA6TwAQKs8AMDfvABgTb0AICw9AMCQPQBAbz0AUKY9AGBFvQAAursAAKi8AFC1PQAAcDoAADY8AIBOvADAVr0AAN27AABqOwCgRL0AAAM8AIBOPAAAGbwAgDO8AOAKPQAAabwAAAM9ACCHPQDA/LwA4Aw9AACSuwAAAjsAgOI8AIBqPQBgrT0A8KM9AAC9uwDgCL0AwLI8ANCSPQBgVD0AAFk8AABLPAAAJ7wAwMA8AHCOvQBA9rwAgAI8AOBpvQDAET0AAOu7AICoPADAmjwAsIK9AAAqPAAgLj0AIJu9AGCMPQDAxDwAAF67APC5PQCwv70AwE89AKADPQBA1jwAACE9AMAfvQBAt7wA4Aq9AHCQPQBApbwAQIE9AKAuvQAAbrsAgAe8AADCPABArDwA8Mu9AACAPACAR7wAgBM9AKBaPQAAMLoAsJG9AADRuwCAwjwAIGe9AICfPADAg7wAIG+9AMAwvQCAtrwAQOI8AMDivAAgDT0AwN48AKAUPQBQBL4AwPC8AFCGvQAAJbwAgE08AGAqPQBAkLwAoAQ9AICHPQAAgzsAANO8AAB+uwBgGj0A8Im9AECQPACAirwAwJ48AIBtPAAgeL0AAFy7AACYOgCATD0AgEY9AIA5vAAAELwAQJW9AACAOwCATrwAAOe8AADtPAAAgTsAANc8AMBWvQCAJr0AkLe9ABDLvQBArbwAYBE9AACrPAAAarsAQNA8AABaOwCQmD0AwOW8AAATPQAALrsAALY8AMDDvACQmr0AwI48AADHuwDgWL0AALQ7ABC9PQAADz0AAO28ACCIPQAAKDsAAFs8AJDlPQAAuLoAAKE7AEDVvAAABLwAAOI7AGA2PQCA+zwAoGQ9AIAYPAAA+LoA4As9AJD2vQCAbDwAADO8AABnvAAAIj0AALe7ABCJvQBgHr0AgBY9AACBPAAAoLkAQPI8AACVPADAr7wAwJm8AKAYPQDA97wAgCG8AOAbPQCAUb0AANC6AACEugCgJ70AwLy8ACBtvQAAAAAAYI49AIAIvADgnz0AwJO8AABgugDgSL0AoDs9AIBdvAAA3LsAgLy9AID3vABA8bwAgJS8AMAMvQAAT70AgAI8AIBZPQDAvzwAsOi9AKDrPQDwgT0AoDA9AMBVvQBAJj0AIKG9ACB3vQDAlDwAgBS9AIAmPADAwjwAgCU8AHCRPQAAKDsAgAk8AIBZPAAAVD0AAEU8AACrOwDAuLwAwLI8AAC0PACAmbwAgFy8AED5PACAnzwAAOs8AAAuvACALDwAQP89AECTvQAAx7wAIDg9AMCCvACA67wAoFI9AIB7PACAfbwAwNE8AIBGvQBgV70AAFq8AEAGvQBA/bwA4HU9AMAKPQAgRD0AAKy7AECFPABA9LwAgAA8AIAhPABAiLwAAIA9AEAvvQDABD0=","chunkHash":"b57fe092e10beaefc0f39324af474728e0e8ca9bcecfdfa004f63d4fb3c7ced2"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\nclass MaskedVgg3DAdapter(nn.Module):\n    #...\n    def initialize_classifier(self, feature_size):\n        \"\"\"Initialize the classifier based on actual feature size\"\"\"\n        print(f\"Initializing classifier with feature size: {feature_size}\")\n        self.classifier = nn.Sequential(\n            nn.Linear(feature_size, self.classifier_size),\n            nn.ReLU(inplace=True),\n            nn.Dropout(0.5),\n            nn.Linear(self.classifier_size, self.classifier_size),\n            nn.ReLU(inplace=True),\n            nn.Dropout(0.5),\n            nn.Linear(self.classifier_size, self.num_classes),\n        )\n        \n        # Initialize the classifier\n        for m in self.classifier.modules():\n            if isinstance(m, nn.Linear):\n                nn.init.kaiming_normal_(m.weight)\n                nn.init.constant_(m.bias, 0)\n        \n        # Move the classifier to the same device as the features\n        if next(self.features.parameters()).is_cuda:\n            self.classifier = self.classifier.cuda()\n        \n        self.initialized = True\n        return self.classifier\n    #...\n```","range":{"startLineNumber":82,"startColumn":4,"endLineNumber":106,"endColumn":30},"embedding":"AMC4vAAA6jsAAFg8AEDbvAAAPb0AQIu9AACwOgAA9TwAoKO9AECIPQAAhbwAAM47AGABvQAAeDwAAMs7AMD0vABA3LwAYNQ9AMCCvACgfD0AIAU9AICEPABAyTwAICC9AAA6vACgYb0AgB09AIBPPABg0T0AQJ48AEDCvABgAb0AoMO9AKA8vQBgNb0AADC7AEBvPQBACD0AEIe9AMAwPQBgLD0AQBO+AAB/vQBgKD0AABY8ACAgvQDwuj0AAOa8AGArvQAAlzwAwIa8AMBWPQCAmL0AgF88AIDVPADA7jwAALY8AACCOwAACT0AIGw9AABFPAAwkr0AgKY8AIAFvAAAXzwAYBy9ACBKvQCA5TwAQKS8AMANvQCgHr0AgFC9AECvvABAhjwAQNM8AECfPQAA+LoAkM49APDKvQAAfjwAABe8AACoOwBA+LwAADU9AKBnvQBwxr0A4JS9AMAyvQCAXb0AgJm8AEC6PAAArzsAkKS9APCnPQBAGD0AwCM9AACqPAAgkL0A0Jg9AOAOvQDAqj0AQJU8AABquwCAOTwAoFE9AOB6vQAAdrsAQPI8AMDxPADA3j0AAIe7AACDOwDgYj0AYBG9AEDxvACAoTwAoBc9AOA3PQBAJL0AAHq8AMCiPAAAwbwAAPa7ADCjvQBAi7wAwIQ8AMANPQDgMb0AoGy9AAAmOwCgLL0AgGw8AMAYPQAAizsAgKi8AABovQDAlLwAYEE9ADClvQCAKT0AYCO9AICkvADghj0AAJ47AMDIvQCA0TwAgI69ACAYPQCgyr0AwB89AMAdvQCAwD0AACo9AKBTvQBAFb0AAMA5AAAHvADgRD0AwDA9AIAqvQAAfDsAAEC5AIAgPACAPbwAgLK8AGAOPQDAXL0AACK7AJCkvQDgkb0AwL49AIAfPAAgbj0AQB+9AMAePQAA6LoAAPe7AIDivAAAHLwAkJq9AICRvAAA7zsAgE08AACwOQDgGb0AQBM9AMC6PAAAvbsAQJU9AIALvQAAqzwAYE09AAD4OwAAFT0AQAI9AACcOgDANz0AAGa9AAAdPQDgWj0AUJS9AACOvAAALLsAgNy8AIDBPAD4Ar4AgFO8AADYPAAACrwAALK7AOALPQAA6jsAMJw9AEC1vABAIL0AAAs8AICuvABACb0A4Fc9ACATPQDgVD0AQNY8AAAGvABASL0AAJs7AMDEvAAA+LsAAES8AEBNvQAAWrwAANA5AMAgvQCAGjwAgKS8AGBXvQBAmr0AAOq7AGAYvQCgKD0AsIU9AADZvACAQj0AwKc8AID/vAAAIzwAgEY8AABguQCgdL0AIEM9ACB/PQCAUDwAwDA9AIAAvQCA2bwAQP68AEDCPQDAv7wAADg7AAAhPACQnL0AAKy7AIBAvADQlb0AAKC6AEAxPQCAFr0AIEC9AAByPAAA/bwAsJw9AKCOPQAgB70AgGy8AAA4PACAbTwAACA9AAC9PABg0T0AwE89AECCvACgD70AQIc8ANCkPQDgJj0AAAM8AIB3PAAAQTwAAMk8AICOvQBAab0AAJC7AADUvACACT0AgE28AECmvADgHD0AgFy9AOAIPQAgBD0A4IS9AECaPQBAtjwAgH28ADCHPQDAtr0AsLA9AMAwPQDgZz0A4Kg9AIBBvACAV70A4Bm9AMBvPQAAoLkAYGo9AMCCvQCAQTwAAJ+7AMA2PQAAOLoAMLe9AACOvAAARTwAoCU9AMB9PQCAATwAAMS8AABcOwAA5DsA4Ei9AAAQPAAA3bsAYAG9AEChvAAA/LwAgAo9AMDFvABAxjwAAG47AEAvPQCA7b0AgBq9AEAqvQCAyDwAAHI8AGCbPQDALb0AgB49AMA+PQAAdDwAAOq8AICdPACwgj0AIDC9AABMvACgEb0AgOk8AADwuwCgMr0AwJ68AAD1OwAgaD0AIDc9AICsvADAIL0AgBi9AAANvACAtTwAoAC9AGBMPQAAgjsAAMC7AOAhvQBgcL0A4NC9AGCsvQAAiDsAwPI8AADRuwCAQDwAYD89AAByuwCAkz0AwJO8ABCWPQAAaLwAAG89AACJOwCglr0AAOU7AIAfvABAqLwAAM47AKCWPQAASDwAgCw8AMBWPQDA3rwAIB09AKCOPQBADL0AANA7AAAXvQBgO70AwNo8ACArPQDAJz0AcIk9AACLvAAArDsAAEg8AAAKvgCgCD0AoCC9AIDuvABAvzwA4B29AAD7vACgZr0AgAw9AAAUOwAAk7wAAIC7AABkOwDAHb0AwIu8AMDmPAAATLwAQAK9AICVPABAG70AgK28AAAmPAAAEr0AAO87AOB9vQCAFLwAgLI8AMDjPADAeD0AYBq9AID4PACA5LwAAMO7AAA8uwCAZTwAUI+9AMDjvAAA6rwAAM+7AOBMvQCAY70AAJ08AGBKPQAAljwAqBi+AICqPQCgRz0AYEc9AEC0vAAgfj0AAFO9ANCfvQCACjwAgNC8AMDhPACA4DwAgGy8AFCePQAAPrwAAME8AIAfPACwmj0AwJ88AMCNPABA5rwAwPE8AAC2uwCA/bwAgNy8AGBJPQAAOTwAgM88AIB7vAAAszwAgAw+AMB+vQAAjrwAwCw9AACROwAA9bwAANE8AIAEPQCAa7wAgJY8ANCGvQDAAL0AAOi6ACBNvQDA/7wAMJw9AIDRPAAgMD0AAOA6AAALPQBAgLwAgGQ8AADfvADgGL0A4Go9AJCVvQBAHT0=","chunkHash":"694b76bf55964ef3ce270d1cdb440d1af640ebdd4acebfba72392e8a8a56f0e9"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\nclass MaskedVgg3DAdapter(nn.Module):\n    #...\n    def forward(self, x, mask=None):\n        # Process features with attention if mask is provided\n        if mask is not None:\n            attention_idx = 0\n            cur_mask = mask  # Start with original mask\n            for i, layer in enumerate(self.features):\n                x = layer(x)\n                # Apply attention after convolutional layers\n                if isinstance(layer, nn.Conv3d) and attention_idx < len(self.attention_modules):\n                    # Make sure mask is resized to match current feature dimensions\n                    if cur_mask.size()[2:] != x.size()[2:]:\n                        cur_mask = nn.functional.interpolate(\n                            cur_mask, \n                            size=x.size()[2:], \n                            mode='trilinear', \n                            align_corners=False\n                        )\n                    x = self.attention_modules[attention_idx](x, cur_mask)\n                    attention_idx += 1\n            features = x\n        else:\n            # Standard forward pass without mask attention\n            features = self.features(x)\n        \n        # Flatten\n        #...\n```","range":{"startLineNumber":109,"startColumn":0,"endLineNumber":133,"endColumn":0},"embedding":"AADQOQAAk7sAIAc9AGCFvQDA7rwAwGO9AIAvvACwiT0A4FK9AFCbPQCAAzwAIAi9AIAmvADA4TwAgF+8AACivACA97wAkJ49AAAoOgBAZj0AAJQ6AEAcPQDgCD0AAFi7AMD9vABgGL0AgFI9AECePAAQhD0AgOU8AICsvADA+bwAYMq9ACAuvQDAuL0AwI08AGBhPQDAIj0AwHO9AMBOPQCQpz0AELG9AEAavQAgMD0AwHU9AIAbvABAIz0AoB29AABqvQBART0AAJC6AMBWPQAghL0AwM48AADGOwAAzDwAQLE8AACBvADAzDwAgHI9AACnuwBgxb0AgEi8AADUOgAARDwAwKc8AICovQBA6jwAgMG8AIANvQDgXr0AgKA8AABmvADgAj0AAAA9AID9PAAAIj0AMI49AICMvQAAcjwAAFg8AABMOwBgJr0AIGY9AECgvQDwrL0AwLG9AEBHvQBQkr0AAJ+7AMC6PAAAyTwAUJ29AHCePQDApjwAQKg9AACwuwAAYb0AEOs9AMCovABgyz0AQM08AADcuwDAjLwAAHE9AABwugCAkzwAANw6AMD0PAAwuT0AQJg8ACAkvQAgjT0AABE8AAAHPQDAxjwAwNA8AAAJPAAAMjsAAOa8AEAOvQAAWLoAgFs8AKCXvQAAdrsAAGq7ABCMPQDwhr0AoFq9AAB+uwAAIrsAABE9AEBBPQAA1LsAgKW8AAArvQCAvzwAsKc9APCOvQDgHj0AIBW9AABIvABAIT0AgAC8AKCUvQCAGj0A4DC9ACBYPQBgqr0AoLk9ADCavQDAtT0AQIQ8AMAQvQAApb0AQPG8ACAbvQCgKj0AgG49AIDSvACAOzwAALS8ACAhPQDAobwAYB29AKA+PQCA9LwAAKY8ALCFvQDgjr0AANY8AIAHvQBgIj0AgHu8AOCePQAAErsAAHC7AIA2vAAAr7wAgHy8AADqvAAADDwAwKI8AACFOwCgLb0AAEC5AIDdvABAurwAAKM7AAD7uwBAJT0A8K09AID0PABQmD0AYDI9AEDhvAAAND0AMIS9AFC1PQCAwDwAoI29AABKPABA/7wAQJS8AIBHPQBwj70AAHe8AEDfPADgGr0AwCu9AKCNPQCAkbwA4Hs9AAADvQAAe7wAwJQ8AABdvAAAs7sAIEo9AMBDPQAAYDsAgA49AAAJvACAlrwAAAs9AMCnvABAzbwAgNK8AJDGvQCA2bwAwNa8AIAWvQAAszsAAAW9AICRvADwrr0AAJW7AABkvQAAxjwAkKA9AAD+OwCA4DwAQI88AEC1vAAADj0AgGU8AABEvABgBL0AwCk9AICoPQCAZT0AoGs9AGCmvQDAy7wAgEi8AECEPQDAobwAgGA8ACAXvQCANL0AAMc8AAA6PAAA57wAAAq7AAAgPACAZbwAADG8AKA/PQAAQDoAQEE9ABCUPQAA1TsAQMc8AABqOwBAwbwAQD09AMCaPQDwrj0AkKY9AIDzvAAgGr0AAJy6AHCKPQAgGz0AAN87AMDCvADAp7wAAO48AABFvQAAJr0AAEK7AKBHvQDAgD0AALI7AABDPAAAxTwAIH+9AADtOwBAsDwA8Oa9AOBvPQDAFT0AQPq8AOCfPQDguL0AwH09AABuOwBAHT0AwPE8AICuvABA9LwAwLy8AGBlPQCAmrwAIEY9AACyuwAAmjwAAFm8AAAZPAAA9rsAYOS9AADeuwAA/7sAwCQ9AOBvPQAA57wAoD69AACJPAAA8zwAIGO9AAB1PAAAK7wAIF+9AIB2vQCwo70AgAk9AAAGvQDAXD0AIBk9AABxPADw5b0AQDq9AMCuvAAAeL0AAEc8ACB4PQBAtrwAgNA8AKBXPQAA4LsAYAS9AAAIOgBgZj0AwJG9AMCOPAAAirwAAOI7AIBvPACAbr0AAP67AACVOwAAGj0AQNw8AABwvAAAxDsAACO9AMCrPACASbwAwIC8AOBlPQAAzTwAABE8AGAzvQBAKL0AkJ69ADCSvQAACDsAgEc9AEDEPAAAVTwAAOA8AAChOwBgaT0AAM+8AMCwPAAAtDoAACy7AAAVvAAA2L0AgBu8AICcvABQnb0AACw7AIC1PQAAyzsAQDK9AKCxPQAAm7sAAHA8AADhPQAAuLwAAOM8AIDcvAAA47wAwKU8AKB0PQAAIzwA4Jw9AMCjvAAALrsAAMg7AEDCvQAAfDwAYBG9AACXvACAtjwAQOo8AEDmvACAu7wAYBg9AACMugAAZjwAQOI8AACcOwCAUbwAANO7AAC1PADAh7wAQIG8AMACPQDAUb0AALU7AACUvAAAQL0AwNi8ABCyvQBArDwAYIU9AAA0vAAA7TwA4AO9AAClvABQlr0AYEY9AABeuwDANr0AsIO9AACQvACgN70AwLe8AIDovACAZr0AABM9AMAsPQBAtTwAUNS9ABADPgBgjD0AAH48AEDbvACA6zwAkLy9AECIvAAA2DsA4Aa9AOAkPQCAkTwAAEK7AECrPQAgdj0AgI+8AID6PAAAhD0AgDk9AIAavABAnbwAQEM9ACAgPQCAWbwAAN28AMB5PQCAJz0AgAw8AABevACAFz0A8Mw9AAA0vQAAMbwAgIM9AABWvADAlrwAgDU9AAC3OwDAgrwAoDI9ABCRvQCwqr0AABO8AACrvAAANLwAQGQ9AEBPPQCATT0AwNm8AIALPABAm7wAgC09AADtPAAAxbwAAD49AAAZvQAAlTs=","chunkHash":"dc701955526b14b7e0479a6f3eea7315e902a382bfa6c6a51e86555794abacb3"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\nclass MaskedVgg3DAdapter(nn.Module):\n    #...\n    def forward(self, x, mask=None):\n        #...\n        flatten_features = features.view(features.size(0), -1)\n        \n        # Initialize classifier on first forward pass with actual feature dimensions\n        if not self.initialized:\n            feature_size = flatten_features.size(1)\n            self.initialize_classifier(feature_size)\n        \n        # Run through classifier\n        return self.classifier(flatten_features)\n#...\n```","range":{"startLineNumber":133,"startColumn":0,"endLineNumber":141,"endColumn":48},"embedding":"AIBEvAAAFjwAgIA8AGCKvQDA4LwAsJC9AIBXvACQgj0A8IO9AKCzPQAAuLsAwJK8AIAYvACAkjwAAOy6AAANvAAAA7wAAMc9AMDmvACAwz0AADs8AMCTPACAxTwAwIO8AGBWvQCA+LwAgF89AADgPADAsz0AQDc9AMANvQBABL0AELm9AEAUvQCQmL0AAM47AGBDPQAgJj0AEIa9AOBIPQAAYj0A8OC9AEAwvQDAAT0AwO48AICKvADgbT0AgDi9AADfvABACz0AAPQ6AEA/PQDgg70AQCE9AADnuwBAAT0AQMM8AABYvACAoDwAYDI9AIA2vABAw70AAN+7AABIPACAjjwAALE8AGCdvQBArDwAIAW9AIDuvADAeb0AwIu8AACwOQCgBT0AAJ88AIClPACAmTwAMM49ALCcvQAAijsAgBS8AABkPAAAPL0AIFY9AFCOvQCgur0AIJG9AOAxvQCgpr0AgB88AAD9OwCALTwAgH69AHChPQBAnTwAwKA9AAC2uwCghr0AQNM9AMDVvADwuT0AgAs9AIASvAAAwjsA8Io9AACRvAAAmDsAAPo8AAD8PABw2j0AAAw7AIBuvAAAmj0AAOm7AIBQPADA8jwAgGc8AIDlPAAAjLsAgM+8AACXvACAD7wAAGW8AMCnvQAAh7wAANQ7AAAcPQCQiL0AMIe9AAAYugCgH70AwJ48AGBSPQAA1DsAADO8AKBZvQCAQjwAEJ09AKCGvQAAZz0AoCe9AACwugCAOT0AADi6ACCRvQAgCj0AgIq9AGA8PQBQqb0AIJI9AKBYvQDwyz0AACg9AKAsvQBApL0AAJW8AADvuwCAKj0AIDY9AEAMvQDAkbwAABG8AEAXPQBAh7wAwLa8AACvPACA8bwAAJM7AIBivQCApr0AIDg9AABUvACAOT0AICG9AGBcPQAAgLgAQIo8AOAUvQAAC70AgGm9AABUvAAAuDoAQL88AIBovAAgJ70AACa7AIABvADAt7wAAJs8AIA6PACAQj0AMMU9AECFPACgkz0AAMQ8AICDvACA0jwAwH69AAB/PQCgOT0AcKK9AIAGPABAL70AACi7AACTPADgv70AAOW7AMD4PAAgbr0AAJW8AABQPQAA5TsAQIg9AKBHvQAAx7wAAMQ8AIA2PABA0bwAgIU9AADkPACA6zwAICE9AMDfvAAgTr0AACQ9ACArvQAA2LsAgHW8ACB7vQBAjbwAAJ+7AGAzvQAARjsAwB+9AECQvADwpL0AgB68AGBmvQAAzDwAQJE9AACMOgBA1TwAwKc8AMAivQAAXDwAwIQ8AIAdvACgTL0AIC89AMCCPQBgTD0AgJ89AOCBvQDAF70AADi6AHCYPQCAVLwAAM07AIAVvACgab0AAKc8AIAkvABAI70AgCY8AMC8PADAqLwAgIu8AIDiPAAAKrwA4E09AIB1PQCAeDwAgGQ8AACWOwAAmLwA4DU9AMByPQBA3z0AAKQ9AIDRvABAzrwAwNc8AOB2PQAA1TwAgDa8AAB0vAAArLsAQOY8AKB6vQCAF70AAK07AACZuwAAED0AAHq7AAB0PACABD0AQD+9AABaPAAA5jwAMMS9AACaPQAA9TwAABm8AGB7PQDgxr0AkIU9AEC7PADA0zwAQG49AIC3vACAVL0AICq9AKB1PQCABrwAoFI9AKAfvQBAxzwAgBC8AIDLPAAAh7sAMOy9AABHvAAAGbwAIAM9AOCMPQAAYLsAYGy9AAA2PAAALjwA0IC9AIAnPAAAVLwAoBa9AAA/vQDgf70AYB89AACCuwDgWT0AAGg6AACwPADgDr4AYE+9AABYvQBABr0AQOI8AGBFPQDAzrwAIDY9AIAMPQAAu7sAYAi9AIAPvADgaj0AgGK9AMCqPACANL0AABY8AAAAuwCAJL0AAEy8AADOOwDgRT0AQI08AADwugAAc7wAAGy9AAAOOwAAhrwAgCS8AABuPQAAFDsAAGG8ADCOvQAAP70AgIC9AHCWvQAAOrsAQO08AAAqPAAA/TsAQAU9AADkuwDgHT0A4Au9AEDhPAAAeLoAgK88AIA6vABQsr0AgJY8AIC8vACAbr0AAJE7APClPQAAYzwAwBy9APDOPQAA4DsAQIo8AJDHPQAAW70AANs7AIANvQBAk7wAAJE7AOCWPQAgDj0AMIc9AABTvACAPzwAAO+7AGDyvQBAvDwAANC8AAAiuwAAwTsAALs8AKBBvQBAy7wA4CY9AMDbPACAYjwAAFA8AADAOwAA9rsAAKa7AACHPACAN7wAQPa8AOA3PQCAHr0AgKq8AMCCvACgPb0AACu8AICdvQCAjjwAQHo9AAANPAAwlj0AwOS8AAC0uwCAEr0AIEE9AAB8vADgK70AQF+9AABGvABAOL0AwNu8AICCvACwkr0AAPM7AMC8PAAAEj0AsPu9ANDVPQCwgT0A4B89AIBRvABA8zwAUIq9AIA9vQBAgzwAgK28AEDQPAAAKz0AAKC6AOC1PQCgTT0AAHC8ACALPQDAbz0AwDA9AACMOwAAbLsAAEE9AAD4ugAA2bwAAMa7AGA6PQBAWD0AAFA6AACiuwDAOD0A2BA+AAAgvQAAorsAIC09AIB7vACAL7wAIAw9AIB+PACAhbwAQBk9AKCqvQDgbr0AAEi7AMC7vACAarwAYB09AAB6PQDgSz0AQOS8AECqPAAAJ7wAQN08AABUPACA47wAwG09AEBXvQAApjw=","chunkHash":"0a117f565453645d8c8ed694af8802c705b274adf6914b9ab27438d05e38f72e"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\nclass MaskedVgg3DAdapter(nn.Module):\n    def __init__(self, base_model, input_size, num_classes, classifier_size=512):\n        #...\n    def initialize_classifier(self, feature_size):\n        \"\"\"Initialize the classifier based on actual feature size\"\"\"\n        #...\n    def forward(self, x, mask=None):\n        #...\n```","range":{"startLineNumber":64,"startColumn":0,"endLineNumber":108,"endColumn":36},"embedding":"AGAmvQAAXjwAALg6AEAmvQBgUr0AwJa9AIALvAAgDT0A8Jq9ALCHPQDAxrwAAKU7AAD9uwAASDoAABW8AADjvACAAbwAUNE9ACAXvQCAnj0AgMo8AIC3PACAuTwAwOO8AADPvACA3bwAgDU9AEDbPABw4D0AYBk9AMDxvAAAHL0AcKi9AAAgvQCAeL0AgAy8AGByPQCgVz0AYFe9AOBtPQCgbj0A4AC+ACA0vQBwhD0AoCI9AMDNvABwsT0AQDq9ACA6vQAAPjwAAO27AOAfPQAQib0AAAw8AEAvPQCAUz0AAJo7AIAPPADAPT0AoFQ9AAD7uwCwmr0AAMo7AABLvAAAvjwAAIy8AGB+vQAAszwAQLy8ACAovQCAeL0AwN28AIAFvACAoDwAAJM8AHCRPQAA0DoAeAA+AIC7vQDAujwAwJW8AECUPADgEr0AwBs9AEA9vQCQxr0AQKC9AGAgvQCwi70AgLu8AAChOwAAUjsAgKq9ABDKPQCA2jwAIFk9AACEuwAgi70A8JU9AAA6vACwlT0AAMg8AIBwPACADzwAIDc9AKAAvQCAizwA4C09AAAkPADAxD0AAAq7AIBUvAAggz0AwEi9AMD3vAAACjsAgJc8AOArPQBA3rwAAJg7AECDPAAAXLwAgGM8ACCvvQAAP7wAgOw8AEDrPADAg7wAoFi9AICGvADgMr0AAJm7AGAfPQAAwzsAQIK8ABCZvQAAGLwAAIE9AKC8vQCwhz0AQK28AIB5vABgFT0AADQ7AMDkvQAgET0AgNC9AAAwPQCwtL0AACc9AKBqvQBwvD0AAP47AMDyvAAAgb0AABS7AACYugAAjTwAQGE9AADsvACASzwAAMw7AICxPAAAr7wAAMa7AADwPAAgJL0AAFW8AECGvQBAfr0AoK09ACArPQDAcT0AYIS9AAA0PAAAOrwAgCC8AADlOwDA6rwA0JK9AACsvAAAIjsAgEo8AACBuwBA37wAQIs8AIAuPAAAEjwAYHQ9AMAPvQBgDD0AACo9AAAIPQCgRz0AQO08AACRuwAgNT0A4GS9ACCBPQDAgT0AwH69AACBuwCAyLwAALC7AIDRPAAQ4r0AgGC8AAADPACAaLwAALi7AID/PAAAYLkAQKE9AEBfvQAA7bwAAGg8AABuvACAFr0AALo8AIAGPQBAbj0AgMQ8AACHvACAQ70AAAg6AADhvAAAILkAAMS7AECYvQAA7bsAAOc7ACB7vQAAvTsAwJC8AAA0vQAQk70AAIA4AIDyvADAbT0AwAg9AMCJvAAA1zwAQMg8AMAEvQAAtTsAAO48AADeuwAAb70AIA49AKB7PQDA2jwAUIY9AEDnvAAAjbwAAOK8AHDOPQCAbrwAgOU8AICHvABAM70AAOq8AIClvABAPb0AAF67AIDWPACA0bwAoAy9AMC9PACAl7wAQEc9AFCOPQBgCb0AQMA8AABiOwAAGDsAwN08AMApPQCw5j0AADw9AAADvACAvbwAwMs8AOCWPQBANj0AAG88AMC0PAAAKDwAALA7ACBtvQCAar0AAJ27AICNvAAAmjwAgJW8AACWOwAABj0AwCu9AACcuwAgTD0AoKG9ACCbPQDAkTwAAIi7AJCKPQDw0r0AwH89AABiPADgKD0A0Ik9AACXvADAcL0AYCi9AGAyPQAAK7wAYIE9AIB1vQAAtDoAAHE8AADBPACAZjwAsMm9AADguwAAvLoAgM88AKBsPQBACz0AYHe9AEDEvACAcjwA4Iq9AIAWPAAAcDoAIDC9AEC5vACAvbwAIDA9AICkvAAA9TwAAMs7AAAePQCg+70AIA29AFCJvQAAcjsAgMg8AMAQPQCASLwAoF49AKB5PQAAmzsAALa8AIAXPAAgJD0A8Ji9AABBPACAm7wAwPo8AMD6vAAgGL0AAFy7AAD1uwBAYT0AYA09AADbvABA+rwAoFe9AADsugAACLsAwB69ACABPQAAIbwAACA7AGBBvQCQib0AkNe9AMDKvQAABbwAwPk8AMCOvAAAbLwAwOo8AAD0uwCAjT0AgG28AEAzPQAA5bsAYHM9AABUOwCAhr0AwKE8AABLvACAjbwAgAQ8AEChPQBAwzwAABA8AHClPQAApzsAgJQ8APDMPQCAsbwAAIg8AMC1vAAAorwAAK+7AMAQPQAgFD0AoFw9AMCJvAAAy7sAAEw8AMAZvgAAHDwAAHq8AACDuwCAyTwAAPG8AGAxvQBAX70AgMg8AICkPADA8bwAAOi6AADwOQCAAr0AYCS9AMCJPAAAXrwAABe9AABgPQDgLr0AgBy8AACQuQAgNr0AANW7AMCNvQBAmjwAkIQ9AACnPADgrj0AAPC8AEDWPACAi7wAAGC5AOAAvQAAGDsAIDW9AMAKvQBABr0AALC6AIDfvADgar0AAAS7AKBcPQBAHD0AwA2+AGDKPQBANT0A4Ds9AEDLvADgej0AsJK9ABCDvQAAmTwAANy6AADXOwBAoTwAACE8AACPPQCAjTwAgMg8AACjOwAgiT0AABA8AICQPACA5rwAwI48AADgugDAHb0AAIy7AEDgPAAAmrsAIAM9AIATvAAAVzwAOCc+AJCCvQDAjrwAIGg9AICWvACACr0AAMo8AIDMPAAAcLwAACc9AMAwvQAA9rwAAJA7AICmvAAAEb0AoGo9AMDmPACgJz0AAJC8AADsOwAAkrwAgAM8AABuuwBACL0AADs9AAB1vQCAEz0=","chunkHash":"482bca9cec1c9996d0b1bd009f92a952bfc3725c71366418daa196cccfac4365"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef mask_weighted_loss(outputs, labels, masks, loss_fn=nn.CrossEntropyLoss(reduction='none')):\n    \"\"\"\n    Apply mask weighting to loss function\n    \n    Args:\n        outputs: Model outputs (B, C) where C is number of classes\n        labels: Ground truth labels (B,)\n        masks: Binary masks (B, 1, D, H, W)\n        loss_fn: Base loss function with reduction='none'\n        \n    Returns:\n        Weighted loss value\n    \"\"\"\n    # Calculate base loss per sample\n    base_loss = loss_fn(outputs, labels)\n    \n    # Weight loss by mask values (focus on regions inside the mask)\n    # Calculate mask weight as average mask value for each sample\n    mask_weights = torch.mean(masks.view(masks.size(0), -1), dim=1)\n    \n    # Apply weights and get mean loss\n    weighted_loss = base_loss * mask_weights\n    return weighted_loss.mean()\n#...\n```","range":{"startLineNumber":144,"startColumn":0,"endLineNumber":166,"endColumn":31},"embedding":"AMC/PABgBD0AcIg9AKBDvQBgBb0AwIu9AECxvACAhz0AQHa9AECVPQBwir0AwMA8AEBAvQAAaDsAALo8ANCdPQAgLT0AoHw9ACBEvQCACj0AwJm8AIC4PAAAcTwAYGi9AIAfPABADr0AwDA9AADEugCwlj0AQJA8AADfOwBAML0AYAy9AIAnvQCgPb0AwL28AOAqPQAwiz0AgPC8ACAYPQCAID0A0NC9AED6vABAIz0AADq8AGANPQAwhD0AoGS9AEC1PAAAZzwAAPo7AIBZPACAwLwAAI47AMCCPQCAUj0AgHc8AKADPQAA1DwAAC47AGAdPQDgJL0AQBo9AABKuwBAjzwAgMy8ACC7vQDA8bwAAMU8AIAwvQDAHb0AgMa8AEAYPQAA8DwAAHC7ACA8vQCAKzwAADc8AOAAvQAAuDoAwKG8AADnOwBA37wAgCA8AMCSPAAgrL0AMAC+ACATvQDYAb4AAJ87AADpOwAATLsAgHG9APCrPQBApzwAYDY9AAAAugCAtDwAAGA9AIALvACQkz0AANc8AECsPQAALr0AQD89AIBOPACAcjwAgJO8AACoPABAXj0AwFw9AEDLvACA97wAwKe8AIBCPAAgKL0AAPC8AAAKOwAA9bwAQE+9AEDhvAAAa70AgMA8AOBFvQAAUbwAsIg9ACDEPQCAX70AAOM8AIBWvADACT0AQAU9AACkugCQjL0AQG29AAAVvAAgEr0AcOg9AABVvQAgpj0AsIA9AIAMvACAyrwAAGs8ALDAvQCAG7wAsJO9AKBUPQCQwr0AALg9AKAaPQBgND0AgOO8AAAvPAAAVrsA8JG9AABFvAAAszwAAFw7AICgvQAAvDsA4AE9AIC5PACAWbwAQJw9ACBdPQCAQL0AgCw8AMD0vAAgIL0AAFc9AIBZvQCgWj0AYJC9AGAJvQDA/zwAAPk7ANCkvQDg370AANo7AOAFvQAAdTwAAGa8AACrPADIDL4AgIA8ACBAPQAAqDoAALy6AACxOwAAqTwAAIy7AMC1PABAIT0AgMq8AIDQPAAAIj0AoDE9AAAdPQAAPzwAQDy9AOAePQBA1DwAAJq8AIBhPADgMb0AAGW8AKAGvQAAqTsAwJY8AMCaPAAAK7wAoDQ9AIB1vQCgFL0AAOy7AABlPAAAQLoAQPU8ADDVPQDA/zwAAEI7AECMvQCAQbwAIHe9ACAcvQDgNz0AAHK8AKABPQAA7LsAAF48AACDuwAAFLsAgAE9AMCkPAAoAr4AQKI8AIDTvADA8zwAgCA8AMCHvQAAXjsAANC7AGCTvQBArD0AABQ9AIB1vACgdr0AAO67AABSvQDAlz0AkMc9AAAfPQDAfb0AAKU7AEA2PQBAujwAAJo8AIA0vQCAUjwAQK88AOCpvQCAhbwAAJS8AAAxPACgCL0A4E+9AADuuwCAODwAgFU8AACmOwCAoDwAQLu8AABTPQAgRz0AIBw9AABFPQAgRz0AQIY8ACBDvQCAGr0AQIm9AKAIPQAAhLwAAJW7AMAOvQBALr0AAKk8AIDCvAAACr0AAAO9AAB7vQAAQz0AwPO8AAC2PAAAnzwA4A69AGCqvQAAuDwAwJG8AECmPADA0jwAEOi9AGB0PQBASr0A4EG9AIBPPABAsTwA4G09AIAwvQCAiLwAABU8AKA+PQAA3zsAAAq7AMCWPAAADj0AwJY8AACoOwAA8DsAQLe8AKCEvQCAPzwAAOQ8AAAguwAA3LsAIG69AMA/vQAAZ7wAgHG9AMAUvQBA5jwAUKm9AAAWuwCA9rwAIDQ9AIAuPACgET0A4GQ9AIBgvADwub0AAMa9AIDqvACQvr0AoBo9AOANPQAgFT0A4Eo9AACHPQDAjDwAoHG9AMCbvADAojwAoJW9AIB9PQAA5bwAQBM9AEDCvACgN70AgES8APCmvQAAlDsA4Do9AACavAAACTwAAPG8AADSPQBAhLwAoHg9AMCWvAAAWD0AwLA8AGCevQAACDwA4LO9AADhvAAAaz0AAHw7AEACvQAADr0AQCI9AADYugAAYzwAACw8AIAbvAAAaz0AwIk8AECgPAAA7LwAAFS7AICGPADA0LwA4DO9AECcPQBApjwAQIA8AIBRPAAACT0AAKA8ACBJPQBAwLwA0Iw9ACBuvQAA5rsAAHi8AABiOwAgKD0AoGw9AADeuwDAUT0AQGE9AAA2uwAAhzsAgFU8AIB7PACAcrwA4A49AJCAPQCgSL0AgFG9AMDvvAAAmDwAkI09AMC7PACAwrwAIAW9AAD8ugAANb0AAJe7AGAFvQDA0rwAgLa8AAABPQDgP70AgJa8AIDzvACAm7wAALc8AACrPABAYT0AAGy9AADmuwBQtb0AAPQ7AGANvQAA2LoAgDy9AACAuABAhjwAwJs8AADLOwAAHLwAgLY8AGAGPQDA+7wAQPe9ACAjPQCAQTwAQOs8ANDgvQAwwz0AgPe9AABkPAAAdjsAAIy8AIBoPACoFT4AAA+9ABCGPQBAjzwAoCQ9AOA8PQDAyzwAAEk8AID4vACASTwAwLk8AIBnPQBANj0AoBC9ABCIPQCA9LwAICu9AJDTvQDA1jwA8Iw9AIArvACgf70AgDc9AABCvAAgJb0AgL68AAAiOwCAOrwAADo8AIAmvQAAkbwAAKu8AOBQPQBAF70AYEY9AEDRvADAqDwA4Ae9AAAQuwAAnTwAAHW8AGBuPQDgLb0AsJY9AAB5vQDAgbw=","chunkHash":"348b7588bd9136b1bfaa90ceb246af427fbf0fb608aafc0cdad24cdadf3fb35d"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef parse_args():\n    parser = argparse.ArgumentParser(description='Finetune VGG3D model on nuclei dataset with mask-guided attention and loss')\n    \n    # Data params\n    parser.add_argument('--data_dir', type=str, default=config.DATA_ROOT, \n                        help='Path to nuclei dataset')\n    parser.add_argument('--class_csv', type=str, default=config.CLASS_CSV_PATH,\n                        help='Path to class CSV file')\n    parser.add_argument('--index_csv', type=str, default=os.path.join(config.ANALYSIS_OUTPUT_DIR, 'nuclei_index.csv'),\n                        help='Path to CSV index file (for efficient data loading)')\n    parser.add_argument('--create_index', action='store_true',\n                        help='Create a new index file even if one exists')\n    parser.add_argument('--output_dir', type=str, default=config.VISUALIZATION_OUTPUT_DIR,\n                        help='Directory to save results and model checkpoints')\n    parser.add_argument('--class_id', type=int, nargs='+', default=None,\n                        help='Filter by class ID(s). If not specified, all classes will be included.')\n    #...\n```","range":{"startLineNumber":169,"startColumn":0,"endLineNumber":184,"endColumn":0},"embedding":"AAArvQBgYz0AIHM9ACAEvgBAib0AYEm9APCNvQBALT0A4H69AMALPQAAcTwAAGi6AMDXPACgC70AACY8AID/PAAAnL0AwCM9AOAFvQDAij0AAAQ9AKCJPQDAu7wAQM28AMDAvABgQ70A4DA9AGAZPQBAKT0AAIA6AOBxvQDAl7wAwI69AMBsvQCwkL0AQD+9APCJPQCAlzwAgLO8AAAxvAAARj0AIBC+AMDHvACgRz0AwO48AIAwvQBAaD0AgDa9AABPvAAAobwAACq8AEDhPACABr0AMIo9AMDnPABA2jwAgKu8AMC8PABAizwAABM8AAARPACg0L0A4Dg9AGBSPQAA/DoAAJO7APCUvQDA4LwAwJy8AAARPAAAnzsAAEe8AADDvAAAozwAwII9AACkOgCAKb0AgFA9AABEvQAAJr0AwLK8AACSOwAAtDsAAKE7AADyvACgjb0AAO+9AEDIvACg1L0AwBC9AIBxvACAlDwA4Ga9AFDUPQDgeD0A4GI9AAAvvAAAqb0AIMo9AICvPACApj0AANM8AAD1uwAAaDwAIIg9AMAWPQAA6TwAQBM9AIBVPQAgeT0AgAY8AEDOvADgHz0AIJy9AMDJPABAtrwAAO67AACLOwAAJrwAwNK8AAAMOwAAbjwAwJM9AGAqvQBAKz0AgCU8AFCcPQBwl70AAIw7AAB5vAAAMzwAAFy7AIC/PQBA6LwAgHG9AAChvACAEb0AUIE9AFCkvQDA6T0AABW8AMDXPAAAsjwAYDU9ACCLvQAA3LoAwKK9AECePQBgfb0A8L49AIB5vAAw+T0AgHo8AABGvAAApbsAgEG8AIBHvACAyDwAAMC5AABOvQAA27sAgM48AMCsPAAwn70AABY8ANCyPQAAdrwAAMg6AOA6vQCAqrwAgB89AIAIvQAA4TwAgIa8AKBSPQAA/bsAQK68AABlPQCwg70AgFe8AMCKvQBAjLwAAKg6AADhPABwl70AgAm8AIBvPAAA5TsAQBq9AAAQPQCAYz0AgPG8AECHPQBgGD0AAOW7AAAougAAzDwAgFi9AJCFPQAgrT0AAMe8AMAmPQAAsrsAoCC9AABtvADgCL0AAFe8AADtuwCAR7wAgHS8AIDIPACA1jwAwBs9AOAWPQDA+7wAAOq7AEBTvQDgaj0AQHM9AMCePAAAQDwAAOu8AEDRPABAhzwAIE49AACkvACgHz0AAOw7AAA2OwBA/zwAACa7AGARvQAAEbwAIFY9AADDPAAg1r0AwLU8AKBOvQAAGz0AAFk9AACivADApDwAAIC8AGB0vQBAKT0AABs8AIDUvAAw8b0AAJ48ALCDPQBAUz0AwGA9AMC1PADAn70AgP+8AICMPADATL0AwNU8APC6vQBAkrwAQKk8AIAdvAAAoTsAoAS9AAATPQAAajsAQEy9AABkPACApbwAYIW9AADzOwAATrsAAEU9AACVvAAAqDoAIDU9AMBVPQAAbj0AIF49AKAhvQDAwL0AAAY7AIBvPQDAGz0AAKY8AAAdvACgAb0AAA+9AMA3vQAArDwAgFI8AFC4vQCgJD0AAJy7AABBPABAqbwAgCK9AIDJvADA9TwAwLW8AIB9PQBgTj0AwOi8AEByPQDQmL0AAPC6AADlvABA2jwAQHc9AECFvAAA0LkAYAW9AMBgPQAAqrwAANo7AAC7uwAAGDwAQPQ8AECrPAAAijsAQIq9AKBYvQCApDwAMIg9AADEuwBgNj0AwNG8AAABPACAGLwAAM47AEDNPABAhr0AoBG9AIBlPAAAIDwAwAw9AEDMvACgXz0AgB28AADauwBQ2L0AwLC9ADDAvQCA37wAgA29AAB6PAAA/bwAAHQ9AECZPQAALr0AABO9AAA0PADAlrwAIHy9AAAfPQAAKrwAoGy9AAAkvACgbL0AADy7AIAUvACAIzwAgHM8AECBvACgkj0AoCC9AACIugAAWLoAAJA7AMAfPQDAVT0AAPS6AEAzvQCAN70A8Ou9ADCXvQBA/DwAAHU9AAC+OwBAtLwAwIk8AAD9uwAA+rsAAGi9AADIuwCAhjwAACo9AABoOgBARr0AABI8AKAWPQCgaL0AgDo8AMC0PQAAkLoAAI07ABCaPQAgaj0AAHQ8AKDEPQDAMz0AoC49AOBMvQAAmbsAwLq8AMDFPAAACz0AYG49AMCXPABAQb0AgFo9AHCgvQBwrD0AQJ88AADmuwBAqLwAAIu8AACJvACQzr0AAMi6AEC6vAAAALsAgHO8AADcOwDgbr0AAOE8AGB9PQBAKL0AQLE8AABqvADAvLwAwMm8AAAnvQAAIbwAALk7AKC/vQCgAj0AoEE9AEAYPQCAPbwAIBy9AICGvAAAsDoA8IE9ABCHvQCAYTwAQMK8AIAwPABA9LwA4DC9AABgOgCgMb0AgPO8AECNPAAACz0AoCu9AECRPQCAMbwAsLo9AKAIvQBgWz0AAIS8AKA3vQDgdD0A4BW9AIAMPQAgOz0AgFc9AMAUPQDApjwAQPQ8AAAuuwCAUrwAgCE8AAAovADgpL0AAAAAAECWPACAKbwAwNi8AIBiPAAAeDoAAGk8ABCXPQCgAz0AEA4+AIAEvABAubwAwH09AMBPvQAABr0AAK47AACfPAAAaLwAQIE8AIDmvAAAtLwAgBq9AIAfvAAAvLsAgGg9AABTPQAgpD0AgBa8AABIuwAA3LsAwNW8AGA+PQBgHb0AYH89AAAAvQBgKD0=","chunkHash":"9c17cf2bd54ac0a1e2d0024f71a2d85030a5f8c424073ead879d9930db999ad8"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef parse_args():\n    #...\n    parser.add_argument('--subsample_ratio', type=float, default=config.DATA_SUBSAMPLE_RATIO,\n                        help='Ratio of data to use (0.0-1.0). Default is set in config.py')\n    parser.add_argument('--sample_percent', type=int, default=100,\n                        help='Percentage of samples to load per class (1-100)')\n    \n    # Model params\n    parser.add_argument('--checkpoint', type=str, default='model/hemibrain_production.checkpoint',\n                        help='Path to the pretrained model checkpoint')\n    parser.add_argument('--target_size', type=int, nargs=3, default=[80, 80, 80],\n                        help='Target size for volumes (depth, height, width)')\n    parser.add_argument('--output_classes', type=int, default=None,\n                        help='Number of output classes. If not specified, will be determined from the dataset')\n    parser.add_argument('--use_mask_attention', action='store_true', default=False,\n                        help='Use mask-guided attention in the model')\n    #...\n```","range":{"startLineNumber":184,"startColumn":0,"endLineNumber":198,"endColumn":0},"embedding":"AACivAAADT0AgN48AAC/vQBwgr0AIGy9AMBCvQBAXD0AwAK9AIDtPACAXrwAYCK9AIBzPAAAVD0AgMG8AAACuwDARr0AoAw9AKA9vQAA5TwAwEA9AKAgPQAAwDkAAMq8AABPPABgab0AgPY8AMDGPACASD0AAPC7ACBbvQAA9rwAAJK9AIA5vQDgk70AwKO8ACALPQCAszwAgBm8AIDrvAAAIj0AaBK+AMCWvACgaT0AQLs8AAALPACAHj0AAHW9AAANvAAAuzsAwCK9ACAlPQBAmb0AMJE9ALCIPQAABTwAAHq8AECdPACAmTwAgBi8AAAAPQCgwL0AAOI7AIAAPAAA1rsAAKk7APDDvQBgRr0A4Fa9AABYuwBA+rwAAHC6AIAevQBAjbwAwCI9AABeOwAAmbwAgM09AACLvQAgEb0AgLO8AMCbPADAFD0AwI28AIB8vAAQmr0AwNe9AIAgvADwwb0AQEa9AAD1OwAAkDoAMIy9AFCbPQDARj0AgPE8AADSuwCwpb0AoE89AAAKPADQvz0AANU8AMAWvQCAZbwAQGg9AAB8PAAgQT0AoCo9AEB3PQAwij0AABq8AMAqvQCAXT0AwPS8AKARPQBA5rwAAMC6AAAOuwBgg70AgGK8AMDjvAAAzrsAABI9AEBAvQDgMz0AQPI8AKCVPQAQpr0AAFI7AMDtPAAAADwAAGE8AECePQAAQrsAQAS9AAB6vQCAWLwAoFY9ADCovQDg0D0AQJm8AAAfPABgJT0AoEE9AMCyvQCAUTwAAM+9AEBRPQDAxL0AYLg9AECXvACQ4j0AAPA8AACAvAAASrwA4BS9AABauwCgND0AgDi8AGAPvQBArLwAQLs8AED3PABgM70AwBI9AKA9PQCAprwAQOY8AOAlvQCgPr0AQLM8AICMvABgcT0AIEi9ALCbPQDAyLwAQLe8AIBxPQDAYb0AABi9AKBivQAA37wAAKi8AMAZPQCAOL0AALG8AADePACAFDwAAAY9AGBcPQCwsD0AQB+9AJCNPQAAyrwAwLI8AECRvADAdj0AgHy8AEDOPABQjz0AYEu9AGAfPQAAHTwAgDa8AIDVvAAge70AQMQ8AED4vAAAbLwAgBK8AMACPQAAzTsAgBI9AIAoPABA7bwAgKQ8AIBivQAArjwAoF89AMCiPAAAwrsAABW9AICfPAAAOz0AICA9AICDPADArzwAACo8AMDLvACASjwAANS8AKBBvQBA+bwAADM9AMD2PAAgZ70A4AA9AOBlvQCA3DwAgI+8AABvvACgKz0AAFM9ACBuvQCwgD0AgMw8AMDovABgqr0AQNA8ANCUPQBAtjwAAGo9AACnOwBQsr0AQAu9AAAKPACA7bwAoD29AKDAvQCASzwAALQ7AIBzPAAA/bsAAD+8AECsPABggD0AgLS8AAC4OwCAMjwAgCG9AGAjPQAAtDsAIG49AMCavACAXbwAABE8AHDKPQBAHD0AIBw9AIADvQAgvL0AAB48AKB1PQCgBT0AQNw8AIA7vAAAgLwAwCu9AADTvADAlDwAwIU8AMAVvQDArjwAgPW8AACxPAAAvLsAQIG9AACwvAAASTwAYAe9AEBbPQDAwTwAgGs8AGA4PQBAg70AQNo8AAB6OwDgKj0AUKI9AMCxvACAcjwAwO68AMCYPAAAiTsAgPk8AIATvQAABj0AgLI8AADiPADAurwAoG+9AGBVvQAAmjsAIE09AOBlPQBgBT0AYD29AIAvPABA2DwAgM68AICQPAAwk70AQLW8AAAYugBAYz0AYDE9AABougDA4TwAANc7AACxuwCYDL4A4EO9ALC1vQBAnLwAoDe9AFCJPQAABrwAwAU9AGClPQAgKL0AQKi8AACBvACgKr0AkLK9AIAhvACAV7wAAOS8AADXvADwi70AAEw7AAAzvQDAID0AAPw8AAAWuwAAmz0AYE+9AAAQuwAAdLwAALc7AADLPAAQqD0AgO28AIDAvAAgE70AoKG9ACgNvgDANj0A4Ho9AAAquwAAobwAwJC8AAAauwBA0jwAAA+8AAC2vAAAWLoAgCs9AACpuwAgJL0AgMy8AIAoPADQkL0AQOY8ACDEPQAABT0AACA8ANDbPQAwnT0AAAAAAHCuPQBAoTwAAGs8AGBrvQCAIDwAgKW8ACBOPQCgRz0AwFU9AKBJPQBAeb0A8KM9ABCrvQDgdz0AwI+8AAAHPACAHrwA4Aa9AIAPPACAcL0AAKw6AECQPAAAnDwAQCy9AEB6PQCgEr0AYIs9AOAKPQAAsbwAQEM9AIBNPAAgGb0AACC9AIAfvAAAkzsAAM88AJD0vQAAoDkA4H89AIATPACAIzwAwOe8AED/vAAAwLgAoCY9AEAEvQAAnLwAANi8AIBYvADAhLwAwN+8AAC6uwDgxb0AAM28AID4PADQiD0AAIu9ACCgPQCgHr0AoHQ9AKAMvQDgNj0AADS7AOCKvQDgeT0AoAi9AICzPABAuzwAwMs8AIBHPABgfD0AAPA7AAAcvAAAwzwAgBM8AMCtvADAwr0AABa7AIB5vACAALwAAFy7AECaPABAubwAAIW8ACCXPQAABjwA0BI+AECcvACAwbwAYD89AECgvAAAG70AwLU8AAB6OwCAXbwAgBu8AAC3vACA5jwAAJm7AADoOwDA87wAQHg9AAB0OwDAcT0AAM87AEC+PAAArDwAwK68AACQOgBAIb0AgGI9AACZvQAALLs=","chunkHash":"6e791a3fdff97075d5b23b1902250195912a4bc4dc5ec14d8e6944e4a23304f1"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef parse_args():\n    #...\n    parser.add_argument('--use_mask_weighted_loss', action='store_true', default=False,\n                        help='Use mask-weighted loss function')\n    \n    # Mask-focused dataloader options\n    parser.add_argument('--use_masked_dataloader', action='store_true', default=True,\n                        help='Use the mask-focused dataloader to extract subvolumes only from masked areas')\n    parser.add_argument('--mask_threshold', type=float, default=0.5,\n                        help='Threshold for mask values to be considered \"masked\"')\n    parser.add_argument('--min_masked_ratio', type=float, default=0.5,\n                        help='Minimum ratio of masked voxels in a subvolume (0-1)')\n    parser.add_argument('--scan_step', type=int, default=40,\n                        help='Step size for scanning potential crop locations in masked dataloader')\n    \n    # Training params\n    parser.add_argument('--batch_size', type=int, default=24, help='Batch size for training')\n    #...\n```","range":{"startLineNumber":198,"startColumn":0,"endLineNumber":213,"endColumn":0},"embedding":"AEBVvQDARj0AIDI9AEC6vQAgn70AEI69AEDmvADQkT0AgDS9AIB/PQBApLwAACK7AACBOwBgcT0AAF88AAALPQCA0bwAsJw9AAB2vQAART0AAGw9ACBCPQCAtbwAQCy9AIB/vACwjL0AQIo9AACRPADAozwAQI68ACCfvQDgPr0AgGe9AIBDvQBgnb0A8KC9AIAqPQDALT0AAAS8AKAUvQBgVj0AuCm+AIB+vABQgT0AQAw9AAAkuwBAbT0A4Aa9AADQuQBgT70AwMG8AIBVPQAgg70AADU9AMAAPQBA8zwAAHS8AADVOwDgFz0AAB47AEAhPQDAg70AAN27AGAGPQCAoDwAgFc8AHCbvQAAZLwAYEu9AICLvAAAUr0AgB+8AMCDvAAAGbwAQFM9AOAZvQAAULwAEI49AEC2vQDgL70AYAC9AACROwAAuzsAAEq7ACA0vQAg170AwMa9AACYOgCgrL0AQOi8AABMuwBAnLwAgK+8ADDOPQDAbD0AgCs9AADcuwCwqr0AoI89AAAYOgDQlD0AQMk8AABsuwAAZDsAIIg9AICwPABgIj0AQBk9AGDBPQBQyz0AgEW8AACIOgBAgjwAQKW8AIDcPADALL0AwLa8AIBdPADAjr0AAIG7AGAyvQAAsDkAwLg8AKAXvQAAQDwA4B89AECfPQCwxL0AAFc8AKAJPQCAHzwAYDs9AADMPQAgLr0AIBK9AGAVvQAAfrwAAFU9AACNvQDQyz0AgA+9AABePAAAPT0AQAM9APDIvQAA0bsAkJu9AFCWPQDQqr0AIKo9AACkvADA0T0AQNI8AIBAvAAAbLsA4Fi9AAChOwDAnDwAQMs8AABQvQBAhb0AAOg8AIBIPQAA+LsAoEI9AIANPQAAbrsAgAk8AEBfvQAgbb0AoDI9AOBxvQCAPjwAoHS9AACPPADAvbwAAA29AADXOwDAmr0AQPm8ADCSvQCASrwAAFg8AOBYPQDAVr0AgCS8AMCHPAAABDwAAHq7AGBXPQCwkD0AAMA7AOCFPQDAhrwAgCI8AIDavACwgT0AgE48AMAtPQDAkj0AwCi9AGBUPQDAvjwAQLS8AAC/uwCQmL0AACA8AAAauwCAiLwAgOu8AABSPABAuDwAAFs9AEDdvABA67wAAMw8AECAvAAA1DwAgD09AKACPQBA0DwAAEq7AABLvADA7TwAANQ7AID3vAAgPT0AoCi9AACNPACAwzwAAL47AAA0vQAAq7sAgBU9AICMPQCAlr0AANe7AOA+vQAAuLsAQJQ8AACguQDARz0AgEE9AMCWvQDAUT0AQMg8ACBBvQCQl70AAHC6AGAnPQDAPT0AwH49AADYOwCwi70AwMy8AMCePABAn7wAAJ28APDTvQAAyDsAgOY8AIA8vACAfbwAAGg6AEAqPQCgDD0AgCc8AADUOgCAADwAIDm9AIBUPADADz0AIFY9AMCRPAAA8DsAgDc8ALCxPQAAXTwAgJk8AAAAOQCQtL0AAHG8AOAEPQAAtDwAAAQ9AAAYugAA0bwAADC8AABIvACANrwAACA6AJCJvQAwiz0AAEY7AIAYvACAfjwAQJS9AOAXvQAAczwAgGe9AEA+PQAAQz0AQJO8AAAqPQCwqr0AgB88AAASvAAAdjwAgOs8AOA2vQAAOrwAgIQ8AADPPAAAoLsAQBU9AIAGvAAAYzwAAO88AACaPAAA5LwAID29ACBmvQAA4jsAgKw8AEDiPAAAyDoAAG29AAAhPAAAKrsAQCO9AAC4ugAA+LwAoGS9AABQuwBAobwAwPQ8AECcvABAxjwAwIY8AIC1vAAA8L0AoD69AMCFvQAAIb0AgHu8ACBoPQAARjsAgPQ8AAB3PQAgH70AwB69AADEOwAAsDsAMNi9AACuPAAAlLoAwKi8AEDavADAfr0AAJK7AEAhvQAgaj0AgHc8AABmuwAApjwAQCe9AMAwPQAA9bsAgFM8AGBYPQDwwT0AQFW9AAC5vQBAIr0AwJm9ABDNvQBgIj0AwEo9AADkugDAgDwAIEg9AIA4vQCAebwAAKU7AADzuwBAjDwAAHE8ACBjPQAgOb0AgJ68AADXPAAgW70AAAw7ALCUPQCAlTwAAJ08AJCfPQCAQT0AAPU7AGCFPQAACrsAQB89AMCevQCArLwAIAW9AKAxPQDAOD0AADY9AID7PABAEb0AQJk9AGBfvQBgeD0A4AK9AED0PAAgEb0AQD69AOAJPQDAdb0AgF28AABcPABgWz0AgA69AECtPAAAPL0AEIk9AEASPQBAurwAgGk8AED2vABAab0AQF29AAD4OwCAx7wAALw7AECkvQCAfrwAwGA9AICKPACAHz0AoC69AMCRvAAAjrwA4FE9AKBMvQAAFDsAAIy6AMAePQAA0LkAgPq8AABUPACAtr0AACQ7AACLPACAmjwA8K69AFCsPQBAGb0AIJg9AIB/vABAXT0AQEG9AABDvQAAyTwAYFO9AMCRPACQlz0AgPo8AIC0PAAAmD0AAEU9AICVvACAMzwAIBM9AAB6vACgQ70AAFU8AACHOwCAKzwAwAy9AKA5PQCAAjwAAA+9AABVPAAQnj0AeBY+AABzPAAATjsAwPk8ACAavQDAurwAgHU8AACevAAAaLwAQIk8AABMuwCAbbwAgGo8AEDaPAAAiDsAQIk9AADWOwDgjj0AgGG8ACABPQDArDwAAPO8AAC+PAAAV70AwEg9AMA7vQDAwLw=","chunkHash":"2757faad5c164bd7ddfffea0307a662e0dce46944837b7f7919fd85de7fab7dc"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef parse_args():\n    #...\n    parser.add_argument('--epochs', type=int, default=50, help='Number of epochs to train')\n    parser.add_argument('--lr', type=float, default=0.0001, help='Learning rate')\n    parser.add_argument('--weight_decay', type=float, default=0.001, help='Weight decay (L2 regularization) to reduce overfitting')\n    parser.add_argument('--optimizer', type=str, choices=['sgd', 'adam'], default='adam',\n                        help='Optimizer to use for training')\n    parser.add_argument('--early_stopping', type=int, default=10,\n                        help='Number of epochs to wait for improvement before stopping')\n    parser.add_argument('--freeze_features', action='store_true', default=True,\n                        help='Freeze feature extractor layers and only train attention and classifier (default: True)')\n    parser.add_argument('--unfreeze_last_n_layers', type=int, default=0,\n                        help='Number of later convolutional blocks to unfreeze (0 means all frozen, -1 means all unfrozen)')\n    #...\n```","range":{"startLineNumber":213,"startColumn":0,"endLineNumber":224,"endColumn":0},"embedding":"AMDuvACAeDwAgJg8AMD+vQBAW70AAIu9AABfvQBgUD0AgDm9AKCKPQAAurwAYBC9AADguwAAdDwAAPc7AEDJPADAEb0AAIg9AKAVvQAgND0AADo9AIDgPACAxTwAAHq7AIBlvABATr0AUL09AICAPQAAHT0AADC7AOBDvQAAubwAYJm9AAAzvQAgD70A0IC9AIDqPACAWDwAgCq9AAB0vABAUT0A4CC+AMAxvQDgNz0AAJs7AIBHvADAID0AgGy8AIAEvAAA4DsAgJi8AMDaPADwgb0AIH89AIChPAAAnzsAgLO8AADgugAA1jwAAJs7AIBDPQDAo70AgEU8AIAiPAAAmTsAYAk9AFDkvQCAIDwAgMa8AIDZPAAgT70AgMe8AIA8vAAAJLsA4CA9AOAaPQBALL0AYLA9AEB1vQDgNL0AwNq8AAAoOwAApzsAAIy7AADkvADgv70AQJS9AIAqPAAAu70AgL28AADluwAA5LsAQCC9AHC9PQAAjj0AwIA9AACBuwAgwb0AYF09AIAlvADAwz0AAMA4ACARvQDAvDwAgPU8AEAcPQAgDj0AACg9ACCWPQBgFz0AoGu9AAAIOwAAeTwA4Dm9AMDvPAAgDL0AgCS9AAD5OwCAVb0AgLi8AADvOwAAMLwAoDA9AACIvABgfD0AAIM8ACBxPQDgg70AAKC5AAA4OwAAYDkAABg9AKDEPQAAKrwA4Cq9AEBqvQAAyTsAABI9AACZvQCg6T0AAKW7AAAKvAAAsjwAYDU9AHCLvQBA3TwAgJO9ADCOPQBw+r0AoK09AICbvACwsT0A4Ao9AACIugAAlLoAgK+9AADwuQCA5zwAoCg9ADCOvQBAXr0AwMA8AEBpPQAAgTsAYDc9AMBiPQBAubwAAHA8ACBFvQDgVb0AQGM9AACSvQAAazwAwMa8AKAjPQAAaLsAwGy9AAALPADwgL0AgIi8AOAQvQAAOb0AAIe8AMACPQCgq70AwJA8AOA9PQCAmbwAoBQ9AIAZPQBAlT0AAHA6AGBdPQCAfbwAoEM9AAAovQDgfz0AQHy9AOAtPQAgfj0AgGa8AACYPQAArTsAwLW8AACtuwDgp70AAJo7AAA0vAAAzzsAAMg6AMAJPQAAv7sAQJQ8AACzOwBgPb0AgMs8AIAGvQAAtjsAUIE9AADjPAAAUjsAQE+9AOA8PQAgAT0AAPs8AOAJvQDAGT0AgMK8AADguwCgFT0AQPm8AMDcvAAAC70AwJY8ANCQPQBAQr0AAKy7AMA4vQAAIDoAoAE9AADSuwAAFj0AAKC5APCtvQDAOT0AgN88AADVvACg470AwI08AGAoPQCAnDwAYDA9AMCdvADAqL0AAL+7AEDNPACARjwA4Ay9AACfvQCAmbwAwBA9AMDsPAAAT7wAgBA8AIAyPQBgPD0AYGy9AAAnPAAA3LsAgEm9AADIOwAgWj0AQIY8AIBePADAKb0AgB88AICvPQDAij0AwB09AIAhPACQuL0AAC67APCvPQCAyTwAgIU8AAD7OwDgSr0AgGW8AACQuQCA3zwAgKA8AECUvQDgpj0A4AI9AAAIOgDA1LwA4Ai9AIBPvABAljwAQJS9AAArPQBgFj0AAIa8AIAkPQCQ2b0AACc9AMCQvACAKT0AkKI9AAA2uwAATLwAwI28AMDxPAAAozsA4DU9AECEvAAA0DsAAIw8AKAgPQCAT70AcJq9AFCLvQAAjTsA8I49AMAhPQAA6bsAAE67AAAMPACAbzwAgGS8AADhvAAAfr0A0Im9AACkOgAAIbwAoCU9AAAivQCgDT0AAA49AAAcvABw4L0AIGe9ADDNvQCAOb0AADA7ADCKPQDAx7wAAIc8AHChPQBAAT0AwAG9AEDOPACAlrwAAJi9AADaOwAA9LwAACS8AECxPABgXr0AAFU8AAD7uwCgZT0AAJo7AECKvAAAQjwAgHu8ACAPPQCAHTwAAEW8AOA3PQDgQD0AIBS9AGB2vQDgTL0AoEa9AGCVvQDgDj0AgFk9AACSOwDAsjwAAKy8AAAIugBAvjwAQAS9AABxvACAgTwAAJS7AABkuwBAKr0A4AW9AICwPADAg70AANK7AIB4PQAgZz0AQKO8AADhPQCART0AAPI7ADCMPQAA6DoAALc8ACBXvQAAVbwAAF28AKAsPQDgST0AIIU9AKBQPQAgAL0A8Ik9AMCmvQDAfj0AAJK8AAAgOQBgSb0AQJK8AADxvADgjr0A4A09AAC8OwDA8jwAgLy8AAAkPQBAGL0AcJs9AABMPQCgNL0AgDo8AABuPADgQ70AoC29AACgOQBAoLwAgCm8AKCjvQAAljsAoGA9AABIuwAAAj0AAKy8AIB2vACAb7wA4KA9AGA8vQBACr0AgDa9AIDcPAAAU7wAQLK8AADVOwBwo70AALe8AAC5OwDAtTwAAJq9ADDuPQBAj7wAgLE9AADmOwDAhjwAoF+9AJCivQAAxzwAANe7AGAKPQCAOD0A4Es9AMCPPAAAcz0AQIA8AAD8ugAAh7sAQMI8AIAbvQDAM70AAHg7AABoPABAnTwA4CG9ACAPPQCAvjwAgHY8AIBQPAAAszwAwAk+AMC7vACA/rwAQCA9AMCUvACgLb0AYC89AGAuvQDAiLwAgAA8AIDyvABASb0AwLu8AAB6vAAA5rsAMKI9AEDFvAAAfD0AwMa8AIABPAAAIjsAABm8AAAgOwBAAb0AAJ67AOBdvQCAFzw=","chunkHash":"16c7300ea98bbb380371553129a167155a6161e4d2d12c617f471c9be4067c07"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef parse_args():\n    #...\n    parser.add_argument('--use_gradual_unfreezing', action='store_true', default=True,\n                        help='Gradually unfreeze more layers as training progresses')\n    parser.add_argument('--lr_ramp_up', action='store_true', default=True,\n                        help='Gradually increase learning rate with each unfreezing stage')\n    parser.add_argument('--lr_ramp_factor', type=float, default=2.0,\n                        help='Factor to multiply learning rate by with each unfreezing stage')\n    parser.add_argument('--train_split', type=float, default=0.8,\n                        help='Fraction of data to use for training (vs validation)')\n    \n    # Other params similar to original script\n    parser.add_argument('--scheduler', type=str, choices=['reduce_on_plateau', 'cosine', 'none'], default='cosine',\n                        help='Learning rate scheduler to use')\n    parser.add_argument('--mixed_precision', action='store_true', \n                        help='Use mixed precision training (faster but may affect accuracy)')\n    #...\n```","range":{"startLineNumber":224,"startColumn":0,"endLineNumber":238,"endColumn":0},"embedding":"AMAmvQBAKz0AALo8ALDdvQBgUb0AgIy9AIAKvQAQmD0AoGC9AKACPQCACLwAAOg6AADFvABA9jwAQIE8AADIOgDgb70AgJU9AGDGvQBApjwAYHc9AEC4vABAAT0AwKC8AMDHvAAgRr0AQME9AEArPQCAQD0AQJU8AGAovQDA+LwAwHK9AEC3vADgUr0AUJS9AMA+PQCAizwAAGO8AGB/vQCAFD0AIDW+AKASvQDAjz0AQN48AIADvABA9TwAAOq7AAAZPAAAsLkAAGm8AAD2PABgT70AILI9AIAlvACAVDwAAE+8AAAevQBAOD0AAFK8AMBcPQBgmb0AAJ+7AED4PAAA7TwAIBo9AGCcvQAAuzsAQGi9AOAdPQBAtrwAwCK9AECJPQAAwLoAgGk8AIAuPACAKbwAILY9ACB3vQBA/LwAAG+8AECGvAAAEjwAgPA8AOANvQBwD74AoJK9AAC1OwDgj70AIBC9AIBGPADAH70AYBO9ACCyPQBQjj0AQBM9AICEvADQj70AYH09AADlvACAYz0AAEi6AAA0vQBAyzwAQHM9AAD/OwAAjLsAQFk9AIA5PQBALz0AgLq8AAC5OwAAuzwAADe9AAC6OwDAn7wAYCG9AACRPADAjr0AAD28AMDsvAAAvrwAAGU9AEA4vQAAdT0AAJQ7AMBWPQBgjb0AQKG8AAA2PACgBL0AwJ08ANCZPQDgD70AgOa8AKBzvQAA7LwAQOQ8AGB8vQDw/T0AgOu8AACqOwDA1jwAoEw9AECzvQAA/zwAgIq9AACMPQCQtr0AoCg9AEAtvQAgsz0AAKO7AAAaOwCgDz0AYDG9AAA7PAAAuTwAYIk9AICUvQBAN70AYDs9ADCBPQAAQ7wAgJE8AAAKuwAAXjsAAE88AMBqvQBgDr0AkIE9ANCavQBAq7wAgIe8AMCRPQCAIrwAoE29AACAuQAACL0AIAe9AGCevQAA9rwAAEC7AIAovACwhr0AgJM8AICwPACA9bwAQKo8AIBUPQAwlj0AAJ87AMBvPQCAArwAQBI9AICPvAAwqT0AQDG9AECmPADQmT0AQPe8AICLPQAAQDoAwEC9AMCMvADwqb0AAIm7AACcugCAuLwAgBa8AIDbPACAWzwAgCE8AACDOwCAlLwAgCI8AACMvACAzrwA4F49AICRPABAyrwAoG69AAC5uwDA1zwAAO08AMDIvADgPz0AAO68AACGPAAgTT0AAJs8AOABvQBA67wAgDg8AKCJPQDgG70AABi8AIBpvQBAoTwAAA89AADUuwBwpj0AgBy8AFCKvQAAyzwAgOw8AMCyvAAw070A4AU9AJCGPQCAl7wAgC48AADqvADgOb0AAP68AIAtPAAAjDsAAFa8ADDPvQAAeDoAQNE8AACBuwAAsbwAgJ88AIAwPQAggT0AwE69AAAgOwAAbzwAIAi9AEAEPQCA0TwAAHK7AMCPPAAACr0AQB89ADDhPQBQgD0AoA09AACRuwBwp70AAGW8AKBPPQAAEDwAAIY8AMD8PACgUb0AAEG8AACXOwAAkDkAgIk8AMBAvQDgtD0AAPC6AIBvPAAgCD0AQCC9AIC9vAAAkTsAIH29AIAAPQAAwjwAwOK8ACAhPQDgpb0AYBQ9AAB8vAAAwLgAAGE9AACiuwAATb0AABw9AOAoPQAAbbwAkIA9AABfvAAAILsAwII8AMBqPQBgGL0AQF69AABuvQAApzwAIB49AADBOwCAXDwAAPy7AABYOwCA0TwAAOS8AIAxvACwgr0AwKq9AECQPADA2zwAAEI9AABnvADALz0AAKy6AEDsvAAQrr0AIDO9AJDFvQAAkLoAABC7AABgPQCAU7wA4DI9AFCSPQCgDT0AAOq8AOAwPQBA1LwAwDy9AAD/OwCAI7wAAOS7AIAgPACA1L0AACg7AAAgPADACz0AAMc7AAAavACAqDwAAA88AACFPQCA7rwAwCO9AJCAPQDANT0AYCK9AMBnvQAAs7wA8Iu9APDBvQBgBD0AoGA9AIC3PADArjwAAF+8AACAugDAlTwA4Ei9AEDpvAAAcTwAwMg8AACVOwDQg70AwKq8AMDbPAAAY70AAJ88ACBdPQAgHD0AAGI8AFC2PQCQtz0AQPo8AGAyPQAAWLwAgAc9ANCcvQAA/7wAwAG9AOBTPQBAiDwAQHY9AMAePQDAEb0AwCI9AKDBvQAgST0AYAS9AGBKPQAAOr0AgCW8AIBOvACAUr0AoAw9AIALvAAAXjsAwPS8AAAeOwAArbwAYJg9AADqPACgBr0AQJA8AADYugCANrwAAPO8AADIuwDAl7wAAOA5APCGvQAAUbwAgKs9AAB6PADAAT0AAJe7AADcOgAAkLwAEKs9AACSvQDA3rwAQF+9AACoOgAAM7wAAGi7AADcPABgnL0AwPW8AACAuQBAXT0AoKq9AJgIPgAAubwAQLM9AADmPAAAKj0AAFI8APCuvQCAmLwAgJW8AOAbPQCwiz0AYK89AIBnvABgHj0AAF67AIAUvAAApLsAgII8AOBHvQBgN70AgD28AAAhvQCAiDwAgKK8AIBiPQAAMD0AAAI8AIBDPADgAj0AYPs9AEDKvAAApLsAALw6AEC6vACA0bwAwPY8AAC6vADAjbwAAD08ACAOvQAApDsAgDm8AADYOgAA6rsAwNA9AAB8PABQgz0AgFq8AAApPAAAMzwAAJu8AADfuwAAxbsAAC89ABCNvQAA2Ds=","chunkHash":"d79e9928b40d75ba5da0f30c2ddc813efbed0854d8d79c218995cf0d8c4571ab"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef parse_args():\n    #...\n    parser.add_argument('--validation_freq', type=int, default=1,\n                        help='Validate every N epochs (default: end of each epoch)')\n    parser.add_argument('--save_best_metrics', type=str, nargs='+', default=['loss', 'accuracy'],\n                        choices=['loss', 'accuracy', 'f1'], help='Metrics to use for saving best models')\n    parser.add_argument('--use_augmentation', action='store_true',\n                        help='Use data augmentation during training')\n    parser.add_argument('--seed', type=int, default=42, help='Random seed')\n    parser.add_argument('--device', type=str, default='cuda' if torch.cuda.is_available() else 'cpu',\n                        help='Device to train on (cuda/cpu)')\n    parser.add_argument('--margin', type=int, default=0,\n                        help='Number of pixels to discard from the edge of each sample to reduce overfitting (0-20)')\n    \n    return parser.parse_args()\n#...\n```","range":{"startLineNumber":238,"startColumn":0,"endLineNumber":250,"endColumn":30},"embedding":"AKAevQBAJD0AYGs9AEDnvQBgBb0AgPK8AABIvQDA6zwAAIW8AIB5PQAAADwAAAG9AACnuwCAhTwAwNA8AABCPABgR70A4Dg9AKB8vQAAaTwAgP48AMBbPQAgIz0AAKu8AIA7vADAmL0AgJI9AGBDPQDAaz0AgBW8AIA9vQAgFb0AoKu9ACCMvQBAoL0AwB+9AABlPQAALrwAAKi6AACtOwBALT0AgAq+AMC+vACwqD0AQL88AACHuwAA1DwAgJ28AADnvACAOrwAABe8AABvPAAAUr0AQIg9AADQOwAAwDsAABU8AADhuwDAhjwAACq8AECsvAAAT70AoAI9AMC8PAAA3DsAAEU8AOBjvQAArLsAAOW7AACauwDAUL0AYDO9AAACOwCAJjwAgBQ9AMCovAAARLwA4JQ9AGBGvQDA1LwAQNK8AAAyvAAA2zwAAHg8AID5vACgTb0AAM69AMC2vACAnL0AoBu9AIAdvACAXTwAQAC9ABDDPQAwkD0AIEg9AIBRPAAwsL0AALY9AIAQvQBgVz0AAEo8AGAYvQAgGz0A4AU9AIAvPQCAAj0AADM9AEBrPQBAUz0AwNG8AICgvAAARjsAUIW9AICjPADgCb0AAH68AIAIvACAK7wAgLq8AIAdPACACrwA4EU9AMA9vQAgMj0AAOM8AEBSPQCQtr0AgBq8AEDpvAAAMrsAwOg8ACC3PQAAPLwAwM68AOC/vQDAwLwAwFY9AOCIvQCA+j0AgFi9AEDOPACAmTwAwCA9AMBQvQAAEL0AEJi9AGCbPQCgq70AMAY+ACAfvQBAuD0AgDU8AEDsPAAACLwA4E69AACYugBgWj0AwPg8ABCsvQDgnb0AAPk8AMAxPQCA3rwAwLU8ACBqPQBA07wAQAk9AKAcvQDgWb0AcNE9AGBxvQAAfTwAIB+9AECqPQAA9bsA4Fa9AIAdPACgAr0AYEu9AJCbvQAAGbwAACY8AOAkPQDwjb0AAPy7AAD6PAAAgrwAQKY8AICnPAAgdT0AAJa8AICPPQAAGrsAgBQ9AIBjvQBAPj0AUIS9AMCJPQCgpj0AYCG9AGAvPQAAvzwA4Ba9AABRvACwyr0AgJ+8AEDyvAAAGDsAAAe8AIAOPQDgJz0AsIM9AACSuwAAVrwAAJC5AIDPvACAVTwAYEQ9AADGPAAAsLsAoBS9AAAzPQCAIzwAoFo9AACguwDgPz0AAJA5AACvPABgTD0AQI68AMD4vABQj70AgFw8APCLPQDAX70AAAG8AAC8OgAARrsAgPc8AICTvADAXj0AgAq9ALCgvQCAmzwAAEM8AEDtvACgiL0AQAE9AJCGPQDAoDwAgDM9AMA6vQDgj70AAHw8AAB6OwAAGLoAgHu8ANDUvQAAcrsAAPQ6AID8PAAA67wAACA8AKBMPQDgPj0AIIi9AIBkvQAA8DkAwGO9AIAYPQCAbjwAQIQ8AIAPPQAA4bsAAPk7AICTPQCgnD0AwOw8AKAgvQBgNb0AALM7ACAoPQAALzwAQIc8AABIOgCgKj0AQKO8AABEPADAWj0AACc8APClvQDA6jwAgMi8AADrOwCAZjwAYDy9AAC0OgBA2zwAIBm9AECyPABAAj0AoI69AEAHPQDAzL0AwOY8AMDZvABwkT0AQAk9AIBjvADAkrwAgDe8AABuPADApzwAgHU8AAAMuwAACDsAQAk9AGBuPQAgY70AgFu9AABDvQCAPrwA4GM9AADsOwAADz0AAG48AIDRPAAANLsAAOo7AAAzvADAA70AgA28AIDmPAAA0LoAkKM9AGA0vQAAAj0AALY7AIDFvAAQvr0A0Jy9AFDXvQCAI7wAgJA8AADwPACAk7wAQHg9ACBlPQAAITwAwAa9AIBHPAAAoLsAoL69AABougAAJL0AAAC9AEAdPQBAuL0AQCK9AIC7vAAgDj0AwNs8AIARvAAA9zwAAKS7AIAOPADgKb0AQPm8AGASPQBAoDwAgM28ACAbvQCAq7wAIKm9AMAuvQBAXj0A8JY9AMC/PADApbwA4Cw9AAD6uwAAVTwAAL87AIB2vAAADjwAwJc8AADsvACgAL0AgKc8AADcOwBQgb0AwK08AGA9PQCgKD0AAIC5AACVPQCgIz0AAO07ALCKPQAAujsA4Cw9ALDPvQAAhTwAgFa8AOBwPQDAnDwA4IA9AAAMPAAAW7wAIF49APDevQCA5TwAoDW9AIBWPAAATrwAwK+8AAAaPQDgdr0A4AU9AOAMvQBgBj0AAAA5AMCYPAAANb0A4Fs9ANCXPQDAYr0AQBc9AIBKPADgTr0AAFO9AACwuwAA/bsAgNA8ANDvvQAAoLsAIEI9AAC1PADAyjwAgCe8AADQuwAAWrwAsJY9AHCsvQCAzDwAYEG9AIBkPADAqjwAAE47AMC0vACwxL0AAAi8AICIvADA0zwAgJO9AIgSPgAAyTsAsM89AECUPACAWjwAAEG9ACBrvQAAoDwAAGy7AKAYPQDgXD0AQJc9AMDCPABAUD0AYAU9AAC0ugCARTwAQAU9AIB0vACgr70AoAk9AACUuwAAUjwAAMC6AADHPACAGLwAAOE7AABcPQCAjTwAwB0+AIAUvAAAvLsAgAy8AAAGuwDAvLwAgN48AABmOwBAgLwAACg7AEDBvACgAL0AQN88AEAVvQCAAbwA0IY9AMC0PABgPj0AANQ6AAChPADgET0AQJi8AIDkPABAa70AADY8AIBjvQAAFDw=","chunkHash":"d6193df800a92f13c2e1df1b64941426b8cdd56f7f2b602864f87fe953e50045"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n    def print_tensor_info(tensor, name):\n        if tensor is None:\n            print(f\"{name} is None\")\n            return\n        try:\n            print(f\"{name} shape: {tensor.shape}, type: {tensor.dtype}, \"\n                  f\"min: {tensor.min().item():.4f}, max: {tensor.max().item():.4f}\")\n        except:\n            print(f\"{name} shape: {tensor.shape}, type: {tensor.dtype}\")\n    #...\n```","range":{"startLineNumber":363,"startColumn":4,"endLineNumber":371,"endColumn":72},"embedding":"AOAMvQCAAzwAAI68AGDIvQCAhL0A4C29AEAmvQCAej0AoF+9AKB2PQAAADgAQBI9AADhuwBAlbwAANs7AECSPACA+bwAUJY9AKA6vQDgHT0AwG09AIAQPQDA4jwAgB68ANCOPQAAZDsAwDE9AMClPABgbD0AQBw9ADCXvQBA/bwAMJy9ABCsvQAABb0AALy8AGBpPQBgSD0AADC8AIBBPAAA7jwAALm9AMBLvQCgrj0A0Is9AMDuvABArT0AADO8AFCLvQAAkrsAgD28ACAxPQDAk70AgNg8AABQOgDAjTwAQIq8AMDJvADAsrwAQBo9AKAqPQAQnL0AAOC7AAB0PAAAaT0AAJK7ALDvvQDA47wAgGq8AAAmvQAAT70AALC8AMAUPQCAOj0AwEc9AECivAAAwDsAwKY9AOBYvQAAhzsAgL+8AADGvAAArTwAYEQ9AGAHvQBAyr0A+Ay+AKBcvQBAvrwAYGi9AACMOgAAF70AAEi9AGC4PQAATj0AwL48AAAMuwBgob0AQEE9AACbOwBA+TwAoAo9AACouwCAqzwAgG08ACAmPQCA3DwAYBg9AMCXPAAgvz0AIFm9AIDDvADAnTwAAG68AMCHvACAaL0AYAa9AMD/PADgUr0A4GG9AACjvACAl7wAAL87AIBavQDAET0AgBg8AICPPQAwoL0AwKO8AMCUvAAAlzsAIDY9AOBkPQAAl7wAQKe8ALCGvQAAPbwAgDg9AAAnvQBwtD0AAFG8AAATPACACzwAgBw9ADCjvQAARLwAgGK9AEBoPQAAlL0A4Cg9AEDevABQ2T0A4E09AAD/PADAsLwAkIW9AADhuwAQlj0AwOo8AKDCvQBA1LwAIDI9AAADPQDAnTwAANi6AOBjPQBAEL0AwIS8AOAzvQA4C74AkNg9AMDrvAAAGDoAwFK9AADNPAAA7LoAABS9AACYvAAwnr0AAGi9AIBrvQAAADwAAAQ7AIDtPABAU70AwMo8AAD5OwAAoDoAQIy8AGBsPQDgHz0AAEo8ACA/PQCAT7wAANo8AAAIPACAqzwAgBG9ACAAPQCgjj0AgEK9AMCpPQAAtrwA4Bq9AAAjvADQjr0AgKq8AAClPAAAn7wAABg6AEDPPAAAHj0AALw7AABOuwCArbwAwJ48AAC0OwAAgTwAQAU9AEBWPQAAlDsA8I09AAClPABART0A4EE9AAAOvAAAmjwAoBy9AAAGOwAAj7sAwJI8AKCnvQAAbDsAQAe9AKBEPQCAC70AAHa8AACquwBArzwAAGo7AMCVvAAAdD0AgLq8AIAcvQDAED0AgLE8AEAxvQCAvr0AgAg9AKBUPQBACT0AAIE8AKBvvQAAs7wAANA5AFCgPQAARLwAgLq8AABLvQBggL0AgFe8AAB4uwAgKL0AAKa7AACevACAXTwAwA29AIBAvQCAbLwAAFm9AKBgPQCAVb0AYBI9AACJOwCgEb0AwOE8AKAzPQDQgz0AwBY9AIDvvAAAPL0AgJ08AKAzPQAACLsAAEI8AACkOgAAqDwAgOw8AOA0vQAA9zsAIAY9ANClvQAAnzwAwJO8AIAmPACAJT0AwAW9AEA/vQCAFjwAwN29AEC+PAAA37sAAFu9AGAWPQAQs70AQKQ8AACBvAAAGLsAYEk9AOBDvQCAA70AgFy8AEANPQCATbwAAOY8AABevQAAKTwAsJc9AABiPQBA8bwAoKC9AMBZvQCgbr0AwAg9AEAvvQDAXz0AwBC9AEDivACAmrwAQP68AAAoOgCgiL0AQIC9AMDEvAAAITwAoGU9AICIvQAA9zwAAOQ7AICSvAAw070AYJe9ACDdvQAAEL0AAEC8AACEuwBAHL0A4EY9AECQPACAqTwAABe8AMAWvQAATz0AELG9AABaOwCAGjwAgCa8AMCGPAAATb0AAHW8AIAMvADQiT0AgA89AADsuwAAmLwAAP07AEALPQBAQz0AwLy8AEAFPQCA/jwAwJ88AEBKvQAAQbwAYOi9AOByvQBgXD0AgMg8AIAbPAAANzwAAC89AABYugBgQz0AAI68AKBSvQAAPLsAQB09AICzvACgFr0AgMQ8AACauwAQ1b0AwAi9APCRPQCAQj0AgJk8AMC9PQCwiT0AoDs9APC3PQCAAb0AAFc8AMB/vQBAKj0AQCW9AABoPQAglj0AoDI9AMC3PAAAqDsA8Jg9ABDKvQAgKD0AYDC9AAA+vADALr0AABo7AADbOwCAc70A4Do9AAAYvQAgOr0AAAK7AMCVvADgEr0AIFY9AIB4PACANrwAAKy7AEAPvQAA7bsAQPO8AAC7vAAAl7sAQIw8APDAvQCAQTwA8JI9AOA6PQCA8DwAIAk9AIBevADgGb0AwJc8AKBGvQAAjTwAwHm9AKAuPQAAGjsAwI08AACeuwAAlbwAwDG9AADougDgWT0AYHW9AIClPQDAgbwAEL49AACXuwAATjwAwOC8AGBavQDAtzwAQNC8AIBDPACgLD0AgAE9AGBJPQAAersAQMQ8AABAvQAAGrsAAKS6AOBUPQCgF70AgOI8AICKvABAljwAIGS9AICmPAAAYLwA4AC9AAC0PAAACzwAWDc+AICkvABAer0AgJQ8AACgOgCAgLwAAO87AACpPACAnbwAQKc8AEClvADAZb0AgEy8AMCGPABAw7wAAG49AIBgPADAVz0AAMQ8AIAtvACAZ7wAQIi8AMA+PQCAAr0AoJs9AAAvvQAAjjw=","chunkHash":"f84529b164be49a73d2d988e7829bfae9e243b889315527ebfe71a8cd89fc18a"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        os.makedirs(os.path.join(args.output_dir, \"debug_previews\"), exist_ok=True)\n        \n        # We'll only visualize the first sample in the batch\n        # Get a middle slice for display\n        if volume.dim() == 5:  # (B, C, D, H, W)\n            middle_slice_idx = volume.shape[2] // 2\n            volume_slice = volume[0, 0, middle_slice_idx].cpu().numpy()  # Only first sample\n            mask_slice = mask[0, 0, middle_slice_idx].cpu().numpy()      # Only first sample\n            \n            # Get the label and prediction for the first sample only\n            sample_label = labels[0].item() if labels.dim() > 0 else labels.item()\n            #...\n```","range":{"startLineNumber":376,"startColumn":0,"endLineNumber":387,"endColumn":0},"embedding":"AACmPACAWTwAAH28AGC1vQCwvb0AAAS9AABMuwDAdj0A4F+9AAAFvAAAwLoAgNe8AAABvABAn7wAAKs7AIDGPAAA2LwAwLo9AIDsvABAzjwAALQ7AACYPADgXz0AAHC7AKAfPQAA0bwAAA49AGAmPQAAHD0AwJc8AAByvQDAX70AAD+9AICsvQAAnLwAACW8AIASPQCgaT0AoIG9AACMOwDgND0AkNm9AIBuvAAwwj0AEPk9AADaPADQtD0A4A+9AMCKvADA9TwAgC48AADEPABAV70AAIE8AADxPACAhjwAIAK9AID3vAAAh7sAAKQ6AMCKPACQtL0AgCY8AID3PAAAiT0AAEA7AGDNvQCAizwAABa8AAACvQCgM70AAA+9AIBhPAAAJj0AANw6AECvvADArzwAkIc9AOCRvQDAzLwAAA+8AACWvACA3TwAgK08AMDXvAAgXL0A4Ii9AAD9OwBAMr0AoJ29AAC4OwCgAL0AcJK9AICtPQBgfT0AgGU9AMARvQDQjr0AsII9AABKuwCATzwAQPY8AMCFPABgBr0AQHY9AAApPADARz0AgEM9AEDtPACgUj0AgDe8ABCZvQAAZjwA4Bi9AIAYvAAAmr0AAGC8AACavACgIr0AAGS8ADCRvQAAFLwAAIq7AIBtvQDAhTwAAM67AOA7PQAA4r0AwNg8AABGPAAAFLsAQJA8AOBqPQDAu70AQBS9ALCAvQCAhjwAgJ09AGB3vQBA0T0AAIC8AAAsvABAyDwAgH+8AFDlvQAAJzwAwHq9AOByPQBQi70AICQ9AADYvACA3z0AgHA8AAAZvQBA5LwAgC29AABUuwAAMrwAAGA8AJCfvQBwkr0A4Fw9AIC8PAAA/zsAgLC8ACAVPQDgIb0AgKc8AOBQvQDQAr4AQCU9AAB0OwBgQj0AUJ69AACZuwAAvDoAAE29AECwvACAg70AYDW9AABgvQDAaj0AAGI7AMCHPADgV70AAJc8AMCOPADA3jwAALK7AABGPQBAnDwAQNi8AMAtPQBAFj0AgFm8AACUuwBAJD0AAD88AHCZPQAA2LoAAPi8AODcPQBAb70A4Ga9AIB2PABAGr0AAJE7AAArPABgEr0AAPc7AAB+PAAAFj0AIE89AOBUvQCAMr0AQJc9AOCDvQAAvDwAoFw9AAAEPQBA8bwA4AQ9AIAsPQDANj0AgIo8AAAvvQCAfT0AgCe9AMCzvAAASDwAYBA9AIDNvADALb0AAGy8AMAFPQAAcr0AAO68AAAwvABgPj0AgJE8AAAAAADApT0AALC7AKCDvQBQhj0AQA49AEBAvQCQi70AwKw8AKCyPQCwvD0AAKW8AMDavACAA70AAAq7AAD0PABgIb0AgEM8AODUvQAAbLwAgHK8ACAXvQDgRr0AwNc8AGAbPQCgFD0AgAe8AAB4vAAA0bsAgCe9AEALPQDgUL0AAKI8AOAWPQDAIr0AwIw8AOBNPQDgTj0AAOu7AMCwPAAAWb0AAEq8AAC/OwAAtDsAwEI9AKAxPQCASLwAwMQ8AMAxvQAwgr0AwCo9AADFvQCAdjwAwEW9AEAGPQCwnz0AoBW9ACCkvQCAHzwAYCe9AAAYOgAA67sAAAC8AEBsPQCACr0AADa7AAAOvQAArDwA4Co9AEB2vQCAMrwAAF67AIA5PQAAKrwAoA09ACBWvQAgCz0AAEQ8AABAPQAALb0AgG29AGAYvQAA27wAwKs8AACMvABArD0AwLK8AIBEvAAASbwAkLS9AECYvABgTr0AILy9AFCAvQAAT7wAAL48AABTvAAA6rsAQAy9AADkvAAQob0AID+9APDavQAgD70AgFa8AIDgvACAcLwAgP88AIB7PADAL70AIFu9AAAevQCAmzwAUMC9AIC6PADAGD0AAFY7AIDSvABgPL0AAOK7AOAOvQCgCT0A4CQ9AMC8vACA6rwAAAC6AIDxPAAADDsAAOO7AEDPPAAwkD0AAIS7AKBfvQAAKLwAGAW+AACnvQAgHD0AAKA8AAARvAAAabwAwKY8AMDMvAAAhjwAgEE9AEDGvAAAYDoAAAC8AAD9PACANr0AQPs8AACwvABgrL0AAFq8ACBmPQAAODwAQCk9ABDTPQDgej0AANQ7AIB5PQDgNb0AQL48AHCKvQAAwDoAAJy8AIBCPQCgeT0AYBg9AMCMPACAer0AAKc9AFDlvQDAnjwA4A+9AMAQPQBAmTwAAPQ7AMCPvACgO70AQMM8AKBkvQAAibwAAJi6AMCRvABAEL0AAC08AOBGPQBAkDwAADC8ADCHvQDgHr0AgFm8AAA0uwBA0bwAgGk8AGDCvQAACLwAAAs9AIBbPACAtjwAAOc7AECPvQDA1LwAAAW8AIA6vQAACrsAAGK8AMDYPABgC70AACQ7AICcPAAAZzwAMIS9ACBVPQAAiDwAoKC9ALCfPQAAH7wAgLg8AIBEvAAAGTwAAKO7AMA1vQBgHz0AoBS9AEAsPQAAMT0AAFS7AGAMPQAA2TsAoCo9AAAgvQDAqjwAQNE8AABiPABgar0AAAG9AMDevABgFr0AAES8AIA6PQCAAbwAsIq9AACPPAAgCj0AEPQ9AABOvAAggr0AsJY9AOAuvQDgAL0AIEa9AIAHPACAfrwAgJE8ACATvQCAYr0AgBU8AEDPPAAAUTwAwNc9AMAmPQAAKT0AgMW8AAAsOwCAOLwAgCi9AOACPQAAt7sAQIo9ACAVvQCA2Dw=","chunkHash":"9ff70dca61388c6dbc2d75bd05cba685ed8d4a058022f86f99addb4a70be3d12"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n            sample_prediction = predicted[0].item() if predicted.dim() > 0 else predicted.item()\n        else:\n            print(f\"Cannot save preview: unexpected volume shape {volume.shape}\")\n            return\n            \n        # Create figure with two subplots\n        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 5))\n        \n        # Get volume statistics\n        vol_min = volume_slice.min()\n        vol_max = volume_slice.max()\n        \n        # Plot volume slice (grayscale) with EXPLICIT vmin/vmax to preserve intensity scale\n        # Set vmin and vmax to 0-255 range for consistency in visualization\n        display_range = (0, 255)\n        #...\n```","range":{"startLineNumber":387,"startColumn":0,"endLineNumber":402,"endColumn":0},"embedding":"AABuPACAezwAwNq8ADC4vQDQyr0AwPG8AADYOwBAeT0AYEC9AADAuwAA2DoAgJO8AADcuwCANLwAAOI7AMCQPACgGr0AELc9AEARvQAALj0AAC88AABXPACAVz0AAGi7AEARPQAAfbwAAB09ACBtPQDAKz0AgJ08ACB/vQBAZ70AYDm9AMCavQCAw7wAANS8AIDvPABgVz0AIH29AACauwCgRj0AUOK9AADguwAQ0j0AsP09AIAKPQBgwD0AYAK9AAAyuwDAjjwAAO87AMC8PACAJL0AQIQ8AKARPQDA1zwAoAO9AIDtvAAAkrsAALG7AECjPADgt70AQIc8AID9PADgUT0AADu8ALDTvQAAgTsAAIy7ACA4vQAgQ70AQOW8AEDWPAAATz0AAFC6AACFvACAET0AwJI9AICLvQDADb0AQJa8AIAcvADgBj0AAO08AAAYvQBATr0AoKm9AAAAuAAgIr0AAJW9AAA4OwBgEL0AYHu9ADDEPQAgZz0AwE49AADgvADQhr0AoIw9AACEugAAqTwAIBY9AIAYPACA/bwAYGg9AIBxPAAgZz0A4BM9AIAdPQDATj0AAKi7ACCRvQCAbDwAgB69AECJvAAgvL0AgHC8AMCDvADgE70AABW8AKBEvQCAZLwAAAw7AGBavQDAvTwAAHK7ACAkPQCAzb0AgLI8AACgugAAOzwAAJY8AHCGPQAgwL0A4Da9AABfvQAASTwA8J49ABCMvQDwyT0AAH68AAAiOwCA5DwAwMy8AADnvQAA+zsA4GK9AOCAPQCgj70AgBU9AAC4vACg4j0AAJ48AADkvACA+rwAYBO9AADSOwAACLsAABI8ALCuvQDAj70AgEw9AIAYPAAAUjsAAB28AKAhPQBAQ70AAOI7AMA6vQC4AL4AABQ9AAAKOwDAOz0AAKi9AABOOwAAu7sAIEm9AECHvADwkb0AQPS8AIBSvQAAaT0AAMS6AMAIPQCgH70AwIY8AABrPAAAuzwAAEw7AABNPQDAqTwAQM+8AOAoPQCAEz0AgD28AMCRvABgFj0AALo8AGCEPQAAgTsAgOa8AJDgPQAgV70AIG+9AIAIPACA+rwAABw8AACCPABgFr0AADI8AIDsPACAHD0A4G89AICCvQAALL0AEJk9AOBPvQDArTwAAEo9AOBBPQBgNL0AwOg8AEAsPQBADT0AQLo8AEAPvQAAgT0AIDm9AICtvACAkTwAgPg8AKARvQDAFL0AAHi8AIDdPABwir0AAOO8AADwOQDAQj0AwOY8AAB+OwCAqT0AAJg6AIB4vQBAkT0AgCM9AMBMvQAwjb0AAJ88AACvPQDwpT0AAOO8AMCIvADAwrwAAJo7AABVPABgFr0AAIs8AGDQvQCAn7wAAJa8ACACvQBAQL0AwA49AMAoPQCABT0AACO8AIAhvAAA1rsAIDG9AGBEPQDAQ70AQPQ8AIAiPQAgF70AAN88AEBgPQDANz0AANy7AMC6PADALr0AABO8AAAIPAAAkjsAgF49AMA6PQAAcrwAgJ48AAAkvQDgcL0AQCw9AMC+vQAAVDwAADO9AIDPPACArD0AAEa9ABCavQCADzwAwC69AAAwOwAAwzsAgAW8AFCGPQBANb0AAEi6AEC3vADAwzwAAPA8AABTvQAAE7wAAL67AKBsPQBAjLwAoAA9AEBivQAA9TwAQJc8AABKPQAAJr0AYHy9AIANvQBAxrwAAE08AAB2vAAgsz0AgLq8AABVvAAAebwA4Je9AABRvAAAYr0A4MG9AIB7vQAAyLsAgFg8AAAvvACAATwAAOy8AMCBvABQob0AoEa9AHDVvQBgCL0AgJe8AAD8vACAqrwAIA09AABSPADAI70AYGS9AGAKvQDAnjwAYKa9AADjPABgHz0AAKW7AIDTvAAASb0AABm8AOANvQBAPz0AwMc8AECXvAAAIL0AALi7AADUPAAATjsAgIK8AAAVPQCQjT0AAJk7AFCFvQAAaLwA2AW+AHCTvQDA8TwAgGw8AAAPvADAl7wA4AU9AICMvAAA4zwAACI9AIAEvQAAcDoAAOQ7ACANPQCAUr0AwB89AICVvABwkL0AAOW7AFCCPQBAqzwAoD09AGDEPQBAdT0AgBQ8AKBwPQBgIb0AQMY8AACbvQCAyDwAYAS9ACA8PQAQkz0AoDE9AADHOwCAfb0AYKU9AKDsvQCAsTwAYD69AAArPQAAgTwAAEg8AACgvAAAKb0AQNY8AKBOvQDAmbwAABA7AIBuvABAHr0AAIk8AOA1PQAAXjsAAFq7AMCWvQDgKL0AAHO8AABEvAAA6bwAABg8ANC5vQAAA7wAwLU8AICFPAAAnjsAgEU8ACCevQAA6bwAAM67AKAnvQAA4DsAANO7AMDpPABACL0AAPI7AIB+PAAAZDwAAJi9ACBCPQAACDwAwJC9ABCnPQCAKLwAANQ8AIAQvAAAizsAALW7AMBavQDAPj0AQOi8AIAKPQDAGD0AABi7AACcPAAArLoAQCw9ACBdvQCArjwAQOQ8AAD6OwAgbb0AgPK8AIDcvAAACr0AAB67AKAbPQAAIbwA4Fy9AACzPABgIz0A0Oc9AABxvADAe70AQG49AIAUvQAAyLwAgDO9AABCOwCAdLwAgHA8AEDPvABgVb0AgHA8AMAYPQAAVDwAQNc9AMC+PAAAOT0AABe9AABGOwBAlbwAQPC8AMDVPAAAj7sAwII9AOBBvQAATzw=","chunkHash":"cabbf32931181d464bfc9374576a2f1765465e3b72057376793840c1895aca77"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n        im1 = ax1.imshow(volume_slice, cmap='gray', vmin=display_range[0], vmax=display_range[1])\n        ax1.set_title(f\"Volume (class: {sample_label}, pred: {sample_prediction})\\nRAW range: {vol_min:.1f}-{vol_max:.1f}\")\n        plt.colorbar(im1, ax=ax1)\n        \n        # Plot mask slice (also grayscale since it's binary)\n        im2 = ax2.imshow(mask_slice, cmap='gray', vmin=mask_slice.min(), vmax=mask_slice.max())\n        ax2.set_title(f\"Mask (min: {mask[0].min().item():.2f}, max: {mask[0].max().item():.2f})\")\n        plt.colorbar(im2, ax=ax2)\n        #...\n```","range":{"startLineNumber":402,"startColumn":0,"endLineNumber":410,"endColumn":0},"embedding":"AMCqPACAZzwAAGa8AOC2vQAws70AQO28AACwOwBgZz0AwC29AABUOwAAdjsAAL68AAD8uwBAo7wAAJE7AACBPACgBb0AcMk9AKAWvQDAID0AgBI8AMCfPABgaT0AgDW8AMAmPQAAurwAgMM8AABNPQDANz0AwLQ8AJCCvQBAYr0AwD+9AMCcvQCAgLwAQLO8AIAkPQAAXz0AAFa9AIANPACAPj0A4Nq9AIBKvABwwT0AAPU9AADlPACwvT0AIBG9AAAxvACA4jwAAC48AADZPAAAML0AAHQ7AGAEPQCAnDwAQCu9AED+vAAATDsAACK7AAB/PACAsb0AAIM8AEDFPABAYj0AAKS7ALDbvQAAxDsAAKO7AKAcvQBgLL0AoBK9AIB9PAAAQz0AAFA6AABzvABA0DwAUI89ACBxvQBA+bwAwKW8AAAvvADAtjwAQKU8AEDWvACAZr0AQLG9AACEOwDAQ70AwIC9AAA8uwBA8rwAUIK9ACCxPQAggj0AIGA9AKANvQBQhL0AoHM9AIAIvAAAfTwAQKY8AACXPAAAFb0AYGs9AACHPADAcj0A4CA9AKAMPQCAMT0AAB+8AHCYvQAAajwAgAm9AADyuwCAnL0AgCe8AIApvACACb0AgE+8AOBavQAAObwAgHe8AABevQBAqTwAAIa7AKAnPQDA5r0AgNw8AACguQCAKDwAQIg8ABCJPQAgvr0AwCi9AEBlvQCAjDwAcK89ADCJvQDQ4D0AABa8AAC7uwBAwzwAAMK8ADDsvQAAVzwAIHi9AKByPQAgjb0AABk9AICmvABw8T0AAIo8AIDqvABAzLwAYDW9AADYugAACLwAgBE8ALCnvQBAjr0AoEc9AABQPAAAOjsAgE28ACAUPQBAU70AAGc8AKA+vQAIA74AgBI9AAD2uwBARj0A4Jy9AAATvAAArLsAoFu9AAAsvAAQpL0AwAC9AMBQvQCgVD0AgEW8AIDEPACgS70AwJQ8AAB6PACA4TwAAI+7AOBbPQAArzwAQIS8AEBdPQAA5TwAgAy8AIALvADAID0AwME8AKCIPQAAZLsAwO68AHD6PQDAZL0AIE+9AIBUPAAgAr0AAJQ7AAAaOwBANr0AAP47AICdPAAABT0AoEs9AEBrvQBgI70AgJ89AKBivQAA1TwAoC49AGAOPQCgCb0AwKc8ACAqPQBgDj0AAJs8AMALvQBgeT0AQCy9AMCIvAAAlTsAADg9AAD3vACgJb0AALu7ACAiPQDQgr0AQNy8AADwugDAMz0AgLQ8AAC3OwDQpz0AgBA8AEBpvQAQjj0AIBY9AGBBvQBAm70AAJ08ACCsPQBApz0AQLy8AICpvACgAr0AAOS6AECtPACAAL0AAKY8AODavQCAoLwAALm8AMDtvACAP70AwOw8AMAjPQDgAj0AgCq8AIAUvAAAwrsAACK9AAAuPQCAQb0AYBI9AIAoPQCAIL0AALo8AABePQCAWj0AgIC8AMCSPAAASL0AABq8AAAgPAAAETwAAG89AKA2PQCAcbwAALk8ACAwvQAge70AYBs9AODFvQCAFDwA4Dy9AMCIPABwmD0AICS9APCavQAA3zsAoB29AAAlPAAAhDoAAGy8AOBvPQCgR70AAAi8AECwvACAmjwAIFM9AEBsvQCAarwAAAC6ACBfPQCASrwAQPI8AEB2vQCgDz0AgHw8AABdPQDgNL0AgGG9AAAUvQAAprwAAAI8AEC/vABwsz0AQNK8AACTuwCAaLwA0Ju9AACFvACgQL0AgKm9AKBOvQCAA7wAgPE8AICMvAAAiTsAwP68AECGvAAwnb0AoFW9AKDnvQAA/LwAwLO8ACAavQAAGLwAgCc9AICEPAAgKr0AoF+9AMCqvABAyDwAoKm9AEDzPAAAGD0AANm7AADGvABAPL0AAMw6AAAkvQCAMz0AgNM8AIDQvAAA3LwAgA68AACkPAAAgzsAgFS8AIDsPACQgz0AADY7AGCAvQAALLwAwAK+ALCVvQCgAD0AgKM8AABZvAAAwbwAgKw8AEDfvAAAijwAoDo9AADnvAAAYDkAAKA6AEAePQCgQL0AgB89AEChvAAQob0AgE68AECIPQAAlzwAIEo9AGDGPQAAcj0AAIo7AMB5PQBASL0AwMY8ALCfvQCARTwA4B69AAAiPQDQij0AgPU8AADfOwBgY70AUKo9AFDbvQBAAj0AoC+9AEArPQBAkzwAAN87AIBovAAAWb0AgGk8AIBjvQDAvLwAACK7AMCSvACgDb0AQKs8AKA5PQAArjsAAKy6AACJvQDAHb0AgLO8AIB9vADAiLwAAIg8AIDMvQAAHLwAwPM8AIBhPABAmDwAADE8AHCHvQAAKL0AADK7AOAgvQAApTsAACG8AID+PABAE70AAG88AACtPABAqDwAIJ+9AMBFPQAA0TsAYJO9AFChPQCAUbwAALQ8AIB/vAAAcDwAAP67AGBRvQAgND0A4AS9AGAXPQAgID0AAJG7AMD8PAAAAjsAYBo9AEBkvQBAqjwAgN88AADfOwCgfr0AgJC8AED4vABgEb0AgBy8AMA0PQAAMrwAIG69AIA1PABgBT0AAOg9AIAJvAAAhb0AYIo9AAAMvQBACb0AYBG9AADsOgBAgbwAgLI8AKAFvQAgbb0AAIQ8AID+PAAAGDwAIMo9AIALPQBAOz0AIB+9AAD5OwDAhbwAQCC9AMD+PAAAdrsAgIc9AOArvQCAETw=","chunkHash":"0b6797d4fdccbcb82b81b51d68cb007c58cae2ef354d1d925013f247cffda8d1"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n        # Add softmax outputs as text for the first sample only\n        softmax_probs = torch.softmax(outputs, dim=1)[0].cpu().detach().numpy()  # First sample only\n        text = \"Softmax outputs:\\n\"\n        for i, prob in enumerate(softmax_probs):\n            if i == sample_label:\n                text += f\"Class {i}: {prob:.4f} (true)\\n\"\n            elif i == sample_prediction:\n                text += f\"Class {i}: {prob:.4f} (pred)\\n\"\n            elif prob > 0.01:  # Only show significant probabilities\n                text += f\"Class {i}: {prob:.4f}\\n\"\n        \n        fig.suptitle(text, fontsize=9, y=0.98)\n        plt.tight_layout()\n        #...\n```","range":{"startLineNumber":411,"startColumn":0,"endLineNumber":424,"endColumn":0},"embedding":"AIAJPQAAuTsAAEi8AMCzvQAwur0AIAy9AAACuwAgST0AQCW9AAAxvAAAb7wAAPC6AADXuwCA4LwAAEg8AICIPABA9LwAENM9AOADvQCA0jwAABC7AIBfPAAAiD0AgAE8AGAiPQAASrsAQMY8AKAwPQCAMT0AQKM8AABavQDAar0AoB29AHCpvQBAvrwAAIA7AGBhPQBAOD0AAIK9AACiuwCgJz0AINi9AADMuwBg4z0AUPU9AGAPPQCwuD0A4B+9AMCQvACgMz0AgEo8AIDdPADgE70AAHY8AADoPAAA5rsAYAm9AIDZvAAAyLoAAAW8AKAXPQCgpb0AAOE8AACtPADgTD0AAKO7AIDlvQAAIDsAALA6AMAWvQAAl7wAgFO9AICEPABgOT0AgM28AIBkvAAA4TsAMI89AEBrvQAAJb0AAMA4AIAovABAzTwAABI8AICJvAAgS70AYLi9AADXOwCgMb0AAIi9AACMOwAAFb0AYH69APCVPQAAcz0AAG89AGAMvQDwgL0A4HI9AAB+vAAADj0AAJ08AAAYPAAgI70AQDA9AACNPACAcT0AgMk8AIDHPADgGT0AgKq8AOB4vQCAqTwAgJm8AAAHvACwwr0AANw6AAAWvAAgI70AwKy8AIB1vQAAprsAAAK8AGAvvQAAdzwAAGA6AMAWPQCQ7b0AgKI8AACbOwAA2bsAgEY8AKBbPQCAr70AYCK9AIBvvQAAMDwAYK49AOBxvQCQ4j0AgAG8AADSvAAAhjwAgHi8AAD4vQAA9jsA4GK9AGBWPQDwob0AQCk9AMDEvADw2T0AAM07AMC3vAAAvrsAQE69AACNuwAAYLsAAB28ABCXvQBQiL0AIFc9AACvPACAGzwAAMy7AMAWPQBAH70AwJU8AEBUvQAAAr4AwBc9AAAFPADgfj0AYJW9AIBJvAAAtLoAwGq9AAAAOgAAj70AgMe8AIA5vQBQhD0AAEa7AAB9PABgIr0AANg7AMDaPADAEz0AAPA7AOA/PQAAujwAAFa9AOBjPQDAzTwAAKe8AIADvAAgID0AwLs8AMA/PQAANLsAIBO9AID9PQAggb0AYG29AAASOwAAH70AAMC7AADiOwAgBb0AAJg6AAD3PACA+jwAYDU9AKCNvQBgQb0AwJE9AOBWvQCABT0AoDc9AMDvPAAgIL0AwFM9AKBaPQBA1TwAAE08AMDcvAAgWj0AgPe8AMDbvAAAcjwA4CY9AICovACAQ70AABu8AOASPQBggb0AAH68AADFOwCALz0AQKY8AIAKvABAnz0AAIk8AIB2vQCgrT0AYCg9AKByvQDwoL0AgL48ADCvPQBwvD0AwPm8AIBGvAAgH70AAGA7AAAMPACAXr0AgAY8AGCtvQBAybwAAK+7AIAsvQDgVL0AgKA8AMAoPQCA+DwAAJe8AAD2uwAAKDoAQP28AGAqPQBgdb0AgG88AMA6PQDgXb0AwLs8AKAiPQBgcz0AAKy8AAD4PAAgSr0AAIu7AADvuwAAcDwAoE09AEAOPQCATLwAgGM8AOA9vQCgjr0AAB09AODHvQAAeTwAIFu9AMC+PACAoj0AQLO8AJCPvQAAxTsAwNO8AACsuwCAbbwAAHq8AABPPQCADb0AAAq8AICRvACAsTwAwEc9AOCKvQAAZrsAALe7AKBOPQCANLwAgKk8AJCUvQBgDz0AQMQ8AOBRPQBgDb0AQGK9AICyvABAlLwAAH47AECtvAAgwD0AAGK8AADyOwAAULsAwIK9AICmvAAAYL0AoKO9AOA+vQAA8DkAAK88AAARvAAAiDwAoAS9AAAcvADgm70AoGa9AEDjvQCAsbwAgBC8AOACvQCACrwA4B09AABlPAAASb0AYEa9AECOvADA1TwAUJC9AEDSPAAA6DwAAEC5AIDNvADgP70AAEW8AAAevQCAMz0AADQ9AIAGvQCAC70AgJW8AIBfPACAvTwAAEC5AADOPAAwij0AALY7AKA2vQCAGzwAOBi+AFCOvQBAzjwAgHo8AECdvAAA8rwAQNA8AAA6vAAAcjsAgIk9AMAFvQAAcDsAAAW8AID5PAAgDL0AQEk9AIC5vACAlr0AgDq8AOBzPQCAuTwAIDU9AJCpPQCQgj0AABo7AGB6PQCgOb0AgIM8ANCUvQAAxzsAgJq8AADxPABgjz0AYBs9AICXPABgKr0AwLo9APDnvQCAxzwA4DO9AMDuPADAlTwAAAC4AIB5vABgN70AANk8AOBfvQDAirwAgDo8AABYvAAgFb0AAGU8AAAzPQAArjsAAOC7AACJvQCgEb0AwOy8AACAuQBAsLwAAP08ANDCvQCAh7wA4Ak9AEDOPAAAhzwAAIU8ALChvQAgF70AgDW8ACAcvQAAcrsAALu8AICqPABANL0AAFg7AIANPABA0jwAYKC9AABLPQCAgjwAwIq9AGB8PQAAvLoAAOg8AMCrvADA1jwAAG28AOBhvQBACz0AgBG9AADNPAAAPz0AAM67AAAPPQCAA7wAgAI9AABZvQAAujwAgJ08AIAbPADgd70AgBO8AADTvADA27wAAMy8AKA7PQAA77sAwI29AECEPACAaTwAcPc9AACkvADAnL0AIIY9ACAJvQAA5LwAQFe9AACIPACAg7wAQIc8AEASvQCAXb0AAJ87AMANPQAA5rsAAMs9AEDoPAAgAD0AYAm9AACzPAAANjsAYCS9AGBVPQAAjLoAAJ89ACA5vQAAzTs=","chunkHash":"f756bd4613eee03f7c7e63b899c603850b93a08908e46d2ee69597b110cab6dc"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n        # Save the figure\n        save_path = os.path.join(args.output_dir, \"debug_previews\", f\"{path_prefix}.png\")\n        plt.savefig(save_path)\n        plt.close(fig)\n        print(f\"Saved input preview to {save_path} [RAW intensity range: {vol_min:.1f}-{vol_max:.1f}, Display range: {display_range}]\")\n    #...\n```","range":{"startLineNumber":425,"startColumn":0,"endLineNumber":429,"endColumn":135},"embedding":"AIB0PACAvTwAwMC8AKDEvQBwvL0AQN+8AICCPACghz0AICi9AAD3uwAAxDsAABO8AAAFvAAAtrwAAJk7AMDuPADA5LwAoKk9AOAgvQAAEj0AwK48AIB0PACgXD0AAHi7AID4PADAlrwAIBY9AABtPQDAFj0AQIA8ACCPvQBgd70AID+9AHCbvQAAz7wAAIq8AAAaPQCAaT0AQHG9AABsuwBAYD0AsPO9AADEuwDgzj0A4OY9AACJPACgyj0AIBu9AAAeOwCAfTwAQIA8AMCjPAAAC70AQM48AAARPQAA2TwAgPy8AEAIvQAAALsAAD88AACzPADAu70AgHM8AICHPAAgdz0AgBG8AODXvQAAnjsAAO+7AEAevQDgIr0AwA29AIClPABAPz0AAKw7AAC5vACgGT0AgJM9AKB0vQBgGb0AAIu8AAAougBA4DwAwII8AAADvQDgb70A4LK9AACWuwAANb0AMIu9AADAugBgBL0A4Ge9AJDCPQAgUz0AQEY9AAAOvQDglL0A4H09AAAYOgCA5DwAYBs9AAA8PABA+rwAIGI9AECaPACAYz0AQAs9ACAEPQAAcT0AACG8AICDvQAAvTwAIGi9AACDvACgur0AAKA5AACfuwAADr0AAE28AMBRvQAAGrsAAKg6AMBvvQBAyDwAAJU7AGAfPQAgz70AwLc8AABcuwAAlTsAAJY8AHCePQDQt70AQA+9AKBJvQAAITwA8J49ANCPvQCAyT0AwJy8AADQugCAaDwAAE+8AADevQAAfjsAgI29ACB3PQCghr0AgA89AMATvQAw1z0AQNI8AMCNvADAxrwAwP68AACEuwAAhDoAACI7AJCevQBgZ70AIFs9AABSPAAAZjsAAKK7AKBDPQBgLr0AgBs8AOAcvQAQBL4AwB09AABgOwBgQj0A4Iu9AACUugAAE7wAoGG9AABsuwAwl70AIAC9AOBEvQAAPz0AAAW8AKAaPQBAQL0AgHI8AADXOwDApDwAAAi6ACBaPQDArDwAwLq8AIBQPQAA3DwAAL67AIBjvACACj0AACI8AECEPQAA5TsA4B69ALDLPQAAM70AAFa9AACsugBgQr0AACA8AIBOPAAgF70AAOc7ACAIPQDgOT0AYHQ9ANCHvQCAF70AsI89AIBSvQBAjzwAYEg9AAAwPQCADb0AYBg9AIAePQBgIj0AwOM8AIAqvQCQgT0AQES9AIBZvAAAmDsAQOU8AOATvQAA+bwAAJ+8AIAdPQCAh70AoAO9AADAugCgTT0AgNE8AADwOgBAmT0AAFC6AGBrvQCgiD0AQB89AAA8vQBwiL0AAHk8ANC2PQCwpD0AQIO8AIAtvACgBb0AAC08AMDqPADAFr0AgKA8AKDKvQCAgrwAgC28AMAHvQBAAb0AgP48AAAmPQBgKj0AwLC8AACwuwAABrwAACm9ACBCPQAANr0A4Cg9AAAYPQBgHb0AoAs9AIBuPQAgTz0AAGS7AMD4PADgQr0AAL27AECNPAAAdjwAwDU9AEAqPQCAGLwAANk8AAAovQDgO70AQOk8AADGvQCASTwAIEC9AIC3PADAoz0AIDa9AICivQDAhTwAgC69AAAgPAAA0TsAADS8AIBcPQCAY70AAEi7AEAGvQCAKTwAYC89AKB0vQCAkrwAAIA6AOCAPQDAhrwAgBo9AAA2vQBA4TwAYAA9AOBlPQBA67wAUIO9AIASvQBA5LwAAFc8AABWvADwtz0AwOy8AEDYvAAAiLwAQJW9AAB2vADAa70A8Ki9AMCJvQAAIDkAwAE9AMCxvAAAFjsA4Ae9AOADvQDwm70AAF69AHDOvQDAn7wAgAu8AEDIvADAq7wAoAM9AIBcPABAL70AoFi9AGAJvQDA2DwAUKy9AMCqPAAgBT0AAPO7AAC/vACAQ70AABC7AMDgvABAYj0AQOk8AADfvAAAHr0AgAC8AAC2PAAA+jsAQLK8AIDzPADgfT0AANs7AACYvQAAuLoAuAu+AGCPvQDA8TwAgFw8AAB4vAAAXrwAYAE9AMCuvADAnTwAIBY9AIDrvAAANDsAAGw7AID2PAAgS70A4A49AIAOvADwlb0AgAO8AACAPQAAFzwAwD09AEDuPQBAjD0AAIC4AOB8PQBgIr0AwJE8AACkvQBA0TwAwMu8AEAtPQCgfT0AYBo9AAD8OwCgV70AILA9ALDdvQCAzjwA4Bm9AMAoPQAAxDsAAOc7AIA/vACgSb0AgMo8ACBfvQCAuLwAALI7AACTvADADL0AACg7AAAtPQCAZzwAAPy7AOCLvQAAOL0AwKS8AICbvAAAXbwAANw7AODRvQAAsLoAwAM9AEDnPADAgDwAABY8ADCLvQCADb0AAIq7AEAOvQCAJDwAQJK8AADcPAAAIr0AAKw6AADxOwBAmzwAkKG9AKAUPQAAuDwAMKC9ABCyPQAAGjsAAPs8AAAYOgAAKDsAgBS8AMA9vQBgHz0AgMG8AAAvPQCAGj0AAEQ7AICsPAAAy7sAgPA8AIA2vQAAFzwAwNQ8AIBFPAAAhL0AoAS9AEC9vAAgDr0AgIi8AOAJPQAA5LsAQE69AABuPABAFj0AUAY+AABHvADwg70AIHI9AKAavQAACLwAwCy9AADXOwAAeLwAoAI9AMD3vADgU70AgHI8AAAyPQCACDwAAMg9AKAEPQAAWT0AIBK9AIBRPAAABbwAQAS9AID/PAAAlzsA4G89AEAevQAAbzw=","chunkHash":"0aae3e90e5f7f950d0059ba55fdb6b5fc23dd990cfbd1d9fd178f10d5f089c0c"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    \"\"\"\n    Train the model with the given parameters and mask-guided features\n    \n    Args:\n        model: The model to train\n        train_loader: DataLoader for training data\n        val_loader: DataLoader for validation data\n        optimizer: Optimizer\n        args: Command line arguments\n        \n    Returns:\n        Trained model and training history\n    \"\"\"\n    print(f\"Setting up training environment...\")\n    device = torch.device(args.device)\n    model = model.to(device)\n    \n    # Define loss function\n    base_criterion = nn.CrossEntropyLoss(reduction='none' if args.use_mask_weighted_loss else 'mean')\n    \n    # Initialize learning rate scheduler\n    if args.scheduler == 'reduce_on_plateau':\n        scheduler = ReduceLROnPlateau(optimizer, mode='min', factor=0.5, patience=5, verbose=True)\n    elif args.scheduler == 'cosine':\n        scheduler = CosineAnnealingLR(optimizer, T_max=args.epochs, eta_min=1e-6)\n    else:\n        #...\n```","range":{"startLineNumber":253,"startColumn":0,"endLineNumber":279,"endColumn":0},"embedding":"AAByuwDAqzwAAPE7AIDWvQDAgb0AoEi9AKA1vQCQiD0AwDy9AICpPQBAt7wAgPw8AIB0vADAlLwAAIC5AABmuwBABL0A0NQ9AADDuwBAPT0AQLQ8AGB7PQAAMDoAQKc8AACdvACAObwAUJI9AOAkPQCAOj0AANg8AEB4vQBA2rwAAKO9AMC8vQDA2bwAgN+8AABzPQBgJD0AUIS9AOAGPQCgVz0A4P+9ACBxvQCgtj0AYFY9AKAJvQDAnz0AwLI8AEA2vQAAajsAAOu7AIBwPQCgXb0AABq8AIDqPABgIj0AANK7AIAKvQDgBL0AoDY9AIB+vADAxr0AAJ27AIA+PQAASj0AAP+8APCBvQAAHzwAAPy8AIDivACAAL0AgFe9AADyPADAzDwAwGs9AABUvACANzwAkLc9ANCDvQAACjsAANC6AACzvAAAYDkAALQ7ADCvvQBQv70A8LS9ACAhvQAA07wAgKy9AIAIPQDALr0AUIC9AEDDPQCgcj0AAP48AOAjvQCwgb0AgHw9AACIOgAgtj0AANU7AABXvADAnrwAIEo9AID2PACAATwAoG89AACyPABg3T0AAL87AAAUOwAA1DwAgGW8AKAivQBAIb0AQMy8AECdvACAuLwAwAy9AEBRvQBgBb0AAAa7ADCOvQAAMLsAAIO7AKCQPQDwyr0AADS9AICwvAAAnjwAwBQ9AGAuPQDANr0AQCC9AIBvvQCgGb0AgP88AOBtvQDwiz0AwPq8AMD2PAAAeLwAQJs8AGBVvQDAiLwAoEi9AMAVPQAger0AEII9ACAUvQAw1T0AUMI9AABwOwDABb0AoHO9AABuvADgND0AQCY9AKCJvQDgR70AQA49AACJuwDgCT0AQO48AKBoPQCAIb0AgI08AAD1vABIAb4AEI49AIBgvADA/zwAwN+8AABoPAAAnTsAgI+8AAASvQDghr0AQJq9AACNvQDAijwAgFS8AAChPACgn70AgEk9ACA8PQAAvLoAwMS8ANCOPQCA3jwAQPe8AKANPQAACL0AYHE9AEC5PACgZT0AgBa8AABoPQAAeD0AwI29AOAgPQBAmDwAgF69AAAYOgBwor0AAJC7AMDtPACgLb0AAAa7AABdPADgFj0AAPA8AACvuwDgX70AwKU8AACcOgCgML0AYDM9AAA8PQAAczwAAMa7AACLOwCAYzwAQDs9AECMvABA/DwAgFW8AAA8vADgLz0AAB+8AKBEvQAAn7sAADy8AGB7PQBAib0AALG7AABUvABwhD0AAOA8AAAcPACwhT0AwJ+8AKBNvQBgaD0AwNU8AAAhvACAv70AAOQ6ACBoPQAgNz0AgDE8AAD2vAAAwLwAgB88AECTPQCAO7wAoAW9ANC1vQBghr0AIDw9AAByuwCAE70AALC6AAATPAAAfTwA8Jq9AOATvQAAgrsAIEK9AOB5PQAAzLwAAKY8AAB0vAAA5bsAQPq8ALCFPQCgND0AAAc9APCdvQCgJ70AgBq8ACBpPQCAmTwAgBy8AAAvvACAgzwAAHi8AMDbvABAm7wAAFu8APCrvQCATDwAAEM8AADbuwDghD0AAIq9AEAIvQDgOD0A8Lu9AABEPACARD0AYCm9AADcPAAAx7wAgME8AEDLvACAyLwAoDo9AOCzvQAAODwAgHw8AADIPAAAnrwAcIM9AIAZvQCAZzwAoFA9AMAOPQAAV7wAMLi9AICbvAAgKr0AAFc9AIA0PAAAYz0AACA5AABsOwCAN7wAABS9AECEPABghr0A0MW9AKAQvQAA97sAYN09AFCfvQCAdzwA4DA9AACIvABQ4r0AQHm9AADKvQBAMr0AAA29AECFPACARL0AABC6ACABPQCATzwAwLa8AEDQvABAVD0AULG9AKApvQCgAL0AwNq8AAD7uwAgeL0AgCs8AMDbPAAgWz0AwK68AACsvACA8LwAAGo7AGAQPQBA8zwAIBq9AACiPAAAzTsAADA8AECqvQCgHb0AgPa9ACApvQCAXzwAgJg8AABOvADA3jwAQCA9AADmvADghT0AYDC9AACauwCAArwAID09AICvvACAfLwAAM48AECqPACwx70AACi7AGDAPQBAoDwAYA09AODcPQCAdT0A4Go9AFCxPQCA6bwAANA6AAA0vQAArbsAgNG8AOBPPQBAiDwAAPw8AACMuwAABrwA0Jg9AIBMvQDgUD0A4Ai9AACZOwAA1bwAQLO8AAAcOwAA4bwAQJw8AABVvABga70AgGI8AADcvACAZL0AAGw8AACbPADAwDwAAE67AABxvQDAVL0AIBG9AEClvACAJL0AAH08AIBsvQAA0rwAQDA9AOAaPQCAgTwAQO88AAAkvABA2rwAYEE9AAA+uwAAzjwAcJi9AGAFPQDAIL0AoAk9AAA/vACgBb0AANG7AAAevADA8TwA4Ci9AEBQPQAAzLoAgCM9AACQuwBAmDwAAFS8AABqOwDA8jwAUIW9AOBPPQCASjwAgL88AKCBPQBA6zwAACi6AAClvAAAqzwAAC47AKARPQAgLr0AAOG7AIAyPAAA0TwAAPa8AMAfPQCAJz0AANu7AACmOwDA7zwA2AI+AEDRvACgV70AgGI8AMCUPAAARLsAgN48AKACvQCAQbwAwCM9AKAcvQAAd70AAH+8AECPPABAVz0AQF09AABQugBAUz0AgKQ8ACAQvQAAVrwA4AO9AACMPAAAczwAAHM8AOArvQAAf7w=","chunkHash":"2193e91b7ca0c728c59dba90da57b8b037abcd5038679911d69ce4043398417b"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n        scheduler = None\n    \n    # For early stopping and model saving\n    best_val_metrics = {'loss': float('inf'), 'accuracy': 0, 'f1': 0}\n    best_model_states = {'loss': None, 'accuracy': None, 'f1': None}\n    patience_counter = 0\n    \n    # History to track metrics\n    history = {\n        'train_loss': [],\n        'val_loss': [],\n        'train_acc': [],\n        'val_acc': [],\n        'val_f1': [],\n        'learning_rates': []\n    }\n    \n    # Prepare gradual unfreezing schedule if enabled\n    if args.use_gradual_unfreezing and args.freeze_features:\n        # Get all convolutional layers\n        conv_layers = []\n        for i, layer in enumerate(model.features):\n            if isinstance(layer, nn.Conv3d):\n                conv_layers.append(i)\n        \n        total_blocks = len(conv_layers)\n        \n        # Determine unfreezing schedule\n        #...\n```","range":{"startLineNumber":279,"startColumn":0,"endLineNumber":307,"endColumn":0},"embedding":"AIC0vAAACzwAAEU8ADDBvQBwrb0A4Fe9AMDcvABAAD0AYBe9AOBhPQDAgTwAAAC6AEDnvACALzwAQLw8AIBjPACAMr0A0Lo9AEDivADgBD0A4C49AACaPACA8DwAAKi6AAAePQDAmbwAwGQ9AIC6PACgGz0AQME8AEBvvQAgJr0AAMG9ABCCvQDgD70AAC28AGAvPQDAOj0AADm9AAAiOwBgGz0A+AC+AIAIvQAwwj0AIHc9AMCPvADQgT0AgAc8AMAgvQCAijwAgDG9AKBOPQBgf70AAHY8AACiOwAArzwAwIe8AAAOvQDAAL0AAHE8AIDkPABAlr0AAAg6AAD9PADAEz0AgDa8ADC6vQCAEbwAoAm9AAD5vACQhb0AQLG8AOBgPQDA3zwAQN08AIA2vADgCT0AILQ9AAAtvQAAqbsAwLO8AAAIuwCA2DwAIDA9AHCDvQAwwr0A8Ae+AAClOwAAmbwAAIy9AACbPAAAjLoAQJi9AHDYPQCAmj0AQM88AAAsOwBwhb0AAHo9AIC4vADgLz0AAF48AABUPAAAeTwAAMg8AEDhPAAAczwAACU9AIAHPACAkz0AwN+8AMCEvABAjLwAgBy9AADyuwDgcL0AgAK8AABEOwDAT70AwD29AEAIvQBAyrwAALM8AKBdvQDgJj0AAIy6AKCaPQBwob0AAP67AEC8vAAACzwA4Bw9AKBvPQAAN70AoFS9AKBFvQBAi7wAoEY9AICFvQAwnj0AAAG9AAC2OwCAgjwA4DA9ACCBvQAA2zwAAEC9ABCDPQCgi70AYBg9AABrvADgtT0AwH89AMCRPACAyrwAQIS9AACEvACANz0A8IM9AECFvQDAU70AoA49AMDFPACAWTwAgDQ8AOBRPQCAGr0AAFi6AEBgvQBgBr4AsNc9AAAGvQAAuLsAAEC9AAAiPQAAGbwA4BS9AAALvAAwjb0AoGK9AOBovQAAgDoAAAo7AECkPABge70AQLE8AIDAPACAA7wAAJK7AKBnPQBAiTwAgKG8ACBYPQAAjDsAQGw9AACAOQDgEj0AgIG8AOAlPQDQmz0AQGu9AOBuPQDAlbwAgEO9AADHPADwo70AQIW8AMAcPQBAn7wAAMo8AAAAPQDAIj0AAKo8AADjuwBACb0AABQ8AMDYvAAAxbsAoDQ9AMCTPQAA1jsAgDs8AIAjPACAdT0AwB09AAC0vADADz0AANi8AAB6uwBAhDwAAFg8AECYvQAA+TsAgNa8AIDcPADAg70AwOm8ACAevQDAUT0AoBM9AABCOwAwnj0AwDa9ACAkvQBgID0AAA49AIA/vQBAy70AQL48AEBuPQDAtjwAAH08AKA4vQBAh7wAAIi6ACB/PQDA7TwAABm8ADC2vQDQkr0AAJS7AACGOwBAKr0AgCk9AABrPABA5DwAoDG9AIC7vAAAjLwAwEq9AMCHPQCA/rwAYBM9AMCcPAAAW7wAAOi6AHCTPQCQjT0AoDw9AKBWvQDATr0AgKu8AECgPQBAzzwAAAA8AAC/PADAu7wAAP48AECPvACAYjwAADi6AECovQCAAz0AwK+8AABwPAAgOD0AMIe9AECevACA2TwA4H69ACAfPQCAlTwAgE+9AKCAPQBQk70AAJs8AIBTvAAAyjsAACA9ACBZvQBAD70AgGw8AMAbPQAAc7wAIFE9ACAOvQAAtrsAYGU9AKCDPQBAmrwAAL29AEBzvQBgP70AIBQ9AIDovADAUj0AAO67AIBXvAAA97sAgBy9AADwOQBAbL0A4JW9AMAVvQAAzrsAoDY9ACCUvQAAyjwAwBo9AACQuwAg770AYIq9AKDpvQBA9bwAAJQ8AAAQPQBQgL0A4Ag9AEBCPQAASjsAYA29AGAcvQDAwzwAMJu9AAAoOgAAs7wAAKE8AAAgPQBQxb0AgA+8AACzPABAdj0AwBE9AIA0vACAnbwAAMC5AAChPAAAgDgAgAa9AOCBPQAA6jwAAJU7AEAqvQAAejsAgM29AACDvQAgOD0AICM9AACRPABgGj0AwDU9AICIvAAwiT0AwEC9AIA1vAAAhTsAAFE8AICgvACAn70AgK08AAAyOwCw2r0AgFk8AACKPQBgLj0AALM7AHDbPQCgeD0AwOk8ALCkPQBgA70AwNc8AKBrvQAA17sAYAy9ACBIPQAAMD0AYH89AADHPACAbrwAgKs9AECwvQCAGj0AgDa9AAA4PAAgFr0AAKe7AADnuwBAEb0AAFw9AIAIPADAHr0AANM7AAA8uwBAMb0AwB09AEAjPQCAf7wAAKw6AACGvQBAFL0AQMG8AAC/vAAAxbsAALA7AAA4vQAAsDsAIG49AIBQPQAA9TsAADM8AIACvQCAFb0A4Fg9AKBVvQBAjDwAsLS9AIC4PAAAkrwAQIM8AACMOgDAAr0AQL28AADCOwCgMT0AoHO9AJDnPQCALLwAQLA9AICvPACAFbwAAAa8AMC6vAAATTwAgBq9AMCFPQDgOT0AQO88AIAxPQAA7jwAAIo8AICUvADAmDwAAKM7AAAdPQCAJr0AAEw7AACAuQAACLoAIDS9AOANPQAATTwAAC+8AADnuwAAbDwAeCY+AEBTvQBAab0AwLY8AIAdPAAAWrsAgME8AAAAuwBAmrwAgE88ACBivQBAQL0AADO8AABTPAAAkLsA4GY9AICrPAAAIj0AAF88AACxOwAAAr0AwP28AACpPAAAPLwAAGI8AGAkvQDgHj0=","chunkHash":"be0d5a2b2f019134b6381441ff50d7bb690106379752a082cc56cca616ec08bc"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n        # Start with all layers frozen, then unfreeze later layers first\n        # Distribute unfreezing over epochs\n        unfreeze_schedule = []\n        # First epoch: no unfreezing (just classifier and attention)\n        unfreeze_schedule.append(0)\n        \n        # Distribute remaining unfreezing across epochs \n        for epoch in range(1, args.epochs):\n            blocks_to_unfreeze = int(np.ceil((epoch / (args.epochs - 1)) * total_blocks)) if args.epochs > 1 else total_blocks\n            unfreeze_schedule.append(blocks_to_unfreeze)\n            \n        print(f\"Gradual unfreezing schedule: {unfreeze_schedule}\")\n        \n        # If also using learning rate ramping\n        if args.lr_ramp_up:\n            original_lr = args.lr\n            lr_schedule = []\n            \n            for epoch in range(args.epochs):\n                # Ramping factor increases with each unfreezing stage\n                if epoch == 0:\n                    lr_schedule.append(original_lr)\n                    #...\n```","range":{"startLineNumber":307,"startColumn":0,"endLineNumber":329,"endColumn":0},"embedding":"AIBgvABA4DwAALc7AMCuvQAwrL0AIE69AICvvACgJj0AYDi9AIBXPQDAjDwAgC88AMAevQAAOrsAAPY8AADLPACAOL0AYJc9AKBAvQDgCj0AIBY9AIB0PADA5zwAAJI7AEDhPADAtrwA4Jk9AOAaPQDgPj0AALI8AAA0vQAgEL0AkKK9AABQvQCgGL0AgE+8AID3PAAAHz0AoB+9AACDuwAgRD0AQBC+AEBLvQAQxT0AkIY9AADAuQBgmD0AgAw8AIAivQCA2TwA4AC9AEBJPQDgeb0AQMM8AAAgugAAijwAAKi8AECYvABA1rwAQNs8AAD2PACgRL0AAPk7AIDsPABgTz0AADo8AKD+vQCAKLwAwMW8AABNvABAa70AIAq9AAB7PQAA4jwAALU8AACguQCAWTwA8KA9ACAevQAAibwAAKW7AADiuwDAyzwAIEE9AMBXvQBgxb0AENq9AIByPACAs7wAkK69AACsPADAybwA8J+9AFC0PQCAij0AQIc8AIAFvABgMr0AAIs9AAACvQCgZz0AAPA7AEC7PACAVTwAQLk8AABkOwAAirsAAGY9AAA4uwCAWT0AQMS8AACTuwAAsjsAABK9AIBMvADgcL0AQPW8AIBFPABQgr0AIES9AGAXvQDACb0AQAk9AED1vACgTD0AAAG8AFCrPQCAf70AAB28AIAIvAAALjwAQE89ANCYPQBA9rwAYGK9AKAWvQAAHLwAgCs9ACBovQDwvT0AgJ68AMCHvAAAMjwAgCs9AMCmvQAgFT0AQA69AFCOPQAQrL0AwJw8AADCvADQmD0AoDQ9AIDpPAAA4LsAUIC9AIACvAAAGj0AgLg9AEChvQAAcL0AgAY9AIDnPAAABzwAgDQ8AGAMPQAAEr0AAPS7AMBWvQBQ4b0AIKY9AID9vAAA5bsAgDa9ACAiPQCAcbwAQD69AIAGvAAgW70A4FO9AOBCvQAA2LoAADC7AAC3PADQib0AAMQ8AABEPAAAb7wAAIi6ACCEPQAAAzwAAFa8AKBDPQAAEDoAIG09AADyOwBgPj0AQNi8AEAEPQAgiT0AYCO9AFCIPQDA07wAEIa9AMDSPABglL0AQJq8AOASPQAAZLwAAPM8AMAKPQAAWzwAANc7AIAFvQAgEr0AAPi7AIBovACAmrwAgGo9ABCLPQAA8jsAAJ67AAAKPADQgD0AADg9AIDSvACAxDwAAP68AAA3PABA0TwAgDk8AMCEvQAAPTwAACa9AMBLPQAgDr0AQO+8AEBGvQAgSj0AwMo8AAB8uwAwwT0A4Aq9AABqvQCAGD0AwKA8AIAbvQBQ0L0AgJo8AICXPQCALzwAAIS7AGApvQAAD7wAANy7ADCLPQAASDwAgEi8AFDMvQCAi70AAGq7AACyOwAALb0AgCI9AAD9OwAA7zwA4FK9AMCLvAAAu7sAABO9AOBSPQDA6LwAAOC5AADXOwAA97sAwIs8AJDKPQBAdT0AgFA9AEBQvQAAU70AAH67AMCrPQAABjwAAME7AMC6PABgDr0A4C89AMDhvACAPDwAgGY8AFCrvQAgUz0AIA69AACYOwBgMT0AgIe9AEDevACAkTwA4IO9AIBdPAAAXjwA4Aq9ANCXPQBQgr0AgFA8AABYvAAAXjsAAHE9AEAJvQBgE70AAH08AIDuPAAAhrwA4HY9AGABvQAAOrwAYCs9AOCZPQBAoLwAYOe9ACBWvQDAE70AoDw9AADavABgZj0AAFy7AGAAvQAAlTwA4Dy9AABPvACAZr0AwJ69AEBFvQAAgTwA4CE9AIBzvQDAoDwAANE8AABbvAAAwL0AIGC9AHDLvQDAqbwAAPA5AOAKPQCwhL0AgNM8AEBMPQCAKjwAABG9AEDEvAAAIzwAQHS9AABuOwAA/rsAQOM8AIATPQAgx70AADi6AKArPQBgcj0AQAw9AADovABAl7wAAO+7AAAUPQAAIjwAoBW9ACBIPQAAvDwAgEY8ANCDvQAAtLsAoLS9AJCmvQDA1zwAwPM8AIBwPACAyDwAgJA8AAAEuwCgqz0A4CC9AIBevACA7TwAgFI8AEAVvQBQw70AgEk8AAAoOwAQtb0AALy7AKB2PQDgKz0AAHu8AOC7PQCwhD0AYBI9ACClPQCA9bwAgLo8AOBrvQAA2bsAoCS9AGAgPQBgJj0AAIU9AADpPABA7rwAwI49AJDXvQBAKD0AwCG9AIChPACADL0AAES8AACZvACgJr0AQHg9AADkuwCACL0AABi7AAAWuwAAF70A4Gc9AKASPQBAkrwAAD47AACJvQBAlbwAgO+8AIDHvABAirwAgBi8AIC6vAAA9DsAwH89AEADPQAADTwAIA89AIAivAAAYr0AQEM9AOBNvQAAYDsA4Ni9AMDoPACAiLwAQIw8AAAqOwAAybwAQP68AACOOwCAcD0AwIG9AMDyPQAAJLsAcLM9AADZOwAAmzsAAOg6AGAZvQCAfjwAwNy8APCHPQDgTj0AgCw9AABAPQCAdTwAACg7AEDlvACATTwAAPA6AMCTPAAgQL0AAGy7AICZvACAMTwAYAC9AEAoPQAADjwAAKa7AMC+vAAAQTwA8B8+AKByvQAgV70AwK48AAA4OgDA3bwAwOY8AAAHvAAAm7wAgKM8AGBNvQBABr0AgC28AIA3PADAjrwAAJE9AIBNPACgZj0AgGC8AAASOwAAEr0AgM68AMDmPAAAOLsAYD89AMBXvQAAIz0=","chunkHash":"842ecb992ba29949c48c68969f7ac17ae8126e861968ffab83bb258a98f804d2"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                else:\n                    ramp_factor = args.lr_ramp_factor ** (epoch / (args.epochs - 1)) if args.epochs > 1 else args.lr_ramp_factor\n                    lr_schedule.append(original_lr * ramp_factor)\n                    \n            print(f\"Learning rate schedule: {[f'{lr:.6f}' for lr in lr_schedule]}\")\n    else:\n        unfreeze_schedule = None\n        lr_schedule = None\n    \n    print(f\"\\nStarting training for {args.epochs} epochs\")\n    print(f\"Training on {len(train_loader.dataset)} samples, validating on {len(val_loader.dataset)} samples\")\n    print(f\"Batch size: {args.batch_size}, Learning rate: {args.lr}\")\n    print(f\"Using mask-guided attention: {args.use_mask_attention}\")\n    print(f\"Using mask-weighted loss: {args.use_mask_weighted_loss}\")\n    print(f\"Using mask-focused dataloader: {args.use_masked_dataloader}\")\n    #...\n```","range":{"startLineNumber":329,"startColumn":0,"endLineNumber":344,"endColumn":0},"embedding":"AGASvQAAyjwAwOQ8ACDPvQDwm70AYFW9ACADvQAAaz0AwCy9AEBpPQAAlDoAgDM8AICAvAAAHbwAAB08AAB5PABA2LwAwIg9AFCDvQAgVD0AAP08AOAQPQBAvzwAgBU8AABJPAAgBr0AIKM9AOA1PQDA4TwAAIU8ACBtvQCAC70AkLK9AAB5vQBgdb0AgLy8AKBXPQBAFD0AgD29AAAWvAAgET0ASBi+AMC/vAAw5z0AgEI9AMDtvAAgsT0AgAc8AID0vACACTwAgBC9ACBPPQDAL70AIBQ9AMCMPADAHz0AAGq7AIAnvACgAb0AgEE8AKAkPQAgcr0AAC47AMDNPABgMT0AQK28AOD5vQAAgLwAQA+9AEAbvQDATL0AIBe9AICIPQDAizwAwLM8AIDzvAAANzwAQMo9ANCRvQDAjbwAAKe7AIBNvADAtTwAQAc9ACAxvQDwxL0AwAy+AAD3vAAAm7wAIG69AAAwOwCAuLwA8Ia9ABC6PQDwkz0AgNQ8AEAbvQCAk70A8II9AADIOgAggT0AgCg8AECDPAAADDsAgOg8AIBAPABAmjwAABg9AAAYPACAcz0AgAq9AAAqvACAGDwAYBO9AICCvABgTb0AAGy7AIAOPADAfb0AACK9AIA0vQCA5rwA4CM9AOCTvQCAVD0AgEw8ADDSPQAArb0AAJC8AIALvADA0zwA4Bk9AABgPQDA7bwAYF+9AKBnvQCAg7wAgFQ9AFCkvQCQsT0AgOa8AICJPAAAgrsAAA49AICrvQAApjwAoDK9AKBmPQBAl70AwAY9AAAXvQBQvT0AABo9AOAUPQDgF70AgJW9AAC+uwBAID0AAE09AAB9vQDgFb0AAD49AMAMPQCARrwAYAs9AMDHPABAxbwAQJy8AKAgvQCQ1L0AILc9AKAHvQAAwjsAYF+9AIASPQAAsLwAYGK9AABAugAAR70AQBu9AGA3vQAAfjsAAIe7AMD4PACgP70AAMU7AADVPACASLwAgHS8AEBGPQAA0TwAALa7AICCPQAA5LoAgNY8AABAuwAgHD0AAFK8AMCHPQCgYj0AQP+8AACUPQAASLoAQD69AIDnPAAQjL0AALC8AACPPADA07wAQKo8AKApPQAACj0AoCg9AIBVvABgEr0AAGg8AECqvAAAXLwAoG09AMBaPQAAQzwAAGg7AIB9PACAPj0AgCA9AICbvABgFT0AgGu8AIAUPAAAmTwAAB48AIBjvQCAhTwAQKO8AMBdPQDAk70AAMC8AOBwvQBAgD0AwPI8AADLuwCgjj0AAMi8ABCLvQBAFz0AAO48ACAYvQCArr0AAEU8AOCsPQCAAz0AAFY7AGAsvQDAhrwAgAy8AICpPQAAu7sAgGS8AIC0vQCQhr0AADI7AABGvABA2LwAALI8AIBpPACAwTwAgFy9AACQvAAAMDoAwEC9AKAwPQDA4rwAgE88AIBcPAAAUDsAAFa7AGCgPQDAaz0AAFw9AOBfvQBASL0AgGi8AMCzPQCAzTwAAMc7AABIPAAAn7sAgCI8AMAWvQCAMLwAAKY7AJDLvQAgAz0AYBK9AACLPAAAWz0AoDO9AAAmvQAADz0A4Hu9AGAaPQAgDD0AAA29AOAxPQAQjb0AgDQ8AADHuwAAibsAIH09AOBcvQBA1bwAADo7AIDtPABAybwAQCo9AEAhvQAAersAYH09AICUPQCAAb0AYLu9ACBEvQCgNb0AAPM8AMC5vABgEz0AgIu8AKAHvQCAR7wAwMq8AADTuwCwnL0AEJW9AIDWvABAlTwAgJQ9AIBivQAA2zwA4AE9AAAwOgCw8r0AMI+9AEChvQDgJ70AQPG8AABpPAAAPb0AAEo7AABePQAAILkAoAy9AIDvvACA+TwAMKC9AICfvAAAYrsAAP67AABKOwBga70AgJO8AABNPAAgaj0AAIk8AGA4vQDAu7wAAJk7AICoPAAAAbwAAFW8AOAhPQBgGD0AAKS6AMCPvQBAr7wAwMu9AMCUvQAAKj0AwLU8AAC0uwDAnTwAQDI9AAAKPACATD0AYIG9AAC0uwBAEz0AwM88AABQuwDQjL0AANy6AADfOwCAzr0AwJi8AMBvPQDgCz0AQI08APDiPQAQnz0AQPc8AJDGPQBAiLwAAME7AGBIvQAAoTwAwM+8AABePQBA/DwA4GU9AIC/PACAurwAUI09AIC+vQDgXz0AwEe9AACsPAAAK70AAAe8AICxvABADL0AwIA9AABmvACgNb0AABk8AABuPABgC70AAE09AMDMPADAxbwAAEs8AABSvQAAAb0AwJm8AECWvACAfbwAAPC5AABHvQAAJDsA4Gg9AMBDPQBAozwAANg8AMCOvACgPb0A4Dw9AMBfvQDAAz0AQLC9AOBVPQCAE7wAAOE8AMCEPABgC70AQOG8AABGuwCA4zwAYIy9AACxPQAACLoAIIU9AACkPAAANDsAAF68AED0vACASjwAQAa9AMBkPQDATT0AgJQ8AIB7PQBAoTwAgJk8AOAIvQCAkzwAQIc8AKAKPQBARL0AABo8AACsvAAA3LoAQBS9AKAJPQBAwjwAADq7AIAuvAAAEDwASB0+AGBuvQBgV70AALU8AIAGPACAB70AAJk8AACmuwDAmLwAgCQ8AAAGvQCAqbwAwNq8AACQuQDAl7wAIEs9AAAoOwDAYj0AACM8AACnOwBAzbwAALa8AAAFPQAA2bsAoCo9AIBsvQAAljw=","chunkHash":"08dbda5eb75f30e13788a5e42104c7d86aa266a0508c87db0de94eaa157ff5a1"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n    # Flag to track if we need to adjust labels from 1-based to 0-based indexing\n    adjust_labels = False\n    \n    # Check for class offset in first batch\n    try:\n        test_batch = next(iter(train_loader))\n        if test_batch is None:\n            print(\"Warning: First batch is None, skipping test batch\")\n        else:\n            labels = torch.tensor(test_batch['label'])\n            min_class = labels.min().item()\n            if min_class == 1:\n                adjust_labels = True\n                print(\"Will adjust labels by subtracting 1 to convert from 1-based to 0-based indexing\")\n    except Exception as e:\n        print(f\"Error while checking label offset: {e}\")\n    \n    # Debug helper function to print tensor shapes\n    def print_tensor_info(tensor, name):\n        #...\n    # Function to save a slice of a volume as an image\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        #...\n```","range":{"startLineNumber":345,"startColumn":0,"endLineNumber":375,"endColumn":0},"embedding":"AAAKvQAA7DwAALC5AHDTvQAgwL0AwPS8AMCzvACAMT0AIIa9AOBCPQDAjjwAgJA8AIADvAAAtjsAwJ08AECZPADgCL0AgK89AIBZvQCAkzwAAIg8AGAGPQDAWT0AAPu7AIAZPAAAWjsA4GA9AKADPQDgND0AQNU8ACBOvQCAQr0A0LS9AGCRvQAATL0AAK27AMBAPQBAUT0AQJi8AIAxvADA5zwAwM69AAAwvQBwpz0A4Gk9AAAmuwBQuD0AAOS7AEBNvQAAaTwAANS8AEApPQDALL0AQNw8AIByPABAjjwAoCq9AIATPAAAmTsAAAw9ACAEPQDQk70AgAw8AIA+PABgbT0AAGq7ALADvgAAV7wAQIQ8AEAdvQAAX70AQMC8AECVPABADD0AQKw8AECTvAAA4zsAwLE9AICfvQDArbwAABO8AIBUvACgAD0AwEw9AIDvvABwl70AYO69AMAqvQDAar0AsMK9AACgOgCA97wAUI69ACD1PQBgZj0AwK88AECYvABAl70AwHs9AEAUvQBALj0AYD09AADNPAAAMDoAAM88AEDNPABABz0A4Io9AIC0PADgtT0AgMy8AIBfvAAAIDoAIBC9AACcOgDAgL0AwM28AICSPAAgdb0AEIO9AIA/vQAAB7wAgIg8AEB8vQAAAD0AABY8ABCkPQDAw70AgEG8AICBvACA1DwAwAo9ADCOPQAgDL0AoCy9ADCGvQCADDwA4Bk9AJCHvQAQsj0AABe9AIBavAAAXjsAgJc8ACCevQAAPjwAoGm9ANCOPQDgnL0AYAM9AMDrvAAgyj0AoAo9AADOOwAA47sAQC69AAA9PABAFT0AoE49ABCAvQDABb0A4Dw9AIAwPQCAojwAAKa7ACA4PQCASbwAAOy8AIBIvQCQ/L0AALM9AACgOQDA8zwAoLG9AID/PAAA4DkAQDW9AECovAAAm70AYC29AIBCvQCAtzwAABi6AAANPQBAd70AgMg8AAD0OwAAtLsAgPG8ACBMPQAAhzwAAES8AAAXPQCAbjwAYAY9AABXvACgZT0AgF28AMBPPQAgHD0AgAa9AEDAPQDA67wAYFu9AIBhPAAwhb0AAKK8AGAhPQAA0LkAAEw8AEDlPADgAz0AgE08AICIvABAD70AQAc9AEC8vAAAPjwAwG49AMBxPQAAXrsAwFA9AAABPQBAKj0AQBw9AAAzvADgDT0AgCS9AIAkPADAkjwAAMS6AHCLvQDAgzwAwO28AIBBPQBge70AwNy8AMD+vACAbT0AADo8AECGvACwsj0AAIS8AABHvQBATj0AQNE8AEDPvACwmL0AoBY9AGByPQBwiD0AABQ7AACnvAAgJL0AgA+8AAB2PQAAjbsAAAy8AECQvQDgUr0AAAC6AIArvADAfb0AwMY8AAAtPADAqDwAwN68AECzvACgDr0AwFa9AOBTPQBA7bwAIE89AADzOwDAwrwAAEC6AKAjPQBwhD0AQAY9AADMvAAgUb0AgCE8AGA7PQAAFLsAQP08AACGOwAAcrsAgFc8AED7vAAA7LwAQPs8AOCsvQCA5DwAgIC8AIAYPADgQj0AwD29AECTvQAAwTwAgIy9AIAiPAAAbDsAwA69ACBnPQAgC70AAKS7AMCyvACAcjwAABQ9AIAvvQAA47sAAAe9AGALPQAAu7wAUIk9AOBVvQAATjsAAE49AGBsPQAA+bsAgOS9AOBDvQBgMb0AAA89AACAuAAAkT0AgPS8AIDDvAAAWDsAoDW9AIA7vABgV70AcKC9AADOvAAAXjwAgF09AAD+vADA7TwAALE7AAB0vADg070AEI69AMCUvQBgAb0AwLW8AACNOwAgKr0AIC49AACMPAAAwbwAAFa9AOBevQDAyjwAQLW9AIAYPAAA5zwAAMA7AADDuwCAjb0AgFu8AICYvAAwgz0AIDg9AMDMvAAAVLwAAFm8AOASPQAAqTwAgBy8AMAZPQBgST0AQP88AMBXvQDAnbwA8P+9AJCOvQDgVT0AAP87AABgOwAAoTwAADg9AAAIvQAAWz0AgFw8AACwvAAASTwAwKk8AABIugDglr0AwJk8AIBhvABgtL0AwLe8AJCLPQAADj0AwIA8AKCvPQDAjz0AQEs9ADDRPQCAkrwAgA68ACCbvQCAKDwA4Ce9ANCMPQAAYz0AQFs9AIDkPAAAKjsAAMM9AFDDvQBAKj0AADy9AADsOgCgAr0AAH47AECBvADAKr0AgEQ9AAA2vAAALr0AACw8AAAiuwAAHb0AACw9AAAAuAAA2LoAABW8AACcvQDgDr0AQLa8AIAavACgF70AQIk8AFClvQCAJ7wAIBM9AAB7PQAA2zwAABo8AIASvQCAJL0AAFU8AMAcvQBAvzwAUJy9AICnPAAAwjsAANg6AADzuwAAmrsAQEO9AAAYugCA2TwA4Iq9AFChPQCAjLwAMJ09AICqvAAATjsAgLC8AAAAvQAAjjsAgEO9AKA/PQAgBz0AQI08AGBuPQAA0DsAgBA9ACACvQDgEz0AABS7AMAHPQBAmLwAACy8AAAGvAAAzDsAAEa9AED5PAAA2DoAgJq8AACNuwBA/jwA6CM+AOAxvQAAZ70AAI48AMDUvABgVL0AwIU8AIBUPABApbwAwBA9AOArvQDAEr0AAEC8AADHPACAALwAkIo9ACBaPQBgjD0AAIw6AABUuwDAzbwAAOq7AABDPQCAVLwAIGY9ACA+vQAADTw=","chunkHash":"90e893f67b870b63c90d4db05cff5555dfc1cbdb124f9c77b02ca196c2233f68"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n    for epoch in range(args.epochs):\n        epoch_start_time = time.time()\n        print(f\"\\n{'='*20} Epoch {epoch+1}/{args.epochs} {'='*20}\")\n        \n        # Apply gradual unfreezing if enabled\n        if args.use_gradual_unfreezing and args.freeze_features and unfreeze_schedule:\n            blocks_to_unfreeze = unfreeze_schedule[epoch]\n            \n            # First freeze all feature extractor layers\n            for param in model.features.parameters():\n                param.requires_grad = False\n            \n            if blocks_to_unfreeze > 0:\n                # Get all convolutional layers\n                conv_layers = []\n                for i, layer in enumerate(model.features):\n                    if isinstance(layer, nn.Conv3d):\n                        conv_layers.append(i)\n                \n                # Start unfreezing from the last layers (specific to this epoch)\n                total_blocks = len(conv_layers)\n                #...\n```","range":{"startLineNumber":375,"startColumn":0,"endLineNumber":452,"endColumn":0},"embedding":"AMCkPAAAzLoAAFq8AKC3vQDgwL0AYBm9AEDQvADgWj0AgIe9AIBYPAAAVbwA4Aq9AACpuwAAELwAgAo8AIBKPABgG70A8Ok9AEDnvADgEz0AAD08AOAPPQCgGz0AAPg6AIAZPQAAuLwA4EI9AMAyPQAA/DwAgBI9AMB1vQDAPr0AwHm9APCGvQAAsDwAAF67AMAkPQBgXz0AQIK9AIB5PADgXz0AMAK+AOAevQBQqD0A8MQ9AADHOwDArz0AgDe9AGAYvQBAGT0AwAc9AMCSPABAo70AgC+8AAB0PAAAAzwAAMi8AOAavQAAjLoAQNs8AIBMPABwu70AACE8AOAJPQBggD0AwJI8AFDCvQBAmTwAAIS8AIA4vAAAi70AIAy9AOAcPQDA6DwAAKw8AADduwAAtjwA4JM9AOAtvQDgDb0AAIY8AABYvADAnjwAAIw8ACABvQBQk70A4KW9AECpPADADb0AIIy9AGAGPQBAx7wA4Ja9AECpPQAAMD0AAPk8AMAOvQDQhb0AIGc9AAAgOwDADD0AANS6AIAGPQAADb0AwCA9AACCOwCgJT0AwKc8AIDbPADAKT0AAGq8ALCAvQAA9zsAoEe9AIB+vACQlb0AAEW9AAAwugBARr0AAIi7ACBCvQCARLwAAHg7AMBtvQCAZTwAAHC8AOBcPQAwwL0AQPE8AMCQvAAAMLoAAP07AACDPQAgYb0AgPq8AMAMvQAAaDwAIJY9ACBwvQAwkz0AQOy8AACxuwAgEj0AAJ+7AHC7vQBAxzwAgH29ABCAPQDAe70A4B09AEDfvACg4j0AYFY9AIApvAAA3rsAoDS9AECLvAAAoDkAoAw9AOCdvQAAqr0AoBU9AEDiPAAAALgAANE7AGBMPQBATL0AADI7AIA5vQD4Ab4AwFc9AMBVvQCgGT0AYEW9AEChvAAAlTsAoKO9AECmvADgf70A4GG9AOBrvQAAXj0AQLu8AIDjPADwm70AgIw8AACsPAAAXjwAAKA6AOCCPQAATLsAAFi8AGBZPQBAxjwAgAA9AABuPACgPz0AAAAAAGCNPQDAAT0AwCa9ADDTPQAAZr0AYFG9AEDlPAAAXr0AgDg8AOAdPQDgGr0AQIk8AMC3PACATz0AgFE8AOAkvQCACL0AUKc9AKCSvQAAJLsAYFQ9AIDxPAAAVbwAAEk8AKAtPQCAYD0AgAg8AKB6vQCgaj0AgPq8AGA1vQDAuTwAQOo8AAAYvQAA97wAwMa8AIC4PADgFr0AwMe8AACzvABgRD0AoE89AADQugDgej0AALu8AGBzvQDAVz0AoCc9AAA5vQAgwr0AgMg8ANC7PQAQmz0AAJC8AGAivQDgBL0AAFi7AED3PACARTwAACM8AJC8vQDAyLwAAJK7AAC2vAAwgr0AQIk8AKAiPQCAFz0AAI28AICQPAAAvLsAIDG9ACA7PQAAJr0AQAY9AADYugAABr0AAHs8AHCNPQDwhD0AAHE8AADwuQCAdr0AAH67AAAQPQAAl7sAIIE9AGAtPQBgJL0AQCE9AADqvAAgOb0A4Ak9AICsvQDAlTwA4A69AIB/PAAgez0AIIa9AKCIvQAAMDsAoAO9AIA3PAAAirsAgC+8AEBsPQDALL0AAAo8AEAovQCAOzwAIFU9AEBzvQBAmrwAAKQ7ACA7PQBAtrwAACU9AABUvQAA1DwAAHu8AKB2PQAgC70A4Fq9AGB0vQCgDL0AoBg9AACnuwAQoz0AADW8AMCGPAAASbwAAJ69AIBBvABgW70AUKi9AGCkvQBgJb0AANy6APCAvQCACbwAAHW8AIDfvACQhb0AAGG9AJDcvQAAFL0AANg7AABsuwCAWrwAgHU9AAADPACgEL0AoEG9AAB8vAAANjwAkKq9AMCLPACAUTwAAFQ8AMCoPAAgTb0AAPQ6AAA0uwAADz0AAFg9AIA0vABAQr0AAN87AADtPADgAT0AIBG9AOBtPQAgXj0AAJW7AACDvQDAhLwAYNC9ALCBvQBgDz0AABk9AADgOQAApbsAwO88AIBlvABA0DwAgE88AACguwCAVDwAALm7AED1PACAc70AQNE8AADcvABAo70AgCM8AABTPQBA7jwA4A89ADDbPQDgXz0AABq8AACCPQCgNL0AAOg8AIB1vQCA6rwAgDi8AMA4PQAAfj0AcIA9AACHPAAgAr0AAEQ9AIDXvQAACz0AgDu9AIDuPABAkjwAQOK8AAACuwAgfL0AALM7AMArvQAAI7wAgIY8AEDuvADA8LwAAAy7AAA5PQAAcTwAAMQ7AKCmvQDAEr0AQAu9AIBbvABgAr0AQMo8AFC3vQAAwDoAgGk9AACUuwAAkjwAAIo7AKBAvQDAs7wAQNo8AGAovQDAobwAQAG9ACAKPQAASr0AAAAAAABAPAAAQLsAQFO9ADCCPQCAoDwA8KK9ALCrPQAA6LsAwDk9AACQOgCAdTwAADi8AIBRvQBA2zwAAKW8AMByPQCACj0AABq7AED6PACgGT0AYAc9AKANvQDAqzwAwFQ9AIB5PACgkr0AwKe8AIA8vABA2rwAAJq8AOAWPQCALLwAID+9AAAHPABA7TwAsPA9AADivACgfL0AMJ09AIDvvAAAt7wAwM68AAAavACAhbwAQPE8AOBWvQAAfr0AgFS8AIA9PQAAETwA8PE9AMDDPAAgKD0AALy8AADfOwAA4rwAoC29AED2PACAGr0AsIk9AAB2vACAGT0=","chunkHash":"098a76858cd00c86c11e8b5928d3530f87338fc60abf9a09f0bed120d5ce8945"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                start_idx = max(0, total_blocks - blocks_to_unfreeze)\n                \n                print(f\"Epoch {epoch+1}: Unfreezing {blocks_to_unfreeze} of {total_blocks} convolutional blocks\")\n                \n                # Unfreeze the specified blocks\n                for i in range(start_idx, len(conv_layers)):\n                    conv_idx = conv_layers[i]\n                    # Unfreeze conv layer\n                    for param in model.features[conv_idx].parameters():\n                        param.requires_grad = True\n                    \n                    # Also unfreeze batch norm\n                    if conv_idx + 1 < len(model.features) and isinstance(model.features[conv_idx + 1], nn.BatchNorm3d):\n                        for param in model.features[conv_idx + 1].parameters():\n                            param.requires_grad = True\n            else:\n                print(f\"Epoch {epoch+1}: All feature extractor layers frozen\")\n            \n            # Update optimizer with new trainable parameters\n            if args.optimizer == 'sgd':\n                optimizer = optim.SGD(\n                    #...\n```","range":{"startLineNumber":452,"startColumn":0,"endLineNumber":473,"endColumn":0},"embedding":"AABSvAAAYTwAAIk7AECqvQBgvb0AwIm9AACDvACgCD0AgAK9AAC9PADAmjwAAAQ7AGAdvQAAkDoAYCY9AMAOPQDQkb0AkLE9AEABvQBA1jwAgMo8AADNPADAsTwAgBg8AACTPACA0LwAoF89AEDfPADAfD0AAGq7APCHvQCAG70AMJW9AFCUvQDAx7wAQJ+8AOAnPQDgID0AYBm9AICjPAAgZT0AIB6+AGCBvQCwvT0AkJ49AICcvABgcT0AwJy8AKBKvQAATTwAALi7AEBYPQBAIb0AAIA7AADhOwCAFDwAgEe8AABJvABAo7wAADc8AMD7PACAfL0AAHw8AEAgPQDAQz0AAEo7ABDKvQCAPTwAACy8AEDSvACgg70AAPe8AAB4PQAAsTwAQJ88AAAqPAAA0DsAIJI9AGB0vQAA5bsAAPm7AAC4OgAAdrsAAMI8AKA3vQDQmL0AkPu9AAA0PABAurwAwFS9AMDpPAAApLwAADe9AHCgPQDwlz0AgL48AABeuwBA8LwA4KA9AADdvADwhz0AAIk7AECPPAAAzbsAgOE8AABEPAAAtDoAIDQ9AABAPACA7jwAwKO8AICFvAAARjsA4B+9AAAWuwBgir0AQNS8AACQugBwpL0AgDq9AADHvAAAT7wAACg8AOBpvQBAwzwAACu8AMCiPQAwlr0AwKu8AIB6PACAHzwAcIU9AMB8PQBAIb0AoGm9AEDqvAAAfLwA4CI9AIBkvQAQhD0AgLi8AADEOgAA7TsAQPY8APC/vQBAuTwAIGi9AFCIPQAQuL0AALM8AECkvADgkD0AwJI9AIARPAAAs7sAYFq9AIAnvADART0AAI49AACdvQBwhr0AQDw9AABhPAAA6TwAAP67AEAsPQDAR70AAPK8AKA3vQAQA74A8N89AAANvQAAbLsAoF29AGAcPQAAcLsAAFW9AICKvABAcb0AQLW8ACAbvQAA4LoAABo7AOADPQDggL0AQLc8AAAhPADAlrwAAKs7AMAdPQAAv7sAAEC8AGA/PQAAkLkAAK89AABpvADwgD0AAGG8AEAyPQCQnj0AAB29AKBpPQDgC70AIIa9AECiPABwxL0AQJ28AOADPQCAZrwAgME8AMD9PADAzTwAAAq8AACCuwBAOL0AADo7AECUvACAZ7wAgN08ACB5PQAAlTsAgII8AABjPADApD0AICQ9AADzvAAA3DwAoBi9AAAUOwAAdTwAALE7AFCUvQAAXjwAgA69AAAxPQAgG70AAOO7AEAZvQBgTD0AoEY9AACxuwDQnT0AAL+8AHCJvQDATD0AIBM9AAClvADAyr0AwNQ8ANCbPQAAgTwAgDo8AIBHvQBAu7wAAEU8AKA+PQBAhTwAAOC8AGC9vQCwib0AACi8AOAfPQDAkb0AQM88AADOOwDAzjwAoF29AAAyPACAuLwA4Fa9AMBkPQAAfLwAwIk8AADlOwAARbwAAHg6AKCFPQBgbD0AkIE9AAD3vADgQ70AgA68AIBvPQAA4DwAAOg7AECWPACgAr0AQDE9AIDxvAAgBj0AACI9ACCgvQDgFj0AABK7AAAAuADAQT0AIIK9AACUuwAAjjwAUIm9AED7PACA2jwAoCu9AGCCPQAgib0AwIc8AIDWvABAszwA4Go9AMBCvQDgbr0AABE8AACzPABgDb0A0Ig9AIARvQCAALwAQGA9ANCZPQAAybsAoMq9AHCEvQAgR70AoIE9AICTvAAAfT0AAMo7AIBFvAAAeLoAIGu9AMCDvAAgUr0AwHC9ACBbvQAAtLsAgOg8AACevQDABj0AgCg8AAAKvABQ1r0AICm9AECcvQCAGL0AAG88AEDwPAAgar0AAIk9AKBuPQAA9rsAgAm9AICTvACA4zwAQHO9AABBPABA1bwAgMI8AAAuPQDQq70AABs8AIAuPQDQnj0AAEc9AMCXvAAA7zsAALm8AACZPAAAtLoAwBe9AABDPQAA4zwAgNs8ACB0vQBA27wAwKe9AECCvQBATD0AIAs9AMCQPABA4DwAgNw8AIBdvABwsT0AwOm8AIDsvADgBT0AQIM8AIAkvQBgTb0AAKs7AAChuwDAur0AAKA6AKB5PQDAVj0AgD48ABDKPQDARj0AgCs8AICRPQBgDr0AANA7AOBivQDApLwAAN+8ACBePQAAFj0AQIE9AMBJPQAAXL0A8Jc9APCtvQCA9zwA4CG9AEC2PAAgN70AwJi8AACNvAAgEb0AoJY9AAAZPAAAEbwAgCm8AABougAAVL0AYEE9AEAPPQAAtbsAgG08AMBmvQAAvLwAwMy8AEC3vAAAp7wAAMI7AGATvQAAwTsAoGw9AABjPQAABzwAAHI7AADcuwAAW70AwPg8AGBhvQCAgDwAkK+9AECxPAAAWrwAgIw8AABQugCA67wAgI28AIAyvACApjwAIJC9AEAAPgAAADoAMKU9AADQOQAA9TsAAIa7AID6vAAATTwAgH+8AEB2PQAAlTwAIH89AOBLPQAAAj0AgFw8AACJvAAAGzwAQO08AEDvPABgfr0AACK7AECCPAAALjwAwIO8AIC7PAAAPjwAgKK8AGAOvQAAlDwAMCc+AACAvQBAYb0AgLc8AABUPACAgrwAYBg9AECJvAAAlbwAgBc9AGBwvQBAJ70AABa8AADwuQAAk7sAIJw9AMCtPABAyjwAQK28AACwugDAXb0AQNa8AICbPABAp7wAgEY8AEAEvQBADz0=","chunkHash":"f127631688462df4887f8d24ba8d5ea991f1ca8be91775c6896851497f23da3c"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                    [p for p in model.parameters() if p.requires_grad], \n                    lr=args.lr,\n                    weight_decay=args.weight_decay\n                )\n            else:  # adam\n                optimizer = optim.Adam(\n                    [p for p in model.parameters() if p.requires_grad], \n                    lr=args.lr,\n                    weight_decay=args.weight_decay\n                )\n                \n            # Apply learning rate ramp-up if enabled\n            if args.lr_ramp_up and lr_schedule:\n                for param_group in optimizer.param_groups:\n                    param_group['lr'] = lr_schedule[epoch]\n                print(f\"Learning rate updated to: {lr_schedule[epoch]:.6f}\")\n            \n            # Count trainable parameters\n            trainable_params = sum(p.numel() for p in model.parameters() if p.requires_grad)\n            total_params = sum(p.numel() for p in model.parameters())\n            print(f\"Trainable parameters: {trainable_params:,} / {total_params:,} ({trainable_params/total_params:.2%})\")\n        #...\n```","range":{"startLineNumber":473,"startColumn":0,"endLineNumber":494,"endColumn":0},"embedding":"AMD5vAAAED0AAK48AODqvQDwn70A4Ba9AIDTvABAbj0AQC29APCSPQAAnbsAAOU7AMCYvAAAS7wAAHY8AICoPAAA9LwAMKM9AAD+vACA6zwAwCU9AIBSPABAvDwAAGS7AADNPADApbwAYI89AACoOwDgMT0AgF08AIA9vQCADr0A0LS9AMCmvQAgcr0AAEe8AABrPQCgCD0AgEG9AADtOwCA3DwAwBG+AADevABw3T0A4Bw9AMCcvAAAjj0AAOi6AOB7vQAAOLwAAEe9AABAPQDAIb0AAFI7AACwugCAJz0AAH47AABOvABAm7wAANg8AGAjPQAAe70AAIu8AMD5PADAzTwAAHG8AMDhvQAA5jsAwAe9AOA7vQAARr0A4Dq9AOARPQAA0jsAgIE8AAC6uwAADrsAcIY9ACCYvQDAoTwAwLa8AAACvAAAKDwAAJI8ACBPvQBQ0b0AAAy+AMDYvACA6rwAwEy9AAAougBA3LwAoEy9AHDpPQDwjD0AYAA9AMDWvAAgMr0AYGc9AIAsPADgnD0AoBk9AIBnPAAA7DoAAG08AMCRPAAAuTwA4GU9AAAUPABQlz0A4BG9AAA0uwAAODoAAC69AMChvACAeb0AgEK8AMCxPADAgL0AwF+9AAAivQCASrwAQEs9ADCzvQBggj0AAEg6AMCRPQCQtr0AAJS8AAC+OwDAvTwAYGQ9AOBVPQBA67wAoGu9AGBVvQAAz7sAwC49AJCgvQAQlz0AgCy8AABsPACAoLwAANo8ALCsvQDAxzwAQDK9AECSPQBwlb0AgOM8AIC2vADQyT0AwLQ8AICMPABAhLwA4FW9AIBiPADADj0AQFc9AIBnvQDgCL0AgBE9ACAGPQAAmLoAgBE9AMDlPABgI70AACA7ADCBvQAwvb0AAJc9AOAlvQAA6DsAgFa9AAAdPQCA5LwAoDe9AABDvACgfL0AYEG9AIBavQDApTwAAJ87AEAZPQDA/LwAQJ08AGBOPQCAS7wAQLK8ADCCPQBgHz0AACu8AHCDPQBAubwAoA09AACIugBALD0A4Aq9AOA/PQAQhj0AQEi9AACLPQAASLoAYJK9AACMugDgQr0AgAW8AAByOwBA0rwAAO87AADlPACAUj0AwLA8AEDnvADA67wAAMA7AAAAuAAA37sAABI9AEB8PQDAnrwAAMW7AIAMPABgfj0AwC49AAAyuwDAHD0AAIo7AACwPAAAYjwAgBk8AJCRvQAAyDsAwAK9ALCUPQAgar0AAOQ6ACASvQBA0zwAwMI8AAADvACAeD0AwPW8AOB5vQCgGj0AoDI9AEC5vAAgqb0AgBg8AJCSPQBgFz0AAAA4AAA6vQBA3rwAAHy8AFCiPQCAILwAQIi8AADAvQBghL0AAKK7AMCMvABgGL0AgA48AADoOgDgBz0AwCq9AIByvAAAHLsAoDm9AHCKPQDA/7wAYAQ9AABzPACAVbwAwIq8ANC1PQCAaD0AYFU9AMBCvQCgQL0AAKi6AIDRPQDAkDwAwPc8AIB6PACAlDwAYAQ9AMDpvAAALTwAAJE8AKCvvQDAFj0AwL+8AACjPABgXD0AAEa9AMB1vQDArTwAMIq9AID9PADANj0AACC9AOBXPQDQrL0AwMM8AABdPAAAoDkAgEs9AICbvQAgIL0AQCY9AIDUPACAOL0AgDM8AGAYvQAA1bsAQHE9AKCNPQDAq7wAQJy9AOAlvQAgBr0AAMU8AADkvACASD0AgBi9AAA1vAAAZrsAgM68AACAOwCgaL0AgIS9AACevAAAhjwAYIM9AHCEvQAgEj0AAHk8AICVvACg1r0AIIG9ACClvQAAC70AgDS8AICZPAAAMr0AoDg9ADCBPQAAuzwAADm8AADHvACA9zwAAKW9AABePACAGLwAgAg8AACTOwAgXb0AAAi6AAAIugAwkD0AgMY8AGBYvQDABb0AAAU8AMAIPQAAkjsAAMu8ACBfPQCAZTwAgEg8ADC3vQCAT7wAcNC9AJC1vQAADz0AANE8AACgOgCANTwAAFU9AADwuwCgqz0AAJi8AABguwBA6jwAwAk9AIBivABgRL0AAEs8AIBIPABQ4r0AQOK8ADCOPQBgGj0AAI88AJDpPQBAiz0AICw9AKDIPQCgL70AAJW7AACCvQCAJDwAwKu8AMCEPQCA+jwAIDo9ACAOPQAAebwAwJk9AKCSvQDgcT0A0JG9AEAMPQDgLr0AAFA8AACguwBAtLwAgPY8AIBGvAAAlrwAAK27AACbPABAWb0AQO48AABfPAAAH7wAAL+7AABovQAAyrwAAJ67AAB4ugDAqbwAALy6AABpvQCAL7wAgEk9ACBIPQBgBD0AQBU9AAAJvQCA2rwAwHc9AKAvvQDA7TwAgL29AKBDPQAA+LoAAFs8AAAMOwBgEr0AQO28AABcOwBAwjwAsIS9AOCRPQAAfLsAsLU9AABBPABA6jwAAF47AOAvvQAAKjwAQM68AIBLPQBA0TwAwJw8AEBgPQAAvDwAAB88AGA0vQDAnzwAgJM8AIAsPQAAWb0AAGw7AEDRvAAACDoA4ES9AIAcPAAAxzwAABA7AAAoOgAA/rsAMCs+AID5vAAAML0AgD48AADqPABA47wAgJ08AACIOwDAm7wAoBQ9AEDWvADAE70AwI28AABNPAAAPjsAwHU9AABCOwAAvjwAAEI8AAAeuwAAtbwAAEq8AOANPQBAirwA4AM9AIB/vQAAfTw=","chunkHash":"d100487f3b408f998097680f9503822c3c4fc2ddd82e438ba3bf0225a31cbae0"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n        # Training phase\n        model.train()\n        train_loss = 0.0\n        train_correct = 0\n        train_total = 0\n        \n        print(f\"Training phase started...\")\n        progress_bar = tqdm(train_loader, desc=f'Epoch {epoch+1}/{args.epochs} [Train]')\n        \n        for batch_idx, batch in enumerate(progress_bar):\n            try:\n                # Handle case where batch could be None (returned by custom_collate_fn when all samples are invalid)\n                if batch is None:\n                    print(f\"Warning: Batch {batch_idx} is None, skipping\")\n                    continue\n                    \n                # Get data\n                volumes = batch['volume']\n                masks = batch['mask']\n                labels = batch['label']\n                \n                # # Debug info for first few batches\n                # if batch_idx < 2:\n                #     print(f\"\\nBatch {batch_idx} info:\")\n                #     if isinstance(volumes, list):\n                #...\n```","range":{"startLineNumber":495,"startColumn":0,"endLineNumber":520,"endColumn":0},"embedding":"AGAJvQBgHT0AALC5AMC0vQDglr0AAEC9AADWvABAOT0AIIW9ACBUPQCAfjwAABU8AID2vAAAgTsAQNA8AIDXPABAGL0AkLc9AAAwvQAgED0AIAw9AACmPABAyTwAgAa8AAB4PACAtbwAgD89AEDCPACAlTwAAE48AAB1vQCgE70AMKm9AKBjvQDgHr0AAKi7AMArPQBAIj0A4F69AAAqvAAA6TwAcPi9AAAZvQBAwz0AwFw9AMDNvACA1j0AALC5AIALvQAAlLsAQKW8AIB2PQAAWL0AgHA8AICGPADApTwAgEy9AICKvAAA3LwAABQ8AIDVPACAib0AAEy7AIDkPAAgGj0AAIK7AKDkvQDAn7wAAAK7AIDbvADgVL0AwPK8AIA0PADA+jwAAO07AEAIvQCAZzwAsLY9AMCkvQCASbwAAHW8AACTuwAgAT0AYBE9AKA6vQBAwr0AgO29AMDRvADACL0AUKG9AACiuwBAxrwA0Jm9ALDmPQCgnD0AwKE8AAA9vABAjL0AEJ49AKAivQAgKD0AoBA9AMAGPQCAWrwAADE9AADSOwAAljwA4Hw9AADPOwAQlD0AALa8AMDxvAAA3DsA4CO9AABEvADgD70AAGU8AADgOgBAdr0AAFS9AKBhvQAAv7sAgG48AIB+vQCgGj0AABK8AMDEPQAAr70AAK28AAAXvAAAvDoAgEo9AOBGPQCA6rwAgDe9ACBYvQCAbbwAYFE9AGCCvQAQpT0AAPq8AAAIPAAAITwAgKs8AACzvQAApDwAoF+9AICPPQCwkr0AgMw8AKAQvQBgzj0AwDg9AADBPABA0LwAQGC9AECGvACgRz0AACs9AGCAvQBAWr0AQAg9AOAOPQCAaDwAAIc8AGAlPQAA2rwAAMK8AOAkvQCw470AQMM9AAAyOwAArzsAkIu9AAACPAAAp7wAQDu9AIDmvABgor0AoES9AIAyvQAAijsAgAQ8AEC8PADAgL0AwMk8AMCLPACAADwAgNO8ACA6PQBA4TwAgJG8AIA/PQCAlDwAQDI9AIC4vACALz0AAEC7ABCNPQCAPD0AgBS9AECGPQDAl7wAgFy9AIAzPABgmr0AAFA7AICwPAAArrwAADI7AOABPQAAEj0AAP48AICsvADASL0AwN48AECPvADAhTwAgDM9AMA3PQAAGjwA4FI9AICCPADgfT0AYB49AMDNvABgEz0AYAK9AIAuPAAAhDoAAFQ8AOCQvQAAIjwA4Ci9AEB3PQDga70AoCy9AEDyvADABT0AgAg9AABzvADwlD0AQIG8ACBbvQAgID0AwJo8AEBAvQDgp70AQBM9ANCSPQBgTz0AwIo8AGAtvQCA8LwAAJO7AJCbPQAAEjsAQKa8ADCpvQDAR70AADS7AACIvAAgU70AAPI8AACkOwDAxjwAALG8ACAvvQAAKLsA4IK9AIAfPQAAqrwA4H09AAApPACAULwAAAu8AGB9PQAQiD0AACA9AEBbvQDAP70AAB48ABCVPQAAgDwAgCc8AAD9OwAAQDkAgIM8AOA0vQAAMLoAAKU8AHCovQAAvTwAwKK8AIAhPADACT0AIHi9AEAtvQDA3zwAsIS9AIBDPADA1TwA4Cy9APCRPQCAhb0AAJ87AMAHvQAALjsAIJE9AIAwvQAABLwAABC6AECPPACA8LwAgGU9AGAXvQAArrwAwH89AKB6PQBA+bwAYMa9AGBVvQDAWL0AABk9AMDFvAAAPD0AoCm9AMCjvAAAhDsAoFC9AABXvADQhL0A4Ji9AEAxvQAAlDwAwEU9AOAXvQCA2zwAQDw9AAA8vACA4b0AYFG9AOCsvQAAubwAwLM8AICGPABAHL0A4Dc9AMDKPACAKLwAAIe8AKB1vQAA3TwA8MG9AABbPAAA6LoAAIC7AIAQPACgSr0AAP27AIAmPABAdT0AALI8AMDPvAAAO7wAALI7AEACPQAAsjwAgMy8AEBjPQCAUT0AgAs8ACB7vQDA/LwAIM+9AMCWvQCAUT0AgH48AACwOQDgNj0AoCg9AABuvAAAZT0AwKm8AABuvAAAJz0AAKU8AAC5uwCwkL0AwBE9AABquwCgtL0AAGA6AFCZPQAgMD0AAFy7AIDiPQBQhz0AwPw8AGDePQBgAr0AANU7AOCQvQBA3jwAAOu8AIBqPQBAOj0AYD89AACfPABAsrwAcLs9AIChvQAAbz0AQEO9AACyuwAAnrwAABY8AADtOwDgTr0A8Ik9AIBXvABgR70AAAg6AABQOwCAcb0AoEA9AADVPAAAFbwAABO8AABfvQCQg70AQLW8AIDcvABgDb0AAAA4AOCQvQAAh7sAQCM9AIBlPQDgDz0AAGw8AECLvADAD70AQKg8AEBOvQCACz0AwKC9AOArPQAAj7sAAGc8AACXOwDAG70AgO68AACwOQAALD0A0JS9ALCrPQDAlbwAoKQ9AACmuwAA3bsAgIG8AIC+vABAqDwA4DK9AEBkPQBAyDwAgKI8AFCMPQCARzwAAIs8AEAgvQCAzzwAADQ7AEDDPAAgLr0AACy8AAAyOwAAgrwAAA29AIAjPQAAXLsAgLm8AACXvABgIT0AyBk+AKCAvQCAF70AgNQ8AMCXvACABb0AAEI8AMCRPAAAmrwAQOg8AECJvABAN70AgCW8AIDJPAAACDwAYFU9AAC0PAAAhD0AgBQ8AACQuwDAnLwAgNi8AOA5PQCAHLwA4AQ9ACA0vQBA8jw=","chunkHash":"d14438ae728f0bb23d9bd1d58fdbefd33c43efc10e5ee096f8621b1a9516eb60"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                #         print(f\"volumes is a list of length {len(volumes)}\")\n                #         if len(volumes) > 0:\n                #             print_tensor_info(volumes[0], \"First volume\")\n                #     else:\n                #         print_tensor_info(volumes, \"volumes\")\n                        \n                #     if isinstance(masks, list):\n                #         print(f\"masks is a list of length {len(masks)}\")\n                #         if len(masks) > 0:\n                #             print_tensor_info(masks[0], \"First mask\")\n                #     else:\n                #         print_tensor_info(masks, \"masks\")\n                \n                # # Process the tensors to ensure they have correct dimensions\n                if isinstance(volumes, list):\n                    if len(volumes) == 0:\n                        print(f\"Warning: Empty volumes list in batch {batch_idx}, skipping\")\n                        continue\n                    #...\n```","range":{"startLineNumber":520,"startColumn":0,"endLineNumber":538,"endColumn":0},"embedding":"AMDNvABA1jwAgHg8AHDAvQCAtL0A4Cu9AABauwAANj0AoEW9AIBKPQAAQLsAgDu8AAASvQAACrwAwM08ACACPQBgML0AAKQ9AIAOvQBgET0AwDI9AECSPADAxTwAwKe8AACCPAAA9bsAYBo9AMC1PABgLT0AwJo8AMAZvQDgLL0AAL69AECTvQAAHb0AAOC5AIAuPQAwkj0AgBW9AIBdPAAgej0AUM+9ADCSvQAAuD0AQLA9AIAJvACwtz0AABy7AGAVvQAAOzwAYC+9ACCkPQCAHr0AANO7ACAKPQAAaDwAgDu9AMDBvAAAHLwAANw8AOA2PQCQhL0AgBO8AACoPACgVz0AAEK8AMDjvQBA0rwAAFu8AEDkvAAANL0AQN28AICSPAAAPz0AAIc8AEAgvQCA7DwAQIc9AOCyvQDAqLwAAGW8AAB8uwDAwzwAoAc9AEBsvQCAwr0AwMa9ACA3vQDgO70AkJa9AAAIvABAhrwAQGi9ADADPgCAnz0AgA88AACEOgBQjr0AwJg9AEC3vACA2TwAgFw9AADWPADApzwAgNM8AECiPACgKj0AQBM9AICFPAAQhD0AQL68AMDsvADAtTwAQAm9AADYOgAgMr0AAHO8AICUPAAglr0AoCO9ACA6vQAASrsAgEe8AAA3vQCA/TwAgDW8AJDGPQAAvr0AwI28AMCPPAAA8jwAwFU9AEBvPQCA+7wAgOC8AMBVvQDAt7wAgFw9AGASvQBgvT0AwNW8AIAuPACAC7wAALo8ANC2vQAACTwAgLm8AMCWPQDQgr0AAFI8AKBzvQCAvD0A4FE9AADQOQBAnLwAwFa9AAD2OwBAaz0AYIc9AEBfvQAAZL0AgCg9AMDIPABAiTwAAIC5AAAwPQAAF70AoAy9AIBAvQCYBr4A4LI9AADmOwDAmjwAkJK9AAAjPQAA0bwAwG+9AAAlvABAvL0AACq9AIAFvQAAqDwAgAg8AMAjPQDwh70A4IU9AID0PAAAobsAAGi6AABAPQCABj0AAJm7AEBUPQCAvTwAAMc8AACGvADA5TwAAE67AMBBPQAAGD0AwPS8AFCVPQAARrwAIAa9AAA9PABgj70AwIC8AEDPPACgPb0AAK47AIDuPACgAz0AgM08AGAovQDA4LwAgN48ACAwvQCAqTwAACQ9AJCPPQAA8DoAYGo9AEC5PACgMj0AgNw8AABAvABgEz0AAD29AECePAAA2DsAQKY8AMAzvQCACLwAQOu8AIAVPQDQkb0AQBu9AIAnvACAUD0AADk9AABrPADgqz0AgCe8AMBpvQDATD0AwMk8AKAnvQBQlr0AYBE9AACLPQBwpD0AwKE8AEDOvADAkbwAACu8ADCHPQAgDL0AABy7AGCavQAAWb0AALA7AACsOwBgab0AgIc8AAAJvACAKDwAQOK8AADdvACAKbwAwGK9AOBBPQBAKr0AQA89AADWuwDAPL0AgCw8AEBSPQAA+zwAwAo9ACBVvQCAsbwAAP88AOBEPQCAPTwAAAs9AIB5PAAARDwAgDY9AMBSvQDgCb0AgEs8AKDCvQCA7zwAANm7AIBoPAAgCz0AAHe9AEAxvQBAvjwAQHy9AAA4OgBAyzwAQA+9AGBMPQBAnL0AgBM8AEDgvADAhzwAwGI9AMAOvQAAwTsAAHg8AMDVPACAkrwA4IE9AOB1vQDAirwAADs9AOCXPQCAxrwAMOO9AKBIvQAAP70AoB09AADiuwCAgT0AwMK8AMCIvAAAKbwAYJu9AADSuwBAJL0AkKS9AEBLvQCATDwAABE9AIBQvQDAoTwAwMI8AIA3vACA0b0AIEC9AFCXvQCApLwAgJA8AIAJPAAA57wAIFs9AECoPAAAPjsAQJK8AKB8vQDAAj0AgMG9AIBfvAAASDsAgJ08AACcOgBAWL0AABq7AABgOQDwhz0AQLI8AIAEvQDA7bwAAHi8ACAUPQBA4DwAoBa9AIAVPQCQgj0AABQ7AOBAvQBgD70AELy9AHCCvQDgMz0AANc7AADfuwCgOz0AoC09ACAQvQAAKT0AAFo7AIDAvABApDwAADI8AACmuwDAR70AgJ08AIAAvAAApL0AwJa8APChPQDgRz0AAKW7ALDRPQAAgj0AwNg8AADAPQCAGL0AAE08ADCgvQBgLD0AgN+8ACBNPQDAbj0AgGU9AIDRPAAAMb0AALI9AKCsvQDgJD0AgEm9AIAmvACAsrwAANk7AAB0PACga70A4Ec9AAAMvQCAIL0AQKS8AAC4PADAS70AgEc8AEDrPADAsbwAAOq8AECDvQCwhL0AwL68AMCwvAAAxrwAADS8ACCbvQAAQrsAQPY8AMBIPQCAOzwAAO08AADEvAAA/7wAQIw8AMDCvAAAITwAQFu9ACAlPQAAPTwAAPc7AAD+OwAANbwAQFm9AADwOwAAHzwAwHm9AADHPQCAcLwAYJk9AABAvAAAdrsAACq8AAAZvQAAPzwAQJO8AABwPQCANT0AAMQ6AOBhPQCAU7wAgLY8AGA1vQAAFz0AgAG8AMBNPQBATL0AALi8AABYOwAAmbsAgOG8AICbPADA1LwAgGS9AIArvACgOT0AaBs+ALCHvQDA3rwAAMg8AACkOgBAI70AAF48AABAOQCAkrwAgNg8AIC9vABgeL0AAJm7AIB0PACAJ7wAAFY9AMAVPQCgXj0AAKG7AADzOwAAQbwAgM28AKAHPQDA4rwAoIE9AGBJvQCAijw=","chunkHash":"08f1ee8d99aa747b318bba863b0d7a5cb2faed9efdd0a468ccef6acc7fac9391"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                    # Check if the volumes are already 5D tensors (B,C,D,H,W)\n                    if volumes[0].dim() == 5:\n                        # Just stack them along the batch dimension\n                        volumes = torch.cat(volumes, dim=0)\n                    else:\n                        # Otherwise, stack them to create a batch\n                        volumes = torch.stack(volumes)\n                \n                if isinstance(masks, list):\n                    if len(masks) == 0:\n                        print(f\"Warning: Empty masks list in batch {batch_idx}, skipping\")\n                        continue\n                        \n                    # Check if the masks are already 5D tensors (B,C,D,H,W)\n                    if masks[0].dim() == 5:\n                        # Just stack them along the batch dimension\n                        masks = torch.cat(masks, dim=0)\n                    else:\n                        # Otherwise, stack them to create a batch\n                        masks = torch.stack(masks)\n                \n                # # Debug the shapes after stacking\n                #...\n```","range":{"startLineNumber":539,"startColumn":0,"endLineNumber":561,"endColumn":0},"embedding":"AIAHvQAABjsAgGI8AKCUvQDwpL0AQCK9AADPuwBgJD0AkIe9AAD0PAAAW7wAAIW8AACUuwCAD7wAwIU8AMBKPQCASL0AoIY9AEAIvQDAqDwA4AA9AABaOwAgdT0AABa7AAAGvAAAYLoAYDY9AIBZPABARz0AgAA9AEAnvQBAKL0AgLq9AOCevQAgcr0AgA68AKA6PQCQuT0AANq8AIAhPAAgoT0A0Lq9AABevQBQlj0A0Is9AABFvAAQsT0AgAA8AAAsvQCACTwAALe8AGCEPQCgVb0AAGo7AEDgPAAACjwAACG9ACAYvQAAAbwAgAw9AIDYPADgbL0AgOW8AABMPADglj0AgG28ALDhvQDAIb0AAPm7AGAQvQCQlb0AQNq8AAByOwBgXz0AgBA9AACQvACAwzwAIJo9AICVvQAAbDsAgM28AADTOwAgRz0AwLU8AKAivQAQ070AkOS9AADtvADAZL0AMMa9AABzPAAADLwAMKC9AJDpPQDAdT0AAA48AABCPACATL0AsKw9AID4vACACD0AgC49AIDnPADAqjwAYAg9AEAYPQBgOD0AgDg9AECwvACQqj0AYAi9AAAqvAAATjwAwO+8AACIvACgKb0AgK+8AEDhPACgrr0AAK28AIBovQCALLwAAPg6AOBnvQCAHT0AAFi8AODfPQBg3L0AgFC8AADwOQAAMLwAIAw9AOCyPQCA9bwA4Cm9AABWvQAgHL0AwGQ9AKAavQBQmD0AgG68AACVOwAAfjwAAHI8AOBtvQBAwzwAQBO9ADC6PQBQgr0AQOg8AICDvQDQyz0AAEo9AAAcuwCA8LwAkKq9AAA7PAAgcz0A0I89ANCFvQDgKr0AgFA9AADJPAAATjwAAIC5AABEPQCAJL0AQMG8AIBlvQCw/L0AkKM9AABCPABA7zwAQHq9AMDrPACAa7wAII29AEDGvADwor0AwHO9ACAqvQBA9jwAAMg6AIACPAAAt70AIGo9AMAYPQAAWrsAAOC5AMBPPQBAjDwAAGa7AAArPQCAsDwAAOY8AEDmvADgAD0AgAC8ACApPQAAVTwAwPa8AABlPQAA4bwAABu9AECzPAAwhr0AALc7AIAWPQAAC70AgJ88AEDVPADA1DwAwJY8AADCuwDA6rwAAJ07AMAHvQAAMLsAwDk9ADCDPQAAfjwAQEk9AIChPACALj0AACg6AEDzvACgDj0AwIK8AICtPABAGj0AAAI8AMBUvQCADLwAAB+9AEDQPADAAb0AABu9AEDLvADgQD0AIEk9AACHuwBgej0AAEc8ALCGvQAA0DwAQCA9AMCovAAgn70AgJ88AAA3PQCQuz0AwNM8AEDjvAAApbwAoAm9ABCgPQDA3LwAAIK8AKCfvQDACr0AgMw8AADIugAgmb0AQAA9AIAnvAAAkjsAwAa9ACAlvQAAMbwAIEa9AGBFPQBA8rwAAAA9AIAjvAAAi7wAAFi6AOBpPQCAKj0AgBo9AEBmvQCA2bwAwII8AIBfPQAArTwAwLk8AAD0OwCAPzwAwJ88AGBJvQCgFL0AwNM8AICdvQCANz0AQL68AECBPACA3zwAIF+9AEA5vQBAwzwAIJG9AAAYugCAqTwAANe8AEA/PQAgQr0AgAs8AADavACAPTwAADU9AECTvAAAqrsAAPO7AIBzPAAALLwA4AU9AOCKvQDAk7wAIBA9ACBxPQCAB70AIL69ACBavQDAb70AgPE8AICCPAAgHz0AAPa8AIAjvABAjLwAsLu9AIDuvAAAab0AAGq9ALCMvQAARDsAgO48AEA7vQAAtbsAYBM9AAB6uwAw+b0AYEq9ANCIvQDAs7wAgCq8AECYPAAAX7wAYD49AAAAOgAApjsAAN67AACIvQDArzwA0MS9AADQugAAAjwAANA7AAC4OgAgdb0AAB68AAAyuwDgPT0AgPQ8AIAzvACAcLwAAFq7AIBQPQBABT0AAOm8ACAIPQAAeT0AgJM8AEBavQDA5bwAkKi9AHCXvQCgdD0A4B09AIBRPAAAxzwAoAU9AEC9vABAxDwAANi6AMDivADA7TwAAGA8AACsugDwhb0AAHQ7AAC0vABgir0AgDO8APCzPQDgQT0AwL+8AJDHPQAAbj0AwPQ8AJCoPQBgM70AAKe7ABCPvQBAjDwAgBe8AKCGPQBgTT0A4Fk9AADTOwDgML0AoKQ9ABCivQAgHT0AAFG9AMCevADAAb0AwM68AIAcPACgb70AQJU9AIBxvQDApbwAAJG8AAA9PADAfL0AAEC7AMDqPACAXbwAwIG8AAD1vADgir0AADi6AACUuwAAzLsAgIU8ANCXvQAAuLsAwPM8AMBoPQAAyTwAAOw7AICAvADA4LwAAMA7AACsvAAANDwAIIC9AADTPAAAWTwAAIi7AACyuwCAUL0AwFO9AABSuwAAibsAUKK9AHCtPQAAHjsAYIw9AEDxvABAlDwAAMe8AOAjvQAAhjsAwK28AMBXPQAAXD0AgLC8AOBuPQAAHLwAQPI8AOA3vQBgKT0AAIw6AIAgPQDAh70AgLu8AABeOwAAXbwAYAy9ACBHPQCgEL0AIDe9AACvuwCQiT0A0A4+ALCGvQDAOr0AYBA9AABsuwAgZ70AgDA8AIAQvABAorwAQCY9AMD7vAAAjr0AAJe7AECaPAAAlbsAYIE9AAD7OwDAVD0AAKK8AADpPAAAXrsAQAC9ACAaPQBA07wA0Ig9AAADvQBAgzw=","chunkHash":"1628f797302b095ef4371c5e4e5449334ea500f4322ae6229b72c50334480b1f"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                # if batch_idx < 2:\n                #     print_tensor_info(volumes, \"After stacking/processing, volumes\")\n                #     print_tensor_info(masks, \"After stacking/processing, masks\")\n                \n                # If volume has an extra dimension (like [1,1,1,D,H,W]), remove it\n                if volumes.dim() > 5:\n                    volumes = volumes.squeeze(0)\n                if masks.dim() > 5:\n                    masks = masks.squeeze(0)\n                    \n                # # Debug after squeezing\n                # if batch_idx < 2:\n                #     print_tensor_info(volumes, \"After squeezing, volumes\")\n                #     print_tensor_info(masks, \"After squeezing, masks\")\n                \n                # Move data to device\n                volumes = volumes.to(device)\n                masks = masks.to(device)\n                \n                # Adjust labels if needed\n                if adjust_labels and isinstance(labels, list):\n                    labels = [l - 1 for l in labels]\n                #...\n```","range":{"startLineNumber":561,"startColumn":0,"endLineNumber":583,"endColumn":0},"embedding":"AAD1vAAAoDwAgCQ8ANDOvQAAzb0AQDW9AAAgvACgWz0AII+9AIAfPQAAdDwAAJS6AGARvQCAkLwAgCo8AICYPADA+rwAQIo9AAA6vQBAFD0AQMg8AADqOwDgIj0AgFi8AMCtPACACDwAoEc9AIBLPAAAOj0AALc8ACAvvQBAOr0A0Je9AECxvQAgXb0AABY7AAASPQBwnj0AQAy9AACJPACwhj0A0LS9AIBfvQBQxz0AUKk9AACFuwBQnz0AgBQ8AIAlvQAAgDsAYAK9AEBdPQCgW70AADg8AAABPQDAszwAAJy8AOAgvQAA/rsAACw9AIAqPQDwhL0AANy7AIABPABAhT0AAKW7AMD1vQCAwrwAQMe8ACAUvQCgU70AgIa8AACxOwCgRD0AoA49AAAGvQAAlDwAMNc9AGCOvQAAbLwAwOi8AACRvABAIT0AAMI8AGCEvQBgy70AgMG9ACBDvQBgg70AUMO9AAAXvACAULwAAFS9AADuPQBQjj0AgBA9AACDPAAAar0AIHQ9AID6vAAgKT0AAOk8AADKPAAAmzsAQOc8AIC/PADA4jwAoEo9AAD/OwDQjj0AgLS8AMC0vAAAIjsAIA29AIAsvADAT70AgH68AACgPADQmb0AoDS9AAA1vQCACbwAAJa7AJCHvQDAQj0AAKQ6APDXPQDw1L0AQMG8AADFuwCASzwAQBA9APCDPQDAorwAYD69AECXvQAANLsAAHQ9AGBHvQCwqj0AQNG8AAAKvAAACDsAAH48AFCbvQCAXTwAgKi8ACCWPQBgk70AgBg9AAA6vQBw2j0AYEQ9AAAEPABAw7wAkJS9AIB0PACAej0AAH09AECBvQAgY70AgDw9AAD/PAAAjDsAAIC8AEBdPQDgHL0AgOe8AABEvQAg+70AIJc9AABDvABA1TwAAJ+9AID3PAAAn7wAAF29AICovABgrr0AwH+9AGB3vQCASDwAANC5AEDgPACgtr0AQL88AMD6PAAAEzwAAOq7AEBmPQDgKz0AgBq8AED0PAAAaDwAAPE8AAAWvACgEz0AgJW8AEBSPQAAszwAAK67ALCMPQAAvbwAgBy9AABcPABAcr0AANu8AADpPAAA1rwAAO07AMABPQDAIT0AAJY8AACxvAAgN70AALU8AMAcvQAA5LsAoBU9ABCRPQCAbzwAgG49AACtPACA2jwAAEI8AECpvACA1zwAABS9AMDRPAAArDsAAA88AEDnvAAARrwAQBO9AIBePQCgLb0AQDC9AIAXvQDwjT0AAAY9AACYvABAcT0AANu7ACCWvQBgLD0AgDM9AKAmvQCgnL0AQAI9AGBJPQBQiz0AALM7ACAIvQBgCL0AgAG8AABzPQBAxrwAgBC8APCcvQBASb0AANo7AAB0OwDAV70AgAo8AACQugCAezwAQMm8AEDyvACAqLwAYFa9ACArPQBA+LwAwBA9AADOPAAgGr0AAMI7AEBZPQBAWT0A4C49AIDavABAGr0AAGI8AABgPQBgAj0AANY8AACKPAAAnzwAIBo9AGAjvQCgCb0AwMQ8AHCevQBgOD0AQIu8AMDcPACgAD0AQH69ACAUvQCAqzwAwJO9AACmOwAAqDwAQOe8AMA1PQAAjr0AACM8AID9vACAkDwAIHU9AAAtvQCAObwAgHS8AMBNPQCAAbwAgEU9AKAjvQAAdLwA4Cc9AKAgPQCAorwA4Lm9AABHvQBAHr0AwK48AACwuwCATz0AACK8AOATvQAAM7wAcJu9AACDvADgQL0AMJW9AAAkvQAgOz0AgLs8AGBLvQBAkzwAwMc8AIBCvACQ4L0AUIy9ADCZvQAA0bwAgDQ8AMCAPAAAl7wAwAg9AIA9PAAAJLwAwN68AOBXvQBgSz0AsMG9AABSOwCAXTwAQJA8AAAUvABASL0AAMA5AADjOwDAQj0AwMg8AECbvAAA37wAAGi6AMAiPQCAIj0AwNq8ACAaPQDgnj0AAOa7AIBLvQAAALwAUKa9ALCRvQCALj0AYBo9AAAhvAAAzjwAoGU9AADlvABAMT0AAJg6AGAPvQDAHz0AwBU9AADMOwAgnr0AAMA8AACEvADQvr0AANy8ADC3PQAAEj0AgK+8AIDAPQBgjT0AgAQ9AECxPQDA5rwAQNg8AFCpvQAAYLsAAOS7AIAxPQDAVD0AQEU9AAD8PADAT70A4KE9AODGvQDAQD0AQGW9AMCBvACA07wAgIG8AADnOwDACL0AcJA9AADjvAAA4LsAAMM7AACzuwAAWb0AAMo7AIC6PABAy7wAAKq7AGAzvQBgQr0AAG68AOADvQBgCb0AAJm7ALCYvQBAtLwAIAA9ACAzPQCAPTwAAK47AIAYvQCAH70AAFQ7AAAlvQAAPDwAIGy9AADuPAAAs7sAAKK7AIBYvAAAgbwAAHq9AAD/OwAAgzwAwL+9ABC9PQAAmDsA4I09AADRvACAPTwAgMS8AGAcvQAAzDsAgBW9ACCbPQAARz0AAHo7AEBoPQCAvjwAQIQ8AGARvQBACD0AABY7AMAZPQBAg70AAPA5AABMOwAAK7wA4CG9AMDsPADAsrwAQBC9AAA9vAAAMT0AyBw+AKBRvQCAzbwAwNU8AADauwAAy7wAAHw7AIADPABAnrwA4B49AADIvACAY70AAAA5AIBOPAAA2rsAAHs9AIDKPACAPj0AAAo7AAAGPACAd7wAwKa8AABnPQDAkLwAYBU9AMCHvACAHzw=","chunkHash":"b1e1787e6661e73134daaab909759a9a4aee21ff6ba2f6b406c26cc8bda6ac1f"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                labels = torch.tensor(labels).to(device)\n                \n                # Forward pass\n                optimizer.zero_grad()\n                \n                # Debug output after first batch\n                if batch_idx == 0:\n                    print_tensor_info(volumes, \"Input volumes\")\n                    print_tensor_info(masks, \"Input masks\")\n                    print(f\"Labels: {labels}\")\n                \n                # Forward pass with or without mask-guided attention\n                try:\n                    if args.use_mask_attention:\n                        outputs = model(volumes, masks)\n                    else:\n                        outputs = model(volumes)\n                    \n                    if batch_idx == 0:\n                        print_tensor_info(outputs, \"Model outputs\")\n                        \n                        # Save preview of the first batch\n                        _, predicted = torch.max(outputs, 1)\n                        if(epoch % 10 == 0):\n                            save_volume_preview(volumes, masks, outputs, labels, predicted, f\"epoch_{epoch+1}_batch_0_train\")\n                        \n                except RuntimeError as e:\n                    #...\n```","range":{"startLineNumber":583,"startColumn":0,"endLineNumber":610,"endColumn":0},"embedding":"AMCovACAmDwAANE7AJDTvQCAvb0A8Ia9AABqvAAgfT0AAEy9AADwPACAdjwAALA7AIC4vAAACbwAAAE8AIDTPABA97wA4Ek9AEAmvQAACj0AAEA5AOA3PQAgTD0AALu7AECBvADAkLwAwM48AECIPAAgST0AwPk8AOBkvQCANb0AQKG9AMCpvQBgY70AAF88AFCDPQCAPD0AIB69AACgOwCAUD0AMNe9AOB1vQDgzj0AIJw9AMCJvADQpT0AANC6AEAJvQAA1jsAwBK9AIBsPQBgYL0AgLc8AIDyPACAKTwAgEK9AACYugAAYLoA4BI9AIDtPADwnb0AAKw7AACNPACAKj0AAIe8AID0vQCAHrwAAAC6AIDavABA1rwAQLq8AACaPACACT0AgKQ8AEDdvACAxjwAUJw9AEBxvQCAmbwAgCe8AADauwAAkDwAoCI9AAAivQBguL0AMPq9AOBcvQDgbr0AQKm9AAD8ugAAtbsAIHa9ALDtPQCgbz0AAAo9AMDpvADgXb0AMKo9AMD7vABgcz0AICo9AADyPAAAkrsAICI9AECWPAAgFj0AQEU9AID7PADwmT0AAI+8ACAgvQAAhDoAAPi8AADMPAAgEr0AgCm8AMCUvABgSr0AIFW9AKBKvQAABbwAwIA8AGBevQBA+jwAAL07AJDWPQCwy70AABY7AACoOwDAND0AQOo8AIB3PQAAs7wAwAy9AABqvQAASrwAgGo9AECevQDwiT0AgFK8AAB4uwAAmbsAALU8ANC1vQAADjwAgGe9AKCVPQBAmr0AgDc9AEA0vQDwxT0AoC09AAB2OwCA77wAYG69AMCFvAAAKj0AgCY9AGB1vQAA+7wAgN48AIDUPAAAZDsAAPS6AOCAPQAAyrwAwOW8AMA5vQCw670A4IM9AMCQPABgGj0AAIS9AICzPAAAabwAACe9AAAzvACQpr0AAD69AMDTvAAAgTwAgFo8AGAJPQAwjb0AwM88AIC+PAAARzwAAE28AIAjPQBArTwAAP67AEBaPQAAaDwAIAc9AABBvADA+jwAAPg7ANCMPQCABj0AoBS9AMCpPQCAbLwAAD69AAD7PABAS70AAPe7AMCJPAAAqbwAgCg8AGBmPQBAGT0AoCo9AACwvABAO70AAEA5AED4vACAzzwA4A49AOCQPQCAMDwAQAQ9AOAKPQBAQT0AgC09AAChuwDAuzwAwOq8AIAoPAAAjLsAABS7ACBdvQAAHrsAgBC9AIAbPQAQj70AAE68AKAZvQBwpj0AwPE8AADMOgCgcT0AwIu8AGDKvQAgWT0AQKw8AEDXvAAAsb0AgJI8ALCgPQDgkT0AgPE8AIDRvACAA70AAEq8AABzPQDArbwAAOc7AMCMvQBgQL0AANS7AACcuwCAJb0AADQ7AADBOwDAtTwAADa9AADWuwCAMbwAoDm9AADdPADAu7wAgDI9AADrOwDA4LwAgGM8APCfPQAAXz0AICo9AEBovQCA9bwAgLg8AACIPQAA3zsAwOo8AAAQOgAAxLoAwKs8AEAlvQCAq7wAADU8AHDjvQBAgj0AgGW8AEC4PABA1zwAIBq9AMB4vQBgET0AsIW9AABYPACARDwAwPO8AIBMPQCgPr0AAJq7AMD4vADAkjwAcIw9ACAGvQAAbbwAgM68AOBHPQDAtbwAAIo9AEBOvQAAGLwAACw9AGB0PQBApLwA8PS9AABrvQCAK70AgBM9AECOvAAgSz0AQM+8AEDVvAAALrsAQF29AIABvAAAIr0AAJ+9ACAevQAAYzwAQJU9AOAmvQAAeTwAgMs8AICfvAAQ6r0AIIS9AECTvQCA7bwAAPy6AAAYPAAANr0AwMA8AIAdPQCAbrwAQAy9AOBYvQCAHj0A4Lu9AIAovAAALrsAAIy7AAAgOQDAc70AADo7AABkuwAgOz0AQPA8AMBXvQAAOLsAgNG8AEADPQBA1TwAgC+8AEDGPABgbT0AQM88AJCOvQCAH70AUO69AGCLvQDA8jwAAMC6AACouwCACD0AALc8AADHvADACj0AACG8AICTvAAAezwAwNc8AABCuwAAdL0AAA48AAC0OwCwtb0AAPK8APCdPQBACD0AgE08AJC5PQBAlj0AgOM8AIDvPQBAHb0AACw8AMBwvQAArjwAAAu8AKBsPQDAsjwAAEo9AEDUPABAzbwAoNE9AGCPvQAAUz0AYDa9AACougCAR7wAAA88AAAtvACgbL0AIH09AADAvABADr0AAAM8AICUPACAaL0AgEQ8AIAkPQBA/LwAgDc8AICDvQBAZ70AAKa8AGAyvQBgJb0AAMA4AKBmvQAA/DsAoAs9AKA6PQAAhzwAQJU8ACBEvQCAV70AgJ88AGBGvQAA7TsAEKW9AEDpPAAA/bwAACA5AIAmPAAAqrsAgEe9AADPuwDAzTwA4FW9ACCsPQAAbjsAYF49AIB0vAAAiDsAIDa9AED5vACAizwAQAu9AMBrPQDgKD0AwII8APCQPQBAsDwAAIQ8AECzvABA6DwAAAO8AEDrPACAMr0AgMa8AICiPAAAGDsAoBi9AECsPACACTwAwOm8AIArvABAGD0AICk+AKB/vQBAO70AwMg8AAAuvABA8rwAAGg6AIBWvABAo7wAYBI9AABDvQBgB70AAL+7AIBZPAAA4bsAIHg9AKAwPQAASj0AAJa7AAAouwAAHbwAQKe8AIBMPQAAADwAYCE9AOAivQCACTw=","chunkHash":"b79b2ac1454c3f72e9c8f3ddb725d1c42e8bba2f43256a5837343c119e8778e6"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                    if \"mat1 and mat2 shapes cannot be multiplied\" in str(e):\n                        # Print detailed shape information to debug\n                        # print(f\"Matrix multiplication error in batch {batch_idx}. Details:\")\n                        # print(f\"  Error message: {e}\")\n                        # print(f\"  Input volumes shape: {volumes.shape}\")\n                        # print(f\"  Input masks shape: {masks.shape}\")\n                        \n                        # Try running forward with debug tracing\n                        print(\"\\nRunning forward pass with step-by-step tracing:\")\n                        x = volumes\n                        trace_mask = masks\n                        \n                        if args.use_mask_attention:\n                            attention_idx = 0\n                            for i, layer in enumerate(model.features):\n                                x_shape_before = x.shape\n                                x = layer(x)\n                                print(f\"Layer {i}: {layer.__class__.__name__} - Input shape: {x_shape_before}, Output shape: {x.shape}\")\n                                \n                                if isinstance(layer, nn.Conv3d) and attention_idx < len(model.attention_modules):\n                            #...\n```","range":{"startLineNumber":610,"startColumn":0,"endLineNumber":630,"endColumn":0},"embedding":"AACjvAAAbzwAwKQ8AJCOvQDgt70AAHO9AADAOgAAgz0AwGy9AOAlPQAAcDsAAFS8AIC8vACAZjwAgA28AEC3PACABL0AsJA9AED3vACAYjwA4Bc9AIBWPADAYD0AgJy8AMDiPAAAbrwA4E89AABiuwAgUz0AIFM9AEA5vQCAF70AoMa9AEB6vQCwkr0AAJS6AAC+PABQhj0AIDG9AAACPQCgkz0AQMe9AMBWvQDgvz0AAIk9ACAgvQBQmT0AAMI7AMAavQCgBj0AgBi8AOAkPQAAh70AgH88AECuPAAAsjsAAGa8AECPvAAAkrwAwAk9AABWPQAAhL0AwJS8AADIOgDASD0AgOa8AJDRvQDAB70AAGI7AEAcvQAAUb0AABC9AEDZPADASj0AYBI9AECSvAAA4DsAUM49AIAwvQAA6DoAAO48AAC8OwBA6jwA4Io9AIDWvACgzr0AwO69AEAXvQBgK70AUKW9AECPvABAtbwAgNW8AMAAPgDggT0AQNM8AAB0vABgpL0AQIo9AIB+vACAcj0AUIA9AIDpPACATzwAAEQ8AADLOwDgIj0AoAY9AAAGOwDAkT0AIBC9AMCDvAAgBD0AAGG8AECKPABA7LwAAPS6AAA0PABgn70AAAy9AMA9vQAACjsAAKc7AOBlvQAAMj0AAAY7ACChPQAAkr0AgBq9AABHPACAmzwAgGs9ABCaPQAAVrsAwI68AMBnvQAAELsAcIY9AGB0vQDwkz0AQJu8AIDtPACABrwAwKs8AACqvQDAVT0AgAe9AEBMPQBgWL0AgFg8AEAhvQDQxj0AADQ9AAC4ugCANb0AwGO9AMABvQBA9jwAgGc9AGAkvQAAqbwAwLQ8AIAGPQDAkTwAwIe8AABsPQAAKb0AIBS9AAAyvQDIE74AAGg9AKAJvQBAxTwAYHy9AEDlPAAAqLwAwGW9AKAIvQCwvr0AYDu9ACApvQCADzwAwJo8AOArPQBgn70AgBg9AGAUPQCABrwAAEI8AAATPQBgCD0AADe8AKBOPQAAkTsAgF09AEAfvQBA/jwAwPy8AOBPPQBgcT0AgBK9AIB3PQAAyDoAABm9AECLPADQib0AAA47AOAXPQAA4bwAwNo8AOBVPQCAsDwAgEQ8AMDSvABAwrwAgLw8AAC+vAAAKjwAgBo9AECxPQAAADoAwJE8AIDEPACgKD0AAPQ7AAAEuwDgRD0AQPq8AACOOwAASLoAAOU7AGAavQAArTwAAD+9ACBdPQDQlb0AYBG9AEAbvQBgZT0AQGc9AIAMPACgoj0AAO67AGCAvQBAUD0AQAo9AADjvABAnL0AAA09ADCJPQDggj0AYAo9ACAtvQDgNL0AQIq8AOCBPQBA+bwAAIC8ADCevQDgnb0AwIE8AACpOwDQgb0AAMC5AAAfvACALzwAIBi9AABIuwAAD7wAgG69AGBsPQCAkLwAAAA8AAAqPADgM70AAEI7AKANPQCwgz0AwFc9AGAIvQCAF70AgGw8AOChPQCATzwAAL48AAAePAAAZTwAACg8ACCGvQBA9rwAAKc7AMDFvQBApTwAgBG8AADAOwAApDoAAEq9AKAPvQBA9TwAsI+9AIBEPABAXz0A4Di9AMArPQCwm70AwPE8AIBXvACAAjwAgFs9AOAQvQBAwLwAAJ68AABQPAAAa7wAwAg9AOASvQAAWzwAYEg9ABCLPQAAg7wA8IS9ACAyvQBAgb0AAMs8AIAsvABAjT0AQMK8AAD8ugAAULsAQDa9AABhvACAWL0AwI29AKCOvQAALrsAgFw9ANCCvQBAmDwAoDU9AMCGvAAQ870AgHm9ADCKvQCAirwAAIY7AACLvABgCr0AgK48AID6PAAAtLoAICu9AKBOvQAAPTwA0IG9AAAuvAAARLwAALe8AICoPAAALr0AAGw7AAAPvACAQj0AwMs8AEC/vACAJ7wAAFS8AADuPACgWT0AAB69AGBMPQAgUj0AoEM9AKDXvQAAcrwAINW9ALCyvQCAOT0AwK08AMDsPABAuDwAwD89AIBXvAAAMT0AwOq8AMCsvAAAiDsAAPU8AAD5uwAgeb0AAOc7AAAePACAe70AQLS8AOCYPQBgBz0AAHU8AFDbPQDAaT0A4BY9AADbPQCANb0AAD68AECovQAAGDwAgHi8AFCLPQBABT0AoE49AEDbPABAo7wAQHU9AKCvvQAgOj0AIDa9AAC5OwCAw7wAAN+7AMCNPADALr0AoD49AADAuwDAp7wAAM+7AICTPADgWb0AADw8AGAwPQAAa7wAADC8AICKvQAgaL0AAJy6AIBgvAAA/LwAgCM8AEBjvQAA7rsAABY9AGAfPQAAqTsAADA7AEDqvAAAaL0AQIE8AKBCvQCAMDwA8L69AKALPQBAnLwAALs7AABIugAAlbwAQA69AIAcPABAVD0AYF29ABDuPQBgHT0AYGs9AAAiuwAAlzsAQLW8AMAMvQDA3bwAIGu9AJCQPQBADj0A4AS9AMCCPQCAwTwAAFC7AKAivQAAJz0AALO7AICePACgCb0AgCC8AICevAAAyjsAwCa9ACAGPQAANzwAwAa9AACKuwCAzzwAUBY+AEBOvQCgXL0AgPI8AIBavADgBL0AAHU8AAAzvACAl7wAwMo8AKAqvQAgIr0AgE28AECbPAAA/DoAwDw9AEDEPACALD0AwLK8AACIugAAGDoAwAO9AMBaPQAAmrwAAHw9ACBivQBAzzw=","chunkHash":"aaaf94b6dfb817baa6c227a6b49479434e4502b9be8a7b3aeafb14e8c5d2098c"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                                    print(f\"  Applying attention module {attention_idx}\")\n                                    print(f\"  Before resize - Feature shape: {x.shape}, Mask shape: {trace_mask.shape}\")\n                                    \n                                    if trace_mask.size()[2:] != x.size()[2:]:\n                                        trace_mask = nn.functional.interpolate(\n                                            trace_mask, \n                                            size=x.size()[2:], \n                                            mode='trilinear', \n                                            align_corners=False\n                                        )\n                                        print(f\"  After resize - Mask shape: {trace_mask.shape}\")\n                                    \n                                    x = model.attention_modules[attention_idx](x, trace_mask)\n                                    print(f\"  After attention - Feature shape: {x.shape}\")\n                                    attention_idx += 1\n                            \n                            print(f\"Final feature shape before flatten: {x.shape}\")\n                            print(f\"Flattened size: {x.view(x.size(0), -1).size(1)}\")\n                            if model.initialized:\n                                print(f\"Classifier expects: {model.classifier[0].in_features} features\")\n                            else:\n                            #...\n```","range":{"startLineNumber":630,"startColumn":0,"endLineNumber":651,"endColumn":0},"embedding":"AACKvABgAT0AwNU8AICwvQAQrL0AAHG9AEDEvADAYz0A4Hy9AOBoPQCAWjwAANc7AMDIvABAkjwAgOq8AADoPADAo7wAcMg9AIAYvQCA+jwAQLA8AMCtPACAkjwAgNa8AADkPAAAl7wAQKs8AICZPABgiT0AAOo8AABSvQCgJL0AgJG9AOBlvQBAXb0AAKW8AAA6PQDAhTwAAKG8AEDfPAAAWz0AANS9AGBavQDAmT0AAGk9AIBovABwjj0AAA67AAB2vQCAeD0AIAy9AMBhPQDgjL0AQN08AOAOPQCAKzwAAOg6AABWvAAAFrwAwHA9AEAxPQCAsr0AABq7AMDdPACgKT0AQJG8ADDjvQAAF7wAgF08AMCwvQDACL0AoCa9AEDJPAAAJz0AMJA9AAAMuwAAWbwAUK49AGA8vQAAGbwAgDo8AICPvADAiTwAQPo8AMAKvQCAt70AwNi9AKA2vQAAI7wAwHS9AACguwAAWDoAgDm9AGCdPQAgAz0AwFU9AADCvABAaL0A4FI9AAAZvAAw2D0AwO88AOA8PQCAmjwAYAo9AECgPADAkjwAoAI9AKACPQAA1j0AQMG8AACvvADAJT0AQLe8AACpOwDA3bwAAAm8AAAougAgVL0AAJ68AGAdvQAAzDoAAAO8AGCCvQDgTT0AAJ28ADCqPQCAgr0AoAq9AIAhvACAOz0AQDE9AOAKPQAAoLwAwHa9ADCqvQCAlLwA4B89APCUvQDApj0AAAC7AACoOwAASbwAAFk8AFC0vQAAtTwAIHC9AGCPPQAAYr0AwC89AIAgvAAA+z0AwAA9AAAYPABgBr0A4Iu9AAAavADgET0AQDM9ABCKvQCAArwAAPE7AIB8PAAAaTwAAJe7AIDtPADgF70AAD28AAArvQDwCL4AoG89AIBGvADAKj0AAH29AADPPAAAGTwAwC69AABkOwCgnr0AgLG8APCCvQAADDsAAI28AABguQDgYL0AgDK8AACzOwAAOrsAAJ+7AMBePQAA/DsAAJw7AEDFPAAA/LoAAKw8AEDBvAAgOj0AQBW9AOAPPQBAkD0AkIG9ADCsPQCATLwAQMy8AIAJPABQs70AAE67AABKuwBgNb0AADQ7AIASPQAAljsAoEc9AABCuwAANr0AQI88AADLOwAA9DsAoHo9AHDKPQAgET0AALC7AABqPQCA2jwAAOg6AAAAOADgbD0AAE47AIBuvACAubwAAKO7AKAxvQBAzzwAQPS8AIC7PAAQrL0AAMe7AOBcvQAAgj0AIEA9AEDDvAAAaD0AACu8AAAfvQCgGz0AAN88AIDqvABQq70A4CY9AMC5PQDAIj0AgFk8AOAUvQBAxrwAAP27AOCLPQAA67wAgF68ADCgvQDApr0AAG48AED3vABgJL0AAHg7AMCPPAAAr7sAAMa8AIBjPABAFL0AAPO8AIBePQBgCb0AAK47AEDWPABA4rwAACs8AOA4PQCAjT0AsJE9AIC2vQDA2bwAALQ6AICwPQDAiDwAgGE8AMCjvAAACjsAwIC8AMAKvQAAa7wAANA5AICYvQAAxTwAQNK8AED4vAAAmDwAwBq9AKACvQBABT0AoKe9AEAPPQBAej0AIAO9AOAUPQCgzb0AQKo8AADkugDAuDwAwJo9AMA3vQAADrwAgNi8AKAcPQAgFL0AAGY8AIASvQBA9TwAIEE9AMD2PACAFTwA4L69AABavQAAML0AACQ8AIAIPADgPT0AAC+8AECJvAAAFLwAACG9AAAAuwDAN70A4GC9AMBOvQAADjsAkI09AICBvQAAfzwAAAY9AIC/PAAw3L0AoLa9AGCdvQCAZrwAAPO7AAC9PACAuLwAgEE8AICpPAAAx7wAwAa9AADivADgMD0A8Ji9AECIvAAAvDoAAJy7AAARvACAyrwAAMS6AECGvAAAIT0AgEY9AEDsvAAAibwAACg7AECEPAAA1DwAAJ+8AHCAPQAA7zwAAMg8ABCivQCAGr0AgAS+AKC2vQDA7jwAAMs7AACRPACA0TwAoGE9AADOuwCgfj0A4Cu9AMDpvAAA4TsAwEY9AAACPADgf70AAEA5AMCkvADgxL0AAO47APCjPQCArjwAAIy6ABDQPQCAZD0AANI8ADDqPQDAIr0AAMY7AGAmvQAAp7sAYBu9AABvPQCAWzwAQPk8AABwOwCA/rwAgHw9APCdvQAAbD0A4Gq9AAAIOwCAv7wAgL68AAD2uwDgUb0AEIM9AIBzvAAArbsAgFg8AAAhvACgnr0AQDI9AAA5PADAEr0AAAC5AOBfvQBAMr0AABe8AIAqvADA/rwAAIA4AMCxvQAAMTwAwJ49AMAzPQAASrwAAC+8AMCMvABgBL0AAOW7ACBHvQBArTwA8K69AGApPQAABLsAALK7AADxOwAAqrwAACC8AIAbPABAIT0AAG+9AICxPQAAZjwAYJc9AEDgPAAgFj0AAFu8AADavAAA0TwAgGm9AFCFPQCAsDwAAAW8AACRPQBAiDwAACq7AGAvvQCAdj0AADA8AID1PABgSb0AAAM8AKAAvQAASrwAsIK9AAAHPQBAyTwAANY7AAAGuwAAoDkAWBc+AOCAvQDgL70AwA49AEAtPQBAkLwAANg7AAAguQAAjbwAQMo8AIBVvQAAxbwAAJa7AMCQvADAA70AQNI8AIDtPAAgTz0AAAA5AABOPADAab0AAOg7AIBUPQDAhbwAoBE9AAAFvQDAAz0=","chunkHash":"b870ab1c145ddead9ebe295e3b33d459e3f73caa8c9685511ff87b2a170e58d1"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                                print(\"Classifier not yet initialized\")\n                    \n                    # Re-raise the error\n                    raise\n                \n                # Calculate loss with or without mask weighting\n                if args.use_mask_weighted_loss:\n                    loss = mask_weighted_loss(outputs, labels, masks, base_criterion)\n                else:\n                    loss = base_criterion(outputs, labels)\n                \n                # Backward pass and optimize\n                loss.backward()\n                optimizer.step()\n                \n                # Track statistics\n                batch_loss = loss.item()\n                train_loss += batch_loss * volumes.size(0)\n                _, predicted = torch.max(outputs, 1)\n                train_total += labels.size(0)\n                train_correct += (predicted == labels).sum().item()\n                \n                # Update progress bar\n                progress_bar.set_postfix({'loss': batch_loss, 'acc': train_correct/train_total if train_total > 0 else 0})\n                \n                # Free up memory\n                del volumes, masks, labels, outputs\n                torch.cuda.empty_cache()\n                #...\n```","range":{"startLineNumber":651,"startColumn":0,"endLineNumber":679,"endColumn":0},"embedding":"AAAkOwDA6zwAgHE8AHCvvQCwor0AgBG9AADGOwDgET0AQAu9AKBePQAAYrsAAEE8AADmvAAAhrsAgIY8AADHOwCAJb0AIKo9AADrvAAgbz0AQPA8AEAbPQAAmTwAwOi8AACOOwCAI7wAoFY9AAC5OwAgXD0AQNo8AACBvQBgKL0AUMq9ACCMvQBAUL0AgEq8AGCHPQDA6zwAwDO9AICSPAAA4jwA8O29AAA3vQDw3T0AgAU9AABBvACAzj0AgA28AEDrvABAoLwA4CK9AKBVPQAgZL0AoCs9AABfPAAA9jwAQEW9AACwugDgHb0AYEA9AICRPABgMr0AANA7AABKOwAAAD0A4BW9ABDLvQCAHLwAQLu8ACACvQAQlr0AIDG9AIDGPACAKj0AgDo8AIBtvACAgDwAgLQ9ACB6vQAAYDoAgOK8AAA+vACAXDwAABI9AKAkvQDgn70AABy+AMClvACAT70AMKC9AADpuwBAu7wAoGS9AJDnPQDAjT0AQKM8AAD7uwAAsbwA4KA9AECzvADAcT0AANA8AKBWPQAAADgAAFQ7AAC0OwAAzDoAIBY9AIBDPADAtz0AAIm8AICuvAAAsrsAwFi9AADXvABAt7wAgDI8AIBDPABgVL0AwD+9AECPvACAnrwAADY8APCGvQBgHz0AgNA8AFDOPQAgpr0AgMC8AIAsvACA0TwAQBc9ANCUPQDA7rwAwC69AOBJvQAAULwAoG89APCsvQBQhj0AQNa8AAADvACAnLwAgAo9AODvvQCAYTwA4Au9ACCCPQBAub0AwPE8AABLvADA0T0AAAg9AABbvAAgSL0AoI+9AACFuwCAET0AwOI8ALCBvQDgBb0AACY9AIDLPAAAlDoAALE7AKBPPQBgAr0AgMy8AABfvQDA5b0AcLY9AABAugDAijwAgKm9AIAbPAAAqLwAQAG9AACIvACwgL0AwJC9AEDyvABAyjwAwOY8ACAaPQAgdr0AAPg8AAAuPQDAizwAQIe8AGB0PQDA6DwAAMq7AKBhPQCAQjwAYAA9AACwOgBgAT0AAKa8AOAwPQDgMj0AgOK8AFCBPQAA9LsAIBy9AADLPADQnr0AwIa8AACcOwAAa7wAANc8AMD5PAAAHjsAgPM8AIAkvQCgQr0AgFg8AAA4uwDAwTwAICY9AIBlPQAApDwAYBQ9AICJPABgDj0AoCk9AIAAvAAARz0AQJe8AADSuwAAjDoAwIE8AEBYvQBAgzwAgB+8AOBYPQBwoL0AAPq7AEDxvADgPj0AgKA8AADTuwCAbD0AgP28ANCFvQCA8DwAAPQ8AOBOvQAQrb0AgGM8AKBkPQCgnT0AIDc9AABoOwAAD7wAABC8AJCQPQAAhDoAwJ68AKB+vQDgir0AAJe7AGBJvQDgc70AAIC7AIBAPACA1jwAwBi9AACzvAAAADsAAOO8AMBWPQDA87wAwB09AADiPAAAcLsAADo8AMBNPQDwuD0AwDQ9AOBGvQDgC70AAL67ACCDPQBAjjwAgGA8AMDePACAf7wAQA49AKBVvQCAorwAgG08AODFvQCAAz0AwPK8AIBVvAAAQj0A4Bi9AEA6vQAAnzwAYFi9AGA0PQBAuTwAQGO9ALCePQDwqb0AAGS7AIBzPAAAODoAIJQ9AIA4vQDAz7wAAGm8AIAiPQCAUbwAkJE9AKB/vQAAHDsAUIQ9AACSPQBABb0AgKW9AIBbvQAgSL0AACw9AAA3vABASD0AgDe9AMCsvAAAbTwAYFO9AEC4vABAjL0A4KC9AACMvADAnzwAYHA9AADPvABAVT0AAB89AAByuwAgzL0AoIa9AGCevQDA+rwAQL48AICKPACgQr0AgPY8ACByPQAASjsAwL28AEBGvQBAPT0AwJO9AADDOwAAJ7wAAFQ8AAClPABgP70AgAi8AAD6uwDART0AAPg7AIBMvAAA/7wAACO8AADjPAAAvDsAAGA6AIB2PACAQzwAAGY7AMCAvQDgDr0AUOm9AACjvQCgFj0AALA8AIBQPABAwDwA4C49ACAAvQCgVT0AQPm8AACzuwAAMzwAoC89AACmuwAQib0AgDs9AADQOwBAor0AgH+8ACCWPQCgbT0AwJ48AICePQBwoD0A4B09AIClPQAgI70AQIQ8AMCFvQBAqTwAANq7ACB1PQAAYT0AIBk9AAAUPAAAQDoAwLc9AMCgvQAgYz0A8JS9AAA8uwDgF70AgEu8AIAMvACAB70AAP88AAAgOQAAdbwAAF47AABmuwAgT70AgDk8AMDBPADA+rwAAN27APCSvQCAJb0AgMC8AEDSvAAAt7sAAMo7AEDNvAAAjbsAAA89AABgPQAAkD0AAGa8AAAQvAAge70AgMo8AIAsvQDA2DwAkMG9AICmPAAAwLgAgOo8AAC9OwCAFr0AgNu8AIBRPABAiDwA4KO9AKB1PQAAqLoAIBU9AACkOgAA/LsAgGi8AIAzvQAAkzwAQOK8AKBlPQBgkT0AAJy6APCHPQAADLsAQJA8AKAtvQDA3jwAAMu7AKArPQAAVL0AABo8AAAyOwAAZbwAoDC9ACAcPQAAHjsAAD+8AIDIvAAAcDsACCw+AGCAvQCgZr0AQP88AABIuwDA5bwAAPQ6AADMOgAAnrwAgCQ8AOA6vQCAbr0AAIY7AACmPAAA87sAoFc9AACqPAAA4zwAAMw6AAB2OwCAqLwAQAK9AGA2PQAAgTsAQGo9ALCHvQCArTw=","chunkHash":"7fe176a9801deab20fe8ab508e60375cfe300805bf99965822982265f8c16cfe"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n            except Exception as e:\n                print(f\"ERROR in training batch {batch_idx}: {e}\")\n                import traceback\n                traceback.print_exc()\n                \n                # Skip after a few consecutive failures\n                if batch_idx < 5:\n                    print(\"Continuing to next batch...\")\n                    continue\n                else:\n                    print(\"Too many errors, aborting training\")\n                    raise\n\n        train_loss = train_loss / max(1, train_total)\n        train_acc = train_correct / max(1, train_total)\n        \n        # Validation phase\n        if (epoch % args.validation_freq == 0) or (epoch == args.epochs - 1):\n            print(f\"Validation phase started...\")\n            try:\n                val_metrics = validate_model(model, val_loader, args.use_mask_attention, \n                                            args.use_mask_weighted_loss, base_criterion, device, adjust_labels, \n                                            epoch, save_preview=True, output_dir=args.output_dir)\n                val_loss = val_metrics['loss']\n                #...\n```","range":{"startLineNumber":680,"startColumn":0,"endLineNumber":704,"endColumn":0},"embedding":"AKAKvQAgET0AwLQ8AAC1vQCwo70AoF69AACGvAAAUD0AQO68AKBBPQDgAD0AANw6AIAyvQCAF7wAgB08AADJPABAGr0AoLc9AIBfvQDAHj0AwOs8AAAqPQCAhDwAAOg6AOAGPQBA5bwAwIw9AID8PACgTT0AANw7ACBavQCAEr0AEK29ALCmvQDgf70AgCO8AMBsPQCAgjwAYAG9AAC0OgBAGj0AQPC9AECivABQ+D0A4D49AABHvABQwT0AgCA8AMAqvQAALbwAQPy8AEBtPQAA2bwAQOA8AICbPACAsjwAIA+9AIA2vACAzLwAAK08AABePABQh70AAGi7AKADPQBAGD0AwPu8AODNvQDAv7wAACK8ACBJvQAAd70AAB+9AOAQPQAA9zwAwLA8AACxvABAyDwAALM9ANCJvQAApLoAAMa7AADAugBA4zwAQCA9AOAxvQBQn70AiCK+AEDovAAAybwAIJe9AACcugAAKbwAQGK9AIDUPQBAfD0AAAs9AMCQvABAib0AwJw9AMCGvACgOz0AQP48AIDtPACAEzwAwL88AICEPAAA2TwAACc9AAAkOwBgiz0AQAK9AACwvAAAkLsAwDq9AABTvADgQr0AwL08AIA3PAAgW70AgCW9AMDJvADAhbwAQLE8APCMvQDgWz0AgDo8ANCwPQBQgr0AgCC8AMDIvAAAsTwAQHI9AGBrPQDAkLwAYDO9ABCKvQDAuLwAwCk9AMCbvQBwpz0AoBK9AIBjPAAApTsAAGk8AECjvQAAwzsA4Am9AIBVPQCgh70AYEw9AIC1vADg2j0AIB49AIClPAAAKr0AwGy9AICkvACAbz0AYAA9AIB4vQBgA70AYAc9AMABPQAA6TsAANU7ACBNPQCAtbwAgBu8AIAevQAA970AwMQ9AIBAvAAAQTwA8J69AMCTPAAA0rwAwDi9AMCnvAAgZb0AAF+9ADCGvQAAbjsAAC88AAAHPQDAXb0AgEO8AMAePQAAeDoAgAq8AIBFPQDgFj0AQOa8AKB+PQAABrwAgFg9AIA7vADgGj0AABO8AAB0PQCAVj0A4B+9AHCFPQAAcjsAQC29AABFPAAghr0AQLa8AACrOwAA+LwAADi8AMAbPQBAPz0AoBI9AEChvAAAEL0AAAQ8AAAAuQAAFDwAYGA9APCLPQAAUDsAgJ48AMCIPABgeT0AgEg9AIBovAAAXD0AgNi8AICaPAAAfLsAAAq7ANCYvQCA0TwAwOG8AACSPQCwmL0AIAK9AADYvABgEj0AQOI8AADEugAwqz0AAMe7AKBSvQBACD0AQN08AEAHvQAQob0AAMs7AOBxPQAgNz0AALg8AIDPvABA6LwAAL+7AACNPQCAAjwAQMm8AMC5vQAgcr0AAHq8AIB0vACgGr0AgLk8AAAnPAAAPzwAAPy8AAASvQCAY7wA4IO9AEAoPQDAurwAoAM9AEDfPAAAejsAAPg6AMBuPQDwhT0AAGk9AIBqvQCAKL0AAFg6AECQPQCA6DwAABg7AIAnPAAABrsAgGU8AEAAvQAADjsAgBE8ADDPvQAAlDwAQOO8AADFPACgQj0AoE69AMC1vAAgQj0AcIK9AMD3PABgJj0AoHq9AOBTPQCAlL0AALC7AECjvAAAAjwAwHU9AKA3vQBAo7wAAFe8AADZPAAAObwAYBU9AABjvQAAELwAYHw9AKCEPQAA67wA8JK9AMAVvQCQhL0AYEk9AIDevADgOj0AwPm8AADdvACAl7wAQKq8AAC5uwCQkb0AwJ29AECzvABAsjwAAI49ACBcvQBABT0AIDU9AACkuwAw+r0A0IC9ACCZvQCAibwAgAU8AAAuOwDgGb0AoAk9AGBQPQAA8bsAwOy8AAA9vQBAkjwAEK+9AAAauwAA8rsAAIO8AEDOPABAX70AAJw6AACGPAAwkj0AAHs8AEDbvAAAh7wAgDS8AADUPAAArDoAQLS8AMAZPQBgED0AwPM8AHCavQAAsbsAUPi9APCHvQDgGj0AgOY8AABGOwCAXzwAgFE9AADJuwDART0AQNu8AAC+uwAA0TsAAK08AAAMvADQir0AQPI8AAAEOwCQwr0AwIW8AGBBPQCAWD0AAOy6AGDLPQDwlj0AAAk9ALDMPQCAs7wAQNA8AHCZvQCAWzwAQJS8AGBuPQAAzzwAoDE9AIADPQCAYLwAoLs9ACCyvQAgTT0AoHS9AACYOwCAD70AQJ48AABKOwDAJr0AYGE9AACpuwCA17wAgBk8AIBvPADAOL0AgB09AEDjPAAA9LoAAJA7AIBuvQBwjr0AQL68AABTvAAAlbwAgE08AIB6vQAA3jsAYFA9AACAPQAAJjwAgBg8AID0vACgKb0AwNo8APCIvQCAUD0AELm9AOAWPQCAETwAAOM8AIAhPACA2rwAwLy8AEDBvAAgGD0AkIa9AAC1PQAAtDoAcMI9AACAPAAACLsAAI28AKAEvQCA6zwAQBS9ACB2PQBAVz0AQO08ABCHPQAAZzwAgKs8AICEvADAzjwAADw7AMDgPABgVL0AAEI7AABAugCAY7wAQDW9AICCPAAAujsAACu8AAB4vAAAODwA+BY+AGBYvQDgH70AAN07AACsugBA07wAgGU8AAD2OwDAk7wAAIg8AOASvQCA57wAACK7AIBkPAAAbLsAAFY9AMDuPAAgAz0AgBc8AADkOgBA9bwAgMe8AGA3PQAAILwAgD09AKBQvQCAgjw=","chunkHash":"60121e52095094bafaf1db74a82e4e0e050f8dda62bc060ed6da375d2a544ad7"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                val_acc = val_metrics['accuracy']\n                val_f1 = val_metrics['f1']\n                \n                # Print validation results\n                print(f\"  Val Loss: {val_loss:.4f}, Val Acc: {val_acc:.4f}, Val F1: {val_f1:.4f}\")\n                \n                # Update history\n                history['val_loss'].append(val_loss)\n                history['val_acc'].append(val_acc)\n                history['val_f1'].append(val_f1)\n                \n                # Check for improvements and save models\n                improved = False\n                for metric in args.save_best_metrics:\n                    if metric == 'loss' and val_loss < best_val_metrics['loss']:\n                        best_val_metrics['loss'] = val_loss\n                        best_model_states['loss'] = model.state_dict().copy()\n                        improved = True\n                        \n                        # Save checkpoint\n                        checkpoint_path = os.path.join(args.output_dir, f'vgg3d_masked_best_loss.pth')\n                        torch.save({\n                        #...\n```","range":{"startLineNumber":704,"startColumn":0,"endLineNumber":726,"endColumn":0},"embedding":"AACpvABA0zwA4AU9AIC6vQBAdb0AwBm9AAD3vAAASj0AgKC8AOBDPQCAejwAAKA7ACApvQDAsrwAgAY8AMDoPACAB70AIHU9AIAwvQDA1TwAgLo8AAD2PABgVD0AAOU7AECiPAAAjbwAQAA9AACPuwAACz0AAIu7AEBvvQBA5LwAEKO9ANCFvQDAd70AgGM8AKB4PQBAvTwAgN28AAD5OwDAHD0AcLe9AMCWvADw5j0AYC49AIAmvABAyT0AACU8ACB+vQAAoDoAAPS8AIBqPQBgLr0AALS7AABsOwAAZTwAAGA5AOA3vQDA07wAgCE8AADCuwCAjL0AAI87AGBCPQAgTj0AwK+8ACC3vQAAhDoAgDG8ACBivQAASL0AAHi8ACAhPQDAAD0AQKQ8AKAOvQDgCj0AwLI9AEAKvQAAybsAgM68AAAdvADAaz0AACk8AABLvQBAo70AOBa+AGAPvQBAg7wAgKO9AAAsPAAA8LoAoEe9AHDqPQBguj0A4A49AADyvACgZb0A0Io9AMCjvABgOz0AAN08AIAkPAAACDoAAIk8AAAkPQAA+DwAgO48AIBPPACAkz0AwCe9AIDCvABAhLwAQNO8AAD8uwDgV70AgCS8AAArPADA57wAwCK9AAAqvQCAbbwAAPY8AMCQvQBgWj0AgGY8ACCRPQCQl70AAE67AGAxvQAA4TsAoGs9AHCaPQDALb0AYA29AGAovQBAmLwAADw9APCTvQBAkT0AYCO9AAAQuwAAcbwAALk7AGC8vQAAwjsAANy8AOCMPQAglb0AYE49AMDbvABw4j0AIBQ9AGAAPQBAJL0A4Ea9AACMuwCAQj0AgLY8ABC7vQAAUr0AIFo9AABeOwAASzwAAOE8AKBzPQCAKL0AALg6AKBrvQCwBb4AsM89AIC0vACAejwA4Fa9AECzPACACL0A4G+9AIBKvABQjr0AYFu9AHCVvQCAUTwAAFa7AADAPADggb0AgHw8AEDkPAAADrsAAM67AAB2PQAACT0AgKi8AEB8PQDA7LwAQOQ8AAA/PAAgBT0AAOQ6AABKPQCQhz0AYC69AKCGPQAAqrwAsIm9AIABvABgnb0AQPC8AADYOgCA4bwAAAG8AID6PAAQoz0AIA49AAD5OwDAzrwAwKQ8AICTvADAwTwAAP48AOBrPQCAGrwAwJY8AABlPADA+DwAoEQ9AADguQBAIz0AQOK8AADNPACAErwAAOE7AOCDvQCABrwAgM+8AGBuPQBQmr0AoAy9AEDkvAAATj0AQOU8AAAsuwDAmT0AAOe8ACBRvQAAqDwAQLc8AEBQvQAQtL0AAIC4APCFPQCgXD0AAJM7AICevAAAK70AQIY8AMBVPQAAwDkAAAe8ACCkvQAAYb0AAHK8AADJvACA+7wAQK48AIArvAAA9zwAgHG9ACARvQDAt7wAoEy9AMBlPQAgF70A4Cc9AAAhPQAAoTsAAHg6AMBAPQBAeT0A4HQ9AMBqvQCgHb0AAEi7AHCSPQDgBT0AAGU8AACLPAAASDoAgOA8AIBIvAAApDwAAIs7AGDTvQAALjwAgGW8AEDyPACAdz0AAHW9AMCyvACASzwAwEm9AOAIPQAAhDwAcKW9AKCnPQDgkr0AAMU7AEDEvAAA3zsAwNc8AIBtvQAAnLoAABS8AKAbPQCAu7wAgM48AOBnvQAAvLsAICc9AKCIPQAAZLwAgJu9AOA2vQBAZr0AYAY9AMA1vQDAMj0AABS9AABnvADA5rwAAEC8AIB2PADgPr0AQEG9AIBKvAAA7jwAoKA9AFCnvQAgYz0AQPE8AICjvACAA74AUJ+9ADDevQDAhbwAgKw8AAByPADgI70AQC89AOAsPQAAibsAAAq8AECmvABADj0AILC9AAAcuwCAf7wAwLq8AMASPQDAXr0AAJm8AACsuwCgTj0AAK48AECcvACALLwAAMm7AACnOwAAgDgAwLK8AOAXPQAACjsAAKk8AOBbvQDgCD0AEBK+AMAavQBAET0AYBI9AMDsPAAA3zwAgHM9AAC3OwAALj0AgCi8AEC0vAAA7LsAgBg9AIDLvADAM70AQBA9AADMugCAs70AgLG8AEB3PQAAFz0AwL08AHDqPQBASD0AICE9AEDBPQBgHb0AANU8ANCovQAADDsAALS6AMBiPQAAzzwAoDI9AADHPAAADrwAAMs9AICuvQAgQT0AgEK9AECYPACA5rwAAC88AIApPACA4rwAQOo8AAAwvADAg7wAwJ88AIAYvABgVb0AAKw8AKALPQAA1LoAgJc8AACavQAAXL0AICK9AICNvAAAkbsAQKc8AHCBvQAAPDsAwFY9AOBuPQCAmjwAAO48AKAGvQBgFL0AgMg8AIA8vQDAmDwAoMu9AAAaPQAA77sAwJk8AAC4OwAAz7wAwOe8AACauwAA2jwAYHi9ADDrPQAAPLwAsLY9AACKPAAA5zsA4A69AADNvADAvTwAgCS8ACAvPQDAij0AgBI9ACBDPQAA2jsAAKM8AADMvACAdbwAAPg7AIBHPQAgcL0AAK47AACbOwAAFrwAADC9AMDSPAAAyDoAACe8AAAIuwCADzwAYBw+AEDOvADgY70AwIM8AICgPAAA9LsAAFI8AECGPACAl7wAQNg8AKBavQBAxLwAABa7AIAcPAAAQbwAICA9AOAZPQCADTwA4Dw9AACgOwBgKr0AAN+8AAACPQAAALsAAB49AMAzvQAAFzw=","chunkHash":"f5dcaa3efb067a16a4ddf469780b8e21ede8a26d00647204eb413de88138a431"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                            'epoch': epoch,\n                            'model_state_dict': best_model_states['loss'],\n                            'optimizer_state_dict': optimizer.state_dict(),\n                            'val_loss': val_loss,\n                            'val_acc': val_acc,\n                            'val_f1': val_f1\n                        }, checkpoint_path)\n                        print(f\"  Saved best loss model to {checkpoint_path}\")\n                    \n                    if metric == 'accuracy' and val_acc > best_val_metrics['accuracy']:\n                        best_val_metrics['accuracy'] = val_acc\n                        best_model_states['accuracy'] = model.state_dict().copy()\n                        improved = True\n                        \n                        # Save checkpoint\n                        checkpoint_path = os.path.join(args.output_dir, f'vgg3d_masked_best_accuracy.pth')\n                        torch.save({\n                            'epoch': epoch,\n                            'model_state_dict': best_model_states['accuracy'],\n                            'optimizer_state_dict': optimizer.state_dict(),\n                            'val_loss': val_loss,\n                            'val_acc': val_acc,\n                            'val_f1': val_f1\n                        #...\n```","range":{"startLineNumber":726,"startColumn":0,"endLineNumber":749,"endColumn":0},"embedding":"AIB3vADA5TwAgHg8APC4vQDwjb0A4Cm9AIAbvQBgUz0AwIi8AIBEPQCA4jwAADE8AIDQvADAtLwAgBs8AGA3PQDgSb0AQKM9AAB/vADAjDwAABg8AAAhPQBgMT0AwIw8AECePAAAxrwAwNk8AABkvABA9zwAAMo7AABWvQDAAr0A4J+9AGB1vQDAb70AgGw8ACBbPQDAuzwAQCy9AAD4ugDgCj0AsNO9AAC5vABw7T0AwIw8AAAauwCgqz0AAC08AGBFvQCA7jwAQOG8AKA5PQAgK70AgBw8ACAkPQCAJjwAgAo8AIA4vQDA0bwAAC88AABMuwCAZr0AACI7AKBRPQCwiD0AgKm8AEDSvQAA0TwAgPC8AMB2vQDgab0AAMK8AMCRPACAAjwAALA8AGArvQCArDwAALU9AIB/vADAuLwAgKi8AACWuwAgeD0AwIs8ACANvQCAlr0AMBW+AIDrvAAAVLwA8Ku9AICvPAAAADgAYBK9ADDDPQDAlj0AgC89AIDmvACgWb0AsIA9AEC2vADgWD0AwLc8AAAAAAAA3DoAAF08AEDcPABAFT0AQLE8AECFPABwgz0AgBm9AICwvACAGLwAwOO8AAD8uwCAmL0AAOC7AICPPADAvbwAQPC8AACQuwAApTwAACo8AACmvQBAgj0AgII8AMCWPQBgUL0AAIC4AKARvQAAGbwAAB09AICYPQCAcr0AAAi9AGBavQAAmbwAADs9APCOvQBQjD0AoC29AADMugBAzbwAgAc8ANDPvQDA2TwAYAO9AKCUPQAwob0AoBo9AOBTvQBg8j0AoEk9AGAhPQBALr0AwHm9AIBSvACASz0AwOU8AFCUvQAAi70AIH49AAAwugCABzwAwAM9AEBkPQBgOb0AAPe7AIBmvQBAE74AYMQ9AACjvAAAtTwAAF29AMCiPADgD70A8Iy9AADsugCwmL0AgC29AHCFvQAArLoAAE68AIATPQDgSb0AwNQ8AADjPAAAQLoAAD47ABCLPQDAiTwAwJ28AEBWPQAgAr0AwLs8AAAsPACAHj0AAJy6AMBuPQBgjz0A4EG9ACBjPQBgAr0AAIK9AMCFvABgmb0AwN68AIAyPAAA57wAgES8AEDgPACgoT0AQMQ8AECHPACA87wAAME8AACCuwBgGT0A4Bk9AEB7PQCAh7wAADg6AECkPACgJz0AwDo9AAA2uwBAzjwAgNe8AEC0PAAAsLoAgIm8AACEvQAAjLsAgLy8AOBjPQBgmr0AgHu8AGADvQAgVj0AQDo9AADruwAwiD0AYBG9AOBrvQBAzzwAQLM8AAAyvQBApr0AgI68AICVPQCgaz0AAFM8AIBtvADAM70AAI48ACAkPQAAhDwAAHC6AKCOvQBgMr0AANS7AACXvABgHL0AQOo8AECBvABgMz0AYBS9AMAYvQAA3rwAYFK9AMBqPQDAyLwA4Ds9AIBEPQAAHDsAgKC8ACAxPQBARz0A4Ig9AOBMvQDgD70AABa7ALCxPQBgNj0AwIw8AMCZPAAAZrsAwPw8AAA2OwCAiDwAAEC5ABCtvQAAFjsAAEu8AED3PADANz0AQHC9AIB/vACAaDwAgGO9AGBDPQDAiDwAYJG9AFDLPQAgm70AAGS7AADqvAAAyLsAAAY9AOBkvQAAAjwAgMq8AMDnPAAAsrwAQOo8AMB9vQAAm7sAYAQ9AACIPQAAr7sAAJ69AOBjvQAAZL0AAK08AGAfvQDgTT0AABW9AAD0ugBA07wAgGK8AACMugAgOb0AAH69AABJvABAxTwAMKw9ANCvvQDAcD0AwOY8AACdvABQDb4AMI69ALC7vQAAlrwAAHI8AADvOwAAz7wA4AA9AMDKPABAlLwAgIa8AACHvABAxDwAoLW9AABYOgAAELwAwMK8AEDfPACgK70AQIm8AECEvADASz0AADE9AEDQvABgBr0AALO7AACAuACAQLwAAJC7AGA9PQAAKTwAgI88AOBvvQAgED0AsAS+AOAAvQAAKj0AAEM9AACGPABACz0AwHo9AECAPADgdT0AAGy7AABMvACAHTwAIC49AIDfvADgBb0AgLA8AAAyOwAgu70AAMw6ACB+PQAAFD0AAOg8ABDNPQAgVT0AQMo8AKDLPQBAhrwAQJ08ANCmvQAAUbwAABo8AGByPQDA5DwAQFs9AIBAPABAtrwAkMg9AJCmvQDAXz0A4EG9AIDgPACA/rwAANC6AACJuwCgIL0AALo8AAA0vACA5bwAAIw8AIB0vABATr0AAO48AMCrPAAA6LoAgLg8AFCrvQBAKb0AgEu9AIBsvAAA0bsA4DA9AOB1vQAAuDoAAD89AMBYPQBAuTwAAL48AED8vABASL0AANw8AMBDvQAAwrsAoM+9AAAMPQAAqjsAAKw8AABgOgAA7LwAAMS8AACWuwAAnDwAIFi9AMDYPQAA97sAIKc9AAA4PAAAXTwAoA69AABXvABA2zwAgE28AEA8PQBQlT0AgDQ8ACAXPQAAPDsAAEU8AEDqvAAA+7sAwI08AMBmPQDgc70AgB08AIAnPAAA3bsAACu9AECqPAAA2rsAgGG8AABuOwBAkTwA4B0+AACougCAR70AgC88AECZPAAAOLoAQJI8AMCIPAAAkrwAYAE9AOBpvQBApbwAAGC6AIBEPAAAb7wAQL08AOATPQAABzwAoG49AADGOwDAJr0AQOC8ACADPQCAkDwAwD09AGAyvQAAqjw=","chunkHash":"8d56c291b640a147015cb6a2b602362eec51e299802a94c64fcd05ba01391273"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                        }, checkpoint_path)\n                        print(f\"  Saved best accuracy model to {checkpoint_path}\")\n                        \n                    if metric == 'f1' and val_f1 > best_val_metrics['f1']:\n                        best_val_metrics['f1'] = val_f1\n                        best_model_states['f1'] = model.state_dict().copy()\n                        improved = True\n                        \n                        # Save checkpoint\n                        checkpoint_path = os.path.join(args.output_dir, f'vgg3d_masked_best_f1.pth')\n                        torch.save({\n                            'epoch': epoch,\n                            'model_state_dict': best_model_states['f1'],\n                            'optimizer_state_dict': optimizer.state_dict(),\n                            'val_loss': val_loss,\n                            'val_acc': val_acc,\n                            'val_f1': val_f1\n                        }, checkpoint_path)\n                        print(f\"  Saved best F1 model to {checkpoint_path}\")\n                \n                # Update early stopping counter\n                if improved:\n                    patience_counter = 0\n                else:\n                    #...\n```","range":{"startLineNumber":749,"startColumn":0,"endLineNumber":773,"endColumn":0},"embedding":"AACrvACAGzwAgJU8ABCfvQCgor0AAOy8AMAivQCATD0AAFm8AABIPQCgAT0AgE48AGAyvQAA1bwAAP07AIAnPQDgDb0A4Ik9AABTvACAIjwAAPA7AIC8PADAWD0AABQ8AABzPADA47wAAAU9AEDQvABA/jwAAGS7ACBZvQBA+bwA0Le9AKCHvQAAeb0AAAA9ACBzPQDA3jwA4D+9AACEOwAAwjwAEMK9AICUvAAA8T0AQOo8AADOuwAgxj0AAC48AGCLvQDA1TwA4FK9AKApPQCgZr0AQJ48AACYPACAiDwAQNA8ACANvQDAh7wAAOI7AABQPADwir0AgFk8AGA5PQBgfj0AgBi8AMDbvQCAHDwAgOy8AOBwvQBAdL0AACi7AAAyPAAAnzwAAEg8AKAfvQAAkjwAsLc9AECrvADAlrwAwMa8AADcOgCAjj0AACw7AMDpvABwqb0A8BK+AGAOvQAAobwAULG9AECEPAAApDsA4Bq9AFDLPQDArT0AIA89AMDNvABQkL0AwGk9AICkvADgOT0AQOM8AIAcPAAAujsAgII8AGAcPQAgBT0AYBg9AADgOwAQhj0AQBm9AECavADA4bwAAE28AAAYvADAXr0AAIa7AEDgPACAp7wAwAq9AMC3vAAANTwAAD48AKCmvQBAYD0AwLQ8AKCFPQAgd70AACA8AGBGvQAATzwAQAk9APCQPQAgGr0AgMa8AMBTvQAAhbsAoDo9AGCHvQAQhT0AgEC9AACkvACACbwAQJw8ANC3vQDAxDwAICu9ACCIPQCQiL0A4C89ACAMvQDw2z0AwEs9AOAJPQDAKr0AYDa9AIAyPABgOT0AwO88ACB/vQAAeL0AAF09AAD4uwDAozwAwPo8ACBSPQDAUr0AwJS8ACB7vQCoDb4AIM89AECcvABAlzwAAGy9AEADPQCgR70AYIm9AACIPABQqr0A4Fm9AMCNvQAAursAAFO8ACATPQBgAL0AQOo8AAAVPQCAFLwAACC8AAB3PQAA9zwAQJG8ACBoPQCAyrwAgJk8AAAdPACgLz0AAAG8AEBnPQCApz0AQFK9AKBpPQCABL0AgIW9AAB2vADwo70AYBS9AACrPACA17wAAIA5AACqPADgqT0AwOg8AAAYPABgDr0A4C09AIAUvAAAED0AoDE9AMB6PQAAPLwAQJg8AOATPQBgOj0AgL48AACguQCgKz0AQL28AABEPAAAGTwAACu8AACivQCAIrwAgOi8AGBQPQAwl70AALO8AOAFvQBAST0AwCE9AACHuwDgfz0AgNe8ADCCvQDAvjwAQOM8AABYvQAwrr0AALG7AECoPQDgWj0AgAQ8AMD/vAAgRL0AAFQ7AGAPPQCA0zwAALS7AACBvQCAO70AALS8AADUuwCAJ70AgG88AECLvABgJT0A4Cm9AKAYvQBAEr0AADC9AGBDPQDAxrwAIGE9AIAwPQAAsLoAAEe8AOB7PQBQiz0AwF49AEB7vQBAuLwAAGA5AICuPQAAPD0AwIM8AAByPACABTwAQPI8AIARvACAlzwAgF+8APCnvQCAOzwAwJy8AIDfPABASz0AQFm9AMCfvAAA5jwAwGi9AEBQPQAATjwAwK69ANCyPQCwnb0AAIA5AADnuwAAxzsAwNg8AEBYvQAApbsAQLy8AID3PAAAeLwAwOM8AIB2vQAA4DoAQAg9AACDPQAA47sAkJa9AAB9vQDASb0AYBc9AGAyvQCAQj0AgGm8AAAqOwBAkbwAgGO8AAC7OwCAC70AgD29AECyvACAZzwAoKI9AEC7vQAgQz0AwLw8AAAJvAAQD74AcKK9ADDBvQAA2rsAAFg6AABQPADA6bwAYAc9AMD1PAAA7LsAQNu8AAAGvAAgHT0AoLa9AAAEOwDApLwAgJu8AAC2PADAYr0AgF+8AIB/vACgUT0AQNM8AACKvACAdrwAANu7AADYugAAd7wAAC+8AGBsPQAAnDoAAKY8AMAqvQAgJj0AwPS9AEALvQBgTT0AYFk9AMDcPABA/zwAcIg9AABVPACAKz0AAGi6AAAUvAAA3DsAACg9AEAHvQCAMr0AQNU8AACHuwAQtr0AACq8AGB1PQDAsjwAwA49ACDWPQDgcz0AgJo8AKDBPQAgD70AgD08ABCSvQAA0TsAANU7AOCJPQCAmTwAoHU9AMCGPAAAgLwAYMU9AICqvQAgUT0AAEy9AIDHPADA+7wAAJA5AIAovAAARL0AADo8AACcvADAm7wAQKU8AACquwCQhr0AwL48AIDdPAAAfrsAwLU8AMCqvQBAF70AIDC9AABQvAAAbjsAgKg8AHCDvQAAzjsAACY9ACBIPQCAYTwAAFA8AGAyvQAgHr0AQOk8AIBevQAANTwAELq9AEDvPAAAiDsAwMk8AIAUvADA/bwAQMG8AAAsPACAuDwAIFu9ALDzPQCAeLwAkJo9AIAHPAAAVjsAgNa8AACbvABAqzwAgF+8AKArPQBwoT0AgCY8ACA3PQAA2zsAAFg7AEASvQAAqLsAAJw8ABCFPQCQjL0AAA08AABUuwCAdLwAQAW9AEDPPAAAIbwAAIe7AAAuPAAANzwA0BE+AMCIPADgfr0AAOQ6AAAWPAAA4TsAAIg8AADgOwBAnLwAAHg8AGBovQAAPrwAAKO8AADgOgCAYrwAwPA8AAD6PAAAiDoAwEE9AAByOwDgAL0AAFi8AEDqPACAKTwAABI9AKA6vQDAiDw=","chunkHash":"b57fd9519bda9c1b03f53831d1bcc4d4a8869bd4e7eee3a880ed5a036823d9fd"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\n                    patience_counter += 1\n                \n            except Exception as e:\n                print(f\"ERROR during validation: {e}\")\n                import traceback\n                traceback.print_exc()\n        \n        # Update history\n        history['train_loss'].append(train_loss)\n        history['train_acc'].append(train_acc)\n        \n        # Update learning rate with scheduler if enabled\n        if scheduler is not None:\n            if args.scheduler == 'reduce_on_plateau':\n                scheduler.step(val_loss if epoch % args.validation_freq == 0 else train_loss)\n            else:\n                scheduler.step()\n    \n    # Choose the best model based on validation loss\n    best_metric = args.save_best_metrics[0]  # Default to first specified metric\n    if best_model_states[best_metric] is not None:\n        model.load_state_dict(best_model_states[best_metric])\n        print(f\"Loaded best model based on {best_metric}: {best_val_metrics[best_metric]:.4f}\")\n    \n    return model, history\n#...\n```","range":{"startLineNumber":773,"startColumn":0,"endLineNumber":797,"endColumn":25},"embedding":"AIDmvABApDwAQLg8AJDRvQDwhL0AAES9AED5vAAgOj0A4Am9AABhPQBAkjwAABw7AIApvQAA3rsAAI07AEACPQCAI7wAMKU9AMBRvQAAGD0AoC09AACtPACAAj0AQJY8AKArPQCgA70AABs9AIDQPAAAFT0AgHM8AGBvvQCAHr0AULO9AOCLvQBAk70AQJG8ANCTPQAA+jwAAPW8AAD2OwDgIT0AoO+9AIATvABQ/D0A4FI9AIB7vABgkj0AALw7AMBvvQAALrwAQAG9AOBbPQDgGr0AAHo7AECrPADA2jwAwIC8AMCyvADAgbwAgCk8AAAYOgBQi70AgLW8AKBzPQBgPT0AwOa8AOCxvQAAX7wAQOS8AIBGvQBAVL0AgB29AEBKPQAACz0AgJA8AEDxvABAojwAsMI9AAA0vQAAeDoAgPi8AACUvADAwjwA4DQ9AABzvQDAor0A2AS+AABSvACAMrwAgJ29AADQOgAAIDsA4Fa9AEDpPQBQqj0AQAo9AED2vADQhL0AAHA9AAAYugCgVT0AQJ88AMC5PAAA9zwAAJA8AMCPPAAAIz0A4Gg9AMCJPACAkD0AoCK9AADgvAAAvLwAYBy9AABovAAwgL0AgFS8AAD5OwAA87wAQDa9AAD7vADAkLwAQOs8AOCzvQAAZT0AwJE8AACNPQAQlr0AAMu8AACPvADAuDwAYD09AGA1PQDAAL0AYCa9AKBrvQAAsbwAoEo9AACLvQDAtD0AYDa9AIAyPAAArzsAAKI7AFCsvQAA9DoAoB+9AOCNPQDgor0AAEw9AABfvADg8j0AYCw9AIDKPAAgLL0AIFm9AADQuQCgHz0AwBg9AMBmvQAgUr0AwEc9AABmPAAAwrsAwKE8AIBMPQCA47wAAL07AEBKvQBg/70AQL89AECwvAAA5LoAwE69AKBDPQCAh7wAwCG9AECJvABgYr0AgD69APCWvQCANTwAAAq7AEDLPAAAVb0AgHY8AACjPAAAwLoAALC5AOB2PQCARD0AwKS8AICWPQAAMLoAgBM9AABBvADA3zwAAIe7AOBWPQDwlT0AQFu9AABEPQAAYDoAIFG9AIBAPABwg70AQIi8AACUugAA1bwAAHi6AICoPACAgD0AQEM9AABauwAAq7wAgAM8AABkuwAAdLsAwCY9ANCCPQAAwLoAAPI7AADXPACgMz0AoEw9AACDvABghD0AAHi8AAA/PAAA8LoAgAA8ANCHvQCAYDwAYAO9AEB5PQDger0AwJm8AICTvAAgGT0AAJU8AIA7PACQqj0AoA29AIB4vQCAzTwAwKw8AEBPvQAwtL0AADs8ANCJPQBgKD0AALI8AMDAvACAE70AAL07ANCBPQAAQTwAwPq8AEDAvQDQhr0AAEa8AIAhvADAsLwAYDU9AAA4ugAAizsAABe9AABMvQCAd7wAgHS9AABRPQAAIb0AwPc8AAAiPQAAbDsAAGW8AEBTPQCAlT0AICM9AMB0vQCAJb0AAIO7ANCXPQCAazwAAAw8AMCdPAAAlLoAwLw8AAA9vAAA9jsAgDQ8AHC6vQAAKDoAQJ+8AKACPQDgfD0AQGO9AECWvABAGj0A4Gm9AMDKPABA4jwAAGW9AMB2PQBQu70AgDo8AAAwOgAAKDoAgEg9AAAtvQBAv7wAAGS7AEC8PACAiLwAoBY9AIApvQCAU7wAYFk9AKCSPQDAy7wAEIW9AADpvABgRr0AAEs9AMD/vACgRj0AAPC8AAAevADAl7wAAI+7AAC6OwAgbL0AEI+9AICTvADgBD0AUJs9ANCIvQCgMD0AAAM9AAAYOwDg8r0AIIC9ACC6vQCA/bwAADA7AAAAAABAUr0AAEE9AIATPQAAnbsAgLy8AOAlvQAAizwAUKO9AAB4OwDAv7wAgDK8AIAFPQDgpL0AQJ68AABAuwDgfD0AwKY8AECrvACAKrwAAJw6AACPPAAAAL0AIAq9AEAPPQAAbzwAAHY8AICJvQCAfjwAoPW9AFCHvQBAKD0A4Cg9AAAlPACAYjwAoG49AMCBPAAAdj0AoBe9AACruwAA1jsAgCA9AIAMvQBgHL0AABw9AABcPAAw3L0AALS8AIA2PQBgTz0AAIQ6ANDXPQAwhz0AoCc9ACDJPQDA8bwAQIc8AMCcvQCAgDwAgIW8AOB+PQDAsTwAICs9AIAvPACAK7wAcMI9AHC8vQCAOT0AoH+9AIDAPADA1LwAAMo7AIAzPACArLwAgAs9AAB/vACAvLwAQNA8AIA2vABANb0AgE49AAAyPQDAkLwAAKE8AECAvQCgJ70AgLC8AABAvAAAqbsAgDo8AMB0vQAA7LoAIEw9AAB6PQAAvDsAAEk8AEADvQDA0LwAgDM9AGBavQDAFD0AwKK9AMBsPQAAYLoAgH08AEDnPACAB70AgO68AABQvADgPT0AQDm9AJDIPQAA9zsAMMQ9AADGPAAA1DsAACA7AOA1vQCAtjwAwPO8AEA+PQAgWz0AANw8AGA9PQAASDwAgI08AADlvAAAbjsAAMo7AKANPQDAbL0AAOg6AIB5vAAAgLoAYCi9AMCfPAAAWLsAADy8AADfuwAAwDkAACI+AADevACgJ70AAAo8AEDiPACADrwAgKM8AIBmPACAl7wAwI48AMAGvQBAKb0AAH+8AAAQuwAAWLwAwDY9AGAOPQCA2jwAgLg8AAAovABAF70AgGu8AACdPAAAu7sAgDg9AIBOvQCAdDw=","chunkHash":"c9da7a5970651dafc8a652cdfb941b073d3d9c91aa6b6acc0c4dfbe96cf99cb5"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n    def print_tensor_info(tensor, name):\n        if tensor is None:\n            print(f\"{name} is None\")\n            return\n        try:\n            print(f\"{name} shape: {tensor.shape}, type: {tensor.dtype}, \"\n                  f\"min: {tensor.min().item():.4f}, max: {tensor.max().item():.4f}\")\n        except:\n            print(f\"{name} shape: {tensor.shape}, type: {tensor.dtype}\")\n    #...\n```","range":{"startLineNumber":827,"startColumn":4,"endLineNumber":835,"endColumn":72},"embedding":"AADvuwCgVT0AAIW8ANCMvQDgSL0AQMa8AIDuvADgVj0AIIC9AACsPQAAXrsAAPW7AABOvAAApLsAgE28AACoPAAA5LoAgKw9AKBxvQAAOT0AAP48ANCEPQCA7DwAAO28AGAqPQAALLwAwI48AAA2uwAQxz0AQAg9AHCTvQBA0rwAwH69AFCDvQBgo70AAIu8AJCNPQBQjj0AAOg6AACQuQBAmDwAULy9AEDlvABwjz0AoCU9AACdvACg3D0AAK+8AGBtvQAAtLsAAPm8AEBRPQAA6LwAYLE9AMCPPACApDwAAFO8AIA/PACAhLwAQOw8AIDqPACARr0AwK88AABYPAAAETwAQOC8AJCYvQCABbwAgGK8AMDavAAgAb0AgLm8AEDcPADAyTwAgFI8AIDfvAAAaTwA8Nw9AIBEvQDA07wAQFu9AIDDvAAA5TsAYBo9AAAtvABAYr0AuBm+AECkvADgvL0AoGC9AAAKPAAAfjsAIBO9ALC7PQAgOT0AACY9AMDIPAAgpr0AIDQ9AIC5PAAQkT0AAD49AAD9uwAAwTwAwJw8AADpPADgFj0AQNw8AMAIPQAApD0AgGO8AAAvvADA8LwAQIC8AIAHvAAA3bwAgAa8AAAAvAAAFrsAAAu9AMDGPAAA4jsAIHg9AIB6vQBgOz0AAB49ACA/PQAgqb0AQA+9AIBMvADAD70AwFQ9AFCXPQCwib0AwBa9ACAfvQAAijwAAA49ADC4vQDQ0D0AAMI7AECWPACAILwAYGg9AECfvQCgTr0AQGy9AFCCPQCgmr0AEM49AIC+vACQ4j0AAGw8AAAUOwAgE70A0IK9AAC7OwAAfz0AAEa7AFC1vQCAf7wAwAc9AAAyPQDA0LwAgKO8AGCBPQDArbwAgCm8AMAGvQDgqb0A0Ls9AOBFPQCA7jwAULy9AKAzPQCAXTwA4BK9AMCzvABAhr0AgJS9AKBJvQAAGLsAANA5AABFPABQoL0AAIW7AACkPAAgHD0AAKi7AICEPADgID0AACg7AOBBPQDA5TwAgI88AABIvQCAtDwAAEQ7AAA1PQDgTT0AQEi9AID4PACAa7wAwEa9AEDOPADggb0AIHi9AIB0PADA8bwAQJG8AAD9OwDAqzwAoAk9AADBOwAAsTsAAIA4AIDIvAAApTsAwH89ACBdPQAARLsAEKg9AIApPQCgID0AwA09AEC8PABgGD0AoCK9AACbuwAApLsAAPW7AEA2vQAAE7wAoAw9AIAFPQAgdr0AwLa8AKAAvQBAHT0AgKM8AIAjvQBgJj0AACi8ALCEvQBAfj0AAL88AICavABQg70AwJy8AFCWPQAwjj0AAJw7AECUvACAYb0AAAC4AIBSPQDwpb0AwN+8ACB6vQCAELwAwEC9AACHOwBAW70AIAe9AAA2uwAAKrwAgI68AECgvABgEb0A4Fu9AIDQPABgIb0A4C89AGA5PQCADb0AAFE9AOAyPQCgPD0AgOc8AACJuwCAHL0AgFS8AEAdPQAAxrsAACy8AADTPACAdzwAQK88AOAvvQAA4rsAoFA9APD4vQDA9DwAgFm8AABuPAAA/DsAAAO9AEBBvQAAkLwA0IK9AGA2PQAALTwAAGC9AECxPACAwr0AgIE8AMChvAAAarsAIEM9ACA4vQBgUr0AAFS9AABpPQAAKLsAgDA8AAAzvQAAYLsAMKo9AIBUPAAAIjsAMJO9AIBevQAghr0AgOg8AAB+vAAwhT0A8KW9AOAHvQAAHLsAQMu8AIA7PADgGr0AwCy9AACAvADARD0A4EI9AACrvABAOz0AAO67AACAPAAQA74AkIy9AAB/vQAgK70AgJ28AADBOwCgEb0AICE9AADXOwAAuDsAAK+7AABAugCgZz0AUI29AMCCvAAgCD0AQMO8AACoPACgQr0AgEW8AIAkPAAATD0AIH89AACQuwAA47sAACI7AACKOwBAMD0AwNi8AACSOwDgTz0AAPA8AIBZvQDADb0AsN+9AHCwvQDAGD0AAP48AMCBPABAWb0AoBE9AACbOwBgLT0AAD28AIBvvABA7zwA4CA9AECMvAAAi70AgGQ8AIAtPACwj70AgHO8AMBkPQBgaD0AAJG7AEAqPQCgNj0AIFg9AFCsPQAAwjsAgJA8ABCVvQDAjD0AACe8APCJPQAgDj0A8Ic9AABoOgBAjTwAgL09AHDsvQCgMD0AgFi9AABevABgKr0AAES7AICIPADAcr0AgLc8AOBIvQBgMr0AAGy7AAA9PAAgHb0AgBi8AMDFPAAAq7wAgGA8ACBYvQCgBr0AQOK8AAAkPAAANrwAwL08AICjvQAAvDsAAKw7AIC1PAAAO7wAAFk8AIA6vQAAvLoAwCE9AAD5vAAAFz0AwDq9AAD0OgAAKLoAACS7AIBvvAAAELwAgBG8AMCRvAAAjrsAUKK9AIAVPQAA3TsA4NQ9AOAcvQDA9TwAgDW9AKAQvQCADj0AgGW8AACMPACAYD0AoDA9AOAiPQAAUDwAQDo9ACByvQAA5TwAAAA8AED/PADAPL0AQPA8AAAPPACgGT0AQGa9AADluwAgQL0AQBG9AAD9OwAA1TwAgDY+AAALvACgbr0AgDY8AAAmOwBgL70AALw7AOA8PQDAnLwAwCA9AMArvQCAprwAgFy8AAC8OgAAwrsAYF89AIBnPQAApD0AAC48AADjvAAAMLwAICe9ACA3PQAA77wAoHM9AGAOvQBgSj0=","chunkHash":"e8613afd01cba8550a124263f3410700ef3126b1d6a17b2e3c116abec6a563d0"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        os.makedirs(os.path.join(output_dir, \"debug_previews\"), exist_ok=True)\n        \n        # We'll only visualize the first sample in the batch\n        # Get a middle slice for display\n        if volume.dim() == 5:  # (B, C, D, H, W)\n            middle_slice_idx = volume.shape[2] // 2\n            volume_slice = volume[0, 0, middle_slice_idx].cpu().numpy()  # Only first sample\n            mask_slice = mask[0, 0, middle_slice_idx].cpu().numpy()      # Only first sample\n            \n            # Get the label and prediction for the first sample only\n            #...\n```","range":{"startLineNumber":840,"startColumn":0,"endLineNumber":850,"endColumn":0},"embedding":"AOAjPQDALT0AAPS7APCOvQBQsr0AALS8AIA1vABgaj0AoHm9AAATPAAAFLsAIEW9AACavAAAV7wAAGi7AKA5PQAA2rsAANE9AMD4vABA9TwAAN+7ACATPQCAFz0AAMA6AIBwPACACL0AwNM8AMDAPAAwiD0AgKo8AOBwvQAgXr0AIEC9ABCKvQAARr0AgFC8AABQPQBAej0AIFK9AABwOgDgEj0AwPG9AAAEvADQrT0AUNY9AEDbPABgvD0AgHi9AACAugCA1jwAABA6AEAZPQDAsbwA4Do9AGBOPQAA/zwAgJC8AACxuwAAVLsAAMS7AICCPABAjL0AQKY8AECpPACAED0AAFq8AHCDvQBAyzwAAGG8AKAHvQCgF70AAOO8AAD6OwDAvjwAwIG8AIDhvABA2DwAUJg9AABrvQCAHb0AwDC9AEC+vAAAdzwAAAo9AECDvAAgFb0AQJ29AACZPABAn70A4G69AIAhPACAM7wAwGW9AHC0PQBgaD0AYI89AIAkvACgmL0AkIk9AACqPACADz0AAB89AAC8OwDA8rwA4E89AIBUPADgYz0AANM8AAADPQBAWT0AADg7APCAvQAAfrsAIC69AECZvAAARb0AACA7AKA3vQAAe7wAANm7AIAfvQCAHDwAQOo8ACB5vQAADT0AgFQ8AAAUPQAg570AAGY8AIBePABA57wAgLs8ACCJPQCw8r0AAE+9AGBHvQAAwDwAQI49AGCwvQDw8D0AAMu7AADsugCAvjwAALK7AKDovQAA3rsAwGK9ACBgPQDAUr0AQI49AICUvACg6T0AACi6ACAPvQCAHb0AoDa9AAAqOwAAYrsAAGC8AKCuvQCgZL0AwCQ9AADlPABA9LwAAOO8ACAqPQAgBb0AgBI8AGAavQDgv70AoDo9AGAlPQAQjz0AYN29AABwPACAQDwAAHq9AMCGvADgcL0AQFS9AMAPvQCAID0AwII8AIBiPACAsL0AgB08AADhPACgUD0AgAq8AEC3PADApTwAgNS8AOAYPQCgZT0AAMi8AAD5vAAA5zwAQNk8AAChPQAAcLsAQOu8AOCQPQDAD70A8IO9AAANPQCAEb0AgNS8AMCtPAAgKr0AAES8AAAIOgCgJT0AUJY9AMArvQDA4LwAIHw9AFCDvQAAsjwAQI89AMBsPQAAg7wAwDk9AIAfPQBA0jwAAH48AMC0vADAiT0A4Ae9AIDNvAAAGzwAQNk8AACAOgDgR70AANk8AMCMPACwiL0AQAi9AEDMvABAJD0AYBY9AIBJvABAgz0AAKe7APCcvQDwlz0AIB09ACAJvQDgM70AACi7AEDJPQAw6T0AYAC9AAD6uwCATL0AAPk7AICgPAAglL0AAL47AHDNvQCA0TwAIDO9AEABvQCAQ70AgLA8AGBkPQDAzDwAAHY7AACluwCAP7wAYDK9AEC6PADgML0AwPM8AOBRPQBAyrwAYB49AMBGPQAA+DwAADG8AKAQPQAAF70AAMC8AACgugAAljwAwCY9AEA8PQCAXLwAQIc8AEA1vQCgU70AQBo9ADDpvQCApjwAwBq9AABVPQCgVD0AoAC9AFCLvQAAALwAgAu9AMCnPAAA9jsAwJC8AKBhPQBgB70AgBm8ACAjvQDAjzwAYAg9AKBsvQBACL0AQNm8AGBsPQAAFjwAIAI9AEA0vQDADz0AgPY8AMDcPACA3bwA4E69AGApvQCA7bwAQIk8AAAeOwCwpD0AQE69AIBlvAAA2LsAgKi9AECkvABA/7wAMI29AOBovQCATjwAwMI8AIAfPAAAejsAYEG9AADwuwDwqr0AoEa9AJC1vQDAFL0AANC7AMCPvAAAzLoAwJA8AABdPADgJL0AADe9AMCyvADAmTwAQIy9AECoPADAPD0AAIW8AECyvABgT70AABu8AIBbvABA0zwAUIs9AICkvABAlbwAABC7AMCEPAAAPjsAgIO8AIDfPABArT0AACi8AEB5vQAAXbwAWAO+AEDDvQDAID0AAAI9AACBuwBgOL0AAHI7AMCYvAAAADoAgCM9AADougCAJzwAAKQ6AAALPQBgir0AwIY8AABdvADAdb0AAPm7AIBePQDAsjwAgKw8AOCNPQDARD0AgCk8AMCJPQBAirwAQJ48AECfvQAAqTwAALe7AGBxPQAAUD0AAEI9AACIOgDASb0AwKY9AMD5vQAAhTwAIDW9AIDvPAAAczwAAHw7AAAoOgDAaL0AgB48AMCEvQCAi7wAgCe8AAA3PACAI70AAO27ANCAPQBAiDwAAIG7AGB/vQAgVL0AQLe8AIDePACA77wAABw8AHCyvQAAlLwAAB67AACLOwAAALkAAEq8AMCdvQAA+rsAANE7AMDkvAAAATwAAHi7AADgOwDAIL0AAH67AACMOwCAPzwAgCC9AADWPABAkbwA8LC9ALCEPQAAwDoAADI9AMD8vACAbDwAgHu8AMDfvACAJT0AQOC8AGAmPQCgUj0AAAi7AADnPACAnjwAYFQ9ACAzvQAgBD0A4Ag9AADjOwBgcb0AICG9AADGuwBAvLwAABa8AIDvPAAA3rwAAJ+9AMCfPADgST0AQAI+AAAAPADgbr0AsI49AOA7vQCAN70AoAa9AADsPACAcLwAgPc8AIAevQCAOL0AADY8AECnPACAlzwAEMo9AFCDPQAglz0AQOO8AACAOgAAsDoAgGi9AADyPACAMrwAoHk9AADcvABgQT0=","chunkHash":"8051b26201df88b089b8d973e5a9c0a9d8d29386ccc5ee2dcf312e80fc99fa96"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n            sample_label = labels[0].item() if labels.dim() > 0 else labels.item()\n            sample_prediction = predicted[0].item() if predicted.dim() > 0 else predicted.item()\n        else:\n            print(f\"Cannot save preview: unexpected volume shape {volume.shape}\")\n            return\n            \n        # Create figure with two subplots\n        fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 5))\n        \n        # Get volume statistics\n        vol_min = volume_slice.min()\n        vol_max = volume_slice.max()\n        \n        # Plot volume slice (grayscale) with EXPLICIT vmin/vmax to preserve intensity scale\n        #...\n```","range":{"startLineNumber":850,"startColumn":0,"endLineNumber":864,"endColumn":0},"embedding":"AEAuPQBAAj0AAGy8AJCOvQCwtb0AgJ28AAAAAAAAdT0AAFa9AADvOwAAbrsAoBa9AECDvACAIrwAAEC7AIAXPQDAk7wAUM49AMAUvQAAQT0AAOy6AMD0PACAKj0AADi7AAAjPABAiLwAQOw8AEDxPACQiz0AgJY8AEBbvQCgY70AADW9AMB2vQAATr0AgKG8AABBPQAAbT0AgDe9AIALvACAUj0AMPe9AAAiPACgsD0A8Nw9AMDhPAAQxD0AAHW9AIAkPADAjzwAAHA6AEAiPQCAEbwAwD09ACA8PQAgHj0AgI28AADsuwAA8LoAADa8AECtPACgj70AQAE9AEDLPACAmTwAANe8AECLvQBAiTwAAJG7AEA8vQCgEL0AwJy8AICAPADA8DwAADi8AIC8vABA8jwAwKA9AEBovQCAQr0AACa9AACEvAAAjDwAgBs9ACAJvQBAEb0AQMm9AABSPAAAn70AYG+9AIBQPAAAKrwAYFO9ADC+PQAgYz0A8I49AACouwCgjb0A8I49AIBfPAAgHz0AIBs9AACQuQBA7rwAoFM9AIBWPABwhj0AAKI8AAAtPQBgQz0AAHg7ACCYvQCAXbwAYDi9AICyvABAeb0AABc8AOAhvQAAN7wAAFA6AACtvAAAzDsA4C89AECDvQDgEj0AgHU8AEDMPADQz70AADk8AADMOgAAQLwAAN48AICPPQAA9b0AoFS9AEAFvQCAzzwAkJg9AEDFvQAg7D0AAO+7AAA0OwCAQzwAgBm8AIDmvQAAgrsAgFW9AOBwPQBQiL0AQII9AAAxvADg7T0AAKC7AADRvADAE70AoA29AIBIPAAAyDoAgLC8ACC8vQDga70AwP08AIBGPAAAx7wAADG8AAA2PQBAJr0AAAi6AGAcvQCQob0AICA9AKAWPQCwhj0AoOC9AMCIPAAAQDsAwGW9AABQvACQiL0AYC69AIAYvQAANj0AANI7AED/PABgjL0AAHo7AMC3PABALD0AAJ07AAD1PACAqTwAwPm8AOAdPQBgSD0AgNK8AGAwvQDA5TwAwA49AECfPQAABLsAgO28AACKPQAA87wAoGu9AMDoPAAA9bwAQL28AECRPADgEr0AgAW8AIAsPACgBD0AAKU9AIBOvQDA3rwAoGA9AGBuvQCAPjwA4Ho9AAByPQDAC70AQCQ9ACAvPQBA8DwAAHs8AABZvAAAiT0AYA+9AADwvAAAMzwAALM8AIAlvACgTL0AQBM9AAAqOwAQl70AABq9AABHvACgPD0AICw9AAAuvABQhD0AAF47ANCSvQDAnD0AwDY9AOAgvQDAar0AANW7AHC7PQDA0T0A4Ay9AAAKOwCAN70AAPc7AACpOwBAkr0AgGU8AIDXvQBApzwAoC+9AOADvQAgRb0AQN88AGB8PQBAiTwAANC5AACQOQCAi7wAICu9AED7PABAJb0A4AQ9AMBlPQBA07wA4EU9AIBGPQBAyzwAAEK8AKAvPQDgFr0AwNe8AACjuwCADzwAYC89ACBbPQCAALwAgEs8AMA0vQAgVL0AIC49AEDzvQBAxTwAQA69AGBAPQBgXD0AAAW9AFCGvQAAfbwAIAS9AADJPACAuDwAAJq8AMB2PQCAP70AAOi7AMDKvABAhzwAAN08ACA+vQBAqrwAQMK8ABCaPQAAADoAgMg8AGBFvQCA8jwAwN08AIDOPABA87wAIEC9AGAnvQBAqbwAgFw8AAB4OgCwrz0AQEq9AABAvAAA87sAUI29AMCGvABA57wAUIe9AEBrvQBApTwAQIc8AICLPACAtzwAAB69AACIOgAQqb0AYEK9ABC6vQAAD70AQIm8AAC1vAAAYLkAwLY8AACtOwDADb0A4Ea9AABKvABAoDwA4GS9AACuPADAPD0AQI28AIDwvABgWL0AAKu7AABKvACAHj0AoEw9AICsvACA17wAAJ+7AIANPACABDwAwIa8AKAYPQDgpz0AAKi6ALCOvQAAQ7wASAm+AIC9vQAgCT0AANE8AADLuwCAX70AAEI8AMCDvACABTwAYBk9AADQugCAUjwAgF48AGAbPQDgkL0AQPg8AIBEvAAARL0AAJA5AIBePQDA1DwAwN48AMBnPQCAPD0AgCU8AEB2PQAATrwAgOY8ALCbvQBAJj0AgDC8AAB4PQBAgj0AIEU9AIAWvAAAQL0A0KE9AFD+vQAA0TwAoGO9AAAePQCAaTwAAEE8AADKuwBAZb0AABY7AFCCvQAAqLwAAFy7AIAKPADgML0AAKa7AABCPQAAYDoAALk7ADCWvQAAXL0AANS8AMDYPAAgE70AAA08AFCxvQAAzrwAgCW8AIAAPACACrwAALG7ACCsvQAApLsAAKo7AIDivAAA+jsAADM8AAD6OwAgIb0AgBW8AAAxPADAkDwAIES9AMDsPABAsbwAIJ69AMCEPQAAILoAIEg9AIDVvABAvTwAgI68AIASvQAgTz0AwJm8AAD1PADAND0AALw6AIA1PACAFzwAIEo9AGBtvQBACD0AgBI9AACsuwCAgb0AoBe9AADEuwAA7bwAAMC4AMCbPAAAA70AgIe9AICfPACgPj0AcPw9AIAxPADAgb0AYIE9AAAVvQCgHL0AQAq9AEDXPACAe7wAwLs8AAABvQDgNL0AAIM8AIDhPACAhjwAMNQ9ACBVPQAAjD0AIA69AABgOwCAGbwAgEG9AIDUPAAAC7wAQHc9AADrvADgGD0=","chunkHash":"19f7ce1f98378d371bf026f2c970512c86a790264cb460e4b28994c372eb9069"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n        # Set vmin and vmax to 0-255 range for consistency in visualization\n        display_range = (0, 255)\n        im1 = ax1.imshow(volume_slice, cmap='gray', vmin=display_range[0], vmax=display_range[1])\n        ax1.set_title(f\"Volume (class: {sample_label}, pred: {sample_prediction})\\nRAW range: {vol_min:.1f}-{vol_max:.1f}\")\n        plt.colorbar(im1, ax=ax1)\n        \n        # Plot mask slice (also grayscale since it's binary)\n        im2 = ax2.imshow(mask_slice, cmap='gray', vmin=mask_slice.min(), vmax=mask_slice.max())\n        #...\n```","range":{"startLineNumber":864,"startColumn":0,"endLineNumber":872,"endColumn":0},"embedding":"AMAXPQAAJj0AANq7AOCNvQAArL0AwJu8AAC0OgDgaD0A4De9AMCQPAAAWDoAABW9AACuvACALLwAAAA6AOAbPQAAFLwA0OE9ACAhvQAgOT0AAJO7AOARPQBgGj0AAFC7AAA+PACADL0AwJk8AID/PABAmD0AAMA8ADCCvQAgXr0AgD69AHCUvQAgQb0AgOa8AKBqPQDAbz0AgBG9AADkOgCgLT0AQO29AACiOwAgpj0AMNE9AIDRPAAguD0AoIS9AADoOwBAmTwAAPA5AKARPQBAgLwAIBc9AEA4PQAAJD0AgMC8AABouwAAhbsAAMy7AIBnPADQjL0AgLw8AAC2PABA0DwAgI28AJCPvQCAqDwAACq7AGAevQAAGL0AwOK8AADhOwBAzjwAgBe8AMCGvABAED0AMJw9ACBgvQBAKr0AgE+9AECXvAAA5jsAgPM8AECXvABAOb0AULq9AIBaPADAqL0AgEG9AADNOwAABrwAwFi9AFC/PQDAZj0AIIc9AIAyvABgkL0AAIg9AABhPABADD0A4AI9AAA2PABA9rwAgFc9AECoPABAij0AAKI8AAAOPQDASz0AABY8AMCHvQAAObwAYBO9AIB+vACAUb0AgCc8ACAMvQAA5rsAAJu7AEC6vAAASDsAAPQ8AGCGvQAgHz0AAJM8AMDrPAAA270AABQ8AABsOwAAdLwAgNc8ANCjPQAQ870AwFi9AGAPvQCAzDwA8KE9AIC7vQAYAD4AAK+7AADpOwAAejwAAFK8AADjvQAAXLsA4GK9AGB3PQCAdr0AEJY9AAAhvADg+j0AAFS7AADOvABgHr0AwCG9AADZOwAAfLsAgJa8AJC6vQCAcL0AIA49AACvPAAgG70AAGy8ACAePQBgKr0AAJk7AOAOvQDQr70AADA9AMDpPABQgz0AkNe9AAABPAAArTsAQF69AADwugBQi70AgB+9AGATvQAgAj0AAJA7AABwPAAgm70AANM7AICuPAAgJD0AAMy7AADxPACAyzwAgH+8ACAqPQDgTj0AwJe8AEADvQDA+DwAQB89AMCcPQAACbwAwPm8AJCsPQBA+rwAwG+9AIAFPQBA3bwAwKW8AIBYPADAIr0AAJ+7AADrOwBAET0AEJw9ACA8vQCA2bwAAHo9AOBQvQBAkjwAIHo9AABzPQBAtrwAIBo9AOAYPQDAwTwAAIk8AAA9vACAgT0AIA29AACdvACAADwA4Aw9AABiuwAgQb0AoBA9AMCJPAAglb0AQPe8AECGvABgGj0AwCU9AADtuwCgiD0AAJ87AGCQvQBwmj0AwDQ9AAAQvQBgUr0AALm7AFCxPQAQyz0AwOa8AADFuwBgY70AADg7AIBVPADwkr0AgHw8AHDXvQAAsDwAICO9AIAFvQBAWr0AAL48ABCJPQAAlDwAAAI7AADhOwCAeLwAgCu9AADmPADgFr0AABg9AMBYPQAA3rwAYD49AEBNPQBgBz0AwKa8AAAOPQBALb0AQMu8AACougBAhTwAQCw9AGBVPQCAjrwAAGw8ACAxvQDgV70AQCk9AKDovQBAhDwAQBS9AAA5PQDAPD0AwBG9AHCEvQAAYLwAIAe9AIDqPADAizwAQJq8AEBlPQBAQr0AAPq7AEDLvADAojwAQCg9AEBivQCgAr0AwPK8AECQPQAAFTwAgOc8AEA1vQBADD0AgAo9AID4PABgAL0AgDS9AIAkvQBAl7wAAD08AADEugCwrD0AgFK9AAASvACAGbwAMJS9AECGvACAnrwAoH+9AIBMvQCAaTwAgMw8AAA1PADAhTwAYEC9AAAaOwBQq70AgFa9AADAvQAACr0AABq8AMDevAAAYDoAQMU8AICZPADgI70A4Fy9AAAbvAAAmjwAkIO9AMDUPACgKz0AgK+8AECBvACAbr0AABg7AACtvAAgCD0AgGg9AMCmvAAAMrwAAEq7AAB8PAAABjwAgM28AMDePAAQoj0AAGi6AJCLvQDAs7wAgAe+AKC2vQDADT0AwO08AAAMvADgX70AABU8AICWvAAAxDoAgBA9AACvuwCAHDwAABc8AAAWPQAQkb0AQOE8AIANvADAZL0AAAC8AKBjPQCA6zwAAOg8AOB0PQAAND0AgDE8ANCVPQCAnrwAAOo8AMClvQCA/zwAwJy8AMBTPQCAbT0AACU9AIA1vACAP70AoKg9ADD/vQBgCD0AYEa9AMASPQCAQDwAAFw8AACsugCwh70AABw7AJCDvQBAr7wAgIG8AADyOwDgH70AADC6AEBlPQAABDsAgAs8ACB+vQDgSL0AoAm9AECZPADAy7wAAP47ACC+vQBAjrwAAHi7AACvOwAAALsAAKy7AECevQCAuLwAAPk7AIDFvACATDwAAKQ7AAAsPADAG70AAJm7AIAgPADAmDwAoEC9AMDWPACAvbwAMJ29AMCKPQAANLsAYDY9AOALvQAArDwAgIi8ACALvQDAOD0AQMa8ACAJPQDASj0AAKC6AEDAPABAuzwAwDE9AIBpvQDgIT0AAPI8AABgugBwhL0AgNC8AAAsvABAv7wAANy7AADdPAAADb0AIIm9AAAJPABgXz0AUP09AADLOwBggL0AwI49ACARvQCgTr0AQMC8AMCxPAAAerwA4BM9AKAXvQCASb0AgEg8AACuPACAXjwAAMY9AABsPQAwmj0A4CO9AAAuOwAAsLoAoD+9AED1PACALLwA4Hk9AMDgvAAA8Dw=","chunkHash":"a71dbf45d325e24683c2f0c703f8a44eb0ff08e6bfaf284ef261614e7f5fe151"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n        ax2.set_title(f\"Mask (min: {mask[0].min().item():.2f}, max: {mask[0].max().item():.2f})\")\n        plt.colorbar(im2, ax=ax2)\n        \n        # Add softmax outputs as text for the first sample only\n        softmax_probs = torch.softmax(outputs, dim=1)[0].cpu().detach().numpy()  # First sample only\n        text = \"Softmax outputs:\\n\"\n        for i, prob in enumerate(softmax_probs):\n            if i == sample_label:\n                text += f\"Class {i}: {prob:.4f} (true)\\n\"\n            elif i == sample_prediction:\n                #...\n```","range":{"startLineNumber":872,"startColumn":0,"endLineNumber":882,"endColumn":0},"embedding":"AAA1PQCAvTwAAOG7AICMvQAAsb0AQLq8AIAbvABAez0AQDW9AAATPAAAjLwAwOO8AIBhvADAj7wAAHS7AED0PAAAubsAkN89AOAFvQCA9DwAQLi8AEAEPQCAST0AgCQ8AICwPACAmLwAgEg8AADpPAAAjj0AgJs8AKBfvQDAX70AYES9ACB8vQBAV70AgHy8ANCZPQCAVD0AIB29AIBdvADgOj0AsNm9AADcuwDQuz0AANY9AIDYPACgsT0AMI29AACKOwAAGT0AgBA8ACAsPQCAV7wAgCQ9AIBGPQAAkTwAwLu8AABwOwAAvjsAwIG8AADCPACghr0AYAs9AIBrPABA/zwAAOm7AHCRvQBApDwAABS7ACAEvQCAVLwA4CG9AIAZPADAzDwAAOu8AECrvAAAXzwAgJ09AOBEvQCAMr0AgBq9AIB+vAAAUDwAAKc8AADBuwBgJb0AgMa9AACtPACQs70AQEm9AAB+OwAAbLwAgDm9AICoPQBAdj0AcI09AIAZvADQiL0AwGM9AACzOwDAUj0AQPk8AAAjPADAI70AoDY9AECOPAAAjD0AACw8AEDjPAAgGD0AAMA6AJCRvQAA47sAIBC9AADduwAgjL0AADs8AADlvAAAWLwAAJy7AADkvAAApDsAAN08ACBBvQAgBz0AAFs8AMD0PACw7b0AwIU8AAAMPADA4bwAAIo8ABCGPQBQ7L0AwEq9AGA0vQAArzwAEKQ9AECmvQAg/j0AABK7AABSvAAAMTwAAFC7AMAJvgAAOLwA4GG9AABmPQDwh70AMIw9AABkvADA8z0AAKy7AMCJvAAAobwA4E29AACMuwAAaDoAgKa8AJCzvQCgT70AYBU9AADYPACABL0AAJ+7AGA3PQCgFr0AgIM8AGAovQCQyL0A4DE9AIAfPQCAkz0AQNK9AACougAAgDsAAIe9AACuOwCgmr0AIAS9AAAlvQAgED0AgD08AIA6PABgmb0AAN67AGAIPQBgLT0AAEQ7AADJPACAyzwAoBu9ACBXPQAgTD0AQAq9ACAGvQCgBj0AYCc9AOBtPQAAQ7wAoBS9AOCoPQBADr0AgGW9AMDIPACgDb0AgP+8AIBbPADARL0AQIa8AIAsPAAACD0A8Iw9AEA8vQDA07wA8IQ9ACB0vQDAoDwA4GY9AGBJPQBAq7wA4GY9AIAvPQCANjwAAKA7AECAvACAZD0AAMW8AIDLvACAJDwAQNc8AABAOgAAbr0AYAE9AECDPABQg70AwKC8AADcuwBA9jwAYCU9AMCOvAAgdT0AgDs8AOCivQDwqj0AAD49AGAWvQAgab0AALw6ALCtPQDw3T0AQMS8AAC/OwDgWb0AgBM8AACkOgAwnr0AAJY7APCqvQAArDwA4AC9AAAivQDgcr0AAMc8AEBwPQCAkTwAAK27AAA+OwAAwLsA4BW9AIDDPAAASr0AQOQ8ADCJPQAAHr0AYCM9AMASPQDAJD0AgJC8AOAxPQCgK70AgNK8AAAEvADArTwAoCM9ACAdPQAAXbwAQKI8AMAwvQAgcL0AQDU9AMD2vQCAijwAYEa9AAA1PQAAWT0AgM28AICIvQCAcbwAgOy8AICtPAAA9DoAgHm8AMBNPQCgKL0AAJq8AED9vADAnjwAAFk9AMCGvQCApbwAQAS9AOCGPQAATjsAAKo8AOB8vQBgDD0AICE9AED2PADAu7wAQCu9AKAMvQCAcrwAAMQ7AAA4OwCAuD0AIEG9AADjOwAAALgAwJe9AECsvAAgA70AYGC9ACAZvQDAujwAwMI8AMCHPABAujwAwC69AAAAuADgr70AYEO9ANDMvQDA9LwAAK+7AMDMvAAAzDsAwNg8AAByPACAML0A4Bi9AADjuwDA8jwAAFO9AMC4PACgBz0AANS8AMCovAAAaL0AgDu8AICovACA5jwAcJs9AIDnvAAAurwAAIm8AACaOwDAjjwAQIa8AID/PADQnz0AAJS6AJCCvQAA0LsAQBK+ANCtvQBACT0AwPc8AAAkvABAcb0AAEQ8AAALvADAi7wAIFc9AADmuwAAMDwAAOU7AIAHPQAAP70AQA09AICOvAAgfb0AgGK8AABlPQDA8jwAgPA8AABEPQDAQj0AgEM8AOCHPQAAoLwAwNo8ALCjvQBAmjwAACK8AOAlPQBQgD0A4Fk9AACMOgBAIr0AQLg9ACD3vQBA1zwAIEC9AEDzPACALTwAAMC4AAByOwAAZr0AAFg7AOCGvQAAbrwAADi6AIAxPAAAJ70AgBi8ACBrPQAAgLoAAGA6ACBNvQBgSb0AQB29AIC6PADA67wAQKw8AMCsvQBgDL0AgAA8AAAZPAAAljsAAAK8AECVvQAAw7wAgGA8AIDpvAAAcDsAgCu8AADkOgDgH70AAGa7AACcOgAAqzwAoEa9AEDcPABApbwAsJm9AMBSPQAABTwAwDE9AIAMvQDA4zwAwJS8AEAevQBAAT0AANq8AICyPABAdD0AAIG7AEABPQBAozwAIDI9AMBNvQDA9TwAgN88AACUOgBAi70AgGm8AAC/uwAArLwAQKW8AMAPPQCA4LwAQJ29AAB5PACACT0AuAI+AABAOgAgiL0AUJQ9AOAKvQAASb0AABu9AKASPQAAerwAQAA9AGAJvQBAOr0AACI8AEDNPAAAADkAgMI9AKBxPQCgiD0AwOq8AACAPAAAhDwAAD+9AEAiPQAA7bsA8Io9AMD0vACA6jw=","chunkHash":"d62b5db744b0a40834ee7b43b367b4c5c88a18b35e247e2435b3dbe221b1265a"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n                text += f\"Class {i}: {prob:.4f} (pred)\\n\"\n            elif prob > 0.01:  # Only show significant probabilities\n                text += f\"Class {i}: {prob:.4f}\\n\"\n        \n        fig.suptitle(text, fontsize=9, y=0.98)\n        plt.tight_layout()\n        \n        # Save the figure\n        save_path = os.path.join(output_dir, \"debug_previews\", f\"{path_prefix}.png\")\n        plt.savefig(save_path)\n        plt.close(fig)\n        #...\n```","range":{"startLineNumber":882,"startColumn":0,"endLineNumber":893,"endColumn":0},"embedding":"AOAgPQAAOT0AAOO7AFCivQAgsr0AAI28AAB0OwAgez0AYF69AABDPAAABLsAQNa8AMCTvAAAcbwAAPA5AOAkPQAAALsAgNk9AIAEvQDgID0AAMC4AMDxPABAOT0AAAI7AIBAPAAAY7wAAL88AMDUPAAAkz0AgJo8AABnvQAgYb0AgCS9AJCKvQAgdb0AgHG8AKBwPQCgRj0A4Ci9AADVuwDAPT0AAPe9AACXOwDQtj0AYMI9AACsPADQxj0AAG+9AACMugDAmzwAAEC6AEA1PQAAx7sAgFs9AGAxPQDAtDwAQKW8AAC8ugAA27sAAMu7AADnPABwjL0AoAg9AECUPABA1DwAgOS8AHCSvQCAPDwAgBK8AGAwvQAA7bwAYBC9AAC1OwBABz0AgMq8AADKvADApzwAILY9AOA0vQBAYr0AAC29AAArvAAA4TsAgP48AIChvABgLr0AAMi9AICpPABwpb0AgE29AAA4OgCAV7wAgFa9AFC9PQDAWD0AYIo9AABVvACwiL0AQHw9AACmOwAAST0AYAA9AADUOgDAtrwAIDc9AIDePABAaj0AAIY8AMDePACASz0AAIA6AMBivQAAibsAgB+9AACovAAwhL0AQLk8AIAGvQCADrwAgAG8AECXvAAA/DsAYAk9ACCGvQDAKT0AgLw8AMDyPADg5r0AAPI7AAAauwCA4LwAgOE8AMCdPQCA3b0AIEG9AMAVvQCArzwAUJU9AMDAvQDg9T0AgAu8AAASuwAA0TsAAB68AHDyvQAANrwAoFC9AGBYPQDwhL0AgHk9AIB+vABA6D0AAGa7AIB8vACA7bwAIC29AADFOwAAIDsAQOi8ACCqvQBAXL0AgCA9AIDTPADgDL0AALC7AEBBPQAgE70AAHg6AEACvQDgu70AICg9AGALPQDQgD0AYL+9AAAJPAAAJjsAwHm9AADEOgCQg70AoD+9AAD5vACAFz0AAAM8AECDPACwh70AAPC5AAAQPQBAFz0AAKk7ACAmPQCgDD0AgCG9AOBXPQDALT0AgMO8AIALvQBA8jwAANM8AHCJPQAAiDoAYCS9AGCTPQDABr0AgIC9AICjPABgIL0AAOq8AECDPAAgPr0AgH68AIBTPAAAED0AUKI9AGBavQCA2LwAoDw9AABfvQAA4jwAYGQ9AMBgPQBAzbwAgE89ACApPQBArTwAgMA8AAAjvACgiz0AQBq9AMDMvAAA/zsAQNM8AABAOgDAM70AgPs8AIDZPACAhL0AgPa8AIBNvABgJz0AICA9AABCvABQhD0AAEg7AICgvQAQtD0AgEA9AOAtvQBgWb0AgDO8APDOPQCgzz0AIAi9AAB4OwBgVr0AwJc8AAB0PACguL0AAIC5APDGvQCAljwAACu9AIAovQCAUr0AwJQ8ADCFPQCAtDwAAGa7AAAKOwAAh7wAQDO9AEDjPAAgUb0AgPo8AMB+PQBgAb0AIFA9AOAnPQCADz0AgH68AGAVPQDgOL0AAJq8AABGOwBAmjwAwAc9AKBNPQAARrwAgB48ACA+vQDAL70AQPU8AIDtvQAAxDwAwCe9AKAePQBgVT0AALe8ADCWvQAAPLwAAKy8AICmPAAAFTwAAJC8ACBXPQDgWL0AAEC6AICtvACAJDwA4B09ACCFvQAAAb0AQLS8AGCCPQAAODoAAKo8AGA+vQDA9TwAQCQ9AKACPQAAobwAgEq9AIAEvQCAzLwAABU8AADWuwDQsj0AAE69AAB7vAAAILkAQGS9AACEvAAAB70AgFO9ACAxvQAA/DwAQLk8AAB2uwBgAj0AwEG9AACUugBgo70AoEe9AKC3vQDA/LwAgBK8AMDNvAAA+bsAQO08AAA+PACALL0AYDS9AAA4uwDA0TwAgHi9AECDPADAID0AQMG8AIAqvACAOr0AAOO7AAAOvAAACD0AoHk9AMDHvABAvbwAAHK7AACMuwAAUjwAQIW8AED8PAAAnj0AABw7AFCGvQAAJLsAiBu+AGCyvQCAzzwAANo8AABuvAAgWb0AwKY8AAAHvAAA8DkAACE9AIBfvACAPTwAgDU8AIC8PACgi70AYAI9AAAYOgDgZ70AANi7ACA4PQBAqzwAAOI8AACLPQDgQT0AAB47AICRPQAAWbwAgMQ8ADCsvQBgKD0AAIq7AIBkPQDgbz0AICk9AAD2uwCgCr0AoKg9AEAEvgCAAj0AQFq9AMD9PAAAGjsAAGi6AACWOwBgYr0AAMU7ACBrvQBAy7wAAJ+7AIAYPAAgOL0AgF+8AKBSPQAA1TsAABQ7ACCKvQDAOr0AQAe9AEC8PABA0bwAQLQ8APCzvQDAgbwAAP+7AABxPAAAprsAQIa8ABCsvQAAJ7wAABA6AMCXvAAAaDwAAAA4AACwOQDAP70AgAq8AACJuwBAtDwAAFW9AICyPAAAgLwAkKW9ALCPPQCALTwAQEk9AEAKvQCA6zwAAJ28AOAkvQCgOT0AgPa8ACAHPQBgQT0AABI7AAB6PACAGDwAADU9AOBfvQDA3zwAANA8AIAjPACAbr0AAA+9AAA+vADAs7wAwMa8AMCrPAAgE70AoHK9AMCcPABgDz0A6A0+AABZPACgkb0AwG49AMDGvADA7bwAAAe9AAATPQDAgLwAQMM8AEAavQBgI70AgBY8AIDDPAAAGLoAkMw9AGB7PQCwij0AoA69AAAkPACAODwAYC+9AGADPQCAA7wAoHo9AICwvADAAz0=","chunkHash":"09ae0780c0bd9aba521609399235214edac24c5303705d643a3bcaab9e63a25f"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n        print(f\"Saved validation preview to {save_path} [RAW intensity range: {vol_min:.1f}-{vol_max:.1f}, Display range: {display_range}]\")\n    #...\n```","range":{"startLineNumber":893,"startColumn":0,"endLineNumber":893,"endColumn":140},"embedding":"AEDiPACAST0AAFC7AJCWvQCQl70AAJG8AECJPABQjD0AQDm9AACcPAAAoLsAIAa9AACUvAAArLwAADy7AEA1PQCAILwAAL89AKBLvQBAKD0AAP47AEAFPQDAMT0AAGa7AICEPABA7bwAgNc8AMAYPQAwgT0AAGY8ALCTvQCAeb0A4Dq9AEB8vQBAar0AAHC8ADCKPQDAkD0A4DG9AADcuwBgRD0A0AO+AABaPAAArj0AsKo9AABpPACA2D0AIFq9AIARPAAAEzwAAIq7AAASPQAAvrsAAF49AIBDPQCA7TwAgMC8AAB2vAAA6DsAAJQ7AAA1PABQjL0AwNI8AMDAPAAAvTwAwJ+8ABCDvQAAdDwAADK7AMDqvACA7bwAwPe8AAC1PADA4jwAAOC7AKAHvQCgNT0AML49AOAwvQCgTr0AgCi9AAAyvACALTwAAK48AIDrvAAgGr0A4My9AAA6PABQsL0AwEe9AAANPAAAHrwAgCu9AKCwPQBgXT0AQJM9AIAtvADgkL0A4JA9AECQPACAGD0AwCY9AACSuwDACL0AAFY9AIAJPQBwgT0AQJs8AIDfPABAUz0AQIS8AABnvQAAIbwAYG+9AMCbvAAgWL0AgHc8AMAPvQAACLwAAIG7AMDrvAAAZjwAYBw9AOBnvQCAMT0AQMM8AMDJPAAAyb0AADy7AADyuwDA67wA4Ag9APCuPQCQ7b0AwC+9AMAkvQCAijwAkJc9AHC/vQAQ7z0AgFy8AAAYugAAsDsAgCY8ANDbvQDAtrwAMIe9AOB2PQDgVb0AUJs9AMD+vABw7T0AAJG7AMCPvACAHb0AQPu8AAACuwAAQjsAANm8AAC8vQBAS70A4BQ9AMCdPACA47wAgCi8AAAtPQDgBr0AABQ8AEC1vACwpb0AoGY9AEA4PQCggD0AoMK9AMCDPAAASDsAgG+9AAAmPADAer0AoC29AOAQvQAAFz0AAEA7AAAvPABgmb0AALY7AIDAPADAAz0AAE67AMDFPADA7zwAAK+8AKBQPQAAVz0AAJm8ACASvQCA5DwAQPo8AKCUPQAAYrsAgA+9AKA9PQCA07wA4Ci9AEDxPABgJr0A4Aa9AMCOPACgQL0AwJG8AAAvPABASj0AQKE9AAAovQAAq7wAQFw9ACBRvQAAHLsAkIY9AGBZPQCAm7wAYBc9AKBCPQBA3TwAgJw8AAB6vABAbz0AIA+9AABLvAAAjDoAAJo8AABGvAAARb0AgAw9AACFPAAgoL0AABu9AACnuwAATT0AQA09AAAUuwAAiz0AABa7AKCUvQCgiT0AoEE9AMD0vAAARL0AgBu8APCzPQDQ0j0AQJa8AABYOgBgdb0AgKQ8AAB2PABAnL0AAJA7AJDRvQAA6zwA4EC9ACASvQAgM70AgJ48AGBjPQCA3jwAgEO8AACwOwAAMbwAwBy9AICrPACAEL0A4Ec9ACBKPQAA0bwAwFs9ACBdPQCABT0AgCW8AGAbPQAgT70AwLu8AACQuQAAhDwAQAo9AOA/PQAAErsAQNc8AAAjvQDgLL0A4AA9AHD6vQBAlTwAYBK9AKBQPQBAWz0AQNu8AECTvQAAvrsAwOS8AEAXPQDApjwAQLC8AOAsPQCQgr0AgBW8AGAbvQCACjwAoAg9AGA+vQBAF70AAH+8AOCJPQAAcjsAwN48AEA8vQDAlzwA4CA9AGAOPQBAq7wAIFi9AMDovABADr0AAHg8AAALPADQyj0AYIi9AMCLvACAPrwAQHS9AIBVvACADL0AAIu9AICBvQAAzjwAQAs9AADROwAAtDsAoES9AAAIvACQm70AwGS9AAClvQCA57wAACC5AADGvAAAFrsAwJc8AADPOwCA6bwAwFG9AACcvABAszwAYIy9AECbPACgOD0AQMi8AECGvAAAgr0AAAC8AABWuwCgJj0AQHI9AMDVvACAlbwAAA47AAAaPAAA5DoAYAu9AID5PAAQlT0AAIe7AICYvQAAebwAQAq+AICmvQCA1zwAALM8AADEugAgX70AgIk8AAB9vAAA2LoAQB49AADgOQAAbzwAgIE8ACAIPQCAhL0AgOA8AACHuwDAY70AAGi8AABQPQAAtDwAQO48AFCVPQDgSz0AgE48ABCKPQCAorwAQJY8AOCsvQBAOT0AAMS7AMB8PQAgOz0AADg9AACwOgCgL70A8J09AODxvQAA1TwAADS9AMArPQAAwDkAAKA7AAAUuwCgeL0AAKY7AOCJvQBAu7wAAAy7AACAuQBAG70AAE28ACBTPQCAXjwAAAK7AGCFvQAAbb0AgPG8AICcPADAuLwAgFk8ANDBvQCAP7wAABQ8AABuPAAAkzsAAL67AICYvQAATbwAQIE8AACivACApTwAAM27AIBIPACgOL0AALu7AAAougCAfjwAwFa9AIBCPACAerwAgLO9AMCMPQAAuTsAoF09AIBIvACAjTwAQJe8AMDmvAAALj0AAPu7AIAlPQBAaz0AAFY8AACFPAAAIrsAoEs9AIA5vQDAvzwAwDo9AABguQCAgr0AAPK8AAAouwBA6rwAwJO8AAC/OwBgDb0AoIu9AIAfPADAPD0AkBI+AAC4OwCgdb0AwIE9AOAVvQAA0bwAgMK8AADiPACAgbwAAOY8AEAVvQAAJL0AgGg8AADgPAAAWjwA0KQ9ACB2PQBAqT0AAOe8AAAgOgAAm7sAQFK9AADIPAAAy7sAAFQ9AEDTvAAAKT0=","chunkHash":"a0dad1d3e99df8b3bd9e6190ec9dbfa1f3297b6e81f78c9c7c544d7575926bde"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    \"\"\"\n    Validate the model on the provided data loader\n    \n    Args:\n        model: The model to validate\n        data_loader: DataLoader for validation data\n        use_mask_attention: Whether to use mask-guided attention\n        use_mask_weighted_loss: Whether to use mask-weighted loss\n        criterion: Base loss function\n        device: Device to run validation on\n        adjust_labels: Whether to adjust labels from 1-based to 0-based indexing\n        epoch: Current epoch number\n        save_preview: Whether to save a preview of the input volume, mask, and model output\n        output_dir: Directory to save previews\n        \n    Returns:\n        Dictionary with validation metrics\n    \"\"\"\n    model.eval()\n    val_loss = 0.0\n    val_correct = 0\n    val_total = 0\n    all_preds = []\n    all_labels = []\n    \n    # Debug helper function\n    #...\n```","range":{"startLineNumber":801,"startColumn":0,"endLineNumber":827,"endColumn":0},"embedding":"AIDiPABAqz0AQO48AMA6vQDASr0AAAe8AKCAvQAAwzsAAH+8ALCxPQAASjsAIAO9AOAjvQDAqrwAwLe8AIAEPABA9LwAsMo9AED9vACgRz0AAD49ACBtPQAgJT0AgJE8AOAJPQDA/LwAgN88AAAavACgoT0AgBM8ALCCvQAgFr0AIHe9AAD+vADAgL0AAGC7AGDHPQBgiD0AwOi8AABAPAAAqLwAIKm9AAAGOwBwoj0AAI48AABkvADw0j0AAJo7AOBRvQAA57sAAA69AECXPQDAzTwA4Ao9AKAjPQCgAj0AAGS8AACevAAAHbwAABA8AAAavADAMr0AAJa7AEDyPACAC7wAYHS9AOAUvQDAN70AAHa8AACmuwCAfrwAACK9AOBtPQAAGDwAwMC8ABCAvQDAOT0AsPM9AABbvQDgCr0AoEK9AAA8vABAlDwAAAy7AEAyvQAAi7wAcBu+AABcOwBgUr0AgHW9AMAbPQAAfTwAQLK8AIDRPQCgaD0AABc9AAB2OwDAkr0A4BY9AAAWvADgNz0AgPw8AAAauwAA9DsAQAs9AABRPQBgHj0AgJ08AACouwBgDD0AAPi7AIBkPAAAwbwAMJO9AED1vAAA9LsAgBO8AKAEvQAA5LoAIAm9AACqPABAtzwAUJs9ADCOvQAgTj0AgMQ8ACBmPQDgjL0AwHO9AICBvAAApbwAQCk9AECAPQCAar0AAES9AKAnvQDA6bwAAPm7AACnvQDQmz0AAPm8AABnPACAUbwAANY8ACCVvQAAcr0AQNy8AKADPQDwlb0AgI89AAAWuwBQ1z0AgIE8AECJPACgZL0A4Bu9AEDmvACggD0AgOc8AOC3vQAAY7wAwGw9AICTPACA6rwAAEi7AEAtPQDAC70AwKW8AADYOwAQkb0AgKs9AHCyPQCgAz0AcOe9AECtPAAAXLsAQBC9AACPOwCgJL0AQIu9ACB1vQAAzLsAAOw6AACpuwAAmr0AAGG8AAByPQAgeD0AwKC8AACwOwDAHD0AgP+8AEBZPQBAnjwAAP88AKB9vQDAojwA4C89AIBzPQDA7jwAoDC9AAD4OgAAsDoAgFq9ACACPQDAEb0AAKm9ACAFPQAAxrsA4Ca9AADGuwCgND0AAPs8AABguQAAQrsAQJ88AMD+vADAtLwAoLU9ANCYPQAAJLsAAHY9AGBtPQAAoLoAQKY8AOAKPQBwrT0AQAi9AAB4PAAA/LsAAHy8AMDOvAAA7rsAQAU9AMAhPQCQCb4AQIK8AIBavACwgj0AwAM9AAA4vAAglT0AwDK9AMBUvQAQgD0AADU8AAAaOwCAlrwAAO27AIDRPQBAwD0AAMe8AIAZPAAwhL0AABw8AIDkPACgjb0AgPG8AGC1vQAAxLoAcLK9AABDPACAeb0AAMe7AAAKuwAAgrsAwEW9AEC2vACAQb0A4Iy9AACpOwAAzbwAQGo9AMDmPAAAfrwAwKc8AADyPACAGD0AgBM8AOCPvQCAM7wAgAe9ACBRPQBALz0AAHi8AACuPACAhzwAAIS7ACAdvQAAvDoAAMC4AJD2vQAAdjsAgLW8AAB5PABA5zwAgHy8AMDjvAAAJjsAgK+8AACYOwAgpj0AYFu9AABDPACgPb0AAJy7AMBjvQAAGzwAAJc7AGBZvQDgIL0AAD47AMC8PACgJD0AAMg8ACBOvQAAu7sAQJo9AMDmPABAjDwAEMa9AAChOwCAOb0AANI7AIDVvABQuT0AYMW9AMDjvADgJr0AAKK7AIAPPADA9rwAgOe8AMCVvABAPz0AMIY9AAB4vACAxTwAgHE8AOARPQCQtr0AoLO9AKAsvQCAu7wAgAs8AAAsuwCAO70AALQ8AACXPAAAfrwAAN+7AEDGvAAgCD0AoAu9AMAhvQAAtTwAQNK8AIBGPQDA+bwAgPG8AADRPADgED0AgBc9AGAGvQAAjLwAAHK8AIBxvAAAyTsAABG8AMDBvAAAuTwAgFE9AGCavQAACDwAwNG9ADCMvQDA2DwAgFc8AECKPADADL0AIGg9AABEOwDAYz0AgIQ8AADCPAAgIT0AAEy7AGAavQDAhL0AQDc9AIBOvABwh70AgA29AABUPAAAmj0AIAk9AGCAPQBgbT0AAF89AAA+PQCAPLwAgAK8AOCUvQDAeT0AAGW8ALCTPQAAyLoAgCc9AIBQvAAAQjsAsKw9AMC9vQDAtDwAgI+9AADXOwDAAr0AgBU8AIACPQAAzbwAAPC6AKBvvQCgIr0AgOc8AADoPACgBr0AAE68AECQPQAAJrwAgB+8AKCUvQAAg70AICK9AMCgPAAATrwAAOM7AIAyvQCAUjwAQIm8AIAPPQDA5LwAANI8AGBdvQAArDsAQOQ8AMCcvABgeT0AgGi9AAAIPADAi7wAALk8AACTuwCAkDwAQNi8AICyvACAPb0AsI69AEDvPAAAOLoAkMs9AECvvACAFTwAYBW9AAC5uwAAejwAgEm8AGCCPQDA0DwAAIU8AABLPQAA4DsAwAA9AIBCvQAA8TwAAMU8AKA0PQBghL0AQOW8AACXuwAAdrsAwJK8AIB2vQAgZr0AAM27AOA3vQDAGz0ASCw+AID6vAAAt7wAAPY7AACQvAAAvbwAIAk9AEDjPACAS7wAAJE7AEAlvQDAwzwAANg8AAA5vAAA0DwAgHc8ACBrPQCQhz0AwJ48ACBsvQAA6bwAAHq9AGAKPQAAM70AQNk8AOBovQCQgT0=","chunkHash":"6433cd519003de912fb85cf37da88c0962d3b6e621f39050b5769ef533c412da"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n    def print_tensor_info(tensor, name):\n        #...\n    # Function to save a slice of a volume as an image\n    def save_volume_preview(volume, mask, outputs, labels, predicted, path_prefix):\n        \"\"\"Save middle slices of volume and mask, and add prediction info\"\"\"\n        #...\n    # Ensure model has been initialized\n    if not getattr(model, 'initialized', True):\n        print(\"Warning: Model classifier not yet initialized. Running one forward pass for initialization...\")\n        # Get a sample batch\n        try:\n            sample_batch = next(iter(data_loader))\n            if sample_batch is None:\n                print(\"Warning: Sample batch is None, skipping initialization\")\n            else:\n                sample_volumes = sample_batch['volume']\n                sample_masks = sample_batch['mask']\n                \n                # Process and stack tensors properly\n                if isinstance(sample_volumes, list):\n                    #...\n```","range":{"startLineNumber":827,"startColumn":0,"endLineNumber":909,"endColumn":0},"embedding":"AMDUPADgKT0AAE68AFClvQAgor0AwIi8AAApvACAWD0AwHu9AMCQPAAAt7sAALW8AACavABAzrwAgMS8AEDJPAAA37sAEOE9AIDwvABANz0AAII8AMATPQCAHT0AACS8AACWPACAe7wAQP88AABGPABAfD0AAM48AIBmvQDARL0AwJO9AGBxvQAAJb0AANM7AABHPQBgTj0AICm9AAC8OgBgST0A0OW9AMD3vAAwjD0AcNE9AADwOgCQyz0A4HS9AAByvABAvTwAAOo7AEAYPQAA67wAwEI9AIApPQCA4TwAwOy8AMDOvAAAHLsAAHk8AADEPACQjb0AgKs8AIBzPACARjwAACq8AKBuvQCAoTwAAJ28AIDQvAAAGb0AwI28AMCLPAAArDwAANQ6AACvvABgAT0AgKQ9ACBfvQBgRr0AQLO8AED0vABAqzwAYDU9AIDAvABgYL0AMNu9AADYuwBQmb0AgH+9AECdPAAANjwA4Fq9AKDUPQAAXz0AIEs9AIA2vADQrr0AcJU9AMDpPAAA4jwAoBs9AADXuwAAwLwAYBE9AMCZPAAAXD0AgOc8AIAePQCAbj0AAIO7AEB+vQAAMLsAQEi9AMC0vADgUr0AAOE7AEDavADA+7wAgFe8AICRvACA7zwAQAI9AGB4vQAAhjwAANC6AIAKPQDQxr0AAGg8AACCPADAkrwAgMg8AFCaPQAQ370AQAO9AAAivQBAhDwAwG89AIDIvQD4AT4AAHi8AACVuwCAnTwAgCM8AIDTvQAAc7wAgIS9AMCDPQAAc70AAG09AMCLvABA/D0AABk8AMDfvAAA8LwAQEK9AIBgvABAKD0AAE+8AMC4vQDgT70AoAM9AEAbPQCA3bwAIAy9ACA1PQCA+bwAAJ67AGAlvQCgzr0A4Hg9AABvPADAXz0AoKq9AICXPAAAGLwAUJu9AAD1uwAAbb0AII+9AMAmvQDAwDwAAOs7AADhPABgur0AANg8AMDKPAAAQT0AgEG8AMDyPAAAjTwAgIi8AKAdPQCgSj0AgHa8AADfvAAAvjwAABg6ACCMPQAAEjwAQAa9ACBxPQBAEL0AAG69AGAwPQAAVr0AQKS8AIDCPAAAHb0AwIa8AAA9PABAAj0A0IU9AAAUvQAApbsA4Gs9ACCKvQCAWjwA4H09AMB0PQCAYbwAIJ09AAA4PQAAOj0AwN88AABsvABA+DwAgGm9AAB6vACAU7wAgJM8AIAzvABgHr0AAA89AACFOwBggb0AAOe8AACAvAAgKT0AoAI9AABxvADAcD0AAGK8ACBtvQAQkj0AAC89AIAlvQDwkb0AAL67ANC7PQAQyD0AQAy9AIACvACgOL0AAIM7AECyPAAglb0AAEK7APC6vQDAnTwAoAa9AACnvAAASb0AAPg6AAAaPQCAOjwAAKw6AACEOwCAb7wAwFy9AMAMPQDAPr0AoDE9AKASPQAgO70AwE49AKBKPQBA4jwAAFg7AEAiPQBgJb0AAPu7AACQugAAYLoA4Cw9AMBWPQAA+7sAgE48AIBBvQCgJ70AYGk9ABDhvQDABj0AQNK8AGBJPQBgLz0AoCS9ACBFvQAAbLwAQCO9AMCxPACAOzwAgFC8AGBMPQBASb0AAKM7AEDrvAAAHDsAYCc9AKAXvQBA57wAgO68AGCXPQAADDwAABs9AKA+vQCADT0AQPY8AEDiPAAAfbwAQC69AIBCvQAgDL0AQMM8AAC+OwDAkz0AoGC9AIAdvAAAGDoAwGe9AAAdvAAACr0AoGy9AGBZvQCgBD0AAFM8AACEuwCAgTwAgCm9AAAkuwAgtL0AYE69ACC0vQDAzbwAQKq8AAAhPAAA1LsAQCo9AABSOwAAf7wAwAi9AACQuQBAwDwAAG+9AADVOwBgFj0AQI28AADvuwDgV70AAE67AIBavADgMT0AkKE9AACQOQCAf7wAALU7AACQPACATzwAgPW8AICUPABArj0AgAI8AAB/vQDAlrwAoAq+AEC7vQAARz0A4BY9AABcOwAAN70AwIQ8AIAMvAAA2zsAIB09AADQuwAArTsAAD08AADkOwDAZr0AQPc8AIAKvACgdL0AQI+8AAB1PQBAJD0AwMo8AKBfPQCAID0AgKM8AOB1PQAAeLsAIBU9ACCovQCA1zwAAMO7AABqPQCAnz0AIHg9AAD7uwBgG70A8IY9ADgSvgAAzTwA4Dm9AICBPAAAwDkAgFC8AADAOQAQmb0AAAw8APCXvQDAurwAQI+8AACEOwDgQb0AgA+8AOAtPQAAy7sAAK47AOCAvQCAL70AQBq9AIBzPAAAl7sAQKo8AMDmvQCAYrwAAIc7AABAuQAAODsAADS7AJCDvQAA9LoAwIo8AMCYvAAAxLoAAIA6AABAOQBAKb0AAGq7AABMuwAAFDwA4A29AADMPACAILwAMKy9AGCLPQAAsDoAoG09AMAGvQAAhTwAwJe8AIAovQDAHT0AwMS8AECrPADgCT0AAGg7AIBePACAdDwAwFA9AMBxvQAA6DwAgL48AAAIPADQhL0AwN68AADQugAAIrwAAMu7AMC+PABAFr0AULG9AICbPACgLD0A0Bc+AAC4OgBAU70AIJc9AAAFvQDgG70AgJS8AED0PACAfbwAQAw9AKBHvQDAgb0AAC88AADlPACAJrwAoMk9ABCCPQBAlz0AwLq8AAAuuwAAIjwAAAm9AOAfPQAA2bwAQJw9AECovABgHT0=","chunkHash":"fa60ce74e7582bba7fb592edcd174793e3ef22a14d98cdeabf0493ee21fd767a"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n                    # Check if the volumes are already 5D tensors\n                    if len(sample_volumes) > 0 and sample_volumes[0].dim() == 5:\n                        sample_volumes = torch.cat(sample_volumes, dim=0)\n                    else:\n                        sample_volumes = torch.stack(sample_volumes)\n                        \n                if isinstance(sample_masks, list):\n                    # Check if the masks are already 5D tensors\n                    if len(sample_masks) > 0 and sample_masks[0].dim() == 5:\n                        sample_masks = torch.cat(sample_masks, dim=0)\n                    else:\n                        sample_masks = torch.stack(sample_masks)\n                \n                # If tensors have extra dimensions, remove them\n                if sample_volumes.dim() > 5:\n                    sample_volumes = sample_volumes.squeeze(0)\n                if sample_masks.dim() > 5:\n                    #...\n```","range":{"startLineNumber":909,"startColumn":0,"endLineNumber":926,"endColumn":0},"embedding":"AAAjPACAKD0AACC5AIA7vQAgab0AwAq9AABivADAmDwAYGW9AEAgPQAAKLsAIC29AAAMuwAA9zsAAEu8ACAoPQDA0LwAkJY9AMAvvQDAID0AgM48AOApPQBAJz0AgLC8AIDGvADAtbwAwPI8AACSOwDAuj0AwJU8AGA4vQDAJb0A0JC9AOBNvQAgsL0AABg8AKBtPQCApj0AQK68AMCRvABAhD0AoMi9AMDmvADgfj0A4Hw9AADOuwAQtD0AoDW9AGAQvQAAnTsAwBS9ACB4PQDAvrwAYD09AOBePQCAtzwA4Ey9AADUOgAAJLsAwNA8AECQPAAgAr0AAEK7AMCLPAAAELsAQL68AKCgvQAAcrwAgLm8AAD4vADAVr0AAEy8AIDRPAAAmTwAAJw8AECFvADAjjwAcM49AJCpvQCAA70AwP68AACCuwCgNj0A4BE9AOAtvQCAdr0A0Pa9AAAXPACQvr0AYHe9AMDHPAAA2TsAwGS9ADCnPQDAQT0AgG08AKAPPQCQgL0AsJs9AIACPAAAej0AwE09AABmPABApjwAoFo9AMCmPADwgj0AAIs8AABTvADAhj0AgBO8AKAKvQCArrwAwL68AACCOwAAwbsAAMy8AECNvABATL0AgPG8AMCwvACALjwAgDY9AIBevQBgOz0AgDA8ANCuPQDQ070AQKW8AADvPABA0LwAwP48ADDsPQAAi70A4Cu9AECgvACANrwAAP88AACsvQCgrT0AgGK8AAAjPAAAjzwA0IM9AHCQvQCArbwAgDa9AHDBPQAAbL0AsIQ9AGBxvQDguj0AAEC6AAC8vADgQb0AsKG9AMDwPACgfD0AgKM8AHC/vQDgLb0AwAU9AIDhPABAjbwAADA6AKBEPQAAJLwAgDa8AKAIvQCgpb0A4IA9AABtPQBATT0AgNG9AKAvPQAAGLoA4IS9AIAEvAAwgr0AMIq9AIA2vQAAgTwAQIM8AACSPAAw370AQIc8AOA7PQAgTD0AANA5AAAQOwBAAj0AgHO8AECFPQBASj0AAKM7AEBGvQDgJD0AwKo8AEA8PQAA7DsAYCC9AMDSPAAAG7wAICS9AGBGPQCgmL0AQP28AADIPAAAAr0AAEI7AACQOgAAXTwAYGU9AIAzPACAY7wAALM7AOAzvQAA3LsAAIo9AFC7PQAASjwA4JU9AGA3PQDAGz0AAOU7AIBPvACA5TwAgK+8AICxvABA+zwAAJI7AICAvADAxLwAAOQ8AADvuwCgab0AoCS9ACAxvQDANj0AwEk9AMDIvADAZT0AgG48AHCsvQDA9zwAACs9AADkugAAGL0AAMC4AKBtPQAgzT0AYAA9AADQOQDAR70AANC8AABdPQAwlb0AAMK7APC9vQAAujsAgFW8AACkuwAwgb0AgE48AMDiPAAAsbwAQIK8AADYOgDA2LwAwDq9AMAQPQBA9rwAANc8AAByPAAAqbwAYAw9AIB3PQBA4TwAYAM9AMDuvAAA+7wAQMS8ACARPQBA4zwAgBg8AABQPACA0DwAgHs8AGAlvQCALL0AoAE9AJgBvgBgRD0AAJu8AMDVPAAApDsAQD69AEByvQAAtbsAAEK9ACAaPQCgAz0AYB+9AEDyPACwgr0AAGi6AKADvQAATjsAQDE9AAC/vABAxbwAoC29AAAXPQAAXLsAAB49ACB2vQCAG7wAwCY9AGAVPQCAjLwA4KW9AIB2vQBATb0AwMY8AEDKPAAgUj0AwJe9AIBJvAAArTsAcJy9AAAguwDA/rwAwAi9ACBMvQBA+jwAYBU9AAAPvACA2zwAAO27AAAJPADYBr4AQGK9AMBzvQAA37wAAEq8AMDtPAAAOrwAANI8AAAaPACAErwAACC8AEDtvABArDwAIHS9AACGvAAAejwAAIK7AABIPACgkb0AADK7AAANPABgLz0AwHw9AAD2vAAAtTsAANQ7AMDBPABA3jwAAFy8AEC0PADwiT0AAGY8AOAdvQBA/rwAIM29AIDYvQBAPz0AgAg9AACgPADAqbwAAEM8AECdvADAmzwAADc8AAAMuwDAOj0AAAM8AAB3PACAkb0AQII8AACzvACgdr0AADI7AECaPQAQkj0AQNq8AEA6PQCAOz0AgOs8AMCYPQAAcLwAADo8AFCdvQBgRT0AAKa7ADCHPQCgVT0AEIY9AADAuwCAAr0AoLs9APC8vQCgFT0AIFy9AACMuwBAKb0AgHu8AADFPAAAjr0AALc7AOBdvQAAabwAQNe8AEDoPADgVb0AYBu9AAAXPQCA6LwAAEe8AEAovQAQn70AwPK8AIDFPADAirwAAGU8AOBivQAAMLsAwJK8AIC3PAAA/DoAADW8AOBNvQAA3bsAQOg8AAD0OgAAoDwAwDK9AADAuAAARLsAgAY8AAD+uwDgHL0AgNa8AADMuwDAx7wAgLu9AED6PAAAtTsAMLM9AIBIvQBgBD0AYDG9AIBsvABgAz0AACE8AMDjPADgpT0AAMc7AOA6PQCAEDwAgC89AMBNvQBwij0AAOs7AMD+PADgfr0AAAC7AABWPACAqzwAAMW8AEDGPABgSb0AYHa9AAA4OwDAqz0AGCE+AMA1vQCAzrwAwCI9AAB6vABQlL0AgA08AAC9PADAlbwAgAE9AOA4vQAAKL0AAKM7AABCPAAAiDsAwGA9AEApPQBAvj0AAO+7AIBAPAAAPLsAYIS9AIAGPQAALb0AQKg9AKAkvQCAMD0=","chunkHash":"137178a53e05d6f0ec7eaaa1eeb01b36d966fadd3097c42663cb1c212e4b171a"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n                    sample_masks = sample_masks.squeeze(0)\n                    \n                # Move to device\n                sample_volumes = sample_volumes.to(device)\n                sample_masks = sample_masks.to(device)\n                \n                # Run a forward pass to initialize the classifier\n                with torch.no_grad():\n                    if use_mask_attention:\n                        _ = model(sample_volumes, sample_masks)\n                    else:\n                        _ = model(sample_volumes)\n                    \n                print(\"Model classifier initialized successfully\")\n        except Exception as e:\n            print(f\"Error initializing model classifier: {e}\")\n            \n    with torch.no_grad():\n        for batch_idx, batch in enumerate(tqdm(data_loader, desc='Validating')):\n            try:\n                # Handle case where batch could be None\n                if batch is None:\n                    print(f\"Warning: Validation batch {batch_idx} is None, skipping\")\n                    continue\n                    \n                # Get data\n                #...\n```","range":{"startLineNumber":926,"startColumn":0,"endLineNumber":952,"endColumn":0},"embedding":"AECAPACgPD0AgKA8AAAUvQAgH70AQPC8AIDtvAAAKz0AAEC9AMCGPQCAYTwAgK+8AOAjvQAA7jsAABe8AIDGPACACrwAQMo9AOA6vQAAiT0AALg8AOBOPQDA2DwAAIq8AIA4vADA87wAwK08AAC0vABwuj0AAI88AKBGvQAAEb0AMLO9AGBBvQCQl70AwJ08AKBoPQCgdz0AoEW9AIBkvAAAYDwA6AG+AABhvACQoT0AoDM9AAC9vADQxz0AoAW9AGACvQAAprwAgO28ALCPPQAAHbwAkJ89AIA8PQDAnjwAYEe9AADrPAAAXjsAAGg8AACwugDA9bwAgCm8AADAPAAAxDsAYC29AJCOvQCAhrwAwMC8AAAPvQBgAL0AgOu8AGAKPQAAJ7wAABi6AADovAAABTwA4O89APCPvQAA2rwAgMm8AACEugAAhbsA4EA9AMBMvQDgLL0AaBe+AADVOwBwkr0AgFK9AACDPADAFz0AQBW9ACDLPQBAYD0AgAc9AAAVPAAAfb0AYFc9AAA3vADAkj0AAEw9AACmPAAArzsAwBg9AAAUOwAAyDwAYA49AADSuwBgkT0AAFw7AMCZvAAAhbwAIBu9AABUuwCAYTwAQOo8AKAevQCAsbwAgDW9AIB2vABAirwAYCw9AIC1vQDA/jwAgF88ANCAPQAQxr0AoGK9AIB0PABAuLwAAG89APCkPQDgA70A4Ce9AICavAAAcDoAgAo9AGD6vQAQrT0AgDO8AADkugAAo7sAQDc9ADCsvQAAIb0AwGW9AACJPQDgcb0AQLA9AEDSvACQyT0AgCi8AAAFvACAZ70AIGO9AACEuwCAdD0AAIo7ADCRvQDA9LwAAHQ8AECCPADAQr0AAPO8AGAYPQAAjrsAQJW8AEAGvQBgZL0AcJo9AACNPQBgPz0AQNy9AOAZPQCAMzwAQOW8AIBDvABgNr0AwMa9AMDSvADAl7wAAPs8AABuOwDQr70AwKK8AKAuPQDgLT0AAFg7AAAAOwBgLD0AALC5AOA4PQCAbjwAwI48AOBvvQCA3TwAAMY8AECBPQCAwDwAQDO9AECsvAAAMLsAAAS9AAAFPQAAVL0AQMy8AIAhPACgG70AANi8AIAyPACAwDwAQFs9AIB1vACAW7wAgDY8AAD1vAAAv7sAYJE9APCUPQCAJDwAgIw9AGA5PQBA8jwAgC08AIBHPABgFz0AgMW8AADluwBAm7wAAB68AMAIvQAAAAAAwJo8AMCMPAAwk70AwKG8AGBpvQBAST0AQAM9AGBWvQDAMj0AAMo7ANC4vQDgND0AANE8AABKvAAwgL0AACC6ADCaPQAgkz0AwOQ8AAC/uwCgOr0AANq7AEBlPQBglr0AwIa8APCUvQAAMrwA4F29AAB2uwDgL70AAD47AAD4PAAAFjwAgGS8AMDKvADADr0AQNK8AMCKPABA2bwAAOY8AID4PAAACLsA4AI9AKCSPQBAdD0AoDM9AMAPvQAgTr0AAOa8AAB1PQAAdTwAAIy8AIBpPACAYjwAgPE8AJCBvQAAHrsAwJA8ANDSvQAAuDwAgDm9AMDoPACAbDwAoBC9AADKvAAAZbwAQAW9AABdPQDAbT0AgC+9AADwPABgdb0AAPK7AIA/vAAAAjwAYFM9AEC2vABgbb0AoDy9AEBQPQAAVrsA4Cc9ANCAvQDAJL0AkJQ9AAAcPQAArLsAcKG9AECxvADAab0AwPo8AIA8vAAAeD0AMKu9AMCvvACAADwAQDy9AACfuwBAobwAgPq8AECwvAAgEj0AYIM9AAB3vAAAKT0AADi7ACBbPQBQBb4AYLa9AKBLvQCAuLwAAJk7ACAePQCAwbwAAA47AADKPAAAXbwAwPu8AICEvADgbT0AAHa9AAAGuwAAnDsAgOu8AIBrPADAib0AANC6AAASPQAgUD0AYH49AADGvAAATTwAAAI7AADUugAA67sAgIO8AIBjPADgQD0AAPQ7AOBPvQDgGb0AwO69APDPvQAA+jwAAAI9AAALPQAAQrwAAJI8AADXuwAAdT0AgLG8AMClPABgPT0AAM48AED9vACQob0AgIM8AADEOgBAZb0AwIK8AKBZPQDgTT0AAHa7AECqPACQhz0AwPM8ACC5PQAAObwAAOQ7ALCRvQDgWz0AAAc8ACCFPQCACjwAgG49AADMuwAA+LoAQMg9AGDRvQCgRz0AgFK9AAD8uwDgAb0AwOu8AECrPACAbr0AQMw8AGBWvQBgBb0AgD68AKA8PQCgRr0AAJ67AEDuPAAgEr0AAMg6ACBRvQDgdr0AQPa8AIAzvACAD7wAANk7AIBQvQAAu7sAAM68AABtPAAAjrsAgN28AEBavQAAgDkAYBw9AMD5vACgCD0AwI+9AAA+OwAA6LoAAMM7AACgOQDAl7wAAAA8AAA0uwAA8LkAcMq9ACA7PQCANDwAYKc9AEAXvQAAlDwAYAa9AIBNvADgPD0AQKG8AABWPQCAGj0A4AE9AFCUPQAAijwAwOQ8AGA6vQCgij0AAEW8AIAwPACgk70AgIY8AICVvAAAkrsAwDC9AABQuwBgIb0AIAy9AACHOwAgMD0AGDc+AMBMvQCgB70AgO88AABbvADQlr0AQOI8AMD1PADAkbwAAMQ7ACABvQBAlDwAgJg8AIAtPAAAgDgAoB49AOCTPQDgmT0AAL07AECBvAAA6LoAgGu9AKABPQAAYDkAwEc9AOASvQDgOz0=","chunkHash":"4dd5dd4ca049c35fee26496ebbf58b7d655066e1db91aae82ba9a3a677a44c45"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n                volumes = batch['volume']\n                masks = batch['mask'] \n                labels = batch['label']\n                \n                # Process tensors to ensure correct dimensions\n                if isinstance(volumes, list):\n                    if len(volumes) == 0:\n                        print(f\"Warning: Empty volumes list in validation batch {batch_idx}, skipping\")\n                        continue\n                        \n                    # Check if the volumes are already 5D tensors\n                    if volumes[0].dim() == 5:\n                        volumes = torch.cat(volumes, dim=0)\n                    else:\n                        volumes = torch.stack(volumes)\n                        \n                if isinstance(masks, list):\n                    if len(masks) == 0:\n                        print(f\"Warning: Empty masks list in validation batch {batch_idx}, skipping\")\n                        continue\n                        \n                    # Check if the masks are already 5D tensors\n                    #...\n```","range":{"startLineNumber":952,"startColumn":0,"endLineNumber":974,"endColumn":0},"embedding":"AAC5uwAARz0AAAs9AGBnvQDgYr0AIBW9AMCSvACgMD0AAIi9APCMPQAAVDsAgDu9AIDDvAAA0DkAQI68AIBbPQAA+7sA0MY9AABevQAAAD0AQKc8AEBIPQAgAT0AwMi8AABcuwAA6rwAAAc9AABkuwBwxD0AwMg8ACBvvQCgCL0AcLq9AOBZvQAgrb0AgF68AOCMPQCQrT0AgK28AAC8OgDgMj0A8MW9AADGvACQlT0A4Bc9AAAiOwAw0j0AwMu8AOA+vQAAD7wAQCi9AOCfPQAA1LoAYHM9AADuPADAljwAABy9AABeOwAAJLsAQLQ8AIAOPABARb0AAHQ7AMD2PACAETwAoA29AIB7vQCAurwAAGO8AMDKvADgMb0AgLC8AECUPABAxDwAAIY7AOADvQAA3jwAUM49AMCTvQDA6LwA4C69AAAQOwDAmTwAgAg9AAAKvQCAfL0AGAi+AIBcvAAgvr0AMIy9AACXOwCAyDwAAIe9ALDlPQCAQj0AgDE9AECaPAAQqr0AQJ49AIA8vABASj0AwEA9AICqPACArzwAAJc8AKAPPQBAOD0AwNw8AAD5OwDgZj0AgGC8AEDJvACA37wAwAC9AAAkvABAsrwAACC5AIB+vADAtLwAoAG9AABquwAA9LoAgDg9ALCKvQBgKz0AQNU8AHCgPQAwtL0AQLO8AABgugAAmrwAQD49AICnPQBwmL0AIDW9AKBJvQAAarsAYDg9APCzvQBAuj0AACG8AIAaPAAAkDoA4BI9ADCrvQAgA70AwE29AECEPQCAhb0AcLI9AEASvQDw5D0AAKM7AADruwDgY70AcIW9AAC8OwDAYj0AQNo8AHCDvQBAzbwAgGY8AABaPQAA5LwAgAu8AKBDPQAAjbwAAG+8AMDwvABgn70A0K89AACKPQAA4DwAIOK9ACAgPQAAizsA4Ie9AIAevAAASL0A4LK9AMD9vAAAETwAAOo7AADQOwAgx70AAG88AEBNPQCgAj0AACY7AAAhPADgJT0AADq8AIBOPQBgNj0AQPo8AMCDvQDA3zwAgFw8ACBsPQCAhDwAwM68AAAYugAAL7wA4Dy9AAA5PQDAcb0AQCy9AMCJPABAYL0AgO28AIAnPABA1zwAoBE9AABcuwAAILoAACC7AIAQvQAANDsAQIo9AKBqPQAAMLoA4H09AMAcPQBgIT0AAEA8AAAUOwCAdT0AAP68AACXPAAA4LoAgIe8AMDevAAAPrwAAPs8AAB9PAAAjb0AQCm9AIDOvADgAD0AYCY9AECBvACgYz0AAHK7AHCEvQDALD0AwLg8AMCovADgSL0AAG+8AJCOPQBwtz0AAB48AACIuwDgdL0AgE68ACAgPQCAdb0AwKy8AICevQAAiLsAADy9AIAJPABgh70AAD08AABnPAAASLwAAIi7AEC0vADAm7wAwGW9AMCOPABAt7wAYBQ9AEDEPAAAJrwAwOw8AEBpPQBgDz0AgMo8AMDKvABAk7wAwIS8AMApPQAAjTwAgHS8AICLPACAMTwAQIE8AMA1vQAAwrwAQAw9AJDavQAAMz0AgIG8AGACPQAANzwAgCK9ACAXvQAAOLoAYFK9AMDMPABgSz0AYE+9AIAVPQBgnr0AAMG7AAAYvQBAsjwAgEc9AICjvADgJb0AQKK8AOANPQAA6TsAQIw8AEBgvQAA4bwAYG89AOAcPQAAN7wA8Li9AOBCvQAgar0AICE9AADgOwBAZj0A8Ka9AIBvvAAAoDoAIEa9AAAUuwDA8rwAgCG9AADIvACgRT0AwEc9AIAcvAAA5TwAgAg8AABrPACIBL4A4Hy9AMApvQBA4LwAAMq7AAAaPACA0bwA4Ds9AADtOwAAsrsAgF68AAClvACA5jwAcI+9AECivACANjwAANa7AIBwPAAAe70AAJq7AEDjPADASj0AgFY9AADyuwAAPrsAAFi7AABDPAAAXjwAQN68AIBWPADwnj0AAD48AGByvQCgGb0A4Nm9ALDCvQCACj0AIBg9AABKOwAAG70AwPA8AIAIvACgAT0AgDU8AADYugAARD0AgGY8AIAjvADQnr0AwIU8AABAOwBAIr0AAGW8AKCCPQAgej0AAGu8AMAhPQCgWj0AQBM9AHC2PQCAJbwAAGs8ALCxvQBwgD0AgGA8AACpPQCArDwAAEw9AIAmvACADrwA4Lo9AADJvQBgFz0AUIq9AIABvACAgrwAAKy7ACAUPQDwnb0AwA49AOBRvQAA3bwAgHu8AEAKPQBgT70AgGu8AEBnPQDAkLwAgBq8AEB8vQAArr0AgNy8AICbPACAzbwAgE08AJCEvQAAwbsAgI68AEDBPACAhLwAAIw6AKBwvQAACrsAwB89AACvvABACj0AwFC9AAAdPACALzwAAJw6AABSuwDAz7wAgIC8AICbvADA7bwAYKK9AMBBPQCADjwAMMU9ACAEvQDA3jwAoCG9AICgvACAqzwAABe8AIAnPQBgWz0AgJ88AOAzPQAA+DsAoG49AOA3vQBAWT0AACg7AECvPACAjr0AwKS8AIBLPAAAADkAwAW9AACPOwAgNr0AACi9AECSvAAAij0AmC4+AIAGvQCgEr0AAPk7AAACuwAAgb0AAKg8AMCyPAAAmbwAgNs8AMAWvQAAybwAACU8AACAPAAA9jsAQGs9AGCKPQDwqz0AQIy8AECAvAAAIDkAQFC9AADuPABAGr0AwII9AEDgvABATD0=","chunkHash":"6d85102ef444bf6b7477c4104b8046e7ccf536ad52c09293fe793faefc95d74c"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n                    if masks[0].dim() == 5:\n                        masks = torch.cat(masks, dim=0)\n                    else:\n                        masks = torch.stack(masks)\n                \n                # If tensors have extra dimensions, remove them\n                if volumes.dim() > 5:\n                    volumes = volumes.squeeze(0)\n                if masks.dim() > 5:\n                    masks = masks.squeeze(0)\n                    \n                # Move data to device\n                volumes = volumes.to(device)\n                masks = masks.to(device)\n                \n                # Adjust labels if needed\n                if adjust_labels and isinstance(labels, list):\n                    labels = [l - 1 for l in labels]\n                labels = torch.tensor(labels).to(device)\n                \n                # First batch for debugging\n                if batch_idx == 0:\n                    print_tensor_info(volumes, \"Validation input volumes\")\n                    #...\n```","range":{"startLineNumber":974,"startColumn":0,"endLineNumber":997,"endColumn":0},"embedding":"AADLOwCARj0AgNM8AMByvQDgdL0AACC9AADNvABgNT0AUIm9AOA/PQAAxjsAAMu8AOBDvQDAgbwAgDy8AOAaPQAArrsAEJ49AKCSvQAAQT0AwJ48AAA5PQBAQT0AAOq8AIA7vACA8LwAAIc8AIAyvACQsT0AQLo8AOBEvQDgIL0AUIq9AEBQvQDgur0AAKG7AECHPQBQiD0AQKm8AAAcOwBgDT0AAOq9AAByvACwoD0AQCA9AAAFvADwrj0AgBa9AOASvQCAirwAICW9AGBQPQDAi7wAgJU9AEARPQAAujwAgNi8AACkOgAAPzwAwN88AIBSPADAOb0AwIY8AADxOwAAALkAwAO9AJCLvQCADbwAgBq8AIDZvABAJL0AAMW8AIC/PABAjzwAABw8AOAHvQAA/TwAANk9ANCPvQCgIr0AQBa9AAAougBA5TwAYBw9AMAPvQCQg70AgPa9AIAsvAAQzr0A8Im9AAAsOwCALzwA4EW9AEDnPQDgOz0AIAU9AICiPACAjb0A4JA9AIAdvAAgeT0AAAs9AMCbPAAAJjwAQPk8AICUPAAgTD0AQPo8AIAXPACQiD0AgIG8AIBLvABAE70AICe9AABWOwAAwrsAAI27AID8vACAubwAwCi9AAD8ugAApLoAYGE9ADCKvQCARz0AgJ48AECTPQCQyL0AwN28AAAnPACAr7wAQCg9ALDAPQBgfb0AICi9AGBIvQCADrwA4EA9ACDKvQBQsj0AADC6AAC+OwAAELwAACw9ACCovQCAnLwAUIi9AFCyPQDgeL0AIMA9AGAgvQBQ2j0AgDs8AAB3vADAUb0A4FW9AABjPABAWz0AgKA8ALCXvQDgGb0AQIs8AIATPQBgCL0AAKi7AOA/PQAAN7wAgC+8AIAzvQDgkr0AsIo9AGBYPQDgSD0AkMe9AEDUPAAARTwAAGm9AMCEvACAh70A4KK9AGAjvQAAEDoAAEQ8AAB4OwDA270AgGQ8AABCPQDA/zwAAKs7AAAIOwDAHj0AQJ68AIA2PQBgaD0AgFg8AKBCvQDA2DwAAEM8AACAPQDAzzwAQOS8AADEPAAAVjsAgFO9AAA0PQAAir0A4Fe9AABHPAAAvbwAwJS8AMCWPADAyjwAoHI9AAAquwCAj7wAAKM7AAAJvQCAibwAIHo9AMChPQAAyDoAQIY9AEBAPQBAiTwAAHc8AACvOwDgSD0AANu8AAC3OwAAfjsAAGi7AIBqvACAI7wAgLM8AIA5PABgjb0A4Bu9ACA7vQCgUz0AAAk9AOACvQAgdj0AgDm8AJC/vQBgVz0AgOg8AIACvADAWr0AgFW8ALCEPQBAsD0AAHo7AAD0ugCAi70AAEq8AABiPQCgk70AAGy7AHCUvQAAXDsAgCi9AADQuQAAV70AAKc7AMD0PADAlrwAQLK8AAAbvABA9bwAAFG9AICyPAAAnbwAoAI9AAAkPQBAmbwAABg9AECIPQDADD0AwNY8AAB1vADAqbwAwKC8ACA6PQAAeTwAAAq8AAC8PADA+DwAAJQ8AOAtvQCATrwAgMA8APDfvQDAbj0AQJy8AKAGPQAAHTwAwBi9AAAqvQAAxzsAgCW9AAAQPQAgNj0AoGK9AMAhPQBAn70AANi6AMDHvACAYDwAIEM9ACAVvQBgCb0AIAG9AGBDPQAA8LoA4CM9AEAsvQCAC70AMIA9AGAVPQAAQ7wAsLm9AMAkvQCgYr0AgPM8AADwOQBAaT0AQJ69AMCXvAAAlrsA4Gi9AACHOwAAr7wAgN68AKAPvQAAZz0AICo9AMC4vABArjwAAPA6AADcOwDw9r0A0JK9AAA3vQDArrwAAHQ7AEDzPAAAzrwAoCs9AECpPACAObwAAJe8AICpvAAAsDwA4JG9AMDvvADAjDwAgCO8AACUPADAeL0AAMQ6AED+PAAgQz0AgFA9AGAbvQCAFTwAAAq7AAD4PADAzDwAAL+8AAAMPAAwkT0AALA8AEBzvQBgIL0AsNa9ACC/vQBgBD0AACI9AAAAOQDA2bwAQJE8AMCjvADA5zwAACY8AABguQAgKz0AgBc9AABQuwCgo70AgGs8AAA8OwBgML0AQNq8AABqPQAAPD0AALi7AEAgPQDAQT0AwPI8AHCrPQDAj7wAQIE8APDFvQAgYD0AAFQ8AJCiPQDACT0AAJg9AAARvACAFrwAULs9AKDdvQBABD0A4Fu9AAAyuwBA7bwAAEG8AMCNPABgf70AQKs8ACBYvQCA0rwAAOW7AEDKPACQgL0AwOu8AOBbPQCA4LwAAAC5AABkvQBQkr0AQPK8AAC1PAAAZbwAAO87AGB0vQAAJ7wAwIm8AIDKPAAAzDoAAB67AIA1vQAAJrsAwOI8AEAYvQDApTwAACK9AABYOwAAGLsAACg7AADpuwAAkrwAAMW8AAAgvACAu7wAYLa9ACA4PQDAkDwAsLg9AIAlvQAAxDwAwFa9AECbvACAQDwAAA47AMAMPQDQkT0AwKk8AAAmPQDAhTwAoBM9AGANvQAAST0AAKU8AIBvPABAiL0AwKW8AAAQugCAFTwAQPO8AAAKOwBAPb0AgCK9AMDgvACAlj0AsDg+AKA6vQCALbwAgJo8AAAUuwCgUr0AQII8AECTPACAk7wAoC49AAAXvQAAybwAAOC6AAAgOQAAELoAAGM9AKCMPQAgoD0AAHC6AIBVvAAAl7sAQFi9AOASPQBAIb0AoFw9ACAivQAAXz0=","chunkHash":"85195a5d0b96aab0fd830ce4beaaff58657b7929a268ab9c93c3981522d9858d"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n                    print_tensor_info(masks, \"Validation input masks\")\n                    print(f\"Validation labels: {labels}\")\n                \n                # Forward pass with or without mask attention\n                if use_mask_attention:\n                    outputs = model(volumes, masks)\n                else:\n                    outputs = model(volumes)\n                \n                if batch_idx == 0:\n                    print_tensor_info(outputs, \"Validation outputs\")\n                    # Print softmax probabilities to debug classification issues\n                    softmax_probs = torch.softmax(outputs, dim=1)\n                    print(f\"Softmax probabilities: {softmax_probs}\")\n                \n                # Calculate loss with or without mask weighting\n                if use_mask_weighted_loss:\n                    loss = mask_weighted_loss(outputs, labels, masks, criterion)\n                else:\n                    loss = criterion(outputs, labels).mean() if criterion.reduction == 'none' else criterion(outputs, labels)\n                \n                # Track statistics\n                #...\n```","range":{"startLineNumber":997,"startColumn":0,"endLineNumber":1019,"endColumn":0},"embedding":"AABYPACwiz0AAA89AIClvQAghr0AoBu9AMCNvACARD0AoC69AKCDPQAAyLoAQO68AOAOvQAAnLoAwMK8AIDaPACAWjwAELU9AMBzvQCAZT0AABc8AMBSPQBgCD0AYA69AACgOgCgE70AABk8AICvvAAQuj0AAB49AIBovQBADr0AUJu9AKAZvQAQrL0AACK7APCPPQDgYT0AgBW8AACZOwCgCj0A8My9AOAMvQAwxD0AoCU9AECZvAAQtD0AACa9AEDlvACAbrwAYBu9AABUPQCAbLwAMIo9AKAcPQBgGj0AwO28AAAOPAAAgbsAQNc8AIBzPACgQ70AANM8AADKOwAA+DoAoCq9AMB4vQAAELwAAEq8AGAAvQAAfrwAQN28AMAJPQDAijwAAA47AOAavQDANj0AUNw9AMBnvQDgML0AoDW9AAAavABAmzwAQOk8AAC1vACgir0AeBK+AMDVvACg4r0AwG69AMCJvADAgTwAoEa9ADDxPQDgLj0AYCk9AADEOgDge70AwIU9AAA9vACQjD0AoAM9AIACPQAAtTsAgMk8AIDJPAAgHT0AwII8AACTPACQiT0AAJG7AAC0vAAAp7wAAOq8AADhOwAAtLsAgLi8AIAqvQCACbwAYBi9AIBZPAAANbwAwDE9AMB8vQCgGj0AIBk9AFCXPQDAtL0AQNK8AIAEPAAAKrwAQAQ9ADCgPQBgXb0AIB29AIARvQAAuDsAgGc9APDWvQAQrz0AAC48AECMPAAA8LwAwAc9AKDDvQCAv7wAAG+9AHCTPQAQk70AMMg9AIBrvADw1j0AACE8AACZuwCAYr0AoHq9AABgugCAST0AgM08AOCdvQDAhbwAAPM8AABKPQBARb0AAIm7AMBvPQAACrsAgJ28AGAbvQBQlL0A0JE9AIA7PQDgFD0AwNW9AIAFPAAASLoAoEi9AAD0uwCAeL0AUJe9AGAfvQAAKrwAgEk8AICFPADw1b0AAA68AGA3PQCgDD0AgBw8AAA8uwAgeD0AAM67AGBLPQBgLz0AAIU7AOA6vQCAlDwAwK88AIB4PQAArjwAYDK9AACFPAAAKjsAoA69AIAtPQAAZ70AgAe9AAAfPABA6rwAAJC8AMD3PABAjzwAwIs9AAAcOwCALrwAAIw7AIAVvQAAAjsAwHk9AKCzPQAA/jsAEIk9AMAyPQCAejwA4Ao9AIDhPACgcj0AQO+8AABmPABAEb0AAE47AACUvACAhbwAQAk9AEChPADwxr0AQLa8ACAHvQCgcz0AwBI9AAC8vABgVz0AgG68ADCevQDQkD0AgLo8AACDvADgd70AgIu8AFCVPQCgwj0AwPA8AIAOPACgdb0AALe7AOAlPQBghL0AAIQ6AFCDvQCABjwAoF69AAArvACATL0AAPC7AACkPACAUbwAwA+9AACJOwDgCb0AgH69AAACuwAABLwAYAs9AMA8PQCAgLwAoAU9AKB+PQBASj0AAJM8AEDwvAAAjLwAgKa8AIAxPQAAODsAAAY7AEDGPADAzjwAQNA8AGA6vQCARbwAwMc8AIDtvQDgbT0AwNC8AABYPAAAoTwAQKu8AIAcvQAAVjsAACy9ACAwPQAA0TwAQHi9AMAhPQDAp70AAOC6AECrvABAvDwAwGE9AAAbvQDgbL0AAEW9AOBWPQAAhDoA4BI9AOA1vQCAWLwAcJw9AMD2PAAAlrwAELK9AKAyvQDgIr0AABI9AABguwBAXz0AEMm9AECjvAAALjwAgHW9AABsOwAAsrwAwNm8AEC1vACgAj0AQHc9AICavADgNz0AAGY7AAAsOwAw970AgKa9AHCFvQBA+7wAQIw8AMC5PACAEb0AwCo9AIDGPAAA/7sAAFa7AABkvABA6zwAgGe9AACavAAADzwAANm8AMDlPAAARr0AgAO8AAANPADA5zwAwEg9AICpvAAA3DsAAJm8AECTPADAsjwAAHW8AABgOQCgbj0AAOk8AHCLvQDgVb0A8MS9ABCvvQDA9TwAICU9AADoOgAgCr0AwIM8AACruwCgBz0AAGQ7AABAugCgHD0AgBw9AADmuwBgh70AgHM8AAAoPABgZ70A4Bi9AGBbPQBgNj0AAMA6AAACPQAAWz0AwPM8AIC1PQDAuLwAgMA8AMCwvQBgQT0AAGY7AGB6PQBAjTwAYD89AACguwAAVDwAoL89APDIvQAgAT0AcIi9AIBSPAAAvLwAAOe7ACAMPQDgQb0AgKM8AOAjvQDgGr0AAIA6AADPPADgXr0AQNa8AEBlPQCAAL0AALQ7AEA5vQBAcb0AQMm8AAA/PAAAZrwAAEY8ACCMvQAAJTwAgA68AMCMPAAA0LoAgBo8AMBNvQAA0bwAAM08AAAIvQAA3jsAwFq9AIAjvADAjrwAAEY7AAD1uwCAFjwAgMy8AICnvACAs7wAwLm9AKBAPQAA8DwAgKA9AMBJvQCgKj0AwGS9AIADvADAxzwAgF+8AMAqPQBAaz0AAEM8AEBePQDgGD0AwNE8AEBAvQAAGj0AgJM8AMCBPADAZb0AwIa8AAB0OwCARzwAwPK8AMCAPADgJr0A4BO9AIBnvABAdD0AMCw+AKBDvQAAcLwAgLA8AAC2uwDgTL0AgBE8AACiPACAibwAAPQ8AABMvQBAybwAANw6AAB4uwAADLwAQDw9ACCLPQDAgD0AADS7AAC8vAAAuzsAQEy9AIA8PQBA0bwAYH09AEAyvQAAMz0=","chunkHash":"a0b69e628ae48f7a0d6fbacc160560c4d7764ba0854183c3b6668fca0d35da47"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n                val_loss += loss.item() * volumes.size(0)\n                _, predicted = torch.max(outputs, 1)\n                val_total += labels.size(0)\n                val_correct += (predicted == labels).sum().item()\n                \n                # Save predictions and labels for metrics\n                all_preds.extend(predicted.cpu().numpy())\n                all_labels.extend(labels.cpu().numpy())\n                \n                # Save preview if requested\n                if save_preview and batch_idx == 0 and epoch is not None and output_dir is not None:\n                    save_volume_preview(volumes, masks, outputs, labels, predicted, f\"epoch_{epoch+1}_batch_0_val\")\n                \n            except Exception as e:\n                print(f\"ERROR in validation batch {batch_idx}: {e}\")\n                import traceback\n                traceback.print_exc()\n                continue\n    \n    # Print detailed classification results\n    print(\"\\nClassification Details:\")\n    #...\n```","range":{"startLineNumber":1019,"startColumn":0,"endLineNumber":1040,"endColumn":0},"embedding":"AIBGPABATj0AQMg8AMB1vQBgZ70AwNy8AIDJvADAHj0AQEi9AMBJPQAAWDwAANC8AEAGvQCABrwAANa7AMAKPQAABLsAcNs9ABCEvQCgRj0AADg8AEAXPQBADT0AgIC8AACtvABgH70AIAg9AACXOwAwrz0AAJA8AEB3vQAgN70AwGW9AJCEvQAgt70AAJG8ANCjPQAgUz0AABi9AAB4OgCAPTwAkPa9AACbuwCguT0A4EM9AADlOwDQ0D0AAAu9AGAAvQBAg7wAQEK9AGCMPQAAm7sAoIM9AID/PACAyjwA4AO9AEC4PAAAArwAAHE8AABeOwBgUb0AQMA8AEDKPAAAkjsAwA29ABCKvQCAhrwAAKM7AMD1vACAPrwAoDO9AICyPACAszwAAHO8AMAyvQAAtDwACAY+AKBsvQCgDb0AwES9AACwugAAUTwAIEQ9AACLvACAU70A6Bi+AIBJvACgvL0A4H29AABQvADAmDwAoBK9ACDlPQAAaT0AIDo9AADiOwBQg70AoHU9AADXuwAwkj0AwDs9AIDRPACAdjwAANY8AMCaPABA9zwAwMs8AICtPADgYD0AgHu8AADZvABgCb0AgNy8AIBEvADAirwAABY8AMCevAAAI7wAQJK8AABCOwAAGrwAQGs9AECjvQBAVD0A4Ag9AFCEPQDg270AgOS8AICkvAAAtrwAgDE9ABC1PQCQm70A4FO9AIAwvQCAD7wAAF09ADDTvQDgwT0AgK28AABvPAAAfrsAAOg8AODEvQDA4bwAoCW9AFCAPQCAp70AgKY9AACvvAAw8D0AAO+7AABGuwBAV70AgGO9AIAqPAAATj0AAPg7APCdvQBAvbwAwO08AMDfPACgPb0AgBE8AOBNPQAAprsAAG67AACRvABwpL0AwJg9ACCBPQAgMD0AIOC9AACEPAAAcLsAQHC9AAAkOwBgUL0A8K+9AAAgvQAAMzwAQKM8AADkOwAAwL0AgJe8AKAQPQCAPz0AABS7AMDMPACAaj0AQOW8AGBhPQCgHj0AQIE8AGBBvQBA3TwAALU8AMBYPQBAAD0AwBO9AMDyPAAAEzwAYCO9AIAnPQDgb70AoF69AAAYOgDA5LwAwM+8AICLPAAA+DwAgE49AAD1uwBAh7wAANO7AEA5vQAAaTwAQHw9AGBuPQCAhDwAwCc9AGAoPQCAijwAAF88AACgOwBgjD0AQM+8AAD4uwCArLwAAHg7AEDbvACANLwAwIo8AKAcPQAwxr0AwO28AMCsvACAYT0AIB89AMCavADAeD0AAMC7AJCgvQAAej0AwJM8AADWvADgRL0AgB68ADCZPQCA2T0AALc7AADNOwBgaL0AAPA6AEARPQAgX70AQLC8AAClvQAAsDkAwIG9AAC3uwAgYL0AAJk7AKAIPQAACLoAgJ+8AICTvAAAuLwAYES9AADyOwDADL0AoDM9ACAePQAA2LsAAPg8AGCQPQAgTj0AwNk8AICwvABA5bwAAJ67AMAkPQAADjwAAGS7AGAJPQAAXjsAADI8AKBAvQBAkbwAAMc8ADD+vQDA0jwAAN+8AMDkPACA5jwAQKO8AEDkvACAODwAgOi8AMDTPADAFD0AQFq9AMAQPQDAlb0AAIC4AABzvAAA7DoA4A89AKA6vQDgPb0AwLu8AKBCPQAAxLoAQO48AGCCvQDAi7wAMIA9ACAGPQCAZbwAgJ29AIASvQDgDL0AYC09AECKvADAgz0AwKm9AIBJvAAA+DoA4Bq9AADyOwDgIL0AwB69AECrvABAMz0AYEc9AIA3vACARz0AgAE8AMCtPACw3r0AsIW9AGA4vQAAGb0AgF08AABjPADAzLwAIBE9AIDWPAAAJbwAgNK8AECwvADgLj0AAIK9AADIugAAgDoAgKC8AIBhPAAgTb0AAMw6AIDaPACgQD0AIFU9AIDpvAAAi7sAAE68AIBAvAAAQDkAgBq8AAA4uwDAbz0AwLc8AHCKvQCAzbwAQAO+ALCnvQCgAj0AQLA8AACguQBgCr0AYB49AAAIvADA4jwAgGQ8AIAYPACAKj0AQNA8AACYvADwpr0AgNE8AIAqPAAAab0AQIi8AOAzPQBAVT0AANw6AKAbPQDAOD0AAAU9AMC8PQAAdbwAQJM8ANCjvQBQjz0AAF47AFCBPQAAdTwAIF89AAAJPAAAIrwAMLQ9AMDJvQAgIT0AcIq9AABBPADAxLwAAPy6AIBfPADAhr0AwII8AOAIvQAAzLwAADg6AID7PABgFr0AACK8AMBhPQCAyrwAAKu7APCFvQAQlL0A4DG9AIBOPACA77wAwJI8AMBzvQAASLoAAPe7AMDWPAAAELoAAFy7AEBDvQAAuLsAgAs9AIC2vACgQj0AIGS9AAAoOgCAALwAADi7AADdOwAAQDkAwA29AIA4vAAAkbwAwLy9ACB3PQAArzwAYLU9AAADvQCAjjwAQDO9AADjvADAAj0AQL+8AGA+PQCgYj0AABk8ACBSPQAAXjsAIDw9AMAIvQDABD0AAL47AGAgPQBgYb0AgGW8AADkOgAAMLoAgBO9AACAugDAHL0AgAa9AEDhvACgOD0AAC4+AEAMvQBgK70AwIE8AABgOQBAz7wAAAg8AMALPQBAmrwAgNI8AEAnvQDAA70AAEi7AMCbPAAAHTwAwHU9AICSPQDgdz0AwKK8AIBZvACAL7wAoDi9AGADPQAAirwAYDA9AKApvQBgIT0=","chunkHash":"5ddb2480e0dd2d07218fc574054976eb83de7f9ca29d1d00d761ed59fa7e1701"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n    print(f\"Labels: {all_labels}\")\n    print(f\"Predictions: {all_preds}\")\n    print(f\"Correct predictions: {val_correct} / {val_total}\")\n    \n    confusion = confusion_matrix(all_labels, all_preds) if len(all_labels) > 0 else None\n    if confusion is not None:\n        print(\"\\nConfusion Matrix:\")\n        print(confusion)\n    \n    report = classification_report(all_labels, all_preds, output_dict=True, zero_division=0) if len(all_labels) > 0 else {\"macro avg\": {\"f1-score\": 0}}\n    \n    # Calculate metrics\n    val_loss = val_loss / max(1, val_total)\n    val_acc = val_correct / max(1, val_total)\n    \n    # Calculate F1 score (macro average)\n    val_f1 = report['macro avg']['f1-score']\n    #...\n```","range":{"startLineNumber":1040,"startColumn":0,"endLineNumber":1057,"endColumn":0},"embedding":"AAD0OgCggz0AwOw8AABovQBge70AgPi8AMDxvACA8zwAoF+9AICDPQAAhrwAYAC9AIAlvQAAGLoAAD67AMDAPAAAgLgAEK49AIABvQBAXz0AAP07AOAPPQBADT0AAH68AIAJvACA7bwAQM08AABGuwAwnz0AoA49AKCMvQBgE70AYGG9AGCcvQCQo70AANC5APCHPQDgTz0AAPC7AABquwAAgzsA4J29AAAkuwAgnD0AIAg9AIAQvACgvj0AgL+8AMBAvQAAcjsAUI69AKByPQBAirwAoKA9AKAkPQCgBj0AwNa8AICpPAAAprsAAN87AMCYPACAKb0AQLA8AEDPPAAAFLsAAB69AGCNvQCAOLwAACo7AOBKvQDgGb0AAMe8AIC7PACArzwAAGo7ACBsvQCAtjwAcPA9AIBnvQCAwrwAwHe9AABvvAAAnzsAwKo8AAD8uwDAcr0AoA++AABEuwCgt70A8I+9AADnuwAAvTsAQFy9AEDnPQBgOz0AwPQ8AABIOgCgdr0AYAs9AAAmuwBgrT0AgA49AECfPAAAITwAQMo8AMDnPABAvDwAwLA8ACAhPQAgWT0AAAq7AIAxvADA9LwAYAC9AIAjvACAlbwAQJG8AIDDvAAAFzwAYCG9AABOOwAAlrsAgHw9AICJvQDgTD0AwDk9AKBgPQAAvr0AgCe9AAAFvACAsbwAQEw9AACRPQCgdb0AoG+9AADMvAAA4DoAoAM9AJDivQDgwz0AACi6AIAYPAAAh7sAICc9AGC1vQDAu7wAgDq9AECCPQDQpr0AsKM9AADSOwCA4D0AANC6AACROwDgBb0AAHq9AAASPACAzTwAAHA8AACxvQCArrwAICI9ACAyPQBgAb0AAAI8AAB2PQBAtLwAgFC8AKACvQDAqr0AIKI9AOBlPQCADj0AAPW9AABaPACAHrwA4DK9AECevACga70AUJK9AEBJvQCAGTwAAM47AAAePAAAlb0AAOu8AKAhPQBgOD0AgAE8AIDwPABAaD0AgLy8ADCKPQBA3jwAAC48ACBgvQAgIT0AAH08AMBMPQAAQj0AYDO9AMDwPAAAQjsAIG69AECSPACAVL0AMIG9AADBuwCAuLwAAAy8AACcPACALDwAoIA9AICIPABA3bwAAD68AABFvQCAAzwAIIY9ACBqPQAABzwAoG89AAA7PQCAETwAAJM8AMC1PABgoj0AwM68AAA4ugAAKLwAABg7AMA6vQAAT7wAwKY8AGAhPQBwl70AAHm8AKAEvQDgQz0AIEg9AADAOQDQgj0AQIq8AKB1vQCApT0AAKY8AECzvADAgL0AAOO7AJCuPQDAvj0AQME8AAAGuwCgXb0AAOk7ACBKPQCgc70AgIi8AJCOvQAA/LoAgLi9AACfuwBwkb0AABq7AADSPAAA/bsAQK68AMCMvADAQL0AQDy9AECbPACAD70AYDo9APCEPQAAbDsAgHo8AMAzPQCAaj0AICQ9AGA1vQBAFr0AwJe8AGA6PQCAEj0AAJK8AMDMPAAAPbwAgJE8AMD1vACAD7wAAI48ANDsvQAgMT0AQM68AECPPACAOTwAoD69ACA6vQAAQLkAgNy8AEA0PQDApzwAID29AEABPQAQp70AAHg6AICwvAAAB7wAoFI9AABpvQDAUb0AABC9AGBePQCADbwAgAU9AGBSvQCAP7wAIII9AKAFPQAA97sAALy9AMBEvQCAvbwAwNw8AIAUvQDAbD0AoJm9AAAivACATrwAQPe8AICtPAAALLwAIDW9AIAqvADgFz0AgF09AAA+uwCAfj0AACC6AAAEPQAQAb4AYI+9ABCAvQAgO70AgBI8AAB6PABgMr0AoDQ9AED1PABAuLwAQOm8AIB7vAAgYT0AgDm9AECNvACA2DwAQPm8AMAlPQCATr0AANe7AAC3OwAgFj0AgIQ9AKAYvQAA8DsAABg7AABQOwAAGTwAAJC6AEDyPABANj0AADQ8AICavQCA+7wAcOK9ABDrvQAAKT0AgM88AABeOwBApbwAwE89AAD0uwCAJT0AAOw6AADWOwDgQz0AwIc8AICavADgnL0AAO48AIAPPABwh70AwK+8AMAfPQCA7zwAAMC4AIB5PQBgWT0AQEo9APDAPQCALrwAgGE8AHCXvQCgRz0AAJC8AABDPQAALTwAYCs9AADYOwAAUjsAwOk9ADC/vQBgOz0AkJ29AADMOwBAzLwAAEI7AMCIPADgA70AADg7AACcuwCAwbwAAAU8AECUPADgJL0AgAi8AABIPQAAerwAAGU8ALCjvQDgY70AYBC9AABHPAAAm7wAQMU8AMBKvQAAcjsAAHi6AEDyPAAA0jsAAJ07AIBtvQAALLsAgMo8AKAevQAgGj0A8IO9AADnuwCANrwAAK47AAB8uwBAjrwAAK+8AMCWvACAIbwAMIm9AIA3PQDAmTwAANE9AIDdvABAdj0AIAu9AACavACAvjwAgM+8AKAXPQBgfz0AgAg9AIB+PQDALT0AgAM9AEAjvQDgAz0AgGw8AIC7PADgMr0AAKq7AABgugAAUjsA4GW9AADoOwDgG70AAGq8AADIvABAmjwAgDM+AMDsvAAAS70AAOw7AACVOwAATbwAwLE8AAAQPQDAlbwAwNs8AGBcvQAA4zsAgEC8AACGuwAA/DsAoBk9AGB1PQBAfD0AgIk8AIA2vAAAbrsAoB69AGA8PQCAZ7wAoDw9AEAIvQAAOz0=","chunkHash":"35bc35e185a8812ca4961601fc06c9faedab6ed0caa48dfaa7d89ec30aa95719"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\n    return {\n        'loss': val_loss,\n        'accuracy': val_acc,\n        'f1': val_f1,\n        'predictions': all_preds,\n        'labels': all_labels\n    }\n#...\n```","range":{"startLineNumber":1058,"startColumn":0,"endLineNumber":1064,"endColumn":5},"embedding":"AAC5uwDQoT0AAME8AEBtvQCAdr0AgDi9AIDEvABgMj0A4F29APCLPQCAZrwAoAm9ACAlvQAA8rsAAOC7AIDePAAACLoAQLw9AOBXvQAAPT0AQOk8AKA7PQBAkDwAwLa8AIBkPACA1bwAALg8AAAwPABgrj0AwLs8AFCPvQDgQL0AYDa9AEBXvQCQtL0AwIa8ABCePQAwkT0AAGS8AIAkvAAAIjwAgN29AAAUPABAqj0AAJ88AAAOuwBwtz0AgOu8AEA8vQAAIDkAwCe9AECCPQAAzLsAYKM9AEAwPQBAAT0AQMG8AEC3PAAAtbsAwJ88AIAdPACgK70AAH48AACRPAAAOjsAwDi9ADCevQAAlbwAAJ68AEDcvAAAE70AALK8AEACPQCAkTwAALM7AEBJvQCAvTwAEAE+AIBDvQDgHL0AoHu9AACEuwCACzwAAFg6AIBTvAAggb0AQA2+AAA8OwCwr70AACu9AAA6PAAAarsAwN+8AMDOPQCgTT0AEIA9AAAKPACAgr0AABg9AAD1OwCgmD0AwNk8AAA4uwAAtDoAoD49AAAVPQAgRz0AgBA8AACfPAAQnT0AANW8AADduwDAvbwAAA69AIA9vADAubwAABa8AIDzvAAAsrsAYAi9AACbuwAAsrsA8Ig9AABwvQCAYT0AYFk9AOA0PQBwvL0AQDe9AMCmvADgSr0AoBw9AJC/PQBgbL0AQFq9AMDovAAAhLoAwAU9ANDkvQDgvD0AAHA7AABAPACABbwAADk9AJC5vQAgBL0AgHW9AIBoPQDAk70AQKk9AABcOwAw2T0AACa8AADdOwAgbL0AIDi9AABwOgBAvDwAANA6ANC1vQDAq7wAAOc8ACA8PQDA+7wAQNM8ACBGPQAA1LwAgBK8AIBSvADwm70A0KM9AEBePQCAEj0AEOC9AMC0PAAAoDkAYAC9AAAAuAAwiL0AkIa9ACA5vQAAbrsAAMU7AAAEuwBQlr0AQKy8ACApPQAAKj0AAE28AIAIPACASD0AwKG8AMCbPQAgBz0AAHY8AOBavQDA8DwA4AM9AKBPPQCgEj0AoEy9AADlPAAAALgAQDa9AICDPABgZL0AUJO9AABJPABA4LwAQKC8AIAQPABgTj0AcIo9AAAaOwDAmrwAgAs8AID1vAAATLwAoJA9ANCOPQAAYDkAQEg9AKAEPQAAwjsAQJs8AIBuPABgfj0AwPe8AABOOwAAXLwAAIk8AAATvQAANrwAYAI9AEAWPQCApL0AAJO8AABLvQCAQj0A4AA9AIC2vAAQhT0AwLS8ADCIvQAAdT0AIAA9AAAmvAAAM70AAEi8ABCdPQCwvj0AQMw8AACwuQCgob0AABw8AIAyPQDwlb0AADy8AAC4vQCABTwA8IW9AAAauwCAbL0AADy8AMCoPAAAD7wAgL28AIBDvACgBL0A4DG9AIBkPAAANbwAoEM9AIByPQAAfTwAQB89AIBdPQCgIT0AIBE9AIDwvABgLr0AAK68AOBYPQCA8DwAAAq8AICLPAAAMTwAALA5AECbvAAAFbwAAMM7ABDdvQAgKj0AgJe8AMDgPABAuTwAgNC8AKBuvQAAnjsAAAO9AEBhPQBA+TwAIF69AMDiPABww70AABW8AGAxvQAAqDsAIAw9AEBevQCgcb0AQF+9AMA4PQAA9DsAwLE8AAA5vQCAgLwAsJE9AAADPQAA9rsAYKW9AKAMvQAARL0AgOI8AACJvADgkD0AcMW9AMD+vAAA67sAQAy9AACnPADA57wA4I29AACCuwBAFT0AkIA9AACKuwAAWD0AgCi8AIATPACICb4AEJy9ANCrvQCAFr0AAPk7AAAAuQAAGb0AAC89AIB7PABA0bwAQOi8AECEvAAgID0AkIS9AEDXvACAaTwAAOS8AIC/PABgYr0AAMC6AIDCPABgEz0AIIE9AMDvvAAAtbsAACQ7AACEOgAA3rsAgJq8AICuPACgKz0AAAA5ACB/vQCAFr0AUMS9ALCsvQAAET0AIAI9AACfuwBAybwAoAk9AACKuwBA/zwAAE28AACZOwDA/zwAIAQ9AAA0uwAQpL0AQMI8AACfOwCgk70AgHS8AEALPQBgIj0AgAQ8AOCSPQBAfj0AAA09APCXPQCARbwAAFI8AKCUvQDgSj0AgAO8ALCJPQAAFjwAIFs9AAANPAAAHrsA4L09AJCyvQAA9zwAQEK9AIA4PADAPr0AAAe8AACjOwDgG70AALS6AABguQBAzrwAABY7AICZPAAgAL0AAMG7AGAPPQCALLwAAMC4ACB0vQBgfL0AgPi8AMCQPADAFr0AAK48AGB4vQCAYzwAABo8AOAKPQAAMjsAgDO8AKBEvQCALzwAAAg9AMDEvABAMT0AQH+9AIAuPACAVLwAAHq7AADQugAArDsAAJ68AAAovQAAhLoAkL69AED5PAAAFjsA4NI9AMDLvADAEz0A4C29AAAbvACA0DwAAKy7AMAGPQBAsj0AwCQ9AMB/PQDAhDwA4AA9ACAGvQDgAD0AwAc9AIDgPABAEb0AAI07AIBnPACAD7wAgFW9AADBuwDA4bwAAKO8AADKuwCgAz0AsDg+AAAYvADgQ70AADc8AACauwDA0LwAgF88AADfPAAAjLwAgLE8ACAovQAAnzsAAAa8AABWuwAAgDgAgOI8AGB5PQDgjD0AAG08AABZvAAA6LoAAH29AEAZPQDAmbwAoAU9AIANvQDgTz0=","chunkHash":"8976064c914c1543b31643d71f55b972ac5419a02a8d7399acca24969575c610"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    # Parse command line arguments\n    args = parse_args()\n    \n    # Set random seed for reproducibility\n    torch.manual_seed(args.seed)\n    np.random.seed(args.seed)\n    \n    # Create output directory if it doesn't exist\n    os.makedirs(args.output_dir, exist_ok=True)\n    \n    # Get transforms\n    transform, mask_transform = get_transforms(args.target_size, args.use_augmentation, args.margin)\n    \n    print(f\"Setting up data loaders...\")\n    print(f\"IMPORTANT: Using raw unmodified data with NO normalization\")\n    \n    # Load data using optimized lazy loading\n    try:\n        # Use the masked dataloader or regular dataloader based on user choice\n        if args.use_masked_dataloader:\n            print(f\"Using mask-focused dataloader that extracts subvolumes only from masked areas\")\n            dataloader = get_masked_nuclei_dataloader(\n                root_dir=args.data_dir,\n                batch_size=args.batch_size,\n                shuffle=True,\n                num_workers=2,  # Set to 0 for debugging\n                transform=transform,\n                #...\n```","range":{"startLineNumber":1067,"startColumn":0,"endLineNumber":1094,"endColumn":0},"embedding":"AMD8vABA2TwAcI09AECcvQCgHr0AkJK9AACAuwCgSj0A8KW9AGAcPQCAjzwAgJY8AMD+PAAAUDoAwM88AAA2PABAZr0AwCg9AEA0vQAAOzwAgIU9AKAAPQAARTwAALe8AMC1vADAML0AIEI9AIDZPACABT0AAGK7AHCuvQAAI70AIJ69ANCMvQDQjb0AoBy9AKBwPQCA3jwAoBC9AACPvADArj0AQBy+AMC7vABgSj0A4F89AEBsvQBgMz0AMJC9AABkPABA/bwAwPS8ACB4PQDAgr0AwD49AACLPADQgD0AQJq8AAD4uwBAmjwAABm8AIALPQAwib0AACU8ACBCPQAARzwAABI8AEDMvQAAz7wAAH47AIDdPACgCL0AAEy7AIAjvAAAADoAQA49AAASvQAAbTwAkK49AJDZvQAAwbsAwMi8AAA6OwDgFz0AgNw8AMAlvQAw1b0A4M69AMAovQBAqL0AAAO9AACBPACAFLwA4Gq9ADC1PQAAuzwAAFI9AACcugDAcb0AAOA9AGAQPQCwnT0AADU9AIADvABAAL0AYLI9AMDmPAAgND0AIBY9AAAGPQCgtj0AAEu8AGAhvQAQjT0AoAu9AAAYPQCAfbwAoBw9AACBOwAA6rsAQP68AABfvQCAirwAgMg8AADbvABAxDwAwLU8AGDRPQDAv70AAF47AADgOgBAtzwAgBM9AECBPQBANr0AAHa9AAAOvAAADb0AAKM9AJCJvQBw5T0AoAe9AIBLPADAdT0AgAs9AGCXvQAA+7sAYI69APDLPQAAi70AQKw9AGAxvQAAvj0AgAM8AAAOvACAEbwA4HC9AABYOwBA4TwAgM88AEAzvQBAgLwAAK07AEDvPAAgFr0AgLs8AOCYPQCALDwAwKi8AEA0vQDAi70AQHA9AIApvAAAKDwA4H69AAAMPQAAVbwAUJm9AABFPABgm70AYAK9ACB4vQAAPrsAYAE9AAA6PQDAxL0AAOo8AAA3vAAAsDwAQB29ACAEPQDAGz0A4Ck9AOAXPQBgKj0AANy6AMDMvABwtD0AgJm8AACePQBAOD0AAGK8AEA+PQCAUzwA4By9AABYOwDw0b0AgGY8AAA0PAAAMrsAgKM8AMA0PQDgDj0AYB89AAAIugCArrwAACy8AKAKvQBAyzwAAHM9AGBCPQAAtDsAYCs9AADkOgAAMDoAID49AACrvACAFDwAAIS7AACwOQBgGD0AgEY8AKA3vQAAo7sAAPK7AMCrPAAgZL0AwNm8AEAHvQCAkTwAAJI9AMCJvACALTwAgMs8AGC8vQBgDz0AAHS7AAASvQDArr0A4A89ACA3PQBglT0AAFY8AIAtvABAdb0AoB+9AIDCPAAA9bwAAIc7AOBivQCACzwAAMA4AABzvABgf70AgBo8AIATPQCAQDwAwJG8AIAQPQAAKDwAQKW8ACBgPQAAVLsAYGk9AAAcPAAAJjsAAKU8AFCEPQAA7DwAQNw8AIB+vAAAVr0AgFQ8AOAdPQAA8TsAwKY8AMCIPACAN70AQKk8AKABvQAAW7wAAIE7ALChvQBAMT0AAAG8AKAWPQAAHrwAICi9AADbvAAAkDoAgF+9AMAjPQAAWzwAgDS8AEDDPQAgQb0AADA8AIBEvAAAkTwAoFA9AAD4ugAABDsAAPi7AEBBPQAAkLoAwHQ9AAAQugCAbjwAwM88ACABPQBAIr0A4Dy9AACovQAAADoAIBA9AIB0PACgXz0AQNu8AACBuwAAiLsAwIm9AIBpPABAgL0AQNS8AACBuwBgTD0AgK88AABtPACAqjwAgBk8AADxuwAw5b0AACm9ABCqvQDAa70AAPU7AMBZPQDAozwAAG49AEBePQAAGrwAQAS9AAAxvADAGr0AYGC9AIAMvAAAQbwAgIa8AGAbvQCAir0AYAi9AMCbvACQgj0AAI48AMDQvAAAFTwAAFw7AKAOPQDARD0AACC8AMB3PQBQhT0AAMK8AABOvQCAxLwAIPW9APCxvQAAkD0AQEY9AABMuwAA6DwAQKM8AEAbvQCAdzwAgMO8AAB3vAAgHT0AQAQ9AABWPAAAVb0AAKu7AECKPABwk70AgM28ABDiPQCAkLwAADC8AMCkPQAgPT0AwP08AACpPQBA1DwAANw8AHCHvQDAorwAAAC8ACByPQDAszwAAGg9AACbuwDA7LwAYGg9AKBovQDAFT0AwAa9AIBzPAAA1rsAAOG7AMCcPABQxb0AgA89AAAAOABArLwAAAO9AICZPAAAJL0AEIc9AMBMPQCAELwAwAw9AIC8vACgH70AwA+9AAC0ugAANDwAACM8AIC2vQCAW7wAQFo9AAC3PADgNT0AgNW8AAD9uwCgQb0AYDc9AKBovQAAyLwA4E29AMDDPAAAp7wAgMS8AEDiPACgcL0AAGi7AACYugDA/DwAYHi9ALCWPQAAhbwA4II9AABEuwBACD0AwEy9AKAsvQDgET0AACe8AAAfPQAARD0AgA48AABYPQAgej0AAFg6AACtOwAAujwAACc9AGAFvQDAW70AgJg8AACOuwAARLsAAES8AEBiPQCAbzwAIBS9AABJPAAgnT0AcAA+AADmuwAAsjwA4C89AEBivQBgZL0AwKI8AMDfPAAAj7wAwLc8AAAPvQDA67wAAEa8AIA5vACALzwAgME9AED9PAAQpj0AwNi8AADiPAAARDwAQLW8AECmPABgH70AsJ09AADsvACAvTw=","chunkHash":"cb840d307023abfca50ee356bec87a8a5430b2357820a9eb55120091e4b57045"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n                mask_transform=mask_transform,\n                class_csv_path=args.class_csv,\n                filter_by_class=args.class_id,\n                ignore_unclassified=True,\n                target_size=tuple(args.target_size),\n                sample_percent=args.sample_percent,\n                mask_threshold=args.mask_threshold,\n                min_masked_ratio=args.min_masked_ratio,\n                scan_step=args.scan_step,\n                debug=True\n            )\n        else:\n            print(f\"Using standard dataloader\")\n            dataloader = get_nuclei_dataloader(\n                root_dir=args.data_dir,\n                batch_size=args.batch_size,\n                shuffle=True,\n                num_workers=0,  # Set to 0 for debugging\n                transform=transform,\n                mask_transform=mask_transform,\n                class_csv_path=args.class_csv,\n                filter_by_class=args.class_id,\n                ignore_unclassified=True,\n                target_size=tuple(args.target_size),\n                sample_percent=args.sample_percent\n            )\n        \n        # Check the actual size of the samples\n        try:\n            sample_batch = next(iter(dataloader))\n            if sample_batch is not None:\n                #...\n```","range":{"startLineNumber":1094,"startColumn":0,"endLineNumber":1125,"endColumn":0},"embedding":"AICgvABAnjwAoHg9ACBXvQDgcb0AUIa9AADxvABgND0AQNy9AGApPQAAYjwAAPE7AECfPABAqjwAAAi6AMAnPQCAtrwAIBo9ACBYvQCADzwAAJg9AEA6PQAAkTwAAAC9AABwuwAAbb0AgNo8AMDyPADgRz0AABi8ALC8vQBAHL0A4Ky9AAB9vQAQsL0AAO28AHCNPQBgDD0AYD29AKAevQCQlT0AgA++AIBKvACA+TwA8I09AECevABgbD0AUIq9AADEuwCA8LwAIBa9ALCCPQCgjL0A8IE9AACQOwAAaT0AgDy9AAA4OgCAojwAwJS8AIAIPQBgI70AAEA7AKBBPQAAeLwAABY9APCLvQAAIb0AAJa8AACnvACAETwAANg7AIAhvQAA/7wAYDY9AAAkvACAhrwAkIs9APCfvQCApjwAAJS6AADkuwDAtDwAwBk9ACARvQBQv70A0LC9AEA3vQAAQ70AgKm8AAA/vAAAJTwAQHO9AFC0PQAAqDwAIDQ9AIBdPAAgPL0AYJ89AED8PABgtT0AIFY9AACQPACAIb0A4IE9AADBvABgCD0AABI8AEC+PAAA7z0AAEk8AIB7vQAgPj0AgM+8AIDAPAAAizsAgBI9AACcugCA+LwAgIa8AICqvQBAo7wAAAI8APCEvQCApzwAAEM8AADOPQAQoL0AAOi6AOAkPQAAiTsAwJs8AABaPQAAAL0AgGK9AMAEvQBAzrwAsKc9ACBuvQDg2D0AgKC8AIBoPADAMT0AwOI8AMCovQAA0bsAkJu9APC/PQAwhr0AYJQ9AIDXvAAgkj0AAOC7AIB/vACgRL0AQEO9AADUugCgRD0AAA+8AADbvADA7rwAADo7AIAhPQBgAb0AgAe8AOARPQAANLsAwLC8APCavQCgar0AwI09AKACvQBAQz0A0Ju9AADnPAAAHbwAYC+9AABkPAAgor0AYF+9AAAdvQCAfLwAgO88AAD1OwDAHr0AQN+8AMCqPACAqTwAwAO9AEDqPADgaj0AIEA9AECePACABrwAAGC6AICzvAAQiT0AAGu8APCZPQDQgD0AoD69AID9PAAAybsAwAy9AEC5vACw170AwAE9AACwOQAAbLsAgCI8ACAcPQBAtjwAIAU9AMDavACADr0AABS7AOAxvQDgNz0AABw9AIAoPQAAczwAwCI9AACkOwAA/DsAAEi6AIBTvAAAujwAAFY7ACBNvQAAAjwAQKk8AOCcvQDAmzwAAJS7AAAZPQAgY70AwKm8AMBTvQAAQDoAAC49AKCFvQCAAD0AQPs8AGBfvQAAkrsAAKy6AKAXvQAQ270AAGg9AKBfPQBgJz0AANs8AACYugDwhL0AwEK9AMBIPQDgMb0AgEY8AGCTvQAAILkAgFa8AIDTvACAir0AgCW8AEAFPQAA6zsAAGC6AOAhPQAAMjwAAIg7ADCGPQAAErsAYCk9AIATvACAkLwAwA49AMB9PQAQlj0AEIc9AOARvQBwgr0AwK88AIDQPAAAwTsAgGE8AADMOwBAibwAALE8AABnvQCAIbwAQJY8AOAdvQAgBT0AgP+8AACDPACAPDwAAIC8AACLvAAAUbwAEKW9AICGPQDgCT0AgFe8AOCSPQAwjL0AICI9AIB1PACALTwAgCg9AMDWvACgKb0AwIi8AOAiPQAAwDkAYIU9AIBfvACAqDwAAGA8AICqPAAAjbwAYEe9AOCivQAAwDgAoFg9AAAIuwAAIj0AoBm9AADcuwDAgDwAgLS9AAAAAAAAI70AQPq8AACOuwCAazwAAMs7AICdPABgET0AAGC7AMC1PACgDr4AgAa9AJCWvQBgB70AgCI8AMC7PAAAMDsAoEk9AIByPQBAQ70AwOW8AADPuwDA57wAgBm9AACGOwDA3LwAAAG8AMAtvQCA6rwAAOa8AIDzvADAVz0AAJM9AMCEvACAf7wAQMA8AADxuwAAqbsAQKe8AOAjPQCQoj0AgI28ACB6vQCAi70AIMO9AODovQDgyD0AQIo9AAAovADAUz0AwMw8AIAFvACAizwAYBC9AICcvADgNz0AAAs9AABUPACgpL0AgDw8AAAePADAj70AAII7AOCGPQAAwTsAACm8ACCxPQBwvT0A4AE9AADNPQDAzzwAgHM8AAB0vQCA8LwAgEK8ACA5PQCAWDwA4I49AAAMPAAAP70AIDA9ANCPvQAggj0AQGK9AECvPACASjwAgG+9AADOPADQqr0AgAY9AABMvACAOrwA4H+9AMAMPQBA3bwAoHg9AEDwPAAATjsAQGI9AIBVvADgEb0AQBW9AABcuwCAlzwAAE+8ACCXvQAApLwAYHA9AMBkPQCgLz0AYAi9AACQOgCAQ7wAwME8AMAXvQAA+DsAgBq9AMAYPQCAfrwAIA29AMAyPQBAhr0AAGe8AABOPADAIT0AENa9AEAMPQBAr7wAQIE9AABuvACAVD0AgJ28AEDovADAKT0AgAK9AOBJPQDAJT0AACS7AMCLPQBgRj0AgJs8AACeOwDAkTwAoAU9AAC0OgDgQ70A4EI9AOAZvQDA/bwAQMW8AIA/PQAAS7wAwOW8AACIPAAgKD0A2AM+AED/vACAE7wAQFo9ABCavQAALb0AgAA9AMDoPAAAjbwAADY7AIDRvADAh7wAgIa8AABMuwAAWDoAIHg9AAC0PAAwjD0AAFs8AEAJPQAA6rwA4Am9ACACPQAAQDkAAHk9AMDzvAAgJT0=","chunkHash":"e431981d2584630ee6dae21af1160d3ed764591746dcbb84a8178c237c5d7b4a"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n                if isinstance(sample_batch['volume'], list) and len(sample_batch['volume']) > 0:\n                    sample_vol = sample_batch['volume'][0]\n                    actual_vol_shape = sample_vol.shape\n                    print(f\"Actual sample volume shape: {actual_vol_shape}\")\n                    print(f\"FINAL VERIFICATION - Raw data range (should match original): min: {sample_vol.min().item():.4f}, max: {sample_vol.max().item():.4f}\")\n                    print(f\"NO NORMALIZATION APPLIED - ORIGINAL DATA VALUES PRESERVED\")\n                    if actual_vol_shape[1:] != tuple(args.target_size):\n                        print(f\"Warning: Actual volume size {actual_vol_shape[1:]} differs from target size {tuple(args.target_size)}\")\n                elif isinstance(sample_batch['volume'], torch.Tensor):\n                    actual_vol_shape = sample_batch['volume'].shape\n                    print(f\"Actual batch volume shape: {actual_vol_shape}\")\n                    #...\n```","range":{"startLineNumber":1125,"startColumn":0,"endLineNumber":1136,"endColumn":0},"embedding":"AICWvAAAursAANC7AIAvvQDAg70AEJO9AIAmvQCAzDwAsKG9AEDGPAAA0jwAAEg8AECkvADA8zwAQAo9AEC3PQDwoL0A8Jo9ALChvQCARbwAAJ48AAAKvACAST0AgPu8AMCyvADgpb0AoEA9AAAqvACwtj0AAN27AABSvQAACr0AgMq9AOCVvQDA5L0AgCm8AKAJPQAAfDwAwK68AOB2vQDQlj0AAN69AAARvAAAaj0A4Lo9AACCvACgnT0AQJe9AABmPACAuDwAYBK9AICdPQBAyrwAIDk9AAAiPQDAVj0AgLG8AABQPACAYD0AANi6AECJPACAKr0AANg6AEDsPAAAJbwAQOY8AMCHvQAAirwAwF09AADwuwAAbbwAAPk7AEAUvQBA+7wAAPq7AMCevAAAVjsAoFQ9AAC/vQAAgLkAoC+9AKATvQCAZDwAgDQ9AMABvQDAir0AaB6+AADpvADA7bwAAEK7AIC0vACAFrwAADo7ACDkPQDgNz0AgKg8AABRPABga70AkK09AICdvADQkT0AMMk9AAB6PAAAuLwAYFk9AMCUPACgRz0AgEk8AAA4uwCwjD0AALg8AFCjvQAgOj0AABK8AAAYOgAAO70A4D09AADDOwCgbb0AgLS8AHCfvQAAnLoAABy8AGAsvQBgEj0AAAE8APCaPQBgib0AgFC8AGBBPQBAjDwAwL08AIDrPADA27wAANq7ACA+vQCAhzwAoEo9AGA4vQCgoz0AwMO8AADUuwDgKT0AANU8AHCqvQAAoLkAEKC9ACCePQBACr0AQM49AMA1vQBAqT0A4Du9AADwuwCACrwAEIW9AIBSPQDwmT0AAMi6AADivACAVbwAAFo8AMAsPQAAMLoAALS7AAC6OwAACTwAABc8ABCHvQCgvL0A4Ao9AEAlPQCAmjwAEKS9AIBsPQAAh7sAwEq9AAAyOwCgQ70AwJ68AEBnvQAAOLoAAFc9AICzPAAAZ70AAKM7AADiPAAAlDoAwKI8AICqPACgOz0AQJs8AIAkPQAAzzsAAJM7ALCTvQAgkj0AAJ27AADhPADAJz0AgLu8AECGPACABzwAANS7AICxvADgqb0AoCI9AADBuwCgOL0AAJu7AMDsPADAMD0AIAk9ACAavQCA7LwAgKg8AMAIvQBAQD0AQP08ANCePQAA9rwAwC49ACAhPQAgjj0AgBi8AICAvACgej0AAE+8AAAMvAAA/7sAAIC6ACAAvQCAObwAwCS9AIBBPAAgLL0AwLC8AADDOwAAZjsAoBs9AGAzvQDASD0AYDw9AFCBvQAAMDsAAOE7AIC+vABQjL0AIDg9AEBIPQAAID0AAA08AADVuwAAYr0AwNG8AAC0vACAR70AAEy8AABxvQAAhDoAAAg8AAA1vACA7b0AABm8AIAbPABgIT0AAJ48AOB8PQCARTwAQOE8AMBgPQAAEzwAoA49AADwOQAAdLsAABY9AOBzPQBgKz0AYJ09AEBCvQDAAb0AwKA8AIAGPACAKD0AwN88AEDyvAAAsjsAgC09AADtvABAtbwAADo9AKCWvQAA9jsAACA6AADHOwAAhbsAAHA6AMA7vQCAcTwAAGu9AACdOwAA3zsAANG8AKDKPQAgPb0AAGQ7AMC9PAAA2TwAwC09AABCuwAgKT0AAPC6AEAhPQCAkrwAQE89AACKvQCAnzwAQIQ8AEDdPAAAOLsAgL28AHC0vQAA0TsAYAg9AGArPQBA8jwAACw7AIAhvACAUj0AcJG9AAAoPABA8rwAAPW8ACBWvQDAkjwAgEM9AMCkPACA/TwAoFC9AICbvABg2L0AYDi9AEA5vQAAQLsAAIg6AAA0uwBAsjwAwOM8AEBKPQCAS70AwI+8AECQvAAAVrwAABy9AAD1uwBAnbwAgBs8AEAKvQBAYb0AAO68AIBDvQBgOj0AUIs9AEAjvQAABrsAAPe7AMC+PAAAALsAAMa8AGA1PQCAkT0AIAu9ACAtvQCArrwA4PK9AIDDvQAgjD0AYGs9AAAAugBAuTwAgC28AKBFvQDAtDwAALM8AIAGPAAwgT0AADO8AEAyPQDgNr0AQJU8AAC0vADggL0AAJe7ACB1PQCgMD0AAMO7AIB0PQCQkD0AgFw9AACiPQAArLwAgDQ9AGB8vQCAhjwAQO+8AGDqPQAAezwAEJ09AIC4PADgBb0AgAk9AJCLvQCAvzwAILC9AKBJPQBA9rwAALc8AMA8PQAwmb0AgB48AMAIvQAA5bwAgCS9AABuPQBgC70AwPc8AECZPACA7TwAAMg7AKAFvQCAOL0AABa9AABkvAAAALsAgAa9AHCwvQDgTb0AAKY8AEC5PAAgEz0AgD29AAA0vQCA5LwAAAi7AOBXvQBApzwAADO9AKAbvQCQgT0AgIK8AABAOwDwir0AgPG8AADkOwCApjwAAGq9AMCJPQDAmbwAYE49AMC3vADAlTwAgAm8AACivABAXT0AABi9ACAyPQDQlj0AAA48AECNPAAAFD0AANu8AAAnvACAjT0AAJo8AIAOvAAgC70AYDc9AABNPACAWrwAgDW8ADCBPQAAJjwAYHW9AKB9PQCgkT0AwN09AIDrvAAANjwAAAs8AOBXvQCgxr0AAJ68AADuOwCAnLwAwNk8AIDmvACAIDwA4Bo9AOCIPQAA0LoA0Nw9AADcOwBQlD0AALS7AAAGPQAA8zsAQMO8AABlPABA6rwAQOQ9AGASvQDA0zw=","chunkHash":"076f4362e36b4fa43ad8e77556c11a955d19db5915ee14d744ca7a8b88806892"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n                    print(f\"FINAL VERIFICATION - Raw data range (should match original): min: {sample_batch['volume'].min().item():.4f}, max: {sample_batch['volume'].max().item():.4f}\")\n                    print(f\"NO NORMALIZATION APPLIED - ORIGINAL DATA VALUES PRESERVED\")\n            else:\n                print(\"Warning: Sample batch is None, could not check dimensions\")\n                \n            # Add extra verification with numerical data stats\n            if sample_batch is not None and 'volume' in sample_batch:\n                vol_data = sample_batch['volume']\n                if isinstance(vol_data, list) and len(vol_data) > 0:\n                    vol_data = vol_data[0]\n                elif isinstance(vol_data, torch.Tensor):\n                    vol_data = vol_data[0] if vol_data.dim() > 4 else vol_data\n                \n                # Print detailed statistics\n                print(\"\\nDETAILED DATA STATISTICS (should match raw data):\")\n                print(f\"  Min: {vol_data.min().item():.4f}\")\n                #...\n```","range":{"startLineNumber":1136,"startColumn":0,"endLineNumber":1152,"endColumn":0},"embedding":"AACRuwAAWzwAAEg6AFCMvQCgP70AQIq9AMA2vQAAJjwAQE29AMBcPQAgEz0AABG8AKBVvQAAEj0AwHo9AKCxPQDAar0A8Lo9AKCEvQAAaTwAAGs8AIAQvADA/TwAQCa9AID9vABQgL0AgPQ8AID3vABgyj0AAMC5AEBJvQAAIr0AAKG9AIBwvQC4BL4AgMS8ACAOPQAArLsAgP+8AGBwvQCAhj0A0NC9AAAgugCgWT0A0NE9AMCtvABw2D0AAG69AIA5PAAA5zsAwBG9AECJPQAA1rsAcIk9AEDHPADAaz0AgF68AICtPABgHz0AwKu8AECKPADgEb0AAAQ7ACAePQCAfrwAAPi6AACEvQAADrsA0IA9AACbOwAAQLoAwM48AICWvAAA3DoAAJ67AMD4vAAAWDwAYE09AIC0vQDABr0AoEC9AADqvAAAxLoAIBE9AECzvADgmL0AkCC+AMD/vABAML0AAPA5AIDYvAAAqLoAANM7APDjPQCgRj0AAKk8AECPPABAV70AEJM9AIARvACgXT0AAL09AECGPAAAZrsAwIs9AABEPQCgND0AAOE7AMCdvAAQjT0AAHQ7AABzvQCgWj0AgGy8AACruwAAADoAAB49AABEuwDA9bwAgAy9AIB+vQCAErwAAGo8ACCMvQAANzwAQIg8AICGPQCQs70AACK7AEDTPACAvDwAgNs8AMAoPQCAcLwAwN28AEAhvQCARTwAgMk8AOA7vQAQsT0AgAG8AIASvACgFD0AwME8AOBzvQCAgzwAUJu9AKDJPQAAN7wAMOk9AGAgvQAArT0AgK+8AABmOwAA1DoAICO9AGCHPQAgqT0AAJ67AAAFvQAArrsAAEA7AAAXPQCACrwAAOg6AECyPAAABDwAwPK8AOB3vQAwqL0AgBM9ACAOPQAgDT0A0KK9AGBnPQAAFrsA4Dy9AABYPADATr0AQMi8AABhvQCASrwAQOw8AKAOPQBgpr0AACo7AAA8PAAAzbsAAOE8AACWPAAgPD0AALg8AADgOgCAXzwAQOA8AGCmvQAgVT0AwIW8AIAoPQAAZT0AgAa9AACfPACADjwAABQ7AIAUvABAo70AQPA8AIA3vACAhL0AQIO8AIBuPAAAZD0AgOI8AIAxvABAu7wAQPU8AIA5vADAwjwAQOM8ABCAPQBAsbwAQCg9ACBIPQDQiT0AAC+8AABwvABwoT0AAES8AAAkOwAAODoAwLg8AACPvACA9bwAAJS8AIATPABA67wAABi7AIBXPACACDwAoEw9AGBevQCAhDwAQNI8AKADvQCAIDwAAC47AGAJvQDghL0AQCw9AMBVPQBA+jwAACg6AIB6vACAtL0AwCK9AGA1vQBAUb0AgFW8ACBlvQAACrsAAJS6AAC7vABoBL4AgFG8AIB6PACAUz0AgKk8AMBcPQAA0LoAAC08AOBfPQCAGzwAQE89AEC+PAAAnbsA4DY9ACBqPQDgEz0AEJA9ACA0vQAA4rwAwLo8AMCRPADAdT0AgCk8AACEvACAJrwAgCE9AAB2uwAAVrwAIB09ACCmvQAgLT0AgFY8AIBSvACAarwAAGY8AOAYvQAAUzwAoIe9AACdPACAVjwAQPq8ANDKPQDAjr0AgKk8AMDEPAAABjwAIAk9AABAPADAJj0AAFS8AOBZPQAA2bwAIFg9AABGvQDA/DwAAJM8AEAKPQBAkLwAgD+8AHC5vQAAkrsAABs9AAB9PAAA2TwAAPO8AAB3PADggD0AEJK9AIB0vAAAML0AQN28AIBxvQAAUTwAQCE9AACwOwAgHD0AgFa9AAAUvACgm70AgJu9AABbvQAAELsAAEc8AIBFvAAAZDwAwBg9AIBLPQAAlLwAwKm8AAAjvACAr7wAAF28AAA2uwCAJrwAAGi6AIAbvAAgjL0AQIu8AEDivACgLj0AoHU9AMAbvQAAyDoAAIA7AIAiPACAS7wAgDK9ABCAPQCghz0AwB69AIA1vQCAW7wAAPS9AMC5vQBQiD0AQE09AIBPvAAAyTsAAL27AAAWvACAwzwAANS7AABDPABgcj0AgKA8ACBIPQCAPb0AQKQ8AACuvAAQk70AAO27ADCUPQAgRT0AAPm8AAAlPQAggD0AwFI9ACCwPQAARLwAAO88AIBdvQAAuzsAwIu8ABDaPQAAYLsAsJ09AACYPAAAuLwAQO48AMBWvQAArDwAsNe9AKAfPQDA2rwAIAQ9AMBuPQAQlr0AgGI8AIDRvAAARLsAwCq9AGB2PQBAAb0AgCQ9AMDdPACAIDwAAPC6AAC3vAAAOr0AQEG9AIB7PAAACDsAYAu9AECKvQDAhL0AANg6AADlOwBARD0AMIO9AGBFvQDAv7wAAI+7AEBLvQAAADwAQHW9AKAfvQDwhj0AIAe9AIBcPABAir0AwK+8AIBQPAAALLwAIBq9AECMPQAAersAwEk9AAD/uwDAtzwAAJy6AMD5vACgtz0AoAG9AMDtPADAXz0AoBo9AIAPPAAA0DwAQOi8AABpvADQiD0AYBo9AAAWuwCgDb0AYF09AAAQOwDAibwAQBG9AACXPQAAM7wAIBu9AOBoPQBwjD0AIPA9AGAGvQBAIT0AANS6AKAMvQBg3b0AQNa8AADTOwDAnLwAwOg8AAD0OgAA9TsAANA8AMBEPQCABzwAcAM+AKAMPQCAmz0AgBe8AACxPAAASrsAQI68AAAgPAAgGL0AoK49AACAuwBgRT0=","chunkHash":"3108299ca8fa7957d6c6b48f11b94191fa68aa254c7f46a258f1e20f04805561"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n                print(f\"  Max: {vol_data.max().item():.4f}\")\n                print(f\"  Mean: {vol_data.mean().item():.4f}\")\n                print(f\"  Std: {vol_data.std().item():.4f}\")\n                print(f\"  25th percentile: {torch.quantile(vol_data.float().view(-1), 0.25).item():.4f}\")\n                print(f\"  50th percentile (median): {torch.quantile(vol_data.float().view(-1), 0.5).item():.4f}\")\n                print(f\"  75th percentile: {torch.quantile(vol_data.float().view(-1), 0.75).item():.4f}\")\n                \n        except Exception as e:\n            print(f\"Unable to check sample dimensions: {e}\")\n        \n        # Split into train and validation\n        dataset_size = len(dataloader.dataset)\n        train_size = int(dataset_size * args.train_split)\n        val_size = dataset_size - train_size\n        \n        # Create random split indices\n        #...\n```","range":{"startLineNumber":1152,"startColumn":0,"endLineNumber":1168,"endColumn":0},"embedding":"AABFvABApbwAIHE9AMCuvQDAG70AQGO9AGBDvQBgND0A4IW9ACAZPQAAaTwAwJK8ACAFvQCAdDwA4HE9ALCQPQDAF70AwGk9ABCVvQAAQz0AAIM8AAACOwCgTD0AANi8AIAavABA/LwA4I89AADOPABAxD0AADU8ACBbvQAA6bwAAJO9AEDSvQBgwb0AAI68AMBmPQCALzwAgGe8AAD7vABgbT0A0PK9AADcuwDAQT0AwJQ9AKAevQDAjT0AYGi9AECWPADAjbwAgDW9AABuPQCAeb0AgFM9AECOPACAAT0AYAW9AACmOwDAAj0AYAm9AABkPACgYL0AgOi8AEA0PQAAADoAALw7ABCHvQDgHL0AQJ08AKB6vQCAg7wAwNM8AAAhPABAjjwAIGM9AEDbvAAAWLsAIHM9ABDmvQAAGrwAACw7AIB3vAAAoLsAkJA9AIAwvAAglr0AcPW9AACuuwCAVL0AIBK9ACB3vQAAw7wAAKW8ALCjPQBAWD0AwJA8AAAauwCAWb0A0IQ9AAC4OwAgNT0A4J89AMCVvAAAqLoAkIg9AABuuwAAID0AwDA9AACTPADw0T0A4Du9AMA2vQAAuDsAwP28AAAFPACAXbwAwLg8AABlvABAlLwA4Ee9AECMvQBgEL0AIAs9ACB2vQBAjDwAAFo8AOAJPQBQ870AYCW9AOAxPQCAcTwAoCA9ACALPQDA5rwAAKW8AABOvQDAnLwAwFM9APCnvQCg0T0AYJG9AMCQPABgdT0AACw7AKBJvQAAELoA8J69APClPQDgOL0AkLs9AKBYvQCQjz0A4FM9AAAiPAAAyLwAQD69AED6PAAAOT0AAIc8AOArvQAA/LwAgJc8AMDRPACA77wAAIs7AADOPAAAArsAwIW8ACB5vQCwwb0A4Co9AAAxvABAWT0A0LO9AJCkPQAAX7wA4CK9AMDgPADAHr0AACy7AFDDvQAAyLsAALo8AAByvABgcL0AABg7AMC4PACAmrwAABu8AAA5PQDgRD0AANC6AIDZPACASzwAgAU8AEAHvQDgVD0AAOW8ACBJPQBAOD0AYAC9AJCvPQBAh7wAgH+9AABAOgCgrL0AQOK8AIAvPABQgb0AAAC5AOAKPQBA2jwAAEQ9AEAfvQCAM7wAQLc8AABUOwAAKrwAAEc9ACBrPQAAODoA4CQ9AAC1OwCAnzwAwNQ8AIAKvQCAVj0AgDE8AABBPAAAJDwAAPg7AMB8vQAAP7wAgCm9ACBTPQAAHb0AAEQ8AEDrvACASjwAwOk8AMD3vABAkzwAAIe7ACAGvQDAgjwAAPw6AOBQvQDgH70AALE8AAAVPQAAlz0AACS8AAAFvQBAX70AALK8AIAhPADA2rwAAEg7AGBwvQAAYrsAANW8AADrvAAQ5L0A4Aw9AKAMPQBAhDwA4EC9AAC+OwBAC70AwL28ACBCPQAALLwAAEo8AAAEPAAAkrsAABs8ADCqPQCAjz0AAAs9AMA5vQDAibwAoB09AADMOwCAmDwAgBQ9AACUOgDAqrwAwMM8AAC1uwAArLoAwCY9ABCevQBA2zwAAGA6AIB+PAAADbwAANa8AACIvAAAyrsA4Ne9AEDvPAAA7DsA4Ea9ACCVPQAgi70AgCs8AOBNPQAADz0AgDg9AMAVvQAAxjsAAOw7AEBUPQAAVrwAQBU9AEA/vQDA0DwAADK7AECDPQCA/bwAAGm9AKCLvQAAJ7wAMIc9AMCavAAAujwAwPa8AIAuPAAAgLkA8Ji9AADmvABAVL0AYCG9AMCtvAAA3jsAwM08AAA0vAAA/TsAQJa8AADpOwBgyL0AgHK9ALCavQAAx7wAAJ48AADuuwAARjwAMII9AEBcPQDAlrwAAEy9AECNvADA37wAQDq9AAC4vACA6bwAALQ8AEAEvQDwtb0AgC+9AMCPvAAATz0AQEI9AMAwvQAApTwAAHC7AECkPABAx7wAYDq9AAB0PACglj0AwDW9AJCXvQDA/bwAULy9ADCbvQDQmj0AkJo9AABKuwAAuLoAwMM8AAA/PADAkTwAgG28AAC9uwAgPT0A4GI9AADqPABgJ70AAGC7AAC5OwDAZ70AQI28AECaPQAAjLoAQN68AMCKPQAgsD0AQNM8APCwPQAAn7wAAPk7AKB2vQCAlTwAAAI7AFClPQAArzsAcKI9AABgOgDA+bwAAGg9AOCVvQAgCj0AIHy9AIBPPAAAzLoAAL47AEAcPQCQgr0AwI89AJCvvQCA3zwAwMS8AACiPACAHbwAQJ09AGAIPQAAUDwAAGK7AIAKvACgCb0AEJW9AAD2PACAIjwAoF29AICVvQAAZrwAAO88AECEPQCAzDwA4BS9AIADvQAAPLsAABC7AIBdvQAAeDsAAP27AEC8PADAWj0AgCY8AABDPQAgY70AwIA8AACguwCgLD0AUJK9ABCNPQAAZLsA4F49AACgPACA1jwAAOa8ACCLvQDAXj0AACA5ACAKPQDwhz0AAPy6AIDXPADgDT0AAMq8AMChPABgfT0AYB89AIDHPABAQr0AgFo8AEAzvQAAkrwAICm9ACBwPQAAnLwAgEq9ACAEPQBA3DwAOBw+AAABPAAAirsAAPM7AABHvQDQj70AANA7AIAIPABAnLwAwP08AABBvABAD70AAIC8AIANPADA/rwAIMs9AMAPPQCArD0AACO8AABrPACATzwAAEk8AMCQPABADr0AMKc9AKBWvQCAvzw=","chunkHash":"ca17c5f8c6486752f22fafdadd14af2ecec76979ba27b809848d9faec598bcd0"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n        generator = torch.Generator().manual_seed(args.seed)\n        indices = torch.randperm(dataset_size, generator=generator).tolist()\n        train_indices = indices[:train_size]\n        val_indices = indices[train_size:]\n        \n        # Create new dataloaders with the split indices\n        from torch.utils.data import Subset\n        train_dataset = Subset(dataloader.dataset, train_indices)\n        val_dataset = Subset(dataloader.dataset, val_indices)\n        \n        # Use the same collate function as the original dataloader\n        train_loader = DataLoader(\n            train_dataset,\n            batch_size=args.batch_size,\n            shuffle=True,\n            num_workers=0,\n            collate_fn=dataloader.collate_fn\n        )\n        \n        val_loader = DataLoader(\n            val_dataset,\n            batch_size=args.batch_size,\n            shuffle=False,\n            num_workers=0,\n            collate_fn=dataloader.collate_fn\n        )\n        \n        print(f\"Created data loaders: {len(train_loader.dataset)} training samples, {len(val_loader.dataset)} validation samples\")\n        \n        # Determine the number of output classes\n        #...\n```","range":{"startLineNumber":1168,"startColumn":0,"endLineNumber":1198,"endColumn":0},"embedding":"AECCvABAtrwAIJY9ABDUvQAAzrwAwDS9AOBzvQDArTwAAJu9AID8PACAETwAAFi7AADcOwDA0bwAwCA9AACgOwDgKr0AUIU9ANCVvQDgCD0AALM8AADgPACgPz0AQLm8AIDDvACADr0AwFQ9AEAyPQDgMD0AgH28AIAmvQAA6LwAkK69AEBwvQDAhr0AALW8ANCzPQAAQj0AIBO9AACMuwDgcz0AsBm+AIDXvABAND0AoIA9AEAuvQDQoT0AADW9AIAavADAv7wAgMy8ALCSPQCgfL0AwD49AABePADAxjwAACy9AMCIvADA9DwAACa9AIBhPADAR70AAMU8AAAkPQAAljwAAHg7AKC7vQCAPrwAAPW7AMC/vAAA+7wAAEW9AADuuwAACjsAgAA9AACwOQAAJLwAgL89ANDBvQAA0bsAQLE8AAAFPABAlzwAgGc9AGAqvQAgpr0AMMm9ACAdvQDgIL0AQB+9AAB4vAAAgLgAQGe9AHC+PQAA7zwAQLE8AIAgPABAkL0A4Kw9AEDXPAAAUz0AwGU9AIAbPABAjLwA8Ik9AABouwCA3DwAIFw9AACtuwCQuj0A4Fe9AIB0vQDgEj0AQPi8AEBMPQCAsrwAgAc9AADVvACAvLwAYDC9AGCvvQDgXr0AoDw9APCEvQAAijwAQMg8ABCrPQCA7L0AAPG7AIAzvAAA3TwAgKs8AIAlPQAA4rsAQCq9AKB5vQAAzrwAICo9AJCuvQBgzD0AUI29AADEOgAgZz0AQJg8ALCHvQAAo7wAUJa9AKCZPQCggb0AYH89AGB9vQCgTz0AYCc9AACOOwAAvLsAwHm9AGAUvQBAVz0AgCI9AOBCvQAAHLsAIAA9AIAAPQAAjLoAACI8ACA7PQAAlbwAAMm7AGChvQCAfr0AQIk9AACpvAAAbTwAgHy9AGA+PQAAsDkAMLW9AAAFvACgYL0AwJ69ALCRvQAAmbsAoB09AACeuwCghL0AwJ28AIAzPADAxbwAAMS8ACBYPQAA7TwAQN48AAD2PACgQj0AAGY8AAAbvQBgkj0AAJq8AJCLPQAAqzwAADy8ALCLPQCALbwAgHG9AIBTPAAwhb0AAKW8AEDFPAAAPTwAACA7AGBHPQDADj0AwN48AAAoOwAAfLsAgFk8AKAlvQAAsDwAwAI9APCQPQCAeTwAACc9AAAAuAAAMLsA4DA9AADevACABjwAAH68AADCvAAApzwAgEc8ADCfvQAA7DwAAHm9AKAzPQCAHb0AANy7AOAVvQDAAD0AIBM9AED9vACAIj0AwIy8AKC1vQAAOrsAAFo8AEBovQBAjb0AwDs9AIDvPADwlj0AAMM7AIBcvABAPr0AgE29ACA+PQAAHLwAQJ28AEArvQAA5DoAAK68AMDuvAAArL0AAKA7AEC2PABAET0AACG9AAAcOwAAYrsAAAg8AMBXPQAA+DoAwAU9AIB5PAAAQjsAgJM8AHC8PQCwjz0AQAs9AMBpvQDAer0AgJk8AEATPQAANjwAYDU9AABcOwBgAL0AALC6AAD0vAAAEzwAACQ9AJCLvQCAZj0AAJC7AEDlPACA5zwAwJm8AAAxvAAA5TsAwJa9AMD0PAAAPrsAoCm9AKB5PQCgb70AANc7AAAmvACABj0AgGw9AGAfvQBA6bwAAOo7AACpPABA97wAgHQ9AIB6vAAAqrsAIAc9AAA7PQDAIr0AsIi9AIDhvAAAALkAAIk9AAACvQBgCD0AADe9AKAJvQAAXDsAUI29AIAivADgT70AAAW8AIAnvAAA0DsAADC6AIAdPABArDwAAP47AACLOwBgGb4AgEe9ACBBvQDwg70AAKC6AGACPQAAQjwAYKk9AEACPQDAFL0AAE28AADfuwAABLwAEIe9AAC8vAAgJL0AwKs8AADmvABgML0AwKm8AADNOwCwzD0AQHM9AICUvAAAejsAANs7AADauwCgHT0AAGA7AIDSPABgVD0AwIG8AIBJvQAA1rwAIOO9AMCQvQCQvD0AgHo9AIB5vACA4DwAALa7AABTvAAAjjsAQOW8AABwOwBQiD0AoDs9AABjPACgcL0AABw8AIBMvABgjb0AACK8ACCXPQCAgzwAwN68AOB3PQDAPD0AgMg8ADDyPQAA9DwAAKq7AIAivQAAvbwAwKQ8ACC6PQDABz0AEJM9AABUPACAorwAAEQ9AABKvQBgaD0A4Fm9AIAXPAAAtLsAwBu9AIBCPACASb0AgIQ9AIBVvQAAM7wAAJq7AIBivACAbbwAQJA9AECxPAAA2DoAgOW8AACMuwCgKr0AABy9AABnPAAA5DoAwBq9AEBsvQAAkDsA4GU9AGCBPQBAhTwAQPq8AABYOwAAlLsAgGi8AHCWvQAAvLwAwMu8AICKPAAAuzwAQOW8AABQOgBAI70AgFY8AABCPABgAz0AUJ29AEAoPQAAkbsAkI89AICSvACARj0AwCy9ALCQvQBA/jwAALk7AOBxPQDgiz0AAHS7AKB7PQAAAj0AAO47AAAeOwDAmDwAgO48AIA6vACASb0AADk8AADtuwAAHDsA4ES9AEAQPQCAi7wAwJO8AMDDPADgLz0ASDQ+AEADvQAA1LwAIDA9AMBhvQBgYr0AgB49ACAWPQAApbwAgCM8AEDyvADA9bwAQP+8AIBvPAAAaLoAkII9AACfOwDgTj0AAHS8AABAOwAAbbwAoC+9AAAyPACgMr0A0Jo9AACzvABgdT0=","chunkHash":"2b03740cb19ec028ce1d27e0cf11771f7c22fb5f517ac90f3507ded4b87237c6"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n        if args.output_classes is None:\n            # Get class information from the dataset\n            all_classes = set()\n            \n            # Load from the class CSV if available\n            if args.class_csv and os.path.exists(args.class_csv):\n                class_df = pd.read_csv(args.class_csv)\n                if args.class_id is not None:\n                    if isinstance(args.class_id, int):\n                        args.class_id = [args.class_id]\n                    class_df = class_df[class_df['class_id'].isin(args.class_id)]\n                all_classes = set(class_df['class_id'].unique())\n            \n            # Handle class IDs that start from 1 instead of 0\n            min_class = min(all_classes) if all_classes else 1\n            max_class = max(all_classes) if all_classes else 19\n            \n            if min_class == 1:\n                # Class IDs start from 1, so we need exactly max_class output classes\n                args.output_classes = max_class\n                print(f\"Classes start from 1. Setting output classes to match max class ID: {args.output_classes}\")\n                #...\n```","range":{"startLineNumber":1198,"startColumn":0,"endLineNumber":1219,"endColumn":0},"embedding":"AMAOvQAATrsA4Do9ANDovQDAsL0AwCC9ACBLvQBAzTwA4Ju9AOBgPQCgIz0AwIW8AADyuwAAdDwAYAA9AKAVPQCA2bwAgEE9ACCKvQAgUj0AACU9AMC/PACAqzwAoBS9AAC+uwBAo7wAoFE9AEAqPQAgVj0AgI89AAAJvQBAo7wAEJe9APCMvQDAo70AYFy9AIDoPABA4TwAAAK9AIDOvACgUD0AUNa9AABBvABArbwAgBI9AADTvAAwqz0AQEW9AABIugAAlrsA0JK9AGCKPQCgO70AoHQ9AAAguwDgIT0AgAy9AIDQPAAAjjwAQCS9AMA9PQDgDb0AgIM9AAAtPQCAjjwAwDU9ACC+vQCAy7wAQL88ACAHvQDA37wAIES9AADAvAAAV7wAgK48AAAAPAAASLsA4DY9AEB+vQAArLoAANy8AIB/PACARTwAABE9AICFvAAAy70AQKi9AGBWvQCQ4L0AQPa8AIAJvQAAvDwAkJi9ALDpPQBAxDwAgAs9AABMOwBQmr0AEIM9AID2PACQ4j0AoBI9AABIugCASDwAoDY9AADHOwAA2DoAYHw9AICevAAwpj0AgNi8ABCzvQCAJjwAAFa9AIBdPABAEr0AwJ28AAACPQAAibwAoGu9AGAJvQDA8LwAAPE8ACCUvQAAwTwAACI9AEB2PQBwlr0AAIy8AAApPAAAPDsAgPQ8AEBXPQAAKDwAYD+9AIDFvAAgD70AoIA9ADCVvQAwlD0AgDO8AAAGOwDAnDwA4BM9AHCCvQAALrsAUIS9AEBlPQBggb0AkKM9AECpvABA6T0AAMk7AAAAOACAJTwAgCa9AADMOwCA3zwAIAI9AOB5vQAAtbsAAG67AIAMPQDA77wAAPm7AEABPQCAKrwAQIk8ACBzvQDACb0A4Ek9AAAPvABgOz0A0Ji9AEA1PQAA3jsAAFa9ACAEPQBg8L0AgO+8AIAjvADgM70AAK+7AACNOwDAsL0AQLY8AEAKPQCgbb0AgHC8ACBAPQAApz0AAC67AEALPQCAlTwA4CA9AACpOwAAJz0AgG29AADDPAAAIj0AYFW9AEBlPQAAKLoAgMO8AABaPADQmL0AAMM7AADougAAA7wAgB49AIC/PABAKj0AAHA8AMCPPAAAmLoAgPK8AACjvACACz0AQC09AKA4PQCAQrwAALQ7AAByvACAETwAAFY8ACA5vQCAGT0AAKM8AACbOwAAhDoAAOk7AKCgvQAAFjsAwCW9AACrOwAAJLsAAKg8AICBvACA3TwAAKA7AECpvADAjzwAAOY7AMBDvQAgJz0AAHw8AOBJvQCwqL0AgH08AAA2OwDgTT0AkII9AEChPABAhr0AQGK9AIDcPABAjrwAAKy6ACAovQAABLwAAM+8AADZvAAwpL0AAF67AMA5PQCAmzwAAOS8AAC4PAAAirwAAI47AEABPQBAojwAQCw9AABHvAAA2zsAAC08AEBaPQAwyj0AAHI9AKAkvQAAnr0AADC6AKB2PQCwgz0A4C49AAA7PADgPL0AALo8AKB6vQAA2bsAAM88AOAFvQAAzDwAQIa8AKAAPQDA2TwAIC69AABQvACA+DwA4Au9AACdPQAA1zwAAAO9AIDsPQCQmr0AAOw8AEDoPADAAD0AcKc9AKBSvQAApbwAgLa8AACGPQAA6LoAoC09AEAqvQAAh7wAwEY9APC0PQCAHrwA4HK9AMBVvQAA5zwAkJw9AADYOwAA0DwAsIW9AABEPAAA5TwAsLO9AAC8uwDgGr0AwLu8AACRPAAAoTsAANw8AADNuwBgGj0AYEq9AIBivAAgyb0AAK28AIDzvQCA5rwAANs7AAB4OwAA7DsAUIU9AGCPPQCAsrwAQBC9AID8vADA87wA0JC9AMCAPADgFr0AAPm7AAA8vADQ1r0AAKu7AACGvADgrj0AAMc8AIBavQAAvjwAAK28AABRvABAjTwAQAy9AGAUPQBA7zwAAI27AMCbvACA9LwAQOK9APDWvQDAgT0AgGY9AABkOwDAijwA4C69AAAAuACAozwAwO28AACAvADAjzwAoC89AABBvAAAkb0AQIk8AICuPADgjr0AAAK8AGCNPQCAbrwA4Ga9AABlPQBgUz0AIDo9ALDKPQAAWjwAgBy8AOB/vQAA7bsAAGS8AMCMPACALjwAQHs9AABGuwAA6LsAQA09AIDbvABAZD0AgA68AACwOwAAwTsAYAa9AABevABQtL0AYA49AMDRPADAvDwAADS8AABWPQAAIbwAgKQ9AMCHPADgGr0AAOs8AACYugCAtLwAAMm8AACKPAAAq7sAIAe9ABCJvQCgEb0A8IU9ADCtPQBgez0AgGy9AACkOgAAJ7wAAGa7AADlvADAvbwAID69AAA2uwCAgTwAQAy9AADwOgBA77wAIB29AACBPACAIj0A4HK9ACCRPQAASzwAAGE9AAAKvAAAyDoAAC67AICRvQBgpj0AoCe9AFCIPQCAoj0AAOk8AKB+PQAAMjwAAO+7AMAtPQBAPD0AAJ47AAA9vADA2LwAIDA9AAAIvQAANLsAwOi8AAA4PQBAt7wAgAC8AIBbPQAAOjsAmAM+AAAivQBAV70AANg8AMBmvQCgc70AwLM8AAB+OwCAobwAQBY9ANCDvQBAjLwAQKe8AIDaPABgUL0AIJo9AABNPAAwmz0AAIa7AMAsPQCADT0AgGY8AKAFvQBAsbwA0Jg9AGA2vQAAqDw=","chunkHash":"b1cb7ce4cd8a6bd0963f41fafa71e3f86edfdda9178b1bea0f3bae4cf03d80cb"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n            else:\n                # Standard case: add 1 because class IDs start from 0\n                args.output_classes = max_class + 1\n                print(f\"Automatically determined number of output classes: {args.output_classes}\")\n        \n        # Load model\n        print(f\"Loading model from checkpoint: {args.checkpoint}\")\n        \n        # Create a base model first to extract features\n        base_model = Vgg3D(\n            input_size=tuple(args.target_size),\n            output_classes=args.output_classes,\n            input_fmaps=1  # Single channel input\n        )\n        \n        # Load only the feature extractor weights\n        try:\n            checkpoint = torch.load(args.checkpoint, map_location='cpu')\n            \n            # Extract the state dict\n            if isinstance(checkpoint, dict) and 'model_state_dict' in checkpoint:\n                state_dict = checkpoint['model_state_dict']\n            elif isinstance(checkpoint, dict):\n                state_dict = checkpoint\n            else:\n                state_dict = checkpoint\n            \n            # Filter to include only feature layers\n            #...\n```","range":{"startLineNumber":1219,"startColumn":0,"endLineNumber":1247,"endColumn":0},"embedding":"AAC7vAAAwDsAQKY8ADDVvQBwqr0AYCy9ACBQvQDASD0AEIe9AKCEPQDgID0AAKG7AAAFvADAlDwAQOg8AMDFPAAABr0AcL89AMBdvQBADD0AQNc8AABPPADA2TwAgIO8AECcvAAAAb0AAOM8AMDCPADAWT0AYEU9AAAdvAAAqbwAwIi9AMCSvQCwp70AABa9AIDePACA+TwAAFe9AMAPPQBAbj0AgNy9AMD1vADA4TwAAA48AIBcvAAwnj0AwJq8AIARvABAmTwAgDq9AEC4PACghb0AwDM9AABYOgBgAD0AwJO8AAAEuwAAtbsAwPc8AEDjPACgfb0AAI08AEAZPQBAkTwAgNI8AEC7vQBAhzwAANw7AIDtvABARL0AQIC8AABKvAAA17sAQP88AACRPAAAyDsAMJk9AKB4vQAAyjsAAIC8AIBqPADAizwAIGI9ACAGvQAA/b0A4MK9AKAWvQDQ070AIJO9AADRuwAAGTwAcJ+9AEDQPQAgMj0AwCg9AAAVPABglb0AAGQ9AIDUPACQxj0AgMQ8AEChvACA6DwA4E09AACuvADA0DwAQCg9AAACPAAwoz0AQOq8AAChvQBABz0AgO28AADTOwBAD70AwOo8AABePAAAoDoAIBm9AAC2uwAA1rsAQPw8AHCAvQCAsDwAQPE8ALCBPQBQib0AANq8AAD5OwAAkTsAAK48AGAVPQAA4zsAAPS8AKAevQAA67sAQKs9AGDevQDAxj0AACK7AIBCvQAAjDsAoBA9AAB1vQAA4DkAcLG9AEB1PQBgl70AoJs9AEAivQBQyD0AgBA8AECevACAbrwAwGa9AAB0uwCAST0AAMU8AMA5vQCAELwAAIG7AEDLPABAmbwAAOe7AOCUPQCAEr0AABs8AMBavQCQor0AID89AACQugDgGz0AYI29ACBYPQAA4LkAsJW9AMDdPABQzL0AYES9AKAKvQCAF70AABm8AAATPQBQmr0AADQ9AEC4PADAEL0AAJ07AIAhPQAAcz0AAII8AAC6OwAAwLoAwDI9AAAqvADgVT0AoFW9ALCIPQBAHj0AQHW9AMArPQAAXLsAgPi8AAD5PAAgqL0AgJ88AGApPQCA4rwAwPQ8AECXPAAA6jwAgC49AIDFvACA4bwAoAC9AIAFvQAAhjwAAEE9AEBbPQAApzsAQLA8AAA2vAAAwjsAQM48AKAKvQAA5TwAAN67AEDVvAAAHjwAAE+8ACBZvQAA6DsAQAO9AACUOgCArrwAAIg6AMChvACANT0AQLg8AEBHvQAA1DsAgB+8ACBdvQDAAz0AgDQ8AMAmvQAgpr0AACq7AMC4PAAgbz0AwBg9AAA+uwCgU70AgOi8AIDHPAAAALsAADs8AKBYvQAAo7sAAAA5AICBvABQmr0AQNi8AAAcPQAADDsAALK8AACZPADA+bwAAKK8AMBNPQCAmrwA4Ck9AAAOPACAorwAgHg8ABCwPQAQjD0AgDU9AKAIvQAgXL0AAIC4ACB3PQAggz0AQNc8AADgOgBgQ70AYB09ACB0vQAA77sAACc9AADmvACASD0AAPa8ACA/PQBAwDwAABi9AIA2PADATD0AYFe9ACB0PQBgGz0AAFK8ACDEPQDwob0AUIU9AMDpPABAwTwAIIg9AIB4vQAAubsAwDa9ACCOPQCAAbwAACc9ACBRvQAA6DoA4CE9AKA9PQBAjLwAYDe9AKBvvQAA4zsAAGY9AOAgPQCA+zwAoBG9AIBpPAAA4zsAkJ29AAA/PABA7rwAQDS9AEDgvACAWzwAQMk8AOA6vQAAMD0AAGU8AEDdPADwDL4AIFC9AIDQvQBAPb0AgAY8AMDDPAAAgTsAoBQ9AAAtPQAA0rwAAOQ6AMC2vAAAGDwAcMS9AADaOwBgM70AAJy7AAAMvACQsr0AgKu8AOACvQBgrj0A4GY9AID7vACAfLwAgA28AAAIOgAA0DwAQOy8ADCMPQCgDz0AABM8AKAzvQBABb0AcN+9ALDbvQAAKT0AoII9AABQPABAyjwAAMS7AACougBAMD0AAP+7AADEOgAANTwAoGo9AEAgvQBwr70AgB88AIBJPAAQt70AAMW8AFCOPQCAPTwAQFa9ACCOPQDgAD0AIAw9ACDbPQAAsrsAAPg7ACA9vQAA07sAAD47AEACPQCAijwAwB49AACKuwCAOzwAoGM9AMCEvQDAMz0AAP68AMDcvACA0LwAAEa8AABYuwAAjb0AwMg8AADwPAAAOTwAALy7AOAYPQAgBb0AQBE9AKAYPQAAtLwAAOQ8AACQuQAAcr0AAB+9AADyOwAAwrsAQNw8ANDVvQAASrwAcII9AOBOPQBgKz0AAD+9AACAOgAAz7wAAMk8AMD2vABAs7wAcNu9ACADvQAAWrwAAOW8AABKvACgYb0A4D+9AMC7PAAAhzwAYKm9AIDHPQAACj0AQIY9AAA7vABA8jwAQAO9AJCFvQAgaj0AIAC9AEBGPQAgiz0AACU8AACCPQBAIj0AAAw8AAC4ugBgHD0AQL08AAAgvAAAI70AgHs8AADtPAAA/DsAQKy8AICaPAAA4DsAAJW8AMAGPQAABDsAUAU+AACjvABAVr0AwDY9AID/vABAW70AAPw7AAD5PADAprwAkIE9AICXvQCAa7wAAIW8AIBKPACAN70AEJk9AMAvPQDglj0AALu7AIAyPQAAsbwAgJk8AIC7PAAAxLsAIGg9AMBTvQAA7Ds=","chunkHash":"3ff911786ec6f21f58268bface2b954366dbf219875ba90906d53b7d73b824e5"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n            feature_state_dict = {k: v for k, v in state_dict.items() if k.startswith('features')}\n            base_model.load_state_dict(feature_state_dict, strict=False)\n            print(f\"Successfully loaded feature extractor weights from checkpoint\")\n        except Exception as e:\n            print(f\"Error loading feature extractor: {e}\")\n            print(\"Proceeding with randomly initialized feature extractor\")\n            \n        # Create the masked adapter model\n        model = MaskedVgg3DAdapter(\n            base_model=base_model,\n            input_size=tuple(args.target_size),\n            num_classes=args.output_classes,\n            classifier_size=512\n        )\n        \n        if args.freeze_features:\n            # Freeze feature extractor layers\n            print(\"Freezing feature extractor layers\")\n            for param in model.features.parameters():\n                param.requires_grad = False\n                \n            # Optionally unfreeze the last N convolutional blocks\n            if args.unfreeze_last_n_layers != 0:\n                print(f\"Unfreezing the last {args.unfreeze_last_n_layers} convolutional blocks\")\n                \n                # Get all convolutional layers\n                #...\n```","range":{"startLineNumber":1247,"startColumn":0,"endLineNumber":1273,"endColumn":0},"embedding":"AAAWOwCAKTwAANA5AKBnvQBAuL0A0Je9AOAVvQBgSz0AIE29APCkPQAA5jwAgE+8AECKPACAgDwAwOM8AAD9uwDAyrwAsOw9AMC/vACAOT0AQMo8AACcOwAAbLsAAPy8AABJvACgSr0AQMo8AAA6vABwhD0AwAQ9AMDQvACA0rwAIIa9AACgvADgTb0AwI28AIBuPQCA5TwAcKC9AIDLPADgqD0AuAa+ACB8vQCwhj0AQJ88AABPPABAfT0AQMG8AAACuwAAwDsAwLy8AOATPQAwlr0AAM88AMCkPACArzwAQOM8AAD/vADAsLwAQJA8AIAGPQCwmL0AAFy8AOAEPQAAADgAAPO7AOBnvQAA5DwAgJ68AIBhPACQhL0AgG48AAAAOwAAAAAAgJ48AABXPAAAsDwAMOk9AODOvQAA6rwAwAG9AMCNPAAAwTsAEIM9AECVvQDQ5L0AIL+9AACwuwAgc70AAGO9AMCTPAAAAjwAwEy9ALCOPQCgMz0AQIU9AAAQuwDAr70AEIQ9AAAcPADA6T0AAMM7AGAFvQBAujwAgFs9AIA4vACA6DwAAAI7AADvPAAwqj0AAGC6AKBivQAAOD0AAKk7AABwPAAA3bsAgC89AAB0uwAAzDsAgMO8AABOPACgDT0AAJq7AEA5vQCAfjwAwJU8AGB/PQDgar0AAB69AABuOwCATLwAADs8AOBWPQBAibwAQK28AEDYvAAAWrsAIKc9APCqvQCwuD0AAAo7AMA7vQAAzzsAgCI8AICHvQAAUTwAEJy9AOCMPQAwrr0AIIw9AEDKvACg1T0AgPM8AAD/uwAAD70AQHq9AIAVvAAgPj0AICg9AGAMvQAAxrwAQLU8AEDKPAAAyDoAwLC8AOBBPQBgCb0AgEK8AMBbvQCg5L0AYGc9AAAXPAAAfjwAIEC9AGBGPQAA/rsAgNS8AAAlPQCgAL0AYGy9AEAFvQDgbr0AAI27AIBFPQBgrL0AgCM9AIDVPADAi7wAYAo9AACDOwAA3TsAgAg9AICIvAAAkLoAoCI9AGANvQCwjz0AQBC9AMCpPQDwhz0AsIa9AACgOwAAtbwAgG68AICrPAAQqb0AwKc8AKA4PQCAP70AAIC5AOBWPQBAyjwAoB09ACAFvQBAk7wAAMI7AIAcvQCAzLwAAHg9AKAHPQAA2rsAgHM8AIAevAAAGzwA4BA9AAA4vAAAEbwA4CG9AOBCvQAARzwAgJm8AIAdvQAAijsAADq8AAC9uwBAfb0AgHU8AAAHvQAgej0AYDM9AGBNvQCAFT0AgAQ8ANCFvQAgJT0AACU9AABEuwCgr70AAAk8AGBKPQCgQz0AIC09AADevACgN70AAOy6AMA2PQDAxzwAQJo8AGB3vQAgMr0AAMC7AABQPADgeL0AAFa8AAAKPQCANbwAQNS8AED3PABAH70AQLu8AIAcPQAApzsAAIk8AEA3PQBAh7wAgI48ANCAPQDAjj0AAGM9AIDbPAAAAL0AgFW8AKAoPQAAGD0AAEw7AADIugDQpb0AsIg9ALCDvQCAkrwAoFc9AEAhvQDgoD0AQIo8AED6PAAAhDsAoGC9AMCrPAAAzTwAcKi9AIArPQAgJT0AALC8AGC+PQBgvb0AYI89AAAKPABAqDwA4FQ9AEBZvQDAprwAANe8AACRPQDAgbwAoAo9ACBRvQAAZDwAAMs7AAAAugBApbwAwJa9AIBwvQCAPzwAQKE8AIAhPQCAVDwAgC+9AICwPAAA4TsAULa9AEClPADgU70A8JC9ALCevQCANjwAAGA7AEC+vADgHj0AQDA9AKA9PQCQD74AYCy9AKC2vQAgCr0AAIk8ACAqPQAAXbwAgJg8AECOPACAvLwAAFE8AMAVPQCA1zwAQEO9AACyuwAA/bwAgBA9AICIvADAob0AQPy8AAAgOgDQxD0AYD89AOAGvQCAzrwAQMW8AAD5uwCAP7wAAMA7AFCBPQBAHz0AAFg7AACPvAAAVLwAAIe9AKBwvQDA7DwAwAY9AIBOPADgDT0AAF67AABYvAAQij0AAKe7AAD4PABAlTwAQPI8AIDivAAAob0AAOg6AMDxPADgx70AAKk7AEB4PQCAyDwAgEq8AAB0PQCAFTwAQKA8AACZPQDAD70AAME7AKBEvQCAYbwAQA09ACAXPQCAGD0AUI09AAC1OwAA1LsAEIM9ACCyvQBgPj0AAHS9AACmvAAAmrwAAM27AADsugBABL0AAKk7AAAzPQAA/LsAwO48AIAHPQAA3rwAQMA8AECvPADA1rwAYGw9AMCuvACASL0AAHa9AAAquwDAuLwAAEc9ALCevQAArTsA4Hg9AAA0vAAAYjwAgGa9AMD6vACAx7wAYGk9AIAovQDA0LwAkM29AOAlvQDAIr0AAMu8AAA7vABAwL0AYC+9AICZPACAbTwAAJS9AGDFPQCAIT0A4JM9AADkvABAIT0A4BW9AMAfvQBAtjwAwOO8AEBTPQAADz0AwBE9AEBmPQCAlD0AAL87AACCvAAAkzwAoB09AICPvABgcL0AQME8ADCVPQCA47wAgGy8AIDJPACgFz0AIB+9AACMuwBgNT0AqB4+AABvvAAA/LwAoDY9AABWPAAAIDoAABQ9AADYPABAkrwAQJg9AABivQCgM70AAIW7AIBdPAAAgrwA4GM9AGA9PQCQgz0AAIW7AEDvPACgb70AAOs7AABbPAAAOTwAwN48AMDivABAxDw=","chunkHash":"982857e4312539e17beec39ba6c2085657f9505be2d652e68b0029b2a8324dc2"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n                conv_layers = []\n                for i, layer in enumerate(model.features):\n                    if isinstance(layer, nn.Conv3d):\n                        conv_layers.append(i)\n                \n                # Determine how many convolution blocks to unfreeze\n                total_blocks = len(conv_layers)\n                \n                if args.unfreeze_last_n_layers == -1:\n                    # Unfreeze all blocks\n                    start_idx = 0\n                    print(f\"Unfreezing all {total_blocks} convolutional blocks\")\n                else:\n                    # Unfreeze only the last N blocks\n                    blocks_to_unfreeze = min(args.unfreeze_last_n_layers, total_blocks)\n                    start_idx = max(0, len(conv_layers) - blocks_to_unfreeze)\n                    print(f\"Unfreezing the last {blocks_to_unfreeze} of {total_blocks} convolutional blocks\")\n                \n                # Unfreeze parameters in the last N blocks\n                for i in range(start_idx, len(conv_layers)):\n                    conv_idx = conv_layers[i]\n                    # Unfreeze this conv layer\n                    for param in model.features[conv_idx].parameters():\n                        #...\n```","range":{"startLineNumber":1273,"startColumn":0,"endLineNumber":1296,"endColumn":0},"embedding":"AICuvAAAMrsAwLs8AMCovQDwsr0A4JC9AEBavQBAPj0AAKK9AOBLPQCApjwAQKm8AAA0uwDA/jwAQM08AICDPACQiL0AAMc9AIDavAAA9TsAAO88AAAGuwAAmLoAAIy6AAC9uwCAALwAYBA9AEAgPQDgeT0AwNU8AAAbvQDgJb0AgM69AEBtvQDQgb0AwEa9AIBnPAAAIDwAADm9AEASPQBwwz0AwOa9AMB3vQAAzDoAgI09AIAUPAAAMjwAIA69AMDBvAAAbzwAwOO8AKAcPQAQrr0AwBo9AAB7vACAbTwAAOw7AIDovAAAVzwAALc7AIChPABgP70AACo8AICwPACAMDwAAJY8ACCevQAAQrsAAFi6AACvuwCgx70AAKK7AAASuwAAvjwAgBU9AABYPAAAlDsA8Jc9AABpvQAACrwAwMc8AIB8vAAA2DsA4EM9AAB4vQDQtb0AANy9AAB4OwBggL0AAC69AICCPACAlDwA4IC9ABC1PQAArTwAgM88AIDhPACgF70AQLg9AMCZvACwpD0AoAI9AAASuwCAB7wAwPQ8AICQPAAAhzwAgKs8AIBMPAAQlT0AAAA9AMAXvQBgGj0AAGq8AADEugAAcLwA4AO9AABUOwAA97wAYCS9AIDUvACAKbwA4C49AKAmvQAAlzwAAGA6AJCiPQBARr0AAFi6AEDvPACAgrwAYGU9ACBdPQBAgrwAICS9AACSuwAAzLsAAKc9AIDAvADApz0AALu7AMC7vAAA0DwAQNw8ACBgvQDAZD0AQGu9AAByPQCglr0AwKs9ACAFvQBAUD0AgBQ9AAC4OgCA8LwAwEi9AECfPAAAKz0A0IM9AAB1vQCA27wAgD+8AOAmPQCAdbwAgA+8ACAlPQAAsbwAAGQ8ACBhvQCgyr0AAGc9AIC7vAAAVDsAIEi9AKCKPQDA0TwAIEu9AABXvABgXr0AAAg6AAB3vQCgAr0AgHw8AEDbPACgrb0AQOA8AICDPABgQL0AAIU8AEDiPABAAT0AwOs8AMCIPADA1TwA4IE9AIClvACwhT0AYLS9AAB2PQAQij0A0LW9ACA4PQBAIL0AIGa9AGAyPQDwsb0AAAi6AABKPQCgRL0AgHk8AIBiPADAljwAQOY8AIAfvQAAfbwAgNa8AGAgvQDAlrwAYB09ABCRPQDArjwAgGa8AED6vADgTz0AgD09AGAQvQAAvTwAAP27AIC+vADgSz0AAGC5AIBzvQCAKDwAgNS8AIAdPADA77wAAJC7AMDVvACAxzwAwGY9AECMvABAaD0AYGi9AIAEvQDAST0AwOY8AICxPACwnr0AQEI9AGBXPQAATDwAQGs9AHCHvQAAU70AAOG7AMDxPAAAhTsAAMg7ADCuvQDA67wAACA5AOAJPQBgoL0AACC7AICQPAAAjzsAIEG9AIBMPQCACrwAQLe8AGCaPQBAyrwAgB08AADsOwAAirwAQOk8ACClPQBggj0AEIU9AAAyOwAgJr0AAL47AID+PACgAT0AgEM8AECLvAAQm70AoCk9AEAovQCAADwAAOQ8AIDcvACARD0AgAQ8AACsOgAApTwAYE+9AACiuwCgET0AoE69ACBkPQDAnTwAQDa9AFCnPQDgir0AgO88AADmvAAA2TwAwG09AIC9vADAlrwAQPo8AEAkPQAAUbwAYHg9AGAnvQAA0TsAAJ48AOAtPQAAFDwAgJ69ANCgvQBArrwAgIE9AMDpPAAQrj0AAIK7AMDRPAAAUjwAgJW9AIB1PACA9rwAQOS8AKCPvQAAWbwAABW8AMBgvQDgEz0AgFu8AABSvADQvr0AAMA7ADCWvQAAE7wAICs9AGACPQBAjbwAwEs9AKAXPQAAujwAAGC8AICoPABAi7wAEI+9AIBnPACAubwA4B89AGBRPQAQsr0AAJu7AIBHPADQij0AYAo9AAC5vAAAoLsAAMM7AMD8PAAA6bsAQFa9AACTPQBAQD0AAH08AKBvvQCAx7wAEJi9ACC5vQAA8DwAQFU9AABzPAAA3DoAAJC6AEAcvQDgqj0AgFe9AIBhvABAgDwAwME8AMCCvADgy70AAIk8AMCXPAAg3b0AQA89APCLPQBA7zwAwEq9ACDBPQCAoTwAADA8APCZPQAAmDsAgOY8AHCsvQAASLwAwLu8AOBKPQAAYD0AcIQ9AEAKPQAAbLsAgOQ8ANDUvQAAhzsAICy9AAAyOwDATL0AADA6AADLOwBAwbwAYEo9AADYPAAA0LsAADa7AAACPQDgB70AEJE9AIApPQAAObwAAA49AIB/vACAobwAAP28AOAYvQAASbwAANW7AOBrvQAAfLwAAL89AIAaPAAAMLoAwLW8AAArPACADb0AgA49AKBIvQAA5LsAwMy9AIC7vAAAn7wAABQ8AMCzvADAbL0AAFq7AADLOwAAzDwAwGe9ANgkPgCAszwAsKQ9AAAwvACAKT0AgIG8AICQvADAwDwAYBa9ADCZPQBA6DwAAFQ9AOARPQBwiT0AAFu8AADbOwAAuzwAQNA8AAB1vACAG70AgNA8AMA9PQCAGDwAwIe8AGADPQAAyjwAQKi8AACUOgDA1TwAiBw+AKAgvQDgJb0AAAY9AADauwAA5bwA4AU9AACtuwAAkLwAIEE9AKC2vQAAZL0AAM68AIAHvAAA17sAgNI9AGCLPQAgkT0AgPW8AGADPQCAgTwAgEw8AACkPACAqbwAoG49AECIvAAAIT0=","chunkHash":"e53bb33b754ef0137644db85eec9aec604e8a77d20249158217ff81c17adfbcf"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n                        param.requires_grad = True\n                    \n                    # Also unfreeze the corresponding BatchNorm (usually right after Conv)\n                    if conv_idx + 1 < len(model.features) and isinstance(model.features[conv_idx + 1], nn.BatchNorm3d):\n                        for param in model.features[conv_idx + 1].parameters():\n                            param.requires_grad = True\n                \n                # Count trainable parameters\n                trainable_params = sum(p.numel() for p in model.parameters() if p.requires_grad)\n                total_params = sum(p.numel() for p in model.parameters())\n                print(f\"Trainable parameters: {trainable_params:,} / {total_params:,} ({trainable_params/total_params:.2%})\")\n        \n        # Set up optimizer\n        if args.optimizer == 'sgd':\n            optimizer = optim.SGD(\n                [p for p in model.parameters() if p.requires_grad], \n                lr=args.lr,\n                weight_decay=args.weight_decay\n            )\n        else:  # adam\n            optimizer = optim.Adam(\n                #...\n```","range":{"startLineNumber":1296,"startColumn":0,"endLineNumber":1317,"endColumn":0},"embedding":"AACZvADA3zwAoAE9ANCGvQAgk70AUIS9AAACvQBQoj0AIGe9ACAnPQAAfDwAALS6AADjOwBAtzwAgDs9AABTPADAnL0AsK89AICjvABAoDwAQJQ8AIDNPADAqDwAAN07AADXuwDArrwA4D49AAAzPAAwxT0AAMA7AAD3vADA27wA0OK9ALDHvQAwhb0AAE68AOAoPQDAsTwAgE+9AMC2PACgAD0AqBC+AEBbvQCAez0AQFo9AACkuwAAkz0AICO9AIAKvQDAmTwAoAW9AAA5PQDgC70AYEM9AIAqvAAAyDwAgDQ8AABgOgBAiTwAADK7AOA7PQBAn70AAEa8AOBLPQAAmbsAANA5AMDGvQCA6jwAAGu8AMCXvACQrr0AACO9AMCOPAAAWLwAAIA6AMCgPABAkrwAoIk9AGBqvQAAmjwAALi7AIDCvABAi7wAABY9AIAivQCgyr0ASAi+AOAfvQCQjb0AAAK7AACKOwCAa7wAAGC9AEDNPQAAKD0AQCE9AEDCPAAgML0A0ME9AIB3PACwsz0AEIQ9AAAcPAAAVDwAoCY9AKAgPQAABzwAoCs9AKAFPQDguT0AAGi8AECsvABgDz0AYCO9AADFOwAAPL0AAK87AADwPAAAa70A4Cu9AEAMvQAAG7wAwBo9AOCYvQBA7TwAAPc7AICkPQBge70AYBW9AADZPACAJzwAoGQ9AAB6PABgOb0AIDe9AKBBvQAA87wAIHQ9AHCJvQDQkz0AAI28AACeuwAASzwAAE88ANCvvQAA7TwAcIW9AJCSPQAwpr0A0LM9AADLvACgtD0AAFA8AMDYvAAATjsAgEa9AACHPADAGT0AQFY9AOBzvQAAiDsAgJI8AOBWPQAAnLoAwIg8AIBsPAAABb0AALC7ACBwvQDgrL0AwJE9AAC+vAAAajsAgEq9AFC0PQCAAzwA4HO9AACTvACgcL0AAI68AGADvQCAhrwAgJ88AEDDPADASb0A4EA9AAAPPQDgMb0AgEI8AKA8PQBASD0AgJ48AOBdPQCAYzwAoI09AIAzvQBAnz0AoI29AAATPQCQiD0AQFG9AMAPPQCAWTwAQDW9AADluwAQ0L0AALy7AADiOwAgCr0AABw8AABRPABAOj0AQLM8AEAevQDABL0AAPi6AIC5vAAA7TsAAGU8AIC4PQCABbwAgOe8AAB7vADAgT0A4AI9AIDMvACgCT0AAL+7AABoOgCAtzwAQKW8ADCFvQAATLsAAM+7AGBYPQBgPr0AQOU8AMDAvADA6TwAYF09AICwvABgET0AgMS8ALCAvQBAIT0AIAQ9AIA0vABgh70AAMw7AACYPQCAAT0AoDQ9AECovAAgRL0AANC8AIBwPAAAy7wAAJC6AMByvQDAIb0AwIu8AACfuwDwhr0AgIm8AAC5OwAAlTwAABu9AMC+PAAAArsAwKO8AHCAPQDA77wAQJI8AMCtPAAAm7wAgH48AIB6PQAAhj0AYE09AMAjvQDgFb0AgJA8APCNPQDA8TwAAIk8AIAvvABAXL0AwDg9AEAHvQAA9jsAwB89AMBYvQBQkD0AAF47AKAvPQAA8zwAwL+8AACNvAAAmDsAwKm9AKBVPQBAST0AsJ69AACCPQDgrL0AwB89AAAKvADgFT0AYH89AMBYvQAAIL0AIDk9AAA2PQAAxLwAAMQ8AKAlvQAAwLkA4Ck9AABTPQAAvzsAQBG9ACBwvQCA+rwAIC09AICYPACA7zwAgBa8AADTPAAAkLsAgD69AMDVPACgZb0AADy9AKBEvQAACrwAADI9AEBGvQCANj0AQIo8AIAovADQ+L0AYBe9ADCYvQAA0LsAgDE8AECLPADAwLwAwF09AICaPQBAqjwAAPa7AADOuwAABjwAwBW9AIDUPABAKr0AgNQ8AABnvACgk70AAN67AAAMPAAAYT0AgLQ8AMAFvQAA3zsAAMG7AEDePAAAKjwAAOC7AKCOPQBAET0AAKY8AODUvQAA7rwAILu9ABDHvQAgAj0AgFE9AACLPAAAUrsAgGM8AAArvQAAVz0AgPS8AAD/uwDAuTwAAI89AIAAvQDAdb0AwK08AICwPADgvr0AAJW7AACXPQBAqTwAAK28AKDnPQAgKT0AICU9AOC5PQBAAL0AADi7AICUvQCgO70AgBA8ALChPQAA6DwAwEk9AAAJPQAAiLoAoEo9AIBRvQBAHz0AkIS9AMDVPADA3bwAACQ7AAC5uwAAALgAgDU9AAB6PAAA6LoAgHC8AAAcPAAAg70A4Gg9AAAEPAAASjwAAFw7AMC0vAAAD7wAgKy8AIDZvABgHb0AAHe8AACDvQCAs7wA0IQ9AGA2PQAABDwAAMa8AMCOvADA17wAYFY9AABEvACAIzwA8OC9AAC0OgAAjzsAAK28AEC+PABgUL0AAIk7AACRvACAMjwAoGu9AEDmPQDAojwA8KA9AAAJPACAfD0AAP68AKAxvQCApzwAAPW8AKBvPQAAsTwAYDM9AKA0PQDwgD0AAMa8AAC1vABA2jwAAP07AACsugCAIr0AAHy7AMDVPAAAfDwAgGm9AOAPPQBAFT0AAIK7AICMPACAXzwAqBI+AADwuwDA5bwAAJg6AAAGuwCgBr0AwMM8AABAuQBAq7wAgFA9AOCWvQDgPL0AgGK8AIBqPAAAmDwAgL89AIByPADA7TwAALG8AKAIPQAAALoAgBq8AIDGPACAXbwAAHU9AKA3vQCAhTw=","chunkHash":"2c9a1c69c701639528a560ec95f9c41bb07493722e171f584aa1460e903cefa4"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef main():\n    #...\n                [p for p in model.parameters() if p.requires_grad], \n                lr=args.lr,\n                weight_decay=args.weight_decay\n            )\n        \n        # Train the model\n        print(\"\\nStarting training...\")\n        model, history = train_model(model, train_loader, val_loader, optimizer, args)\n        \n        # Plot training history\n        history_plot_path = os.path.join(args.output_dir, 'masked_training_history.png')\n        plot_training_history(history, history_plot_path)\n        \n        # Save final model\n        final_model_path = os.path.join(args.output_dir, 'final_masked_model.pth')\n        torch.save(model.state_dict(), final_model_path)\n        print(f\"Saved final model to {final_model_path}\")\n        \n    except Exception as e:\n        print(f\"Error in training process: {e}\")\n        import traceback\n        traceback.print_exc()\n    finally:\n        # Force garbage collection\n        gc.collect()\n        if torch.cuda.is_available():\n            torch.cuda.empty_cache()\n#...\n```","range":{"startLineNumber":1317,"startColumn":0,"endLineNumber":1343,"endColumn":36},"embedding":"AMCwvADABD0AQI08ACDRvQAgeL0AgBq9AMCGvADQij0AEIO9AGBdPQAA/LsAwMs8AABiOwCAkbwAAFc8AIBxPABgTL0AgLU9AOAmvQBA+TwAwDA9AEAJPQAA+DwAACQ8AADuvACAh7wAgHc9AACiuwBgUz0AQAM9AIBmvQDA3rwAUNu9ADCwvQAAVb0AwNO8ACCQPQAAozwAAF69AMDHPAAAdj0AABm+ACBOvQAQ5T0AQJ88AIAwvACgij0AAIg7AMDwvADAlLwAgGC8AACgPACgZ70AABw9AMCYvABgAD0AgJE8AAAtvAAA3DoAgOI8AEDzPAAgP70AgL68AIBUPACAtzwAwIK8AFC0vQAAMzwAgBW9AACdOwCgVr0AQNO8AADJOwAAyDwAAG28AECevADAzzwAUMk9AOBavQAAeDwAgBK8AIAevADA2zwAMJE9ACABvQCw5r0AEPa9AECivADAlL0AYBy9AACnvAAAdLsAwDO9AND2PQCgRD0AYHE9AEA3vQCgF70AcKY9AMCzPABQjD0AQAQ9AACjOwAAlzsAgDk9AACHPADAPD0A4FI9AAC6PAAg8D0AgFC8AMCrvAAA8jwAgNO8AGArvQBAFr0AAIi6AAAUPABAoLwAQBm9ACBDvQAA0bsAICw9AOCzvQAAIT0AgPc8AJCMPQCgo70AAPM7AAC0OwAAILoAgDY9AMDNPAAAY70AwIC8AMDivAAATLsAAGI9AMC3vQAQlz0AQIE8AIDHPAAAubwAAH88AMBjvQAA4TwAgA+9AHCcPQAAOr0AgEs9AMCMvAAAxT0AoAg9AIAOPAAgEb0A0JC9AKAQPQDgND0AwPs8AMCFvQAAODoA0II9AKA4PQCAybwAAH88AKA4PQDA6bwAwJw8AKAbvQDAwb0AgEo9AIA3vAAA2DsAYJK9ACBqPQBAiDwAEIK9AIAqvABgk70AAGa9APCEvQAAOjwAAE67AEANPQAgUb0AQOk8AEBQPQAAtLsAQPm8AKCGPQCAyDwAwA09AOAqPQBgFr0AwP88AICHPAAgRz0AYDC9AGBiPQBAZT0AwFa9AOCcPQAAoDsAgE29AEAHPQAAUL0AAHq7AAAgvACgI70AwJS8AIBnPAAgJj0AADY9AGAtvQAAB7wAAH+8AMDLvAAAMDoAADQ9ALCEPQCAMrwAAAw7AABfvABgfD0AgJE9AMCavACgNT0AAFC7AADkOwBgGj0AgLY8AKBhvQCAJLwAgI+8AFCPPQBgo70AAMY7ACAmvQCgez0AAI87AEC9vABASj0AAO87AMBwvQBAvjwAgGk8AABgOgCAy70AAMs7ACAiPQBgSz0AgBc9AAAJvQBgCL0AgM68AGB2PQAAA7wAwL68AACyvQCAVL0AAHC7AEDpvAAAsrwAAM+8AICaPAAAXjwAIAS9AADwuQAAGLwAgEq8AKCiPQAgIL0AIBc9AMAgPQAAZrwAAF47AECpPQDwgj0AoCQ9ACBQvQDgG70AgNY8APCIPQDADj0AwOA8AIBLPABAFL0AwII8AMCOvAAA5bsAgPU8AAC8vQDACz0AgEg8AEAwPQBAHz0AoES9AICuvAAAiDwAIG+9AGBEPQBA9jwAQEC9ABCRPQDQmr0AgBE9AIDUPAAAErsAUJI9AIBFvQCAVr0AAMA6AEAHPQCgF70AIDM9AMD0vAAAUjwAoIg9AEAUPQBAs7wAAHm8AKBgvQDgB70AICk9AAChOwCgCT0AwBi9AACgOgBArLwAgPa8AAD1OwBAD70A0IG9AAD4OgCgTz0AoH89AMB6vQAAET0AAPk8AADnvADQ4b0AQCO9AOCQvQCAebwAgDI8AIDVPAAA47sAwBM9ADCCPQCALzwAAKy6AMCNvAAA0LkAQLa9AMDyPACgPr0AQLm8AID+vABgPr0AABg7AGAXvQAAYj0AAIS7AOB9vQCAxrwAQIk8AADdPACAxLwAYAC9AGBvPQAAfTwAAB+8AKCrvQAAebwAMPa9AKCTvQBAKD0AACU8AADSOwCAOLwAgE+8AAD+vACgLD0AgGa8AAC9OwCAlTwAoGI9AACIuwAgVb0AAAY8AIBuPAAgwL0AQKG8ACCTPQCgCT0AAJC8ALC+PQAAdT0AYE49AIDLPQBgCb0AgBe8AGBRvQAAnDwAgEg8AOCCPQDAvjwAoCE9AABzPAAAnbsAgLQ9AAArvQBgVT0AwIO9AECXPADgh70AQB09AAAkvABAAb0AAA28AADIuwBAkLwAACi7AIAIvACga70AQGU9AECtPAAALLwAQOA8AABIvQDAHL0AQMq8AADUvAAA0LsAAIM7AJCWvQDA+bwAwEM9AADuPABAxjwAgGs8AACQvAAAw7wAwIk9AEDwvAAASTwAkKS9AECTPACA1bwAwK88AGAXPQDgEL0AAEK7AADmOwAACTwAIEG9APDkPQCAqzwAAGg9AIABPAAAYz0AwIC8AIB8vADgZD0AgE28AIAfPQDAfj0AwPk8ACAlPQAA3TwAACC6AACqOwCAtjwAAKK7AMA7PQDAEr0AQM08AABEvAAAVLsAwDO9AEDYPADgJz0AAFq8AAANPAAARrsAMB4+AEDZvABAa70AAFk8AAByPAAAMb0AQKw8AACTOwCAoLwAYB89AGBQvQAAZL0AgDK8AIDUPAAA8DkAEKM9AMBePQBgVz0AgBK8AADpuwAAkDkAwIK8AMDmPAAAU7wA4Fo9AMCGvQAAsDw=","chunkHash":"41e0574868cfa3d4318461c95ddd73225ed3d04e1d0cfb511ae353ec4b67a202"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef get_transforms(target_size, use_augmentation=False, margin=0):\n    \"\"\"Define transformations for the input data.\"\"\"\n    # This function should be imported from the original file or defined here\n    if use_augmentation:\n        return partial(augmented_transform, margin=margin), mask_transform\n    else:\n        return partial(basic_transform, margin=margin), mask_transform\n#...\n```","range":{"startLineNumber":1346,"startColumn":0,"endLineNumber":1352,"endColumn":70},"embedding":"AACuvABgZj0A4KY9AOB3vQCAqb0A4LC9AID+vADgUT0AUMS9AMDhPABA/LwAQKs8AADHOwAgM70AgAy9AAD1uwAAOzwAADc8AEB3vQCA/DwAoGg9AGAkPQDADT0AwNK8AACauwBgRb0AgIY8AECzvADAjTwA8Kk9AMC+vADgC70A4Fy9ADCdvQAAjDoAALq8AABUuwBQoz0AAAw8AAChuwCAbz0A0N+9AAA5vADA9TwAQJI8AEC1vAAAJT0AwNq8AEAPvQCAMT0AALC5AAB+vAAAVLwA4D09AMDkPADAuD0AgBu8AACYugAAALsAwIw8AADAOACAJ70AANc8AAB0vAAAIrwAQLQ8AGD2vQCAOTwAAC68AADguwCANLwAwLm8AEDovAAA5jwA4AI9AICXvAAAGLoAkC8+AEDKvACAgTwAgH08AEBqvQAA7LsAkIg9AEBNvQDAVr0AQJq9ACCcvQCwzr0AgIU8AACKOwCAL70AEIa9ADCYPQDgSr0AoIc9AIAEPQAAgbwAIC49AAC9PABgrD0AAKm8AIAcvABgOr0A8IY9AMDXvADATj0AAGa9AKC1PQAAvj0AAGy7AAC3vABwkT0AwPi8AMCNvACAsbwAQDq9AMBLPQAApLoA4EG9AABqvQAgYr0AAMM8AMDAvABgdD0AQBk9AOBdPQCgTr0AAMe8AACSuwAAKrsAAC48AKArPQAAxLsAQMS8AGCCvQCA4bwAwJ49AADpvAAAuT0AgNU8AECJPACAMTwAABo7AGCKvQAAhLwAAB29ADC6PQDgNb0A4MI9AGA9vQAAzjwAALo7AAC9OwCwiL0AALy8AADmPADgJD0AgK88AECZvQAAPbwAAGc8AOACPQBAxrwA4Fg9AAC5PAAAvLwAwJE8ACAFvQBg2r0AgDs9ANCnvQBAB70AgNC8AAACPQCARbwAwMC9AECNvQAgHL0AAIq8AAAxvQDA/jwAgJW8AAA1PAAAvrwAAPg7AMCAPADABj0AQLO8AACXOwBgCj0AAJw6AMC7PABADD0AAAM8AIArvABAdz0AMKO9ADD1PQCABj0AAEA7ACBcvQBAFD0AQKQ8AMBFvQCg170AoCi9AAD0ugCAO7wAgIc9AIDoPAAAEjwA8IY9AACgOgCgHr0AwOm8AOB7vQCAajwAANk8AHCCPQAA67wAYGY9AECkPAAA27wAAIS8AACUugAANrsAAGa8AAC9vAAAZrwAAPi6ACBSvQDAAL0AAKa8AGA1PQDQlb0AoD29AKAwvQAAtLoAgC88AABovAAA8LkAwPa8AOCCvQAAYLoAADQ8AADAOwCglL0AwAU9AABPPQAgKT0AQJE8AIBQPAAAdLwAgFY8ACAcPQAAEr0AADi9APC5vQBALT0AwD49AKAjvQDgdb0AgE08AKBUPQAAGj0AQKu8AKAYPQAAPD0AAGa8AMBpPQCwgD0A4B09AAAnPQBApLwAQLC8AAArPQDgHz0AgGE9AEDoPACAH7wAAEg7AACvPABAHj0AwLA8AAC8PAAAF7wAAOo8AHCGvQBAirwAkI49AAANvQAAUTwAQGG9AIB9PACgEz0AAN67ACAkvQCAUDwAIFu9AICZPACAaTwAgL+8AABBPQAAkr0AoF89AAAyPAAAnLsAAE49AIAPPQBApLwAgEm8AIDcPQCAE7wAgMW8AMDnPACAODwAAEc8AOAvvQAA47sAgKi8ADDOvQAAsLwAAJs7AADsPABA9DwAQIq9AIDHvAAAPjwAQGG9AOB8PQAgUL0AwAW9AEBQvQAAkzsA0MY9AADZvABA9jwAQK+8AMBOvQBw570AwCq9AOA3vQAgfb0AQCs9AAADPQCAdDwAAFY9AGBRPQAA+zsAgAM8AICIvAAgW70AACa9AAB/vADAYb0AgJu8AIBPvADgUr0AoAq9AGAUvQDAsTwAgLA8ACBpvQDAEb0A4AQ9AOASPQCAPrwAQJy8AOAGvQBAGz0AwMi8AKAAvQBAkr0AIEG9ABC8vQDwqj0AgCE8AMAYPQCAHj0AgKA8AEC4PAAASDwAgBE8AADqvACAjTwAwMU8AACUOwBAsrwAgAU9ACApvQDAvLwAwAK9ADDWPQAA2rsAgNI8ABD1PQAghj0AQMY8AEDzPACAhDwAANe7AKCmvQAAOrwAwPW8AKBSPQAAgDgAAGU9AAAWuwBA3jwAIEw9ABAOvgAA9zwAAPQ7AIDtPAAAYTwAAHo8AABsuwDgOr0AQI48AOAivQCAOrwAAMg6AECDvACAB70AAMI8AADSPADA4TwAwC49AIAlvAAAODoA4Fq9AKAsPQBAYL0AAAG8AEAkvQCAtDwAgBI9ANCdPQBAWj0AwBu9AIB7vADAjrwAwNM8AGgCvgBAhDwAoBW9ACCUPQBAp7wAANi8AAArPAAANb0A4Be9AMAfvQCgJz0AAPO8AAD3PACAqLwAAMY9AACCOwDgRj0AMIG9AABTvAAgGj0AAOg7AACLuwBAeT0AwK28AACouwAAjjsAAJE8AMAZPQAASzwAADc9AMCJPABANr0AgNk8APCEvQAAnzwAALQ8AGAoPQAA6LoAYDu9AAAAAAAA+TsAmAk+AEDJvADAK70AQFw9AHC8vQCAbLwAALQ7AACzOwAAQbwAQIg9AAAfvACAgzwAwNa8AEDvvABAyDwAwNQ9AIAsPACgQz0AIAo9AADVOwCAV7wAQLw8AADePACAW7wAEOY9AACWuwAADbw=","chunkHash":"c8384af8332b2bf0b3f9696d928c15d5bc6c1c3fcc48090f7fb21d09e2216e22"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef basic_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W) with ABSOLUTELY NO NORMALIZATION\"\"\"\n    # Convert to numpy array if not already\n    if not isinstance(x, np.ndarray):\n        x = np.array(x)\n    \n    # Apply margin if specified\n    if margin > 0 and x.ndim == 3:\n        safe_margin = min(margin, min(x.shape) // 4)\n        if safe_margin > 0:\n            x = x[safe_margin:-safe_margin, safe_margin:-safe_margin, safe_margin:-safe_margin]\n    \n    # Convert to tensor without ANY normalization - keep raw values exactly as they are\n    x_tensor = torch.from_numpy(x.astype(np.float32))\n    \n    # Print raw stats for debugging\n    # print(f\"RAW DATA VALUES - min: {x.min()}, max: {x.max()}, mean: {x.mean():.2f}, std: {x.std():.2f}\")\n    #...\n```","range":{"startLineNumber":1356,"startColumn":0,"endLineNumber":1371,"endColumn":0},"embedding":"AADNvACAKT0AgCY8AICJvABAEL0AMLy9AAAUvAAAMz0AgCa9AMCkPAAAjrwAACY8AIBOvAAANT0AgCI8AABUPQBAg7wAYB49AICmvACAPDwAAGk8AECYvACAQD0AABw8AEDLvACABrwAYHQ9AAD5vADATz0AwII8AADovADgFr0AQK+8AMCpvQAAy7wAAKg7AMD8vAAQoT0AAJg8AACIvACQnz0AYIq9AABWvAAARDwA8Mc9AEDxPACAVj0AgKa8AAAUvAAAyjwAgDy8AEAMPQCAQj0AYDc9AAAOuwBwij0AoIa9AADouwCAXj0AgCS8AABPPACAxbwAQKi8AIAovADARD0AMIs9AGCOvQBAv7wAgKM8AACzOwAAeLoAgJu8AACpvAAA8TwAwAU9AAAsvADA0DwAUMI9AHCzvQAAITwAgDG8AAAAvQAAxTsAYIU9AEAOvQCAk70AAK+9AGBVvQCgdL0AAPm7AECbPACgPr0AwGC9ACBsPQCAFbwAANE8AACmOwAAgbwAIIo9AAAEvAAA4TwAwEE9AAAuPQAA/jsAYJA9AEDaPAAAdTwAAGq8ACA7PQBQiz0AwKm8AKBevQAA4DwAgDy8AOAAvQAALL0AgI68AKBRPQDwp70AQPK8AHCrvQAAi7wAQAU9AGB9vQAArLwAgPq8AIBQPQAwB74AAMm7AAAFPQAwiT0AAKA6AGAlPQDwxr0AgLK8AAAMvQAABjwAQBU9AAADvAAw8T0AAAa9AICaPADAVT0AALy7AEAovQDA07wAwEW9AMgOPgCA1rwA4Hw9AEACvQBQuj0AAA68AAD4OwDAlLwAAOq8AODjPQDAsT0AQCo9AOC6vQAAgLwAoDo9AIBcPACAf7wAALW8AMBIPQBAijwAgPy8AKBTvQDg6r0AgAg8AEAkvQCAXDwA4JO9ACCvPQCgDr0AkK29AMCzvABAZ70AAIS7AEA4vQCgYT0AQJW8AOADvQDABb0AAEA9AEAJvQCAlzwAAI47AFCrPQAAgrsA8IQ9AABouwAAUD0AABK8AIBkPABgoT0AwPW8ANCfPQCAuzwAAAg7AICsPABAr7wAICa9AAAhvACgAb0AAI68AICsPAAQo70AAIO7AABYugCAA70A4Ds9AICQPAAAx7wAAJw8AACZuwDgGz0AgAQ8AFC0PQAAzLoAsIg9AFCrPQAAGTwAwJa8AAAqvQCAzzwAQHm9AEADvQBAuTwAgIw8AKBFPQBACb0AQJe8ACAFPQCAJ7wAAK68AIAzPABArTwAYKA9AADrvACATLwAgKM8AMDwvADA/DwAAJO7AABIOwAAtb0AAAS7AGAiPQDAnDwAAHe8AMDBvACAHL0AIE+9AAAWuwCQpr0AQFe9AMCkvQAA7DoAYEE9AIAwvQAARr0AAA67AKBUPQAAwTsAACk8AECrPADAizwA4AA9AKA4PQBAlbwAAGw8AIDJPADgMb0AgPA8AABsOwDAzzwAANy6AACbvAAAybsAABq7AAAbPACAhDwAIAE9AACQOQAAALwAAEw8AMA5vQCwkL0AoNI9AIBSvQCgIT0AAAS7AADLPAAA7zwAAD67AKAbvQAgCr0AQIW9AADxOwAAFzwAAEo8AOA9PQAgjb0AgDg9AAAYPAAAg7wAgJw8AACwOwAAWTwAgOQ8AJCkPQCAK7wAQK28AMCXvADAnjwAAEM8AIDIPADQn70A4Hy9AKDCvQAgP70AgCK9AMDfPAAAursAoE69AOB4PQAAZLwAoOm9AICcvABQgb0AgAY8AGDhvQAA0DoAANQ8AAA8uwAAjTsAcJ29AIA3vQDgyr0AAH47AIAVvAAA77wAgCA8AEDTPADAWj0AYF09ACAoPQAAdTwAwIe9AIA5PADgFr0AIBy9AECePACAsrwAgLu8AAD9vAAwk70AQNy8AMB/vQAA1DoAICY9AIAUPAAAgLgAQJE8AMBYPQCAhTwAANs7AECFPADQgT0AAA48AOAXvQBA27wAQI69AND1vQDwwD0AwBY9AAAKvACALDwAAHY9AMAbvQBgDr0AAMA7AADevAAAwTwAALk8AMDHPADAurwAgBk8AIAXvQBAvbwAgEm8ADDjPQAAgjwA8Ki9ALDkPQDAnzwAgEI9ACAuPQAAzbsAANE8ADCEvQCAoL0AgEW8ACB+PQDAkzwAQIc9ACAEvQDAzbwAwOU8ANC4vQCAhzwAoEi9AAD/OwBA/7wAANG7AAD5OwAAHrwAgA49ADDRvQAwkz0AQIU8AACsPABAV70AgB89AADZOwAA6TwAANm8AAAaOwAAvzsAACC7AGBGvQAATTwAAO87ACAjvQAAOr0AAAG8AAD8PAAAfz0AEIq9AMAzvQCAWL0AAAo9AEDLvAAAjbsAAIA5AMCwPACATzwAgLO8AEDzPABAJr0AADY7AOAxPQCAhDwAMIm9AIBAPQBAWz0AQAU9AIAOPQAgMT0AQJS8AMDHvAAATzwAQAK9AECnPAAATT0AwOC8AABqvAAAGbwAAJE7AIAbPACA2D0A4EU9AADPuwCAtrwAwMc8AMCRvADA1jwAgEG9AFDFPQCANL0A0Li9AABMvADA8D0AwNI9AIDevACgQL0AAFA8AICVvAAAOL0AADI8AIAevACAc7wAkIY9AACouwCwh70AQPo8AAAIOwAAhDoAwMo9AIAIPAAgcj0A4AW9AGAdPQAAuLsAcIA9AAAGuwBAeb0AUJU9AMCDPAAAgbs=","chunkHash":"ffb986cb86ad2657220a70a3b6156f012996797cb50dd25a6555c7931ffa94e3"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef basic_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W) with ABSOLUTELY NO NORMALIZATION\"\"\"\n    #...\n    # Reshape to expected format (1, 1, D, H, W)\n    if x_tensor.dim() == 3:  # (D, H, W)\n        x_tensor = x_tensor.unsqueeze(0).unsqueeze(0)  # -> (1, 1, D, H, W)\n    elif x_tensor.dim() == 4:  # (C, D, H, W) or (B, D, H, W)\n        x_tensor = x_tensor.unsqueeze(0)  # -> (1, C, D, H, W)\n    \n    return x_tensor\n#...\n```","range":{"startLineNumber":1372,"startColumn":0,"endLineNumber":1378,"endColumn":19},"embedding":"AECjvADAojwAAPM7AECGvAAgTr0AAKq9AACEOwDgQD0AQE69AECYPADA8rwAAEU8AIAFvABAFT0AAMK7AAA3PQAAELsAYAY9AICjvAAAHjwAAKw7AACLvACAUT0AABs8AICfvAAAsbsAYEI9AMDWvACgcz0AgGM8AMDAvADAAr0AAIi8AOC3vQAAm7wAAL87AOBOvQAQzz0AAJA8AACJOwAgqj0AIFe9AMDNvAAAMLoA0LQ9AGA4PQDA4TwAAAy8AACgvACAAD0AAIU7AGARPQAASj0AwB09AAA+uwBwhT0A4IG9AICIvACAYz0AANw7AAAuPADAkbwAgMu8AAB3vAAAfz0AwII9AMBdvQCAs7wAAEw8AADXuwAAwbwAwAm9AICrvABAIT0A4BU9AIA/PADAEj0AwNE9AICkvQCALTwAAPa7AKAnvQCAfjwAAHQ9AEAOvQBgmb0AAIq9AOA7vQBAdr0AAAm8ACAMPQCAdb0AIIC9AMBDPQAAqbwAwDA9AIAOvACAh7wAcIg9AMCAPACAqTwAwBQ9AOALPQAAezwAMIE9AMCZPAAA8jsAgJm8AABUPQDwqz0AAI+8AEBtvQBA6DwAAP27AABUvAAAU70AwK+8AGA5PQAQz70AwNG8AECqvQBAmLwAYDQ9ACB7vQCA4LwAALK8AAAUPQA4E74AAP+7AKAlPQDASD0AAJw7AGAIPQAQur0AAEm8AGAWvQAAZjsA4AM9AAAkuwDw7D0AgNu8AMAXPQBAUD0AAPq7AABevQAAt7wAwBC9AGAKPgAA1bwAIE09ACAuvQAAsD0AAIu7AAC+OwBAwbwAoAy9AMDPPQDwpz0AgHo9AJDIvQAAvrwAQHM9AIDDPACAOLwAQK28AGAQPQAAaDwAQJu8ACBDvQBA4r0AALw6AOAnvQCACTwAwGC9AGDGPQBA+bwAIJy9AIDdvACwhb0AAKS6AMBPvQDgZD0AAJe8ACAdvQDA3rwAwGI9ACAGvQBAqTwAABg7AHCXPQAAkLkAAHo9AAAAPAAAkT0AAKS7AIDjPAAAeT0AYBy9ADCUPQCAlzwAgGQ8AADuOwCA+7wAAAu9AEDBvADAvbwAgKm8AMDOPACAj70AAK47AACwOwAgJb0A4A49AMCnPABAmLwAAE08AACiuwBAjTwAAH67AGC1PQAAErsAEIY9ALCpPQCALjwAwP68AEAevQBAozwA8Jm9AIAVvQAAbjwAgFM8AABUPQDgH70AAEi7AADMPACAe7wAANO8AADpuwCAfjwAYI89AOAbvQAAFrwAAHs8AAD9vABAnjwAANq7AACUOwBwtL0AAAG8AACUPAAAFjwAAFC8AMDavABA4bwAICq9AABIOwAglr0AwDS9AOClvQAAzLoAwHk9AADfvACABr0AAP27AGA4PQAAAAAAAOS6AAB6PADAqjwAwLo8AGAePQBAsrwAACQ7AAAaPADABr0A4DA9AIA3vABA0DwAwLG8AACVvAAAhDoAAHi8AABkOwAAMrsAoCs9AADYugAAobsAAB08AMApvQBQl70ACAM+AGAPvQCAKj0AAPC5AECmPAAgFD0AAFu8AADwvABAv7wA8I69AAB/PAAAvTsAAFk8AIAzPQCAXr0AYGM9AADfuwAAqbsAgCI8AACOOwCAbjwAALo8AMCaPQAAADwAgOu8AIDuvAAAMjwAAKA6AIDfPAAQnb0A4HC9AACjvQAgiL0A4Dq9AAAJPQCAlLwAMIK9AGBcPQDA27wA8O+9AECwvAAgWb0AAKe7ADDWvQAAH7wAwOg8AAA2uwAAArsAUJi9AOBSvQAw0r0AgCI8AACzuwCA+LwAAB48AIB/PACgiD0AgG49AIAnPQBAyzwAEIO9AACEuwDABr0AADO9AABaOwCApbwAgIe8AIAavQBghL0AgAa9AGBjvQAAeLwAoA09AECFPAAATbwAwJU8AGCAPQAA5zwAgHw8AIAmPABATT0AgBw8AABDvQBAA70AYHe9AHAFvgBgvz0A4Cc9AABQvACANDwAoHY9AGAavQBAI70AAA08AKARvQAAJDwAAKs7AIAYPABAm7wAAIg7AOAgvQAA2LwAACM8ACD3PQCAozwAwLO9AHDuPQCAYTwAQC09AMAQPQAAArwAAIo8AGBwvQAgpr0AgEe8AMBiPQCAAT0A0II9AIATvQAA5LwAQPg8ACDFvQAAoTwAgMq8AAB+vADA1bwAwLe8AAD0OwAA6bsAgMs8AEDRvQCAmj0AAJ08AMCkPADgNL0AQNI8AAB4ugAgLT0AQC69AADUPAAAuDsAAAo7AKAWvQCAhDwAgGs8AKALvQBAR70AABK7AICPPABAbD0AsIK9AIAOvQAAOL0AYBY9AEDXvADAhLwAACA5AAD/PAAAcDsAgFu8AMABPQAANL0AAJY7AIB2PQCAiDwAgIa9AGAtPQCAdT0AgOM8AECpPADALD0AALi8AICavAAAo7sAwAi9AAATPQDAUj0AQO+8AIBivAAANLwAAMg6AMDUPACg+D0AACo9AACwuQCAqrwAgOk8AAAHvADAqjwAIDO9AGCuPQCgbr0AUMG9AMCwvAAg4j0AUMw9AGAYvQCgdr0AgLg8AACSvACgCr0AAMk7AIB5vAAAVLwAkIE9AIBXvACghb0AwMU8AAAguQAARbwAILw9AAC8OwCQgz0A4C69AIAwPQAAIDsAAE89AACYuwBAc70AwIY9AEDcPAAA9Ls=","chunkHash":"559bff844586dd77864c3faccb8e1dfcf6fb94f86b655255da5cbad272b9ea8e"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef mask_transform(x):\n    \"\"\"Transform a mask to a 5D tensor with shape (1, 1, D, H, W) - preserving raw values\"\"\"\n    if x is None:\n        return None\n    \n    # Convert to tensor without any normalization\n    x_tensor = torch.from_numpy(x.astype(np.float32))\n    \n    # Reshape to expected format (1, 1, D, H, W)\n    if x_tensor.dim() == 3:  # (D, H, W)\n        x_tensor = x_tensor.unsqueeze(0).unsqueeze(0)  # -> (1, 1, D, H, W)\n    \n    return x_tensor\n#...\n```","range":{"startLineNumber":1380,"startColumn":0,"endLineNumber":1392,"endColumn":19},"embedding":"AEDpvABgA70AAGG8AADWvAAAa7wAEM+9AMDKvACwsT0AEJi9AIBAPADAwLwAAPm7AIBTPAAAZ7wAAKC8AIBKPQBAkbwAoIY9AEBVvQAAXDwAABO8AICVvADADT0AwPg8AGAavQAAgLgAABs9AIAaPACANT0A8KE9AOB1vQDgA70AwDW9AIDIvQDAcb0AAAq8AACOuwCw8z0AwLS8AKA2PQCg8j0AkKa9AAD8vABgDr0A0Io9AAAIPACACjwAwIK9AGAqvQAAojsAgFU9AADeOwDwgr0A4BA9AABhvAAAZT0AwLS8AACnvAAAcDwAwE49AADAOwAgZL0AgAa8AIDGvABApD0AkK89AFDdvQAA9bwAAGA7AMChvADAsLwAAMM7AAAwOgCAbj0A0IE9AIA4PAAgGL0A4JA9AGB3vQAAlrsAoCq9AIDHvAAAKLsA0IU9AIBQvAAQir0AYFS9AOB0vQCgeb0AAFA7AADYPAAAijsAIC69AABqOwAgQb0A4A89AEDTvAAAATwAoDI9AIAxPADQwj0AADc8AAAEOwAA+zwAYG49AMCOPACgjz0AwPE8AEDbPAAAeD0AwI28AAAdvQDgBD0AgEI8AABoOwBAHb0AgAq8AADsPAAgfr0AAME7AEA+vQCAo7wAIBk9AEBCvQBA6rwAwBW9ANCDPQDAFb4AgJe8AAC8ugAArjwAAJ48AADUPAAARL0AYBS9AGAsvQAAJ7wAcJA9AJCQvQAg5j0AwMS8AAD1vABwij0AQNc8ANCTvQAAUbwAAJS9AHAAPgBgD70AcJA9AMDJvADAWT0AAOQ7AKAlPQCgjL0AYJy9AEDoPABAfz0AgKc8AKCavQAAGL0AgLI8AAChPAAAkzsAABu8AAA6PQAAQDkAAJ47AIBtvQAQ1r0AALc7AAD3uwCABjwAAPC8AGAPPQAAkDsAAG29AACjvACwxL0AAKG7AAB5vQAAcD0AQIk8AOA1vQDgf70AAKg8AAB8vACAAzwAwIe8AMA2PQCA9TwAoJ09AMDzPACAKj0AAMI8AACYOgBgSj0AgOu8AMDJPQCgHj0AgE+8AIDYPABAyrwAALm8AMCmvAAAYr0AAAm8AAAMOwDgkL0AAPC7AAAuPADgSr0AQNU8AECDPAAASDwAAAG8AABQOgAAUr0AAE48AKDRPQAA4bsAoIM9AAC4PAAAdbwAAJi7AEBNvQAAqLsAANW7AFCbvQBgKD0AAHi7AIBvvACAF70AQNS8AECgPAAA3LoAQLW8AMCNvAAAwLoA8IE9AHCevQDgd70AYAM9AADXvADArTwAABm8AADDPACAIb0A4Bc9AABiuwDAPD0AQAA9AMDOvABAv7wAwOW8AED0PABA8LwAwMO8AHCZvQBAED0AYFI9AMB0vQCAbL0AQLc8AMAvPQBAtzwA4A69AMCqPACAKDwAwKM8AKCiPQAA4DoAAJM7AAArPAAANrwAANY8AMA8PQCgnT0AwNe8AKA4vQDAnLwAAGW8AECOPAAAVLwA4AA9AAAfvACAjLwAgPC8AIBYvQDgSr0AMK49AEDIvADAOz0A4Cq9AACAOwAA5DwAQDa9AGBlvQAAgLgAgKK9AAAlPQDgIj0AgEy9AIAKPQCgvb0AQFM9AICjPAAAYjwAwL08AACcOgDAuzwAAKC7AIAnPQCAcTwAoD29AOAGPQBAvDwAANg8AECnvADgh70AoIa9AMC2vQBgpL0AoCK9AOBCPQCARbwAoGe9AAD1PAAAiDsAMPi9AKAgvQCAzLwAQLS8ANC6vQAAZL0AgHY8AACfuwCAsLwAgG68AIALvACQ5b0AoBW9AADyvACgsL0AgFC8AABoOwCAYzwAAPc8AAAwvACAxzwAAMm8AAC0OgDARb0AwI29AECKvAAAibwAAL07AIB7vADwsr0AgHi8AABfvQAAJTwAAGY9AICVPACAZbwAYDs9AFCrPQCAJz0AANY8AID6PAAAGT0AQOK8AGAcvQCAGb0AIBq9ACDCvQCQrz0AwGw9AACIOwAAejsAADA9AAAauwDA0LwAAPS6ACAJvQBANj0AAH88AIDIPACA4bwAQJC8AIBTvABgj70AANU7AFDcPQCAWzwAgHe9AOCoPQDgIj0AgJk8AACTPQAA6rwAAIW8AAAhvQDgD70AYBa9AACHPQAAJjsAIDg9ACBXvQAA7zsAgC+8ADCNvQAAcDoAACO9AAD3vAAAADgAgB68AADAOQBAkb0AAL47APDjvQAgdj0AAOK7AABHPACgRr0AADo9AAD2uwCAljwAgDo8AKBuPQCAqbwAgBC8AACNuwAAgDkAAPC6ANChvQAAKLoAIBE9AADkOwAAHT0AQPG8AED6vAAAZLwAwO48AICJvAAAdrwAAAc8AKAFPQAA8jsAgGo8AADAPAAAMb0AALE7AMCePACAmDwAUNy9AMCaPAAgAT0AABG8AABaOwAAqjwAwD69AAAvvADA0zwAANy7AADhPADQlj0A4Cq9AIDIPACAijwAwNq8AMCZPABgqj0A4EI9AABWOwCAOjwAIDM9AABIugDAmjwAwOa8AAC8PQAAT70AIGO9AGBHvQAgpz0AMLw9AOAAvQBgD70AIGc9AECzvACAf70AAKY7AIAzvQAAUbwAYEs9AMC9vACgjL0AgA68AACePAAA1LsAwF89AIAPPAAAvT0AgE69AMBJPQDAuTwAoDg9AACNPABAIL0AYKU9AMC1PACAQbw=","chunkHash":"fc630ffb99aaf12e390839833029186951f7845f07b1c162dc8249ae118f52db"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef augmented_transform(x, margin=0):\n    \"\"\"Transform with augmentations (simplified from original)\"\"\"\n    # First apply basic transform (no normalization)\n    x_tensor = basic_transform(x, margin)\n    \n    # Apply basic augmentations (flips, rotations)\n    if np.random.rand() < 0.5:  # Random flip along z-axis\n        x_tensor = torch.flip(x_tensor, dims=[2])\n    if np.random.rand() < 0.5:  # Random flip along y-axis\n        x_tensor = torch.flip(x_tensor, dims=[3])\n    if np.random.rand() < 0.5:  # Random flip along x-axis\n        x_tensor = torch.flip(x_tensor, dims=[4])\n    \n    return x_tensor\n#...\n```","range":{"startLineNumber":1394,"startColumn":0,"endLineNumber":1407,"endColumn":19},"embedding":"AIBPPAAgOz0AAFY8AECwvABgOr0A4HW9AAC3uwAgOD0AwJK9AMABPQBABL0AgB+8AAA+OwAAUbwAwGi9AACwPACgEr0AgHQ8AED9vACArTwAAOi7AAAIvABAcz0AAEE8AMB2vQBgBr0AAEs8AACvuwCgWD0AgHQ9AAAivABA7LwAACW9AKBxvQBANL0AgBA9AIAUPAAAtTwAAH48AMCRPAAQnj0AYLi9ACBCvQCgSD0AgE88ACAPPQDAgTwAQKO8ALCLvQCAYz0A4D09AIAUvAAA4zwAgHk9AAC9PABAaj0AQBO9AADNPAAAQLkAgEE8AACnvACAZ70A4GI9AEAZvQCAaTwAQIo9APDAvQAAdzwAIEk9AAAAuQAAh7sAYAO9AABovADAcD0AoEc9AICdPACA1TwA4CM+AADOvABA1TwAAMM8ACAqvQCACTwA0No9AIDovADgfL0AQJS9AEBDvQCQtb0AgEY8AACOuwDA1bwAEJq9AIBGPAAAubwAEMo9AACCuwAA87sAoIM9AEAVPQBQqT0AQJ+8AAAmOwBA7bwAEIc9AAAGvABAiTwAwLq8ALDEPQDgYD0AACC8AMBcvQAggz0AAPC7AAD/uwDAmLwAgJ88AOAZPQDAw7wAAEq9AFCKvQBAjL0AAFk9AKBNvQBAFj0AwP+8AMClPAAgzL0AwL+8AACougBgZz0AgDw8AEDTPABADb0AwKK8AEDtvAAAYrsAYEQ9AOACvQCAyT0AgFQ8AADZPACAAzwAIA69AKDFvQCAK7wAgAm9AACgPQAQkb0AIM09AIBEvQDANT0AgGk8AIBFPADwh70AQGq9AMApPQAgbD0AgAA9AEB5vQCAYbwAQCU9AIC2PADAML0AACc8AMAAPQAgc70AQJc8AEDUvADADb4AADo7AHCovQAAkzwAoDG9AMBoPQBAAL0AsLK9ABDgvQAQjb0AAKc7AHCkvQAgcD0AQI68AACDOwBATb0AAIu7AACnPAAA8DkAQP+8APCBPQAA2zwAIDM9AMDFPADApz0AgNA8AMCGvAAQoj0AYKe9AFDQPQCAfTwAgB28AIAtvAAgfz0AAOg6AAAQOgDgmr0AoBq9AIAQvAAAFr0AABU8AIC2PACgOL0AgCE9AMCmvACAdbwAAPS7AKAJPQAAyrsAgGE8AECZPQDAfb0AgKY8AAAiPQBAAr0AADQ7AACOuwAAsDwAQNe8ACAFvQAAGDwAAOQ6AEC6vACwrr0AgEG9ACBnPQAAULwAoA69AAASvABA2bwAIDs9AECyvAAgCD0AgFQ8AEBQvQAA1bsAALk7AIDtPAAgpb0AgA08AICkPAAAgDoAQN88AIAMvQAAz7sAwJy8AACHOwAAIrwAgPC8AEDjvQAAxLsAIJA9AKBevQBAlb0AoBO9AIBlPQCgNz0AAGo8AAAUuwBAOT0AAPW7AGBNPQDQlD0AgDe8AED0PACAbb0AgMC8AADYPACAfz0AwLM8AACLOwCAUDwAAHy7AMD0PADA6TwAgHE8AIAAvAAAljsAwAK9AADpvABgLL0AgJU9ACA4vQCAVz0AYFK9AACcugCgGj0AANg7AAAkvACAUbwAYJm9AKBPPQAAJjwAgDw8AECUPQCgCb0A4GU9AEDcvAAAgLoAoE09AACkOwAAWLsAgN+8AICGPQDAv7wAgD88AGBxPQDAnDwAQKM8AECYPAAAOr0AAMM7AECyvQCAQL0AIBe9AMC9PAAAoDsAQAK9AAC5uwCAdjwA8NG9AACcOwAgbr0AAIW8AIBJvQAAhzsAcI09AAD4uwCAFD0AALC8ACDZvQAgv70AgKm8AADtvABgVL0AgBo9AACQPADALT0AgK89AAB9PQAgMT0AIGq9AIBoPADgIL0AkKS9AADfPADAc70A4BS9AACkvACAU70AAGO8AMCHvACAZDwAAL67AIDZvAAAMzwAgEs8AECDPQCAmTwAgCq8AICCPADAkzwAAF47AIDhvABwiL0AwO+8AACPvQDAqz0AACU8AEDSvAAgIj0AkI89AAC5vAAA1LoAQI48AEDTvACAyTwAALs8AABpPACAfrwAgCo9AGBjvQAgYr0AoAq9AJDIPQAAxzsAAOy7ABAAPgDAPT0AgNw8AEAZPQAAajsAAM47AKCSvQAAQ70AABA6AJCFPQAACbwAYGM9AIDOvAAAuDwAQIY8AHDtvQCAzTwAwAe9AAAgugBA87wAwNo8AMCwvAAAVLwAAFA9AABhvADAMD0AAHI8AAC2PABQjr0AgGU8AMC2vAAAQLoAwKs8AAAFPACAkTwAgC+9AMCzPABAOL0AgCU8AIBwvQAAFrwAAAg9AEDjPADA6TwAQGe9AOAFvQCAJL0AQMY8AODuvQCACrwAoFO9AGBXPQCAzbwAoCs9AAB6OwAAjbwAgEU8AKAEPQBgAT0AYB69AMCXPADAxDwAQDM9AABgOgBgOz0AwIq8AIBsvAAAbTwAQEA9AGBhPQAA+zwAACq8AED7PABAJj0AAKY7AADxPAAgcz0AQBQ9AAD/uwCgr70AoIg9AMASvQDQoj0AgAi8AEAMPQBAoLwAAD28AIBcvAAAuTsAyAY+AABuvQDgTL0AgCi8AIAlvQAAYr0AAA48AIBVvQCAY7wAYJ49AMDvvADAIL0A4BO9AADPvAAALjsAAAo9AIBSPAAAmTwAwBK9AMDQPAAAzDsA4EA9AMBGPQAAULsAANg9AADwOgCABbw=","chunkHash":"92c385ee894a2bf2f64f54ba4e5f378e79132856c5b4b93d70f160d908d5ab10"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef plot_training_history(history, save_path):\n    \"\"\"\n    Plot the training history with enhanced visualizations\n    \n    Args:\n        history: Dictionary containing training metrics\n        save_path: Path to save the plot\n    \"\"\"\n    # Create figure with subplots\n    fig = plt.figure(figsize=(15, 10))\n    \n    # Plot loss\n    ax1 = fig.add_subplot(2, 2, 1)\n    ax1.plot(history['train_loss'], label='Training Loss', color='blue', linewidth=2)\n    # Filter out None values for validation metrics\n    val_epochs = [i for i, x in enumerate(history['val_loss']) if x is not None]\n    val_loss = [x for x in history['val_loss'] if x is not None]\n    ax1.plot(val_epochs, val_loss, label='Validation Loss', color='red', linewidth=2, marker='o', markersize=5)\n    ax1.set_title('Loss Curves', fontsize=14, fontweight='bold')\n    ax1.set_xlabel('Epoch', fontsize=12)\n    #...\n```","range":{"startLineNumber":1410,"startColumn":0,"endLineNumber":1429,"endColumn":0},"embedding":"AADEvADAzjwAgNA8AJCUvQCAqbwAwLi8AABbvADAFj0AICO9AMA0PQAAjjwAQMs8AMDTvACgQL0A4Gs9AGB8PQAgAr0A+AY+AEAhvQCgdj0AgG08AAD0uwCQkj0AgKY8AAC5vACA2TwAIAA9AECuPAAAQDkAoGg9AOAnvQAAgbsAID+9AAAPvQBA/rwAQKS8ABCIPQAABLwAgMy8AMCuvABAdz0AULy9AIB4PAD4Hz4AoBA9AMCnvAAARj0A4As9AOAzvQBA+TwAAMO8AIBBPQCQhr0A4Bm9AAAYuwBAFz0AgLq8AMDzvAAAMjsAQP68AEDjPABgUb0AQAY9AEBFPQDAqzwAgBe8AICIvQBgBz0AQKM8AGAAvQBAKT0AwNO8ACATPQAAsjwAgKc8AACSvAAAPjwAgN08ANCPvQCAcb0AAMm7AEAqvQDA0LwAYGo9AADQuwCA6r0AsIm9AECVvAAACDwAwJm8AECUPADgAz0AwL69ABCzPQBgkD0AULw9AMD7vAAAEr0AIHg9AAAQvQCgNT0AgAm8AADSvABAs7wAwMg8AEC4PAAASD0AYE49AIBmPACA2TwAADa9AEAuvQCAjbwAANS6AAD0uwBAaL0AAFY7AIARvQCACD0AAMq7ABC7vQDAQb0AAO88AOC7vQCA2DwAAII8AOAdvQCAsb0AgGU8AKAPvQAAwLkAAAY7AAAQuwBAqr0AgC28AICbvACAPzwAQEQ9ACDRvQBwnz0AAP47AAD6PAAA+7sAQLe8AICHvAAAOj0AoDe9AEAdPQAAxbsAoC89AAAkOwDg/j0AgIA9AIDVvADABr0AgCe8AADaPACAKDwAIDK9AACCvQDgL70AgA09AAD2uwAAADgAAHy7AHCEPQDAZ70AgIA8AIBUvQAgZL0AYB09AMC5vQDgWD0AIA+9AGDdPQBABT0AQK68ACBavQDAu70AAOK8AGBCvQDA8jwAAEG9AADouwCQzb0AgCS8AIArPQBANT0AgPY8AGDVPQAAAjwAAIq8AMCkPAAAeLsAAA88AIDfvAAAJT0AABg7AAAUPACAFrwAAE+9ACBkPQCAe7wAQAO9AMCuvACQl70AYCm9AEDovACArrwAgMq8AACBvADAcz0A4Bs9AAALvADAkzwAAHq7APCBvQCAObwAwIU8AADcPABA+7wAYD69AABQuwDA0zwAAFk9AACMuwAg2z0AgK+8AAA0uwAAHD0AQJc8AEDdvAAAmLoAAC49AADPPABQiL0AgCS9AAB1vADAQD0AoCM9AABgvACQnT0AAEu8AECuvADgAT0AwIE8AMAvvQCgCb4AIAQ9AGARPQBAiDwAwDc9AABtvQAAKr0AAIw6AABKuwCQmL0AgLC8AGCivQBAybwAEK09AICDvAAA9rsAABU8AIALvACgFz0AwIe8AAD0vADwsr0AAFS8AACCPQAAOr0AQAA9AAAfPQAAxTsAABw7AIDlPACQmD0AoBG9AADNvAAAZLsAAHg9AKAvPQAAHz0AAHo8AMCpPACAM70AAAA6AADfuwBgH70AAA28ALCcvQAAYDkAAAA8AOAVPQDQqT0AgKy8AEAjPQAAtTwAAOa8AIDovADAIb0AAPi6ABDfPQAAXrwAwIY9AKBGPQDA+bwAgPE8AABIOwCA37wAEK29ANCtPQCADjwAAI08AIA0vQDgHz0AYD49AIDsPADAur0AYGe9ACAVvQDAx7wAUI49AECmvACgNb0A4Aa9AADouwAAILoAAKg8AADMugBACb0AML+9AAD2OwCAvbwA0Kk9AIB4vAAA1DoAAF49AAAQPACA3b0AYGa9APDpvQCwpL0AgHI9AAAmPAAADrsAQFo9AICLPACAa7wAwGm9AABTvAAAszsAAKq8AEDFPACQnr0AYHK9AAAQOwAAarwAAPU7AMDMvAAAYDsAgJ08AOB7vQAAtTsAAK07AAAuPABgLj0AgA08AKA/PQBA0DwAgBG9AIBQvQCgI70AmA2+AIAkvABANT0AQMS8AAAAOACgFD0AYA+9AACEugAAOz0AABi8AAB7vAAA8LkAALg8AMCHPACAYL0AgC89AIBOPAAQtL0AwMW8ALCQPQCABz0AgC69AOCVPQDgkj0AgD89AGCQPQDQsL0AgEy8ADCJvQAA0bwAALa7AMAaPQAAjzwAIBc9AIASPADgEz0AIIw9AMBFvQAAcjwAYNu9AAAvPQAAsDkAALK7AAB4OwBAnbwA4GQ9AMCPvABAE70AgGE8AFCEvQBAHb0AYFQ9AACnPAAAFb0AQNo8ALCCvQDgIr0AwOM8AECEvABA+zwAABg6ALDOvQBA6rwAANg6AKA/PQAAMLwAoCk9AEBmvQAAFzwAALs7ACAbvQDgAj0AQDC9AIAxPAAA5TwAAPQ7AGDUPQCAvDwAsIi9AECsPABAv7wAADi8AEDAPACgG70AAGE9AICJvACA8jwAANM8AMDNvAAQsz0AwKs8AECaPABgDz0AQIm8AGBsPQCgX70AAJQ6AEAhvQCAzDwAAJ28AAC9OwDAt7wAADK7AECbvAAAnLoAQIa8AID5PACABD0AQOG8AAAcPAAADjwAwEg9AADcvABQxL0AAGA7AECbvACAEb0AgN08AIBYPADAirwA4GW9AADVvADwpL0AgEK9AKAOPQAAwDsAYFA9AEBIPQAARz0AAAY7AIDbPABADb0AYAO9AABIOgAA2TsAoG89AAA6vQAAJjw=","chunkHash":"a27d02f29f1bad143fcc6ff0f500fdad4d1a804bec261b7172fa3d0d54966517"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef plot_training_history(history, save_path):\n    #...\n    ax1.set_ylabel('Loss', fontsize=12)\n    ax1.legend(fontsize=10)\n    ax1.grid(True, linestyle='--', alpha=0.7)\n    \n    # Plot accuracy\n    ax2 = fig.add_subplot(2, 2, 2)\n    ax2.plot(history['train_acc'], label='Training Accuracy', color='blue', linewidth=2)\n    val_acc = [x for x in history['val_acc'] if x is not None]\n    ax2.plot(val_epochs, val_acc, label='Validation Accuracy', color='red', linewidth=2, marker='o', markersize=5)\n    ax2.set_title('Accuracy Curves', fontsize=14, fontweight='bold')\n    ax2.set_xlabel('Epoch', fontsize=12)\n    ax2.set_ylabel('Accuracy', fontsize=12)\n    ax2.legend(fontsize=10)\n    ax2.grid(True, linestyle='--', alpha=0.7)\n    \n    # Plot F1 score\n    #...\n```","range":{"startLineNumber":1429,"startColumn":0,"endLineNumber":1445,"endColumn":0},"embedding":"AACGvABAlzwAIG09AADDvQBgC70A4BW9AADlvABALz0AgF69AGBhPQCATDwAgBu8AKAmvQAgQb0AgL88AIBZPQBAu7wAEMQ9AGBWvQBA5zwAAHQ8AADoOwDgfj0AgE28AAC0OgCAS7wAYD09AOAHPQBA6zwAQAA9ADCRvQAAOrwAwH69AKAOvQBAYL0AgOG8AOB4PQAAADoAgNC8AMASvQAgMz0AUJy9AADuuwBQsz0AAJ48ACBDvQAgPj0AAIA8ADCRvQBgED0AYCy9AMBLPQBgQ70AACq8AABUvABwkj0AQIu8AABKvADA/zwAAFW8AED1PABga70AQBQ9AMDsPADAmTwAAF+8ACC3vQBAgTwAgO48ACA0vQAATTwAADy8AMAQPQBArTwAgFA8AIDFvADAgjwAQHg9ANCevQBALr0AQIu8ACAQvQCAMrwAoAo9AIAfvABA8r0AIOq9AECIvAAAfLwA4AO9AADAOABAzzwA4IK9AFDTPQBQnD0AgJU9AOAfvQAgPL0AQGI9AEDbvACAWD0AAGk8AABUuwAAALwAgBE8AMATPQBAFj0AgCU9AACqPABgbj0AwJy8AEB2vQBANb0AgHE8AACvPAAALb0AgBs8AACgvADAjTwAAIi8AACcvQBgb70AALQ8ANDPvQCAFT0AgLk8AACXOwDgvL0AgBU8AGBKvQAAATwAgCg8AAB8uwCglr0AgFW8AABkuwAAtzwAcIg9ACDqvQDwrz0AAJC6AADqPAAAPLwAACW9AKAdvQAgVj0AwDS9AGBQPQAAabwAgIk9AABYOgCwET4AAAo9AAC5uwDAz7wAAJu7AICPPAAAnrsAwD29AIAmvQAgM70AQEA9AIBwPAAAlrwAACo7AMC1PQDAhr0AgDC8AMBxvQDAkL0A4DI9ALCFvQDA/zwAIGO9AMB1PQAAsDwAYBC9AABAvADQ3b0A4AW9AMB5vQBAgTwAAK68AIBKPADQpL0AQAe9AOAHPQDgRj0AAI88AACrPQBgVj0AAPO8AABcPQAA6LoAgGi8AEBivQBACD0AAMW7AECZPADAAj0AoBO9AGBvPQDAxrwAAAG9AADOvACglb0AoHq9AEAkvQCA4LwAAF+8AAAaPADAQT0AYD49AIA2vQCAjrwAgEg8AABBvQCAxTwAALI8AOBmPQAAg7wAgH+8AIAYPADAVz0AYBo9AACjOwBA/j0AAMe7AAA2OwAA4TsAAN87AEDhvACAILwAwBI9AEA+PQAgh70AwKa8AMDGvADgID0AAF89AIDqvADQlD0AgBw8AEDzvACAWj0AANO7AGA8vQBIAL4AIHc9AIDxPAAA5DoAIDk9AMAhvQBAL70AwMm8AAAAPACAM70AQLa8AABnvQDgDb0AwNA8AACruwDA0rwAAEY8AAD5uwBAqTwAABC8AMCivABwpb0AgH+8AIApPQCAVbwAgGQ9ABCGPQDA0TwAAKu7AIAePQBgxD0AQPC8AACbvABAtrwAYAM9AMAxPQBA6DwAoEE9AIDpPACAOb0AANS6AECBvAAAmrwAAAW8AKDRvQCAUzwAQIM8AIApPQCAhD0AoAS9AACMugAAXrsAQOW8AADSPADgCr0AwIG8AEgCPgBQhr0AYJA9AIDyPACAcjwA4Do9AADMOgBAq7wAwHy9APCfPQAACDsAgMY8AIAtvQCA5jwAALU7AKAGPQCgob0AQFq9ANCevQAAprwAII09AOAQvQDAOb0AQNi8AAAeOwAACDsAQOU8AAACuwDgDb0AQMi9AECCPAAAQrwAsOQ9AABjvACAEz0AQKk8AAAiuwAA870AIKG9ANDjvQCwir0AwEc9AAAeOwAAqrsAIDw9AOAqPQBAnLwAIC29AAAAAABAnjwAwCy9AECcPACAf70A4Fy9AMD5PADAIb0AAIQ6AAAovAAAWzwAAMS7AGBLvQCAOzwAAI48AEDFPAAAzTsAAIA4AHCfPQAAGjwAoBS9AKCSvQDAsLwAgPm9AIDUvACgHD0AgGs8AICfPACgFT0AAAK8AIA1vADAYj0AQKu8AECUvAAAULwAgHg8AEDSPADAX70AwO08AMCRPAAwvb0AQJK8ADCRPQBAJj0AYCy9AGDCPQBgkj0AwBY9ACChPQCgl70AACA8APCfvQAAAjsAAAO8AMBsPQAA+DoAoDE9AICRPAAAYTwAwJc9AKB4vQCgHj0A8LG9AOAkPQAA+LoAAAq7AADNuwDgKr0AgI08AEAcvQAgHL0AABs8AIBfvQAAAL0A4CY9AECxPACAorwAQB49AOB2vQCAobwAAPw7AGBrvQCgHj0AQDG9AKCXvQDAwrwAAAu8AGA4PQAAHzwAALE8AMCJvAAAu7sAAFM8AAAjvQDgLj0A4GK9AAC5OwCAcjwAQL08AAClPQAAOrsAgES9AAAQOwAAiTsAQB+9AABFPQAAw7wAsIc9AAA+vAAATDwAAHi7AED0vAAQlz0AAEy7AIAkPAAAnz0AgGa8AAAhPQDgKr0AwPK8ACAYvQBgPj0AgJa8AIAsPAAAQrsAALg7AACAOABAiLwAoB+9AMD1PACAzzwAAPO7AAB0OwCAKjwAsNI9AIBivADwnb0AgGk8AACqvACAzLwAgP88AADSPACAp7wAAO28AKAHvQCgV70AAD29AIDEPADAuLwAgC89AGB1PQAgWz0AAIA6AAAGPADgGr0AYA69AACQOgDgAj0AIHA9AAAMvAAA4Do=","chunkHash":"97a6b1b80d04b7928f7524724a5c79d22dfe3c0981aa9f60284ad6fd483af038"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef plot_training_history(history, save_path):\n    #...\n    ax3 = fig.add_subplot(2, 2, 3)\n    val_f1 = [x for x in history['val_f1'] if x is not None]\n    ax3.plot(val_epochs, val_f1, label='Validation F1 Score', color='purple', linewidth=2, marker='o', markersize=5)\n    ax3.set_title('F1 Score', fontsize=14, fontweight='bold')\n    ax3.set_xlabel('Epoch', fontsize=12)\n    ax3.set_ylabel('F1 Score', fontsize=12)\n    ax3.legend(fontsize=10)\n    ax3.grid(True, linestyle='--', alpha=0.7)\n    \n    # Plot learning rate\n    ax4 = fig.add_subplot(2, 2, 4)\n    ax4.plot(history['learning_rates'], label='Learning Rate', color='green', linewidth=2)\n    ax4.set_title('Learning Rate Schedule', fontsize=14, fontweight='bold')\n    #...\n```","range":{"startLineNumber":1445,"startColumn":0,"endLineNumber":1458,"endColumn":0},"embedding":"AACjvAAAMLwAIFM9ABDmvQBANr0AgA69AMCRvABgJD0AwHO9AABKPQCASjwAgAq8ACA7vQAgLL0AABY9AEANPQCAdrwAgM89AOCcvQCgAD0AAKE8AAAoOwCAkT0AAJw6AIBOPACAwrwAwA09AMDaPAAAlzwA4As9AECcvQAAQLwAMJ29AOAPvQBAc70AQK68AEBOPQAAUjsAQLC8AKADvQBAFD0A4Ma9AACJuwBA6T0AwL08AABMvQDA4TwAAJC7AHCMvQDgIz0AQEi9AOAJPQCger0AgIu8AECSvABgiD0AAJm7AAAwvAAgFj0AAIm8AMAHPQCAir0AQBE9AIDcPADA9zwAgAg8AKC5vQAAXzwAgLY8AEAevQAA27sAANu7AEBbPQAAoTwAAC08AIAavAAACjwAwEw9AACtvQBgF70AgE+8AID/vAAASLoAwBM9AAD7uwDg/L0AcNy9AIDGvACAu7wA4Bi9AACOuwAAkDkAsKO9AFDxPQAAlz0AULA9AEA6vQCAfr0AgEk9AAAJvABgZj0AgHy8AIAxvAAANjsAgDA8AABDPQDgGT0AIIY9AACMugBgLD0AID29AFCEvQBgAL0AQJg8AABcPABgJ70AAMy6AIBqvACAJjwAgPW8AKCfvQDAeL0AgIM8AMCtvQDAEj0AAHI7AAAYOgBgv70AwLw8AKBcvQBApzwAgAG8AIANvABwkL0AAJy7AAB8uwDAPT0AIIE9ADDovQCgqz0AALE7AECqPACABrwAgD68AIDCvADAVz0A4Fm9AOB/PQAAuDsAAHs9AACaOwBYDj4AQC49AADgOgCAf7wAQLe8AMCKPAAAIrsAgGK9AMDIvADgiL0AgDg9AMCFPABgC70AAGa8AOCmPQAAbb0AwNS8AIBjvQDAib0AQG09AMCFvQCgGD0A4GC9AKCKPQBAwTwAQFm9AAAougAAzL0AQK+8ACAZvQBA4TwAoD29AICePABQmL0AgIW8AMABPQBgDT0AAFo8AECvPQBAVD0AAPe8ACBiPQAAYLkAAHw7ACBOvQCgGj0AgKO8AMC4PAAgCT0A4Cq9AMB6PQCA+7wAwMG8AEC7vAAAob0AIDa9ACA2vQBAyLwAACg7AAAuPAAAUT0AYDk9AIASvQAAAL0AwJI8AABhvQAAorsAQKY8AEAhPQAAXrsAgPq8AEC0PADgcz0AAE49AADLOwBg1D0AAOU7AIBevACAlTwAQLw8AAC4vAAAhLsAgEU8AEAlPQCgLr0A4DG9ACAEvQDgET0AYAk9AACgvABQnT0AgCG8AIDkvACAQj0AABi7ACAkvQAQ+70AIHU9ACBaPQAAGrsAgAY9AKBVvQDgaL0AQL28AADlOwCAKb0AQKC8AKBPvQDAEr0AwIk8AAA0OwAA9rwAgNc8AAATPAAA9TwAAMO7AEDZvACgl70AAGy8AAA7PQCAqrwA4Hg9AOBSPQCAVjwAAIe7AGBiPQDQtz0AoDq9AMDBvADAlbwAIGw9AKBPPQCARjwAYBE9AMDNPAAA6LwAAOQ7AADAugCAw7wAAL67ALCYvQAAtTwAAF67AIBCPQDggD0AQMe8AADMOwAABzwAwNa8AICxPAAAGr0AACS8ALDbPQDQnr0AQHU9AMAkPQAAgjsAQDo9AABGOwCAJ70AAAO9AJCcPQAAxrsAQA49AEDTvACA3TwAgNU8AIAYPQCgpL0AYGa9AOCUvQAAu7sAwJQ9AEAEvQCgQL0AgJS8AABgOQAABzwAQAE9AIAxvACgSL0AAMC9AADIOwAA7DoAQLo9AMDFvAAAcDwAgHE8AADAugAA3L0AsKO9AMDgvQCwir0AwNE8AICPPAAAurwAgBA9ACA4PQAA0LsAgEW9AABgugBAnDwAwES9AABEPADAq70A4Cu9AACgPABgS70AALA5AIA9vAAAUTwAAIM7AGBDvQCAaTwAwJs8AACZPACAAjwAACg7ALCjPQBAtTwAYF69AGBwvQBAG70AsPe9AAA2vQAAYD0AAB48AIBSPABAQT0AgBK8AAB5vAAgnD0AAF68AEDPvAAA8TsAALM8AACIPAAgeb0AQKA8AECfPACAw70AAKC8AKCAPQAAID0AYBK9AODEPQBQgT0AQCU9AGCXPQAwoL0AAMS7ANCSvQCAPTwAAHO8AGBGPQCABTwAoEM9AECMPAAA3LsAoHg9AKBmvQBAojwAMJe9AOBZPQAA/TsAAHe8AAD7uwDANr0AYDI9AEAXvQBA0rwAAM07AMAqvQCAu7wAsJY9AID5PAAAm7wAwMA8AKBZvQDA8bwAgI08AACOvQDAST0AADu9AICkvQCAtbwAAJS6AEAGPQCAmzwAoAU9AMCxvACAO7wAANs8AEAzvQAgMz0AgIu9AICgPAAADLsAwJ48AACkPQAAULwAAAi9AIB0PADAjjwA4Am9AKBuPQDAy7wAQDg9AADcuwAASzwAAI08ACAUvQDAnz0AAPU7AAAMOwAQhD0AgHW8AKA0PQCgS70AwK68AACIvAAAOz0AANO8AADAOAAAJjsAANw7AEDFvAAAOLsAgI68AAAPPQAA4DwAAEi6AMCpPADAkzwAwL09AAD/uwAQhb0AAKA8AICYvAAAc7wAQNM8AABVPACAqLwAoFG9AACFvADAOb0A4EG9AICGPABA5bwAQCo9AOB4PQCgKD0AgKS8AABSPAAA4bwAQNm8AIAJvABA0TwAwC09AIAfvAAAzLo=","chunkHash":"217ba13da20d46fcc048448aa268a6d21782e656c0777e572bffd3b397879c16"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef plot_training_history(history, save_path):\n    #...\n    ax4.set_xlabel('Epoch', fontsize=12)\n    ax4.set_ylabel('Learning Rate', fontsize=12)\n    ax4.legend(fontsize=10)\n    ax4.grid(True, linestyle='--', alpha=0.7)\n    if len(history['learning_rates']) > 1:\n        ax4.set_yscale('log')\n    \n    plt.tight_layout()\n    plt.savefig(save_path, dpi=300, bbox_inches='tight')\n    print(f'Saved enhanced training history plot to {save_path}')\n#...\n```","range":{"startLineNumber":1458,"startColumn":0,"endLineNumber":1467,"endColumn":65},"embedding":"AEDGvAAAjzsAwEE9ABC+vQAAzbwAACi9AAAEvABgKD0AsIG9AOBlPQAAyTsAAHK7AMCSvABAR70AAG49AKBHPQDAHb0AMOA9ADCRvQAAyDwAwJY8AABWOwDArz0AANQ7AIAgvACAjrwAwCw9AIDNPAAAizwAwDU9AICOvQDAzbwAoJq9AMA2vQBAKr0AgO68AGBgPQCAJDwAoBG9AIA4vQAgKz0A4Pu9AACMOgBw4z0AwME8AABbvQAA0jwAgIw8AED5vAAAFT0AAJm8ACAZPQDgib0AAAG8AIBSvADggT0AADY8AABtvADAiTwAANu7AGAxPQDgbb0AwK88ACADPQAgIz0AAEC6ALDGvQBAvDwAgGw8AEA+vQCAKDwAgI68AKAvPQBA3DwAAM07AMC0vAAA/jsAAEI9AHCDvQCACL0AgKi8AIDdvACAPbwAIHY9AIBIvAAICb4AkMq9AICWvAAA/rwAQJC8AADNOwAALzwAMIq9AHCyPQDgdT0AcJk9AAAgvQAASL0AoFI9AACAOQDQhj0AAFg6AECevABAmrwAQJw8ACAcPQBgLz0A4D89AECzPABAcj0AYA69ACBYvQAAjLwAAKk7AAD1OwDAXr0AAM87AIBqvAAAHTwAgAu8AJCXvQBAML0AwKY8AJCxvQAASz0AQIA8AADRuwCgx70A4Cc9AOAKvQAA5bsAgDQ8AADfuwDguL0AAAS8AADQuwDgED0AgEQ9ADDgvQBQuT0AgH88AEAYPQAAHDwAgKY8ACAdvQBAYj0AsIK9AGCOPQCAQbwAYGM9AADXvAAgED4AoFw9AABYugAA0rwAgJC8AACHPAAAKTwA0JG9AIAyvQDgWb0AwGk9AEASPQCAprwAAPG7ADCFPQCAR70AAOC6AOAxvQDQkb0AYHI9AACBvQAAXj0AQDy9AEByPQDgID0AQCO9AECyvABg5L0AQNO8AIBbvACA9jwAgA+9AIBMPACwor0AAMC7AAB2PABAHD0AgMM8AKDIPQCA4jwAgP68AKBbPQCAT7wAAEa7AOA9vQAAzTwAgOq8AIC1PACA4DwAQAm9AABRPQAA2bwAAHu8AAAFvACAvb0AYCO9AIAavQBArrwAgIi8AAATPAAgXj0AgFY9AGANvQBA97wAAFQ7AGA9vQAAcrsAwPA8ACAnPQCAl7wAABO9AIAWvADgUD0AoGA9AIAmvAAAyj0AgAs8AIDlvACAwTwAAMI8AIB/vAAA4LkAAOs7AAD7PACAHr0AgDa9AIDOvAAgBz0AQKU8AEDovACgez0AgEC8AED2vAAAEz0AAFg8AABZvABwCL4AYCU9AIA3PQAA/DoAIDQ9AEBNvQCAZr0AANW7AIBzPADAQr0AgBu8ANCQvQCA5bwAIEQ9AICEvACAobwAQKQ8AEC1PABgCz0AAP27AABouwAwkL0AAFu8AKBOPQBAq7wAAFw9AGAePQCAW7wAAJo7ACBCPQAQmz0A4Bi9AADYOgDAlbwA4FM9ACB4PQCA7TwAANk8AIC4PAAgBL0AAJA8AAB5vAAAE70AADo8AKClvQCAmTwAAOK7AGBTPQCgfz0AwM68AACsuwAAETwAgAq9AMD9PABA17wAgDQ8ALCqPQBgrL0AwH49AOBJPQCATrwAIJQ9AAB0OwDAKr0AEIS9AFCRPQAAFjsAoAs9AAArvACAljwAoAo9AGANPQBwlL0A4B+9AFCDvQCAALwA4GM9AAA7vADAzbwAgAi9AABHvAAACDwAgMQ8AACQuQCgN70AcNS9AIAyvACAAjwAYMw9AACpvACAvzwAQJE8AAChuwBQ6r0AQG+9AHDYvQAgqr0AgN48AADWOwAAJrsAgB49AOA0PQAAaDoAoFu9AADIugAAYDwAgAq9AOAHPQCAkr0AoAm9AAA+OwBgLr0AAGw8AMC7vAAA7jwAQJI8AHCDvQAAsLkAgOo8AAChOwCAXTwAAEy7AECYPQDA5DwAgMa8ACBuvQBAZr0A4PC9ACAivQCAXT0AAA28AAAAPAAgPz0AgHy8AACoOwBglD0AgKi8AIDjvAAAXTwAwNo8AICCPAAAbL0AAPY7AACIPACAt70AAGu8AACdPQCgAD0AgEe9AEDiPQBAbD0AQOQ8AOC1PQAwrL0AgB28AKBfvQAADTwAgGy8AEA/PQAA0jwAQPI8AMDRPAAAVzwA8Ig9AGCFvQDAwzwAgLa9AOAjPQAAl7sAgJm8AECGvADAc70AwG49AKA1vQBA7rwAALA6AGByvQDgI70A0Iw9AIAUPACAn7wAAPo8AMAhvQBAuLwAAF08AOAyvQCgPD0AAAm9AOCyvQCgIL0AgBs8AOBbPQDAtDwAwAo9ACAmvQBAhbwAwMM8AIDKvAAAwTwAgHm9AACiPAAAersAAFw7AOCyPQBAubwAAM28AAAYuwAApTwAQJ28AOAFPQDA17wAQF09AECZvADAhzwAAEE8ACAdvQAwwT0AABs8AIAUPABAfD0AAGg6AOAFPQCgXb0AgLC8AKAHvQDgUD0AwNu8AADUOwCAYLwAACQ7AIBlvACAO7wAwAS9AEC7PADAND0AgJ28AMDVPAAAqTwAwMo9AIA+vABQk70AANw8AIB2vABAHr0AwDM9AMDJPAAAorwAgCq9AAAWvABAWL0A4Di9AICTPACAVbwAYD09ACBvPQDgfD0AgBq8AADxOwCAqrwAgMS8AACoOgDAmTwA4EQ9AECDvADAkTw=","chunkHash":"8f900f8773760601a5756b38a412eb82fc17e6f37eef5411e6fb2430acc4650a"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n# Unfreeze all convolutional blocks (full fine-tuning)\n# python scripts/finetune_vgg3d_masked.py --unfreeze_last_n_layers -1\n\n# Unfreeze last 2 convolutional blocks (last 2 layers)\n# python scripts/finetune_vgg3d_masked.py --unfreeze_last_n_layers 2\n\n\nimport os\nimport sys\nimport argparse\nimport numpy as np\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nfrom torch.utils.data import DataLoader\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom tqdm import tqdm\nfrom torch.optim.lr_scheduler import ReduceLROnPlateau, CosineAnnealingLR\nimport torch.cuda.amp as amp\nfrom torch.utils.data import random_split\nimport matplotlib.cm as cm\nimport seaborn as sns\nimport time\nimport threading\nimport psutil\nimport gc\nfrom functools import partial\nimport pandas as pd\n\n# Add parent directory to path\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\n#...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":33,"endColumn":0},"embedding":"AAAuuwBAi7wAQDE9AECyvQDAvLwAYH29AIC3vAAAn7sA4JK9AICFPAAA4DkAAHa7AAChvABAubwAII09AEDhPACAb70AoKU9ACA4vQBA2zwAgAk9AAB0PACAvzwAgHa8AACHvAAAhrwAwMs9AIAwPQCwpj0AgEk8AMAcvQAA3rwAIMe9AMA0vQCwlL0AoBO9AMAcPQAA/bsAAOe7AIAzPADAbD0AyBK+AMC0vADgDj0AIIM9AIAMvQAAkjsAgMC8AIBAPADAiTwAAH28AOBZPQDAmr0AMIo9AMAXvQCAczwAgAS8AIC+vABAeD0AAKm7AED8PADAEb0AwI48AIADvAAA7TsAAFA8ALDZvQAAt7sAIBo9AICQvACQgr0AgKA8AABWOwAAVbwAADk9AIDJPAAAr7sAQOM9AABHvQAAcLwAABa8AADGOwCAgTwAIF49AID2vACwnr0AwCG+AADQugBAbL0AQJW8AAAIOwAA4zsA0IG9AMCmPQAA1TwAgDA8AACTOwAATrwA8JM9AEAFPQDg/D0AAMA7AACjvAAAtTsAIEU9AICcPACAhjwAAFa7AADyuwAATD0AAE68AIAqvABA5TwAADq8AMCAvAAAsLwAgGU8ACAAPQAATLsAAEy8AACqvAAAYrwAgMk8AMBvvQCgCj0AgHk8AEBIPQBgh70AwOm8AABgvAAAnzsAYGQ9AIBZPQBQl70AgOa8AIAjvADA/LwAwBQ9AECxvQCAuj0AgIa8AADTPACAgDwAQOE8AKCUvQBgCD0AgGa9AHCUPQAQwb0AIJE9AEApvQAgGT0AAAAAAABAOQCAiTwAgEy9AAC9uwCwlj0AwOw8AEBuvQCAZLwAwD49AADTPAAAJ7wAwIg8AAB/PQCA0LwAgBW8AECbvQCwk70AkMA9AMCvvAAAhDoAkLK9AEC/PQCARrwAQJe9AMCAPQAggr0AgL08AMB3vQAAoLwAANM7ACAZPQBAi70AQMG8AAAJPAAA4LkAACo9ACBmPQDgBT0AADK8AAC8uwBANz0AgCw9AIBLvAAAqz0AgFu9AACdOwAA0DwAwBa9AEBSPQAAfzwAIAm9AACkOwBwkr0A4Hi9AADIuwDAiLwAgB29AIA6PQAAvLoAgHw8AAAJPACA7bwAAD29AMBWvQCAKTwAwN08AEChPQAAOj0AALI7AAAKvACgGz0AoDo9ACAkvQAAkjwAABE8AIBGvAAAGT0AAAa8AKADvQAAK70AAFG8AMBMPQCgIL0AgDK8AIANvAAAajwA4DQ9AABGOwBggT0AADO8AGBivQCgID0AAI67AMChvADg/L0AwI88AECHPACgKD0AgAs9AACrvACgcb0AQJi8AAB2PAAAgLkAIC69AAAxvQBArrwA4B69AADiPACwqb0AgCu8AECePADgMj0AwPC8ACBcPQAACrsAgBO8AACGPQCgAr0AgMU8AOAoPQDAr7wAAN08AEB5PQCAQT0AgDU9AIAZvABgTb0AAN08AAAePQAA4TwAQA29AAByvABQk70AgCU9AEDgvACAUDwAgII8AKB3vQCgSD0AAMA7AICDPACAALwAACW9AMChPABAubwAMI69ACA+PQAAcrsAoCu9AJC+PQDA1rwAwPs8AIBJPADAtjwAYCo9AADcOgDAWb0AgMk8AAAjPQAA9LwA4Es9AMBGvQAAeLsAwJe8AKB3PQAAxrsAIGC9AADDvQAAKbwA8Io9AMCXvACAZz0AwL+8AICAPAAAUDsAwKC9AADLOwAAyrwAAKU8AIDWvAAAzLwAwKo8ACBovQCgMj0AoDO9AICDPAAw8b0AgAq8AOC2vQAgdL0AwJg8AEAhPQAAGrwAoHw9AOB2PQBAkzwAwJ68AMAzPQBAirwAQJK9AAD3uwCAQLwAgBW8AEB5PQDgg70AwAk9AAA1PACADj0AAAo9AABFvQAA7jsAAIS6AAAePAAANjsAgEG9ALDYPQBgjz0AAM+8AACgOwDgCL0AwOG9AIAdvQBAdz0AgPg8AIC1PAAAAD0AYAw9AIDuvAAAbz0AABe9AAC/vADAPT0AABI9AMDBvABgJ70AAI28AED3PACAj70AwOw8AKB3PQAAWz0AoBq9AMBhPQBAXz0AQAE9APClPQAAvjwAgFU8AGBJvQDA0LwAgA28AHCvPQAQkT0A0Mc9ACAHPQBAe70AgHI9ANDFvQCAVTwAADu9AMCLPABgNL0AAKC7AAAAuACgYL0AgF49AADwugCApTwAAJW7AAA7vABAtrwAwHY9AKAaPQBgZL0AQAY9AECbvAAAwLsAwNq8AMC1vAAApDoAALy7AADxvAAAKb0AoMg9AACCPADAhzwAoAK9AECMPABA0LwAYBE9ACDFvQAAcjsAUIu9AECIvAAA5rsAAKA7AABfPACwhL0AACw7AMDqPABAzzwAIJW9AMDuPQBAt7wAMJo9AABgugCAdD0AgHQ8AEA1vQAgZz0AYGU9ACAPPQCgMj0AQD09ACAFPQCA+DwAoEU9AIAqPACAIDwAgH48AMAovQCAUb0AQOq8AAA3vAAAvrsAAMq8AIA0PQAAgDsAgBa8AIDSPACAljwA0BE+AEDkvACAGjwAAOI8AADcuwCAgrwAQDQ9AAAvvABAxbwAwI48AOBLvQAAXr0AgHi8AECAvABA77wAwLE9AKB0PQDAKj0A4Au9AOAgPQAA4DkAAIQ6AACwuwCAXbwAYII9AGASvQBAST0=","chunkHash":"228159706fd366b3b876116977f2096d148b9e89f6dcee8c91babd998069fd9d"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\nfrom dataloader.nuclei_dataloader import get_nuclei_dataloader\nfrom dataloader.nuclei_dataloader_masked import get_masked_nuclei_dataloader\nfrom model.vgg3d import Vgg3D, load_model_from_checkpoint\n\n# Mask-guided Attention Module\nclass MaskAttentionModule(nn.Module):\n    #...\n# Custom adapter model with mask attention\nclass MaskedVgg3DAdapter(nn.Module):\n    #...\n# Mask-guided loss function\ndef mask_weighted_loss(outputs, labels, masks, loss_fn=nn.CrossEntropyLoss(reduction='none')):\n    #...\ndef parse_args():\n    #...\ndef train_model(model, train_loader, val_loader, optimizer, args):\n    #...\ndef validate_model(model, data_loader, use_mask_attention, use_mask_weighted_loss, criterion, device, adjust_labels=False, \n                  epoch=None, save_preview=False, output_dir=None):\n    #...\ndef main():\n    #...\n# Utility functions inherited from finetune_vgg3d.py\n#...\n```","range":{"startLineNumber":33,"startColumn":0,"endLineNumber":1346,"endColumn":0},"embedding":"AACyuwBAWD0AoBM9AACSvQCgU70AQHO9AGACvQBASj0AUIu9AADdPAAAsDkAALC5AACKuwAAwDkAgLM8AECLPAAAx7wAoEM9AKAAvQAgaj0AgJM8AKDbPQAgQz0AAKg6AABAuwDAJL0AwCA9AGAMPQCAjz0AQJu8AMDJvACAQb0A4Hu9AKAxvQBAab0AAIQ6AFCiPQCgXT0A4Gi9AAAUuwDgNT0AUPa9AIAKvQDQgD0A4BE9AACVuwBAzz0AAAS8AABIvAAgBz0AgMK8AOBIPQCAVb0AoHc9AGBnPQDgUz0AAJE8AECiPAAArTwAAF88AAAEPADwmb0AAJU8AEDyPACAnDwAwNa8AADyvQAA2LsAAMG7AOAmvQDAt7wAgDE8AEDjPAAAX7wAIBg9AIAVvADAGD0AcJE9AGB+vQCAHzwAAG67AAC5PAAAEDwAAPU7AACCvADwzL0AQAC+AAAGvQDQ1r0AoA69AECpPAAAuLoAoEq9AJDAPQCAFz0AgMM9AICsvABQsb0A0Mc9AAB1PABwyT0AAOQ8AEDKPABgAL0AQEo9AEC4PADAmjwAABW8AAAiPAAApj0AgDq8AIANvACAwTwAQPC8AADcPABAH70AANM8AABIuwAAYLsAAOm8AECqvAAAT7wAIAg9AKBdvQDAnjwAYA49AEC1PQCAKL0AwKe8AIAXvADAijwAALe7AICIPQAgiL0A8I69AAACuwBger0A0JM9ADCZvQBgrT0AAOm7AECvvADA3jwAgHE8AEClvQAALjwAgPS8ABCBPQDQpL0AEJw9AIDzvADwjT0AAIo7AMDEvADgQL0A4C69AMBLvQAgFj0AQPQ8ADCZvQCAcDwAgC48AIBqPAAAOr0AACi8AKCNPQAAab0AANA5AIBevQAAcb0AIHo9AAAFPABAHT0AYAy9AAACOwBAqLwAgEu9AADWPADQo70AQJW8AMC1vABAsTwAgGA8AAD6PADgmL0AgKa8AMClPADAgzwAAHa8AOAlPQAA3DoAgAA8AAD7PABARj0AAJy7AMDJvAAADT0AAGA5ALDHPQBAMD0AQEm9AAAvPQCAdDwAgCq9AMDZPACgjL0AIB+9AADQOQAAbjwAgK+8AIBePQBAk7wAgGA9AACKuwAgDr0AQMU8AKALvQBgFj0AgLU9AHCfPQAAXjwAANM7AICdPAAA/DoAgIU8AAD3vACAkTwAAMa7AECkvAAAXTwAwJK8AIA+vQAA+jsAADA8AAATvAAg4L0AgGI8ALClvQCQpT0AYEg9AIAXPADAQz0AAE48AABrvQBgfT0AQOc8AADNuwDgjr0AANA7AGCcPQBwoD0AAEo9AAAyvADgNr0AgBW9AECdPQCAqLwAYDg9AABdvQCgKL0AAM28AACFOwDgGL0AAKS6AAAOPQAABr0AoA+9AECsPABgEr0AwN28AIAGPACAm7wAwO48AKAEPQAAgLkAQO08AGBcPQCgVz0AMKE9AID1vADga70AQJi8AOB4PQCAQT0AAO68AAD4uwBgar0AQP48AHCBvQAAaDoAgJK8AJCvvQCAIT0AAIc7AIAIPQDAnLwAwFi9AEAvvQDApzwAgEq9AGAwPQAAszwA4Ey9AOAhPQBwqb0AAAK8AGAivQBgPD0AgCQ9AAANvQAAj7sAIBe9AIBKPQAARLsAQII8AKALvQCAiLwAgGU8AACPPAAAgDoAsL29AMBBvQAAGLoA8Io9AAClOwBAUT0AoGa9AADlvACAh7wAAC69AIAxPABgDr0AQJS9AICIvAAAxLsAQEg9AACEOgBAuzwAIFo9AADmPACwAL4AAIO9AGAuvQCAsr0AAPa7AACdPADAvrwAgDs9AOBGPQAABr0AQEm9AAAivABAID0AEMu9AACNvAAA8LkAAEq8AACIugAAI7wAALq7AAB2vACACzwAwEU9AMADvQCALT0AoAO9AIA5PAAAHzwAAEi7AAAWPABwkz0AoCo9APCZvQAA4LwAAOu9AIBwvQAAnTwAQAU9AACIugAAkLwAYGE9AADROwCgez0AQLu8AAC9OwAALzwAAK88AIAqvADAmL0AQKo8AACzPABQor0AAIa8ABCZPQAA8TsAAAO8APCbPQBA2jwAQAs9AMDaPQBArDwA4Bg9AIBLvQCAnrwAAD48AIBFPQDA+DwAAD89AECjPAAgCL0AkIw9AACgvQBALD0AwNq8AADUugBA/rwAwMk8AACcugAAOb0AAKw8AICNvACQgL0AQIc8AIAyvABgd70AAIC7AEA1PQBA4rwAACi7ACAMvQCQl70AAAw7AACIuwAgNr0AAK08AICAvQBA2jwAQJQ9AIAwPACAnTwAAHo7AMAnvQBQir0AgIc9AID+vAAALrsA0KO9AABPvABAI70AAGS7AAChuwCAKb0AgBo8AADUOwCAH7wAgLK9AKCpPQCgGT0AgH49AIBsvQAAgz0AkIa9AECPvABAjzwAAI+8AADsPABAfz0AwI08AGC2PQCAkTwAYEY9AAD6OwBA0DwAACA9AACbOwAAKr0AALw6AGBWPQCAnLwAwB+9AACxuwCA8jwAAMq7AKALvQBgPD0AeBg+AAC5vAAAubwAIIQ9AOAdvQCAnLwAgO88AECyPADAiLwAAN88AAD0vAAANLwAQPe8AAAaOwBA4bwAgP08AACyPAAARz0AAEg8AACnOwDA07wAgMu8AMDePAAAwbsAQI09AAAwvQCA1jw=","chunkHash":"c83e412440b97dbfd06b104dd3141ec883cdda735c2ef3a0bbf19924f4a35dea"},{"text":"File: `scripts/finetune_vgg3d_masked.py`\n```python\n#...\ndef get_transforms(target_size, use_augmentation=False, margin=0):\n    \"\"\"Define transformations for the input data.\"\"\"\n    #...\ndef basic_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W) with ABSOLUTELY NO NORMALIZATION\"\"\"\n    #...\ndef mask_transform(x):\n    \"\"\"Transform a mask to a 5D tensor with shape (1, 1, D, H, W) - preserving raw values\"\"\"\n    #...\ndef augmented_transform(x, margin=0):\n    \"\"\"Transform with augmentations (simplified from original)\"\"\"\n    #...\ndef plot_training_history(history, save_path):\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":1346,"startColumn":0,"endLineNumber":1471,"endColumn":0},"embedding":"AICtvADAVj0AcJo9AIAXvQAQir0A0Ly9AECfvACAyTwA8LS9AMC2PABAIb0AwIQ8AADUOwDgML0AgFC9AAAKOwAARrwA4AU9AGBbvQDAjjwAQO08AIAAPQAggT0AQLq8AACWuwCgDb0AwOE8AABovADARz0A0JM9AIATvADgHr0AIFa9AMBvvQAAPjwAAA67AIAgvAAwuD0AgGU8AAAyuwCwzT0AwNO9AABhvACAADwAwBk9AADIuwCABD0AANi8AIABvQCwhT0AAMI7AAA5PAAAzDoAAC08AECyPAAAtD0AAMK8AEDYvADAxjwAgCM8AICHPAAAJL0AAKw7AADAvADA4TwAABM9AODJvQAA2TsAALc7AAAAOAAAZjwAQFe9AACruwAgHj0AADs9AECTvABAojwAoBk+AIBwvQAAIjwAACY8AOApvQAARDsA0Ik9AABrvQCAgr0AoHu9AGCgvQAwq70AAOu7AADVOwDgJb0AUJq9ANChPQBABL0A0J89AADrPABAAr0AwPI8AMC7PACgij0AAL68AAAMuwAgF70AoFg9AABgOQBA1TwAABS9AGDDPQAwnz0AQOW8AICtvAAAZT0AAAC7AMALvQDAKL0AAP28AEBfPQBgLb0AQMi8ABCOvQDATr0AwLI8AAD/vADgCT0AADI8AABSPQDwsL0AAMW8AAC0OwBAsDwAAJc7AEAWPQDwi70AAKC6AOA2vQCARLwAoIg9AMDevABgqj0AYBk9AMCQPAAAsDsAgNW8AGCBvQCAZLwA4Ei9APDcPQDAxLwA4Jk9AIAtvQBgZj0AQPY8AIArvADAb70AwN68AEBuPQCAlD0AQA09AKDPvQAAIDwA0IM9AEC6PADAorwAwMI8AAAEPQCAyrwAAAa8AMAwvQB4Br4AgBM9AMC0vQCArLwAgBW9AKCIPQAA4DkAwLa9ADCRvQCgVb0AwM+8AGBOvQDgUz0A4Em9AGAQvQDAIr0AALU8AIAdPABgJj0AgCG8AMDaPAAANDwAAKk7AABSPQDgQj0AgC28ACAEvQDAeT0AAF69AMDMPQAAQDkAAJE7AEBNvQAAaTwAgBW8AKA6vQDwtL0AgPC8AAAIPADgKr0AQBA9AADlOwCAprwAwH89AIAyPADAQL0AAEi6APCtvQAAHLwAgPU8AGCoPQBAz7wAUIM9AEDzPACAfLwAgCS8AADgOgAAQzwAYA29AMDSvAAAOrsAANq7AADsuwDgGb0AAGi6AADpPABwq70AwHe9AIARvQDAwjwAAC89AADauwAAArwAAD67AIBqvQAA/TwAgDM8AAA+OwAAyL0AwM08AKAzPQBAJD0AAKi6AABMvABAm7wAgAO8AICyPABgMb0AQHm9AKDkvQBA/jwA4II9AABIvQDgY70AwOM8AEAzPQCA4zwAgBi9AAAwugAA2zsAgCG8AKBuPQDgAz0AgAw9AIAxPQCA0rwAAMO7AAAwPABADz0AAKg7AACXOwCAgTwAAJC6AIDdPABgDz0AQFw9AKAtPQAAZLwAgJk8APCLvQAgDb0AkK49AMBJvQAAPDsAQDm9AOAVPQAghT0AgBm8AAATvQAAo7sAIDq9AABYOwCAXzwAAJc7AKBDPQDASL0AAHw9AMC+PAAAQLsAgBw9AEAGPQAAkLsAAGG8AMDuPQAALLsAgAi9AACDPACAjjwAAEw8AED7vACAB70AwAS9AED7vQAAEb0AAKA6ACAWPQAAkrwAYIC9AIBjPAAABLwAcJG9AGAEPQCAm70AgC28ALCfvQAAZLwAMKw9AACavAAARjsAQLC8AED0vADQ+70AwLO8AFCJvQAAdL0AQPY8AICyPAAAyDwAQGQ9AMDrPACA1jwAgDa8AADRuwDgVL0AAPK8AICFvADQhL0AQJC8AIBYvABAXL0AQPy8AAAMvQAAdDwAgHI8AKBdvQAAp7wAgN48AIDLPAAAsLkAALY7AICSvADAbD0AAKO7AADsvADgkb0AcJC9ALCuvQBwvz0AgG88AIAGPQDAGT0AgBM9AAA+uwAAmDwAQJU8AICjvADAjDwAAFI7AABxPACAUbwAoAY9AICVvAAAQrwAAAK9AGD/PQAARrsAAJu7ABgFPgDATj0AgI48AKASPQAAErwAwJK8ACCLvQAAzrwAgHi8AOB2PQAAo7sAQGM9AIAgvAAAADsAAHM9AJDcvQBAvDwAAG67AMCVPAAA2LoAAGA6AAA6uwBAEL0AALc8AMB+vQAAyTsAAAA5AEDDvACgOb0AgLw8AIDNPACAKzwAgGc8AAASPAAAmbsAAHO8AIBqPACAOLwAACw7AABivQAADDwAgHI8AHCVPQBgaT0AAMq8AIDuvACABr0AQBI9AODHvQAAeDoAAAK9AABLPQCATrwAQBa9AIAhPQAAKr0AIBy9AACAugCgDD0AIHa9AOBPPQAARrsAwFc9AAC5OwAgdj0AAFu9AAB7vADAtzwAAJC6AIAOPAAAQj0A4Ei9AAA9vAAAyLwAgKg8AECHPAAARz0AQMo8AABIOgAgJb0AAKg7ACBUvQCACjwAgDw8AJCOPQAASLsAUKa9AIDovADAaD0AAMg9AKAnvQDghb0AgFs9APCXvQAAkLwAAGM8AADkugAAOLwAMI49AABQvABA8rwAgNu8AEDhvABAgjwAUNo9AABYuwCgdj0AgE08AADWPACAILwAQPw8AADWOwDgD70AoOk9AECsPAAgEb0=","chunkHash":"16d78f1734a28025e374a8ed10ba82e59f5a1f0a82b409cbe913834401f9bfda"}]},"file:///teamspace/studios/this_studio/scripts/finetune_vgg3d.py":{"hash":"c948584786a6a9e3e931d5345670e121c0949710939b492a8ac5d73048224475","entries":[{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\nclass Vgg3DAdapter(nn.Module):\n    def __init__(self, base_model, input_size, num_classes, classifier_size=512):\n        super(Vgg3DAdapter, self).__init__()\n        self.features = base_model.features\n        \n        # Calculate the feature output size with a forward pass\n        test_input = torch.zeros(1, 1, *input_size)\n        with torch.no_grad():\n            feature_output = self.features(test_input)\n        feature_size = feature_output.view(1, -1).size(1)\n        \n        print(f\"Feature extractor produces {feature_size} features\")\n        \n        # Create a new classifier that matches the feature size\n        self.classifier = nn.Sequential(\n            nn.Linear(feature_size, classifier_size),\n            nn.ReLU(inplace=True),\n            nn.Dropout(0.5),\n            nn.Linear(classifier_size, classifier_size),\n            nn.ReLU(inplace=True),\n            nn.Dropout(0.5),\n            nn.Linear(classifier_size, num_classes),\n        )\n        \n        # Initialize the classifier\n        for m in self.classifier.modules():\n            if isinstance(m, nn.Linear):\n                #...\n```","range":{"startLineNumber":32,"startColumn":0,"endLineNumber":57,"endColumn":0},"embedding":"AADbvADAprwAQJ49AFDqvQBgFL0AAJi9AAD1vACAk7wAwIK9AIBKPQCAgrwAQMW8AMBcvQAA4DkAAAG9AECCvAAAFL0AcK09AAAaPACAzz0AwK48AGATvQBgZT0AwIW8AAAZvABAgrwAgEI9AEDaPADwxj0AgEK8AIBjPADAubwAMLu9AGA4vQDw6r0AADy8AIAGPQCAATwAQNm8AAAsPQBgKT0AYHy9AMBavQBAVD0AoE49AADLvABAEj0AwLe8ACBEvQDAOT0AQPO8AICJPQCAIbwAoDQ9AAAuOwAgYj0AgDS8AAD9vACA4jwAAIo7AIDevACQhr0AgFo9AAAgPAAgLL0AACa7ACBhvQAgYT0AAFs8AOAbvQAAbL0AIIS9AAC/uwAAtDoAgPo8AEBMPQAAHjsAcL89AJCAvQAAhrsAAMi7AADoOgCApbwAkIA9AIBbvQAAvb0AAJi9ALCSvQCgWb0AQCu9AAC0OwAALDwAwLO9ALC6PQCAjjwAAAE9AMAKPQBgrL0AEIk9AIDAvACAHD0AcI49AICHPAAgPj0AAN48AGCDvQCAc7wAwIE8AIBwPADgYj0AwBy9AIC4PADALj0AgDO9AAA5vABA2rwA4EI9ABCTPQDgT70AYAS9AIAEPAAAEzwA4AU9AHDWvQDAuTwA4Dw9AEDZPADAkjwAADi9AMCpPABgHL0AwNA8AICAPQAAzzsAQPS8AHC2vQBgjb0AgDg9AABwvQBAXD0AACA6AAB+OwAAUTwAAJC8AIAMvQCwgz0AYKG9AIANPQBAcb0AgG48AKB9vQCQtD0AALa7AOCHvQAATLwAQAY9AICbvADAVj0AAIs9AMBRvQDA2DwAAFS7AAClOwAAgjsAQCm9AAArPQAAHb0AALC5AJDCvQCgCr0A4K09AADRuwDAIj0AQLu8APCMPQAA57wAgCY8AMA9vQAAU7wAgH29AOAxvQAAcTwAAIg6AAAIugCA1LwAwA09AAC/vAAgFL0AwIE9AMD8vAAAzzsAwNw8AAAmOwCQhD0AICk9AMCLPACAzDwAgK+9AMBXPQDgOD0AgGG9AMCdPAAAEb0AIGC9AMDYPACA470AgC88AAC2OwAAhjwAAHA6AACMPADAwzwA8Ig9AMD8vAAA9rwAQIa8AACBOwDgGj0AQMw8AACROwCARjwAALs7AACKuwDAxbwAAJe7AGBbvQDAjbwAgJ28AICTvACAfzwAwFu9ACCYvQAAALkAwJ+8AEAdvQCAPr0AgFA8AIAQvAAAlTwAsIM9AADSOwAAXz0AABg9AMDzvAAAUjwAwLs8AMDsvAAgXb0A4F09ACBQPQAAKDwAEIY9AEAnvQBAYL0AgBa8AADoPACA2LwAAIS6AICkPABwi70AADO8AIDhvAAAS70AgNM8AACfOwAAgLgAgK88AACsPACA7LwAQN08AACLPQBgBb0AABC6AAAIOgCAIjwAAL48AIBnPADQvD0AoK89AAAEvQDAhbwAwOc8AOBoPQCApz0AAKA5AACMugCAEbwAgCA9AIDcvABAkLwAwPI8AAAjvABAAD0AwLe8AABVPAAAIj0AIC69AGAaPQDgeD0AIGW9AGAYPQDAnTwAQA09ABCyPQBwyr0AAGg9AACMOwCAGTwAwBg9ACALvQBA7LwAQMK8ACCrPQDA47wA4FQ9AGBVvQBAp7wAQJq8AOAhPQAA8LoAQIG9AIA0vACACLwA8Iw9ACBLPQAA4DoAAGu9AICqPAAAgTwAAOO7AIDVPAAAgLwAQLO8AEAyvQAATLwAwBw9AEBVvQBguD0AQNM8AMCJPQBAFb4AQKu8AECgvQDAxDwAAMA7AMDVPQAAkLsAcIY9AKCKPQAAy7sAAC08AACCPAAAcDwAADW9AMCVPACAC70AAAQ7AIByvADwjL0AAKC5AABQugBAij0AwCg9AAA/vADAuTwA4DC9AABAvQDA27wAAKK8AACjOwAAirwAgF09AIBpvQAASLwAIJq9APC0vQDAozwAQFk9AICaPAAANrwAACU8AGAtPQDAlj0AgF+9AADlOwCAzLwAQOI8AEA1vQDAnr0AACI9AADHvACgNr0AwOQ8AKBAPQBgRD0AAAC9AKAcPQCAjrwAALQ6AECsPQAACj0AQMK8AMC9vADgAr0AgPo8ACB3PQAQgD0AgKw9AIAqPQAAPjsAABY8APAYvgAA5DwAgG+9AAC6vAAA+7sAgG28AMCEvQCAjrwA0JU9AADBOwAA3DwAAIg8AMC9PACAQrwAAAQ8AAABPQAArbwAAOu8AGBWPQBgIb0AQIY8AAB4uwCArrwAAIy7ACBJvQAA3zsAQJ08AIAFPQBAIj0AAB29AAB1PABAvbwAAKM7AADpOwAA3bsAIH+9AACnvAAAVbwAQKO8AMAovQAAN70AgNm8AEBBPQDARj0AYKS9AFC5PQDAiT0AMPg9AADovABgYj0AIEq9AJAAvgAARjsAADa7AAD0ugDAvDwAAB89AECMPQDACr0AAKw6AIBEPADgQz0AAHo7AIAYvADgML0AgBu9AABgPAAgar0AgE28AIBLPABAmbwAgM68AICrvACARLwAMPQ9AFCRvQAgN70AAGI8AKACPQCgNb0AQMg8AACwOwAAYrwAgLM8AKAJvQBA87wAALG7AEBRvQDA87wAYGk9AABAPQBAkDwAAGA7AAAgOgCAur0AANU7AIAGvAAA+LwA4Bw9AEDGvACAPz0=","chunkHash":"b7fbe10e2462aec8395b1c54c791ffe91c51e9dadf7b14b6b4f1c53d2850b20d"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\nclass Vgg3DAdapter(nn.Module):\n    def __init__(self, base_model, input_size, num_classes, classifier_size=512):\n        #...\n                nn.init.kaiming_normal_(m.weight)\n                nn.init.constant_(m.bias, 0)\n    #...\n```","range":{"startLineNumber":57,"startColumn":0,"endLineNumber":58,"endColumn":44},"embedding":"ACAgvQCAszwA4EQ9AFDXvQCAwbwAEJ29AIDevAAAOrsAkLG9AOAPPQCA/LwAAOU7ACBfvQAARDwAgB+8AAAmuwCALL0AMJc9AICmvAAQzD0AwPU8AIAQvQDAWT0AAIG7AABEvAAAfbwAgGs9AMCOPAAAij0AQNm8AECPPAAACr0AUJq9AEAhvQCw7b0AgFO8AACTPAAAXTwAgCa9AMCVPADgFz0AML29AADVvADAmj0AICo9ACAVvQAAwDwAAO67AMA9vQCADz0AQLu8AEA7PQAAqzsAACY9AAD3OwCwkT0AAES8AADavACgPT0AALk7AEDvvABAGb0AAMI8AACVPACAQ70AAAy8APCmvQAACT0AAHQ7AADHvACQlL0AoD+9AAC0OwAAXjsAALS7AIA6PQAAWLoAIOk9AGBGvQCAGbwAALC7AIACvADAi7wA4Fw9AIBlvQDQqr0AoMe9AABUvQDAk70A4Ay9AIBvvAAAMDsAgKC9AEDVPQBAzDwAIFE9ACABPQDgl70AwJA9AIDPvADAhjwAoHo9AACaPABAWz0AIFs9AIAdvQAAcLsAoAA9AIA0vAAQmj0AIE29AAAXPQAgED0AQFe9AIC0vADgFL0AwD49AMBXPQDgIL0AYCa9AAD4ugCAxTwAoEY9AGC/vQCAtjwAAHs9AAAUOwAgAT0AAIO9AMCHPABAcL0AgNo8AEBAPQAAVDsAAKu7ANCnvQDQtL0A4H49AICOvQBgiT0AgOA8AADIuwDAtTwAAPC7AMDlvABggj0AgJa9AEACPQCgLr0AAIC7ABCHvQBg2T0AAOS8AAAcvQCgLL0AAH09AEDavADAFj0AAJ89AIAcvQBA8zwAwO48AIAkPQAA27sAgHS8AMAAPQAAsLwAgCo8ACCMvQCAVrwAkN89AADVPAAAxTwAwNa8ADCPPQBAG70AgC09AABBvQDgUL0AYCy9AGApvQDArDwAgDA8AABQPAAAybwAgNw8AAAevACAkLwAEKU9AAD3vAAAEjwAAGE8AAB2PABwtz0AgGM9AADOPADAjTwA4La9AMCLPQAgWj0A4BK9AACruwCAAr0AgHS9AAA6vAAQ2r0AANe7AACougAAwLkAAKy7AOAOPQBACD0AYHI9AAD6vACA9LwAAHu8AACDPAAA3DwAwLA8AABVPAAAEDwAAI67AIAjvAAAorsAABA6AKBZvQAAMLwAACO8AACfvACA+jwAgGu8ACDVvQAAZDsAAOi8AIB/vABgPL0AAGi6AABdvACA+zwAwGI9AMDAPACQhz0AAK48AMDNvAAAEDwAYA09AAC3vADgYL0AQEU9AEB1PQAAzrsAgJk9AGAlvQAAPL0AgIO8AACVPABAlLwAAKE7AIAXPAAgn70AAKq8AMDlvADAJL0AwJ88AAAyuwAAajsAAIA7AEDcPAAA9LsAwKc8AOBOPQDA8rwAwMQ8AAChuwBA8TwAIBI9AICpPACgsj0AsJU9AMDEvABgCb0AwMI8AFCaPQAQqD0AgNq8AABDPAAAU7wAwGE9AGAZvQCAX7wAALA6AAD6uwCAGjwAAJW8AAAcPQCgIj0AIGq9AADsOwCgTz0AwCO9AKBfPQDADz0AQMA8ADDLPQAA1L0AYG89AADVOwAALjsAALU8AADquwDAD70AQK+8ANCVPQAA2LoAQCk9AIAcvQCgBL0AAKM7AACyOwAAVjwAwIC9AAD4ugCANLwA8Ik9AIATPQCAujwAAFa9AAArvAAAQjsAAFg6AACMPACAT7wAgPC8AOACvQAAEjwAIEQ9AIBrvQCQpj0AAEA8AEBXPQCQCL4AACi7APCRvQAAwjwAAHE8AGCPPQCAMLwAwFg9ADCJPQAAzbsAAHs8AACtOwAASDoAUJu9AED3PADgDr0AALW7AABguwDAjL0AQIE8AADJOwBAST0AQO48AICGvQAgOz0AIFO9AKAJvQCAUb0AoDO9AAAuuwBAirwAQGc9AGCHvQAAArwAwH29AHClvQCABz0AQP88AICHPAAA77sAAFo8AIDMPABgqz0AoC69AABmOwAAz7wAgKM8AEAYvQDgdL0AoGw9AECIvACASL0AgGU8AOBTPQAAZz0AALC8ACBiPQAAKDwAADS7AACiPQDADj0AgCK8AADmvAAA2DoAACw7ACAkPQBAjj0AYLI9AEAjPQAAgbwAQKY8ABguvgAARDwAYDy9AEDEvADgIr0AgH+8ADCivQAA/rsAwFU9AMCgPACAvjwAAEg8AIBXPAAAALkAAJQ8AGAoPQBgO70AAIC8AMAXPQCAMr0AAFY7AADRuwDAkbwAAL67AAA6vQAAXjwAAMo8AABCPQAgRz0A4D+9AIBPPADgB70AgGs8AACwOwCAGbwAAHy9AAA0vAAAPrwAAF67AKAqvQBwgL0AAAO9AIA+PQBgnT0AYHu9AHDaPQDAhz0AAOk9AAD3vAAQnT0AQOi8AHDbvQAAIzwAAMG7AAAuvAAgFT0AQIc9AECDPQCgKb0AAEA6AEDkPABA0zwAAKi6AAAlvABgV70AwKK8AABMuwDAI70AANw7AIBGvAAAibwAAD68AADfvAAAnbwAiBE+AIBNvQAA7LsAwPI8AIAFPQCgFL0AgIA8AECyPACAW7wAwN48AACcvACAarwAQIM8AEBdvQCA4rwAgB89AEC7PADAgjwAACy8AIA4vAAAgb0AgHs8AABCuwAAMbwAgFI9AACSvACAUj0=","chunkHash":"51567044f10ac5db75d3393a25b0094ec55b6851216a973569cc31d188614719"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\nclass Vgg3DAdapter(nn.Module):\n    #...\n    def forward(self, x):\n        x = self.features(x)\n        x = x.view(x.size(0), -1)\n        return self.classifier(x)\n#...\n```","range":{"startLineNumber":60,"startColumn":4,"endLineNumber":63,"endColumn":33},"embedding":"AECjvAAAjbsAgCM9ADDNvQAAiDoA4Lu9AEAHvQAA+jwAQHm9AOAlPQCAarwAwOa8AEAyvQAAfjsAAEC8AAAOvAAADr0AwI49AABguwAIBT4AgIA8AMC7vAAgWT0AAA67AAAEvACA2rwAgFs9AAD+PABQjj0AAJ28AAC2uwAAFr0AQF29AIAqvQCA6b0AAJq7AABrPAAAnDwAwLq8AIAfPABAGz0AsI+9AEA/vQCAkjwAgAA9AIDLvAAAHDwAADa8AEACvQBgQD0AAMe8AAALPQCAFbwAoGQ9AMCfvADgJD0AgE88AADHvACApTwAAFQ8AIBgvQAAfr0AwKU8AEDKPAAAFb0AwAQ9ADCOvQAgCz0AABY7ACAKvQAAQr0AwDO9AKACPQAAsDoAgKA8AGALPQAA/TsAQOY9AICavACAQbwAwK+8AAD6OwAgNL0A0IQ9AIB6vQDwvr0AoHe9AJCKvQCgX70AgFa8AACMugAAz7sAYH29AACaPQAAoDwAIFc9AADwPACQyr0AsKg9ACBBvQDA+zwAAFk9AACWOwCgAj0AIJw9AMADvQCAM7wAAAW8AADFPACwhz0AoEi9AMAnPQBAAz0AgK28AACiuwCAxbwAgBE9AGBNPQBAPL0AYDi9AAAQugAApzwAAO07AOC7vQDAhzwAgB09AAA1PAAApbwA8IS9AMDfPACAXb0AALc8AIBEPQBAmTwAAIy6AACTvQCAb70AICs9AJCDvQCwnD0AAKS7AACIuwBA+TwAgK68AED9vACQhz0A4FC9AMALPQDAgb0AgFk8AMBFvQAw3D0AAAW8AKBmvQDgP70AgF49AAC/vABAbT0AABI9AKBHvQAAaLoAANA7AGAlPQAA3LsAIBW9AIAIPAAATbwAAI07AABnvQCgHb0AgHQ9AMC1vAAAAj0AAMo7AMC6PQAA9bwAcIc9AFCMvQBA2LwAQAS9AADAuwAAkzsAAEQ8AADduwCAe7wAwIY8AEDkvABAS70AIHE9AIAzvAAA6DwA0KQ9AIAZPADA2z0AQCI9AAAaPABAhDwA0L29AMA5PQBgVT0AII69AABKPADAO70AgLO8AIBjvAAg370AADI8AAB/PABgDb0AwM68AED+PADAmjwAYG09AECjvABA6LwAAMy7ACAXPQAA5jwAwGQ9AAA2uwAAZDsAgKA8AADbuwDgCL0AAJo7AMCYvQAAjrwAgMS8AICqvAAASDoAQMC8AGCGvQDAg7wAICi9AMCQvACgR70AACO8AIDAvAAARLsA4LM9AADROwDgTD0AAJw8AEBEvQDAijwAwLc8AACBPABA27wAAH49ACBnPQCAFLwA0JY9AABKvQDQjr0AAGC6AMClPACA/7wAwOC8AAD8OgAAib0AwKg8ACAPvQAAwbwAwJY8AAAzPACAPLwAAJw7AECnPADAqrwAAJ88AEADPQAAeDsAAPC5AACAuAAAXLsA4Dw9AMCdPAAwwj0AQL49AICgvABgLr0AgLY8ANCbPQCwqT0AQO28AKA/vQAAFb0AoEE9AEDOvAAA+DsAgDY8AEAGPQDA7jwAQJu8AMCCPABAXj0AACq9AKAiPQAAUz0A0I+9AKCRPQBAwTwAwIY8AOClPQCww70AIIA9AABYvAAADDsAoAc9AAA8uwBAKL0AgIy8ADC6PQAAI7wAQBA9AMA3vQAA67sAAO28AEDtPAAAWbwA8Lm9AACouwAAcrsAYG09AOAQPQAAB70AoDK9AGAhPQAAYDwAALy6AAAUPACAKbwAgPy8AADxvADAJr0AgBQ9AAAavQAQ0z0AAJw6AIB7PQDgJr4AQI+8AEByvQAAVrsAgHg8ABDTPQDAyrwA4HI9AEARPQAAbrwAAJy8AABnvAAgDT0A4E69AIAAPAAQmL0AoAa9AAAkOwCQk70AAPU7AAAoPACA3DwAgJg8AEDzvADgLD0A4CG9AMCYvABgZr0AABu8AIADPQAAYLwAwNw8AOB4vQBAm7wAwDm9ACB5vQCgGD0AQBU9AABGPACASjwAgBs8AIBsPAAAdj0AMKC9AACWPACAd7wAABA7AOANvQAQmL0AYE09AAA8vQAAlb0AYBA9AOAaPQCAZTwA4Fi9AOCRPQAAcrsAACc8AACpPQBA/bwAgFs8AMAfvQBAibwAwIc8AGCPPQBAbD0AgMU9AAD6PACAEDwAwI68AHAgvgDA9TwAoIa9AAApvQDgDb0AgME8AECdvQAAGzwAUIQ9AADqPAAAez0AIBU9AEDUPABAAj0AgPQ8AEC0PACAoLwAgMq8AIAwPQCACr0AAPO7AIDAvABAHr0AgFa8AABZvQDAHD0AwJA8AEBSPQCACz0AsJW9AACuOwAgAr0AQNc8AADUOwDgIL0AADq9AAB9vADAH70AQPi8AKAavQBAab0AQO+8AMACPQCgVz0A8J29AODPPQDgnz0AWAA+AIA2PABA+TwAgDC8ADDCvQAAJzwAANW8AABAOQCgFT0AoC49AJC2PQAAKrwAgOq8AIAePQCAPz0AgIk8AGACvQAA4LwAALy7AAAmOwDgM70AAPG7AICBPABAyzwAQPi8AOABvQAA7TsA8Ag+AAAEvQAApLwAAOQ6ACAPPQAANbwAgI88AIA1PACAfLwAgF88ACBnvQDgSr0AQMc8AMAsvQAALLwAYDI9AACDPQDA8TwAAJs7AECKPADgbr0AAOs8AACAOACApbwAANQ8AADUOgDAVT0=","chunkHash":"93b34ab03973891d141072b57b116fdaef4e3e4cbd50a1eaee0ea208e551e298"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\nclass Vgg3DAdapter(nn.Module):\n    def __init__(self, base_model, input_size, num_classes, classifier_size=512):\n        #...\n    def forward(self, x):\n        #...\n```","range":{"startLineNumber":31,"startColumn":0,"endLineNumber":60,"endColumn":25},"embedding":"AADMvAAA0LkAoBw9AADYvQAAaLwAQI29AGArvQAAz7sAEJK9AIDiPAAgAb0AAJ67AGBdvQCAdbwAgOG8AAByuwAAFL0AkJA9AMCovABwzj0AgLg8AMD2vADgUz0AAOG7AEDGvAAAhDoAIIA9AADoPADArD0AgH68AAARPACgGL0AEI69AMA1vQCw9b0AANC5AIDePACACTwAgFK8AEAFPQAAYj0AEK+9AIAVvQCQhT0AgEY9AADnvACAjjwAAIy8ACBSvQDAID0AgNK8AAAnPQAAiDoA4C89AACYuwAQgT0AALK8AIA3vAAAMz0AAHI8ACAMvQDAX70AIAY9AAAYOgAACL0AgD48AOCVvQDAET0AADI8AMD4vADAgL0AYEK9AECjPAAAjzsAANg6AABBPQAAZjwA4NM9AKALvQAADjsAgDS8AACHOwBA8bwA0II9AEAvvQBArr0A0Jq9AKCFvQDQjb0AgNO8AIAUvAAAcDsAEI69AIDDPQDAgjwAgEo9AEDkPAAArr0AUJY9AIABvQBArjwAsIY9AAAoPABABT0AIEw9AKAkvQAAsDsAAP08AAAqOwCAdD0AYD69AADpPADAAD0AAHG9AICxvAAAK70AQDU9AGBOPQDgUb0AgOu8AAAJPAAA/zwAAPo8ALDBvQDA6jwAgFY9AIAbPACAyjwAgEm9AABTPADgdL0AADw8AEBcPQAALDwAAF67AHC+vQCQjL0A4Es9AFCgvQAgqj0AAEs8AADNuwAAKzwAgGC8AAAFvQAAmj0AIKi9AMAkPQCAQ70AgBK8AGB7vQCw4j0AwO68ACBFvQDgGr0A4Eg9AEDqvABAHj0AYG89AKA6vQDApDwAADc8ACAZPQDAtbwAALW8AADaPABAirwAAAi6ABCJvQCAabwAAL49AID8PAAA1zwAAJO8AJCNPQAAMr0AICE9AAAovQAAGL0A4Ea9AAAkvQCAMDwAACA7AAB4uwDArbwAgK48AMCTvADA4LwAoF09AIC+vAAAnTwAAC89AADzPADwyz0AADU9AIBwPADApTwA8My9ANCBPQDAZz0AIFG9AADcOwAgQ70AICy9AACoOgAw8b0AgEu8AAACvAAA1bsAABK8AICNPABAhzwAYG89AMBJvQAA4bwAwLC8AECZPACgCD0AwPg8AIAkPAAAmzsAAL47AACwuwAA+bsAAAAAAEB9vQCAgLwAgAm8AAC4vAAAaDwAAJO8ACDFvQAABrwAICC9AAB/vACA8bwAANS6AIA6vADAzDwAIFE9AADpOwCgTT0AgOo8AIAxvQAAgTwAoAs9AIAlvAAAKL0AAH89AACFPQAAEbwAYJs9AABUvQCgQr0AABi8AECNPACAy7wAAKK7AADcugBwir0AAEi8AKAjvQBA57wAAMo8AABAuwCAfTwAQJQ8AADSPAAAnrwAAH88ACBjPQBAqbwAQLA8AACluwAATDwAwAU9AIANPQBAwj0A4K09AAC5vADA47wAQA49AMCvPQDQqz0AAF28AADSuwCAqbwAIDA9AMDNvAAAMLsAAJ87AIAePAAAXDsAQMq8AIAmPQDgRz0AoC+9AAB9PABAcT0A8IW9AKBqPQDgAT0AwAQ9AHDVPQCg3b0AIF09AACRvAAAhDsAgCY9AAC8uwAgOL0AQIK8AHCTPQAAbbwAQBc9AEARvQAA2rwAAPA7AMCJPAAA3DsAIJS9AIAhPAAAJ7wAUJI9AIANPQAAITwAAE69AAAOOwAAHDwAABC8AMCbPAAAnLsAAP+8AID5vAAA9TsAICE9AGBovQBgvD0AwJg8AABmPQAYEb4AAA28AJCkvQCAZTwAwMc8AECbPQAADLwAIIE9AKBqPQAAGLwAAF67AACVuwAAOjsAQJG9AIDxPAAAK70AQJO8AICvvAAAlL0AgEk8AABAOQBgET0AQB89ACAvvQAARz0AIDO9AACEvADgXr0AgO68AIABPAAAlrwAQEY9AMCFvQBAibwAEIq9AGCvvQBA4jwAICo9AADwOwAAnbsAAGC6AMDnPAAQrD0AoGy9AAA0uwAAb7wAAIQ8AKAxvQCQjb0AAE49AEDVvADgKr0AwPs8AIA0PQBgMT0AAA69AHCEPQAAQDsAAEa7ABC9PQBAiDwAAMM7AEDvvAAA27sAACo8ACAxPQAAWD0AYKE9AAATPQCAdLwAAAI7ACAuvgCAEjwAgEq9AACcvACgDL0AAMg7AOCtvQAAFrwAIIA9AEDEPADgLz0AwIE8AIDqPAAAATwAgKw8AIDSPADAOL0AgL28AMBgPQAADr0AABk8AAAbvADA4LwAwIa8AIBXvQCABD0AQOQ8AMBYPQBgPD0AYF+9AAAKPABA6rwAgBw8AABCuwDAibwAQD+9AIARvABA0bwAALC7AAAGvQBgQ70AQA29ACA1PQDQhj0AYIe9ALDfPQDAhj0AoP49AAAougAARj0AgOK8AFDnvQAAULoAAH08AABkvABAKT0AwH09AGCLPQBAAr0AAJK7AICnPABgCj0AgIC8AICfvAAgOL0AwBS9AADNOwAAVL0AgB88AIA/vAAAxbwAgHG8AEDLvAAA9LwAKBA+AOBWvQCAzbwAgJo8AEAMPQCgFL0AAJ88AAAHPAAAYLwAgM48AIDUvABA2bwAAGI8AKAgvQDgEr0AQCs9AEBdPQBA2jwAAOS7AAD8uwAAbL0AAJQ8AMCLPACAhLwAAP88AACwOgDAYT0=","chunkHash":"ca3371f8546591b1cd1228fed42a0104fc26410b90521f0d578606e80ce5d811"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef parse_args():\n    parser = argparse.ArgumentParser(description='Finetune VGG3D model on nuclei dataset')\n    \n    # Data params\n    parser.add_argument('--data_dir', type=str, default=config.DATA_ROOT, \n                        help='Path to nuclei dataset')\n    parser.add_argument('--class_csv', type=str, default=config.CLASS_CSV_PATH,\n                        help='Path to class CSV file')\n    parser.add_argument('--index_csv', type=str, default=os.path.join(config.ANALYSIS_OUTPUT_DIR, 'nuclei_index.csv'),\n                        help='Path to CSV index file (for efficient data loading)')\n    parser.add_argument('--create_index', action='store_true',\n                        help='Create a new index file even if one exists')\n    parser.add_argument('--output_dir', type=str, default=config.VISUALIZATION_OUTPUT_DIR,\n                        help='Directory to save results and model checkpoints')\n    parser.add_argument('--class_id', type=int, nargs='+', default=None,\n                        help='Filter by class ID(s). If not specified, all classes will be included.')\n    #...\n```","range":{"startLineNumber":66,"startColumn":0,"endLineNumber":81,"endColumn":0},"embedding":"AIBDvQAATz0AgJY9AGglvgAgfr0A4Ce9AOCnvQCAJ7wAgJi9AMDrPACAtzwAAMQ6AAA3vACA5rwAAGg8AOAxPQAAyb0AQNE8AEDHvADgsT0AQHw9AIC5PAAAe7wAYAy9AABVvACgG70A4BM9ACAnPQBA9TwAwHe9ACAsvQCAUbwAAIa9AMB2vQCg470AYDi9AMDnPACArLwAQKE8AICxvACA+DwAAP29AKAjvQCAez0AwI08AOB6vQAAGDwAoD29AAAouwBAorwAAEO8AEDoPAAArbsAsJc9AABwOgCAqTwAACW9AADQugAAkDwAAJy8AADCOwBAyb0AsIM9AIAYPQBA5LwAgCU8AGBmvQBA57wAgAu8AADtOwAAEbwA4Ba9AIBDvAAAvbsAwFQ9AADcOgDAMb0AMIs9AMDGvACAV70AABW8AACbOwBAnzwAAEQ7AICUvACwnb0A4Le9AMCyvADgk70A4F29AIClvAAAzTsAQC+9AGDEPQBgVD0AwAw9AIC6PACAvL0AsKo9AAASOwAA5jwAgF09AADMOwBAQD0AoI09AMDtPAAA0jwAQCg9AECkPACAIj0AwLK8AAAjPACAgjwAEMe9AACAuAAgPL0AoAO9AIDBPABgEL0AoFW9AADnOwCgVj0AMJw9AMDqvAAASD0AAN08AGArPQBA6LwAAKA7AIAWPAAAkDsAAJ+7AOC/PQCANrwAICC9AGBlvQBwlL0AAO08AABQvQBIDD4AgGE8AEBAPQAA9jsAwNU8AAAhvAAgET0AQI+9AMB/PQAAmbwAAG09AECzvAAA4j0AgH88AAClvAAArjwAIEI9AABauwBgEj0AgBI9AIBIvQCAYbwAIE09AAAQvABwir0AAIy8ABCpPQAAdbwAAB+8AAB2vQCAWrwAQDc9AADwvAAAyjsAgC08ACBzPQCAEr0AAJQ6AACsPABgSr0AwJy8ADCOvQAA4rwAQBe9AIChPAAAg70AYDo9AAACvABA+LwAAE68AEC1PACgTD0AwBC9AGBbPQBAhj0AAFg6AADjOwCAeDwA0M69AABBPQDAsT0AwKy8AEAxPQCAC70AIDS9AEAmvQDAOL0AQJ88AADguwAACzwAAJe7AACZOwAAFz0AgKI8AGBVPQDgJb0AgHq8AEAvvQCQmj0AwIs9AADkvAAAxLsAwCe9AACkPACA5DwAICA9AGAevQCgIz0AAGA6AEATPQDAHj0AQMa8AOA6vQBAsrwA4Dw9AIDXPACgib0AwLY8AIDtvACAaDwAgEQ9AADTuwAAIj0AQOy8AIA6vQBA3DwAwJI8AADVuwBQ770AwBM9AIArPQAAArsAIEo9AICAPACw1L0AgNe8AECovABAh70AADI8AEClvQBAHr0AoCY9AEDgvAAAMzwAADi7AACUPAAAKjwAAKu7AAD0ugCAYrwA4HO9AMCIPAAAAT0AQP48AMArvQAARLsAoGE9AECsPACgPj0AIJg9AABbvADgob0AAHk8AFCLPQDAeT0AgFa8AIDmvABgFL0AgPC8AMC+vADgAj0AAGE8ACAJvQDAJD0AgK28AACsOwAAMrsAgNu8AIBcPACgKz0AAHe8ACBcPQBgMD0AABA8AKCIPQAgqL0AgCA8AMD/vAAAozwAoHs9AEDoPABAnLwAAOA6AIBbPQCAbrwAAHK7AABCOwAA7DsAwO08AIBIPQAA4zsAoGm9ACAQvQBA7zwAEKQ9AIAYvABgOD0AAPO7AICyPACAALwAgDI9AEC/PADAt70AwI28AIAzPACADT0AQKg8ACAYvQCgcz0AALm8AICkPABQ2L0AYI29ABC9vQAAJ7wAYB+9ACA7PQBA2rwAMKk9AKBhPQCgNL0AAB48AIBTvACgWL0AwNS8AIAyPQDgGL0AYKm9AADqvADger0AAGg6AIDSvABAljwAADg8AECsvABgvz0AwKy8AADvuwAATrwAANW7AMDoPABgDD0AAJs7AIDZvACAuLwAwKe9AKCZvQAQpz0A8IM9AAALPAAAz7sAAKy6AAARvACAijwAoGa9AIBZvACAKzwAwLM8AACguwDAS70AQPQ8AED3PACgLL0AwJ88AABgPQCADTwAgFi8AGBSPQBgcz0AwLo8AIB2PQAANT0AgBs9AKBSvQAAIDoAAFi6AIAMPQCQhz0AAIc9AMBHPQBgBL0AQLg8AFDLvQAAoD0AAA48AAAauwDwoL0AANI7AOAKvQCgdb0AYBI9AADvOwCAEj0AQIm8AAAGuwBAQb0AgFI9AKB5PQCgML0AAFo7AIAivAAA6DsAAAq8AIDavAAAnLoAAHc8AADkvQDAMj0AgL88ACCjPQAAX7wAYFC9AACPOwAA5zsAoDY9ACB9vQAAvzsAABq7AAAAOwAA/7wA4Fa9AIADvAAAZL0AAEu9AMCPPABwij0AAPu8AKChPQAAAjsAMAs+AABxvAAwhj0AQMY8AACdvQCgJz0AwOG8AAA6PQDgDD0A4JA9AACCPACAkbwAAEk8AAAXvADAo7wAAKE7AADEvACAqb0AQPW8AAAiOwAAtLoAAL+7AIAwPAAAFb0AAKi7AACLPQAASTwAcAk+AACnvAAgBb0AwE09AIC2vAAACb0AAMQ6AAANPACAXLwAgLo8AMCZvAAAKbwAwLC8AKAPvQCAErwA4DU9ALCPPQDgUz0AgI88AAAquwAAP7wAgE28AOABPQCALb0AgFw9AEDOvADwoz0=","chunkHash":"04284ff15251a504cfb7bbb2d24098920d9bd82a3e14d31afa9d809395283805"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef parse_args():\n    #...\n    parser.add_argument('--subsample_ratio', type=float, default=config.DATA_SUBSAMPLE_RATIO,\n                        help='Ratio of data to use (0.0-1.0). Default is set in config.py')\n    parser.add_argument('--sample_percent', type=int, default=100,\n                        help='Percentage of samples to load per class (1-100)')\n    \n    # Model params\n    parser.add_argument('--checkpoint', type=str, default='model/hemibrain_production.checkpoint',\n                        help='Path to the pretrained model checkpoint')\n    parser.add_argument('--target_size', type=int, nargs=3, default=[80, 80, 80],\n                        help='Target size for volumes (depth, height, width)')\n    parser.add_argument('--output_classes', type=int, default=None,\n                        help='Number of output classes. If not specified, will be determined from the dataset')\n    \n    # Training params\n    parser.add_argument('--batch_size', type=int, default=1, help='Batch size for training')\n    #...\n```","range":{"startLineNumber":81,"startColumn":0,"endLineNumber":96,"endColumn":0},"embedding":"AIDEvABgEj0AAGc9ABD/vQDAF70A4H+9AEB2vQBAiTwAYEK9AIBCPACAKrwAgDK9AIAOvQAgVT0AgA+9AIAUPADQk70AwOU8ACAdvQAgfD0AAH89AADpuwAAlDsAoAO9AECwPAAgM70AwNM8AAD6OwDAAT0A8Jm9AIDXvAAA0LwAIJW9AOA4vQCQpb0AgPu8AAAqOwAAhzsAICg9ACAxvQBAwzwAUBC+AABSvACwgz0AAJA7AABwOgAA1LoAADi9AADSuwAAUzwA4Be9AOAtPQBAMr0AkIQ9AOBNPQCAqDwAYAa9AIBcvAAAxjwAQBG9AIBxPABgnb0AoC49AACYuwDA+rwAgBc8AIBkvQDgEr0AQPi8AAC4uwAgPr0AwBO9AIAVvQDAJL0AIAE9AAC0uwDAurwAoNI9AIAGvQBASr0AAD67AIAAPADgJj0A4Aa9AADNuwCgnr0AEKa9AIBWvAAgfb0AoKS9AACkugCAprwAwIi9ABCePQDgSD0AgBS8ACAkPQBwqL0AoAk9AMCFvADgYD0AgHE9AMD3vAAAGjwAoIM9AIBlvABAsjwA4DM9AGAbPQCgMT0AgOG8AICFvABgBj0AwPi8AIBXPABQgr0AAE68AIBQPABwvb0AQN28AMAHvQAA5DsAoBA9AEBxvQCgMT0AgEc9AAAjPQDASr0AALi7AMB6PQCAJLwAAFU8ABCUPQAAPrsAAC+8ACDLvQDgU70AgBM9AKA9vQAQ4j0AgBk8AIAMPQAAhzwA4BY9ACAkvQAgXj0AYNa9AEAsPQAAhL0AgCg9AMCRvABQ5T0AgG48AIDWvAAATjwAwLI8AMCCvACQhj0AAMC6AGAavQCA1bwAQCw9AMC2PAAA4bwAgME8AKAYPQBAurwAAME8ALCAvQBA17wAIAQ9AECxvACATj0AwKu8ADC6PQAAQb0AADo8AABWOwBAML0A4DS9AOB1vQAAnrwAIGi9AGAKPQBAFr0AAMQ7AIA1PADA77wAkIg9AOAyPQBAkT0AgEW9AGBkPQAAiDoAQMc8AIAXvADgYj0AoDy9AAA4PADwkz0AYBy9AGAkPQCAibwAwK+8AEAzvQDwx70AQBU9AKAavQAA5bsAAEa8AIBXPACAGTwAAHI8AICLPABAJr0AgBE8AIA4vQDgTD0AYEA9AAAYvACATLwAcIK9AADxOwBAeT0AYAc9AIDCvADA0DwAAIG7AAASPADAgzwAgCe9AABsvQCgDr0AQCU9ACAhPQCA8bwAwPo8ACAgvQAAEDsAQKK8AAA0uwDQnz0AoDo9AOBJvQAgez0AwOw8AABauwBQnL0AQAw9AIBxPQAAXrwAoBI9AAC8uwCg0r0AwIa8AIALvQBgCr0AUJa9AEClvQCAKbwAwLc8AACEOwAAubsAQLI8AADsugBgrT0AgIE8AABauwAAyzwAwDq9AEAqPQBAxzwAQOk8AGAgvQAAJrwAALc7ABC6PQAAyTwAQDQ9AAA3vAAwnr0AAIM8AMBDPQAgMj0AAIE8AEDovAAAb7wAIAG9AACjuwCADz0AAJA8AACxPAAA0jsAoEO9AED8PAAACjsAwFS9AAC5PACAlTwAwAu9AADTPACAGTwAwC49AMByPQCAk70AQPM8AADeuwCA4TwAYIk9AACAugAAwTsAAEo8AAC7PAAALzwAgLs8AOAZvQCAbjwAwIk8AKAxPQAAwLwAICu9ACAsvQAAgDgAoKg9AGBjPQBADD0AQOa8AMCBPADApTwAgGo8AECNPACgrL0AALa8AAD9OwAgnT0AwPk8AEDFvADASj0AgK08AECOPABoF74AwBW9ALCtvQAA7rsAoDm9AADXPQAADjsAAEo9AACNPQAAEL0AAAg7AEAdvQCwn70AoFO9AADguQAgML0AIAW9AED7vABQrr0AAMg7AMBevQAgFT0AgOY8AABYuwAAyT0A4CC9AADruwBADL0AgBe8AACsOgBgjT0AwI+8AECfvADAoLwAQEq9ADAMvgBQmj0AYKE9AADAOQAAYrwAQK68AACIOwDgXz0AAPC7AMD2vAAAUrsAwLo8AACMuwCgDr0AAEy7AABMuwAgSL0AQC89AEB1PQBgUT0AAHQ7AGCdPQBgiz0AAIU7AGA6PQBAGz0AANO7ALCTvQAA2DsAAKA5AIBSPQCQpT0AIDk9AMCkPQBgML0A0II9ANDbvQDgVz0AgEm9AADHuwCARb0AgKC8AABMvACA7LwAAP88AEDbPAAAVD0AIFa9AEBsPQBA5LwA0M89ACAHPQDAt7wAwJA8AADqOwAABbwAQNq8AACbOwCAzjwAQKQ8APDlvQAAHLsAQLg8AGAQPQAA2DoAQDq9AAArvAAAljsAgIk8AADMvAAAiLwAgC68AADduwAADDsAoDe9AIAqvADQyb0AID69AMD6PACwqT0AIE29ADCmPQBAEr0A0Mk9AIDovACgWT0AABo9AIC2vQDAAj0AgH+8AAA6PACAijwAwD49AIBKvAAAnDwAAI68AAAWvADAyzwAgEy8AAD2vABwyb0AIFO9AAAauwAAQLkAQMo8AICAPABAQr0AQD+9AEBTPQCASLwA6As+AIBpvADAAr0AwLI8AACUOgBgNb0AAII8AIA3vACAU7wAgKO8AAAzvADgBj0AgEg8AADouwDA67wA4IM9AABwPACgCT0AANY8AABOPACAP7wAABe8AIBBvACA0LwAAFA9AGCGvQCAgjw=","chunkHash":"8e93f2777643bbdf739bd44adeb5d30c8ee81f045d6fa883242f7436e420f5ef"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef parse_args():\n    #...\n    parser.add_argument('--epochs', type=int, default=20, help='Number of epochs to train')\n    parser.add_argument('--lr', type=float, default=0.0001, help='Learning rate')\n    parser.add_argument('--weight_decay', type=float, default=0.001, help='Weight decay (L2 regularization) to reduce overfitting')\n    parser.add_argument('--momentum', type=float, default=0.9, help='Momentum for SGD')\n    parser.add_argument('--optimizer', type=str, choices=['sgd', 'adam'], default='adam',\n                        help='Optimizer to use for training')\n    parser.add_argument('--early_stopping', type=int, default=10,\n                        help='Number of epochs to wait for improvement before stopping')\n    parser.add_argument('--freeze_features', action='store_true', default=True,\n                        help='Freeze feature extractor layers and only train classifier (default: True)')\n    parser.add_argument('--freeze_classifier_layers', type=int, default=0,\n                        #...\n```","range":{"startLineNumber":96,"startColumn":0,"endLineNumber":107,"endColumn":0},"embedding":"AAC8uwBAuDwA4CI9ALgBvgCANL0AoGG9AFCRvQAgHz0AwBq9ACBzPQCAsLwAwA+9AABGvQAAIrsAAEg6AED4PADARL0AQCU9AKAIvQDAmj0AwHU9AMClPACAxzwAAOG7AID+vADAT70AkLM9ACBnPQBA3TwAUIS9AICivAAAtrwAIGK9AIDevACgYL0A8Ke9AACbuwAAMbwAgDC8AKAEvQDAhzwAaBW+AIBBvQBgVT0AACC8AMANvQCALDwAAPi7AIATPADAxTwAAMS6AAA5PQCAubwAcJ89AACsugDAkjwAoDi9AIDovAAAGz0AANu8AACgPABgkr0AwNU8AIAqPADAurwAwDg9AKCrvQDgAj0AAKy8AMC+PABgML0AAGW9AAADPAAgH70AwBA9AEASPQCgOb0AgLQ9AMD4vADgd70AgCa8AAA0vAAAiLoAALy6AAC3vAAQ270AAEm9AAAVPACQib0AIC29AADSvABAirwAgPy8AEDFPQDAlz0A4EY9AEAKPQAwzb0AwOY8AADZvADAUD0A4A09AADJvAAggj0AgPo8AADVOwBAnjwAgEo9AGBPPQCAZTwAQLe9AEAOPQAA9LoAwFG9AACAugDAY70AgDK9AADNOwAAmL0AgOK8AICcPAAA5jsAoAY9AICpvACgYj0AACg9AICoPADASb0AAHi6AOAiPQAAEr0AAA49APDBPQCAWbwAQIS8AJCOvQDA6LwAwOs8AKB4vQDg9j0AAAg8AAAKPAAA+DoAgO08AIDgvADghj0AgJC9AOB6PQCQtr0A4A89AIBXvABwpT0AAMs8AMDKvADA3TwAAHC8AIBSvADANj0AYGc9AFCMvQDgdr0AQB09AMAdPQBAhLwA4FY9AAABPQCAcbwAAPA6AMB8vQCgK70AYIg9AHCIvQAAFrsAALU7AEBWPQBA3bwAQPO8AEBEvQAgT70AgLe8AKAJvQDQgr0AIGK9AGAHPQBQlL0AQEk9AADjPAAAKr0AgIw9AMBAPQDgiz0AAGq7AGAoPQAA4DkAAPM8AIDIvACgfz0AgI+9AADhPABgcT0AgMS8ADCbPQAAu7sAoC+9AIC2vABQm70AQJ48AACqvABAhTwAALA7AADdOwAACjsAAOg7AABgOwAAfr0AgIE8AMDYvABgDT0AQEU9AADoOgAAg7wAUKi9AMAFPQDgOD0AwIc8AIB6vQCA6jwAQFO9AOA4PQBgND0AgOm8AIAFvQCgLL0AwN88AGCdPQBAz7wAAC48AKAOvQAAm7wAwNg8AADAOQBwjj0AADC6ACCSvQCAID0AQPA8AIAnvACAyb0AgMM8ACAxPQDAw7wAwAs9AMCAvACQzr0AACW8AMCXvAAAkzsAwBm9AKBCvQBAB70AADM9AABUuwAAwLsAwLo8AEDLPADgjD0A4DW9AABUuwAA1TsAAE69AACluwBwiD0AgH28AABAugDAHr0AwKM8AKCaPQBQiD0AgMc8AOAfPQDgm70AQIs8AHDEPQAgFT0AAL87AAAQugDgI70AAJ+7AIA2PAAgCj0AAAs8AGABvQDwgT0AQJY8AACAuwCAUrwAAMC8AIAoPACAyDwAEJa9AMDkPAAgJD0AAMM7ACAkPQAg2L0AwBw9AAD3uwCgDj0A4JM9AIBxPADAAr0AACI7AIBFPQCADDwAgDU9AIDCvACAHLwAQKk8AGBhPQAAUb0AoFy9AIBvvQAA0LkAcMs9AEAuPQDAz7wAAJS6AIBfPADAnjwAwLo8AADAvABAlb0A8I69AIBvPAAAmjsAYBU9AGB8vQBAMz0AYB49AABkPAAYCr4AwEa9AJDHvQCAZ7wAgAO8ACCjPQCA87wAAN48AAC+PQBAyDwAgEq8AAA8OwBAJb0AQAG9AABWuwDAZ70AIAe9AABHPAAAiL0AgIg8AABNvADgPz0AAMC6AMAKvQBgLD0AAKu7AKAGPQDAurwAgKi8AADWPADA2jwAwDm9AGCWvQCgCb0AwMK8ABCGvQCASz0AIII9AAAdPABgAD0AQPa8AAAJPACAAT0AwKy8AECivACAMDwAAMA4AIBMvAAA0bwAAIC7AADqPABgHr0AgKA8AICPPABgdT0AAPA5AIBjPQDggz0AQK48AGApPQCAXjwAgIc8AGB0vQDgDb0AACg8AGAYPQAgmD0AsJU9AGCSPQAA1LsAkIY9APCqvQBAhT0AIAq9AACcuwDwt70AAKW7AEBEvQDABr0AAFk9AAC0PAAAZT0AgBK9AAAxPQCAtrwAAKw9AKB7PQDAdL0AAL07AABiPACgCL0A4Cm9AADbOwAAGLwAACy8AGB5vQAAQzwAAAY8AEDLPAAAmzwA4A+9AIBGPAAAvLsAAIY9AAA0vQDAw7wAQAm9AIBMPAAAGbwAwE+9AACmOwCgnb0AICK9AABgugCgCD0AAEi9AEDVPQAAersA6Ac+AABTPACAJj0AgIe8APD4vQCABTwAAOa7AIAlPAAADj0AcKI9AADtuwDA2TwAAJE7AADVuwAAobwAAJW7APCKvQCASr0AgD69AAAkPAAA0TwAoBa9AKAtPQAAQDwAgD28AACAOgAAIbwAqAs+AAC7vADA4rwAgEg8AACOOwBAIr0AwJU8AKB3vQCAbbwAAKw6AADPvAAAIL0AgC28AAAEvQAAEDsAYI89AAA8uwDAvzwAAHC6AACAOQDAy7wAANi7AADIvACAO7wAwJ68AGB3vQBAwjw=","chunkHash":"9a8851c0424846b845c09b2ed66fb54d5f2f6e91da06a20f8b5868e973c13e25"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef parse_args():\n    #...\n                        help='Number of classifier layers to freeze (0-5, 0 means train all classifier layers)')\n    parser.add_argument('--reduce_classifier', action='store_true', default=False,\n                        help='Reduce the size of classifier layers to decrease trainable parameters')\n    parser.add_argument('--classifier_size', type=int, default=512,\n                        help='Size of the reduced classifier layer (only used if --reduce_classifier is set)')\n    parser.add_argument('--train_split', type=float, default=0.8,\n                        help='Fraction of data to use for training (vs validation)')\n    \n    # New training enhancements\n    parser.add_argument('--scheduler', type=str, choices=['reduce_on_plateau', 'cosine', 'none'], default='cosine',\n                        help='Learning rate scheduler to use')\n    parser.add_argument('--mixed_precision', action='store_true', \n                        help='Use mixed precision training (faster but may affect accuracy)')\n    parser.add_argument('--progressive_unfreezing', action='store_true',\n                        help='Gradually unfreeze layers during training for better transfer learning')\n    #...\n```","range":{"startLineNumber":107,"startColumn":0,"endLineNumber":122,"endColumn":0},"embedding":"AEBBvQCABz0AIAA9AEDmvQAACr0AwFW9AMDWvACAlTwAICu9AKBGPQAAlrwAwMq8AIBbvQBABj0AgD28AABMPAAA/7wAMLI9AGBBvQBARz0AgJs8AACtvAAANTwAQB29AACmuwCA7LwA0J89AMC1PABgJj0AgCq8AABDvADAH70AgH69AGAPvQAgmr0AIKW9AIAYvAAAGrwAgAA8AIDuvACAnTwACAK+AEB8vQCAIz0AgH48AABbvAAAgDsAAEi6AABtvADA/TwAwPO8ACAFPQCgjL0AcIw9AIAavAAAJzwAIFq9AIDavADAUz0AQIW8AIB/PACgVb0AAD09AAASPQCAEbwAQDk9AACXvQBADz0AgAK8AECTPAAgV70AIHS9AIA/PAAAnbwAYAQ9AMAfPQCA77wAYMU9AMCbvABAH70AAHo7AACvOwDgKT0AAP08AAAvvABAAb4AgPu8AIBpPADgk70AIKW9AIAOvACAkbwAYIG9AADXPQAAMT0AAAu8AOBePQDAPr0AAP47ANCmvQAgNz0AwNc8AMDTvABAjz0AAD49AMAUvQAAlLoAIEo9AAABPQAA/zwAYEa9AIBgPAAAj7sAABS9AADmOwBAlrwAAL+8AAD1PADAzr0AAE+8AAAkuwCgNL0AgG09AOAcvQDAjDwAgLk8AAC2PABgW70AgHG8AABXPACAfL0AgI88AFCyPQAAWLoAACa8AJCevQAAHL0AoC09APCGvQBg/T0AAIO7AIARPACAozwAICs9AAAevQBAtzwAoHS9ANCFPQAAnL0AgNg8AABouwCgrT0AAE67AEC0vAAAKDwAgLU8AACAOABgaT0A0J09AFCWvQCAEL0AQMc8AMCSPADAk7wAAGu8AADNPACAXTwAgIA8ANCnvQBgE70AwFI9AMA4vQAAvTsAAEO8AEDYPADArrwAQIi8AMCRvABAVb0AQGK9AOCRvQBAtrwA4D69AICPvACwvr0AACM9AIB7PADgPr0AgEs9AOBAPQBAVz0AgO68AMBmPQCAizwAgPg8AAB4uwDAgj0AwJS9AAAvvABgQT0AwB69AAD+PAAAnzsAQCK9AICDvACg7L0AwLg8AACIOgAA0TsAwPU8AIA9vAAAwrsAQAE9AAAJvAAAJL0AALI7ACAqvQAAWTwA8I49AACHOwAALrwA0Ka9AAAEPAAAlTwAAD68AEBdvQAAGj0AQDy9AMCfPADgOT0AAKC7AOAXvQDAurwAAKs8AMCFPQBA6rwAgG+8AKALvQAALjwAAPE7AIDivABwsz0AAFm8AKAgvQBgDz0AwO88AIAdvACgAL4AQDk9AEBjPQCAnLwAYEc9AKAgvQBwvL0AgLK8AAAavQAANDsAoBe9AIAhvQCAeLwAAAM9AICqvACAaLwAAO68AMCMPADgbz0AAJy6AADjOwAAnzsAoFG9AABcPQCANz0AwP28AIB9PAAA2LwAIAE9ABDRPQDwoz0AQLE8AMDDPADQ4r0AgEQ8APCmPQAgWD0AwKw8AACAuACAD70AAGq8AACtPACgAj0AAKM8AACkPAAAID0AwLK8AICAvAAADDwA4Du9AACfPAAAEDwAAOm8AMCsPADAvTwAAGg7AGAyPQBAeb0AoAU9AABcuwAAWDoA4Ak9AAByvAAgbr0AAFI8AGBEPQDAgTwAQC89AMAsvQDgTr0AQMI8AAAnPQCA2bwAQCO9AOA4vQCAe7wAoM89AIDhPADgcT0AAFW8AAAGPQBgPD0AAEI7AACMuwDAbb0A8Kq9AACcugAAYTwAAPM8ACA+vQCAkjwAAGg7AEDwPABQB74AAJq7AODzvQCA5DwAgEa8AEBTPQCAabwAgEI9AGB2PQDgHD0AAAS7AMCQPABAN70AADq9AABEOwAA1rsAAN87AID6PABw2r0AgEY8AAAUPAAAvzwAYCg9AACvPACgUz0AADQ7AIDfPABAl7wAAN27AIAxPQBA2jwAoBu9AIDgvACARL0AQNW8AEC9vQDgLj0AQMA9AIDVPAAA9LoAAF28AADfOwDgLT0AQBq9AIDNvAAAJLsAQIM8AMDovACwmr0AQMg8AID1PAAADjsAIBI9AMAWPQDgMz0AAMy6AADKPABQtT0AAPY8AOAPPQDAnTwAwMg8AGDAvQBABb0AAK67AMBIPQBgUj0AwD09ACCCPQCAlrwAIF89AJDcvQCghD0AAES8AAD8OgCAgL0AwOG8AGADvQDALb0A4BI9AMCNPADQgT0AgAe9AADcOgCAFzwA0J89AAA0PQBAj7wAAOg7AECrPAAAvLoAAH28AEDNPABAzLwAwPY8AMB0vQAA97sAYFo9AEBpPQAAPjwAgBG9AIBAPAAA+bsAAOY8AAA9vQAAALsAgHS9AAAXvABAiDwAwPO8AACavACgO70AIFa9AGAqPQAAPj0AAFm9AAgVPgAAxbwAYAU+AAAyOwDwjj0AAAA9AAD0vQCAgbwAwEm9AOA/PQBAGD0AAGU9AACCOwAAo7sAAMA6AEA3vQAAgzsAAL+8AKA4vQAwl70AgGu8AICrvAAAYDwA4Bu9AEB1PQCAvrwAAIC7AIBYPAAAmDoAaBA+AMC5vADgZ70AgJK8AAB8vAAAADsAwJI8AEAZvQDAhbwAAMM7AGA6vQDABr0AAEg7AAAevQAgHr0AYKo9AAD4PAAgYT0AALa7AICwPAAA8LsAgL28AAD+uwBAgLwAAJg9AEB8vQBAlzw=","chunkHash":"99e9f88c83f3e12391a5a2deb4d088d260edffd7213b6a10ef70eb1a333b6357"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef parse_args():\n    #...\n    parser.add_argument('--validation_freq', type=int, default=1,\n                        help='Validate every N epochs (default: end of each epoch)')\n    parser.add_argument('--save_best_metrics', type=str, nargs='+', default=['loss', 'accuracy'],\n                        choices=['loss', 'accuracy', 'f1'], help='Metrics to use for saving best models')\n    parser.add_argument('--use_augmentation', action='store_true',\n                        help='Use data augmentation during training')\n    \n    # Debugging and monitoring\n    parser.add_argument('--memory_monitor', action='store_true',\n                        help='Enable memory monitoring during training')\n    parser.add_argument('--monitor_interval', type=float, default=10.0,\n                        help='Interval in seconds between memory monitoring reports')\n    parser.add_argument('--cuda_launch_blocking', action='store_true',\n                        help='Set CUDA_LAUNCH_BLOCKING=1 for better error reporting')\n    parser.add_argument('--force_cpu_validation', action='store_true',\n                        help='Force validation to be run on CPU to avoid CUDA errors')\n    \n    # Training process\n    #...\n```","range":{"startLineNumber":122,"startColumn":0,"endLineNumber":140,"endColumn":0},"embedding":"AEDovAAgWT0AIKY9ADgLvgAAfrwAwP+8AIAavQAAezwAwJa8AAA1PQAADDwAgBS9AGAovQDAkTwAAIc7AIDDPABwpb0AoCQ9AAAvvQAgFD0AgBw9AEC7PADAJj0AAJ+8AABDPACApL0AoDU9AOA6PQCAEj0AYIC9AMCvvADAmbwAsL69AEAcvQAwwr0AYFy9AACgPADA8bwAYCs9AAAsuwDArDwA0O+9ACACvQDwqT0AAKI7AACLvAAACrsAALq7AIDNvAAAgjsAwNS8AMClPACABL0AQH49AADluwAABTwAgC68AKATvQCAdzwAQEO9AADivACgM70AoB09AIAuPACAErwAgOA8AKAIvQAAwDoAAOg7AADXOwCAM70AgFG9AIArPQCAP7wAgB89AIDivACAKrwAMJE9AACkvACALr0AgFa8AIA5vADA5DwAwIA8AADeuwCAUL0AILm9AIC7vADAO70AsIe9AIAcvACAgTwAQLS8AAC3PQBgrj0AQJk8AMBGPQCQm70AwIY9AIBCvQAAyTwAgLQ8ACAYvQDwkD0AgC09AIDgPADAujwAoFs9AGBlPQCAXDwAwDy9AADcOgAAArwAkJW9AADvuwBgcL0AAEC8AAAYugCAEL0AgCu9AABoPAAAejwAoGE9AMBrvQBA9zwAgCA9AMDjPADAfb0AIBG9AADiuwDArbwAwIc8APDUPQAAibsAAOQ6AADevQCAQr0AAHo7AMBUvQB4DT4AwPW8AAArPQAACbwAQKY8AAC1uwAACLsA8Jy9AFCCPQCgSr0AYLs9AGAAvQDQ2j0AgFA8AECrPABAgjwAgEU8AOAAvQCQjj0AwBk9AFCrvQCwhb0AYAg9AKAePQCA/rwAgI08AAC9PAAAJDsAAPU7AIBSvQBAD70AIL09AFCFvQCAY7wAADC7ALDSPQBASr0AgK28AAAqvABA9bwAAMW8AKCevQAAQbwAAOS8AAAtPQAQn70A4CE9AECLPACgHb0AAB49AMCNPACgNT0AQMm8AKBYPQBgKj0A4Bw9AIBdvQBAKD0AIJy9AIBCPQDAMj0AYGG9AGALPQAAbjsAYG69AAC+vAAQ470AAJI7AEBBvQAA7bsAANw6AACROwBAFj0AoHY9AICfPAAAsLwAANS7AEArvQDgLj0AwEc9AMC+vAAAPLsAQGe9ACAwPQCA9jwAIF49AMCAvABAOD0AgBK8AMBxPQCAZz0AYBu9AIAIvQDAcb0AwJ08APCWPQCgJr0AgBg8AEDAPAAAITwAgM48AACAOgAQjT0AYEe9AICBvQAA0jwAwK08AOAGvQAAZ70AgB49AKCRPQDAvLwAgMQ8AOAtvQCAqL0AALA8AGAkvQAAgTwAQCG9AKCivQDA5LwAgEA8AMCNPADgBb0AANE7AMDXPAAgXT0AgOm8AIBuvQCAOzwAwKy9AICmPADAvjwAAM07AMAGPQAAaLoAADw8AMBzPQCggz0AwBY9AECWvADAQ70AgB08AKBjPQDgJT0AgEA8AAB0uwDA8zwAgKm8AMABPQBwhj0AAEY7AMD3vADAkDwAQIK8AACRPAAAvjwA4Dm9AEAEPQCA8TwAgGm8AABPvACAKz0AICu9ACA0PQAw070AAAM9AECEvADAbT0AIAg9AIByPAAA9rsAANg7AIBgPACAAj0AgKo8AACWuwAAzbsAwMY8ACCYPQAgS70AYC+9AIAXvQCAtrwA4LI9AAAdPAAADj0AAKk8AKAJPQDAzLwAYCI9AIB3vACgLb0AABi8AEAXPQCAuzwAID49AJCOvQBgYz0AgIk8AMCpPAAw3b0AACi9AED0vQAAqzsAAHw8ACBpPQDAGr0A4JU9AEBdPQAA/DsAwJS8AAB4vABAAr0AAD29AAB0uwBgVb0AgEG9AGAFPQAwvr0A4Bu9AIDjvAAA9zwAwAQ9AADgugDAgT0AgEu8AACjOwCgeL0AQG69AED4PAAAVzwAwLi8ACAmvQAApjsAoIm9AOA3vQBwoz0AQIw9AIDKPAAACr0AYD09AADdOwDA/jwAAPI7AIBPvABAizwAACg8AMANvQBA77wAIB09AACFOwCgEr0AQAw9AMC+PACgPD0AAIE7AOA8PQAAXz0AQNI8AKAkPQBAvjwAAIo8AGDPvQAAsTsAAAY7AABUPQAAFz0AwIY9AOA0PQAAODsAUIc9ACD3vQDAyDwAQDm9AAAyOwCAKr0AgH68AMCTPACgE70AYIM9AEAGvQCgZD0AgIK8AADTOwBgAL0AQI49AJDIPQBAnr0AAAc9AACcOgBAFr0AAPa8AACdvACAAzwAAAc9AIDLvQAAbLsAADC6AADEPAAAeDoAADW8AACQOwAAC7wAYH09ALC5vQDA1zwAIFq9AADsOgAAtTwAAAO8AACHuwBwn70AQPK8AECPvABgED0AgD29AEgSPgCAPzwAKAo+AMAZPQDgBD0AgA28ANDUvQAAdjsAACi6AIB/PADgRj0AQLE9AAAwOgAAdLsAAEc8AAAIvAAArDoAQJA8AACPvACA0b0AAFe8AAA4ugCARjwAgEI8AEDuPAAAXrwAQMu8AEBOPQAAo7sAsAM+AABSvAAAy7sAgNy8AIAhPQAAKLoAADg8AAAtvACAYLwAwOm8AADwvAAAxrwAoCw9AMBivQCAX7wA4CM9AEDdPACAfTwAgGc8AAC1OwAARzwAgBE8AABKPADA/rwAACM8AGAgvQDAyjw=","chunkHash":"66cf0ae0623736f1e8717117d9e4430a53863d17415754e433eb6abaf88c8007"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef parse_args():\n    #...\n    parser.add_argument('--seed', type=int, default=42, help='Random seed')\n    parser.add_argument('--num_workers', type=int, default=0, \n                        help='Number of workers for data loading (0 for main process only)')\n    parser.add_argument('--pin_memory', action='store_true',\n                        help='Use pinned memory for data loading (may cause CUDA errors)')\n    parser.add_argument('--device', type=str, default='cuda' if torch.cuda.is_available() else 'cpu',\n                        help='Device to train on (cuda/cpu)')\n    parser.add_argument('--force_cpu', action='store_true', \n                        help='Force CPU usage even if CUDA is available')\n    parser.add_argument('--batch_limit', type=int, default=None,\n                        help='Limit the number of batches processed per epoch (for debugging)')\n    parser.add_argument('--margin', type=int, default=10,\n                        help='Number of pixels to discard from the edge of each sample to reduce overfitting (0-20)')\n    \n    return parser.parse_args()\n#...\n```","range":{"startLineNumber":140,"startColumn":0,"endLineNumber":154,"endColumn":30},"embedding":"AOAovQDA07wAgFw9AKDpvQBA3bwAoIS9AKAvvQAAALwAYEG9AIB3PAAAvTsAwNg8AGAVvQAAFrwAgDC8AIAJPADAm70AgFq8ACAAvQCAezwAYFw9AIBmPQAAgTwAAC68AECvvABACb0AQK09AID6PADgLj0AAKa9AMBcvQDAHr0AgH69AJCvvQDQqb0AYC29AMDuPAAAuDoAAGQ8AMCovAAAgLsAcPK9AKAfvQAglD0AAHi8AEArvQCAm7wAAJG7AADtuwAApbsAgCC8ACAmPQBgDb0AUJM9AIDlPACApzwAAMy7AAAXPAAARz0AoAW9AAC1PABgcr0AAIk8AIAvPADABr0AAEQ7AAA6vACAozwAAPA7AACJOwCgG70AIHW9AAAwuwBAML0AQAQ9AACcvABAIr0A4Fc9ADCYvQCAcbwAAN48AIDzvABgSD0AgKI8AMAxvQDQ4L0AIH+9APCsvQBgPb0AgOe8AEAFvQCA07wAgAG8APDDPQCAKT0AoDI9AIBPPQAQqr0AYB89AACouwCAMz0AQPo8AECCvACADj0AAII9AIDKPAAAu7wAgHA8AAD9OwDQrT0AgIa9AICKvACA+bwAAE28AOBfPQDgIL0AgB+8AGCNPQCgh70AoBq9AGA8vQAApLsAgEY9AMC5vAAAkTwAoC89AEB3PQDglb0AwKw8AOA7PQAABrwAAJs8ADDLPQCAYDwAwMI8AEDtvQDAWr0A4GQ9AMDtvAAwkz0AAGa8AAATPQAAMLoAALo8AABWvAAAzjwAwJq9AMA3PQBAEb0AID49AEDlvADw0T0AADg6AEDNvAAgSD0AABq8AICFvADQiD0AwNI8AKB3vQDAu7wAwJk8AEC0PACAN70AACk8ABCbPQCAerwAAII7ACBPvQDAnLwAMNo9AAACvQCAVTwAgEa8AECiPQDAYb0AwK68AADJuwDgmb0AwPS8AGDsvQAA6rsA4Dq9AIA7PAAgTL0AALU8AIC0PACAsrwAAFK8AAB4vAAgYj0AAAW8AOAZPQAAILkAQGo9AGBDvQDwjD0AkJa9AMAwPQCggD0AABC8AJC8PQAAYLsAAES7AABuvADgBL4AgIa8AMA2vQDAqTwAAAE8AABCPABAEz0AQP08AED3vABAiLwAAP27AIAyPACQlD0AoE89AACbOwCAPLwAQPG8AAB4OwAgVT0AwPk8AID6vACAfTwAQPK8AABBPQDwqj0AAL29AMDxvADAgLwAAPq7AMBxPQAASrwAAIu7AMA9vQAAubwA4A89AMD3vACgTD0AwPA8ANCfvQAAYzwAgPM8AADAuQCAuL0AQLA8AIDwPAAACb0AAMi8AMCcvAAQhL0AgAW9AOBzvQAALbwAgNG8AAD+uwAgeb0AIHA9AAD4ugAgHb0AAPk7AMD5PABAQj0AwDO9AADhOwCAijwAAF+9AEAyPQAA3TwAgEw8AECWPAAA4DoAQPY8AKCPPQBQlz0AwFU9AACYuwBAjb0AgDo8AMDrPACA3jwAgA88ACAKvQCAmTwAoBa9AKAnPQDADD0AgK+8AMAavQCA1DwAQKs8AIAOPAAA+zsAQMK8AABkvAAAwzsAwMS8AAAQPAAAALwAgKU8AMA0PQAQmr0AAP68ALCQvQAAwzsAAEg8AACFOwCAdbwAgOY8AACLPABgBD0A4Aw9AAA0PAAAezwAAJg6ACB8PQAgvb0AgEO8AAByvQDAlbwAIMU9AIDYPABA7jwAIEw9AECMPABAtLwAADi7AABWuwDgA70A4DO9AMCLPAAA07sAQDo9AIBhvQAArTsAgFg9AAAXvQBg3b0AgCm8AAA6vQAATLwAgDS8ADCcPQCAYDwAUIA9AADHPQAA2zsAAHA8AMChvADAPL0A4Lu9AAB1vABwlr0AoBO9AAC6vACQyr0AAJG8AIBrvABgLD0AgCU8ACAVvQCQlz0AQIU8AIAevAAA7jsAAFs8AECYPADAqTwAgBy8AHCHvQAAhbwAIGa9AGB6vQBgnT0AoLQ9AAA4OgCATDwAAII7AEC/vACAAjwAAAy9AABbvAAAIzwA4Gg9AIAGPADApr0AAEO8AMCAPACAR70AICQ9AMABPQBA8TwAALQ8AAC0PACgBT0AANM8AADvPABAsTwAAIw6AMDjvACA0bwAQJo8AEBRPQDgYj0A0JM9AHCVPQAAh7sAQB09ANC2vQAAND0AwFC9AMAoPQBwC74AALO7AMCYvABQsL0A4LM9AACgugCgUT0AgKO8AADZOwAALrwAsKI9AECFPAAQhb0A4AY9AICuvAAAvLsAwEu9AAAHPACAVzwAgP88ADDAvQDAEr0AAE08AIBpPQAA5rsA8IS9AGAhPQAA2bsAAPg6ANCAvQBAvzwAAFA7AABQOwAAijwAMJq9AAAkuwBgWr0AAJo8AIAsPAAgVT0AwEm9ANDfPQAAT7wA4NU9AIDXPADgOD0AAIS7AADgvQDA4DwAgBw8AAAYPQDAjTwAwL09AAB2uwBAKz0AgIG8AIDUPABAhjwAAHo7AIBsvQAgxr0AgH28AIC0PADAyTwAAFm8AIAxPAAAgLoAgDq8AGA9PQCADzwA6BM+AAAbPQAAWzwAIB09AIAxvADgcr0AAMY7AABIOgBAirwAoFs9AMDVPAAgMr0AAAg8AMD9vAAAs7sAoFY9AMD/PAAA7zsAAM27AACUuwBAhrwAAK28AECDPABgHb0AAGg8AECmvADAej0=","chunkHash":"b5e8b3e2359653a294338d3f9173e1d9277ca529f8443754d2a76a2b2b1d4e8a"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    \"\"\"\n    Train the model with the given parameters\n    \n    Args:\n        model: The model to train\n        train_loader: DataLoader for training data\n        val_loader: DataLoader for validation data\n        criterion: Loss function\n        optimizer: Optimizer\n        args: Command line arguments\n        \n    Returns:\n        Trained model and training history\n    \"\"\"\n    print(f\"Setting up training environment...\")\n    device = torch.device(args.device)\n    model = model.to(device)\n    \n    # Initialize learning rate scheduler\n    if args.scheduler == 'reduce_on_plateau':\n        scheduler = ReduceLROnPlateau(optimizer, mode='min', factor=0.5, patience=5, verbose=True)\n        print(f\"Using ReduceLROnPlateau scheduler with patience=5, factor=0.5\")\n    elif args.scheduler == 'cosine':\n        scheduler = CosineAnnealingLR(optimizer, T_max=args.epochs, eta_min=1e-6)\n        #...\n```","range":{"startLineNumber":157,"startColumn":0,"endLineNumber":181,"endColumn":0},"embedding":"AACBOwDA/jwAgCI8AMDqvQDAo7wA4AK9AIBFvQCABTwAAMC8ADCGPQDAXb0AAEU8ADCtvQCA67wAgBi8AIAYvABgcb0A0LI9AAAEvACAUz0AICk9AADUuwAAHDwAQL48AAC/PAAAkTsAwGw9AMAGPQAAaT0A0JG9AID2vAAAeLwAAJ+9AHC4vQAwgb0AAJS6AKAWPQAAOD0AgHG8AAAuuwAgFD0AkAu+AMBMvQAQFj4A4CA9ACA9vQBghD0AQEo9AGCpvQAAALkAQNm8AIANPQAArLwAAIw7AIA5PQDAwDwAIBq9AIDevAAASDoAAAy7AADgugAAg70AgKA8AEBOPQBA2DwAQBO9AAAhvQAAUzwAALu8AMALvQCAuLwAAIq9AGBaPQCAYzwAYGY9AAAtvADA4DwAAIo9AECNvAAAgzsAgKE8AOAFvQCAKT0AwKE8AHCRvQBw2b0AQGe9AAARvQDAwzwAwPy9AEDQPADAWr0AQNW8AIDAPQBQtz0AwKg8AACKPAAgTb0AwIs8AAA6uwCAEz0AYBk9AOAKPQCAZDwAAMM8AGAoPQAAjTsAMIY9AMCQvADgeD0AgA69ABCCPQAAC70AQCK9AFCQvQBQh70AgLm8AAB2PACgf70AIGa9AACAvAAAFjwAAN08AOCEvQBgNj0AQLU8AICjPAAwp70A4HO9AACuvAAAlDwAAMk7AMBwPQBgRL0AgAi9ANCgvQAAYr0AgDa8AAB5vQBwzD0AAFE8AOCUPQDA8bwAwJG8AIAVvADAwDwAAB28AECQPADgCb0AQMY8AABEuwBQ3j0AgCE9AADrOwAAALsAgHK8AIAkvQDgfz0A8Kw9ANCGvQAgJr0A4FI9AAApvQCAcjwAAL67ACBaPQDgjb0AwNc8AADevAAg1r0AQK49AECjPACAV7wAwPW8ACAcPQAA0LsAAPA5ACCKvQAAQb0AoDu9AKB4vQAABj0AALy8AAAWvACAbr0A8I89AIA+PQBgML0AAHm8AED4PADAq7wAIHq9AIBrPQBgA70AgNM8AMCZPADAgTwAQLK8AOAYPQCgYj0AwNy8AAC+PACA3jwA4K+9AECBvADQgL0AAHe8AEDTPAAAwDgAAGq7AEDJvACAjjwAADo7AAAaPACAKr0AACA5AACmvAAAU7wAQKA8AACjOwAAGTwAwAG9AACevAAABD0AALQ7ACAEvQCgQT0AACS8ACAtPQBAyTwAgHc8AIBLvQDAqrwAgDY8AOCIPQAA+LwAAK+7AAA1vABA1TwAgB48AACJPAAgrz0AQA29AGAtvQCgpT0AAOg8AIDQPAAQrL0AACm9AOB+PQAA2DsAgOW8AEBmvQAA7rsAAH88AAD7PADAyrwAADe9AHCVvQBwlr0AgDE8AABVvACAaTwAQOM8AEDvvADAEz0AAMa8AMBrvQCAIrwAIJO9AGA2PQBAmLwAAHu8AECLvAAApDoAgAy9AEAqPQAAMzwAYBA9AHCgvQBA/LwAwLA8AFC2PQBALz0AgCm9AIBVvAAAvjsAgD48AAAVPACARTwAwLS8ADCMvQAgBb0AAMi7AADAOAAAzD0AoDe9AAD1OwBAzzwAwCq9AADbuwBQoT0AAEA5ACA/PQAAF70AAD47AGA7vQBA8LwAQC89AGA4vQBAz7wAoJo9AMDaPADA0rwAoDM9AMDtvAAAvLoA4GY9AEAgPQAAgLgAwIm9AIChvADAqbwAULE9AAD7uwDgfz0AgDo8AAAOPAAgNL0AgE88AIBMPABgjr0AsJC9AAB4uwCAMz0AMPo9AHC4vQAAXT0AAHY9AACPPACA1b0AgCS9AIDbvQAAWjwAQIW8AIAsPQAgJb0AAKC5AMASPQAAqjsAABg8AABPvQBA2zwA4H+9AAAlvQCALr0AoHG9AABNvACAhL0AYBY9AKBAPQCgPT0AgD68AMA9vQAAJbwAAHo7AIDDPACAVjwAgIS9AACQOgBArbwAAMU7AHCLvQAAq7sAYNC9AOB1vQAAqTwAgK08AAD7PACA5zwAANA7AECzvABwsT0AAL27AABmuwCAJrwAgG08AIBFvQCAELwAAOc8AAAYOwBAiL0AQK28AFCHPQBgMT0AwA09AKDGPQDQpz0AwI09AKANPQCAUbwAANa7AKAcvQAA6zwAAPi6AED3PAAAcD0AIE49AAAYugBA5LwAcKg9AGCOvQBgPT0AQHu9AAAyvADQpb0AAKK8AAAbvACAhrwAAAs9AAB2OwCAmbwAQDE9AIBGvADgbL0AoBw9AICwPAAAeDoAALW8AGCEvQBAybwAAOi7AACtuwAA5jsAAPc8AMBQvQAALbwAQJc8AKC5PQAAyLsAAOw8AADSOwAAwjsAQJo8AIBgvACAUz0AwAu9AAAAPQDA1LwAAHw9AAAAPACASbwAwBK9AABQPABAcj0AAIg6ACBJPQCAULwAINw9AECAPAAAKz0AoCg9AGAGvQAARbwAgNu8AGAWPQDAuDwAYII9AKAkPQAAArsAgC+8ACADvQAAvjsAgIi8ACANPQAAd70AoEe9AADFuwAAuTwAYFG9AMCRPACANbwAANW8AED8vAAAxLwAwNY9AHCHvQAQjL0AAJe7ALCKPQBAjLwAgNA8AOCNvQAAD7wAgKc8AICKvACQhr0AgPk8AADuOwAAbz0AAHA9AACAuACAjDwAIAo9AGCvvQDgPL0AQD+9AADgOwCAQrwAwIg8AMDBvABAyzw=","chunkHash":"4bc6d8cf11aa1af1c4fff84577bf313a4dc3007528c82e0d505c8449267312a3"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n        print(f\"Using CosineAnnealingLR scheduler with T_max={args.epochs}, eta_min=1e-6\")\n    else:\n        scheduler = None\n        print(\"Not using any learning rate scheduler\")\n    \n    # Initialize mixed precision scaler if using mixed precision\n    scaler = amp.GradScaler() if args.mixed_precision else None\n    if scaler:\n        print(\"Initialized mixed precision scaler\")\n        \n    # For early stopping and model saving\n    best_val_metrics = {'loss': float('inf'), 'accuracy': 0, 'f1': 0}\n    best_model_states = {'loss': None, 'accuracy': None, 'f1': None}\n    patience_counter = 0\n    \n    # History to track metrics\n    history = {\n        'train_loss': [],\n        'val_loss': [],\n        'train_acc': [],\n        'val_acc': [],\n        'val_f1': [],\n        'learning_rates': []\n    }\n    \n    # Progressive unfreezing configuration\n    #...\n```","range":{"startLineNumber":181,"startColumn":0,"endLineNumber":207,"endColumn":0},"embedding":"AIAavAAAJjwAYB09ALADvgBgPb0AwIe9AEBQvQAA/TsAACi8AIDXPACAAbwA4Am9AHCHvQAAx7sAAAE8AEBAPQAALb0AcK49AMCmvACAVj0AAEc9AICDvABAoTwAwOA8AIB7PQDgJ70AoI89AMCGPADAPT0AIGq9AEAAvQDArrwAcJ+9AGBVvQDAoL0AgCa8AADiPABA+zwAAN87AIASvQAAEbwAGAy+AEDZvADYAj4AQMA8AKBgvQDAYT0AwDQ9AKAhvQCA1zwAABm9AEAcPQCAyLwAgEQ8AAAEvACAKDwA4AC9AEAQvQAATrwAAEm8AIBKPAAwir0AAPA7AADSPAAAQjwAANA5AJCHvQDAxzwAQCm9AABgvADA7bwAAEq9ALCXPQAA7bsAQIA8ACAhvQAAODoAcMo9AMDjvAAAr7sAANw6AICCvADgRT0AAKC5AIDWvAAQ8b0AwMC9AACNOwBAF70AoK+9AAAAOQBAmLwAoE+9ADC8PQCwxz0AQIo8AAB9PACQlr0AoBw9AICSvAAA3zwAgGY8AEAYPQAAUD0AgBw9AADYOgAAQrsAAEY9AECBvACA0DwAUJu9AIDIPABABb0AQEe9AHCbvQAAk70AAB68AKAWPQDgrL0AwAe9AIBXvABgHT0AQMg8AKCqvQBgSD0AoA09AMAUPQDAgr0AICK9AAAwOwAAfzwAAPk7AEB+PQBgdL0AYF+9ABC6vQAAHr0AALc8AICLvQCQ2z0AgG88AIBIPQBAzDwAgII8AAC4uwDAoTwAgE28AGBEPQAAlLwAAEA8AAAWOwAwkT0AgEA8AIAHPAAA6rsAAPi8AMC/vAAgTj0AYCM9AJCfvQAAlLwAgHM9AIDNvAAA4DkAgNw8AMD2PAAAYb0AAGU8AMBjvQDQ+70AMNw9AAATvQAAnrwAgJO8ACA/PQDgXL0AAP28AAAsvQDgTr0AAIG7AMA4vQBAqDwA4B+9AADBOwAwhr0AwEE9AAChPACAvbwAAOu7AIAtPQAAILsAwNm8AMB9PQAARDsAAIA8AIB9vACA6zwAAOm8AMCaPACAkD0AwOy8AOAIPQCAgzwAgJ69AAAGOwBwqb0AgPe8AIDRPAAAPLsAgEk8AAAwPADAHT0AgOI8AADAugCgGL0AANu7AAA2OwCAMzwAIDQ9AKADPQAAsLoAgGK8AADhOwCQkz0AgJw8AIAOvQDgEj0AABC9AIACPQAAQLoAACg7AEAOvQDAsrwAABg6AEDePAAAt7wAgPK8AED4vABAMj0AgIY8AABQugDAoj0AgKq8AOASvQBgMz0AQAU9AAAIvQCgoL0AQNG8AKCePQBAsbwAAD67AMCUvACA+7wAAK+7AEDEPAAAODwAAMW8ABCMvQBAnL0AgGK8AECDvAAAy7sAUIE9AAAQvABATj0AwBa9AEA2vQAADLsAAHm9AIAePQCAATwAAKk7AIDyPADAyDwAAFE8ACAhPQAAQz0AMIs9AOCavQDA+bwAgEm8ANCwPQBgeD0AgPW8AIBfPADAsLwAAEy7AADAuQAAU7wAALq7AKCbvQCAizwAwAC9AAAJPADQwT0AYA69AAApPAAACTwA4GC9AABGPQDA9jwAAFa8AIAcPQAwqL0AgNQ8AIArvQCAkrwAYG89AABaPACgab0AoGo9AOBRPQDAvLwAAF89AEBovQDAwLwA4Ec9AICePQBgB70A0KG9ACArvQDAMr0AAF89AAD5uwDAcD0AAAi7AIAkPABAKb0AgHK8AACMOgBgeL0AQFG9AAD8OgCAzjwAIJo9AECmvQAQjT0AwCg9AIAwPADoIL4AAG+9APDGvQAAtjsAAK27ACA7PQAgTL0AAEs8AEBePQAAILoAgHe8ACBIvQCAzjwAYA69AACUuwBgKL0AwIq8AGAWPQDQsr0AgKY8AID+PABAnzwAADU8AMDnvACA4jwAABS8AABOOwCAXLwAoB69AIAhPQCAQzwAAOU7AEA/vQAAIDsAgHe9AEBEvQBAjz0AQDI9AEBpPQAA+DsAoAM9AACjuwCAgD0AwFu9AADpOwAABjwAANU8AADEvABAUL0AQMQ8AACZOwBwlr0AABO8AMAfPQDAgj0AQOM8ABCrPQDwgj0AYEc9AMAPPQAAGr0AQKU8AIDhvAAAbrsAQOG8AABaPQCAzDwAAOY9AAD0PAAAPDsAoHM9ALDEvQBAaT0AIKy9AIAkPAAAyL0AAKw8AEANvQAA0TsAQH09AADnPAAAX7wAgEs8AECbvACAyLwAYCU9AMCKPACgHb0AgCa8ANCIvQBAtrwAAMc7AACouwAAvLoAABS7AAANvQCABLwAwIo8AKCbPQCAKLwAALi7AED3vACAT7wAAMw7AGBcvQCgYj0A4C69AECxPADgG70AAKk8AABBPAAAtrsAYBG9AACIugAgaD0AAO27AMC+PQCAprwA8AU+AIBcPQBAlDwAwBg9AHCTvQCAR7wAAEA6AIAyPAAgMz0A4Cs9AGADPQBA37wAQA89AMDyvAAAV7wAwMa8AADVPABwhL0AQOi8AIC+vACARzwAYEe9ACBUPQAAMDoAAFK8AMDqvAAAAbwAaBQ+AGBdvQDgOL0AAPy8AAA8PQCAkrwAAAA6AMAXvQDAn7wAANW7AGCHvQBgdr0AAEa7AAAWuwAAoDsAYGc9AIClPACAtDwAwB09AAAivACAR70AAIS8AEDcPADAwrwAQNU8ACBFvQAwmz0=","chunkHash":"20a0b9f6673df8ba4eca33982544ee58174f0a29da619c9ff2a0eb0a39177e2c"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n    if args.progressive_unfreezing:\n        frozen_layers = list(model.features.children())\n        # Initially freeze all feature layers and train only classifier\n        for param in model.features.parameters():\n            param.requires_grad = False\n        print(\"Initial state: All feature layers frozen - only training classifier\")\n        print(f\"Will unfreeze {len(frozen_layers)} layer groups progressively during training\")\n        layers_unfrozen = 0\n    \n    print(f\"\\nStarting training for {args.epochs} epochs\")\n    print(f\"Training on {len(train_loader.dataset)} samples, validating on {len(val_loader.dataset)} samples\")\n    print(f\"Batch size: {args.batch_size}, Learning rate: {args.lr}\")\n    \n    try:\n        # Check if at least one batch can be loaded from training data\n        print(\"Testing data loader (first batch)...\")\n        test_batch = next(iter(train_loader))\n        \n        # Print shape information\n        if isinstance(test_batch['volume'], torch.Tensor):\n            #...\n```","range":{"startLineNumber":207,"startColumn":0,"endLineNumber":227,"endColumn":0},"embedding":"AADMugAAlTwAwFA9AJDKvQDgGL0A4Im9AMAEvQDA0DwAgLK8AAC/PABAwzwAAAW8AOBdvQAAQDsAAME8ACA1PQBAgr0AQKk9AAC+vAAQmT0AEIg9AIC5vADgIz0AAFy7AEAVPQAA/LwA4C89AABpPQDALj0AYC+9AAAEvQBA+7wAkJO9AMA8vQCAlL0AQLq8AMCHPABgPT0AAL87AECWvABA8zwA2AW+AIDLvAAwzz0AAFs9AAB8vACART0AALs7AEB8vQAAhDwAwPO8ACBKPQBAobwAoBc9AAA+OwAAkTsAQEm9AIAUvQAA37wAwOK8AACoOgAgHr0AoA49AADvOwBA9jwAAIg6AHCHvQAAujsAAKa8AAC7vADgRL0AQH+9AIB3PQAAWjsA4DU9AAAlvADA7DwAcK89AOAEvQBAyLwAAEY7AABzvACAJD0AoAA9AOBxvQDw+r0A4Ji9AIBhPAAAuLsAcNS9AMC8PAAgAb0A4Hy9AHC8PQBwkT0AAPO7AIAfPQCggb0AYIA9AIBXvQBAgjwAQEg9AEAaPQBAKz0AoEk9AECQvACAY7wAABg9AABIOgCADz0AAF69AIB/PAAA6bsAAK68AAAhvQAQiL0AgAi8AAAuPADQqL0AgEK9AAASuwAAfrsAgHA8AECOvQCgfD0AgGc8AOBFPQDgMr0AgNy8AAAhPAAA7LoAgDg9APC3PQAgP70AwPq8AHCHvQBgKL0AQOo8ACBCvQAA1T0AgGg8AICPPAAA/DoAYAE9AMDLvAAAYzwAAHG8AKBsPQDgJL0AAEw7AAAMuwAAnT0AgNA8AIBtvAAA0DkAAMS6AABAvACwnj0AsI89AKCDvQAgH70AwJY8AAAtvAAAEjwAAIS6AGAcPQAgH70AAIw7AABjvQD4Ar4AMK09AMC2vAAAu7sAwLS8AEBsPQAAwDoAAN28AABHvQBA1LwAUIC9ACBlvQAAWDsAQJa8AACeOwAwpb0AsIA9AAD1OwDgGb0AQJY8AEAcPQAAKLoAAE+8AOBCPQAA2DsAAB89AAA4uwCgbj0AgNK8ACAWPQCAmD0AQOG8AKBnPQAACb0AcIm9AACFOwDA570AAHE8AEAEPQAAvLsAwLw8AABiuwCAUjwAgAu8AABivADAMr0AANk7AACWOwAAADwA4FA9AAA1PACAJjwAQLO8AAAQOwBgdz0AgA08AMAovQCAmDwAAI69AKAxPQAAwLkAADY8ANCHvQAAxDsAALC8AIDWPAAAJ70AAHq8AAAyvACgET0A4C49AABQuwBQ8j0AgP+8AEBevQAAcz0AAOQ8AADluwAQsL0AAFo8ABCWPQAAerwAANq8ABCDvQAA9LsAAOw6AEDpPACAwLwAAK+8ADCXvQDArr0AgJ28AIA0PAAAGb0AAKw8AAAJvAAA9TwAwPC8AMCDvAAACrsAAFC9AKAJPQAAPrsAABS8AIAePAAAvDoAAKQ8AICVPQCAID0A8Is9AED6vABAPL0AAKE8AFCZPQCAdTwAgN28AACFOwBgRb0A4C89AICovAAAQzwAQMo8AKBzvQAgGT0AoDi9AMCFPADQiz0AQAu9AACYOwAAWzwAwIK9AAB8OwBAJz0AAOO7AOB4PQCgxr0AALM7ACAQvQAAxbsAQLc8AADMvABAPb0AIH49AAAnPQAAm7sAoEY9AABqvQCAy7wAoDA9AABjPQAAZLwA4Ke9AKA6vQCgBb0AELA9AIDhvACQij0AgAo8AEC6PABAgDwAAI68AAAQuwDwqr0AYHG9AGBCvQDA+jwAIGc9AIBkvQDgYT0AwPI8AAB2uwCQBb4A4De9AGCpvQBA0DwAAO27AIBwPQBAWL0AAOw8AMAfPQAAGLsAAMQ6AGAQvQCAYjwAANK8AADTvAAA8bwAgBC8AEDePAAAtb0AABg7ACB0PQAgXj0A4CE9AABdvAAA4LoAQI48AMCKPAAAMLwAAI28AECiPAAAbDwAAEO8AFCHvQCAWLwAQGa9AKCMvQAAjTwAoHk9AEDJPADAkjwAAKa7AAAZvAAQhj0AQAK9AAAouwCAPDwAACo7AAAovQDwor0AQBc9AIAuPABwkr0AACQ8AACZPADAcT0AgDA8ACB0PQAgbz0A4CE9AOBfPQAAAbwAgAY8AAB+vQAA1LoAADi6AGCXPQDwjj0AkMA9AAAWPQAAF7wAcJE9AGDPvQCAPD0AMIa9AAAqPACQkr0AQOS8AADUvAAgKr0AQMA9AAAuPAAAIDkAAEw8AIBWPADABL0A4Gg9AGB5PQAAarsAAAC4AEB4vQBAT70AQPi8AAAvvACAyTwAAO87ACA3vQAA6bsAADs8AGA0PQAAn7sAAOw6AADIOgAAlLsAAJ47AICevACAeTwAcJu9AICKPADA3LwAAEQ7AAAmuwAA57sA4Fa9AACzuwBAjz0AoCa9ALDVPQAATLwAEPs9AAAQPABAlzwAQA09AJCFvQAAN7wAQPS8AEAePQCgNz0AAIw9AID0PABAu7wAgCM8AKAwvQAA7DoAAKU7AIBpPACAdL0AAOy8AIBSPAAAIrsAAAy9AKBfPQAA2DsAACG9AKAgvQAAlzwAwDo+AMCYvQAAdr0AACi6AEDfPADAk7wAgBY8ACAZvQDAhbwAgFc8AOBTvQCAgb0AgEU8AIBKPAAAGbwAIJw9AKBBPQDAwzwAgAO8AECfvABQp70AgMO8AACfPACAGrwA4BY9AEA/vQAAZz0=","chunkHash":"55dc9cb1d7431509d5344533d37f046a319e7ea1b6b1bbd303e1f5b0bcd53fcf"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n            # If volume is already a tensor (batched by custom_collate_fn)\n            # print(f\"First batch loaded successfully! Volume shape: {test_batch['volume'].shape}\")\n            volumes = test_batch['volume'].to(device)\n        else:\n            # If volume is still a list\n            # print(f\"First batch loaded successfully! First volume shape: {test_batch['volume'][0].shape}\")\n            volumes = torch.stack(test_batch['volume']).to(device)\n        \n        # Convert labels to tensor and move to device\n        labels = torch.tensor(test_batch['label']).to(device)\n        print(f\"Labels shape: {labels.shape}\")\n        print(f\"Label values: {labels.cpu().tolist()}\")\n        \n        # Verify labels are within expected range\n        n_classes = model.classifier[-1].out_features\n        min_class = labels.min().item()\n        max_class = labels.max().item()\n        #...\n```","range":{"startLineNumber":227,"startColumn":0,"endLineNumber":244,"endColumn":0},"embedding":"AMC0vACAczwAgB88AADgvQAgCL0AoEe9AMC+vAAATrsA4C69AMCvPAAA4LkAgFQ8AICevQCARjwAgB28AOAJPQBgfb0AEJk9AACdvACALT0AYC49AIAtvACANT0AgE28AIBEPABA7LwAgPc8AAAyPQBAFT0AEJW9AMCBvADgDr0AsLW9AICtvQDwor0AANC5AEAMPQAAUT0AAEU8AMChvAAAGDwAYJu9AKANvQBguD0AcIM9AAC2vABAdj0AAKM8AKBDvQBA1DwAgDe9AICMPQAAwDsAANI7AACtPABAmTwAQJi9AIDkvAAAtzsAwIW8AAC8OwCAO70AgC89AACcugDAnTwAgIm8ACCOvQCAZ7wAABA7AMCyvAAgAL0AYGC9AIBtPAAA6DsAYEY9AGA+vQBAlDwA0Kk9AOBCvQBA+rwAACK8ACBvvQDgTz0AQPI8AOBEvQAAxL0AQMW9AAAhvQAAdrwAsNy9AIBgPACAKr0AoA+9AODxPQCgij0AgBs8ACALPQBgnb0AwF89AOABvQAAwDgA8KI9ACCEPQAATT0AQFg9AADguwAAgDoAIAE9AABqOwCAMj0AwHa9AAAXvAAAEr0AYB+9AACrvACwpb0AIDI9AMCBPAAg8r0AIEi9AEC9vACAqzwAAHS7ABCGvQDAVT0AgAA8AEA3PQAQmL0AgF+9AMDIPAAAzTwAgOs8ACC+PQAAQL0AoAe9AJDavQAQh70AAGY8AADPvABgwz0AAPe7AIBMPAAAYLoAgGo8AEDjvADAhjwAQOK8AEBrPQAgOL0AAJg6AMCdvADg5j0AAAS7AIDAvAAAh7sAYAu9AAC8vABApz0A8Ls9ALCbvQBAwbwAYGA9AACauwAAWDwAAEC6AEABPQAASb0AgEq8AMCKvQDQ3b0AIL89AICyPAAACLwAwHS9AKA1PQDgMb0A4DG9AIBRvQCAU70AwBS9AOBLvQAAnjwAAAy8AAAiOwBgc70AQJY9AIBOPAAAWjsAACy7AAAxPACADLwAwLK8AABRPQAAKj0AAKE7AMCIvAAA+jwAgLO8ACAWPQAATjwAAN47ACCRPQBAA70AoH+9AACEugBgzr0AwI28AMCkPADAg7wAAKO7AACGuwAAFD0AgGc8AACrvAAgN70AAIo8AADmuwAgXT0AgC09AIDqPABAgjwAQP48AACzPADAGj0AAIS6AMAcvQCA5jwAgKO9AMBYPQAAELwAAHk8AIA9vQCAKrwAgLq8AAARPQAADr0AAFW8AECFPAAAzTwAwOg8AADxuwDg9j0AAPw6AACBvQDgXD0AALE7AACTvABgpb0AQOA8ANCtPQAANDwAAKq7AEDvvAAAs7wAQIa8AAB0PADgPL0AIBC9AMBVvQDQvb0AgG28AACMuwCAV70AAPg8AMCrvACAhjwAAOS7AKAwvQAAOrsAYBm9AIDfPACA5LwAgN48AAAeuwDArrwAgKI8AAAVPQDAhjwAQH09ACBuvQBgGL0AoCY9ACAfPQAADT0AABc8AACougCAhTwAwOc8AICzvACAfLwAYCg9AICUvQDAszwAgKq8AADlPAAAkj0AQP+8AMDrvACAHj0AAHC9AADFvACAKj0AQPw8AMB9PQDQhb0AAMA7AEAfvQAArrwAQAk9AIA0vAAAojsAIDQ9AMAfPQAALLwAIF89ABCFvQBgFL0AAO88ALCWPQAAsrwAQLi9AMBkvQBgKb0AYK09AAAOvADwlT0AAKy8AADIOgCAPrwAYFC9AACbuwAgp70AoEO9AOBMvQCAujwAgFg9AMBUvQBgFz0AgAY8AABPPAAg9r0AQCa9AICbvQCAyDwAoAC9AMAVPQAAsrwAoDs9AICBPADArLwAAMU7AGCNvQCgFj0AAAe9AMDKvAAAmbwAAMO8AIB5vABwgb0AAIc8AIABPAAART0AgEY9AIBEvACAFLwAgEy8AABQOgAA3jsAoAG9AAAkOwBAfT0AADy8AABNvQCAQbwA8Ju9ACCQvQAAWT0AwHU9AADguwDA/TwAYAM9AMDpvACAMT0AgHM8AMCRvAAAUzwAgFY8AAAwvABAVL0AAFA9AADdOwAghL0AAFq7AMBNPQDAhz0AgEQ8AECYPQDgcD0AwGQ9AGBgPQAAHDsAAE67AOBYvQAAzTwAACo8ACCPPQCQvz0AIMY9AACePACAxrwAgIg9APCuvQBgXT0AYK29AACEOgAQh70AACg6AAB4vACA+rwAYLQ9AIC1vACAG7wAAA28AOAFPQDgMr0AgEk8AKABPQCAYbwAACC7ANCpvQBgob0AQKu8AADyOwAAgDgAAMo7ADCCvQDAw7wAAFq7AICmPQCAcTwAAK+8AACguwAANjsAAKi8AECNvAAAYT0AgBy9AKAoPQAApDoAgI48AACXvAAAULsAAHu9AADgugAgGD0AQBq9AGB4PQAAwbwAcPQ9AAApPACAjzwAYCE9AOCMvQAAHL0AQKG8AED+PADgiT0AIAI9AADjPACA8rwAwMM8AIANvQBA4zwAQIy8AMCuPABALb0AAFG9AIBuPAAAVbwAgM68AGAhPQAAxrwA4Gy9AIAAvABAtDwAGC8+AABPvQCAMr0AAOA5AACxPACA+rwAACi6AED6vAAAiLwAgMI8AMCsvADASL0AgGY8AAC0OwAAp7sAYFs9AEDxPACAKD0AwM88AADHvABgI70AQP+8AACRPAAgCL0AAKk8AIDyvABAMj0=","chunkHash":"db58dd5073185f7625596d3357834fead5089e669af2e969d34980ce5ce3c788"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n        print(f\"Label range: [{min_class}, {max_class}], Number of model output classes: {n_classes}\")\n        \n        if min_class < 0 or max_class >= n_classes:\n            print(f\"WARNING: Labels out of range! Must be between 0 and {n_classes-1}\")\n            if args.force_cpu:\n                # Continue anyway since we're in debug mode\n                print(\"Continuing anyway as we're in debug mode\")\n            else:\n                # Only continue if in debug mode or specified by user\n                if '--force_continue' not in sys.argv:\n                    print(\"Aborting due to label mismatch. Use --force_continue to override.\")\n                    return None, None\n        \n        # Try a sample forward pass to validate the model\n        print(\"Performing sample forward pass...\")\n        with torch.no_grad():\n            outputs = model(volumes)\n            print(f\"Model output shape: {outputs.shape}\")\n        \n        # Free memory\n        del volumes, labels\n        torch.cuda.empty_cache()\n        #...\n```","range":{"startLineNumber":244,"startColumn":0,"endLineNumber":266,"endColumn":0},"embedding":"AABBvABApjwAQDs9AOgIvgCAdL0AoEa9AGAqvQAAvLsAwLi8AGAzPQAAnjwAQIW8AMCtvQAATzwAAOG7AADSPADAPb0AkIg9AECYvAAwhD0AwAg9AAA0PACANz0AAPW7AADDPABAjLwAQNc8AGAQPQDgfT0A4GW9AAD0vACgEr0AgKq9AACJvQAwwb0AgHK8AEBCPQAADz0AwM88AACcuwAAJjwA0K+9AICCvACgtz0AgJg9AEDbvAAgdz0AACE8AKBAvQAANjwAwDC9AGCOPQCArLwAQGU9AADDOwAAEzwAwIC9AAAqOwAAVLsAQJu8AAChOwDQiL0A4C49AADnOwCARTwAgES8AOB8vQAACrwAAN+7ACA1vQAgLb0AMIS9AMDfPAAAGDoAANI8AKASvQDAUj0AsJA9AICpvADAoLwAgFM8AADEuwBgCz0A4GQ9AIDbvADwy70AUOG9AAANvQBA6LwAwPi9AAB9PAAAJLwAgO68ABDdPQAAkT0AAJu7AADfPABQmr0AoDc9AOADvQAAJrsAAIY9AOCfPQBgXz0AACI9AIA3vAAAMLoA4EA9AIAbvADAWD0AoGK9AEDhPADAz7wAYF+9AKAavQBwh70AgFe8AACUPACwor0AoGW9AADWuwCAEjwAALU8ADCJvQCAPj0AQGA9AMBYPQCgAb0AYBO9AECoPADAvzwA4AM9AKCuPQCALrwAQFK9AICXvQAgg70AgEW8AMA3vQBAvz0AAA67AICvPACAlLwAgIs8AECmvABAEj0AANm8ACBePQBgQr0AgCY9AMDOPABAvz0AgGU8AAD7vAAAyzsAAEG8AMCsvAAAcj0AAF09APCcvQAAb7wA4C09AAAoOgAACbwAAIC4AADQPABA4rwAAHq7AACQvQAwwb0AoLg9AADduwAANDwAQGe9AKA9PQCAq7wAAFu8AABtvQBgQr0AQDG9AEA5vQAA5zsAgDW8AIBFPACgkb0AYBk9AMCQPADgH70AALY7AGAQPQAANjwAAKu8AECBPQCAWzwAADg8AIAPvAAA7DwAgAy9AMA7PQAAzDwAQKq8AGBoPQAAYLsAkJO9AADwOgCQib0AAJS8AIBbPACAUjwAwMI8AABQuwCAJz0AgI88AADQuwCAwLwAAHm8AACkOwAAKDwAQG49AIBlPAAAuDoAwJ88AEChPACAfT0AAJY8AEATvQCgJD0AYG29AKALPQAAVzwAAIq7AGBsvQAAKDoAAFO9AOAUPQAgG70AAPW7AACevABA6TwAACA6AABWuwBQwD0AAEA5APCQvQBgLD0AAIs8AMATvQCgpb0AABc8AGA9PQDAnzwAAGG8ACAZvQBgHb0AAKO7AADjPACANLwAAMe8ACAhvQCw2r0AAMO8AABWvAAgUr0AALw8AMCEvACAHD0AgNS8AAAMvQBA0bwAgHa9AEDFPACAorwAABo8AAC0ugAAljsAgK88APCTPQCAaj0AIFs9ABCgvQAgIb0AAN08AFCfPQBAzjwAAIi6AABqOwAA8DkAgPM8AABZvAAABjwAAIg6AIBXvQAAMjwA4BG9AEC8PADggj0AQMG8AAAeuwBAST0AYEa9AAAkOwCAIj0AABg7AIBvPQBwt70AADu8AAAIvAAAdrwA4EE9AAA4uwBgF70AgEU8AMDqPACAk7wAIII9AMB7vQCAsLwAADg9AICmPQCASbwAUJa9AEBNvQCgM70A8L09AICZvABwoz0AwBW9AEDFPAAALjsAAA28AACcugAAg70AgHu9AMDevABgMD0AUIo9AGA8vQAQlT0AIAU9AABUuwCw8b0AIBq9ACCavQDAgjwAwM+8AEDqPACAOL0AwDc9AABTPQDAuLwAgJa8ADCSvQAA8jwAwCS9AIADvAAAnLwA4A+9AADROwBgw70AgMU8AACAOQAgUz0A4Ao9AABDvQDArzwAAFA7AAC0OgDgCr0AwMO8AADEOgAgAD0AAAo7ABCHvQCAn7wAQL69ALDHvQAAYD0AwPU8AAD6PADAtjwAAGM8AACUugDgdz0AAIe7AACzuwAA/TsAQMw8AAAJvQDAxb0AQAU9AABZPADwk70AgF+8AIDjPACgJj0AAII7ACCZPQDglT0AoCk9AJCUPQCABLwAAAA7AIBLvQAAFj0AAJe7AFCoPQDQjj0AcL89AECYPACASrwAsJ09ANCcvQDgOz0AEIm9AABoOgBwrb0AAKA7AEDlvAAAKr0A0MI9AAAgOQCACjwAALi6AAAdPQAAhrwAgPg8AKAPPQCAFL0AwMg8ANCXvQCQgb0AAA+8AACxuwAA6DoAAA48AMAivQAASLwAAHy8ANCwPQAA1jsAgDa8AGAFvQAAFDsAAF08AMC5vADgYz0AgHW9AIDbPAAAGbwAAJk8AABquwAABLsAID+9AAD8ugCgYT0AgOi8AFCbPQCAabwAAPg9AECoPACAkjwAgOM8ACCnvQAAqrsAgPe8AEDvPACQsD0A4C09AMBPPQAAxbwAYA49AIBkvADAlzwAQIO8AAAFPACgY70AgCa9AADwugAAgrwA4Ce9AGAoPQDAubwAgHK8AAC8uwDAnbwAaCw+ACCwvQDgTr0AgL68AMANPQCgU70AAAq7AOAavQCAlbwAAKk7AGAUvQBA6LwAALg7AICWvAAAdLwAwDc9AAB3PQAAUjwAAIw8AKAkvQBAdr0AAEi6AECvPADA/7wAIAs9AKA7vQDgWD0=","chunkHash":"00fa591864879f0d37724198edd4e170551878336e585bb29603bea6573e897d"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n        print(\"Initial validation successful!\")\n    except Exception as e:\n        print(f\"ERROR loading first batch: {e}\")\n        import traceback\n        traceback.print_exc()\n        raise\n        \n    # Flag to track if we need to adjust labels from 1-based to 0-based indexing\n    adjust_labels = False\n    if min_class == 1:\n        adjust_labels = True\n        print(\"Will adjust labels by subtracting 1 to convert from 1-based to 0-based indexing\")\n        \n    for epoch in range(args.epochs):\n        epoch_start_time = time.time()\n        print(f\"\\n{'='*20} Epoch {epoch+1}/{args.epochs} {'='*20}\")\n        \n        # Unfreeze layers progressively\n        if args.progressive_unfreezing and epoch > 0 and epoch % 3 == 0 and layers_unfrozen < len(frozen_layers):\n            # Unfreeze the last frozen layer group\n            #...\n```","range":{"startLineNumber":266,"startColumn":0,"endLineNumber":286,"endColumn":0},"embedding":"AICfvABAmDwAICU9AFDdvQCgLL0AoDu9AIC5vACArTwAwNm8ACA6PQBAnTwAABy9AFC4vQDAi7wAgIo8AGBHPQCAUb0AgHw9AGAWvQAgWz0AIDw9AACHuwBA9DwAALg7AEBnPQAAyLwA4Eg9AIAIPQAAPz0AEIW9AMD0vADA2rwAgJ+9AEBkvQAQor0AgFO8AECePAAAJz0AQIc8AAAiuwDAojwAMLq9AECbvACwvz0A4BU9AAB+vABggz0AwB49AGCXvQCAVDwAoBK9AEA9PQAAgLwAAOU8AIBUPAAAQrsAwF+9AIDDvACgC70AgGa8AABKvACALb0AAB49AADvPAAAGz0AAIe7ALCSvQAA2DoAACk8AMCjvACQjL0AgGi9AOBaPQCAJTwAAE48AACkuwCgHz0A8MQ9AOAHvQAAprwAALC6AMAhvQDgLz0AwJ88AKAqvQBgvr0AkMm9AAAYvABAoLwAANK9AADUOwDAh7wAgIK9AKDOPQBgjj0AgD08AAD+OwBgdr0A4Dg9AGAwvQCAlDwAwEU9AICDPQBgKT0AgE88AADVuwAAaLoAoHU9AAAZvAAgED0AgH+9AMDmPAAgHL0AQHS9ACAevQAQiL0AQKq8AABiOwCAlr0AoEK9AIAmvACAObwAgGM8AHCdvQAgVD0AAKY8AMBTPQAgRb0AwBS9AAAUOwAAYDsAYDE9AMCTPQAAk7wA4Ei9AACNvQBgU70AAO87AGBcvQCw7T0AAAq7AAB4OwBAn7wAAKw6AIBPvABAhTwAgBO8AEB/PQAAPr0AwKA8AIA4vAAwwz0AwM88AACfuwAAUrwAADe8AIC+vADgVD0A8IU9ANCGvQDAD70AAAg9AACGOwCAeLwAAF47AKATPQBgFr0AAEC8AKB4vQBgx70AgNY9AAB0uwAAlLsAwIG9ACA2PQBAvLwAQAS9AGBVvQAgMb0AgDC9AMBSvQCAJzwAQKm8AACPOwCQhL0AoCk9AAB/PADAAb0AAMi6AMC4PACAXjwAwJm8AEA9PQAAszwAwFM9AIAnvAAAEj0AgJG8AMAdPQBAQj0AwI68AIA6PQCA5rwAoIS9AAAgOwAAm70AQNu8AMCXPACAk7wAgF88AABuuwCASDwAgCq8AAANvAAABb0AAAK7AABJvAAAZDwAYJE9AABoOgAADDsAgGy8AACYPABAhD0AoA09ACAqvQDgQz0AwGu9AMA2PQAA2DsAACA7AIBivQCAMjwAwPK8AIBIPQDgGb0AACi8AADMugBACz0AwNg8AADMuwCQ/z0AQN+8AKA6vQDASz0AgCU8AEDVvAAgrL0AAJC5AGCaPQAA6LoAAIC6AEBIvQDA2LwAAF47AKAUPQAAyjsAIAm9ACBrvQCgsb0AAPW8AIA4vAAgOb0AQCk9AADauwBAnDwAAJC8AEAJvQAAIDkAoGq9AACdPACALrwAANQ6AAAcPADAnzwAAJU8AMBBPQBAST0AQDQ9AMBRvQCAB70AgGw8AACuPQBAmjwAANy8AECRPAAAxbwAIBQ9AIA2vAAACTwAAA08AICKvQCAmjwAgCu9AICWPADQgj0AYES9AADgOQCAkDwAIAq9AAD1OwCgCD0AACa7ACCcPQAAwb0AgCg8AGAlvQAAOjsAQCU9AADeuwAABr0AwM48AMCoPACAP7wAQE09AAAlvQBAGb0AYHs9AOB1PQCALLwAIPa9ACAjvQDgfr0AUMo9AEDnvAAQhT0AAM+7AIAGvAAAxDsAABC6AAApPABQj70AEIO9AIBgvACA2zwA4G89AIByvQCAIj0AYEE9AMCvPACwC74AwGu9AHCwvQCAAjwAAMA4AAC9PABgTr0A4E49AABjPQAASLwAABq8ABCFvQAAgDgAQB29AAAuvABA1bwAwJy8AAAJPQCAvb0AANw7AMDvPACARz0AANE8AIC7vAAAWLoAAIa7AECEPAAAN7wAgHC9AMCcPAAA7TsAACA8APCYvQAAJLwAsKG9AJCjvQDgKD0AYCU9AADdPACAATwAAF48AIBLPAAQoj0AAJ68AAD8ugAApDoAAE88AEAmvQBQnr0AwDQ9AACguQCQm70AgEC8AMC9PAAAij0AAJm7ACCTPQCQhz0AwIQ9AKCQPQCAO7wAAPq7AMBvvQCAATwAAGK7AMB7PQBgIT0AsL89AMCyPAAApzsAgHo9AHD4vQDATD0A4JS9AECcvAAwjr0AAPI7AIDfvABAI70AsK09AADeOwAAADkAgCk8AEC/PACAuLwAIGo9AGA8PQDAurwAAAc8AOBlvQDgdb0AANW7AABDPAAAFLwAAFQ7AGAYvQAAMbwAAMS7AHCNPQCAUDwAANo8AADPvADApLwAAPw6AMAavQAAHz0AMKC9ACAGPQDA7bwAwOw8AIAUPAAAWLsAoEC9AAD8ugAAHT0A4AO9AGDPPQCAiLwAIBI+AEChPAAA4TsAQBM9AHCevQBAirwAANO8AIAvPQBgRD0AIK09AIAiPQAAEr0AAMw7AED0vAAAKjsAAHG8AIA5PACATb0AwD29AADQuwCAWjwAYEi9AKAhPQDAIL0AAJO7ACARvQCAV7wAKCY+AJClvQDAXb0AgIy8ACALPQAAFb0AAOc8AIDyvACAkrwAACi8AGA7vQCgBb0AAGA8AACgvAAAzrsAQFM9AOBNPQBA3jwAAMU8ACAMvQBgmr0AwAW9AIDDPACAGbwAgLA8ACBLvQDwjT0=","chunkHash":"b36a6661e0238e153039f93c3e8f3a128db62633387222a44ef2b2b05d1d44f3"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n            layer_to_unfreeze = frozen_layers[-(1 + layers_unfrozen)]\n            for param in layer_to_unfreeze.parameters():\n                param.requires_grad = True\n            layers_unfrozen += 1\n            print(f\"Epoch {epoch+1}/{args.epochs}: Unfrozen another layer group - {layers_unfrozen}/{len(frozen_layers)}\")\n        \n        # Training phase\n        model.train()\n        train_loss = 0.0\n        train_correct = 0\n        train_total = 0\n        \n        print(f\"Training phase started...\")\n        progress_bar = tqdm(train_loader, desc=f'Epoch {epoch+1}/{args.epochs} [Train]')\n        batch_count = 0\n        \n        for batch in progress_bar:\n            try:\n                batch_count += 1\n                # Get data\n                volumes = batch['volume']\n                labels = batch['label']\n                \n                # Validate data before moving to device\n                #...\n```","range":{"startLineNumber":286,"startColumn":0,"endLineNumber":310,"endColumn":0},"embedding":"AAD8uwAAFD0AAMY8AODfvQCA9rwA0IG9AMArvQDAqzwAAPi8AABIPACAezwAAJC5AFC+vQAA4LsAQKA8ACAVPQBAoL0A4Jw9AIBmvAAggz0AYHA9AACvvACgHj0AALU7AEDaPACAR7wAoBA9AIBlPQBAxDwAACm9AECdvAAA77wAQG69AIBbvQCAjb0AQLy8AICyPACAxzwAAHY7AIDbvACgMz0AkNm9AEDCvADA3D0A4E09AEDRvAAgHz0AwLY8AACCvQBAlDwAgIm8AEB+PQAA9rwAwMw8AAAAOwAAujsAICK9ACBIvQAAp7wAgOG8AABcPACA5bwAIFU9AED6PADAuDwAAHg7ANCivQDAAD0AACg6AECWvABga70AoFS9AMAYPQAACjwAAO08AADsuwBgDj0A4J49AIBvvACgTb0AgH08AEBavQBAyjwAQNM8AAA7vQDA8r0AENa9AIANvABAAb0AUNi9AEDBPACgRr0AYG29AFC6PQBAbD0AAPA7ACAYPQDAT70A4E49AOAyvQCAVzwAIB89AMAgPQAgBT0AYAQ9ACAkvQCAS7wAACI9AIAJvAAAEz0AgCq9AIA8PAAAcrwAwJC8AADlvADgdb0AgII8AICbvABQnL0A4DK9AAA+vAAAxzwAIDA9AEBwvQCQjD0AgII8AGAzPQBgAr0AwNS8AAB0OwCAGbwAAHU9AOC8PQDgZ70AgFW8AEBbvQBAJr0AQDo9AIBivQDA1T0AQL08AAAeuwCAlDwAABU8AMDivAAgKz0AAMG7AEB/PQBAO70AAD47AADEOwDAkz0AgHo8AAA6vAAAg7sAALm8AIBFvABwjD0A4JY9AMBOvQAwkb0AADA7AAC8ugAAOTwAgAO8AEB+PQAgOb0AAKC6AKBSvQDg3L0AcKI9AABHvACAb7wAAOe8AADwPACA4bwAgJC8AAAdvQDwgb0AoHq9ACBEvQAAcDsAQAy9AADsuwCwiL0AwGM9AIDUPABAhrwAwK48AGA0PQAArbsAAHS8AKBuPQAAQzwAIBE9AIBlvACATj0AYEm9ACA1PQBghz0AwJu8AMBrPQBAmbwAEMu9AIALPAAg3L0AADS8AGAVPQAACrsAAIo8AABEOwAANDwAgAm8AIDcvABgHb0AAO07AABgugDgDD0AACY9AIBcPABAirwAAFg6AAB/PABgrz0AADU8AGBNvQBAgjwAkJG9AIBMPQCARjwAQME8ACB5vQAAOLsA4A29AGBMPQDgEL0AgFe8AIBcvAAA9DwAwMI8AACguwBwCT4AAL28AGA3vQBQlz0AgEY8AACIuwCgtb0AgMY8APCvPQCAu7wAALe7AKBzvQBA3bwAAAS7AADXPACAr7wAwO68AHCBvQCgl70AALe7AACIOwAASL0AAFU8AADTuwCgED0AAK67AACMvAAA8zsAwG29AAAaPQCADbwAAIA5AIClPAAAZrsAgPk8ABCOPQBArDwAcIc9AOA+vQCgK70AgBo9AGBxPQAgPT0AADG8AABbPADAPb0A4EQ9AABhvADANT0AoAs9AICLvQDA/jwAAJO8AADIPAAgWD0AoBa9AAAcuwCAWDwA4DG9AIAcvADgDD0AAOy6AOCgPQCQ4r0AAKu7AOBHvQAAWjsAwPA8AMCtvADgRb0AAEc9AEBIPQCAFrwAQII9AMABvQDAF70AYBQ9ALCDPQAAPrwAIJ+9AIBDvQAgVL0AsMg9AEC8vABARD0AANq7AMCAPAAA0DwAQLW8AADeuwDwhr0A0I29AABqvQAgNT0AoA09AFCIvQAgfj0AADs9AICMvADwyL0AwBS9AOCfvQAApDwAAB88AIApPQAgI70AIA89AGAxPQBAj7wAAFA7AOAfvQAAWjsAgFG9AICTvAAAr7wAAJ27AIB6PABgpL0AgHU8AGAdPQCgHz0AYGE9AOAJvQCAHLwAANU8AGAIPQCAZjwAgG+9AICAPAAArDwAADg6ANCKvQAAgrsAwBy9ADC0vQAApjwAIIU9AADqOwDAGz0AALM7AAB1vABQuj0AAD+8AACOuwDAxjwAAHC6AICPvACgtb0AQEA9AIB+PADAj70AwKc8AAByPABgTT0AAJC6AMCJPQDAPD0AAEI9AGCGPQAAALkAAKA6AKBfvQAA5zsAAFI8AAB5PQAQlz0AIJA9AEACPQAAqbsAAJ89AODYvQDgGT0AQIq9AACGPAAQlL0AgAy8ACAOvQAAEr0AcJs9AAAqPAAAcDsAgLM8AIA0PACAYbwAcJ09AGBmPQBAnLwAgJc8AKC2vQAgf70AAM68AIDCvAAAMDoAAJA5AMApvQAAMDsAAOK7AMBTPQCAIDwAADU8AMCCvACADrwAAII8AMCRvAAgFz0AMJK9AIAWPQAAcrwAAEo8AIBmvACAGLwAAD+9AABlPACAST0AQDi9AMCxPQCArbwA+AM+AAByPADAoTwA4BQ9AGBMvQAAwrsAgKa8ACBHPQDgUD0A8Ko9AMAEPQDgEb0AAGU8AIBMvQAA9DoAALO7AIBNvADgPL0AQEO9AMCAPAAApDoAgLe8ACApPQAAGL0AIDa9AGBFvQAAIzwAYCg+AACLvQDASr0AgFy8AACOPAAAP7wAQJ88ACAEvQAAh7wAALA8AADbvACgcr0AgBq8AACLuwAAnzsAQJE9AOBOPQCA2DwAADI8AIB5vACgXr0AgKO8ACAAPQAA8DkAACo9AMBIvQDgcj0=","chunkHash":"da3ddd1d0af143ec3afbe6f67249f69e1e4f15db136848d319ad47728f054cf5"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n                if isinstance(volumes, list) and (len(volumes) == 0 or len(labels) == 0):\n                    print(f\"WARNING: Empty batch {batch_count} - skipping\")\n                    continue\n                \n                # Check if volumes is already stacked (5D tensor) or still a list\n                if isinstance(volumes, torch.Tensor):\n                    # Already stacked by custom_collate_fn\n                    if volumes.dim() != 5:\n                        print(f\"WARNING: Expected 5D tensor but got shape {volumes.shape} for batch {batch_count}\")\n                        # Try to fix the shape if needed\n                        if volumes.dim() == 4:  # (B, D, H, W) - missing channel dimension\n                            volumes = volumes.unsqueeze(1)  # Add channel -> (B, 1, D, H, W)\n                    \n                    # Check for NaN/Inf values before sending to GPU\n                    if torch.isnan(volumes).any() or torch.isinf(volumes).any():\n                        #...\n```","range":{"startLineNumber":310,"startColumn":0,"endLineNumber":325,"endColumn":0},"embedding":"AADpvACARTwAQPQ8AIDdvQAAZ70AoIa9AMDuvAAArDsAIBW9ACAKPQAAdLsA4BS9AJCZvQAAWLsAAFQ8AOBUPQDARb0AMIQ9AACWuwBgRT0AANW7AIAKvACAKT0AwIm8AIA1PAAAFjwA4C09AIDyPAAARj0AQCS9AIADvADABb0A8LO9ADC+vQDgtb0AACe8AKBBPQCguz0AAKE7AADauwBAHj0AgHC9AICSvABgqT0AQJY9AABDvAAAsD0AAHg8ACBevQBAszwAIFa9AFCLPQDAwrwAAFC6AED0PAAASLoAkIW9AEAHvQAACbwAAIY7AACXuwCgfb0AAFU8AICPPADAGz0AAO+8ALCxvQBAjbwAAEi7AMD/vAAgl70AgEq9AICtPABgAj0AAO88AIADvQAA3TwAsK49AGAHvQBAq7wAANm7AIBYvABAFT0AAFA8AGBFvQBg1b0AwMC9AKAHvQBgAr0AQPG9AIDAPADAkLwAoGe9AGDPPQBwnj0AAJ87ACBJPQAAU70AAFo9ACAevQAAPLsA4Ig9AOB1PQCA6zwA4DI9AACBuwAAHDwAwHY9AAB2vAAgVz0AQGy9AIAyPACgX70AgLW8AIDivAAArb0AAPo7AOAgPQCwv70AgAi9AEDHvADApTwAgI08AOBZvQDgYT0AgBY8ALCmPQBAf70A4Be9AAAEvAAAoTwAgFg8ALC8PQAA9LwAIC+9AJDIvQDAar0AAHA8AMAnvQBgoz0AACa7AEC9PAAAgzsAgGE8AEDIvABARz0AACm8AFCAPQBAI70AAIY8AABpvABg0j0AgFw8AECBvAAAFLsAwCa9AMCTvACgiT0AQKw9ALCuvQAAs7wAoEw9AADqOwDAhTwAAKs7AMANPQDgOr0AQNW8ACB+vQBA1b0AEME9AMC0PACARTwAEIC9AABkPQCgBL0AYE+9AHCVvQAgSb0AgDe9AIASvQCgAz0AwIS8AIA2vAAgnr0A8J09AEARPQDA37wAAPc7AADQPACAk7wAIAa9ACBePQDgCT0AwMo8AOABvQBAoDwAgKy8AGAePQCAWTwAAJC7AOBpPQBAx7wAUIK9AACUugDgvb0AgLm8AMCnPABA27wAgG48AAB4ugCA8DwAgG+8AAAYvACA3LwAAEo7AADFvACA8TwAAM08AACoPAAAIjwAgPg8AAD3OwCART0AAGm8ACBVvQDgVT0AYDy9ACAkPQDAyDwAAHq7AGAivQAALrsAgAq9AOAPPQDAsbwAgBy8AACxOwBA1TwAIBY9AAArPABwyD0AAMS6AFCJvQDgND0AQP48AICdvAAgjr0AAMC4ALCFPQCARD0AALS8AABGvQCA+7wAgKm8ACACPQBAmLwAgCi9ACBlvQAwkL0AALi6AAAguwDggb0A4B49ACAZvQDAvDwAAJ07AOBgvQAA7DoAIC69AEDkPABArrwAAJM8AACguwAA/DoAAOE8AEAgPQCAAj0AAEw9AKB8vQCAzbwAACg9AKAqPQCgOT0AAAC6AECKPAAAwjsAALk8AIB+vAAAM7wAwPM8ADCNvQCA1jwAgMe8AICYPACgNj0AQFO9AACLvAAAsTwAwGe9AOAMvQBA4DwAgNk8ACBuPQAAgL0AgFa8ACBsvQAA37sAoBI9AAAmOwAAd7wAAP48AADwOwCAAbwAAE49ALCYvQDgKr0AAJw8AOCSPQCAXLwAoKW9AEB3vQCgfL0AYJE9AACVuwAAWj0AAB+8AIBCPADAgLwAQCa9AMAFvQCQkr0AIF69AEAgvQCAljwAwNA8AKBAvQAgNz0AgBY9AAASuwDg+r0AQC69AEA4vQAAzjwAgNi8AECwPABAtbwA4Eo9AIDAPAAATrwAgCG8AHCsvQBgJT0AwKq9AIAlvAAAtLsAANe7AIABvAAQir0AAPA8AADaOwCADT0AYAk9AMDivAAA/TsAAGi8AMDTPACALzwAAAa9AAD8OgAAdT0AAKQ6AFCCvQAAa7wAwGW9AJCmvQBAdT0AAG89AICIPADAvDwA4CI9AADJvAAgGD0AALs7AIAAvADA4zwAAAY8AABnvADgtb0AwMU8AMC5vAAgbb0AgBm8AOByPQBgkj0AAOi6ACCHPQDAbT0AIAo9AECVPQAA7DoAgEQ8ABCBvQAA7DwAgN48AFCqPQDwpT0AoLg9AED6PABAIL0AIJI9ALDEvQDgYz0AsLe9AIAcvQAwnb0AQKg8AICLvAAAT70AkMg9AMCCvAAA4jsAABW8AEC/PAAgVb0AgBs8AADoPAAAG70AgGU8ABClvQAwnb0AABY7AADNOwAAv7sAgB08AMBGvQCAB7wAQJ28APCfPQBAiDwAAGu8AMDtvACAnrwAAHW8AEDHvABgEj0AwBm9AIA3PQCAGDwAALE7AIBMvADAn7wAIEe9AAACvADA+TwAQPS8AECvPQCABLwAQPo9AACSuwBA9zwAgMM8AECsvQCAl7wAAIe8AMD7PAAgSz0AgAw9AMDuPABAqbwAgCY9AIDCvACgHT0AADC8AMDMPADQpb0A4Hy9AADTuwCAYrwAYA29AABrPQCgDL0AwPe8AIC7vAAAEjwAYBU+AABnvQCAar0AgGO8AABDPAAgVb0AAJO7AIARvQDAobwAgKc8AEDdvABQhb0AwLQ8AECZPAAA/DoAYC89AIBqPABAwDwAANw6AADpuwBAX70AQPa8AECwPADAq7wAYCU9AACsugAgOD0=","chunkHash":"0d3ab4a23d962d89795fcd3dbdc10d0d65c2acf1b653733dc3f99a5f01dad4be"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n                        print(f\"WARNING: NaN/Inf values in volumes for batch {batch_count}\")\n                        volumes = torch.nan_to_num(volumes, nan=0.0, posinf=0.0, neginf=0.0)\n                    \n                    # Move to device\n                    volumes = volumes.to(device)\n                    if adjust_labels and isinstance(labels, list):\n                        # Convert labels from 1-based to 0-based indexing\n                        labels = [l - 1 for l in labels]\n                    labels = torch.tensor(labels).to(device)\n                else:\n                    # Check for uniform shapes in list\n                    if len(volumes) > 0:\n                        first_shape = volumes[0].shape\n                        if not all(v.shape == first_shape for v in volumes):\n                            print(f\"WARNING: Non-uniform volume shapes in batch {batch_count}\")\n                            print(f\"Shapes: {[v.shape for v in volumes]}\")\n                            print(\"Skipping this batch\")\n                            continue\n                    #...\n```","range":{"startLineNumber":325,"startColumn":0,"endLineNumber":343,"endColumn":0},"embedding":"AIDYvACAxTwAICc9AJDUvQAAXb0AkJ69AEAfvQAAwbsAQPe8AOA4PQAA0DsAgFi8ACDDvQAAALgAAF08AKAFPQBAeL0AgHM9AICzvACgKj0AgNA8AAAAPQBANz0AAMC8AIAWPQDgBL0AQHY9AMCoPADgbz0AABG9AABHvABA57wAQKO9AJCovQBgvb0AAKa8AABqPQBgaz0AAGA7AGAfvQAAibsAsMm9AAApvABQ5j0AYGg9AAAbvAAgqT0AAEq7AMCCvQCAkTwA4E29AKCnPQAA3DoAgCk8AEDQPAAA7TsAMIK9AADeOwAA7LsAwIu8AABAOgDQiL0AANY8AAAoPACASDwAwBu9ACCZvQCAFLwAAPw7AEDyvAAgQL0AAIK9AECbPAAAKjwAAJI8AEDEvACAjTwAUJY9AGAzvQAAyLwAANc7AAAXvACAHD0AwCU9AABBvQAQt70A4NC9AABQvQBAjbwA8PC9AMC4PADAFL0AgGG9AFAFPgBAiT0AAJk7AGBHPQAgmb0AEJc9AIAwvQAAMLwAIJE9AIC8PQAgTz0AYCI9AADNOwAAALwAADo9AAA9vACgfT0AYBm9AIC0PABgI70AwOy8AEC/vACAj70AgLg8AKA3PQCAnL0AgD69AAB0vABAtjwAAEq7AKCBvQCgPT0AgOM8AEB3PQBAAb0AACa9AACcOwBA8zwAwOs8APChPQAgZL0A4AC9ABDyvQBAPL0AAFg7AAARvQAgvj0AADI7AAAsPQAAErsAALA5AOBEvQBA/TwAANW8AAApPQBA7LwAgI48AAA+vABgwz0AAEA5AADIvADAojwAQLC8AIDpvADwlz0AsKI9AIBovQCAzrwAQCw9AIAIPAAAqTwAAOw7AADTPACATL0AgGO8AEB0vQCg4L0A4MQ9AAD+OwAAwjwAsIu9AMA7PQDAFL0AAAu9ADCXvQCARr0AAAy9ACArvQAA2DwAgB+8AAAdPABgc70AoDY9AADvPAAAP7wAgDQ8AAA6PADAh7wAQAu9AJCMPQAA+TwAgLY8AAAkuwCA2zwAAPK8AIBePQCgDD0AANw6AGB0PQCAZLwAwJC9AAC8uwAwpb0AwIG8AIDlPAAASDsAAHA7AACXOwCAcT0AAM87AACMvACAy7wAANg7AACcOwDAIz0AgGI8AACKPACAKTwAAJo8AABQugAgSD0AAOG7AEADvQAgNT0AwES9AOBYPQCAfTwAAIg7AIAbvQAA6zsAQNi8AADgPAAAwrwAgBq8AAAgugCAOzwAYCg9AAAUOwBA4j0AwIi8AECZvQBARD0AgEM8AEDLvADgn70AgF48ALCZPQAA0LkAAJS7AACzvADA0rwAgMO8AMDOPAAgD70AQM28AIAMvQDAxb0AgBC8AAAvvABALL0AwPc8AAD9vACAWzwAAI07AAAavQCAGLwA4Eq9AMCmPABAjbwAADK7AABLvAAAGLsAIAg9ACAFPQBgMz0AYBE9ACCFvQAAsLwAwBE9AOBpPQCAoDwAACS7AADnOwBAhTwAwN08AEAavQBAurwAALE7ACCpvQDA/DwAAKC8AIC7PABgbT0AAA+9AEDMvAAA5zwAYHS9AIBDvADAIT0AAMQ7AOAhPQAgG70AAFu8AABjvQCAbLwAYBY9AAC0ugDAorwAgCY9AMD0PACAkLwAIG89AMCLvQCAJb0AALs8AJC4PQAA37sAAKS9AIBvvQAgb70AMKE9AMC3vAAQlD0AADC6AMCsPAAAmDoAQPa8AACDvADgar0AQEq9AECUvAAADz0AgDM9AGA4vQCAXz0AgCs8AIBOvAAw4L0AoGW9AGBtvQDA0zwAAIq8AAAwOwDgSL0AwCI9AACDPAAAjrwAAJa8AKCUvQDAwzwAoGa9AAADvQCAWLwAANq7AADAuABggr0AAAE9AADQugBgWz0AgFg9AEAivQCAszwAAOG7AABmOwCAaTwAQNC8AIAfPACAZT0AAKi6AACPvQCAGbwAYL29ABCQvQAASD0AoCc9AICfPAAA+DwAgDg8AICAvABALD0AAHo7AIBDvACAzTwAQL08AED3vAAQrL0AgPQ8AADPOwCgd70AACe8AGASPQAALz0AAG88AFCBPQDgdD0A4D09AJC5PQAAszsAALQ7AIBOvQDA/TwAQJI8AGCzPQBAnj0AcNk9AIAOPABA5bwA0Jg9ANC3vQCAPT0AIMS9AADaOwCQqb0AgIk8AADivAAgU70AYNc9AADAOgBAiLwAALm7AECkPABgL70AAKY8AMCYPAAAAr0AAGY8AICyvQAgWb0AAMa7AABPvAAAEDoAAGU8AMA8vQBAx7wAAA28AACkPQAAvjsAAGG8AEAsvQAAKDoAAE67AIDbvABA7DwAsIK9AKAtPQDAoTwAAJ07AICLPAAAZbwAQEe9AIAhvABA6zwAAEC9AGCQPQDgHL0AwOA9AAAaPACA2DwAgMU8AKB8vQAA1rwAANe8AMACPQBgbT0AoBY9AADzPAAAsbwAICg9AED4vACADj0AAEC8AMC2PABgK70AQFW9AADTvAAAWLwAgKC8AEApPQBA6rwAwBC9AMASvQDAvDwAuC8+AGBsvQDA47wAgMS8AIDvPACAMr0AAOa7AACxvABAj7wAAEI8AIDHvAAAHr0AQMI8AADQugAA0TsAwCo9AKArPQCAFzwAgA88AMDMvADgc70AoAe9AKAdPQAAJL0AANc8AIAKvQDAdj0=","chunkHash":"ae473591d31516c67ffaa90ac84f72ed7e85c531e7a63d99701376078aecaeed"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n                    # Move to device with additional error handling\n                    try:\n                        volumes_stacked = torch.stack(volumes)\n                        # Check for NaN/Inf values before sending to GPU\n                        if torch.isnan(volumes_stacked).any() or torch.isinf(volumes_stacked).any():\n                            print(f\"WARNING: NaN/Inf values in volumes_stacked for batch {batch_count}\")\n                            volumes_stacked = torch.nan_to_num(volumes_stacked, nan=0.0, posinf=0.0, neginf=0.0)\n                        \n                        volumes = volumes_stacked.to(device)\n                        if adjust_labels and isinstance(labels, list):\n                            # Convert labels from 1-based to 0-based indexing\n                            labels = [l - 1 for l in labels]\n                        labels = torch.tensor(labels).to(device)\n                    except RuntimeError as e:\n                        print(f\"ERROR stacking volumes in batch {batch_count}: {e}\")\n                        #...\n```","range":{"startLineNumber":344,"startColumn":0,"endLineNumber":359,"endColumn":0},"embedding":"AAB5vAAAxjwAQNM8AGDZvQAAZL0A8Jm9AMBcvQBAkbwAoBO9AMDePAAAWLoAAN27AJCpvQCASLwAwJc8AACIPAAgU70A4FQ9AIByvADgVD0AwKU8AACduwDAUj0AAE+8AIB4PACAdLwAAEA9AIBWPABAUj0A4A29AIBovABgEL0AoH+9AIDBvQDw2L0AAKi8AAA6PQBAWj0AAFo8AAC0vADAsDwAQLG9AMCIvADA3z0A4FY9AABguQBAiz0AgCY8AKBbvQAAmzwAgO28APCHPQDAzLwAAIk7AIA8PQAAmzsAYES9AAC0uwDAgLwAANg7AAAHvADgOL0AwOc8AADLuwCA6jwAQN28APClvQAA+DsAgBm8AEC1vABAWr0AoFy9AADSPADAujwAwBU9AECtvAAA3DwAEMQ9AMCpvAAAAb0AgEQ8ACAKvQDgMD0A4BI9ACBYvQDg5L0AUMG9AIBQvQDgBL0AMP29AACJPADA6LwAACe9AED5PQDQiz0AgCE8AKBvPQBga70AQGo9ACAqvQAAkrsAwDI9AHCXPQAApTwAYE49AAC1uwAAhDsAIGg9AAC4uwDQgT0A4CO9ACAcPQCAer0AoA29AIAYvABwjr0AAM88AEDdPABQwb0AYDa9AECSvADA2TwAACg7AIB8vQBAWD0AwJE8AIBjPQAAcr0AgEm9AIAevADAgTwAAKg6AGDMPQDA8LwAwLy8AIDVvQDgSb0AgNI8AKAwvQBQqz0AABg7AEDOPAAAibsAAKQ6AKAlvQAgWT0AADy8ACBaPQBAML0AQII8AAAuvABg7T0AAEY8AADtvAAA2DoAAOG8AADIvAAgxT0AgJs9ANCSvQDgLb0AICw9AABbPAAARjwAAPO7AEAVPQBAbr0AALm7AOBevQAg0b0AUKI9AIAfPACApTwA4Em9AOBRPQCgEL0AwO68AOCMvQDAa70AYE+9AEB7vQAA3DsAgBe8AAAsPABAkr0AAEs9AGASPQAAArwAAOA5AAA2PAAALLwAwNy8AOBUPQCA6DwAQNs8AACrOwAACj0AgIe8AIB7PQAAszwAANA6AFCWPQAAZ7wAYG29AAAmOwBQtL0AgEu9AAAnPQAAPDwAADw8AACHuwCART0AAMC7AAB3vACAybwAALS6AIB7vAAASDwAgL08AIDQPAAA5DsAYC89AAAWuwBAAT0AAKE7AADTvACA8TwAgCa9AHCJPQBAvTwAAIy7AMACvQAARjsAYBC9AKAqPQAAursAAFS8AMDavACAyjwAQCs9AIAAvABQ8D0AgGS8ACDGvQAAJj0AgNM8AACmuwCgpb0AQJA8ABCKPQAAXLsA4Aa9AGATvQDAsbwAwMS8AEC+PADAlrwAIBa9AGBWvQCgrr0AAIc7AADMuwDgNb0AYAo9AICSvAAASjwAAMq7AKBJvQDAmLwA4EG9AOAOPQAAjLsAALg6AACcuwAA87sAQLM8AOAePQBgLT0AADA9AKBjvQCAlrwAgCc9AKBlPQBgJj0AAD+8AABQPACAYzwAAPE8AACTvABAi7wAAOQ7AEB5vQCAAD0AgMK8AAD7PADggz0AgFq9AMCevAAApzwAwGa9AADVvACAxjwAAPI7AAAhPQCgQ70AQJm8AECIvQAAvbsAQNM8AIADvACgCr0AABY8AIA1PQAA+7sAIJA9AGBRvQDgMb0AABc8AGCcPQCAHLwA8JG9AKBXvQDASb0AkJ49AIBmvABwlT0AAPE7AAAwOwAA87sAgAS9AACQvABQiL0AQG69AADWvADANz0A4AM9AIBPvQBAPT0AgOA8AMC5vABA2b0AgHi9AAB6vQCA0jwAgD+8AABqPADgGL0AACY9AMCsPAAA+7sAAOy8AKBcvQBALz0AsJ+9AKAdvQAApbwAgHm8AAD6OwAwob0AwA49AABQOwAgcD0A4DA9AIBAvQAA/TsAAAc8AACgOwAARTwAABi9AAAGOwCAdT0AANg6AFCSvQAAjDoAEJK9ACCCvQCAQD0AYGA9AECAPADAujwAgCA8AIAfvACA5TwAAAi6AIBbvABAwzwAAAs9AECivACg1L0AwO88AAARvADAjr0AwNK8AKBUPQBADT0AAEo8AEB7PQAAeT0AQDU9AMCMPQAA0jsAAJE7APCIvQBApDwAgA89AMCEPQAQkD0AcNs9AEC+PAAgK70AAIo9AODHvQAgTj0AYM+9AACEuwAwuL0AAJw7AMDXvACARb0AsMU9AIABvAAAiDoAAAo8AIAJPABgLL0AQJc8AMC6PAAADr0AQL48AICZvQDAUr0AgFG8AACHuwAA57sAgG48AAA8vQDAirwAAI28AJC8PQCAEzwAgHG8AMDBvAAAerwAAOm7AICUvAAArjwAIFC9AEA1PQAAALwAAGs8AAABvAAAQDoAoHO9AADGuwDAAT0AoGe9APCmPQDAxLwA0OA9AAAHPABAGT0AoAk9AACVvQDA5bwAQKW8AKASPQDQiD0AAGI9AIDuPABAg7wAgAc9AMCPvAAAvDwAgKK8AIA+PADQgL0AQE69AECqvADAkbwAwI68AOAXPQBAvrwAAPi8AIAIvQAASjwAoC0+AOBSvQAAEL0AAOS8AIDxPABAHL0AABg6AABEvAAAk7wAgKA8AIDPvADAcL0AABE8AABouwAAVjwAgCs9AKAbPQAAl7sAgIQ8AACGuwDgdr0AwBS9ACA+PQCA2bwAAB08AICwvAAAJj0=","chunkHash":"736937c9613802abbe392f2d8d49e99aa8ec8fb5e3e2d831b75b9f903a9c7597"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n                        print(f\"Volume shapes: {[v.shape for v in volumes]}\")\n                        print(f\"Skipping this batch and continuing...\")\n                        continue\n                \n                # Forward pass with mixed precision if enabled\n                optimizer.zero_grad()\n                \n                try:\n                    if args.mixed_precision:\n                        with amp.autocast():\n                            outputs = model(volumes)\n                            loss = criterion(outputs, labels)\n                        \n                        # Backward pass and optimize with mixed precision\n                        scaler.scale(loss).backward()\n                        scaler.step(optimizer)\n                        scaler.update()\n                    else:\n                        # Regular forward/backward pass\n                        outputs = model(volumes)\n                        loss = criterion(outputs, labels)\n                        loss.backward()\n                        optimizer.step()\n                    \n                    # Track statistics\n                    batch_loss = loss.item()\n                    train_loss += batch_loss * volumes.size(0)\n                    _, predicted = torch.max(outputs, 1)\n                    train_total += labels.size(0)\n                    train_correct += (predicted == labels).sum().item()\n                    \n                    # Update progress bar\n                    #...\n```","range":{"startLineNumber":359,"startColumn":0,"endLineNumber":391,"endColumn":0},"embedding":"AACTOwBABj0AoBs9ABDZvQCwib0AIEe9AAAdvACA/jwA4EG9AACiPACAajwAgDa8AACrvQAAPbwAAPY7AMBbPQBgQ70A4H89AIB/vABgVz0AgLk8ACAcvQCgTT0AAD48AMCiPABAi7wAYDc9AAAUPQBAUT0AYCO9AIBOvACA7LwAkKS9AGCzvQCg0b0AALq8AGAyPQDgRT0AAMA7AMDbvADA2DwAALC9AKARvQBg3z0AgJ49AECwvADgfT0AgH48AEAKvQDA6TwAwEi9AFCgPQAAmrsAQMk8AADZPABApjwA4Ii9AEAqvQAApTsAgDW8AADsOgAQo70AQCY9AADAOQAAXjsAgAa8AHCsvQCAsDwAAKg7AICnvACAHb0AQBK9AIAcPQAAJzwAQOE8AEARvQCAlTwAcMA9AIACvQCAJbwAgFC8AMBKvQAAMj0AQPM8AEBLvQBw0L0A0K+9AMAhvQBgFL0AELO9AIBSPADAy7wAgMy8AAAQPgAAiD0AACA6AGAYPQAgZr0AAJQ9AABCvQCACjwA8LI9AJCCPQDAED0A4C89AIANvQAAsTsAgNk8AACdOwDAUT0AAAS9AADluwAAxbwAQHm9AECfvABQjL0AAMY7AEDiPADg8b0AwAi9AECnvAAAFj0AAKw7AAB6vQDAkz0AAPQ8AKBYPQBgj70AQMi8AAAVPQBgFT0AAKg8AECaPQCgW70AAAi7AEDZvQBgZL0AQAU9AEDjvABAzz0AAFa8AMA6PQCABLwAAEi7AIB2vQBgVz0AAIy7ACBhPQBAI70AAEo7AKAdvQDQ2D0AAAe8AIDmvACAOrwAAKC6AACsvAAgYz0AcIk9AGBMvQBACr0A4Ds9AAAaOwCAozwAAHw8AEAKPQDgMr0AgFe8ACBjvQBg+b0AAFw9AIASvACAjzwAgFO9AKBpPQCAar0AgCy9AMCBvQAgYL0AAPe8AIAuvQAAZTwAQL28AICCPAAAZ70AgIA9AIBgPAAACjsAgBs8AKAkPQAAlLoAABa8AACqPQCgDD0AAIS7AIBcvACA9TwAgGq8AADNPAAAPz0AgEq8AKCWPQDAmrwAwIq9AECFvAAgn70AwIO8AACHPABAl7wAAEs8AIAdvABgLj0AAM08AMC0vAAAyrwAgHE8AADougAggz0AAMc8AED1PAAAFjsAgA08AIAFPADARz0AgIc8ACArvQCA5DwAoJG9AIAxPQAA+rsAQIE8AOAKvQBAu7wAwL68AIAfPQAgCL0AALq8AAAEuwBAHj0AIAE9AICoPADgrD0AABi8AKCGvQDgZD0AwK48AOBCvQAAm70AACY7AECDPQAA7zwAABO8AIAPvQDAvLwAANO8AIAvPADANb0AADC8AOB0vQCAjr0AAM87ACAjvQDgdr0AQLc8AABMvADgQT0AAA48AKAJvQAADDsAwFO9AABJPAAASLsAAP67AICBPAAAPrwAAK48AGAYPQCgFD0AYFs9AGCAvQCAD70AQB49AIA2PQCAPT0AQKc8AMCJPACAD7wAIB89AAAdvACAEr0AgHE8AOCmvQCAyTwAQOO8AEC8PADwgD0AQA+9AEApvQBgPT0AIJO9AAAhvAAAMD0AgJI8AKB4PQBAtL0AAHi6AAAovQAAH7wAgPc8AICCvAAAuDsAADg9AADaPAAARLwAgJA9APCCvQCAzLwAwBo9AEC0PQCAl7wAUKG9AGBovQAANr0AMJg9AACwOgBAjD0AgO+8AADuOwAAiLoAAFK9AADmOwBgZ70AgJK9AACpvACAKj0AIFU9AGBOvQDQhj0AAA09AACPOwCw6b0AoEC9ADCAvQAAgDgAwJQ8AICmPADA97wAICY9AECyPAAAYbwAgCe8AGCRvQDgSz0AALS8AADWOwBA1LwAgI28AAAEOwCQ1b0AAOs7AECIvADA7jwAgMk8AADTvAAAXDsAwJq8AEDWPAAA9DoAICy9AABkOwDgGz0AAHg7AMBHvQAAKDoAYJm9ABC5vQAAFT0A4Dk9AABEPAAASjwAIAg9AIAQvACAHz0AgB+8AIA2vAAANLsAQM08AAAwugCgbL0AoDM9AACBuwBAib0AAAs8AKALPQCgpj0AAKK7AKCoPQBgiD0AwN48AAB9PQAA4LoAwNM8AACBvQBA0DwAAGi8ADCcPQDgXz0A4JU9AICaPABAw7wA0IQ9AJC6vQAAZj0A8KO9AAAgvACwmr0AICM9AMDqvACA+bwAUKI9AADzuwAAkDoAAJa7AACxOwBA2rwAAMY7AEDbPACgDb0AAIC7AICtvQBgbr0AAOW7AMCEPACAILwAgFq8AGBPvQAAS7wAABC6ANC9PQAAnLoAgC28AMAFvQDAlrwAAJm7AOASvQDADT0AgBe9AIDFPAAA3bsAwMU8AACPOwAAODwAsJS9AMCIPAAgHz0AgD69AICePQAAH7wA8Pg9AABKuwCABzwAoAU9ADC4vQBAx7wAANu7AIDHPADQmD0AQOY8AAD4OwDAqLwAQKc8AKAuvQAA2TwAAOS7AAD9PACgPL0AkIK9AADNPADAkbwAwM68AEAVPQDA+rwAYGC9AIBrvAAAnjwAWAc+AIBjvQAAEr0AAFK7AIC2PAAAWL0AACu8AGB9vQBAk7wAQKE8AKA7vQDQjr0AAGg8AACoPAAAHrsAEIU9AKABPQCAZTwAgD08AECjvAAgGr0AAFu8AMDjPACATrwAoGQ9AEAWvQCAzjw=","chunkHash":"d589ef96211ddd544b480b85308baee8a7658ee4c2c0bc85a1e38a0264772b41"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n                    progress_bar.set_postfix({'loss': batch_loss, 'acc': train_correct/train_total if train_total > 0 else 0})\n                    \n                except RuntimeError as e:\n                    if \"out of memory\" in str(e):\n                        print(f\"WARNING: CUDA out of memory in batch {batch_count}\")\n                        # Print memory stats\n                        if torch.cuda.is_available():\n                            print(f\"  CUDA memory allocated: {torch.cuda.memory_allocated() / 1e6:.2f} MB\")\n                            print(f\"  CUDA memory cached: {torch.cuda.memory_reserved() / 1e6:.2f} MB\")\n                        \n                        # Clear caches and try to continue\n                        if torch.cuda.is_available():\n                            torch.cuda.empty_cache()\n                        \n                        # Skip this batch\n                        continue\n                    else:\n                        # Re-raise other runtime errors\n                        print(f\"ERROR in forward/backward pass for batch {batch_count}: {e}\")\n                        if \"device-side assert\" in str(e):\n                            #...\n```","range":{"startLineNumber":391,"startColumn":0,"endLineNumber":411,"endColumn":0},"embedding":"AICHvAAAgLoA4CY9AHDNvQCgJL0AoGa9AMDyvAAAhDsAAGO8AMBAPQCAfDwAgO28APCdvQAAXrwAABC7AIBKPQAAYr0AwEA9AADgOQDwiz0AwPg8AAD/OwAAAz0AAIm7AEAoPQAAILsAgB89AAC8PABAKT0AII+9AACcvABA1bwA4MK9AADDvQBAwr0AAOE7AOAHPQCAkzwAwAE9AAB2uwBA1zwAALS9AIC+vACQ0D0AgCw9AAAzvADghT0AAB48AKCivQAAQDwAYE69AECFPQAAKrsAoDA9AAABPAAAsTsAwBK9AACwvABApLwAgJG8AACAuQCgmL0AwN88AACwugAAWLsAANO8AKAevQAAwLoAgLK8AEAUvQCgjL0AoEW9AEAxPQAAfLsAQLA8AOAMvQDgfT0A4JI9AACGvAAACTwAgFo8AICPvADA5TwAoGY9AMD2vAAA0b0AOAS+AMAlvQAAsjsAEM+9AECNPAAAa7wAgCm9ABDoPQBAgz0AwJ08AADfPADAnb0A8Ic9AADnvACAMTwAAFU9AHCIPQAAZTwAQO88AACUuwAA8DoAwCg9AECxvADQgT0AUIq9AED5PAAA6bwAID69AKALvQDAbL0AoAY9AEDjPABAt70AAN28AEDLvAAAvTwAAGU8AKCrvQDgcj0AACw9AHCLPQAAYr0AwDC9AACoOwBAwzwAwB09AICfPQBAp7wAwM+8AHCmvQAAcb0AAIs8AMB6vQDAmD0AQJI8AEDlPABAtrwAwIO8AID7vABAQj0AAIC5AAASPQCABb0AgNU8AAD4OgCQ2z0AAHk8AABtvACA77wAQBu9AMDivACgiD0AYCc9AIA2vQDADL0AwDA9AADIOwBAhDwAgJM8AAAqPQCAbr0AAKw7ACBtvQBg1L0AgNk9AADZuwAAVrsA4BS9AICePQBgLL0AQNO8AEB2vQAA6LwAoAy9AMB0vQAgAj0AAN+7AEDJPABAY70AgEA9AGAKPQBgEr0AANS8AECJPAAA0jsAgBC8AGBaPQAAazwAgMQ8AAB6uwCAhzwAwCu9AGBBPQDAPT0AwNW8AOB0PQAAHbwAAJi9AECvPAAA1r0AgH68AADiPACAGLwAgCE8AADquwDAGT0AAA68AMDEvADApbwAAO27AAC8OgAgfj0AoBM9AACUPAAAwrsAgHI8AACSOwBgaT0AIBo9AAC/vAAAEj0AoFG9AIA6PQAAGLsAALa7AOBjvQAAYzwA4AK9AOAMPQCAULwAADK8AACMvACAUjwAALg6AADEOgDw2D0AAJi7AGCVvQAAMz0AAIk8AAAKvQAwqL0AAIW8AICIPQAAtjsAAMO8AGADvQCAcbwAgBK8AEDQPAAA8rsAADu9AMAZvQCA6L0AwI+8AMDjvADA57wAgBw8AID4vACgLj0AAPK7AIB0vAAAPTwAAHq9AAAjPQBAprwAACs8AAACPACAdDwAgAI8ACBLPQAAUT0AgJo9APCjvQCAuLwAABQ8AKDXPQDAlTwAAJG7AAD5OwCAJLwAgBE9AECRvAAAILkAAOy7AOChvQCAN7wAwAq9AADyPABAYD0AwC29AIAjPABA0jwAwFO9AACCuwCADD0AgLC8AGB7PQCAsb0AAPy7AAAHvQAAYrsAgB09AACJOwCAfr0AQM08AICRPAAA9rsAgOY8AIBavQAAFbwAQM08AMCxPQAA67sA4Dy9AIBQvQCAkL0AALo9AACivADgWD0AgFO8AADjPACAFrwAAHi6AACpuwCQgL0AYEC9AEDOvACAHj0AoGo9AGCDvQBAMT0AwFg9AIAcvAC4A74A4Bu9ALCHvQAAqLoAADC8AMCbPABAAb0AABA9ACA1PQCAErwAADK7AKBbvQCA+zwAkIC9AACIugBACL0AQCO9AACAOgCAg70AAOM8AAAUPABgNz0AIEc9ACAEvQAAZDwAALc7AADVuwCAV7wAQMi8AADWOwAAqDwAwIQ8APC8vQCADrwAkNW9ADCtvQBQgT0AQGE9AAADPQAA6DoAAEY8AAASuwBAQT0AAHK8AABHPAAAMDsAQDQ9AKA0vQCgxL0AQNM8AACSuwDgeb0AAOy7AMCJPADgjT0AgIc8AHCgPQDAZz0AIBE9AECWPQDAhLwAAL87AKA1vQDArzwAABM8ANCyPQCAlD0AMLE9AMDsPAAAlbwAoIA9AEDGvQCAbz0AoKe9AIAQvABAqr0AABQ8AIAGvACADL0AMMk9AAB0OwAAQDkAgCe8AECYPADAz7wAgGk9AACYOwDAibwAACE8AMChvQCger0AACw7AAAMvADArTwAgC68AOAFvQAAx7sAACY7AKCWPQAAvDsAgHi8AIC1vAAA6rwAAJE7AMD6vABgPj0AgIW9AAAbPQAARrsAAIM8AAAoOgAA17sAIDq9AADAuwAwhz0AACi8AKC7PQAAxLsAaAU+AIAcPQBAvzwAgCA8AGCOvQAAMrsAAHC7AMCfPAAgQj0A4GY9AMC/PAAAtLsAQEI9AADMugAArTwAQJ68AMC0PABQor0AgPm8AABIOwAAFbwAgEy9AMDEPACAmLwAoCO9AACAuQBAlLwAeBE+AOAkvQCwmr0AoAC9AAA1PQCgKr0AAKq7AAAcvQBAlrwAAAi8AOArvQDA/7wAAOg8AABdPAAAwDoAwH09AEA4PQAAHrsAACY8AKAtvQAwgb0AgNe8AAAGPQCALLwAQBA9AMAKvQBgEj0=","chunkHash":"4d388c6d8e63977b6842f7be3b62cec0a023a13629e733554864515ddb495dcd"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n                            print(\"This could be due to invalid inputs or labels. Consider using CUDA_LAUNCH_BLOCKING=1\")\n                            # Try to print the problematic data\n                            if isinstance(volumes, torch.Tensor):\n                                print(f\"  Volumes shape: {volumes.shape}\")\n                                print(f\"  Labels: {labels.tolist()}\")\n                        \n                        # Skip this batch instead of raising\n                        continue\n                \n                # Free up memory\n                del volumes, labels, outputs\n                if batch_count % 10 == 0:\n                    torch.cuda.empty_cache()\n                    \n            except Exception as e:\n                print(f\"ERROR in training batch {batch_count}: {e}\")\n                import traceback\n                traceback.print_exc()\n                continue\n        \n        train_loss = train_loss / max(1, train_total)\n        train_acc = train_correct / max(1, train_total)\n        \n        # Validation phase - run every validation_freq epochs or on last epoch\n        #...\n```","range":{"startLineNumber":411,"startColumn":0,"endLineNumber":435,"endColumn":0},"embedding":"AECzvAAAiTwAoE89AIDivQBAO70AoGG9AMAUvQAAqDwAYAu9AIDSPACA0zwAAP+8AEDSvQCAJrwAgIw8AMBSPQCgNr0AAIA9AADovACgiT0AoB89AAB7PADgKD0AAAA4AECvPADAlLwAYAw9AAAYOwCgjz0AIAy9AADsvAAAFb0AAMa9AECxvQDQ0L0AAPG7AIA/PQCgNT0AABs8AECBvABgAD0AEJO9AMAGvQAA6j0AoFY9AAADvQDwhz0AgBc8AICLvQCAQTwAAEe9AIBaPQAA3rsAAM08AOALPQAAALgAcI+9AECXvAAAfrsAwKm8AMCJPAAAar0AQKs8AIA/PAAAGjwAIAm9ACBmvQCAxrwAAIw7AMCsvACgZr0AoBe9ACAkPQAAuzwAwLo8AEA8vQBgQz0AcKE9AOAQvQDAorwAwAI9AMC7vADAMj0AQNQ8AIAHvQCAsb0AsAi+AIDWvAAAcLwA8PC9AADgOgAAmTsAAMK8ADD0PQAAkD0AANk7AOAmPQBwgr0A8JI9AKAmvQCAPLwAQK09AKCnPQDA1zwAgNo8AAA6vAAAgDgAYAQ9AAD2uwAAQT0AQDW9AIBTPACgLL0AYBW9AEAOvQBAt70AAKg6AACkPABQlr0AQAq9AAD+uwAA1zwAACC7AMBCvQAATT0AgLw8AMCcPQDgRr0AAPW8AAAsOwAAIT0AQLc8AKCnPQBgD70AAPG8AIDrvQAAg70AAOI8AKAPvQAAij0AAEw7ACBaPQAAPLwAAMM7AMA1vQDAuDwAAA47AKAzPQAA6bwAQMI8AAB2vAAw4j0AAJU8AICSvAAA9rsAAL28AICUvAAQqz0AYGM9AECSvQAAubwAAFA9AAAWPABAlTwAAAw7AOB9PQBgJr0AQMa8AMBcvQBQ670AMIQ9AAAAOgAAgLoAgEG9AOAyPQAA9rwAQDO9ACBRvQCA17wAAAi9ACBmvQCAyTwAAHo7AACAOwDAob0AQAw9AEDWPAAALLwAgMo8AED8PAAA/DoAQE69ABCCPQBAST0AgKo8AEDvvABAqzwAADK8AMAuPQCgCj0AgHS8AKBPPQAAEbwAQH69AACUuwAAxr0AgAS9AIA9PABAj7wAADo7AADsOgAA0TwAAJG7AAC5vABA0bwAAGK8AAAOuwDAFT0AACE9AEC5PAAA1DwAAMA8AACluwCQiT0AAPs7AEDsvACAdT0AIFG9AMAgPQCAyTwAAFG8ACAgvQAAmzwAgP28AABnPQCASr0AAAS7AICrPABA/jwAgPY8AADJOwBgvz0AQJa8AJCbvQAAzDwAALQ7AAD2vAAQqL0AgAa8AJClPQDgCT0AgA+8ACAsvQCAhbwAADW8AAAGPQAAFLwAYFa9AAAWvQBQtL0AwJK8AAA+vACAUL0AALI8AEAxvQCAGDwAADA8AGAQvQCAG7wAwFe9AABZPADA7rwAALE7AAAMOwAAGLoAgPg8AMAqPQAASz0A4C89AAChvQCAZbwAgAs9ACA6PQAA+jwAgBm8AADjOwAA4bsAoB49AICivAAAsDsAAKw8AJC7vQCAgDwAAKS7AACRPACAJj0AgAi9AADIugAgCT0AoF69AADsvAAAujwAgIa8AKBcPQAwmL0AYAm9AKAIvQAAcLoAIFE9AAAmPACgIL0AwIA8AEC2PAAAGDoA4HQ9ALCMvQAA5LwAAP87ALDJPQAAHbwA4JS9AMCPvQDgLb0AkJ89AACbOwAAjj0AAL67AGAHPQBAr7wAANC8AACZvABger0AYEO9AADAvAAA7zwAYFc9AICAvQBgUj0AoG09AADkOgDw470AwAW9ACAPvQDA5DwAAGQ7AKARPQBA+rwAoEE9AOAXPQAA9TsAQJC8AICMvQCAPzwAQD69AMCSvACAkrwAQBi9AABgPAAgd70AAHg8AIAnPADgcz0AYD49AAA5vQAAFjwAgDK8AACQOQAAPrwAYAy9AADAuwAgST0AACY7AHCOvQAAMLwAUMK9AIBRvQDgFj0AYDQ9AADlPADA3zwAYBY9AICnvACgXT0AgAM8AIA0PAAAmTsAwKA8AMA5vQDgib0A4Ag9AADOOwAAeb0AgH28AEDnPACQmz0AACq7ACCFPQBwhz0AQAs9ANCjPQCAijwAAFk8AIBnvQBgQz0AAJI7AHChPQCQhT0AMMI9AKBXPQAA9LwAQK09APC6vQBA9DwAkJy9AIAuPABAyL0AQOE8AADFuwCALL0A4MU9AECTvAAAvrsAwJG8AMC8PABgH70AgMY8AECBPQBA57wAAN87AKC1vQBQgr0AQN68AECUvACAGLwAQJ88AIAUvQAAEbwAwAa9ALCPPQAAWLoAADA7AADGvAAAWrwAABw7AEAMvQAAYD0AwG69ACAvPQAAMTwAgEI8AIBlPAAAoDoA4FK9AACCvACA7jwAQBm9APC1PQAAQLkAEAI+AABzPAAAoDsAAHC6AHCKvQAAojsAACI7AIDNPADAUD0AYFQ9ACBhPQAAF7wA4Ak9AICNvABAJT0AAFm8AABVPACAR70AoF+9AAAwOgCAHrwAgP+8AACoPACAULwAgL+8AIA1vQAAAzwAEB4+AACIvQCAIb0AAOS8AID/PADAAL0AAPA5AAAovQAAmrwAAPY7AADbvABAVr0AACk8AMCCPAAAtbwAAHg9AAAoPQBAjDwAgAu8AKAevQCAb70AwN+8AIBVPADA97wAIAo9AIA4vADgTT0=","chunkHash":"0f27f9afd5ebc4752310ad1cb500deab34751168d8f212fcdc9eb7d2217df245"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n        if (epoch % args.validation_freq == 0) or (epoch == args.epochs - 1):\n            print(f\"Validation phase started...\")\n            try:\n                val_metrics = validate_model(model, val_loader, criterion, device, adjust_labels)\n                val_loss = val_metrics['loss']\n                val_acc = val_metrics['accuracy']\n                val_f1 = val_metrics['f1']\n                \n                # Print validation results\n                print(f\"  Val Loss: {val_loss:.4f}, Val Acc: {val_acc:.4f}, Val F1: {val_f1:.4f}\")\n                \n                # Update history\n                history['val_loss'].append(val_loss)\n                history['val_acc'].append(val_acc)\n                history['val_f1'].append(val_f1)\n                \n                # Check for improvements and save models based on different metrics\n                improved = False\n                for metric in args.save_best_metrics:\n                    if metric == 'loss' and val_loss < best_val_metrics['loss']:\n                        #...\n```","range":{"startLineNumber":435,"startColumn":0,"endLineNumber":455,"endColumn":0},"embedding":"AABKvACgOD0AYE49AMD4vQBAK70AoAm9AMApvQCA8TwAgBa8AMBoPQBArDwA4CO9AODIvQAAkrwAACQ8AOBAPQBgNb0A4D09AOAjvQAAfT0AYCg9AADAugBASz0AADg8ACAqPQDAtrwA4Ac9AEDmPACACT0AoKy9AIBivACAu7wA8KK9AGBtvQBQxb0AAGA7AEALPQCACzwAQNE8AIB+vADAzTwAkJe9AADUvABg0j0AYAc9AMAXvQCQrj0AQMg8AECHvQAAKTwAYCK9AMASPQCAXLwAQIu8AACUugAAlDwA4E29AEA+vQCA/rwAQP28AMCOvAAAJL0AwEw9AEC/PAAAEjwAAOa7AIBovQCAWzwAAB88ACBZvQDgKb0AgBq9AIBgPQAAxzsAAM08AKBGvQCgLD0AALs9AACRvACA9LwAAJm8AED7vABALz0AAJI8AIAMvQBgtb0AIOy9AMCMvACASLwAMMm9AADQOwAAwLoAYD+9APDOPQBgvD0AQPE8AADCOwCgSb0A4Ec9AOAivQDAiDwA4CU9AIAiPQAgQD0AgAA9AECXPACAbTwAAEA9AAABvABA2TwAkI+9AADOOwCAar0AQEW9AKAlvQDgmb0AAEo7AACWuwAAOr0AACy9AAAnvAAAIjwAwKA8AKCbvQBgnz0AwOQ8AID7PAAAQL0AgNG8AACuvAAA/DsA4AY9AECKPQBgEr0AgO68AOCRvQCAIr0AgGs8AGByvQAw0T0AwIO8AKAVPQDAprwAAEC8AMD2vACgFj0AALA6AMB7PQAgNL0AwKE8AACsuwAA7D0AAJA7AACRPAAAv7wAAMW7AGAFvQAgTD0AgP88AOCrvQBAQb0AkIU9AEDAvAAA6LoAAOw8ACAUPQDAcL0AAIS7ALCRvQCgyb0AANc9AADEvAAABLwAwGq9AMAePQCAEr0AwK+8AOBfvQAAOL0AQPi8AOBUvQAAsTwAwKi8AEDGPADAar0AwO88AEC6PADAxrwAANA7AMDHPACAxzwAwKu8AOCdPQDAlDwAQNE8AIA7vACAUTwAQIu8AGBVPQBAez0AgAC9ACAyPQAAZDsA0Lm9AAABvADwrb0AgKW8AAA6OwAADLwAABs8AAAYOwBgVD0AALw8AABHPACAIL0AwIA8AICMvACgKT0AYA49AIA9PACAELwAQJG8AKAGPQCAUD0AQPA8AKAEvQBAMj0AQPS8AEBTPQAAOLwAwIk8AMB+vQAA57sAADy8AGBSPQCAPb0AgMa8AACOuwDA5DwAAKs8AIAJPADA5T0AwBC9AGBSvQBAEz0AwKo8AGArvQCAnL0AAMS6AFCpPQAAFzwAAAC7AED+vADgML0AgO08AACTPAAAGDoAAAK9AOCJvQDgdr0AQPe8AECkvADAFb0AQBo9AAA4uwCAAD0AAMa8AKB0vQAAY7wA8JS9AIDAPAAA5LsAAIw8AAAAPQBgCj0AQJU8ACAdPQAAZj0AgEM9AFChvQCA87wAAKE7ALCjPQDAGD0AAKC8AACUPAAA8TsAwNQ8AACqOwBAET0AABi7AACsvQAAKjsAwBG9AMC9PABQiD0AACG9AACMOgAApDwAwMS8AIB+PABAnTwAgBK9AJCOPQAQuL0AQK08AKAuvQAAjbsAwBY9AIDPvACA67wAACE8AEAvPQBAorwAoAs9AEBEvQBAgLwAgG09ABCUPQDAvbwAsKq9AKBTvQBgb70AkKg9AIAmvQBgQT0AQAC9AAAXPADA2rwAwLU8AICTPABgYb0AwEK9AADiuwBgEj0AoKU9AECXvQDghD0AADo9AAB4PAA4Br4A0I29AIDGvQAAILwAQOY8AAD2PAAgPr0AwDI9AOAGPQAApLsAAEK7AIBxvQCA7zwAgDG9AABrvAAAIb0AAAa9AEDlPACQkb0AAMi6AIAFPADA6DwAANE8AMCkvAAAHzwAAHq7AIBSvAAAWbwAgGa9AAB4PAAAJjsAAPQ7AMBNvQDAnzwAYMO9ACArvQDgZz0AAD89AMASPQCAjDwAAJ88AECwPABgSD0AAEW8AACruwAAgjsAQK08AAD9vAAAgb0AYFk9AACJuwCwnL0AAKU7AIB1PABwgz0AACC7ADCqPQBwgz0AYD09AACVPQDAurwAAJA8AMCpvQAAMDwAAH67AEBIPQBgCz0A0LE9AEC/PAAAILoAYJg9ABDxvQAAfD0A4Ki9AABAuwBgY70AADw8AABRvAAAA7wAEIY9AADLuwAA8LoAoCo9AABeuwDAw7wAwDE9AIDoPADAmrwAQJc8ANC4vQAAdb0AgHq8AAD1uwAAbLsAAPI7AOAvvQCAZzwAgCO8AHCkPQAAGzwAgNc8AIA2vAAAwrsAAPQ6ACBFvQAgTD0AsJe9AIAMPQAAXbwAgLM8AADJOwAAMrsA4C+9AACWvAAgHT0AgMq8ABDSPQAArLsAMCk+AMDyPACAPDwAgHs8AJCCvQAAnzsAADq8AMC8PABQhT0AwJM9AID8PAAAGb0AgLU8AADVvAAA1LsAAI07AEDaPABga70AgN68AACAuQAAlDsAAOC8AEAKPQAgOb0AgMO8AACpvABA7LwA6A4+AABbvQBAc70AwLa8AAA2PQAAa7wAADA8AABfvABAmrwAALq7AIAqvQDgK70AwOc8AICTvAAAv7sAIBI9AABaPQAAGLsAYGE9AIDzvACghb0AAOa8AMDBPAAA8bsAAJ88AOAlvQCAKj0=","chunkHash":"6bae9babc0bcc4c342c5c2de41c6b4ba70ec2a4631bab8fd89c94943ca9f470f"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n                        best_val_metrics['loss'] = val_loss\n                        best_model_states['loss'] = model.state_dict().copy()\n                        improved = True\n                        \n                        checkpoint_path = os.path.join(args.output_dir, f'vgg3d_best_loss.pth')\n                        torch.save({\n                            'epoch': epoch,\n                            'model_state_dict': best_model_states['loss'],\n                            'optimizer_state_dict': optimizer.state_dict(),\n                            'val_loss': val_loss,\n                            'val_acc': val_acc,\n                            'val_f1': val_f1\n                        }, checkpoint_path)\n                        print(f\"  Saved best loss model to {checkpoint_path}\")\n                    \n                    if metric == 'accuracy' and val_acc > best_val_metrics['accuracy']:\n                        best_val_metrics['accuracy'] = val_acc\n                        best_model_states['accuracy'] = model.state_dict().copy()\n                        improved = True\n                        \n                        checkpoint_path = os.path.join(args.output_dir, f'vgg3d_best_accuracy.pth')\n                        torch.save({\n                            'epoch': epoch,\n                        #...\n```","range":{"startLineNumber":455,"startColumn":0,"endLineNumber":478,"endColumn":0},"embedding":"AACuvABA0zwAIEE9AMDbvQCAB70AwGm9AKBTvQDAizwAAGA7AIAePQDA3jwAAEK8AAB+vQCAkLwAAFA8AEA3PQBwiL0AgCA9AACAOQCgZT0AAOw8AAAwOwCgIz0AQLA8AIAFPQDAtrwAgOw8AADMugBADj0AEIe9AECfvADAwLwAMI+9AICUvQDQx70AgEE8AMD9PABA7jwAAHc8AAAEvAAAXDwA0Jy9AECEvAAw3z0AQAg9AICsvADwoj0AwOc8AKCSvQDAtTwAABO9AMAsPQAA1LsAALA7AMDKPAAAi7sAgNi8AOBdvQBA+LwAgPS8AMDIvACAPb0AoDM9AIAbPQBA0TwAgBy8APCbvQBAAz0AAIG8ADCAvQAATL0AQEO9AADjPAAASDoAAAM9AMBTvQAgLT0AEKM9AADpOwCAFL0AAKC6AICuvADwjz0AwJE8AKAgvQCwtb0AoP+9AIDUvAAAkTsA4OG9AICfPAAAsbsAQKm8AFCsPQAgnT0AgJw8AACfPABAXb0AgEk9AIAfvQAAKjwAQD49AKAhPQAACT0AgAY9AICHPAAAlzsAAMU8AIAnPAAgFT0AwFy9AIC5PAAASb0AAO+8AACPvADQw70AADs8AEDMPABAQL0AAAa9AACUOgCgFj0AAN48AGCyvQDgoT0AQEc9ACAsPQDASr0AQLO8AKAJvQAAIDkAQO08ADCpPQBgeb0AAHm8AICcvQDgdb0A4Ac9ABCHvQDAvz0AACS8AACwPABABb0AADI7AAAovQBgGT0AAMC6AGB9PQDAab0AANA8AKATvQAQ3T0AAEc8AIDzPADArLwAwOa8AMDlvABAZD0AYD89AECnvQCgRr0AgGg9AID/vABAsDwAgOM8AEBMPQCggL0AAFU8AKB0vQAw8b0AQNI9AIATvAAABzwAABq9AMBFPQAgQb0AwA+9AIAyvQBAab0AQMm8ANCBvQCAIzwAgEu8AICgPABgR70AAFc9AABuPACAGL0AALk7AGAVPQAAaLoAAEO8AGCBPQBAgLwAgFM8AMDMPACA6TwAAES8AOBsPQDgjj0AgBa9AGBfPQCAw7wAYKe9AED1vAAgpb0AQBm9AIAhPAAAEbwAALm7AIBJvABwhD0AALQ6AMAJPQAAuLwAANu7AAAAuwCAnD0AAOQ8AABbPACAJbwAQKm8AACJPADAOD0AgH88AMAAvQAA1DwAwCW9AIBtPQAAerwAAAI8AOB6vQCAALwAAHq8AIDlPAAAP70AQM+8AMCHvABAET0AwPY8AACyOwDQvD0AAJO8ABCBvQBA1zwAAJA8AED3vABAqL0AgAm9AACePQDAoDwAANa7AMDnvACgNb0AAK08AIAJPAAAsDoAABi8AKBGvQAgpL0AAB28AMAEvQBA+7wAQN88ACAYvQDAHT0AwPy8AMAfvQAAS7wAQE+9ACBBPQBAkbwAgH88AMAPPQAA0jwAAJ67AOASPQAAFD0A8LE9ALCKvQCgEr0AAGU8AOCvPQBgZD0AAHC8AACnPAAA+LoAwO48AAAUOwBAAD0AALO7ALCTvQAAADgAoAO9AAAaPQCAjz0AQBW9AABWOwAALjsAYBi9AICPPACAuzwAQAK9AIC4PQDQrr0AAB67AGAYvQAAKrwAADA8AAAGvQAAkbsAAL08AAA+PQDA4bwAQP08AJCEvQDAsbwAAAY9AGBZPQAATjwAsIq9AIBUvQDAR70AQHU9AEAWvQDAXj0AgCC9AIDXPACA0bwAgJ88AACAPAAARb0AYDO9AMCKvACAqTwAYKQ9ABDEvQDgtj0AgCc9AADoOgDQKr4A4G29AKCmvQAAGjsAgA88AEAjPQAA2LwAwBQ9AIDWPACArLwAAE67AIAlvQDAvTwAIHu9AAC2uwDgEL0AYDO9AICYPACAbL0AACs8AACfuwCgDT0AoCE9AACbvAAAlLsAAIW8AAC1vADAubwAgLC8AAAdPAAA0LsAQI48AIBbvQDAOj0AwL69AGAWvQDgST0AMIg9AAAIPQAA7jwAQNc8AADROwDAQj0AgC68AAAwuwAAFLsAYDE9AIBUvQBASr0AIDo9AAD8ugBghr0AAHM8AMAUPQBggD0AgKw8AAChPQBgNT0AYBw9AOCaPQAAGDoAAKY8AHCLvQAARrsAgGc8AGCOPQBAHz0AoLg9AACvPAAAFLsAgLk9AEDBvQCgjj0AEKO9AAC4OwCAkb0AQOo8AADcvADAlLwAoDg9AIBAPAAAgDgA4B09AAAgOwDAybwAABg9AMACPQAAfbwAgKU8AOC3vQCgab0AQJ68AAD0ugAAbDsAgNk8AABavQCAQjwAAAs8AOCkPQAABDsAgBY8AOACvQCAz7wAAAi7ACBQvQDA7jwAkI+9AICDPAAA97sAAP08AABAuwAA1LsAgAm9AAAPPAAAUD0AwJS8ADDRPQCAcLwACA0+AIAwPAAAnDwAAOs7AMBEvQAAQjsAAOC6AIAXPAAwkT0AgFY9AADzPACAorwAgKQ8AOASvQBAtLwAAII7AKBUPQBAkr0AgL28AAC0OwAAjbsAgBW9AEDLPACANbwAoCy9AAB6vAAAVLwAYBM+AAAIvABwlb0AgKK8AGBNPQAAOLoAAFA7AAAiuwCAmrwAANE8AGA0vQCAHb0AQO08AIBKvAAAnzsAgLc8AGBVPQCAvbwAwH49AIChvACgn70A4Aa9AADcPAAARrwAgC89AAD3vABgDT0=","chunkHash":"fc0732e891e8406212f9196fcc59cc8dc1d20af8fb6c7ab6009e8f5551cf3e98"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n                            'model_state_dict': best_model_states['accuracy'],\n                            'optimizer_state_dict': optimizer.state_dict(),\n                            'val_loss': val_loss,\n                            'val_acc': val_acc,\n                            'val_f1': val_f1\n                        }, checkpoint_path)\n                        print(f\"  Saved best accuracy model to {checkpoint_path}\")\n                    \n                    if metric == 'f1' and val_f1 > best_val_metrics['f1']:\n                        best_val_metrics['f1'] = val_f1\n                        best_model_states['f1'] = model.state_dict().copy()\n                        improved = True\n                        \n                        checkpoint_path = os.path.join(args.output_dir, f'vgg3d_best_f1.pth')\n                        torch.save({\n                            'epoch': epoch,\n                            'model_state_dict': best_model_states['f1'],\n                            'optimizer_state_dict': optimizer.state_dict(),\n                            'val_loss': val_loss,\n                            'val_acc': val_acc,\n                            'val_f1': val_f1\n                        }, checkpoint_path)\n                        #...\n```","range":{"startLineNumber":478,"startColumn":0,"endLineNumber":500,"endColumn":0},"embedding":"AACYuwDAxTwAIEo9ADDNvQBAQL0AAGS9AEBevQCAhTwAAJS7AKA4PQBAEz0AAN+7ANCtvQDAu7wAANQ7AOBEPQCgaL0A4EE9AAAguwAgAz0AQK48AIAtvAAAYj0AAEA7AADTPABgEL0AQKs8AICzvABAwzwAQHy9AED2vAAA27wAwH+9AIB6vQDA2L0AAPk8AGAHPQAAfjwAAKU7AIA8vACAdzwAYI69AIA8vABg4D0AgKM8AMCuvABAej0AAPQ8AMCHvQBAEj0AICm9ACAWPQCAjLwAAP08AIDPPAAAqbsAAKs7AGBwvQBAoLwAQLK8AABlvADAEL0AoBE9AOBBPQCA6TwAAJu8AGCzvQDAID0AgIy8AABgvQBAfL0AgM68AECoPADAoLwAgMQ8AKBevQAACj0AsLg9AACtOwBAQL0AgDG8AACnvADAxz0AgAc8AKAcvQAAvr0A8OG9AIAAvQAAEDsAkO+9AEAHPQCAYbwAAH68AICzPQDwpD0AgJ88AMCXPADAar0AQBQ9AMACvQAA/zsA4CA9AEC4PAAgBz0AQAo9AIARPADAkTwAQOg8AAAkOwDAvzwAQGW9AADDOwAAT70AAMG8AEDUvABgq70AAJ67AEC0PAAAU70A4CO9AAAyPADAIj0AQK88AICvvQDAhD0AIDw9ACAQPQCAu7wAQI28AICcvAAAOLwAAKE7AGCpPQDQkb0AAES7AECuvQAgT70AAKg8AGBjvQDQqz0AgHi8AAB5PAAgOb0AAAg7AMAavQCALj0AAMG8AOBmPQCgJr0AgGc8ACAqvQAg9j0AgGw8AECRPADABL0AAIO8AECcvACgZj0AIEE9ADCNvQAwhL0AgGk9AAC7vACARDwAAKc8AKAkPQAwnb0AAOc7AABsvQDA9r0A8Ns9AABCvAAAMzwAgPa8AKAoPQDAfr0AAGe9AACkvAAAer0AwJ28AGBwvQAAZLwAYBO9AIDqPAAABb0AAHE9AAD+PADgC70AgDg8AOAGPQAAvjsAQMa8ACByPQAAZbwAAOA5AEDKPABgKT0AgFm8ANCHPQAQpj0AYDC9AOAPPQCAe70AcMK9AKATvQDQqr0AgL+8AECfPACAwbwAAIW7AADKuwCAqT0AgCY8AID/PAAAFr0AgNg8AACwuwDAWD0AYCA9AICSPACgBL0AgIO8AED1PADAbD0AAMs7AIAdvACAzTwA4Cy9AIBKPQAA3LsAgDq8AMB4vQAAFrwAAD28AIDGPADgP70AgHy8AAByvACAGD0AQDY9AADcOgDQuj0AwPa8AOBrvQDA7DwAwKU8AMDkvADApb0AACe9AACYPQDAijwAAIe7AEACvQCAYL0AAG47AAB4OgAAyjsAACK7AIAkvQAgjr0AAIO8AIDuvACAnbwAIAg9ACBAvQCgLz0AALG8AMAqvQBAy7wAwF+9AGAbPQCAfbwAgLU8ACBEPQAAeDwAAE28AMAHPQDAPj0AAG49AMBKvQAAurwAQNo8AOC/PQDAgT0AALu7AACOPAAAVDsAANQ8AACUOwCAizwAAEA5AABVvQAAyDoAwIe8AGAlPQAwij0AYDu9AAAgPAAA0DwAQPW8AADQPABA3DwAgEq9AHD1PQBAtr0AALq7AKACvQAAlbsAACC6AADuvAAAsLoAgE88AKBCPQAAibsAwNY8AICJvQDgCb0AAGI8AIBWPQAAHTwAgIi9AEBpvQDgNL0AgE09AAAyvQAgRD0AQPS8AOA3PQCAsLwAABg8AAA6PADA+LwAwCK9AIBHvACA4TwA4KA9AADGvQBgsD0AwA09AACruwBoNr4AAGO9AECwvQCAZDwAALG7AKAVPQCA37wAgMg8AAAQOwBAs7wAgG48AIBQvACA5jwA4Im9AICBvADAKb0A4Cy9AECMPACQkb0AACS7AAAqvACgHD0AYAc9AAClvAAAULoAAAg8AIDMvABgOL0AAJG7AGArPQAAV7wAABo8AMA8vQBAeT0AcMW9AMACvQBgWj0AgHw9AADuPAAAMD0AgPU8AIAxPACAOT0AAOi6AACAvAAA77sAQDc9ACB2vQCgG70AQAw9AAAuvADwkb0AoA09AAAZPQDgBz0AwBM9AECDPQCgLj0AwPA8ACCNPQAA9jsAAEM8AIBrvQAAjLsAwAw9ANCQPQBA7DwAkLw9AAA4PADA5LwAgKY9AOCgvQCAVz0A8LS9AECDPABAkL0AAI87AAAavQDApbwAgC49AICFPAAA1bsAwMo8AAAhvABA2bwA4Cc9AOATPQAAkLwAgCM9AEDAvQAAN70AwAK9AAAoOwAAMTwAIDI9ACBpvQCAXjwAAOw7AFCjPQAA4LsAALg6AEARvQAAprwAAMu7AOA2vQCAWjwA4J29AADvOwAA8LoAwOU8AAD4ugBAqrwAwOe8AADVOwAgFz0AwIm8ABDUPQBAr7wA8NU9AAAougCAwjwAAJk7AEApvQAATjsAALs7AADEOwAAzD0AIDk9AECSPACArLwAAHw7ACBQvQAA3LwAADQ8AEBtPQDQjL0AwNu8AAAyPAAAs7sAwJK8AMC4PAAA2LwAAOm8AECcvAAAgjsACBo+AECDPADQi70AgMm8AEA6PQCAJDwAAAC4AIBYvABAirwAQN88ACBcvQCAybwAAME7AABRvACAXrwAAPE7AIBOPQDA5bwAUJI9AICivABwlb0AQBe9AABBPACAgjwAgOw8AEARvQBgGz0=","chunkHash":"1278059cb75e4eba06681653d73331ecbf9b4e1ad477faa8d2620e160a73d8c3"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n                        print(f\"  Saved best F1 model to {checkpoint_path}\")\n                \n                # Update early stopping counter\n                if improved:\n                    patience_counter = 0\n                    print(f\"  Found improvement in tracked metrics!\")\n                else:\n                    patience_counter += 1\n                    print(f\"  No improvement in tracked metrics. Patience: {patience_counter}/{args.early_stopping}\")\n            except Exception as e:\n                print(f\"ERROR during validation: {e}\")\n                import traceback\n                traceback.print_exc()\n                # Continue training even if validation fails\n                history['val_loss'].append(None)\n                history['val_acc'].append(None)\n                history['val_f1'].append(None)\n        else:\n            # Even if we don't validate, add placeholders to keep history aligned\n            history['val_loss'].append(None)\n            history['val_acc'].append(None)\n            history['val_f1'].append(None)\n            #...\n```","range":{"startLineNumber":500,"startColumn":0,"endLineNumber":522,"endColumn":0},"embedding":"AABYugCAkjwAoHo9AGDnvQCgeb0AoCW9AMARvQAAuzwAAGq8AEB0PQBAyjwA4Cy9AKDivQAA/rwAACO8AEBLPQCAgbwA4FE9AACsvACgWT0AYBQ9AABmvADgWz0AgFw8AEBxPQCgGb0AAGs8AABOOwBACj0A8I69AACDvADAtLwAQLG9ACBdvQAwy70AgEM8AMBoPQAAqDwAQIE8AABevAAA6jwAIF29AABYuwDA8j0AgBQ9AMCJvABQwD0AIBM9ABDLvQCAnjwAAGa9AOAOPQBA9LwAAMM8AADYOwDgCz0AoA+9ACA1vQDAtLwAAFW8AEDbvABAgr0A4AQ9AIDgPACA5zwAAPy6ALCXvQAA+jsAQKy8AGANvQAgbb0AQLe8AAABPQAAjTwAgJc8AGBLvQBAJD0AAN49AIAIvABAJr0AAHq8AACVvACAbj0AgAg8AIA5vACg370AUPa9AECTvACAI7wA0Nm9AADJPAAA/jsA4DG9ADDSPQAgqz0A4DI9AADHOwDAL70A4CE9AAC0vAAA8zwAgNQ8AAAfPQBgNT0AACQ9AICNPACAQzwAwC89AIBdvACAJT0AEIi9AAAQOwBAgb0A4BK9AKBDvQAQib0AAMO8AKAaPQCAHL0AoGO9AAAQugCAaTwAAO87AEC4vQCAhz0AoC09ACADPQBgK70AAO+8AEAwvQAAUTwAwJM8APCDPQDAhLwAgOu8APCivQBALb0AwLA8AAAnvQBAsT0AALK8AAA+PABgC70AwNG8AOAlvQAgND0AAC88AMA9PQAAI7wAQNE8AADcOwCA9j0AACk8AAClOwDAFL0AANm7AECUvADAED0A4AI9AMBNvQBAVr0AkIc9AED5vAAAhDsAwNk8AIB0PACALb0AgAm8ALCPvQBQ2L0AcL89AMDCvADAobwAQCq9AABkPQAARL0AYCC9AEAGvQAQhb0AAMm8AICXvQCA4TwAwOq8AICrPADA57wAIDQ9AAAQPQBA1rwAAJS6AEDzPABA0TwAgO+8AJChPQCAZzwAAPw7AAAJvACASTwAAFS8AIBCPQBQrD0AADq9AMAnPQAAYbwA8Ii9AIC2vAAwjb0AIAO9AEDkPADABr0AABg7AIA4vADgcj0AQMQ8AAA5PAAgCb0A4DY9AABPPADAQj0AQCY9AEC+PACAT7wAwNa8AIAoPQCghT0AgLI8AEDEvADAWD0A4CW9AEDbPAAAoLsAANc7AECKvQAAJrwAAL68AGB2PQDgGb0AAE+8AAAcuwDAHz0AoCo9AABVPADQxT0AAEa8AMBcvQBgFD0AwMI8AAA8vQDwnL0AgBa8AODGPQBA6TwAAA88AGAHvQAgO70AADI8AMCYPAAA7jsAIC29AHCBvQBgR70AoA29AMCEvACAUb0AQM08AACavABgCD0AgE28AABhvQCAFrwAwEq9AACcPACAZrwAQI88AIDiPABgCT0AAMk7AEAYPQDgcz0AQDE9AJChvQBAl7wAgDw8AOChPQCgHj0AAO67AECePAAA4LoAgN48AAAIOwCANDwAgM+8AIBIvQAAfrsAoE+9AEDOPAAghj0AgCS9AAArPACAGT0AQKK8AAC0PACAETwAIB69AICtPQDQxL0AAKE7AACQvAAAIjsAgFc8AMDfvADAo7wAgLQ8AECQPAAA2LsAwPA8AGB6vQAA77sAIBc9AACYPQCAC7wA0J+9AGBWvQBgZ70AUM49AIAHvQBAfD0AABq8AEDuPABAh7wAgKU8AAD2OwAAZL0AQDy9AMDkvADAvTwAgIE9APCsvQBgYj0AoDI9AADWPAD4Er4AMJC9AJCxvQAAYLsAACa7AIB9PADgGr0AoAM9AMCPPACAQ7wAgPa8AOBovQAAwTwAAF29AICzvABgHL0AYDq9AECNPABghr0AADI8AIBrPADAzzwAgOA8AACIuwAAfjsAACI8AACduwBgDL0AQO28ACAtPQAAGDoAAG67AMCHvQDAkzwAYM+9AEB4vQCwlT0AUIg9AAAnPQAAyjsAgOU8AIDTPAAgRj0AgCS8AABcOwCABjwAwCI9AMAkvQCgfr0AwCU9AECZvABwm70AALw7AIDHPADgYD0AgKA8ANC6PQBAtT0AACk9AIBuPQAAlbwAAIO7AKBzvQBgGD0AAO47AECAPQDACD0AcLI9AMDdPAAA0LsA0Iw9ABC7vQDgSD0AEKm9AACFuwBAZ70AAJE7AID/vABAAr0AoFw9AABlvAAA/jsAAFM8AACQOgBA27wAAO08AGAcPQCAILwAABY8AFC2vQDAMr0AANS6AIAlvAAAcDsAAEC7AEBBvQAAnDsAwKO8ABCPPQAAuLoAACC7AAC7vAAABDsAgHY8AMA4vQDAMz0A4Gu9AGApPQAAULoAgBc9AAC8OwCAQ7wAgCy9AACFOwCQgj0AQLG8AIC9PQAAYbwA6Aw+AOABPQBAlDwAQBo9AOBdvQAAEDsAAP27AADsPADgjz0A4Fg9AEDePADALr0AAIC6AKAFvQAA7zsAAMo7AOA0PQCwjr0AAK28AIA3vACAELwAIBi9AMC8PADAVL0AANA5AABGvACgBb0AABI+AABjvADQhL0AQNq8AIDsPACAIjwAAFI7AEDtvABAnbwAwJ+8AIBWvQBA6bwAADy7AEDzvABAirwAwB09AGAxPQDAjbwAwCg9AMCwvACAgr0AwJC8AAAqOwBAvDwAQLk8AMAkvQCgBD0=","chunkHash":"dfa365c8670ff9f9e29561d6e8acb76a3c8766be8886eda6b1ed696a71d6ae81"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n            print(f\"  Skipping validation this epoch (will validate every {args.validation_freq} epochs)\")\n        \n        # Print epoch summary\n        epoch_time = time.time() - epoch_start_time\n        print(f\"Epoch {epoch+1}/{args.epochs} completed in {epoch_time:.2f}s\")\n        print(f\"  Train Loss: {train_loss:.4f}, Train Acc: {train_acc:.4f}\")\n        \n        # Update history\n        history['train_loss'].append(train_loss)\n        history['train_acc'].append(train_acc)\n        \n        # Update learning rate with scheduler if enabled\n        current_lr = optimizer.param_groups[0]['lr']\n        history['learning_rates'].append(current_lr)\n        print(f\"  Current learning rate: {current_lr:.6f}\")\n        \n        if scheduler is not None:\n            if args.scheduler == 'reduce_on_plateau':\n                scheduler.step(val_loss if (epoch % args.validation_freq == 0) else train_loss)\n            else:\n                scheduler.step()\n            #...\n```","range":{"startLineNumber":522,"startColumn":0,"endLineNumber":543,"endColumn":0},"embedding":"AAClvADA0zwAACM9AKgFvgAAE70AwAu9AMAEvQDABz0AgIy8AOApPQCAKTwAoEu9AAC6vQAAtLsAAJW7AMBBPQBAE70AoGI9AGA4vQBgmj0AQDQ9AACAuQDgJz0AQIc8AAB5PQDgA70AQEQ9AAAgPQDAFT0AcI29AMDivADAwbwAYLe9APCEvQCgtL0AAIy8AMA0PQCA6DwAAAw8AACMvACAdTwA4M29AACDvACw0T0AQEA9AEDivABwlT0AQJc8AICFvQAAQzwAoBS9AMAsPQAAiTsAAEC5AICCPACAgTwA4FG9AOAxvQDA9bwAQKi8AACmuwBAXb0AwPg8AMA8PQCARzwAAGS7AGByvQCARjwAAGa8AMDzvABAW70AQFO9ADCMPQDAoDwAgK48AKAOvQAA3DwA0ME9AACKvACAvLwAAKA6AEALvQDA3DwAQKQ8AMD7vAAwzb0AYOy9AABsvAAArbsAwKi9AIBEPACAEbwAQGC9AODWPQCQpj0AgKs8AABQPAAwhL0AoEU9AACFvAAAwTwAwBM9AED4PACAPj0AQPM8AIAtPAAAhLoAAGE9AADsuwDA+DwA0Iu9AMCDPACAPL0AwHS9AMA0vQCQpr0AACK7AADFOwDAer0AIEi9AADJuwAAAjsAgCo8AOCgvQCQiT0AgPk8AGBLPQCAPr0AAD+9AIAdvAAAHDwAgNM8AMBlPQAgEb0AoCC9AMCrvQAAZ70AgEs8AMBWvQBA7j0AAIY7ACAbPQCAHLwAAC68AIDTvACgEj0AgBo8ACBbPQAA+bwAgBQ9AADVOwCA+j0AQKc8AAAsPABgGL0AoAK9ACAFvQCgXT0AQBo9AGB3vQDgQb0A4IA9AIB5vACAZbwAgEM8AICpPAAgJL0AAAi6AJCIvQCw1L0AYMA9AMDQvAAAhrwAYEu9AAB/PQAAv7wAAIC8AGBavQBA6bwAAM68ACBSvQDA2zwAoAC9AAB7PABAC70AgMM8AIBrPAAAFb0AAAA4AGAQPQAAkDwAQIq8AACVPQAA8TwAQKk8AAB2vAAAdjsAgKS8AOAiPQAAbT0AAHS8AEAwPQAA/LoAIJ69AACkOgCgi70AAAK7AACzuwAABDsAgD88AACrOwDAPT0AgL08AAAnPABAxLwAAGo8AAAAuwDA1zwAYDM9AACsOwAA1LoAAHS8AADfPAAAbD0AgCE9AIBWvQBgQj0AAA+9AOAfPQAAMDsAgGk8AABBvQAAfjsAgJa8AGB7PQCgKb0AAMO7AADGuwCAfzwAgMc8AAAZPACg1z0AgPG8AKBWvQDgVj0AgIE8AKARvQCAiL0AAKC7AGC2PQCAiDwAAHC6AKArvQAA2LwAADg6AAAhPQCAKDwAwEa9AOBqvQDwkL0AAGe8AACivABA4bwAQEk9AAC2OwCAzDwAAIS8AGBZvQAAwjsAwIW9AMCkPAAAArsAgDo8AABQPACgED0AAMA7AEAPPQDgIz0AwEI9APCZvQDAD70AANC6AECnPQAADD0AgA28AECmPAAAUjsA4Bo9AADXOwAAGzwAAJU7ALCWvQAARrsA4DW9ACAXPQDAqT0AIAG9AAAGOwBAvzwAgCq9AAAwPAAAJT0AADC7AMBWPQBg270AAKQ8AAA+vAAASrsAYEE9AMCPvABgWb0AgOg8AACzOwBAtrwAQEY9AKAZvQDAtrwAYFM9AICsPQDAAL0AwKK9AIA2vQAgb70AQLk9AMDSvABA9DwAQLW8AABKOwBAzLwAAK08AAAzPAAwq70AkIm9AAAyuwCABT0AAIs9AFCPvQBAZD0AYB09AKAoPQDQ9L0AwG29ABC/vQAAxLwAAJm7AIDXPABgdL0AwOs8AKAwPQAAgLwAABu8ADCNvQAAlTsAYCq9AABeuwBgIr0AoAW9AECAPADwrL0AAAQ7AACqPABAAT0AQPM8AEDevAAAUrsAAPQ7AADlOwAAvbwA4FG9AAC0OwCAwzwAAHi7AMCRvQCAf7wAUKC9ABCGvQDAKz0AIFM9AMD6PACAEDwAAAo8AAD7PAAAjz0AgM28AADIOgAATDsAAIY8AAAMvQBQj70AIAc9AADsOwDgjr0AAIi7AAA5PAAQrD0AALC5AECwPQCghD0AQFI9AHCTPQAAuLsAgLY8AICMvQBA5zwAAH28ACBCPQAgRT0AsKY9AABLPAAA0rsAUIA9ABDPvQCwgz0AoL29AAC9OwCwnb0AgAg8AIDLvAAAfrwAAJ89AABcuwAAFzwA4AQ9AACGOwAAFLwAoFc9AMADPQBAhLwAALE7AECkvQAAUb0AAAC8AADEuwAAvzsAgCI8AAA4vQCAJzwAAPq7ALCcPQAA/zsAoAA9AIB1vAAA2rwAAKo8AMBEvQCgQD0AoD69AKBePQCA67wAADs9AACJPAAAGjsAwCS9AAAcOwAANz0AAPK8APC1PQAAeLoAMBk+ACAbPQCAjDwAICQ9AAC6vQAAgDkAABI7AEC+PADAVz0AYHY9AEDDPABA8bwAAHo8AMC9vADAxzwAABU8AIC3PACAZ70A4Bi9AABuvAAAtjsAYCu9AECuPABgJL0AAI28AICvvAAAO7wAMBA+ABCHvQDgXb0AAJ67ACBfPQDAvrwAQJk8AID/vADAkrwAQIW8AIA1vQAgib0AwLM8AMCUvAAAS7wAgAs9AMA2PQAA7DsAoCo9AKA3vQAwm70AYAm9AIBlPAAAmLoAgHE8AOApvQBAMj0=","chunkHash":"b6562642c7ac50c895ea87018c7fe2659f585e9fdf0e84a1e138c3c765b43b58"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\n            if optimizer.param_groups[0]['lr'] < current_lr:\n                print(f\"  Learning rate reduced to {optimizer.param_groups[0]['lr']:.6f}\")\n        \n        # Clear memory at the end of each epoch\n        torch.cuda.empty_cache()\n    \n    # Choose the best model based on validation loss if available\n    best_metric = args.save_best_metrics[0]  # Default to first specified metric\n    if best_model_states[best_metric] is not None:\n        model.load_state_dict(best_model_states[best_metric])\n        print(f\"Loaded best model based on {best_metric}: {best_val_metrics[best_metric]:.4f}\")\n    \n    return model, history\n#...\n```","range":{"startLineNumber":544,"startColumn":0,"endLineNumber":556,"endColumn":25},"embedding":"AEDovAAAHTwAYDc9AMAPvgDA5LwAEIC9ACBGvQCA2jwAAIa8AIB4PQAADrwAgJa8AKCkvQAAEDsAQJo8AID2PAAANL0AgIw9AEDXvADgiT0AAEI9AACQOgBA6DwAAMA8AMBOPQBAHL0AIAk9AIDDPAAAxjwAMJu9ACABvQBA8bwA4Ki9AGCnvQBww70AAEq8AIBmPQAA0DwAgIo8AIBKvAAA+TsAsOG9AICCvABQ6j0AgDg9AOACvQAQkj0AwKw8AMCcvQAAKDsAIC69AEDZPAAArbwAgEk8AIBVPACA8TwAAHu8AGAHvQAArbsAwIm8AACpuwBgVL0AgMY8AEAXPQCgBj0AwI28AFCavQAA5TwAwKG8ACBGvQBwgL0AUIG9AKBnPQAA8DkAAOQ8AMAFvQBgDD0AALs9AIBnvAAA0LsAABY7AOAKvQCgJT0AgE89ACBfvQBg570A0N29AICDvAAAIDkAoLu9AIAZPAAAIr0AwCW9AJC5PQBwjD0AAGA8AIAjPACAdr0AACM9AACXuwCA1zwAgCo9AOBQPQBALT0A4As9AADyOwAAZDwAgEg9AAChuwAgVj0AwE29AIDjPACAJb0AgMW8AGBfvQDgqb0AgEC8AEDBPADAfL0AQDS9AAB0uwAAFbwAQCo9AECnvQBAnz0AIDc9ACB5PQCAf70AgKG8AIAjvADgLD0AoDo9AJChPQDAG70AgKq8AMCNvQBAY70AAFk8ADCEvQCwzj0AAG08AMAjPQBA1rwAAGg8AIAzvQAAFz0AAB+8AOBzPQCgLL0AwL48AIAavACwyD0AAH48AIAfPAAA77wAALy8AAAgOgBgST0A4FA9AACIvQDA2LwAAIU9AAAdvAAAxLoAQJw8AMAVPQCgQb0AgFM8AMB5vQDg6b0A4Lo9AECNvAAAVLsAIAm9AGB3PQBAvLwAYAK9AIAjvQDgIr0AAJ+8AMBivQBAkjwAALm8AAD5PACgR70AwGk9AABQOgBgDb0AgEi8AIC7PACABDwAwJ28AICBPQAAijsAwIQ8AABNPAAAlzwAwNK8AKBLPQCgXD0AgBS9AAB6PQAACLoAcKK9AACeOwBQj70AgH28AACwOwCADDwAAEC7AAAUvACAYD0AgIQ8AAA9PADA4LwAACC7AAAwuwCAuTwAoB49AEDsPAAAcDwAwN68AEC4PACgPT0AwLA8AMAsvQAgGT0AwPe8AKAyPQAA1jsAgIc8AIBIvQDAl7wAALG8AABCPQBAAb0AAMu8AACWvACAAz0AALU7AABbPAAQzD0AQBG9ALCGvQDA6zwAgKQ8AMCxvAAAuL0AALG7ABCSPQCALDwAAFC8AOBLvQCAQ70AgD48AMD0PAAAyDsAIBq9ACBzvQBgvb0AQLe8AMAUvQAAkLkAoCM9AAD9uwBA7jwAgMK8AEA3vQAA6bsAgCC9AKAnPQCA/LwAwJw8AICBPAAAezwAAGA6AKBMPQCgIT0AgDI9AIBuvQBAFb0AQNs8AFDMPQAgAz0AQIG8AABwOgAA6LsAICs9AADvPADAozwAAGC7ABCQvQAAJTwAwEu9AIAvPQDguD0AAO28AIAfvACA6DwA4D29AICdPADAwDwAgGC8AAB6PQDguL0AANM8AECavACAt7wAQKI8AABgvAAACr0AQBA9AMC3PAAALrwAwCM9AGALvQCgGb0AQE89AMCNPQCARbwAwFW9AOBxvQAgN70AYJY9AMDCvACAWj0AIAi9AACBOwCAurwAwLo8AIBQPABgfL0AUIu9AABEvABgKT0AwMM9AGDevQCAYz0AwCo9AABJPAAQCL4AgCy9ACCvvQCAbbwAAOO7AAAMPQAA9bwAAMY8AAAvPQCAELwAAKG7AIBlvQAAgDkAwJC9AAAUuwDA47wAwPW8AAC6OwBgi70AAKU8AABwugDA6jwAQMs8AEBEvQAAQDsAAKw6AIADvAAgG70AgLG8AAALPACAUzwAAGa7AABDvQBAnTwA0J+9AACBvQCgZz0AQG89AMD9PACAPzwAAOU7AABEPABAdj0AgP+8AADyOwAAUjsA4Bc9AOBlvQCAdr0AIA89AICDPACQiL0AAKI7AADsPAAAaT0AgKg8AMCcPQAgaz0AIGI9ACCZPQAAuDoAAEY7AOBCvQAAWDwAAPC5AMByPQAgbj0AYK49AIDbPABAlrwAcLg9APC8vQCgUj0AAKm9AACmOwBArr0AgJI8AEDjvAAAlLoA0Is9AADQuQAAizsAwOw8AACsuwBAlbwAIJc9AEDCPADAqrwAAG08APClvQBAab0AAIW7AAAMOwAALLsAwIk8AEAmvQCAMrwAgIs8AJCnPQBAu7wAgFE8AAAyuwAAJrwAQME8AAAMvQCAdT0A4I+9AOApPQAAebwAwKY8AIAFPQAAarwAAJO8AAA9PAAgTD0AwLa8ALDYPQAASrwA+A4+AKAKPQDAyjwAgO88AMB4vQAAE7wAAGM8AAChOwDQjz0AQHE9AMDdPABAjLwAQNI8AKAGvQAAyLoAgIG8AEAEPQCgcr0AwNC8AECuvACAhjwAQCW9AMD1PAAApbwAwN28AAD6vADADb0AiAs+AICqvADAi70AgKu8AEBoPQCAaLwAAOw7AGAEvQAAlbwAALA6AMC9vACgKb0AQIg8AABAOwAAIbwAwDE9AMAhPQAAULoAwBw9AKAcvQAwhL0AwLC8AACjOwAATrwAYBc9AED8vADgFD0=","chunkHash":"68bc6913998a8c4febd279766b14ebd40eaa65111f7450198dd116b5e52c35e5"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef validate_model(model, data_loader, criterion, device, adjust_labels=False):\n    \"\"\"\n    Validate the model on the provided data loader\n    \n    Args:\n        model: The model to validate\n        data_loader: DataLoader for validation data\n        criterion: Loss function\n        device: Device to run validation on\n        adjust_labels: Whether to adjust labels from 1-based to 0-based indexing\n        \n    Returns:\n        Dictionary with validation metrics\n    \"\"\"\n    model.eval()\n    val_loss = 0.0\n    val_correct = 0\n    val_total = 0\n    all_preds = []\n    all_labels = []\n    \n    # Check if we should force CPU validation based on the global args context\n    force_cpu_validation = False\n    if 'args' in globals() and hasattr(globals()['args'], 'force_cpu_validation'):\n        force_cpu_validation = globals()['args'].force_cpu_validation\n    \n    # Force CPU validation if requested\n    if force_cpu_validation:\n        print(\"Forcing validation on CPU as requested\")\n        validation_device = torch.device('cpu')\n        # Move model to CPU first\n        #...\n```","range":{"startLineNumber":559,"startColumn":0,"endLineNumber":589,"endColumn":0},"embedding":"AACaPADgpj0A4DY9AKAlvQCAJLwAwJS8AECZvQDAybwAgMu8AACjPQAAYrsAwI68AGCQvQAAXbwAAO+8AACEPACAvbwA4Jk9AIA6vACALj0AYDc9ACA6PQDART0AAHs8AICTPACADL0AQOE8AIBpvACAjj0AYDm9AMAbvQAAqrwAQIm9AID1vADgpr0AgCW8ACCXPQAwhz0AgFg8AAB4ugBgKL0AwHa9AIBGvAAgxD0AgDQ8AECvvADArT0AgHA8AHC8vQCAR7wAwOy8AOBzPQCA3DwAANU7AACUPABArTwAwB69AIAVPAAAGbwAAPC8AIBKvQAAE70AAG48AIAbPAAAibwAAHm9AACGvADgB70AAEi7AAACOwCAYrwAYFK9AGCXPQAAUrsAAGw7ACCFvQDgKz0AAO09AIBOvAAAOrwAgLS8AKAxvQCA/DwAALy6AGBivQDApbwAsNu9AAA+PADAAL0AULG9AEDaPABACD0AgF28APDgPQBAcT0AQJ88AIDJPABgh70AgEw8AIB9vAAA9zsAIEQ9AOA/PQCA4jwAIGU9AICPPABAhjwAQBo9AADUvADAhzwAQI68AEBRPQCgbr0AAGe9AGBpvQAAz7sAAJ28AIAuvQDAUL0A4Fe9AMCtPAAgHj0A8J49AICSvQAgYz0A4HM9AOAXPQBgW70AELa9AIAOvAAA97wAwNY8AACVPQCA5LwAAN+8AGBcvQDgTb0AwNS8ACCGvQDgyD0AAHq8AEAbPQBAwbwAgOc8AACJuwBgRr0A4AO9AIAMPQDA+bwAgHo9AADhPADQrj0AgGE8AMCYPAAA6LwAgHq8AGAGvQDAnT0AQHk9AECyvQAAeLsAQPs8AACYugCAdLwAgH28AIBVPQDAD70AgA28AADKvACgO70A8Mc9AFC1PQAAFDsAsNK9AEDuPAAApLwAAPq7AGAhvQDgGb0AUIa9AGCAvQCAB7wAwOK8AMD0vACgpr0AACE8AKBePQBAID0AQNe8AEDavAAAOrsAQLK8AABxPQCAGzwAgH48AABQvQCAPDwAAKU8AABOPQCA5DwAwP68AACSuwAAs7sAIKK9AMAIPQAgaL0AQK69AKBPPQAAQLkAwJS8AOA7vQBgIz0AACC7ACAbPQAAULsAACC8AIADvAAAZrsAgOo9AEDFPAAAhrsAIEk9AIBmPQAA8DkAAHC7AMC4PAAQkj0AgLq8AIBOPQCAhjwAwJa8AECavAAAMrwAAK07AOAUPQDQsL0AANC5AAD5vAAAIj0AAFY8AMD2vABgxj0AgHa9AIB3vQDgYj0AAPC5AMCCPAAAALwAgFI8ACDNPQAALj0AADS9AIDCvADAd70AgA48AICjvAAACL0AAA29ACByvQDAY70A0Jy9AIDnPACAVr0AANu7AMDIvAAA0bwAoBe9AMBlvQAgKL0AIIq9AAC2OwAAlLwA4A49AEDHPAAAvjsAANI8AAAWPABAQz0AAAI7ABCfvQAALLsAwPq8AMBsPQDgHj0AIEO9AABuPAAAljsAAHI7AABKvAAAKDoAACs8AIDEvQAAwbsAQBa9AADwuQBgGz0AQLK8AADQuQAAOLwAgLO8AAB3vAAgmT0AwOa8AAAKPADgWL0AAMu7AACnvQAALDsAAOE7AEAGvQAQlL0AQMc8AIDIPAAAHj0AAIc8AIA8vQDgN70AAEE9AMDOPACAyDwAkKO9AIBPPADA/LwAgPs8AAD+vADw0j0AQIa9AACduwCADb0AAHY7AEDRPAAALDsAADa7AMCQvADgZj0AQH49AMADvQBA8TwAwL88AAAsPQAwlL0AsJW9AIDcvAAAvzsAgGc8AAA0PACAOr0AgEw9AMCCPAAA9LwAAEo8AKBwvQDgNT0AgF48AGB8vQAAkjsAgPK8AGAzPQCAJL0AIAq9AMAbPQDgDD0AgE09AIAGvQAAeLsAAKC6AMC6vAAABDsAgO68AADrvAAA2LsAoCg9ACBEvQCA/TwAQIC9AIBxvQBAxjwAQOE8AIBqPQAAF70AgCs9AABOPACwhj0AwL08AOAqPQCABD0AgAm8AGCMvQCgnb0AQE49AAB/vACghL0AAIi7AACOOwDgPz0AAIy6AIBbPQBgej0AMJg9AOAcPQAAmbsAgJq8AECJvQAwlD0AQMo8AFCdPQAADjsAIIw9AADevACAtjwAUIg9AKDqvQAAMD0AgJm9AACFvABQgr0AAO47AACRPAAAa7wAgOA8AGAVvQCAo7wAIE49AMCSPACAe7wAAKA7AEBmPQDA0LwAAJQ6AICyvQBgML0AwP28ACAKPQCAaLwAAEA6AKABvQAAkDkAwFi9AGCHPQBAIr0AAKs8AAARvQBAgDwAANC5AICUvABwpj0AoF+9AAC4OgCAi7wAQEw9AAAYuwCARDwA4CG9AGAXvQAABL0AIFi9AGAEPQCAUbwAUBY+AADHOwBgSD0AAAw8AADavAAgCb0AAH68AICCPQBAvDwA4JA9AHCEPQBAj7wAgLM8AIBsvADgST0AwMY8AEA1PQDAnb0AoB29AADguwAA4DsAgC68AMBPvQBAUr0AQMy8ACCMvQAAYTwASCU+AID5vACgP70AgMq8AMCtPADAJb0AAJ87AAC1PACATrwAQJo8AEA6vQCgFj0A4C89AIAOvQBA3DwAABa7ACClPQCgJj0AoBU9AMCrvQCAQL0AIEe9AIDcPABAdr0AALY7AAD5vADgtD0=","chunkHash":"06fb12407eba86c1df3195e1d4c39c2780d828012064f1596fe81520c5e1c92b"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef validate_model(model, data_loader, criterion, device, adjust_labels=False):\n    #...\n        model = model.cpu()\n    else:\n        validation_device = device\n    \n    with torch.no_grad():\n        for batch_idx, batch in enumerate(tqdm(data_loader, desc='Validating')):\n            try:\n                # Get data\n                volumes = batch['volume']\n                labels = batch['label']\n                \n                # Validate data before processing\n                if isinstance(volumes, list) and (len(volumes) == 0 or len(labels) == 0):\n                    print(f\"WARNING: Empty validation batch {batch_idx} - skipping\")\n                    continue\n                \n                # Check if volumes is already stacked (5D tensor) or still a list\n                if isinstance(volumes, torch.Tensor):\n                    # Already stacked by custom_collate_fn\n                    if volumes.dim() != 5:\n                        print(f\"WARNING: Expected 5D tensor but got shape {volumes.shape} for batch {batch_idx}\")\n                        # Try to fix the shape if needed\n                        #...\n```","range":{"startLineNumber":589,"startColumn":0,"endLineNumber":611,"endColumn":0},"embedding":"AACZvADgNT0AQAE9ABCNvQDA07wAQOy8AEBzvQCAkrwAgIa9AOCEPQCALzwAQCG9ALCHvQAAlDsAgC68AOBKPQBA4rwAwIE9AMCYvADgaD0AABY8AADpOwDgZz0AgCe8AABCuwAAu7sAQJo8AADDOwBwqT0AAO28AMD9vABA/LwAAIW9AABbvQDA370AALC7AKBsPQDAzT0AQJg8ACAQvQAAo7sAIE29AACFvACgkj0A4DM9AMCtvADQkz0AgDk8AOCZvQCAlbwAAOa8AOCBPQAAMjsAgCU9AOAOPQAAGLsAIHi9AADeOwAALTwAAFO8ACBmvQDAwLwAgDc8AABtPAAA9LoAQFK9AOANvQDA+rwAgDM8AIB6vABgd70AgAm9AIBLPACABzwAAF48AGBLvQDABT0AQP09AABwvACA47wAAHy8AEDkvADA3jwAgCQ8AGBdvQCgY70AYMe9AAA1vADATr0AcL29AABDPAAgAz0AgMm8AGDOPQBgYD0AAIa7AOB2PQAwhb0AwCM9AIDdvAAAFTwAUKQ9AABwPQBgDz0A4BE9AAC7OwAA0DwAwE09AADevABABj0AwMK8AAAxPABgjr0AQBy9ACA1vQBgOb0AAES7AAAQvABgoL0AAC+9AADMuwCAiDwAQIM9ACB7vQCAdz0AQNc8AOBrPQDApL0A4IW9AACwOgDAKb0AgJU8AEDXPQCgJL0AIBi9AGCbvQAAWL0AAGw7ANCIvQBQtD0AAPs7AADLPAAAOLwAAOI8AACSuwDAvrwAAPa8ABCaPQCgBb0AgII9AADcuwBQ2j0AgDm9AACgugAAW7wAANy8AADauwCAoD0AwGA9AECovQCA17wAgG48AABYOgBA0LwAwA+9AKAnPQCA/bwAABa8ACBEvQDAYb0AIKQ9AFCEPQBAkDwAEK+9AOB4PQAAp7sAQFW9AFCEvQDAPb0AYKC9AIA+vQAAS7wAAKS7AIALvQDAhr0A4AM9AABEPAAACzwAAGg7AADDvADAjLwAAGC6ACABPQBAED0AAEo8AKCEvQDAuDwAQKM8AABfPQCATTwAAAY7AAD1uwCAH70AwIO9AMCSPABgk70AwHC9AIDqPADgPb0AgDa9AMDdvABgGT0AgCa8AECSPADArzwAAIm8AABbvAAA/DsAsJs9AIAaPAAAhzsAwIc9AAAePQBAmjwAgPO8AABmvADggj0AQBu9ACAsPQBAAz0AQPS8AIA7vQCAYrwAAGS7AEDlPACgD70AAF28AICSvAAAszwAgE09AKAhvQBglT0AAJ27APClvQBgHT0AgMM8AAAxvAAgNb0AgK08AACfPQBAOD0AAOu8AOA9vQCAjr0AgIG8AAAoOwBgVr0A4Cm9AOBFvQDgAr0AQEG9AECDPAAge70AwOY8AAB3vAAAGrwAQME8ADCBvQCAebwAwPq8AAAjPAAAAr0AANs8AICpPACAHjwAgMk8AIAiPQAgFT0AgC09AMAUvQCA1rwAAIC4AMARPQBA0DwAwC69AAChPACApjwAAKA8AIATvQAAwLgAwAw9AOCevQAAeDwAYAy9AACVPAAABz0AoGC9AADWuwAAgbwA4Am9AAACuwDgaD0AANQ7ACAVPQBAbr0AgEy8AGBZvQAA2DsAgFA8AABGOwBAJb0AAIC4AADyPAAA4TsAwJk8APCgvQCApb0AwCw9AOBCPQAAobsAoJi9AAAYvQCgHL0AADw9AECNvACwpT0AYIS9AAAVPADAhLwAgJW8AADcugCA3LwAAI67AAAvvACgZz0AQAM9AMCKvADgmT0AAGi7AMBLPQCQ6b0A4IC9AMD1vABAhjwAAIW8AKACPQAAm7wAQBs9AACguQCAWrwAQJw8AAArvQAAMz0AID69AADtuwAACjsAIAm9AIBiPACwm70AAAu8AKAcPQDgBT0AgGQ9AAAbvAAA2DsAALM8AADgOgAAOzwAoG69AACYOwAAAD0AgMU8AEBZvQAAELoAMJm9AKCivQDgej0AIH89AIA+PQCATbwAQAQ9AABGOwAAFD0AAKC6AIATPACANj0AADU8AEAmvQDg370AwO48AMDAvAAgQ70AAGa7AABXPQCARD0AYB69AACTPAAgfj0AQE89ABCSPQBACT0AADi8AGC/vQAAjT0AYB09ANDWPQBAyDwAwLE9AACkugCAUbwA4H09AKgFvgAAcz0A8M69AEBSvQBQh70AAIc7AAA7PADgR70AcIQ9AIBQvQCAI7wAoBQ9AIACPADAT70AAHS7AADoPADA3rwAAJE7AGCjvQDQiL0AgH68AMDkPACA57wAgPs8AABLvQCARLwAEIa9AMBYPQBgHb0AAM+8AGAOvQCgFz0AAFq8AMDLvABgUD0AAO68AIABPACAmTwAACg7AACCvAAAI7wAwOq8AGAGvQAAEDwA4HG9AGBuPQAAILoAUCw+AAByuwAAHD0AANw8AGA8vQAA/rsAAIq7AEAPPQCARz0AsIc9ACAAPQBA0rwAQK48AAA2vQBAjT0AgDO8AADcPAAQlb0AAAK9AIBIvAAAVrwAwC+9AIBjPABgGL0AgCK9AADQuQCgGz0AuDM+AMBPvQCgYr0AQKy8AACWPAAAjr0AgBM8AIAuPABApLwAgOo8AMCPvAAA8LsAgMg8AAD4uwAATDwAoFo9APCZPQBQhz0AAOE7AOArvQBgB70AAOC8AIBaPACAX7wAAM08AMCYPAAQgT0=","chunkHash":"3c19d38e96ab91cee178fe67fb5389077e4a84bd36b7cf5096fad28305055260"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef validate_model(model, data_loader, criterion, device, adjust_labels=False):\n    #...\n                        if volumes.dim() == 4:  # (B, D, H, W) - missing channel dimension\n                            volumes = volumes.unsqueeze(1)  # Add channel -> (B, 1, D, H, W)\n                    \n                    # Check for NaN/Inf values\n                    if torch.isnan(volumes).any() or torch.isinf(volumes).any():\n                        print(f\"WARNING: NaN/Inf values in validation batch {batch_idx}\")\n                        volumes = torch.nan_to_num(volumes, nan=0.0, posinf=0.0, neginf=0.0)\n                    \n                    try:    \n                        # Move to validation device - either CPU or original device\n                        volumes = volumes.to(validation_device)\n                        if adjust_labels and isinstance(labels, list):\n                            # Convert labels from 1-based to 0-based indexing\n                            labels = [l - 1 for l in labels]\n                        labels = torch.tensor(labels).to(validation_device)\n                    except RuntimeError as e:\n                        #...\n```","range":{"startLineNumber":611,"startColumn":0,"endLineNumber":627,"endColumn":0},"embedding":"AADTuwBATT0AAOY8AGCNvQCAtrwAAGG9AIDOvABgAL0AAGO9AGBrPQAAuDwAwKy8ABClvQAAOjsAAPA6AIBrPQCAULwAYH09AGAQvQAALT0AAMm7AEDyPACQgD0AAOm8AECAvABgWb0AAA09AAC9OwDwtz0AQMy8AABJvABAHr0AAFe9AEBtvQCw1b0AAOG7AMBlPQBQoT0AAOa7AED8vACAQrwAQFu9AIAIvADguj0AoFs9AAAKvADAbT0AANa7AABzvQAAk7wAgGG9ACCZPQAAgjsAQOE8AID5PABA6DwAIFm9AMCGPABA1DwAAN+8AABKvQAAWr0AQLE8AIAWvAAAYLwAQEa9AEBCvQAAcLwAQPk8AABKvABgK70A4Em9AMC/PAAAmDwAALA7AEA7vQAAGT0AcMA9AOBpvQBgIb0AAPq8AICivABAiTwAgKU8AOAlvQCgWL0AkIS9AAAfvACgdb0AkMm9AICJPAAAvLoAwDe9AEDiPQCgHT0AAHE8AKAYPQDQq70AQGU9AKArvQCAkbwAgKI9ABCSPQCA+zwAAEQ9AAChuwAA8zwAgD89AABlvACA3DwAAK68AAC8OwCQvb0AgPe8AMDQvADABb0AAG68AADxuwBgS70AQB+9AMCevAAgGT0A4GI9AABtvQAAZD0AYCI9ACBkPQCQjb0AoIy9AACZOwAA9LsAgM48AJDAPQDgZL0AYBO9AIDYvQAACL0AAPs7AMCDvQCwwz0AAIg7AMBpPQAASrsAAJI8AMCKvAAAZjsAoFe9AGBjPQBAhbwAcI09AECJvABw3T0AwIS8AMDTvAAAyzsAgHO8AIBOvADgtj0AgEs9AKCevQBA4rwAQKc8AMCoPACAqLwAQMa8ACARPQDgD70AADO8AGBMvQBgTr0AgJA9ABCQPQCAvDwAoMq9AIB1PQAAebwAAGy8AKBzvQCgHr0AEIK9ACB0vQCATbwAAFK8AMDWvAAArb0AwPo8AACCPAAA7jsAwMY8AACzvABAx7wAgGK8ABCXPQAgYz0AgBM8AICpvAAAzjwAAGw8AJCgPQAA/DsAAMq7AAAYPAAA97sAgKG9AIBDPACArr0AYJi9AIDpPAAACL0AQLS8AAABvADgRD0AwOY8AACIuwAAfLsAAJk7AAC9vACAczwAADQ9AAAmOwCAJ7wA4D89AADoPACAczwAgNa8AADNOwDgUz0AYAm9AGA4PQBgJj0AADK7AIAFvQAAv7wAgIU8AACjOwCgI70AACe8AIAJvAAAozwAwPQ8AOAkvQCg0T0AwMG8AOCBvQBA9DwAAIY8AACQuwCgA70AICo9AFCGPQCgJj0AwLK8AKALvQDQjr0AgKm8AIAJvADAa70AANy8AOCRvQCgS70AwPy8AAAOPADghL0AQMU8AAAyuwCgIb0AwP08AABXvQDgBb0AYD+9AAByuwBAt7wAgMU8AIBLPAAA5jsAQDk9AADBPADADj0AwJI8AKAFvQAAkbwAwOk8AICSPABAKD0AAAC9AACuPAAA1jwAwJk8AMDXvADAqbwAAPo8ADDVvQBAqzwAgOC8AABLPADAJj0AgO28AAC2vAAARDwAoBe9AABQOwBgOT0AgHS8AEC3PACAhr0AAB47ACCVvQCAGDwA4AM9AMCxvACAxbwAAAQ8AGA5PQCAYzwAQKk8ACBkvQCAcb0AANw8AACIPQAA0DoAgLi9AIAbvQAgNr0AgDU9AIA6vACgqD0A4A29AABAuwAAu7sAQLy8AIBKvAAAvLwAAOK7AAATvQAAfj0AAI48AEAqvQCAgD0AwMm8AICTPABAqb0AAGW9AIA4vADAAT0AwIY8AADlPAAAAL0A4IE9AACXOwCAL7wAgFu8AOB5vQDgHz0AAEu9AIBMvQBAgTwAAH67AABYPABws70AAEC7AACcPAAAzDwAAIQ9AGBEvQDAvzwAAAK8AACPOwAANjsAYDy9AABAOgBgFD0AAL07AKB1vQAA/jsAIIC9AGCYvQDAaT0AwO08AABtPABAnbwAgLk8AECwPABA+DwAgCY8AIAmPACAyjwAwMI8ACAKvQCA8r0AAOg8AECevACAT70AAFi7ACALPQAAPj0AAHq8AMADPQCgbz0AgEs9ANC8PQAAiTwAAJC6AEDGvQDwkz0A4F49AHDWPQBgGT0AwOE9AADYOgAALrwAwHc9ANAFvgDATT0A4Lm9AIBQvACQg70AABg8AECTPAAgNL0A8JQ9AIAIvQCAs7wAAM08AIBuPAAAKr0AQKq8AEAcPQDAobwAgK08AECGvQCQiL0AQJe8AECwPADA3rwAAGw8AMBjvQAAwDoAwGa9AEAwPQCAybwAgEi8AKAlvQDA/jwAgB68AMDVvABAMz0AoDi9AAABPQAAejsAAGg7AECOvAAAwDkAYGu9AIAcvQAAQbwAsIS9AAAzPQCAQLwAaAk+AACgvACgHT0AQIo8AMA0vQDAl7wAQKe8ACBjPQBAfT0AADg9AMDFPACAGL0AgIQ8AICkvADgqT0AAKs8AMC1PAAAV70AABW9AAByuwDAk7wAgMm8AAC+OwCALr0AYEy9AMBZvQDAWD0AsD8+AIBYvQBgPr0AAOq8AECZPADgdL0AgJO8AAC9uwDAmLwAwBw9AACGvACAZbwAwMw8AABGOwCAojwAwEc9AAC3PQBAbD0AADo7AAD1vACA97wAABC9AIDNPACgZb0AgEQ8AACcOgBguz0=","chunkHash":"49484039474456682360eb47d3f04650ae28e8baeb8cab2e819d6584586ef0aa"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef validate_model(model, data_loader, criterion, device, adjust_labels=False):\n    #...\n                        print(f\"ERROR moving batch {batch_idx} to device: {e}\")\n                        print(\"Falling back to CPU for this batch\")\n                        volumes = volumes.cpu()\n                        if adjust_labels and isinstance(labels, list):\n                            # Convert labels from 1-based to 0-based indexing\n                            labels = [l - 1 for l in labels]\n                        labels = torch.tensor(labels).cpu()\n                else:\n                    # Check for uniform shapes in list\n                    if len(volumes) > 0:\n                        first_shape = volumes[0].shape\n                        if not all(v.shape == first_shape for v in volumes):\n                            print(f\"WARNING: Non-uniform volume shapes in validation batch {batch_idx}\")\n                            print(f\"Shapes: {[v.shape for v in volumes]}\")\n                            print(\"Skipping this batch\")\n                            continue\n                    \n                    # Move to validation device with error handling\n                    try:\n                        volumes_stacked = torch.stack(volumes)\n                        # Check for NaN/Inf values\n                        #...\n```","range":{"startLineNumber":627,"startColumn":0,"endLineNumber":648,"endColumn":0},"embedding":"AMCCvAAAND0AYDM9AGCNvQCA5rwAwEu9AABAvQDAgLwAwE29AOBjPQAAHTwAAH+8ABCtvQAAQzwAQIO8ACBNPQAAerwAQIw9AGAtvQBA5DwAgAE8AAB/PAAwhj0AgNC8AADgOQAgV70AwAI9AAApvADgnT0AoCC9AGAFvQBA+LwAkIa9ACCWvQBQ7r0AAHq8AIBoPQCAfz0AgCs8AGALvQAA67sAgKm9AABwvACgtj0AwMc8AAAgOwDgkD0AALi8AMBdvQAA/rsAIB29ALCtPQAApjsAgB09AECoPAAAmzwAAE29AMCfPAAA7TwAAI28AGAXvQAgDL0AgNE8AACvuwAAVrwA4Dy9AIB4vAAAPrwAQMw8AAAsuwCgH70AAEq9AEDuPAAAIDoAAJA6AABKvQCA5TwAIOY9AOAZvQDAvbwAAI+8AGAlvQBA+TwAgBY9AIADvQDgXL0AEKm9ACABvQCAMb0AsM29AIBwPAAA1jsAgAy9AAABPgBgLj0AQKs8AKBAPQAAvb0AgJI9AMDBvAAA3LoAQJU9AGBgPQDA4DwAoCA9AADHuwCASTwAIHE9AICTvABAyzwA4BO9AABGOwDApL0AwPi8AIDnvADgGb0AwI08AABEvABQhr0A4Bi9AIABvAAgOD0AgB09ALCKvQCgSz0AABE9AIBJPQBgY70A8Im9AIAGPACA1rwAQPo8AOCdPQDgVb0AgKG8APDFvQCAMr0AAKA8AJCFvQDwtz0AgAG8AAA9PQDAu7wAgFk8AEC+vACAMjwAgE+9AEAuPQAAy7wAMIk9AACwOgDw1j0AwOW8AADGvAAAabwAgC68AADAvADw2T0A4EA9AOBgvQAA57wAADg8AOACPQAgCr0AwNS8AGAzPQCA3LwAALe7ACBRvQAgPr0AgLY9AAB+PQBAoDwAEKW9AEBtPQBAy7wAwNO8AOBfvQDgDr0AMJK9AOCGvQAAjbsAABI7AMDLvABwnL0AgNc8AKAKPQAAcjwAALe7AAB2vACAOrwAADm8AGBDPQAgQD0AAE08ACAivQDgGj0AAEC8AICLPQCAyDwAAAA7AACNuwAA4LkA0Iu9AICuPADwpb0AIIS9AMAaPQDgAr0AgOG8AECPvAAAfD0AgHk8AAA9vACAEDwAQLe8AAB8vACA6jwAQKA9AAAMPQCAZLwAoHE9AAC0PAAAvTwAAGO8AADkOwAgPD0AoCm9ACBjPQDABD0AAOC8AOAJvQCAbrwAgBo8AID/PAAgIL0AAKC7AECDvAAASDsAgC09AOAxvQBQvD0AAHy8APC6vQAAHD0AAFA7AIBavAAAL70AgDg9AICbPQCAWzwAAAC9AOAKvQAwqL0AgFi8AIASvAAAMr0AgDu9AMA9vQDgNL0AYEO9AABPPAAAXr0AQPc8AACgOwAAJL0AAOE8AGBbvQCgE70AYEW9AABIOwCANrwAgAk8AABWPAAA0jsAQB09AAAfPQAAJD0AgIs8AIDXvABA7LwAAKg8AMA1PQCAXzwAgOG8AAAnPACAeDwAABw8AIDpvAAAMrsAgLk8AHC1vQCA7TwAQJ68AIAiPQDgDD0AQEm9AAD4OgAAJTwAID29AABwOwAAZD0AwJy8ACBHPQDAar0AACe8AJCSvQCAHTwAgG48AAAKvABgSr0AgD48AEApPQAA0DwAwJA8AIBlvQCgar0AgHY8AECRPQDAm7wAIIW9AKASvQCgRb0AwKQ9AABcvADgsT0AwDO9AAAOOwAAIrsAQKS8AAACvABABr0AAJC8AGAJvQCQiz0A4CY9AMD1vADAfj0AAJy7AECkPACAvr0AwEO9AEClvABgDD0AAFg8AABTPACAqrwAIGo9AACEOgAAQbwAAIu7AEBFvQBA0zwAgMi8AEAzvQAAhTsAAMe8AACDOwBQq70AAEC6ACAWPQDgMT0A4Hw9AEAevQBgGD0AALI8AIB2vAAAZLwAIEW9AADQOwBgOD0AgIM8AICNvQAA/jsAEJG9ABCUvQDAOz0AAF09AECnPAAADLwAABs8AECFPABAAD0AAK67AAC0PACgLz0AwJs8AICnvADA5r0AAOQ8AAASuwBAQb0AAMq7AAC7PADAEj0AADG8AIDBPAAAZD0AQEo9AAC1PQAA/DwAAEy8ACC/vQDQsz0AgCE9AODOPQBAHz0AsNs9AABBvAAAZLsAoHw9ADD/vQBgaT0AYN69AIB0vADQmL0AALg7AADzOwAgTr0AkKY9AKAuvQBA0LwAAA88AMCtPAAgOL0AAIy6AAANPQBApLwAQIs8AOB/vQBAdr0A4AC9AADhPABArrwAAIc8AKBNvQCAbbwAgIm9AIBtPQBgIr0AwM+8AIDuvABgJz0AAN87ACAKvQBgPD0AAEa9AMDWPAAAADwAgCU8AACXuwDAoLwAgB29AOARvQAA57sAEIS9AMCOPQAAMLwAeBE+AADEOwAgNj0AQNk8AOA4vQAAPbwAANC8AOBYPQBAiz0A4IQ9AAAIPQAgBb0AQKQ8AECDvADAcz0AAAw7AAByOwDAYr0AYC+9AAAyOwAAwrwAAJm7AACpuwBA57wAoDK9AAAGvQDgWT0AADk+AMANvQCA3bwAIC69AIC5PABAXL0AAB+8AAAfPADAlLwAANQ8AGAFvQAAkLkAgMM8AIB9vABAqzwAQBY9AKCvPQCgBj0AAL07AAANvQDA0LwAYDG9AICsPACgIL0AAF48AADnOwCghT0=","chunkHash":"71240122a9a3b92d35a364b58c4597b4bbf8d87fb7f458a41dd917a247c655dc"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef validate_model(model, data_loader, criterion, device, adjust_labels=False):\n    #...\n                        if torch.isnan(volumes_stacked).any() or torch.isinf(volumes_stacked).any():\n                            print(f\"WARNING: NaN/Inf values in validation batch {batch_idx}\")\n                            volumes_stacked = torch.nan_to_num(volumes_stacked, nan=0.0, posinf=0.0, neginf=0.0)\n                            \n                        volumes = volumes_stacked.to(validation_device)\n                        if adjust_labels and isinstance(labels, list):\n                            # Convert labels from 1-based to 0-based indexing\n                            labels = [l - 1 for l in labels]\n                        labels = torch.tensor(labels).to(validation_device)\n                    except RuntimeError as e:\n                        print(f\"ERROR stacking volumes in validation batch {batch_idx}: {e}\")\n                        print(f\"Volume shapes: {[v.shape for v in volumes]}\")\n                        print(f\"Skipping this batch and continuing...\")\n                        continue\n                \n                # Verify labels are within expected range\n                n_classes = model.classifier[-1].out_features\n                #...\n```","range":{"startLineNumber":648,"startColumn":0,"endLineNumber":665,"endColumn":0},"embedding":"AECWvABgGD0AQOI8ALCuvQBA+7wAoCq9AOA/vQCAvLwAAEW9AGBqPQAAljwA4A69AJCmvQAAQrsAgDy8AOCCPQDAxLwA8JQ9AGAnvQDgUj0AAIM8AIAsPAAAXD0AgL+8AAAEvAAACL0AQEM9AAAoOwDAxj0AALq8AMCvvABgLL0AwIC9AGCRvQAQ/r0AAAa8AOCEPQDAmj0AAFs8AIAevQAAHrwAEIC9AADgOgAAsD0AQDY9AADAOQAAkD0AANA6AMAqvQAA5LoAQGe9AMBmPQAA8TsAAFY8AMAjPQCACz0AIC29AID7PACAtTwAANa7AOAYvQCA/rwAQJM8AADkuwAAnbwAoA29AKArvQCAMrwAAM88AADhuwBAGL0AgAq9AACHOwCAzjwAAIY7AGALvQAAJj0A4Ps9ACAJvQAgO70AALu8AAC7vADgNj0AwPo8AAAxvQDAkr0AAKK9AICYvACAiL0A4NK9AAAwPAAAuzsAgAi9APDkPQBgZj0AAAw8AGA9PQCwlL0AIHc9AMB3vQAADDwAIJk9AIClPQBgCj0AQPo8AEDgPADAAT0AIEs9AICcvAAAtjwAQJm8AABNPADwlb0A4A69AAAVvQDgHL0AgDG8AADoOwBwib0AgMy8AAB6uwDAkDwAwFQ9ADCDvQAAaD0AgBg9AMBoPQAgZb0AIH29AADzuwCgI70AgDA8ADDVPQCgT70AACG9APC5vQDAOL0AACA8ACCIvQDg0j0AANC6AKAbPQAAq7wAgHI8AABjvACAZLwAgN68AIB9PQAADL0AUKg9AAD+OwAw9z0AQBC9AABjvAAACDsAQIW8AACkuwAArj0A4H89AICevQAAj7wAwNo8AICMPAAgAL0AYBa9AAAoPQCA07wAADm8AEBTvQDAe70AQJQ9ACBJPQBARz0AoMa9AIA0PQCAnLwAQBW9AGA7vQAA87wAwIC9AKCEvQAATbwAAEA7AEDPvADQs70AwIY8AADkPAAA/zsAgL88AICLvAAAYDsAADS8AGAnPQAARj0AAPo7AIBAvQCA7TwAAOw7AIBRPQAAvDoAAMe7AMCJPAAA3rwAQG29AMASPQAgob0AoI69AMA6PQAAybwAQIy8AADuuwBAOT0AAIo7AAACOwAAXjwAACC7AABCvAAAvDoAQGQ9AADsPACANzwAoEs9AIBxPACATjwAgNS8AAC4ugDAaz0AYBi9AEBIPQBA7zwAgMy8AMDyvABAzLwAAKC5AAAQPADAN70AAGy8AADAuABA2TwAQCw9AGAOvQDQwD0AAJa8AIDIvQCAKT0AAMc8AIBRvACgLb0AwJ48ABCePQCgNj0AgAq9AOABvQCQmb0AgAq9AIBXvABgWb0AwA69AIAwvQDAJb0A4Au9AIARPACQi70AABk8AABavACA0LwAgK08AIAUvQDAwrwAoCq9AACpOwAAbrsAYAs9AECHPAAASDsAQM48AEAaPQDgZj0AwMs8AEAevQAAc7wAQAI9AADpPABA+zwAQIy8AMD+PADAkzwAQLI8AAD7vACAcbwAgNo8AMC2vQCAAz0AgFa8AMDJPABAGz0AICG9AABougAAGjwAgDG9AAAwuwDAPT0AAAA5AEAYPQBAYL0AACi8AOBGvQAA8LsAgDE8AADzOwCA5bwAAPc7AOAwPQAAzjsAgM48AKCOvQDgc70AgKk8AOB0PQAAgbsAkKe9AAC0vAAAk7wAYF49AAD6uwDQpT0AwK+8AIA8PACAhDwAAPi8AAD5uwBA4rwAABa8AECIvADAmj0AgMs8AMDBvADwnj0AIAG9AAANPQCQtb0AUIm9AADcvAAABz0AAPy6ACAAPQAABL0AQDQ9AIAEPAAAFrsAAIi8ACApvQCAnTwAAOu8AEA5vQAAfDsAgAW8AAD4OwDAhL0AAGC6AMCZPABAID0AQFw9AED3vACAgDwAgB68AABEOwCANrwAIEW9AIAZvADgPT0AACY8ACBZvQAAzLsAIIK9AMCKvQCgPj0AIEU9AKACPQDAtbwAgFk8AADOOwBAxjwAACw8AADdOwBgMj0AAKU8AGAcvQDw1L0AYBg9AIBivABgPL0AALu8AOAYPQAAXD0AoEm9AICNPAAQhj0AwG09ANDIPQCAKTwAAPC6APDOvQCwgz0AAE09ACC9PQCAyzwAAOE9AAB4uwCAhLwA4Gg9ANACvgCAMj0A4Oi9AEC3vADggb0AgGM8AMCrPABgWL0AkIg9AADJvABAhbwAgMw8AADOOwDgIr0AwI+8AIAePQCgCb0AgHw8ACCZvQAAbL0AgKm8AMCSPABAEL0AQLs8AABUvQCAP7wAoDq9AGBnPQAABr0AAAi9AGAyvQBA/DwAgLq8AIDQvACAHz0A4EC9AAAZvABAkDwAgCi8AMCCvAAAebwAYFG9AEAFvQCAd7wAgFO9AKCTPQAA6bsAyBI+AICYvAAADz0AwKc8AEBnvQCAzbwAAGm8AIA+PQCQiD0AgFA9AAAdPQCAFLwAAJM8AGAVvQAAkD0AQJw8AEC0PACggL0AYAC9AIAFvACAkrwAwNK8AIBIPACgHL0AoBC9AICzvAAgaz0AwEY+AEAnvQBgBL0AIBm9AICmPAAAWL0AgAu8AABUuwDAj7wAgCc9AKAWvQAAiLwAwJ88AIBuvADArTwAgC49AGClPQCAQj0AAAM8AADuvACgF70AQMS8AOANPQAgJr0AAJo7AABsuwDQpj0=","chunkHash":"6037ffb834dcff48efdf8ad8ac6fcf28edad64747d0620b18a4dc12043cfce23"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef validate_model(model, data_loader, criterion, device, adjust_labels=False):\n    #...\n                if labels.min() < 0 or labels.max() >= n_classes:\n                    print(f\"WARNING: Labels out of range in batch {batch_idx}!\")\n                    print(f\"Label values: {labels.tolist()}\")\n                    print(f\"Must be between 0 and {n_classes-1}\")\n                    print(\"Skipping this batch\")\n                    continue\n                \n                try:\n                    # Forward pass\n                    outputs = model(volumes)\n                    loss = criterion(outputs, labels)\n                    \n                    # Track statistics\n                    val_loss += loss.item() * volumes.size(0)\n                    _, predicted = torch.max(outputs, 1)\n                    val_total += labels.size(0)\n                    val_correct += (predicted == labels).sum().item()\n                    \n                    # Save predictions and labels for metrics\n                    all_preds.extend(predicted.cpu().numpy())\n                    all_labels.extend(labels.cpu().numpy())\n                except RuntimeError as e:\n                    print(f\"ERROR in forward pass for validation batch {batch_idx}: {e}\")\n                    if \"device-side assert\" in str(e):\n                        #...\n```","range":{"startLineNumber":665,"startColumn":0,"endLineNumber":689,"endColumn":0},"embedding":"AIB2vAAgLT0AoCI9AIDDvQAAmLwA4Bi9AKA+vQDA/LwA4FW9AEBSPQBA+jwAgBG9AOC1vQAAeLoAgFm8AIBcPQAAfrwAYIk9AOAUvQBQgj0AAJW7AACDPABgnD0AAMe8AAD0OwDArbwAwMs8AAB4OgBQ4D0AYAa9AMDDvACABL0AkIC9AJCCvQDg2b0AALa7ALCSPQBAWz0AgAQ9AADYvACAvrwAoJG9AOANvQBQkT0AADY9AIBAvAAQnD0AAGI7AGBCvQAA+LoAIIO9AMBrPQAAJTwAwFU9AAAZPAAAwDwAQFu9AKAqPQAABT0AQNy8AMDcvADAWL0AwA89AAD8ugCAZLwAIAm9AOAAvQAAbrwAIBk9AIAtvAAAnbwAoEe9AIAFPAAAIDkAAGa8AKBpvQCATj0A4OE9AACovAAA6bwAYAa9AADVvAAALjwAgPk8AOAUvQDAcr0A0Ni9AECGvACwpL0A4OG9AAD9OwAAJjwAQAq9AID+PQAAJD0AQKg8ACAPPQCQtb0AoF49AEAtvQAAXrsAsJE9ABCfPQAAzjwAgGA8AIALPACAczwA4EI9AIB+vACAmzwAwPe8AADvOwDwj70AAEG9AEANvQDA3LwAQIO8AAA0uwDAIr0AwCW9AIAEPADADz0AMIA9AEB3vQCgaj0AMIc9ACA3PQAwgL0AIFO9AIAiPAAA9LsAwOM8AFC4PQDAFL0AoCe9ALCLvQDANb0AAIA4AACCvQDgtz0AAJA6AGAUPQDADr0AACU8AACpvACATTwAYCC9ADCLPQCAzLwAoKs9AACGOwDA/T0AwMq8AAALvAAANLsAgJa8AED6vABAfj0AQEw9ACCOvQCAf7wAgBE8AABpPABAAr0AgDW8AIBUPQDAk7wAAAa8ACB1vQBgCb0A4MQ9AIBfPQAA9DwAEMy9AIA2PQAAgLwAgAK8AMA3vQCA3rwAQFS9AGBQvQAA5bsAQJG8AIDyvABQl70AgLQ8AACBPAAAfjsAAPU7AIA2vAAAxTsAAJy6AMBXPQDAWT0AAFg6ACBTvQCATDwAgFs8AICGPQCA0zwAwLC8AAB/PAAALDsAIHe9AMDxPAAQsL0AUIG9AMDLPAAAKbwAQIi8AAAAOABgTT0AAPU7AIAgvAAAlDwAgOq8AMC/vABA4jwAUJs9AECMPACAt7wA4EQ9AAAfPQBA3zwAACY7AAAYuwAAej0AQCy9AGA3PQAApjsAAMO8AGCGvQCAJLwAADe8AIAaPAAgNb0AACK7AAB6uwBA3jwAwPA8AEDVvACQsT0AQMa8AJCDvQDAfj0AAJI7AADFvACAD70AAF08AMBmPQAgNT0AAE+8AMCvvAAAmr0AAAe8AIB9vACAJr0AgHa8AMA+vQDAaL0AoIW9AABovABgk70AgBA8AABsOwBAqbwAAKw8AMC/vADAAL0AgFi9AIB0vACA1LwA4AQ9AAC5OwAA4TsAAC49ALCEPQCgNj0A4Bc9AIAtvQAAhrwAAOE8AEA9PQAAmDwAAH68AACPOwAAyDoAQMs8AICbvAAAcDsAwJ48AMDEvQCAFDwAAO68AEANPQCAuTwAgD+9AAAUOwAA1TsAQFW9AACSPACgNj0AAA68ACAxPQBwnr0AwLu8AOA7vQCABDwAwII8AABsuwCgOr0AAAA6AABGPQAALjsAQM48AOB5vQAgOL0AoAY9AOCQPQCAJbwAQKi9AABHvQAgDb0A4I89AAB6vADwqz0AwHW9AIDDPAAAHDsAAI67AADAuwCAs7wAgPa8AMCtvACAOT0AAAQ9AMDnvACAfj0AAM87AKAMPQDgub0AIEa9AEC/vACACDwAgHE8AKAIPQCA/bwAgIE9AICGPAAAmDoAgMG8ALCFvQDgGz0AAJS7AECWvAAAsjsAAKS8AAAIPABgwb0AAEY7AIAMPAAgBT0AAIE9AKArvQAA7jwAAOS7AAD3uwDgLb0AAFS9AAAIuwCAFT0AAKY8AIBbvQAADDsAcKe9AJC9vQDgSj0AwAw9AGAoPQDgML0AgAm8AIA+PAAADz0AwKI8AIBHPACgUD0AAFw8AOA5vQCg4L0AQAk9AACWuwDAc70AgC+8AIBTPABgVz0AgEG9AAD5PAAAgz0A4Dg9AFDRPQAAHbwAAC28AEC1vQBAlT0AwNY8ANC0PQDAxTwAoMk9AABKuwAA+rsAoI49AADxvQBAjD0AYMO9AMC5vABgKr0AQIs8AAAYPADgVb0AQJg9AACZuwCANLwAAAk9AACQPAAA1rwAAHy8AIAmPQBA8LwAgAg8ADCOvQAQgb0AwJ+8AACuPACAUb0AgG08AGAmvQAA4LkA4FK9AABWPQAAVrwAwNC8AMB1vQBAzzwAAAK7AABdvAAAYD0AwFq9AICHvAAAkjsAAIg6AABwvAAAjTsAoE29AAAkvQAAEzwA4Am9AKCBPQAATzwASBk+AIApvADgFj0AACg8AGB+vQAAqrwAQL+8AGBIPQAQiD0AwIQ9AMAMPQCAQbwAAKg8AIBSvADgOz0AAI+7AIBGPAAAK70AQEa9AAAdPACAkrwAgG68AAAcOwCAN70AwOG8AKAKvQCA6jwAMDA+ACALvQCwgr0A4Am9AMCSPAAASb0AgJm8AIB9PADAorwAwKE8AOA7vQCAFzwAwO08AIA+vACAdjwAIFc9AMCrPQBgFz0AAJc8AABmvQCgG70AANW8AMCcPACABr0AwAs9AACJvACAjj0=","chunkHash":"d112faa0828471b62d16a20a24be7af237ddbddba073c10ba64fdbf19323a4d3"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef validate_model(model, data_loader, criterion, device, adjust_labels=False):\n    #...\n                        print(\"This could be due to invalid inputs or labels.\")\n                        print(f\"  Volumes shape: {volumes.shape}\")\n                        print(f\"  Labels: {labels.tolist()}\")\n                    \n                    # Skip this batch and continue\n                    continue\n                \n                # Free up memory\n                del volumes, labels, outputs\n                if batch_idx % 10 == 0:\n                    torch.cuda.empty_cache()\n                \n            except Exception as e:\n                print(f\"ERROR in validation batch {batch_idx}: {e}\")\n                import traceback\n                traceback.print_exc()\n                continue\n    \n    # Handle case where no batches could be processed\n    if val_total == 0:\n        print(\"WARNING: No validation batches could be processed!\")\n        return {\n            'loss': float('inf'),\n            'accuracy': 0.0,\n            'f1': 0.0,\n            'predictions': [],\n            'labels': []\n        }\n    \n    # Calculate metrics\n    val_loss = val_loss / val_total\n    #...\n```","range":{"startLineNumber":689,"startColumn":0,"endLineNumber":720,"endColumn":0},"embedding":"AABevAAgYD0AYE09AEClvQCA8LwAgBy9AGA5vQAA5DoAYCO9AOAVPQDAjzwAwEK9AMCkvQAAzrsAALC5AIBGPQAAtbwAcIo9AAAqvQBgcD0AwPs8AADuOwDAJD0AAMG7AADyOwAAHr0AQOQ8AAC2uwDwsj0AgOC8AOAMvQAADr0AMIa9ACB+vQCg5L0AgA48AGBqPQAghj0AgLQ8AKAfvQAAFDwAgH69AECEvAAguT0AwBg9AIBjvABguD0AALk7AECDvQCAIrwAYHK9ABCLPQCAuDwAQMk8AIC9PADAxzwAMI29AABXPADAsDwAgPS8AECWvACACb0AwPE8AADMugAArLwA4Bi9AEC/vADAobwAQLQ8AIBAvAAAIL0AwCa9AMD7PABAqjwAAP+7AEBwvQDAQj0AIOM9AMD/vABAP70AgDC8AIDavACgLT0AgAA8AEDKvABgRL0AoN69AACduwCAcr0A4LS9AADDuwAAIjwAgKi8AGD2PQBgRD0AAKI8AKAKPQDwrb0AgHU9AEASvQCAUDwAwK89AOCHPQCgTj0AgLg8AACjOwAAKjwAgPA8AADAuwAAmDsAAOu8AABUOwAAlL0AACC9AMAsvQAgUr0AQNO8AADNOwCAZr0AgBO9AAAIugDgSj0A4Fg9AKBpvQBQiT0AAE09AMBFPQDwhL0AQFi9AACFuwAAhjsAoBw9AFC3PQBgdb0AAL68APDGvQBgPb0AQKw8ALCFvQCAwz0AAAQ7AKBAPQDAlrwAwJ88AMDEvAAAjLoAwKK8AABdPQBAzbwAQEE9AADoOgBQ2z0AANm8AIBFvACAgbwAAKW8AADYugAgpj0AoFM9ANCXvQAA8bsAQNA8AMClPABArLwAAJq7AACJPQCAl7wAADe8AIAivQDgmb0AoJQ9AAAvPQCACDwAQMq9AMA3PQAA+LwAIAS9AKAEvQBA27wA4Fi9AIB1vQAAnbsAAD68AABzvADQqL0AAJY8AMDZPAAAgDwAgKI8AAD6uwAAMjsAQJ+8AKCVPQBgVz0AAHA8AKBjvQBAvjwAgHc8AOB5PQAgID0AAGW8AAAqPAAAVjsAgIC9AAAPPADgqb0AQIi9AADjOwBASb0AQOW8AIBvvAAAOD0AAHs8AACkuwAAKzwAABK8AAC6vADgKT0AYJk9AIC2PAAAdrsAYDI9AOAVPQBA2TwAANa7AABouwCggz0AIEC9AMApPQDA+DwAwJW8AIA6vQAAmbwAAN47AECuPABwgr0AAEW8AIB9PADgDD0AoEU9AIAJvADgmT0AgIC8AIBzvQDARD0AAAo8AACwvABAGL0AwJ88ABCoPQCgST0AAIO8AMC+vACwkb0AAGC8AAD6uwCAMr0AACK9AGByvQDAZL0AYHy9AADVuwCwkr0AQK08AADbuwBA4bwAQNo8AIAgvQCATbwA8IS9AADKuwDA67wAgIg8AACnPACAgDwAIAw9AIAKPQCgWT0AoBA9AEB3vQBAkLwAAMo8AIC0PABA+zwAQIy8AIAHPAAAATwAgNY8AIBZvAAA7LsAgB09AJDKvQCAajwAwLC8AMDtPAAA6DwAIAi9AACEuwBAlDwAoBi9AAA2uwCAHj0AAK28AAAjPQBgtr0AgNq8ACBzvQAAWTwAALM8AAB0vABAB70AAI08AAAhPQAAQzwAALw8APCHvQDgQL0AoCk9ADCWPQAAAAAAQLG9AMA9vQCgCL0A8I49AAAXvADAvz0AAEC9AAAZPADAkLwAAMS6AABGOwAAdbwAAIG8AACqvADgRT0AYAY9AIAzvQCwmj0AAIo8AAD4PABAyr0AABu9AACivACAHjwAAMk8AOA6PQAAnbwAEIg9AIBiPAAAWbwAAGo7ALCAvQCAvzwAwKi8AMAVvQAABjwAQPq8AIAmPABApr0AALa7AOABPQDA7jwAwHE9AEAsvQBAqzwAABY7AAAovAAA0bwAIGK9AADcuwAgID0AwL48ANCUvQAAEDwAgJ+9AICyvQDgMz0A4Dc9AADXPAAARLwA4A89AABIPABAJT0AAIo8AEDdPACAHz0AAEA6AGAFvQDgvL0AwHQ9AAA/vABgMr0AAO67AICDPACwoD0AQOe8AEDbPAAgez0AoBs9AKCcPQCAiDwAADU8ANDAvQDwpD0AQO88AMDIPQDA/jwA4Lc9AMCuPAAAOrwAAHU9AKDpvQBgRj0AoOq9AICLvADATr0AANc8AABSPACgNL0A4Do9AMAOvQBA0bwAgAM9AECOPABgA70AAOS7AAB8PQDgJr0AAHy7AFChvQBwkb0AwPC8AIBwPADAKb0AAJ08AAAqvQAAjTsA4Fa9AOA6PQBgDb0AgBW8AGAyvQBAzTwAAHK7AMDHvABAcD0AQD69AAB/PAAAoDwAgAo8AAAEvAAAWLoAwEW9AMBNvQAATjsAYDi9APCKPQAAFDsA6CQ+AMCCvABA+jwAgKs8AABovQAALjsAABG8AKAnPQAAZz0AAGs9AGAaPQCAprwAAJy6AEAPvQAAbD0AAJU7AIDQPAAAW70AgHa9AECMPADAgbwAwK28AIBHvABAOb0AgCG9AMA2vQCAkjwAkDE+AIAcvQDgLr0AAJG8AABrPABA/7wAANi7AACmuwCAoLwAAMQ8AKAAvQAApLwAwKs8AAD/OwAA4jsA4E89APCfPQCgUD0AAPw7AEBCvQAAI70AQNy8AAASPABA/bwAwAk9AIBVvAAAeT0=","chunkHash":"d390f1c1d52e63d3599aa36f2f15d7d406dcd52144aee2f163cd9667050e153c"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef validate_model(model, data_loader, criterion, device, adjust_labels=False):\n    #...\n    val_acc = val_correct / val_total\n    \n    # Calculate F1 score (macro average)\n    report = classification_report(all_labels, all_preds, output_dict=True, zero_division=0)\n    val_f1 = report['macro avg']['f1-score']\n    \n    # Move model back to original device if needed\n    if force_cpu_validation and device.type == 'cuda':\n        model = model.to(device)\n    \n    return {\n        'loss': val_loss,\n        'accuracy': val_acc,\n        'f1': val_f1,\n        'predictions': all_preds,\n        'labels': all_labels\n    }\n#...\n```","range":{"startLineNumber":720,"startColumn":0,"endLineNumber":736,"endColumn":5},"embedding":"AAB6uwBAfz0A4G89ADCCvQAgAr0AwF+9AEBsvQBAt7wAoGC9AIBpPQCAS7wAAP68ANDdvQAA3LoAALS8AIDxPAAAabwAgEs9AECGvACgQz0AgDQ8AADbuwCAcT0AAJa8AAAWPACghr0AAMA6AAD5uwCghj0AgB+9AMAGvQAA+rwAQFa9AACBvQCQ+L0AQJg8ACBTPQCAID0AABw9AEAVvQDAJ70AIDS9AIBUvAAwpz0AAEo8AACyvABAfz0AAKG7AEC8vQAAOjwAQH29AKBkPQAA+TsAYHQ9AIDPPACgID0AoDa9AABBPAAACjwAAKC8ACAzvQDAJb0A4FA9AAA8vABAg7wA4BK9AGANvQAATrsAwN48AEDYvADAOL0AAKa8AMAxPQAAwDkAAJk8AKCIvQBgBj0AMPk9AAAxvQCA2bwAwOa8AADsvAAAFz0AAKq7AADNvAAggL0AANi9AEDvvABgVL0AULC9AAAgOQAAoDkAgOS8AJDoPQAABT0AwJo8AECMPACAqr0AQNk8AIB9vAAAqzwAQGs9AOA2PQAACT0AsIw9AAAAuwAAIDkAQPE8AABivABAFD0AQIK8AIA/PABwhL0AQBy9AKAXvQDA1bwAwLq8AADbvACAl70AoJO9AICJvADA2TwAQIM9AACLvQCAhD0AkJw9AAAFPQCQkb0AQMu9AAC8uwBAnbwAgAM9ADC4PQDA37wAwIK8AEA3vQCgKL0AgH88ACCdvQAwqT0AADA8ACAVPQDAibwAANM7AACivAAAnrwAwNO8AMBFPQDACr0AgG09AEDAPABw4D0AAOa8AAAYPABA47wAADa7AIAavABAgT0AgGY8AJCjvQCAybwAgK48AMDcPAAA17wAgBY8AMCEPQAAQ70AAIS6AMAlvQDgNr0AAK09AKBMPQAAtLoAQLW9AIARPQCgRL0AAMs7AADuvADARb0AQEy9AHClvQAA8jsAgFu8AMCtvACAcb0AAFI8AAD+PAAA8jsAgHG8AMChvACAzTwAoAq9AECbPQAgGT0AgEG8AEDivADA2jwAAGi6AAAfPQCAVT0A4BO9AIB0PAAABLwAUIe9AEDAvABgqb0A8KC9AACUOwBAr7wAAGq8AADkvAAARD0AgNQ8AKACPQDA3rwAgKa8AAAwOwAgGz0AUL89AMCQPAAAfrwAwGE9AABaPQAAsDsAAP67AADMugAAdT0AwBe9AEBbPQAAwLgAAFK7AMBVvQDAxrwAANM7AMAMPQAAAr0AAIC6AMDYvAAASDwAwFk9AID5vAAgsz0AgIK8ACBWvQDAYj0AAHQ7AIB0vADgLr0AABE9AECjPQCgAj0AgD28AIDovADQgr0AAN67AABwuwDAH70A4Dy9ACBKvQDgJ70AoLm9AADguQAwlr0AAMu7AABkvABACL0AAG+8AAA4vQBgHL0A4CS9AACQuQAAt7wAQMk8AIA7PQAgPT0AANE8AIDoPACgOz0AQBw9AEBNvQCgJ70AAPw6AOBOPQBAMj0A4AO9AACUPACAHzwAALk7AIBOPAAA4bsAAMS6AKCxvQCAezwAoB69AMCaPACgSj0AAEC9AACEuwAA5TsAAJC8AACXPADA7DwA4BK9AEBrPQAg170AAKi7AKBqvQAATDsAAIo7AAA2vQBANr0AAH47AIBKPQAAiTsAwKg8AIBqvQCgMr0AQPw8ACBGPQAACjsAgKC9AED8vAAALr0A4IY9AGAnvQDwkT0AAHe9AAD7OwCA+rwAADi6AIDpPACALbwAYCe9AIAIvQDAYD0AIGc9AKASvQBAcz0AgDq8AADnPABQ570AUI29AABhvQAAfzwAAI48AOAuPQCANL0AwDY9AIBuPAAAqrwAAIy7AIAfvQCgZT0AQL68AABNvQAAGjsAwCm9AEAKPQDgp70AAJu8AMApPQAAazwAMI89AED6vADAlzwAAPY7AMDovACAgLwAQEm9AICDPACAHrwAAEa7ABCHvQAABT0AIH29AMCfvQAAej0AoD89ACAlPQAA8bsA4DY9AEC6PADAFz0AAFy8AIC/PADgHD0AABE9AID7vACAsb0AwE89AICzvACAer0AAGA6AIBaPADA3TwAADa8AABIPQBAez0AMIA9AIBePQCAbzwAAL+7AICYvQCgQj0AQPE8AKCXPQCAhjwAoMg9AAAmPAAAbDsAoIU9AND1vQBgUD0AkLy9AADRuwCAn70AgFw8AAAKvACABrwAQLE8AAA3PAAAtrsAwOo8AIAbPAAAcDoAAA47AKAGPQCAjjwAAE08AECNvQCAEL0AgLa8AIAzPAAA8rwAAKo8AMCyvAAAQjwAYES9ACBQPQCAw7wAAAS9AICsvACAFz0AQIC8AMARvQAwhT0AwFe9AACfOwAAkLsAYAA9AEDFvACAvTwAYFS9AADQvACgCz0AoHq9AOAgPQAAwDkAqCo+AACfOwAgfz0AQMg8AABavQAABrsAAA+8ACAKPQAA1j0A0I49ACBYPQDA/bwAAFy7AMDKvAAgaz0AAAM9AADFPAAAbr0AADS7AAAdPACAZrwAYEO9AADLOwDAXr0AQNq8AICivACAhDwA4DY+AEDhvADAXb0AwB+9AGAlPQAAuLsAwIi8AIAmPABAjrwAwN88AEDxvAAAbTwAANS7AEAQvQAANjsAQNU8ADC4PQCgBD0AQCo9AEAsvQDgHb0AwAO9AIBePACA8LwA4AY9AAAiuwBgYj0=","chunkHash":"c8539ca218386d843a9054000db0b9e9b002532604d5c1b5f766a48d9511f1bf"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef plot_training_history(history, save_path):\n    \"\"\"\n    Plot the training history with enhanced visualizations\n    \n    Args:\n        history: Dictionary containing training metrics\n        save_path: Path to save the plot\n    \"\"\"\n    # Create figure with subplots\n    fig = plt.figure(figsize=(15, 10))\n    \n    # Plot loss\n    ax1 = fig.add_subplot(2, 2, 1)\n    ax1.plot(history['train_loss'], label='Training Loss', color='blue', linewidth=2)\n    # Filter out None values for validation metrics\n    val_epochs = [i for i, x in enumerate(history['val_loss']) if x is not None]\n    val_loss = [x for x in history['val_loss'] if x is not None]\n    ax1.plot(val_epochs, val_loss, label='Validation Loss', color='red', linewidth=2, marker='o', markersize=5)\n    ax1.set_title('Loss Curves', fontsize=14, fontweight='bold')\n    ax1.set_xlabel('Epoch', fontsize=12)\n    #...\n```","range":{"startLineNumber":739,"startColumn":0,"endLineNumber":758,"endColumn":0},"embedding":"AIDAvACAvzwAwAU9AJCqvQAAtjsAgPW8AIAJvAAAMTwAICy9AGAvPQCAvjwAgH08AGBDvQAAU70AIFs9APCdPQAAL70AsOs9AIADvQAAqj0AgLI8AADNvADwlj0AALU8AECjvACAYTwAwBY9AECFPAAA4DkAwOc8AIDQvAAAErsAAAe9AICvvAAAKb0AwOa8AABdPQCAQbwAAOg6AEAZvQAgWD0AsJ29AIBKPABIGT4AICU9AEC8vACA1jwAwEI9AKApvQDgFz0AgHW8ACBlPQCASb0AgPq8AADOuwAAKD0AYBu9AGA5vQCAPDwAoEa9AABCPABAA70AQIM9AKAhPQAA0LsAAKW7APCAvQDAST0AAAM9AADovABAJT0AgFq9AIAmPQAADjsAALw8AEDpvAAAEDwAAOs8AGBMvQAgtb0AAKE7AGBlvQDACL0AQGU9AAC5uwAQ270A8IS9AIDCvACA0DwAQNW8AICgPADAkTwAIKG9AOCmPQDAez0AUKI9AAAgOwDADr0AIF89AKAwvQCAWTwAACi6AMDyvAAAS7wAwAY9AIBbPAAAPT0AgG89AADAOwCAJzwAoEy9AIDtvABA1bwAgDu8AAAPvAAgnb0AAFa7AGAAvQAAUzwAgNK8AGCyvQAAwbwAwNU8ANC8vQDgAD0AQPU8AOCGvQDwgb0AgGY8AAA+vAAAg7wAAAK8AACSOwCwp70AAOy7AAAYvQBAy7wAwBQ9ADC7vQCAnT0AAFQ8AID+PACA1LwAgIy8AIDMPACAjD0AoBu9AIABPQAAEDwAgII8AABAuwDw4D0AoC89AGAuvQAA1LwAQMI8AAAjPACAoDwAAJe8ABCNvQAA67wAAOE8AECAvAAA17sAAEO8AOBFPQAAQ70AAEw8AECJvQBgN70AYBc9AFDCvQBgWz0AgEC8ANAAPgCAizwAAIy6ADCevQDAmr0AAOS8AABDvQAAzDwAYIe9AACEuwAAxL0AADi6AED8PACAhDwAYBs9AMC+PQAAELsAgM28AACxPACAGDwAAAo7AACMvABABj0AABO8AADlOwAAVrwA4EO9AMBqPQAAxrwAQCS9AADTvAAQs70AAP68AACwvAAAcLoAgNS8AADvvACAej0AwNc8AAAUOwCATDwAAPi7AEBrvQAAELoAQI08AAC7OwCAHL0AYIe9AAASvACA4DwAQDY9AICqvAAgwD0AgBG9AAB9PACgRD0AgEQ8AEA2vQAA5jsAQBM9AMDuPACATL0AgNy8AAB0OwDABD0AYCw9AABAOQDQwz0AAJ28AICZvACAuzwAgFk8AIA6vQAYA74AAK08AIAzPQAAlrwAACY9AIBsvQCAbL0AAL27AGAEvQBQqr0AQAK9AECTvQBA6LwAoNM9AADfvAAA5bsAgD88AECCvACAJz0AAB08AMDkvABgmr0AgE+8AGByPQDA+bwAgB48AIDrPAAANDwAAKE7AMDhPABAaT0AwJ28AAC+vAAAALoAYG49AOA8PQDAXT0AABQ7AIBVPABAFr0AALS7AACWOwAA3bwAgJS8AGBOvQAAYDoAAPA7AADNPADQpz0AgLC8AIBsPQDA4zwAgEC8ACBtvQCAF70AAF88ADD3PQAAarwA4JA9AEAqPQCgF70AAK08AABsPACAvbwAwKK9ANDIPQBAgjwAgFY8AIAtvQBA6jwAIFU9AEALPQAAub0A4Fa9AADovADAmbwAoLM9AAAZvQCAZ70AAPG8AIAyPAAAAjwAQCA9AIAePABgFb0AkKa9AICvPADAtbwAEJM9AMALvQCABzwA4IU9AICHPACwAL4AoCq9AOD7vQAQm70AAFY9AECaPAAA6DoAgG89AIAFPACAk7wAwDC9AABwvAAAlrsAAAC4AACbPADQvL0AsIe9AADIuwDAubwAgDs8AADivAAAArwAgIs8ALCVvQDAhzwAABY8AACbuwAgCD0AgGU8ACAMPQBAxTwAgP+8AKBvvQBgF70AQPq9AAAXvAAgeD0AAIq8AADMuwCgJj0AwD29AMCTPAAAUT0AAN67AIDjvAAAALoAgLY8AADoPACgHb0AYIQ9AABOOwDwr70AAJG7AEAxPQAgHz0AwBy9AOBFPQAAjj0AIEo9AOBXPQCwmL0AgBq8ANCDvQAgLr0AAMg7AED9PABgAj0AADM9AIDNPADA5zwAIHU9AMBdvQAAELsAsPG9AEA9PQDAA70AAIA5AACZuwCAKbwAAJU9AADYuwBAk7wAgBk8AECSvQBAHb0A0IE9AIDnPADgIr0AQOo8AFCKvQDA+rwA4DA9AAA8uwAgHz0AgAk8AJDKvQBA6rwAAGO8ABCMPQCAy7wAQP88AMBBvQDAojwAAJS7ACAPvQDgET0AAAa9AADkOgAADz0AAP07ABDQPQAA1DwA4KW9AADpPAAAHLwAABc8AIBCPABgDL0A4J89AABtvABgJj0AwGY9AOAzvQCwpD0AgPQ8AADcOgCA9DwAAIw6AGApPQCQmb0AAAa7AOAJvQCAQzwAwAm9AIBjvADAurwAYAe9AIC2vACAETwAgBe8AEDcPACA3TwAIDG9AIAAvAAAPLsA4Bc9AADEvADgxb0AAO67AAC+uwCA3LwAAJo8AAByuwCAd7wAQI69AACmvAAwpr0AQDu9AACxPAAApDoA4Ec9AABHPQAAEj0AAC08AMCyPAAAC70AQBG9AABIOgCAVDwA4Gg9ACAXvQAAfzw=","chunkHash":"9f859305af55887101fcea9dfd37898a1a1dac756ffe211154fb02bfa015aebe"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef plot_training_history(history, save_path):\n    #...\n    ax1.set_ylabel('Loss', fontsize=12)\n    ax1.legend(fontsize=10)\n    ax1.grid(True, linestyle='--', alpha=0.7)\n    \n    # Plot accuracy\n    ax2 = fig.add_subplot(2, 2, 2)\n    ax2.plot(history['train_acc'], label='Training Accuracy', color='blue', linewidth=2)\n    val_acc = [x for x in history['val_acc'] if x is not None]\n    ax2.plot(val_epochs, val_acc, label='Validation Accuracy', color='red', linewidth=2, marker='o', markersize=5)\n    ax2.set_title('Accuracy Curves', fontsize=14, fontweight='bold')\n    ax2.set_xlabel('Epoch', fontsize=12)\n    ax2.set_ylabel('Accuracy', fontsize=12)\n    ax2.legend(fontsize=10)\n    ax2.grid(True, linestyle='--', alpha=0.7)\n    \n    # Plot F1 score\n    #...\n```","range":{"startLineNumber":758,"startColumn":0,"endLineNumber":774,"endColumn":0},"embedding":"AAD3uwAAejwAAJQ9AMDkvQCAErwAQAq9AEDvvABAkzwAIHC9AKBTPQAAaDwAgI28ADCWvQBgSb0AgEY8AHCMPQCgBb0AcJQ9AAArvQCgOz0AQIw8AICKvACQkT0AgEa8AIBsPACAiLwAwDo9AEANPQCAnDwAQMi8AIA3vQAAqLsAIE+9AACBvAAgfr0AIBe9AOAsPQAAirsAACE8AMBVvQBgAT0AYHW9AIA8vABQpz0AQLw8AIBOvQAACD0AQAs9AKCTvQAADD0A4BG9AKAyPQAAubwAgJK8AIDIvACQqD0AANq8AOAHvQBAIT0AgAW9AIASPABANL0AII09AEDAPACAXrwAgDe8APCQvQAA9jwAwFw9AOA/vQAAODwAYBW9AKA0PQAAEDsAgGc8AADSvABAiDwAIJc9AMAuvQBgcr0AACA7ACBSvQAAbLwAwNs8AIACvABQ8b0A8NW9AMC2vAAAzjsAYEi9AADwuQCAejwAwFG9ANDCPQAQiz0AoHo9AACSuwDAIL0AQDE9AIA5vQBAnjwAQAQ9AADCuwCAEzwAwIY8AIDqPADA5TwAoBs9AADfOwAgFD0AIBS9AOBEvQDQh70AgFw8AADBOwBwgb0AAOi6AIBdvAAA4rsAwBa9AACevQCAFr0AwJA8AODGvQCgFz0AoCY9AACIvACQgL0AABo7AMDqvAAATLsAAAC7AIAHPADghb0AAEo7AIC0vACAlLwAYHA9AFDavQCwwj0AwJQ8AEAAPQBAEb0AgGy9AAC5OwBApj0AQOa8AABKPQCAPjwAAAg9AACqOwDYET4AAIM7AMCzvACAKLwAQC09AAC7uwAAyjsAwAy9AEAhvQDAx7wA4Gk9AACBOwDA/LwAgGm8AGCfPQAQkL0AAJe8ADCbvQAgS70AwBM9AJCSvQDAqDwAwPC8AECxPQAAfDsAgCq8AIAXvQCAx70AwMC8AJCNvQBAsDwAoC69AIB0PABAr70AgJa8AMC2PACACD0A4AI9AACQPQBgKD0AoA69AMBBPQDAmTwAAKi8AIApvQAAwzwAQKO8AAD5OwAA1DwAQOu8ABCLPQBgFL0AICK9AAAcvQDAs70AIH+9AOAUvQCAdLwAAEK8AAAbvACAUj0AgPg8AMAfvQCA67wAAPY7AIAcvQDwiz0AgFo8AID3PACApbwAoEy9AAAyPAAgaj0A4A49AICDvACYAT4AwKm8AMAQPQAADDwAACq7AMACvQAAJrwAwPM8AMBiPQBgXL0AgDO8AIAmvADA+DwAgEw9AMCEvABwyD0AgAQ8AIDfvADARj0AAJO7AAApvQDg6b0A8IY9AEAEPQBABr0AoBU9AEAxvQBgZL0AgKy8AED3vABgO70AgBK9AOAPvQAAHr0A4BU9AACZvABAyrwAwLg8AICFvADA8zwAgK08AEC5vABQgr0AgL+8AMD5PAAAzjsAAP88ADCBPQCAMD0AAKW7AMDLPABgrz0AQIi8AAAZvACAnbwAgPM8AIAZPQAgYD0AIA09AMCaPABgV70AABO8AAC1uwAAiLoAwKG8AECVvQAAGTwAAGs8AKAjPQDwiD0AQAW9AMDJPAAApLoAAHO8AADQOgAAJL0AAMg7AEAMPgCQjb0AsKY9AMCZPAAAxjsAAOw8AIBJPACAgLwAYDK9AHDDPQAAYDoAAFM8ACAzvQCAYzwAANg6AED1PAAgrr0A4DO9AECjvQAA27wAAMc9AGAqvQCgVb0AAKu8AAAcPAAAqzsAgI09AABmOwDgEb0AsNC9AADfPACACbwAQNs9AKA+vQAATD0A4As9AICePAA4D74AAHG9AODmvQDge70AIGY9AMDdPAAAwDsA4E09ACAmPQBAkrwAgNm8AIBmvAAA7DoAgIi8AECNPAAAlr0AUJG9AADBPACgKr0AAEs8AABivAAAhbsAAA68AGCCvQAA/zwAgK48AIAKPAAA1bsAAI67AKByPQAARLsAIAK9ABCLvQAA5rsAkM+9AECPvABgZz0AgKQ8AMDVPAAAHT0AwOu8AADaOwDwgz0AgKS8AADGvACAYLwAgG88AMDgPADgJb0AAEk9AADdOwCgsL0AAFY7AAA7PQAAYT0AQCS9AECMPQAQnT0AAEE9ACBmPQCwgr0AgBU8AGCfvQCAVbwAAPQ7AMBBPQDA0jwAQDg9AIAmPQBAkDwA0I49AGCHvQCAFj0AANy9AMDwPADAIL0AgIU8AMCcvAAA2bwAgAk9AIABvQBAhbwAgFE8AABrvQDAjLwAYFc9AOAIPQDA47wAYBw9ACBvvQCAMbwAwJI8AABhvQDgMj0AADK9AGBnvQCAwbwAwCO9AGCEPQCAAbwAgDg8AAC0OwAAwDoAAPu7AEDlvADATz0AgDK9AACwuwDAojwAgEw8AECoPQAAsDsAoJi9AACMugDAlTwAAF28AAAwPQDAqLwA8Mw9AAAMvADApTwAgNY8AGBzvQDAaD0AACA7AABxvADgkz0AAD48AMCSPACwj70AwCe9AGAMvQCgGT0AQNy8AADzuwAAPrsAQBO9AAA9PAAAwLsAgBe9AEC3PACAIzwAALe8AIBlvAAADbwAwLo9AAAgvADQsr0AALe7AAAIuwCAmrwAQJA8AICEPADAp7wAwAm9AAD3vADAW70AQOO8AAAQPABgFr0AABQ9ANCFPQBA7zwAgKM8AAAyOwDghr0A4Ay9AAA8uwAALT0AgEY9AACsOwCAZTw=","chunkHash":"f8dbbbf9a73e652c37318ebc8e7cc293d85c6a6ab72cc6dc8bfbc2f6d6a17c4a"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef plot_training_history(history, save_path):\n    #...\n    ax3 = fig.add_subplot(2, 2, 3)\n    val_f1 = [x for x in history['val_f1'] if x is not None]\n    ax3.plot(val_epochs, val_f1, label='Validation F1 Score', color='purple', linewidth=2, marker='o', markersize=5)\n    ax3.set_title('F1 Score', fontsize=14, fontweight='bold')\n    ax3.set_xlabel('Epoch', fontsize=12)\n    ax3.set_ylabel('F1 Score', fontsize=12)\n    ax3.legend(fontsize=10)\n    ax3.grid(True, linestyle='--', alpha=0.7)\n    \n    # Plot learning rate\n    ax4 = fig.add_subplot(2, 2, 4)\n    ax4.plot(history['learning_rates'], label='Learning Rate', color='green', linewidth=2)\n    ax4.set_title('Learning Rate Schedule', fontsize=14, fontweight='bold')\n    #...\n```","range":{"startLineNumber":774,"startColumn":0,"endLineNumber":787,"endColumn":0},"embedding":"AAAwvABAlbwA4H89ADgGvgAApbwAICa9AMCTvAAAyTsAQHi9AOA4PQDAizwAQKi8AKCtvQBgOb0AgNs8AGBXPQBAwLwAQJU9APCEvQBgYD0AAOw8AACpvACgpD0AAHA6AEDpPAAgB70AoA09AICVPAAA8zsAwLS8ACBTvQAA1rsAgIS9AAAbvACgkL0AwOq8AAD0PAAAUrsAgAE8ACBevQBAqTwAsKG9AADKuwAQ4D0AwM08AKBzvQAAbLsAgDs8AJCGvQCgNj0AICm9AMAKPQAAFb0AgHG8AIDrvAAAmT0AAHm8AMDrvACgSj0AICC9AABpPACgVb0AAJg9AICLPAAAILsAgFE8ABCavQBA1zwAoC49AMAbvQCAAbwAwBC9ALCHPQCALLwAAJE8AABGvACALjwAoIY9AMBHvQDAhL0AAME7AEBVvQAAALgAgPk8AAAIuwAw870AINi9AMDwvAAAQDkAoF69AAASvADAhrwAkIe9AHDoPQDgiD0AQI89AAA2vACQgL0AIBw9AEC2vADAgjwAAAC5AAApvAAAyDwAQKk8AOAaPQBACT0AkJM9AEC6vABAjjwAEIi9AOBLvQBAT70AAHY8AAAIOgCQhL0AgHu8AIADvACAubwAQGq9ACChvQBANr0AgAk8AJCcvQBgEz0AAOg8AMDAvABgbb0AQL48AAAAvQAAZDsAwLu8AABOOwDQlL0AAEw7AIDevAAALrsAQFQ9APDEvQDgqz0AAMg8AEDaPACgCL0AAEu8AMDSPAAQsj0AIEe9ACBvPQBgAT0AANc8AADSOwAwCj4AAFk8AICivAAA4zsAQM08AAAPvAAA+TsA4Ba9AIDcvAAAVL0AIFY9AADBOwCgNr0AQO68ACCHPQAgaL0AwAW9AGCcvQAgOb0A4G09AHCSvQAA7TwAwPO8ABC2PQAAjDsAgNa8AIDhvACgrb0AgIC8AOAmvQDA9TwAYJy9AECmPAAQj70AAKc7AICiPAAA4DsAgNc8AACWPQCgLD0AAC29AOBWPQCAvDwAAH67ACAOvQDABT0AoAG9AABfPABAvTwA4Bi9AICaPQDAO70AAAK9AOARvQAQwL0AQCq9AOAxvQAAHbwAAMs7AAD/uwCgaT0AQMQ8AADWvABgTr0AgIg8AMA4vQAApjwAgG88AIA1PAAAYrwAYH29AMDZPAAgjT0AoA89AIBZvABwzD0AAP+7AACDPACA1zwAwI88AMDuvAAANLsAAEA5AEBTPQBAp7wAQOm8AAB3vADArzwAgPg8AAD+uwBA0z0AgGu8AICpvACgMj0AAMO7AIAWvQCA5L0AQGU9AAB9PQDASb0AgK48AIBuvQDwlb0AwPy8AIDvvACAOr0AgOy8AAALvQCgTL0AAOM8AADCuwBA3bwAwBQ9AABIuwCAED0AQNE8AMDdvAAgb70AQLu8AIAaPQAAWLoAQCY9AGA3PQBADT0AALi7AKBAPQCgmT0AQAm9AIAzvAAAd7wA4Gg9ACBFPQCgDz0AwKw8AABAPAAAobwAAEi7AIBQPACALLwAgIC8AMAevQCAyDwAAJ27AOAxPQBAhz0AgKW8AEAAPQAAlzwAgEO8AIBMvACgM70AAEE8APDkPQBAqb0AUJA9AID6PAAA6LsAoA89AICuPAAAK70AgBS8ABC7PQAADjsAQK08AADLvACAWDwAwMM8AOAlPQBQq70AgFe9ABCfvQAA4rsAwNE9AKA8vQBggb0AAMa7AECFPACAUzwAEI09AAAauwBgWb0AULW9AICuPACAPjwAEKg9AMBRvQBAxzwAwLo8AECTPABoAb4AgHO9ALDrvQBAT70AgJg8ACAaPQCAg7wAoCA9AEAgPQCAK7wAgOG8AAC7uwAAEjsAgJe8AAC4OwAg0L0AYG29AIA0PAAgfr0AgAU8AAA1vAAAaDoAANC5ADCCvQBACD0AgOI8AACkugAAFrwAANY7AMCAPQDAkDwAYFi9AABwvQBA+rwAsMW9AKAjvQBQoz0AAHY8AABbPADATz0AAN28AAAgOwCgrT0AgG68AIAavQAAODsAQMc8AEC+PACAOr0AQC09AIAiPADwsr0AAKg7AADJPAAgRj0AoAq9AJCGPQAQhT0AIEw9AMAyPQBwj70AABK8ACCPvQAAzLoAAIw7AIAfPQBACz0AIFQ9AEAbPQCAErwAwEg9ADCGvQAAtjsAALq9AOBaPQCgA70AAAK7AAC/vAAA7rwAoIo9AMDDvAAA1LoAAHQ7AOA+vQAAMrwAoLo9AIA8PQBAzbwAwJY8AMBGvQCArLwAYAk9AEB3vQBQhj0AoC69ADCJvQAAp7wAgPG8AIBmPQAAIDkAQM08AAAAugAA3bsAgBk8AIACvQAAUj0A4Fy9AIAsPAAA5LoAwLk8AKCnPQAA2LsAIEa9AMCEPADALD0AADe8AMBMPQDApbwAYJU9AAAOOwDAwDwAwFE9AECMvQCQhD0AAKI8AIDGvABQgj0AANY7AECfPAAQrr0AYAm9AIBdvACACT0AYDS9AECevAAAADsA4Aa9AMDHvAAAmTsAgDm8AEAFPQAAejwAAHG8AAC1OwAAkDsAoKg9AACgOgCgkr0AAGC6AABwOgAAirsAgDU8AIAKvAAAnLwA8IS9AAAfvAAAQ70AgCG9AAAOuwCgLb0AIA09ACCDPQCAVTwAADC7AAC7OwDgLL0AAPy8AABvvABACz0AQPE8AADcOgAA/zs=","chunkHash":"260a7480c124a8bee5030ac0bd4a87bc7a64af4cb9d7404b0bc3b60eb2abc176"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef plot_training_history(history, save_path):\n    #...\n    ax4.set_xlabel('Epoch', fontsize=12)\n    ax4.set_ylabel('Learning Rate', fontsize=12)\n    ax4.legend(fontsize=10)\n    ax4.grid(True, linestyle='--', alpha=0.7)\n    if len(history['learning_rates']) > 1:\n        ax4.set_yscale('log')\n    \n    plt.tight_layout()\n    plt.savefig(save_path, dpi=300, bbox_inches='tight')\n    print(f'Saved enhanced training history plot to {save_path}')\n#...\n```","range":{"startLineNumber":787,"startColumn":0,"endLineNumber":796,"endColumn":65},"embedding":"AACKvAAA4LoAIGk9ANDZvQAAeDsAwEa9AACvuwAAozsAAH+9AABbPQAAITwAAFy8AEBovQAAab0AAGQ9ALCMPQBASb0AIK89AOB2vQDART0AQLY8AIDTvAAwyT0AAMs7AAAgOwAA3rwAYCk9AACcPAAAYDoAAEi8AEAwvQAAqrwAQGG9AADIvAAAUr0AYCC9AEAXPQAAorsAABy7AJCJvQCA7DwAINW9AACWOwCQ2D0AQOw8APCDvQAA5LsAYBU9AIDBvAAgMz0AAPa7AOAbPQDALr0AgBO8AEDIvACgkT0AAJk7AAAKvQBA6jwAYAe9AMDKPACgJb0AgIU9AMDTPAAAaDsAAO87AOCwvQAAJz0AYCE9AAA6vQCAgjwAYFe9AEB3PQAAjrsAgG08AIC3vAAADTwAAF09AIC7vACAbL0AABg6AABCvQCAbLwAwG09AADYuwDwB74AMMG9AADDvAAAKLsAQO68AIAGPAAA3bsAAFm9ANCcPQDASD0A4Gg9AAAIOgDgQL0AYBY9AMCKvAAAxzwAQIM8AACsvAAATjsAAOw8AED3PADAFT0AQFg9AAC3OwDgAj0AoGO9AEAKvQBAH70AANA6AACruwCwqb0AABm8AAAFvAAAqrwAwAe9AFCUvQDAqbwAgIM8ANCevQCAUT0AgCo9ACAjvQBghb0A4Ek9AADFuwBA4rwAAJ27AADKOwCQuL0AAIy6AAARvQAAS7wAYBE9AHC9vQAQxz0AwA89ACA8PQAANrwAQJc8AECQPAAQwz0AQIG9AHCGPQDAjDwAwJA8AIDYvAA4Bj4AANQ8AADqvAAAArsAQCA9AACouwCArDwAoF+9AKBNvQDgGb0AIIY9AAC7PABA+LwAgNO8AMA7PQDANr0AANS7AICJvQCAU70AUIA9ADCRvQAgUD0AwLy8ANCqPQDAmTwAgI68ACBWvQAwxb0AgF+8AIA3vABgAz0A8IG9AIBpPAAwnr0AAGU8AAAAugAACTwAYDE9ABCkPQCAXzwAgDy9ACBPPQAAAzwAgFG8AEDxvADAhDwAgDi9AIBUPAAAkzwAQO68AOB5PQDgMb0AQOG8AECovADg4L0AYAa9AGAGvQAAJLsAgFS8AIAdvACAfz0AAAI9AEDzvADATb0AAKy6ACAMvQBAsjwAwMQ8AIAoPACA3bwAcI29AABhvACgXz0AICk9AMAHvQCguz0AgBa8AACAuAAADz0AwJg8AACpvAAACDsAAKG7AKAkPQBAg7wAgOm8AIACvABAhDwAwIU8AACgvACwsj0AAIq8AMDOvADA9DwAgAs8AIAmvAAgAb4AQCE9AGBxPQCgQL0AIAM9AEB3vQDQn70AAF28AEDyvAAgYr0AAIK8AMBbvQAAJr0AAIU9AKAEvQBAjLwAIAI9AAA2PADAJD0AgN88AADMugAgZ70AwLa8ACA0PQAAgDgAwOY8AEAMPQAAKDsAALU7AIAiPQBAgj0AwNS8AEC+PAAAWbwAoGM9AIB3PQAgXj0AgBM8AIAGPABA3rwAgDw8AACSOwAAs7wAADo7AAAuvQDAtjwAAEC8AABIPQAAhz0AgKK8AMCtPAAAmTwAwIq8AAB4ugBA9bwA4BA9AACwPQCwtL0AoJI9AMA3PQAA6bwAIHw9AMCrPAAgIL0AgEG9AAC5PQCASDwAgNU8AADNuwAAXDsAwNw8AKAGPQCgn70AgOe8AACJvQAA1bsAQKs9AECovAAgK70AwMy8AAC+OwAAfjwAYH09AIAQPABgTb0AQM+9AACJOwAAfjwAEL89ACBLvQAgDz0AwOA8AIBkPADICL4AYBS9ALDgvQAwh70AQMI8AIDuPACAJjwAYDA9AEAcPQAABLsAYBS9AACLuwAA2LoAAGI7AIDmPAAQv70AwEW9AIAAvAAgar0AANU8AEDDvABAgDwAgJw8APCmvQBAszwAIBQ9AICIvAAASLsAAMg7AGBbPQCA1jwAAJC8ACB6vQBAU70AoLu9AMD7vACwsT0AAMm7AADxOwBATz0AYBe9AEDcPAAArj0AQKu8ACAevQCAKDwAwNE8AEC+PACgKb0AgAY9AIAZPABgob0AgDQ8AAA1PQBAID0AgEm9ADCZPQCAdz0AYA09AMBzPQCAlb0AgAW8AGBOvQAA3rsAAPA6AAAXPQBgYD0AYBY9AIBFPQAAjDwAYFY9AGCbvQCAFDwAUOW9ACAkPQAgTr0AALK7AEADvQDgLb0AILI9AKAFvQAAk7sAABY7ACB+vQDA5bwAsK89AACfPACA37wAQM48AID3vACAKbwAQOA8AED5vABgfT0AgOu8AGCSvQAAML0AwLm8AICnPQAA3DoAwM48AACrvACAF7wAAOk7AIB0vADAAz0AIDO9AAAfPAAAarsAAIC4AHCwPQCAMrwAoCq9AABAugDgJz0AgAI8AMCmPABAjrwAALo9AIA7vACA6zwAAEU9ABCZvQAgsD0AwKI8AAC1vAAgbj0AANQ8AAC9OwBwtL0AAA29AID4vACgGT0AgDe9AMCJvAAAa7wAoCW9AIBUvAAAhDoAAM28AECePADAFz0AICS9AAATPACAGTwAULk9AAC4uwAgrL0AACY8AACOOwAgBb0AAPM8AACYOwBAkbwAgFK9AABIugAAV70AIA+9AACJuwDA37wA4Aw9AMB6PQCgFD0AANg7AADgugAgEb0AgNS8AAAMuwBAtTwAYBQ9AAD0uwBA4zw=","chunkHash":"98e11654f16b8b0270756103ea791436664a3d14ea686ccedb732ea3e31e327a"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef evaluate_model(model, test_loader, args, adjust_labels=False):\n    \"\"\"\n    Evaluate the model on the test set with enhanced metrics\n    \n    Args:\n        model: The trained model\n        test_loader: DataLoader for test data\n        args: Command line arguments\n        adjust_labels: Whether to adjust labels from 1-based to 0-based indexing\n        \n    Returns:\n        Dictionary with evaluation metrics\n    \"\"\"\n    device = torch.device(args.device)\n    model = model.to(device)\n    model.eval()\n    \n    all_preds = []\n    all_labels = []\n    all_sample_ids = []\n    all_probs = []  # Store prediction probabilities\n    \n    with torch.no_grad():\n        for batch in tqdm(test_loader, desc='Evaluating'):\n            # Get data\n            volumes = batch['volume']\n            labels = batch['label']\n            sample_ids = batch['metadata']['sample_id']\n            \n            # Move to device\n            volumes = torch.stack(volumes).to(device)\n            if adjust_labels and isinstance(labels, list):\n                # Convert labels from 1-based to 0-based indexing\n                #...\n```","range":{"startLineNumber":799,"startColumn":0,"endLineNumber":831,"endColumn":0},"embedding":"AECWPAAgRD0AwOc8AJCHvQCAGrwAAAQ7AICDvQAAqbwAgMG8ACCbPQAAiTwAgCu8AAAavQAAkLoAIC89AAAYugDgeL0AwLc8AAAAOABQhz0AAKC6AIAdPQDg1T0AgP88AACUOwAAbrsAAGK7AECNPABAbT0AAPo7AMDJPAAAvbsAADm9AECMvQCQzb0AADo8AMDNPAAAlDsAYA09AIAivAAAi7wAAGC7AMCEvACArD0AwLE8AACdvAAw0z0AwIC8AAAnvQBAWT0A4Ie9AGB0PQDA/LwAYBC9AMCGPQAAd7wAwAC9AECXvAAAMbwAgPS8AKBUvQBAWr0AAOs8AIAJPADgVr0AQH29AEA1vQAAKDsAADE9AKAbvQBAt7wAwIa9AICsvAAAnTsAAOQ8AAALvQBAez0AIFI9AMBvvQAAkDoAAGS7AIDQvADAhjwAQAA9AAA4ugDgIL0AgJW9AMCLvQAAabwAsL+9AGANvQAAfrwAwC69AFD/PQAgUz0AAIC4AACUugBAVL0AAAo9ACBTvQAAizwAAG09AECuPACA/DwAYJI9AABBvACgRT0A0Jg9AKBIPQDAzDwAgEG8AKBLPQAQqb0AAIC9AOAavQDAtbwAgBg8AAD9vAAgFr0AYDq9ACA9vQCgUT0AQKI9AAAivQCgHT0AgGu8AMBKPQDAbL0AcIa9AADEugCA+bwAAO87AEClPQAgTb0AIBy9AABQvAAAxLsAAPc7ALCrvQBwlz0AgJ68AKADPQDgNr0AgCs9AKBtvQDAg7wA4Fi9AIA2PQAgJb0AwFQ9AIDaPABQjz0AACC7AMCGvAAAozwAIAu9AOBLvQAQiz0AAGc9ABAAvgBAJD0AAJ67AADpOwAQlj0AQJ88AECAPQDwgL0AgFc8ACBxvQDgkr0A4IQ9AACkOgAgmz0AkJS9AMAiPQDgQr0A0I69ACCzvQCAur0AoC69AMC7vQBAlDwAQDW9AACNuwBQoL0AwI08AAB0PABAWT0AADe8AACOOwAgX70AgAK8AKAYPQDgBD0AwBe9AKABPQAAQj0AANU8AACPOwAgfT0AAD29AEB/PQAALjsAYEi9AACmPABAYb0AgKK9AOArPQAACj0AAAu8AAA+OwCAWj0AgHY8AGANPQAANLwAADw7ABCpvQDgDr0A4HE9ACAmPQAAMjsAAGW8AIDgPAAAi7wAIBC9AEDDPAAAWzwAwMy8AADPOwCgLj0AYF29AKAyvQAghL0AAGA6AMCFPABA8bwAAMK8AAAyvQDAMT0AQK68AIBjPACgsz0AUI+9AKB0vQDA5DwAwJY8AABKuwCAFr0AQM08AEBBPQAApjwAoBO9ACA4vQCQu70AQKw8AABUvADAO70AwOE8AHCAvQDgNb0AwPS8AGA1PQCwhr0AIES9AGAMvQAAJrsAALO8AMBLvQBAHr0A4HS9AGBhPQAAErwAgLA8AKAWPQCAajwAgPs8AAByOwCACj0AADM9AJDhvQAA2DwAgAS8ACBUPQAgMz0AADy9AEDavADgML0AgK68AMCzPAAADzwAQJU8AKBOvQAAeD0A0IW9AAC+uwAgLT0AABe9AKAovQCA4DwAgP28AIBPvADAtjwAAGG8AIANPAAAnLoAAKI8AICPvABAmLwAgLG8AKAZvQAAa7wAAI07AKBoPQAgJj0AIEs9ACAYvQAATbwAYBA9AIDGPAAAIjsAkLy9AAC1OwCApLwA4G49AICwvAAQqT0AwA+9ACA1vQCAcrwAAOk7AECaPAAAu7sAQNm8AAAPvADgdT0AgKI9ACAQvQAAFj0AAFc9AGBPPQBAF70AgHK9ACBCvQAgMr0AAOA8AACtPACAJr0AIIw9AADOOwAA8LkAwAQ9AGCbvQCATz0AQAK9AMCNPAAAHr0AwOy8AMDAPAAAS70AALW8AACEOgDA9jwA4HU9AGAuvQBA4jwAAM87AICgPAAAJz0AgMK8AADIuwCALDwAcLw9AKAlvQCACbwAMLe9AMAhvQAggT0AIAQ9AABAuwAAe7wAgGE8AIDHPAAAoTsAAEq7AIC1PADA2DwAAAm8AIBWvQCQlL0AoBg9AIC/vADw4r0AwJ68AIDDvABgMj0AAP08AICZPAAA3TwAcKg9AAB/PQDgPL0AAPE7AEBsvQBA3LwAwIA8ACCFPQCAaLwAAHM9AAAXPQDAjjwAELE9AJC8vQCgNz0AgM69AADivABgYb0AwAA9AIAePACAPjwAAKU9AOAuvQAAoLwAsJs9AIBrPADA27wAAE88AAB4vABAGb0AAMc7AOAIvQAgP70AgLa8AIAXPQBA7bwAYBc9AADZuwDABD0A4Ac9AOC3PQAA0bsAQAM9AAAIvQCAF7wAwNe8AMAkvQAA1jwAoFK9AOANvQDAWj0AYBc9AAAIPACgFj0AwHa9AECvvAAQlr0AgMy8AAAhPQCAkrwAuBY+ADCFvQAQgj0AgLK8AABRvQCAs7wAAGS7ABCSPQDgKD0AcII9AIA3PQCAuzwAIBg9AABeOwCAgjwAgBc8AIADPADAHb0A4AS9AABGuwAATjsAAPg7ACA8vQAQnb0AgGu8AMClvAAAHL0AWAo+ACAXvQAglL0AwEK9AABSvAAgZL0AALY7AMDlPACAaLwAwJ48AGAzvQBAkjwAgPg8AMDlvAAA0jsAIBq9AAAOPQCAxjwAYIc9AAA4vAAAADwAAKg6AGBbPQAAlrwAoAg9AOC4vQDABD0=","chunkHash":"399b66b9dd784d5d9958ef668bbfec305cd52132e459ece1054befec648452b1"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef evaluate_model(model, test_loader, args, adjust_labels=False):\n    #...\n                labels = [l - 1 for l in labels]\n            labels = torch.tensor(labels).to(device)\n            \n            # Forward pass\n            outputs = model(volumes)\n            _, predicted = torch.max(outputs, 1)\n            \n            # Get probabilities using softmax\n            probs = torch.nn.functional.softmax(outputs, dim=1)\n            \n            # Save predictions and labels\n            all_preds.extend(predicted.cpu().numpy())\n            all_labels.extend(labels.cpu().numpy())\n            all_sample_ids.extend(sample_ids)\n            all_probs.extend(probs.cpu().numpy())\n    \n    # Calculate metrics\n    cm = confusion_matrix(all_labels, all_preds)\n    report = classification_report(all_labels, all_preds, output_dict=True)\n    \n    # Calculate top-k accuracy (k=2) for multi-class problems\n    if len(np.unique(all_labels)) > 2:\n        top2_correct = 0\n        for probs, true_label in zip(all_probs, all_labels):\n            #...\n```","range":{"startLineNumber":831,"startColumn":0,"endLineNumber":855,"endColumn":0},"embedding":"AIB7vAAA3jwAgDo9AIDgvQDgIr0AQEy9AEBuvQCAIrwAIAG9AECGPQAAvLsAgEe8AMAlvQAAMDwAgCU8AEDDPACAEb0AQB49AAC9OwAgGj0AgFG8AADcPABQwD0AAO87AAA8PACABL0AYC89AMCiPAAALD0AgLO8AADwOQBgJr0A0IO9AHCyvQAw5L0AAIg7AACSPABANT0AgDA8AMCfvACAFjwAgMm8AOA1vQAAlj0AoIs9AACuuwAAcD0AgKi8AGApvQDA8DwAgGu9AJCkPQAAXjwAAF08AOAFPQAApTwAYCu9AAD4ugDAqjwAAAq8AACEvACwmr0AACg9AADuOwBgiL0AgOi8AJCWvQAAVLsAIFg9ACBavQDAIL0AgNG8AIDGvABAhzwAAG08AGBZvQDAvDwAwJs9AEA3vQAAMzwAgAm8AACMOwDAaj0A4AA9AIALvADgfr0AUJy9AGAHvQDAbL0AgPa9AICevAAAoLkAoCu9AOgMPgBANz0AAIW7AICRPAAAlr0AYEU9AEBUvQAAkLkAYLQ9AGA9PQAALD0AQOY8AIB3PADA0zwAcIQ9AOAHPQAAsjwAgNm8AIDOPABAhb0A4Aa9AEClvACgXL0AwJi8AABAvACAab0AAHy9AEA6vQCgIT0AwKQ9ACB/vQDAMj0AANI7ANCKPQDgab0AQPm8AECTPADA7LwAAAU8AMCxPQBA37wAQO68AMCCvAAATjsAADM8AJCbvQAgzD0AAN27AABdPADAIb0AQOQ8AOBCvQBgFT0AQGa9AACAPQAAYr0A4Bk9AMCEPACwpz0AYAi9AABsvAAAnjwAgJ68AMC4vADAMT0A8Ic9ADCpvQAAjTwAgJw8AIDTPAAAszwAwMC8AECFPQAgS70AwI08ADCKvQBQiL0AAIs9AIA2PACgPz0AMIu9AAApPQBgMb0AQPa8AMBFvQDAer0AwEy9ANC4vQAAQDoAgJ68AACkPADggL0AAPY8AACnuwCAQjwAQJU8AABQPAAAWjsAgIa8ANCAPQCgKz0AoBK9AAA1PAAABD0AAJg6AACLuwBgUD0AgC69AGCvPQCAbrwAQJ+9AKAePQDAPL0AwOe8AACuuwAALzwAAK27AAD5PABAtzwAAFI8AABAPADAsLwAgFi8AGArvQCAkD0AACo9AMBhPQAATrwAAMU8AMCOPAAAIDkAwJK8AICQPAAAHz0AgOq8ACAOPQAA0DwAgGy9AJCJvQBAQ70AgNG8AKAgPQAAPr0AgBi8AADYvABAjjwAAGO8AMCpPADgwj0AgBW9AJCEvQBgez0AAIw7AADevABgY70AQCw9AMBNPQAAvjwAwL68AAC1vABQqL0AAMS7AADwOwCAL70AAAQ7AGAavQAwmL0AAI69AAAivADgdL0AALW8AEC3vACADTwAAJC5AMC1vACA8LwAkJ69AMAlPQBA8rwAAJQ8AGA5PQAAjrwAgAM8AOAVPQAAZT0AgEs9AOBrvQAAobwAAMI7AIA3PQCA5zwAgGO8AIATvACgFb0AAM87AMC+vAAASzwAQCc9ALCivQAgeT0AIB69AMCUPACAKz0AYGi9AOBVvQCA8zwAwBC9AACzPAAA4TwAAIk7AKBHPQAgWr0AAMM7AIBAvAAAP7wAAJE8AIA8vADA3LwAABC7AKBaPQAASDsAgAU9AOCtvQAAZbwAAOA8AMApPQCAerwAwLK9AABSvQAASLoAQHs9AMANvQDQij0AANe8AMDSvAAAajsAAIU7AIBDPACAf7wAgL+8AMDbvABgRD0AAIk9AKABvQAguT0AADw7AICaPACQsb0AgAO8AIAKvQAAr7wAQOU8AEBpPQCgEb0AgGU9AKB7PQAA7LsAAEy7ABCdvQAAzzwAYGO9AIApPQDAjbwAIBu9AMDlPACAkb0AgE+8AABoPAAAST0AYEg9AIAavQAgEz0AAMK7AADpOwCAs7wAwAe9AADQPAAALDwAoFw9APCRvQCAFLwAwJ+9AJC0vQBQij0AYG09AAAUuwAA1LsAgHw8AACeuwAAtDwAwCO9AAAhPAAAgDwAAJC6ACBGvQAgkr0AYCs9AACDvABg7r0AALW7AAAYOgAQhz0AgKm8AEBcPQBgJT0AAEY9AFDiPQBA3LwAAOU7APCuvQCAqjwAYAg9AOBWPQAADz0A4Gk9ADChPQAAc7wAYNI9APDjvQAAZj0AcNC9AGAHvQAgXL0AwHk9AADHOwAA1zsAwIw9AABCuwAACDsAwCA9AABkuwDgDr0AgEw8AOAcPQAAlLwAABy7AEBJvQBAGb0AgDi8AABBPADgTL0AYDM9AADGuwDA+zwAgFY8AGCBPQCAPrwAgDG8AIA0vQAALTwAQKa8AMBMvQCAcjwAYHu9ACBHvQAAYDwAAPo7AMCPPAAAKjsAAFC9AECdvAAAUjsAABS9AGCCPQCAXTwAMCE+AKBavQCAPD0AAMi6ANCVvQCgCr0AAKu8AKBDPQBgWT0AoG09ACA6PQCAdzwAAFA8AECJvADABD0AAE47AACeuwAgBr0AgA69AAB4PAAASLwAgLi8AAD0uwCAKr0AwHq9AAAovACAQjwAqDw+AMAbvQCgY70AAHi6AACiPADASb0AAAA7AAAlPQCAlbwA4Ac9AIAnvQAAeDsAQK88AIDHvACAW7wAgBE8AGBUPQCAPT0AgC09AECqvAAAursAAAS8AIA3PQAAGrwAwGg9AMBOvQCAYT0=","chunkHash":"ab168662661585c4ef83c2cd77a42e652a29df7aac0e0d2ceb8226bf34ef4708"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef evaluate_model(model, test_loader, args, adjust_labels=False):\n    #...\n            top2_indices = np.argsort(probs)[-2:]  # Get indices of top 2 probabilities\n            if true_label in top2_indices:\n                top2_correct += 1\n        top2_accuracy = top2_correct / len(all_labels)\n    else:\n        top2_accuracy = None\n    \n    # Create results dictionary with enhanced metrics\n    results = {\n        'confusion_matrix': cm,\n        'classification_report': report,\n        'predictions': list(zip(all_sample_ids, all_labels, all_preds)),\n        'top2_accuracy': top2_accuracy,\n        'prediction_probs': all_probs\n    }\n    \n    # Print summary\n    print(f\"Evaluation Results:\")\n    print(f\"  Accuracy: {report['accuracy']:.4f}\")\n    print(f\"  Macro Avg F1: {report['macro avg']['f1-score']:.4f}\")\n    if top2_accuracy:\n        print(f\"  Top-2 Accuracy: {top2_accuracy:.4f}\")\n    \n    return results\n#...\n```","range":{"startLineNumber":855,"startColumn":0,"endLineNumber":878,"endColumn":18},"embedding":"AMC+vAAAmDwAQJU9ANC1vQBQqr0AANi8ACBPvQCAG7wAwKK8AICwPQCAkTwAAH+8AEBhvQDAxzwAgFs8AIBbPADAyLwAgEI9AADKvADAVj0AAG68AADEOgAgdT0AgEc8AMCKPABgeb0AgEk9AECCPAAA7jwAAAC5AADXOwBA/rwAgH29AMCOvQCgAb4AgBe9AMCgPAAANLwAgAE9AMCovAAAADwAAHi7AICyvACAhj0AgH49AICnvABAnj0AAMe8AABQvQAAFj0AQGG9ACB3PQAA4bsAABQ9AICGPAAAyjwAYFi9AADsuwAAFLsAABK9AADFvADwjr0AQFg9AIC0PADAYr0AQDW9AICOvQAAerwAwIo9ALCMvQCAXb0AgAW9AIAFvACAmzwAAFE8AOBAvQAAXTwAwMs9AMBlvQAAZLsAQJy8AMCDvAAAGT0AwL48AABMuwDgKb0AsLq9AACYvABAdr0AQO+9AEBJvQCAkbwAgEK9AAACPgBgVD0AwKm8AACMOgCQvL0AoAg9AKBKvQCAVDwAsIU9AAAxPACghj0A4BM9AIAnPQAATDwAgII9AGA6PQAA7LsAgOu8AOA8PQBgVb0AAOa7AMATvQCAUr0AQNC8AACgOwDAvbwAACy9AOBsvQCApzwAkIs9AKBEvQBAAz0AgN08AABOPQDgm70AAJC8AIAWPADAGb0AwBI9ABCmPQAA2bsA4Dq9AADBuwDAjjwAAKw7AKB4vQAwwj0AAEQ7AICdPAAgSL0AAFC6AADEvACA2TwAwEO9AIBJPQCAPb0AQNI8AMDdPAAgmj0A4BC9AABrPACAQTwAQNW8AIAwvAAAHz0AQF49ALCYvQAACjwAwBs9AICGPACAXTwAAPS7AGBFPQDgP70AAIA6AACyvQAAeL0AwIM9AIAovAAAybsAsI+9AMASPQBgQ70AgPS8ACBJvQCAor0AIGC9AODivQAAbDsAABg6AIBZPABgGr0AAPW7AIA4PACAarwAALU8AEDtPAAgEz0AgA69AOC7PQAAND0AoBi9AACiOwCA9zwAgC28AAAQugDwgD0AoGW9AKA8PQAAujsAwFm9AAC+uwDgLL0AwOq8AKAtvQAAgDwAADG8AIBwPAAAZzwAAAQ8AAClPABAU70AAIm7AMAEvQBQqj0AgHI9ACAqPQAAvzsAwK08AEARPQCA2bwAwAi9AGBXPQAgmT0AAKm8AABiPACgAT0A4A+9AOCSvQDAQb0AgO+8AECEPQDA17wAAIW7AEAQvQAA/DsAALA7AKBFPQAA6D0AADG9AEATvQBwiT0AACa7AKAsvQCgZb0AoGA9AIA4PQAAaTwAAHI7AADPuwDQv70AAMo7AABHvACAxLwAgL28ACBrvQBwkL0AwHO9AADkOwCwnb0AwO68AAAtvQAAJLwAgAe8ACAnvQCASrwAsJ29AIDaPADABL0AANI7AOBsPQAAKDoAAKo7AIBDPACglz0AoCk9AGBHvQCAOrwAgGy8AID+PADgOj0AQI68AAC4vAAAab0AQAm9AADrOwCA2TwAAOY8AOBivQAgSj0AwEW9AADAPAAAQjsAQAe9AIA2vQCA/zwAAEu8AED6PAAArLoAADS7AEDcPADQnL0AAPg6AABOuwAA/jsAAD47AMDvvABgNb0AAHI7AMCGPAAA/DsAALE8ABC+vQCAULwAgDY9AAA4OwAAnrsAUK69AAAuvQCAGrwAoL49AEAYvQDQmD0AgEe9AID0vACAXDwAAOg8AEC8PAAA/jsAwAu9AACpuwDgMT0AIHE9AADlvACAjj0AAJo7AMAGPQDQ270AwLW8AMCuvAAgV70AAH08AMCbPACgE70AoKA9AABjPQAAsrsAALg6AOBAvQBgOT0AAEC9AIAjPACABLwAAIO8AIAwPQBgeL0AAEi6AADhOwBgPT0AAPc8AACvvAAgXD0AgFM8AICQvAAA3LwAAIC5AIBhPQCAOrwAoIM9ALCSvQAAXDwAUKq9AECwvQAgjz0AUIg9AAD0OwAAZLsAgEQ9AADlOwAAlTsAAH+9AAA6OwAAXD0AAAy7AKBovQAgcr0AQCk9AACSuwCg/b0AAHw7AAAYugAA7zwAgAS8AMBFPQDgXD0AoFY9APC9PQDAwLwAgMo8AOBcvQDAsDwAwPY8AOALPQCA2TwAII09ADCQPQCAHbwAEJc9AEDYvQBgcD0AELm9AIAuvQAAa70AQFE9AADDOwBA9jwAIEI9AMDrPAAAh7sAwGU9AABUuwBA67wAwJA8AEDcPAAA5bwAAIA6AMBzvQCgA70AAE+8AIA4PADwhL0A4AU9AACEugAALD0AAGI8AOCbPQDAgLwAAPK7AIBZvQDAzTwAID+9AKBXvQCAwDwAwGe9AGB6vQAA9zwAAGk8AICMPADAgzwAwGO9AAAxvACAEzwAIAi9AFCGPQDA1DwAWBc+AEBivQBAcD0AAMq7APCYvQAAnrsA4Ba9AADSPABgcz0A4HA9AGAmPQAAEzwAAFE8AEAhvQAAbDwAgIu8AAA0uwDgAb0AAIQ6AAAKOwAAZzwAACy9AAB0PADAar0AgAG9AACpOwBAgLwA6Co+AMC6vABAS70AAAc8AIDiPACAEb0AAMM7AOA6PQBAmbwAwPM8AIDJvAAgLD0AAGA8AMC/vACAjrwAAO88AED1PADgED0AwAY9AIAdvAAAsLkAAAi7AGAdPQCABDwAQLE9ACAOvQAAND0=","chunkHash":"19497162e4333621405162549ae284a071eba852c239d717c8ba96ee34303951"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef save_evaluation_results(results, save_dir, class_names=None):\n    \"\"\"\n    Save evaluation results to files with improved visualizations\n    \n    Args:\n        results: Dictionary with evaluation metrics\n        save_dir: Directory to save results\n        class_names: Optional list of class names for better labels\n    \"\"\"\n    os.makedirs(save_dir, exist_ok=True)\n    \n    # Get unique classes\n    classes = np.unique(np.array([label for _, label, _ in results['predictions']]))\n    \n    # Use provided class names or default to class indices\n    if class_names is None or len(class_names) != len(classes):\n        class_names = [f'Class {c}' for c in classes]\n    \n    # Save confusion matrix plot with improved visualization\n    plt.figure(figsize=(12, 10))\n    cm = results['confusion_matrix']\n    \n    # Normalize the confusion matrix\n    cm_norm = cm.astype('float') / cm.sum(axis=1)[:, np.newaxis]\n    \n    # Plot the normalized confusion matrix\n    #...\n```","range":{"startLineNumber":881,"startColumn":0,"endLineNumber":906,"endColumn":0},"embedding":"AAA4PAAAjTsAwEY9AHCuvQAAarsAwCK9ACAAvQCA2bwAAMK8AKAmPQAA0LoAADm9AEAjvQAATb0AACK7AOBQPQAABjwAIOU9AAAyPADgLz0AAAq7AIAFvACw6T0AgBA8AACeOwDAGb0AAAw9AIBsPQDA6zwAAPm7AACTOwCASLwAwOq8AABnvQAA370AwBk9AECxvAAAPLwAAL67AEA3vQDgSD0A4GK9AID2PADgiD0AoBs9AAARvAAAeT0AQMe8AAD2PABgHT0AgOK8ACBmPQAAG70AAE+9AIAevAAAZrsA4HK9AKBYvQDAgDwA4C+9AIAUvAAAsbsAAMo9AMCNPACAPTwAgFw8AGBgvQAArjwAwM09AADtuwAAvLoAgJi8AIAFPQAAfbwAgMU8AMDIvAAA9bsAoBw9AICtvACw1L0AALC5AKBpvQAAHTwAAGk9AGBiPQBAe70AMOy9ACBbvQAA/bsAYJa9AEAkvQBA1zwAoB+9ACDJPQBA/DwA8JU9AADluwCAKb0AwCQ9AAAmvQAA+DsAAOc8AACROwDgEz0AAEA8AAB5vACAszwAwJs8AACxOwCAtbwAQMC8AIC5PACANLwAIEK9AACQOgAAiL0AoAq9AIBavAAAoLkAoBG9AIDkvABgaz0AQAc9AMA4vQAAYj0AwNo8AIDmvADAc70AkJo9AIA3vABAwrwAABa7ACBpPQDgPr0AQEC9AICivACA87wAAJO8AIARvQBAez0AgNw8AABFPAAAPLsAQJk8AIDCvAAAWj0AgJW8AOAqPQAgRL0AgC28AAANvABQ2D0A4Ea9AAAwvQDAsLwAAKi6AIA3vABQoz0AALE8ANDPvQCAIrwAAM07AABZvAAASrsAwLo8AADKPAAAozwAgKg8AJCBvQDgaL0AQDE9AGBfvQCQtD0AAMC4ACA5PQDAo7wAYJC9AABavQBQsr0AgBK9AKCNvQAgCD0AUIu9AEDevADgS70AADI7AIBXPAAAwbwAgHE8AGAOPQCAOTwAoCK9AABYuwAAiT0AgJC9AEAiPQBAirwAYBK9AGAXvQCgaD0AgO28AIAJPAAAuLsAYEe9AAClPABAZr0AAH+8AAB8vQDA0LwAgLS8AICpvABAcD0A4Bo9ADCEPQCAa70AQIq8AGC1vQBAgzwAANc8AACdvAAAeDwAYIO9AMDzPACAWr0AACg6AMDdPABA2zwAAI28AABRPADAujwAwNQ8AADOvABAY70AIC49AIAYPACgEb0AYDs9AACyOwCAWTwAoAc9AAB2PACAvD0AIDW9AAC4PACAfjwAoFw9AAAGvQDAvb0AIBY9AEAaPQAA2bwAAKG7AKAbPQDQ6b0AgIq8AEAfvQCAT70AQDC9AADkvADApTwAAA+8ANCIvQDgKL0AAMu8AEDjPACgLz0AgOW8AIBOPACATL0AgGm8AAAePQDAWr0AABe8AGA/PQDAxDwAAB89ACBSPQAAaT0AICw9AIDyvABgFb0AQIY9AHCdPQAAIj0AgDQ8AADjuwAQ4r0AgIe8AIB8vACAXrwAIEo9AKA2vQBAmTwA4Bu9AMDFvABAST0AAOW7AIBLvAAA+DwAQLE8AAB1vADAwrwAgCc8ABAKPgBAx7wAAJM8AAAMvAAA87sAgNE8AABkuwAggr0AwC29AECmPQCAbTwAABC8ADDBvQCAIj0AAHg6AGAvPQAA27sAILS9AADNvABAfj0AwMs9AEC5vQAA/TwAEI29AMCXvACA2rwAgHy8AGBKPQAgkL0AABi9AIDIPACAZbwAQBE9AIA4vABAkTwAgA+8AEDtPAAQAr4AwJy8ALCevQBgCr0AwAg9AADHOwBAST0AYOo9AID/PADA6DwAgEe8AIBwvABgNb0AAEc8ACAKPQAgK70A0NS9AIAwvADAY70AAMa7AIBnvQAAwDgA4J49AGApvQAAmDwA4D89AICTvAAA7DsAAFI9AOAoPQAgCT0AwAk9AECuvAAANbwAMPG9AABaOwDAiz0AgDE9AMCGPAAgBD0AwEG9ALDFPQCgDb0AQLa8AAAEvQBAUz0AIF49AACMvACArbwAoB09AACUugDAR70AoAs9AICsPABAlzwAwKQ8AIClPABwwj0AAKg8AECNPQCAfbwAAMA8AIBVvQDAKb0AAGI8ACBSPQAAOj0AAGI8AEDdPACA5bwAANe7ADC3vQCAKTwAcLm9AMCjvAAA+rwAANq8AACeuwBAdb0AYFc9AAAzvQAAUDoAwK48AOBevQAAy7wAYBw9AACxPACAcL0AQBo9AHCOvQDAfb0AABA8AIB4PAAANzwAwMg8AACuvQAAJ7wAANw8AADDPADAGD0AgFm8AEDjvAAAAj0AAO48AMCivQCAyLwAAGu9AAC4OgAAa7wAgAO9AADPPADAxjwAEK29AADzPAAAAD0AIC29AKB5PQCAIr0AkL89ACArvQAAXT0AgBw9ABCSvQBgpT0AQKE8AADwugDgKz0AAK67AADsPADQ4L0AQI+8AAC0OwCA77wAwN68AGAFvQCAT7wAQAe9AKA1vQDAqLwAAN+8AIDqPACA+LwAYC+9AMCfPACAKb0AAJ49AADevABw3r0AAFY8AMCbvAAAKDsAAFy8AAA+OwAAc7wAwOu8AIA7vQAAb70AgBa8AKAMPQCAYrwA4JM9AGBGPQAAwTwAICg9AMCgPABAJz0AgBa9AACTvACgBj0AAIg9AIDKvABAXD0=","chunkHash":"36fac72249c808026dab54cde66bc1a8770f94e966eb4f14cb9af558a01d6832"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef save_evaluation_results(results, save_dir, class_names=None):\n    #...\n    sns.heatmap(cm_norm, annot=cm, fmt='d', cmap='Blues', \n                xticklabels=class_names, yticklabels=class_names, \n                annot_kws={\"size\": 10}, cbar=True)\n    plt.title('Confusion Matrix', fontsize=16, fontweight='bold')\n    plt.ylabel('True Label', fontsize=14)\n    plt.xlabel('Predicted Label', fontsize=14)\n    plt.xticks(rotation=45, ha='right', fontsize=10)\n    plt.yticks(fontsize=10)\n    plt.tight_layout()\n    plt.savefig(os.path.join(save_dir, 'confusion_matrix_normalized.png'), dpi=300, bbox_inches='tight')\n    \n    # Also plot raw counts\n    plt.figure(figsize=(12, 10))\n    sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', \n                xticklabels=class_names, yticklabels=class_names, \n                #...\n```","range":{"startLineNumber":906,"startColumn":0,"endLineNumber":921,"endColumn":0},"embedding":"AACWuwAAtjwAgHI9ABDHvQAAwDkAcIS9AABMvACgH70AAMi8AMBGPQAApLwA4FC9AIBYvQAAHbwAgAy8AGAuPQBAlTwAIG09AAC5vACAAz0AAGM8AABwugBAxD0AwBq9AABYOwCA0rwAwPI8AMDpPACgAD0AQIe8AIBJvACA5bwAAMy8ALCsvQAoFL4AAEw8AIAQvAAAFzwAALC7AOADvQAAcrsAgDm9AAABPQBAFz0AYHk9ACBYvQBgHj0AwBi9AICxPADgEj0AALK7AECCPQCAWrwAgH08AADyvABAEj0AgMO8AIBTvAAAOzwAwHW9AMDVPAAAzrwAMLU9AMC1PAAAPbwAANA6AMCjvQAAhTwAANA9AMAzvQAAZLsAgEK9AIBoPACAAzwAAJU7AMArvQAAljsAMJI9AOAwvQAAmb0AAKy6ACA5vQDAsTwAQEA9AABuPQAwor0AsAS+AIArvQAAn7wAMI+9AKBtvQAA+bsAAGw7ALALPgDgJD0AwMk8AIAgvACARb0AYCc9AABsvAAAwTsAQFw9AIDjPAAAPzwAQJW8AIBbvAAAm7wAAOo7AAC0PAAAajsAAL27AADOOwAANrwAACA8AEAjPQDghb0AAHy8AABSuwAAFrsAABa9AIB+vACAZzwAYFc9AMCOvQDgGD0AEJQ9AACsPABgJ70AoEs9AMAVvQCA+rwAAEW8AMAePQAgW70AUKW9AABRvABAwLwAABI9AACDvQCgnz0AgP48AOA4PQAAWbwAAMg6AACcvADA2jwAYI+9AECRPQBwh70AQG49AIAGPQCA/z0AwNm8AEALvQAAH7wAAJG8AACXOwAAqD0AABM8AGDMvQCgBT0AQJ+8AAAQuwAAprsAAA28ACBDPQCAiLwAgDa8ADCZvQBQhL0AQB89AEC3vADghT0AAAC9AACqPAAA1rsAQBm9AOBwvQDgvr0AgFi9AHCKvQBACz0AIBa9AAAMPADgKb0AwJo8AIALPQAA9rwAAA09AACVPACgTT0AwL+8AIBUPAAgCD0AoD+9AIBjvADA5zwAANa7AICdvABgbj0AQLa8ACAFPQCAkLwAsIi9AADwOgAwj70AoDO9AGDHvQBgHr0AADg6AOABPQCgWj0AwEA9AED2PABwnr0AAAi7AACtvQAgYD0AoAs9AGA2PQCAKDwA4B+9AACPPQDACr0AgLS8AACcuwBgPD0AQPe8AIADPAAAvLwAYAA9AAAlvADANr0AAF28AMCgPACA/LwAYEE9AABwvACAzLwAwCs9AAA+vACAoj0AABc9AACFPADwgT0AQNs8AMAhvQAgaL0AYBI9AIALPQBgU70AYC49AIAvPQBg2b0AAN28AEBTvQBggL0A4ES9AABdvABgBr0AgHK9AKAavQAge70AgMG8AACwPAAAxzsAANm7AIBhvABA+rwAwK+8AMCbPABALr0AAAg6AMCjPQAA5DoAgHg9AIDfPAAwmT0AwB09AICVvADAPr0A4Cc9AIBKPQDAij0AAEC5AAD/OwCgur0AgGi8AACMuwCARbwAwJ49AMB2vQDgVD0AAKq8AABRvABAKD0AQLi8AABcOwDAlTwAAMC8AACYuwBAnbwAgE48ACDoPQBArr0AQCM9AABAuQDAxjwAIGo9AAB6uwAgpr0AQMq8AIBsPQAALzwAAC88AOBLvQAARjwAAJe7ACByPQAAmLwAYC+9AOB8vQBATz0AwMY9ABCgvQBAHz0AIE29AIC7vAAARjsAgGC8AKAOPQDQgb0AALy8AABDPAAAwjsAAJw8AMDNvADAXT0AQCS9AIBiPAC4Db4AoEC9ABCgvQCAMrwAAEw8AAA2uwAAKD0AQLE9APCyPQAAgzwAAL47AAAFvAAA27wAgOc8AGA6PQDAlr0AkL69AMCmPACA1LwAALw7AIApvQAAILsAAEs9AADMvADASj0AIBM9AMANvQAA1rwA4DQ9AOA3PQAAcDwAwMg8AMAevQDgFr0AiAS+AMD3vAAwiz0AcJ49AAAAOACAyTwAACm8AMA5PQAAvrsAwGq9ACAIvQCAKz0AgGU9AMCkvADgD70AgFo9AIDXPABQib0AANw8AABZPACAIjwAQJE8AIABPQAgTj0AAJY8AICWPQBAAr0AgJw8APCIvQDAz7wAgDY8AMAXPQBARj0AADI8AEDTPABA9bwAALQ7AFDIvQDgDT0AAOW9AMCwvADAKb0AAOa8AECFPAAgTL0AQE49AIDmvAAAArsAAMC6AMBBvQDAr7wAIFk9AIC6PAAAA70AQAw9AMCdvACArLwAwKQ8AAC9vAAAIDsAAD68AKA/vQAAeDoAgHA8AOAzPQCA1jwAgDK8AECTvAAAaDoAAB67AAByvQAAXDsAwFy9AABEvABALr0AQLq8AADMOwDgF70AgCO9AEDMPABgDD0A4HC9AKCgPQAAfDsAsAs+AAAXvQBgdD0AgOc8AECKvQAQpz0AgGS8AAAdvABA1zwAAEA5AIB6PQAgoL0AgMa8AIDuvAAAkTsAQIS8AOA7vQAAvLwAAHy8AIBNvQDAg7wAoCu9AMArPQCgF70A4BO9AICzPAAAoLsAgNI9AEAWvQBgvL0AgE+8AMCiPADgBD0AgAY8AAAqPACArLwAAIa8AMAzvQDgEr0AAAy8AACYuwBgHL0AMIE9AEAuPQAAiTwAgGY8AEDsPABArDwAAPU7AABGOwDAIz0AsKE9AAD0uwCgWz0=","chunkHash":"442c337f0157a6a77c0a22614c6f42b87281152e2bf81a1e06fb9057273d2785"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef save_evaluation_results(results, save_dir, class_names=None):\n    #...\n                annot_kws={\"size\": 10}, cbar=True)\n    plt.title('Confusion Matrix (Raw Counts)', fontsize=16, fontweight='bold')\n    plt.ylabel('True Label', fontsize=14)\n    plt.xlabel('Predicted Label', fontsize=14)\n    plt.xticks(rotation=45, ha='right', fontsize=10)\n    plt.yticks(fontsize=10)\n    plt.tight_layout()\n    plt.savefig(os.path.join(save_dir, 'confusion_matrix_raw.png'), dpi=300, bbox_inches='tight')\n    \n    # Save per-class precision, recall and F1 scores as a bar chart\n    report = results['classification_report']\n    plt.figure(figsize=(15, 8))\n    \n    metrics = ['precision', 'recall', 'f1-score']\n    values = {m: [] for m in metrics}\n    for c in classes:\n        for m in metrics:\n            values[m].append(report[str(c)][m])\n    \n    x = np.arange(len(classes))\n    #...\n```","range":{"startLineNumber":921,"startColumn":0,"endLineNumber":941,"endColumn":0},"embedding":"AADFuwDAhzwAYIk9ADDzvQCAArwA4G29AEADvQCAmrwAoBC9AMA9PQDAzbwAQHy9ACBBvQAAe7wAAC+8AIDXPAAA1DwAMJw9AIBtvABAuDwAgGw8AIBJvACgwD0AAL28AAD4OgAAD70AgCY9AEDlPAAAxTsAAH08AADZuwDAuLwAgFm8ANCFvQCYCb4AAMI8AAADPACATbwAABw8AKBWvQCA6zwAQD29AACvPAAAvjwAgDQ9AMBJvQAALj0AQIq8AADxOwCANzwAwPe8AOB5PQAAAb0AAAC6AAAZvQAAtjwAAN68AACTvAAAJz0AgCW9AACaOwCAMb0A4Lo9AAAXPAAAEL0AwME8AACXvQDA5DwAEN49AOBBvQAApTsAwJq8AAAougAAQDoAAOw6AOBQvQAAubsA0LQ9AKAzvQDgqL0AAMU7AMA4vQBAAz0AQO88AGDKPQDwvb0AQPu9AKA/vQCAcrwAoLe9AHCnvQAAtDoAgOa8ADgTPgCA3DwA4D49AAAwOgCgN70AAIe7AEAjvQBA4jwAQDg9AAB4PAAApDwAAAY8AGACvQAAKbwAABc8AIB+vAAAzLsAQNa8AAAIOgCAubwAAPi6AMCcPACAUb0AwBu9AIA3PADAoLwAQNu8AMAFvQDA8jwA4Es9AICQvQAAEz0AUKI9AICYPACgWL0AABg9AMASvQAA2LwAAGa7AGBEPQCAML0A4De9ACABvQDA6LwAQCg9AECRvQCgkz0AgNg8AED+PACAF7wAgDW8AOAGvQDA7zwAoCS9ACBUPQBAfb0AIAg9AEDnPADgBT4A4Eu9AOAAvQAAALwAAEQ7AADXOwDAWT0AAK+7AECsvQDAlDwAAKs7AABivAAAiLsAABo7AMDvPACALrwAAFg8ABCLvQCAZ70AQBs9AMAjvQAQij0AQAq9AICMPAAAFbwAoCC9AIADvQCwrb0AADO9AEBjvQAAzjwAwDK9AADbuwCAY70AAMS6ACBTPQCAh7wAABQ9AADePABQjj0AwPC8AGAbPQCABj0AQAq9AACfuwCApTwAoDy9AEDavACAhj0AQC69AMBHPQCAIrwAwEa9AIAQPAAAnL0AADO9AGC9vQAAEr0AQJw8AAAlPQAgMz0AoFI9AMD6PABQsr0AAHK8AHCavQCAjj0AgJk8AADRPAAAmzsAQAK9AABwPQAgGb0AQOK8AADoOwAgWT0AgHa8AIBOPADAirwAQOg8AADlvADAW70AABU8AIAjPAAADLwAQEg9AABIugCAVzwAwEM9AACEuwDQiD0AAAA9AIAbPACgJT0AAOc8AID3vABAur0AgHo9AACmPAAA6bwAANQ8AMDZPACwzL0AQNm8AABrvADgC70AYFm9AAD4ugAAg7wAkI29AOA2vQCgq70AwMW8AACDuwCANjwAAEy8AECFvAAAS70AAJq8AACCPAAAIrsAADg6APCNPQAAizwAYAY9AIBEPQDAlD0AYCk9AMD4vADAMb0AgGE9AOAwPQDgYz0AAIo8AAAgOgDgjr0AgOy8AAAnvAAAMjsAMIY9ACAuvQAAWD0AQO68AIAXvACgHT0AAEi7AKASvQAAzDwAAPs7AACwOwCAGrwAAEQ7AOD5PQDwsL0AoGA9AAC7uwAACDwAAEU9AAAEuwBwhL0AwLq8AJCPPQAAxjwAAOS6ALCBvQBgCT0AAGm8AAAZPQDAyLwAwFm9AKCTvQBgFT0AIMk9ABCvvQDgSz0AgGu9AIAxPABgMj0AAEu8AADePAAgdL0AgJ68AIBlPAAAPTwAQM88AACsugCAlD0AIDi9AECjPABw9r0AYCi9ANDPvQCAd7wAQMI8AABIOwBgRT0AQLE9AIB3PQAAHDsAAAC5AACsuwBA37wAAAg7AGAyPQDQj70AYK+9AMDuPACgW70AAG08ACAsvQAADLsAQE49AIAGvQDgQj0AALo8AMDFvADgLr0AgAQ9AOBePQAAgDwAAG48AOAJvQDgBb0AgM29AEAtvQDgsT0AQG49AAD6PAAAmDwAAPe7AOANPQAA1bwAQHa9AACbuwBgPz0AQCw9AABYOgDAwLwAIGk9AAChOwBAdb0AAAA9AACHOwAAdLsAQK48AADSPADQqT0AAOM8AKB+PQBAAb0AgMY8AABWvQAAfLwAgF88AAA5PQAgXD0AAKY7AIAQPQAANLwAgKM8AADUvQDgNj0AYN69AIAvvQCAHL0AoDW9AMCLPAAgQ70AgB49AMDavAAAh7sAAC67AMDmvAAAYLkAQFg9AIDRPACA57wA4Fw9AOABvQAAbLwAQLg8AMC+vAAAszsAADy8AEAavQAAdjsAAL48AAD8PABgWj0AgA+9AADNvADAlzwAAIS6ABC4vQDAhTwAoDK9AMDPvAAAGr0AwA29AECYvACAm7wAoHS9ACAOPQCAGD0AYDa9AKBgPQAAJrwAUPo9AADbvABAUD0AYBA9AJCsvQCQsz0AwPy8AABuuwAgVj0AAKs8AKBJPQCAq70AAMS8AADOvACAPLwAgM68AID3vAAAFL0AAEm8AMDavAAAGb0AgD29AEAcPQDgSb0AQAu9AOAFPQCAYLwA4NM9AGAPvQDwyb0AgDC8AIBcPAAAxTwAAPg6AIBsPADAp7wAAC28AOA+vQAA9bwAANi8AACcugAAVr0AoEQ9AEAhPQCACz0AAOc7AECPPAAAMD0AAGe8AACaPACgbz0AYL09AIBLPACA1zw=","chunkHash":"a27a2b7f26f72828060328a683cf51e8669f199ffb5272afb23b9e0fee1bc44d"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef save_evaluation_results(results, save_dir, class_names=None):\n    #...\n    width = 0.25\n    \n    fig, ax = plt.subplots(figsize=(15, 8))\n    rects1 = ax.bar(x - width, values['precision'], width, label='Precision', color='skyblue')\n    rects2 = ax.bar(x, values['recall'], width, label='Recall', color='lightgreen')\n    rects3 = ax.bar(x + width, values['f1-score'], width, label='F1-score', color='salmon')\n    \n    ax.set_xlabel('Class', fontsize=14)\n    ax.set_ylabel('Score', fontsize=14)\n    ax.set_title('Per-class Metrics', fontsize=16, fontweight='bold')\n    ax.set_xticks(x)\n    ax.set_xticklabels(class_names, rotation=45, ha='right')\n    ax.legend()\n    ax.grid(axis='y', linestyle='--', alpha=0.7)\n    \n    # Add a horizontal line for average values\n    #...\n```","range":{"startLineNumber":941,"startColumn":0,"endLineNumber":957,"endColumn":0},"embedding":"AAAMPAAA4LkAwLg9ADDYvQAAorwA4Aq9ACBdvQAANbwAwMy8AADzPAAARrsAoFG9AABkvQDA/rwAABA8AMDXPAAAQjwAYDE9ACATvQAgTz0AAHg8AIBjvADAnz0AgLC8AIAcvAAAY7wAQBU9AGBnPQCAszwAwLm8AIAuvAAAOLsAwNy8AKCivQBg570AALo8AIAmPADgC70AwMw8AIBTvQBA/jwAYHa9AICHPAAA+jwAoCg9AGABvQDAUT0AQMK8AID7PACAnTwAQBS9AOAwPQAA7LoAAJq8AIDFvADgKz0AwJW8AECwvAAAIj0AYHi9AICoPACAG70AQK89AACQuwDAAb0AgN88ADCOvQAAtzwAAN49AOBFvQAAfDsAgC+8AMC0PACAgbwAAAi7AADevADgGj0A8Ls9AMATvQDwir0AAPU7AKA0vQBgFj0AoFE9AIBIPQAgk70A0AS+AKBqvQAAK7wAYG29AICevQAAHrwAgEq8AEAIPgCATD0A8JU9AACCvACAG70A4As9ACBivQAA7TwAwFg9AAAIPABAlzwAAGs8AMCpvACASDwAgKE8AIAwPAAAhLsAQOW8AIBmvAAAU70AACq8AMDWPACAFb0AgAO8AAC5uwAAW7wAQDO9AEDsvABgRD0AwDs9AECdvQBgPz0A4EQ9AECivACAUr0AYAM9AIDxvADAu7wAAA67ACBNPQBA+bwA4B+9AMDhvAAgCr0A4Bw9AKBLvQDAtj0AwOM8AGAEPQCAfrwAAEu8AAB6vADAfD0AIDy9ACDNPQCgIb0AgGk9AADfOwCA2D0AIGu9AADXvABA0rwAAGw7AIAaPACgWz0AAEy7APCuvQAAyLwAAGA8AIA3vAAAB7wAAGg8AAD2PAAA/TsAwMG8AECVvQBwhb0AgBA9AMBevQDwpj0AwNW8ACAGPQCAzrwAQNa8AMDtvADwyb0AwDa9ANCDvQCAODwAIAu9AAD/uwDgSL0AAES7ACBBPQAAL7wAQO48AMBFPQDAhj0AwKm8AMDjPABAID0AsIe9AACnuwDApzwAIAe9AICPvACgoj0AICq9AGBEPQAA0rsA4EK9AABIvACQpb0A4BK9AOBWvQBAL70AAK47AAAwOwDgZj0AwJQ9AIC2PABgoL0AwI68AEAbvQBATT0AwCU9AABCPAAAZjsAIGC9AKCRPQCAIL0AAFG8AMDLPACgYD0AAG28AAAnvAAAO7wAIBU9AMDjvACAYr0AAPg8AAAAOgAArDoAIEA9AAABPADAxjwAoCQ9AMCFvACAnD0AAMA7AIBRPADgDD0AQPk8AABzvQCwq70AYHs9AIC+PABAer0AAKA6AICQPACA1L0AAGy8AIDyvADAQ70AADC7AMDrvACA27wAIGK9AMBdvQDASr0AgG68AOAQPQCAJDwAAAU8AABkuwCA9rwAgCq9AIBOPQAA8DkAAMC4AFCVPQCAfDwAAEU9AHCCPQAwpj0AoCo9AGAavQDAcr0AMIM9AAB6PQDAoT0AAAQ7AAAWvACAlr0AADK9AADAOQCARzwAYHM9AAAXvADgYz0AwF+9AAB/vAAAnjwAAAw7AABmvAAA6DsAQLO8AACgOwCAADwAAHS7ACDXPQAgwr0AAEI9AACAOQCADD0AAFI8AAC4vADgT70AAMe7AFCkPQDAlDwAAGy8AOCBvQAgLT0AAEc8AEBCPQCgQ70AgEm9AIAivQCgMj0AILY9ABCgvQDAIz0AIF29AIACvAAAADwAAP47ACAzPQDAf70AIGG9AIAUPQBgDD0AoFM9AAB8vADgSz0AgC29AEDtPACgCb4AQFa9ACC8vQAAvTsA4Aw9AAAyvADAPz0AILw9AGAGPQAAv7sAAO27AADFvAAAKrwAAFY7AMDvPABAq70A8Lu9AMC3PADQpL0AgFq8AABRvQDAmrwAYFw9AIA0vQDAWz0AwPY8AIAxPAAABr0AgM88AEC6PQBAiDwAwK88AAADvAAAObwAULa9AIANvQCQqT0AEKA9AADfOwAAjDsAAOu8AMBLPQCA4LwAYDO9AIB0vABADD0AgDs9AIC6PADAC70A4Gc9AEC4vABALb0A4HE9AIDHPADAIT0AABI8AADGPADAuj0AAMw8AKBSPQAgRr0AgKw8AHCTvQCARrwAAHg7AKBiPQAAPT0AQNU8AABjPAAAZLsAAPC6AGDWvQDgGT0AQLy9AEDDvABgCb0AgMe8AAAcvADgJ70AwBc9AKAfvQAAcLsAgIs8AEDEvAAAhLwAYEE9AECLPACgWL0AQAU9AICuvACAzLwAgBu8AIBcvAAAkzsAICq9AHCGvQAAdbwAgAU9AOAnPQCA7TwAABO9AEC3vADAyjwAgOs8AFCovQAAFLsAwPy8AECyvAAAADoAQLe8AMAyPQAAwLkAAI69AMDEPACAKD0AgNC8AACGPQAAkrsA0MM9AADGvADA+jwAAPk8AEClvQBArT0AQNm8AADyOwCQhT0AQPU8ACAxPQCwnr0AQMS8AMCCvADAwjwAYCC9AIChvAAA/7wAAHA7AAD+vADAO70AoDO9AEA0PQCwmr0AQNW8AECBPADgHL0AMMU9AIBAvABQ0b0AgNG8AABIOgAAIjsAAFm8AAApPACAorwAABG9AEDevABA2rwAAIG7AIAvvABgLb0AwI49AGBDPQAAvzwAwNg8AEDQPACgBD0AYBC9AACkOwAAUzwAEIU9AICpvABAxjw=","chunkHash":"c8a15aeb7e643b5b904f4210b189a6c2f3d0912a69cbe0cf4e8f699efbc998f0"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef save_evaluation_results(results, save_dir, class_names=None):\n    #...\n    avg_precision = report['macro avg']['precision']\n    avg_recall = report['macro avg']['recall']\n    avg_f1 = report['macro avg']['f1-score']\n    \n    ax.axhline(y=avg_precision, color='blue', linestyle='--', alpha=0.5, label='Avg Precision')\n    ax.axhline(y=avg_recall, color='green', linestyle='--', alpha=0.5, label='Avg Recall')\n    ax.axhline(y=avg_f1, color='red', linestyle='--', alpha=0.5, label='Avg F1')\n    \n    plt.tight_layout()\n    plt.savefig(os.path.join(save_dir, 'per_class_metrics.png'), dpi=300, bbox_inches='tight')\n    \n    # Save predictions to CSV\n    with open(os.path.join(save_dir, 'predictions.csv'), 'w') as f:\n        f.write('sample_id,true_label,predicted_label\\n')\n        for sample_id, true_label, pred_label in results['predictions']:\n            #...\n```","range":{"startLineNumber":957,"startColumn":0,"endLineNumber":972,"endColumn":0},"embedding":"AABcPAAA7zsAgK09ACDBvQAAd7wAIAa9AEDUvACAgrwAgIC8ACASPQAAVrwAEIS9AMCFvQDAEr0AAIg7AMApPQDAoTwAMIM9AID/vACgSj0AADA7AAC7vABwqT0AgJG8AABHvAAgBL0AQN48AABUPQBAkTwAIEO9AIB6vAAAhrwAAJ68AOCYvQCw4r0AwI88AICWPAAA5bwAwIQ8AOBhvQDgHD0AoDO9AIDFPABAJD0AIBw9AKAcvQAAfz0AgFe9AEDnPACA8DwAoEK9AGBfPQAA+rsAwO68AIDDvABABT0AwK68AKAUvQAABD0AwIa9AAA+OwAAqLwAAME9AEDRPAAA/DoAAOE7AICBvQAgHj0AMOc9AKA5vQAAWzwAQNe8AGAFPQAAubsAAES7ACBhvQCAnTwA0MM9AGAFvQDQmL0AAKi7AMAMvQDA7DwAgFY9ANCIPQDAl70A2Ay+ACB4vQCAQbwAwGe9ALC0vQAASLwAAMg7ALABPgAAcz0AMJQ9AABwvADAGr0AAJQ8AGADvQCASTwAsIM9AAC8ugAA1jwAADM8AMDAvAAA5bsAgBU8AECjPAAAWzwAQAy9AIBpvACgJr0AAEe8AAD7PABA3rwAAM68AIAdvAAAvbwAoA69AAD1vACAMj0AAHo8ANCkvQCA8zwAQHI9AAD1uwCgaL0AQDo9AMCIvADA8LwAACa8ALCDPQDABr0AAO27AKAMvQBApLwAAOw8AGBQvQCglD0AwMA8AKASPQAARrsAAJ48AMDGvACAID0AQCa9AFCvPQDAL70AIAc9AAAIOwAQAT4A4Gi9AAD1uwAAVrwAABC6AABsOwBQgT0AQJa8AHDNvQCADrwAwN48AABWPABAkbwAAGg8AMDDPAAAADkAAK27AKCYvQCAeb0A4Hw9ACA0vQDwlj0AwJi8AACYOgDAq7wAYDO9AGBQvQAgpb0AoBS9APCXvQBA9TwAQAe9AIAJvADASr0AAGy8AEDqPAAAF7wAgOM8AEAyPQBAkT0AQFu9AEDTPADA0TwA8Ie9AADROwAA/LoAgEi9AABVvAAwjz0AYD69AMBgPQBArLwAgFW9AABSvABQuL0AgNC8ALCuvQAgLL0AAIW7AABFPADgeT0AwJY9AGBJPQCwlL0AALS7AMBZvQAAeT0AQNM8AAACvAAAvzsAwGm9ADCkPQCgD70AwOu8AAAWuwBwhT0AAKS8AIAIPABASr0AwMc8AEAAvQDgU70AgBE8AMDhPAAAMDsA4Bc9AABQuwAAdTwAgOs8AABSOwAArz0AAMi6AIC8PADgND0AALk8AIBFvQBQs70AwGk9AIA3PQDABb0AgCO8AOAOPQDwz70AAHu8AMAEvQBAzrwAAIS8AMAGvQAA5LsAwIK9AMAsvQCAXb0AgHc8AAAAPQDAHz0AQLW8AAAHvADAEL0AAK68AGAoPQDAurwAAK87AACVPQAA6zsAYHM9AFCBPQAAfz0AwCQ9AACrvADgSr0AgHg9AIDDPABgaz0AgKA8AAAEOwBgob0AgJC8AAAuvAAAITwAQAY9AOAQvQBgTD0AACG9AAA6uwAA6DwAAAs8AEDSvAAA27sAAIC8AIAgPAAARrsAgHO8AKDePQDwv70AgP48AABwuwAAJjsAAP48AED9vADgfL0AAC48ANCzPQAALzwAAMm7ALCivQAAnDwAwOy8AKBhPQDAIL0AIEW9AABYvQCgdj0AwLU9AHDHvQBgFj0A0Im9AACwOgAASDsAAIA4AGAePQDgF70A4Ea9ACAdPQBgAD0AwFw9AAD1uwBgPz0AoDy9ACAJPQCgDr4AYGO9AHCZvQAAELwAgGI8AADkuwAgMj0AQM09AMBUPQAA6zsAQNe8AIARvAAAiLsAAEE8AAAqPADAgL0A0JO9AIBqPABAhL0AQKe8AEAcvQAAPjwAAGM9AEBBvQBAMj0AIAc9AMAGvQCA/rwAQNo8AHCHPQCAeDwAAJg8AMCGvAAA5zsAkLi9AGBLvQCAij0AQIs9AOAYPQDAJT0AgLG8AHCLPQCA5bwAAFW9AEAVvQAgpj0AAFk8AAD9uwCAeLwA4Gs9AIBkvAAANb0AQH09AADLOwCAYjwAAAQ9AADiOwBQmj0AQJA8AAAyPQDAKr0AgBc8AOB7vQAAQLwAgHU8AOBAPQDA6jwAAIA8AIAdPQCAhrwA4AE9ABCwvQCAJT0AAMi9AADUuwCADr0AgOi8AABSPABgO70AgPk8AMBIvQAA6DoAANA5AACkugCAS7wAICU9AECdPABAXb0AQPw8AEDDvAAAAL0AQPe8AEDwvACACDwAgDy8ACAsvQAAbbwAQN88AMAhPQBA/TwAAMq8AOALvQCAgjwAgCs8AFCvvQAATrsAoIK9AIAmvQBAh7wAwNq8AIBMPAAAHLsAsI69AID5PACgUj0AwEK9AEBYPQAA9bsAcOY9AKAWvQCgXj0AQPM8AOCsvQBQgD0AQJC8AIBKvADAdT0AgFo8ACABPQDQir0AQIm8AIBWvACAxrwAIAa9AAC4ugBA9LwAAAq8AMA/vQAAH70AwBm9AIAlPQBAnL0AID29AICiPADgOL0AQMo9AACTuwAwzr0AgIi8AICTPADAsDwAwJ+8AIBAPABAmLwAgHe8AIBWvADA5LwAwKa8AAAhPAAgN70AQFs9ACBrPQCAszwAQBw9AMDIPACgAj0AAPO8AAAxPABgCz0A4G49AABgvAAA+jw=","chunkHash":"e12e7ca12c74df95c264cac17750274115ae9a979796b4d66e9a8e359f50bdbf"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef save_evaluation_results(results, save_dir, class_names=None):\n    #...\n            f.write(f'{sample_id},{true_label},{pred_label}\\n')\n    \n    # Save detailed classification report\n    with open(os.path.join(save_dir, 'classification_report.txt'), 'w') as f:\n        f.write('Class\\tPrecision\\tRecall\\tF1-Score\\tSupport\\n')\n        for class_id, class_name in zip(classes, class_names):\n            metrics = report[str(class_id)]\n            f.write(f\"{class_name}\\t{metrics['precision']:.4f}\\t{metrics['recall']:.4f}\\t{metrics['f1-score']:.4f}\\t{metrics['support']}\\n\")\n        \n        f.write(f\"\\nAccuracy: {report['accuracy']:.4f}\\n\")\n        #...\n```","range":{"startLineNumber":972,"startColumn":0,"endLineNumber":982,"endColumn":0},"embedding":"AACTuwAAVzwAgHM9AEDpvQDAu7wAYHq9AOBHvQCA8bwAAEu8ACAaPQAAILkAYEG9ACBevQDA87wAAK28ACANPQAAnDwA0Kc9AIDMvAAgJD0AAMs8AECUvADQnT0AQKm8AAAguQDgAL0AAIU8AAAXPQBAuzwAgP28AABYuwCAb7wAAEy8AMCMvQAoDb4AAMo8AADQOwDgLr0AAK08ADCYvQCgMz0AIFK9AEDdPADAwjwAwP88AAACvQDATj0AICG9AICAPADA0TwAABe9AMCEPQDAqrwAgLm8AAB+vACAUTwAwOO8AACCvACAsTwAYEW9AADOOwCAw7wAoKY9AAAcPACATbwAAD88AECdvQCAvDwAQMc9AMDyvACASjwAgOW8AACAOwAAELwAgFc8AMA9vQAA4DoAcLM9AADcvADwqr0AAMW7AOBVvQDgCT0AAEM9AKCcPQCwj70AyBW+AACMvQCAPrwAoHm9AKCWvQAAIDwAgG28ADDyPQAALT0AgIk9AAA6uwDAC70AAFg7AEDBvACgTD0AwGQ9AABsuwDAKz0AAPs7AAD4vAAAYjsAACA8AACPuwAA/jsAAOS7AAB9vACAabwAAI68AEDqPABAJ70AAN27AAC4OgBgNb0AoEW9AMDovAAgLj0AgM08ADCtvQAgDT0AoEc9AADeuwDAYL0AoCg9AAAZvADgVr0AAP+7ACCBPQBA7LwAgOO8AACyvADgAL0AgLc8AEBZvQCglz0AADw9AIDYPACAprwAwN88AKAmvQAA9DwAoEK9AHCPPQBgNr0AQL88AECjPACgAj4A8K29AIBMvAAAk7sAAD67AABtvADwjj0AQJy8AHCivQAAJrwAQIY8AAD5OwBAyrwAgHg8AAA0uwDAqjwAAP87ANCNvQCAHb0AYBU9AEBMvQCAaz0AAMC7AABcOwAAybsAICy9AOACvQBguL0AwAW9AECTvQCgDz0AIDW9AAAuuwBAEL0AgEe8AEALPQCAYrwAgNs8AEDuPABAPD0AQCC9AADRPABgKz0AQGK9AIBMPAAArDoAwOO8AIATvQDQnD0AQFS9AMCtPACA+rwAwPO8AACQvACAmb0AAFq8ALCavQDAKr0AABg6AADBOwBghT0AQGI9AICYPAAQrb0AACg6AOAXvQBAXD0AwAw9AICYvAAAAjwAgHO9AOB6PQAALLwA4AG9AABoPABAHj0AAFK8AACeOwCAKr0AQO08AMCKvAAgKb0AwJQ8AIAHPAAAozsAwBE9AACbOwAA2DoAgOc8AIAEvAAgpT0AAKI7AADAOwBgVj0AwLE8AAAJvQCww70AoF49AMA5PQBgFb0AALk8AIA7PQCwyr0AAMy7AAAovQAANb0A4CS9AADcugAA4rwAAEC9AEBcvQBgQb0AANg6AGACPQDA4zwAACK7AAByvADAk7wA4Ca9AACuOwCAG70AAKA6AEBZPQBAizwAIBA9APCLPQDAWz0AsI49AICRvACgQL0AID89AGBIPQCAZT0AAHA6AADAuAAwnL0AAAm9AAAguQDAhTwAAE89AECHvABAGj0AoHu9AAA9vACAkTwAANA5AIC5vAAAXjwAADc8AADQOwCAO7wAAH88ADAHPgBwr70AwPo8AACouwBAzrwAwFk9AGArvQAAbr0AAFe8AOCXPQCACzwAwJE8AHDVvQCA7jwAAC08AEDYPAAAIb0AIDO9AIBSvQBAYj0A0K49AKCsvQBgbT0AAEu9AAAoOwCAizwAAIA8AGAYPQAQi70A4Ii9AIAkPACgCj0AgF49AAA+uwAAaj0AICi9AOBUPQA4Db4AoEm9AFCtvQAApDsAAII8AMDCPADAzzwAoMg9AOA6PQAAHrsAwIE8AMCPvAAAQrsAANC6AABePAAwo70A8Ie9AIBRPABwlb0AAIG8AED5vAAArLsA8Jc9AEDhvACAHz0AQBo9AIC6vACAD70AICg9AOA5PQDgED0AYBA9AIACvQAA4DsAsOm9AED9vADAgD0AkK89AADcPABADz0AoAm9APCZPQAA0LwAYIS9AMD3vABQrD0AYBc9AACIugAAzLwAYHY9AADEuwBAhL0AQHM9AABSPABgJD0AAMg8AADQOQBQzD0AAJw8AIBhPQAAFLwAAPi6AOBevQAA1TsAgCs8ACAvPQCAYT0AAIQ7AGBAPQAAvLsAAAA7AIC+vQBgLz0AsMm9AGAqvQAASL0AQDK9AAAgvADgLr0AQIY8AIAGvQAAEDsAwLg8AAAwOgCAFTwAgBU9AAAbPAAALL0AANM8AECYvACA47wAwCq9AECSvAAA/zsAQIs8AOA3vQBAkbwAwPM8AIBDPQCAwTwAoEC9AADMuwDAmTwAgH48AFCBvQAAirsAQGq9AIDmvADA6bwAgOy8AECvPAAAjDoAAJS9AMDEPADgPj0AgC29AIBBPQAAkLsAYOI9AEABvQAgTT0AgAs9ANC8vQDAcj0AQAS9AACYOgBQpT0AQMQ8AEDgPABQy70AoCi9AECsvABArbwAQPK8AIBpvAAgCr0AAJU8AABnvADgV70AgDu9AAADPQAAnr0AgCy9AAC4PAAgAr0A8Og9AMAOvQAgw70AgAy8AMDNPAAA1TsAAJ68AKAWPQCAk7wAwOS8AMCCvABACb0AAOy6AEC2PADgML0A4E09ACBWPQDAyjwAgCA9AAC3PABAtDwAQBC9AABcuwBgGj0AwD49AIARvAAAEz0=","chunkHash":"2108b026e468fc8c9048f3586e5a065d113538118db1aa1b742a3e60dbf75826"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef save_evaluation_results(results, save_dir, class_names=None):\n    #...\n        f.write(f\"Macro Avg: {report['macro avg']['precision']:.4f}\\t{report['macro avg']['recall']:.4f}\\t{report['macro avg']['f1-score']:.4f}\\t{report['macro avg']['support']}\\n\")\n        f.write(f\"Weighted Avg: {report['weighted avg']['precision']:.4f}\\t{report['weighted avg']['recall']:.4f}\\t{report['weighted avg']['f1-score']:.4f}\\t{report['weighted avg']['support']}\\n\")\n    \n    print(f'Saved enhanced evaluation results to {save_dir}')\n#...\n```","range":{"startLineNumber":982,"startColumn":0,"endLineNumber":985,"endColumn":61},"embedding":"AAAuOwCAaTwAQG49AIDivQCAXbwAANm8AMC4vAAAHbwAgAO8ACAGPQDAtLwAwOe8AECGvQBAn7wAAIa7AHCEPQCAMjwA8Jc9AECSvACAIT0AQBs9AIAFvQDQkD0AwJ88AICKvADgjr0AAEQ8AEANPQDAnjwAAOq8AOACvQBgA70AAKG7AMBtvQDQ8L0AAAM8AMDdPADgML0AAM48AGCXvQDAkj0AgF+9ACANPQDAXz0AwN08AMBtvQCAPz0AwEW9AKBrPQAAETwAAKm8AHCDPQCANbwAgCu9AACTOwCgKD0AwJ+8AOAwvQBAwDwAoGa9AABYPADAsbwAEJI9AID6PACAHLwAgNC8AKCxvQCAaz0A4Mw9AACyvAAAKbwAAKK8AKAhPQAAKDsAAEQ7AABQvQAAhDwAUK49AMD0vAAgor0AAK47AKA6vQAAUrsAYFU9AJCXPQAAcb0AiBC+AIBwvQCAkrwAIFC9AGCdvQAAhLoAgHo8AMDoPQCANj0AYJg9AIAZvQAAMrwAAJk7AIAsvAAAOD0AQAk9AAAGOwCApTwAAMY8AIClvACASjwAgAy8AIB/PAAAFjsAwM28AAABvACAv7wAQLi8AIA4PAAgDr0AgJa8AIDyPABgOL0AgGu9AOAQvQDghz0AgLM8AIC2vQAgGz0AsKY9AIBfPADgN70AgOg8AAAsvACAvLwAANC6AMBkPQDgAL0AAH68AIAuvAAgTL0AIBg9AMAxvQDQlD0AoCE9AMAnPQAAYjsAIGU9AAAyvQDgYD0AgIK8APChPQDAyrwAwB09AABouwBw9j0AsIy9AAAQvAAAy7sAwKa8AADQvACgoD0AgOO8ALCdvQCApbwAAC89AIBQvACgB70AwOM8AIB2PABAlTwAAIk7ADCOvQBAcr0AYCE9AAB4vQAgXz0AgHu8AABYugAArbwAIHy9AKBDvQAArr0AALC7ACCkvQCgQz0AIAG9AIAsvAAAPr0AABK8AED4PADAxrwAQOM8AAD3PADAbz0AwBm9AMDePADAGz0A4Ie9AIDqPAAAjzsA4EW9AABPvACwrz0AgNO8AAC3OwBAlbwAYAy9AIAlvAAw4r0AgEq8AGBqvQDgSb0AAIA4AABFPACgnD0AAIo9AKAiPQCAe70AgD28AAC7OwBAKj0A4CE9AOAhvQDAsDwAIF+9AKCBPQDAr7wAAIS7AABYOgBALT0AgJ+8AACwOwDAubwAwIc8AIBBvACARL0AACU8AMCSPAAAIrsAwBE9AADjOwAAGDoA4AE9AACjOwAAiz0AAMo7AGAEPQCAXjwA4A89AGATvQCg8r0AgPc8AKA9PQDAVb0AAOC7AMAlPQBQyr0AACo7AABBvQCgQb0AgIW8ACAHvQBAkrwAgG68AMCMvQBAF70AgKw8AKAwPQDAxTwAAJA8AIAyPAAAh7wAwAG9AIA1PQAgDb0AADK7ACBvPQAAyjwAADg9ABCGPQCgFT0AQGM9AAA5vABgW70AwEc9AKAcPQCAOz0AQKc8AAB9vAAAkr0AAPS6AIAVPACAJLwAgBk9AMALvQBQhj0AIE69AIDQvAAAADoAgC68AECpvACA3DwAACg6ACAyPQAAPLwAANo7AED4PQAwwb0AoCc9AAAeOwCA8bwAgHg8AMDWvAAAzrwAgDi8APCYPQCAcDwAgEw8AECrvQCA3jwAgCc8AEBKPQAACL0AAAq9AIAxvQBgOz0AYGQ9AFCYvQBgaj0AIEO9AABrvADAuLwAAC08AIBPPQBAYb0AQLK9AAAyPABAlTwA4Do9AADOvACAzzwAAO+8AAAjPQAw970A4Gi9AMCDvQBAhLwAwN08AAAYPABgDD0A4Nc9AEAHPQCAgzwAADK7AMCfvABA+rwAAGs8AABCOwBQqr0AAKm9AIBQPADAl70AwL28AIAvvQAAZDwAgHU9AGA7vQAAlTwAwPk8AABCOwAAGb0AADM8ABCLPQBApjwAoGc9AEBFvQDA0TwA0M29AAA/PABgcz0AoIE9AGAPPQDAijwAQNG8AGCvPQAgDb0AYF+9ACARvQCgsz0AIA89AACpPABA4rwAQDQ9AIAfPADwgr0AQC09AIBRPABAyjwAQBU9AMDTPADwsT0AwPU8AIAdPQCA1LwAgFk8AEBavQAAMLoAwL88AOBXPQAgST0AAA47AEALPQAAR7wAAOA7APDNvQBAGj0AYLu9AEDzvABgbr0AwMi8AECRPADA+rwAgFU8AOArvQCAEbwAAIU8AICqvAAAwLkAQFA9AIAAPADgG70AQBk9AGAdvQDA8bwAACS9AECUvAAA3LsAgLI8AIBmvQCAorwAoAs9AGBIPQBAxDwAsI69AECwvACA6jwAAAk9ANC9vQAAWrsA4Fi9AACVvADAl7wAQKK8AAC6PAAALrwAIJq9AIBQPABQjT0AgOq8AECBPQAA9TsAwN89AGAHvQDAdj0AYA89ADClvQDAhj0AAAC8AIAovACAfT0AwLY8AIC3vABQhr0AgKW8AADOuwCgCb0AAMi8AIAAvACATL0AAGk8AOAzvQDAM70A4Hi9AMDEPACAmr0AgE+9AEDmPACgRb0A8Ns9AIAavADwnL0AABk8AICDPAAAWjwAQKu8AIAfPABAmrwAgEu8AAD4OgAgR70AAJC6AADuOwBARr0AIBc9ANCAPQCA8jwAYCU9AIDRPAAAQjwAANe8AECCPABgWT0AwDo9ACAFvQAA6Tw=","chunkHash":"f72971c02ae90bb51bdbdbc9d4ee68501d24b0ec022aab3933a2d91d66837b33"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef basic_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W)\"\"\"\n    # First convert to numpy array if not already\n    if not isinstance(x, np.ndarray):\n        x = np.array(x)\n    \n    # Apply margin if specified (discard pixels from edges)\n    if margin > 0 and x.ndim == 3:\n        # Ensure margin isn't too large for the input\n        safe_margin = min(margin, min(x.shape) // 4)\n        if safe_margin > 0:\n            # Apply margin to all three dimensions\n            x = x[safe_margin:-safe_margin, safe_margin:-safe_margin, safe_margin:-safe_margin]\n    \n    # Convert to tensor\n    x_tensor = torch.from_numpy(x).float()\n    \n    # Normalize to [0, 1] if needed\n    if x_tensor.max() > 1.0:\n        x_tensor = x_tensor / 255.0\n    \n    # Get the original shape\n    #...\n```","range":{"startLineNumber":989,"startColumn":0,"endLineNumber":1009,"endColumn":0},"embedding":"AIDKvAAAETwAAPS6AEAAvQAAdrwAMKu9AAAuvABA5TwAAIS9AAAoOwDA+bwAAC88AACYvAAAoDwAADC8AICLPQCATL0A4Bg9AAD4OwAAiDwAAMw6AMALvQBAlT0AAKc8AKAXvQAALDwAIDs9AADnuwAgKD0AgG+8AMCVvADAzbwAAFS7ADCxvQAApLwAgGo8ACAzvQBAwj0A4B89AIBKvABgUz0AABK9AOAtvQDAhLwAQO09AADIuwAA5LsAwMS8AADEOgCA/zwAACI8AMAhPQAgbz0AoAM9AADBuwBwxz0A0Kq9AABUvACgRj0AQJK8AKAQvQCgEL0AgJA8AADgvABA1TwA4Hk9AABYvQAAwDgAAAI9AAC2uwAAHLwAAM+8AABMvAAAUTwAgDk9AADjOwDA0zwAgMY9ACBgvQCAnTwAAEI8AOB5vQCAHDwAAIg9AMB7vQDgfL0AQDa9ABCAvQCger0AAKi8AIBvPABgV70AMJS9AGAmPQCAKb0AoBI9AMDkPAAAlLsA4GE9AABCOwDAkTwA4FM9AADwPABAKD0AYIs9AEDGvAAAOjwAADM8AMB5PQAgZj0AwCC9AIBavQAAaDoAAAg6AMD3vADANL0AAKI7ADCKPQBA870AgPC8ACC5vQCA6rwA4BU9AJCMvQAAn7wAgBy8AGAIPQDQzr0AAAY8AHCXPQCAHz0AgLI8AMAPPQDQmb0AACk8ACCIvQDA7bwAADo8AECdPAAYBD4AYC+9AAAhPACAdT0AgAC8AAChOwAAgjsAYDu9AGD2PQDA2LwAQI08AGARvQCwiT0AAMG8AMDBvAAA67sAgGw8APCgPQBwoz0AwEg9AKClvQDgHL0AgIE9AACPuwAAs7wAgCC8AGATPQDAzTwA4Aq9AMAvvQBgub0AAFo8AED5vABArTwAgBi9AKDWPQDAgrwA8Km9AOB+vQCAEr0AgBi8ANCMvQCgiD0AgHO8AOAvvQDAxbwAkJA9ACAAvQAAjDoAAM27AOBwPQAASDoA4Fk9AIC5vAAgXz0AgKG8AEAQPQAAsD0A8I29ANCaPQAAqDwAQIM8AEAFPQAAD70AgB69AICdvAAQhL0AgAO8AAA0PADgb70AAN+7AADNvAAAiLwA4EY9AGAZPQCgAr0AANQ6AMCXPACgdj0AALm7AMCePQAAm7sAsIw9AABCPQAAzrsAwIy8AKB8vQAAaTwAYJi9AACMOgDACD0AAIE7AAA0PACgIb0AgDW8AOAQPQAAbzwAQN28AIASPAAAhjwAIGo9AIDEvAAAwTsAAKq7AMAWvQCAxTwAAJS6AECQPADQrb0AAK48AICHPAAAkLoAgCa8AAC3uwDAOb0A4C69AICevAAAXr0AgEK9AACPvQAA0LsAkJM9APCBvQBAJb0AgJc8AOCAPQAAzTwAwAc9AABmPABAHj0AgC88AMDOPAAA57sAAF67AABzPACgDL0AgIE8AACBOwCAIj0AABA8AADIOwDAzrwAgNw8AIBNvACAKD0AwLw8AMAmvQAAZrwAAGC8AMBQvQAATb0AQMY9AAC1vABAmDwAAL+8AGA/PQBAVT0AAEi7AEDKvAAArrsAwDK9AIBCPACASDwAQEU9AEDIPACQgL0AQGU9AAAuuwAAo7wAAKA6AEC2PAAA1LoAwFM9AACwPQAAGDwAgFm8AAA2vAAAnzwAABU8AICfPADAWr0A4Em9AHCnvQDAbL0AgDq8AMAjPQCAhrwAwEu9ALCMPQCAgjwAQLW9AADguwCgUL0AAK68APD7vQAAWrsAgJ08AMAEvQBAkzwAEJq9AMCDvQAw1b0AQI08AAAQugDACb0AABO9ACCCPQDAjj0AQHM9AKAFPQAApzwAsIO9AAD3OwAALr0AoD69AIA7PADACb0AYCy9AKBEvQDQjb0AQMi8AMCUvQAAabwAQEQ9AICMPACAejwAwAo9AAB3PQAA3bsAAMC6AABFvABwhz0AgCw9AIDCvACAGLwAYEC9ADDKvQCQyz0AYEc9AMAVvQAAljsAwAA9AAAKuwBAT70AAOk7AIA5vQBAuTwAQKM8AAAQPQCAkbwAAKo8AEBTvQBAL70AAD08ANDNPQBAQj0AYMW9AFCuPQCAajwA8JA9AECAPAAAEz0AQI+8AGCBvQCgmL0AgAO8AKB6PQDgfj0AQHM9AABkvAAAy7wAAE08AHDkvQAA6DwAwGW9AMCZvADAUb0AAGs8AACwvAAA1jsAQGc9AEDpvQDg5j0AABU9AEC3PAAgC70AwB49AECxPAAAvjwAgF68AAAGvAAAwLkAQMM8AIBivAAAnTwAgHo8AIARvQDAg7wAAKg6ANCWPQBAIj0AgKm9AAC2uwAAtbwAgEM8AADsugAAETwAgJo8AMDfPAAArzsAQMG8AMCFPACAGL0AAKW8AICMPACARDwAoDi9AIBmPACgiD0AwF89AIATPADgAz0AgBk8AABMvQBAp7wAAPW8AAAxPADwkz0AIDW9AKAOvQCA97wAABa7AAA6PABAsz0AAGK7AIACPADAqrwAgEe8AAAAuQBgSz0AAF+8AICiPQAwir0AMKO9AICOvABw2D0AUMQ9AMBkvQDglb0AQNA8AACUvABA2bwAgNo8AOA0vQAAM7wAoFY9AABeuwAAbL0AgOo8AAAAOAAA57sA0Kk9AAA0PQBwjT0AwKG8AEDbPAAAFb0A4DU9AABwvAAASb0AQD49AIB+PAAAxDo=","chunkHash":"e5c926a849e026853a02bd484539b3b51a342f91282a14e02519aaf5c7da2f1a"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef basic_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W)\"\"\"\n    #...\n    orig_shape = x_tensor.shape\n    \n    # Reshape to the expected 5D format (1, 1, D, H, W)\n    if len(orig_shape) == 3:  # (D, H, W)\n        x_tensor = x_tensor.unsqueeze(0).unsqueeze(0)  # -> (1, 1, D, H, W)\n    elif len(orig_shape) == 4:  # (C, D, H, W) or (B, D, H, W)\n        # Assume first dimension is channels\n        x_tensor = x_tensor.unsqueeze(0)  # -> (1, C, D, H, W)\n        if x_tensor.shape[1] != 1:\n            # If more than 1 channel, use only the first one\n            #...\n```","range":{"startLineNumber":1009,"startColumn":0,"endLineNumber":1019,"endColumn":0},"embedding":"AIApvAAANLsAANu7ACAFvQAA1rwAMJi9AAAwugCAojwAEIW9AADduwDAE70AAGU8AADouwAAgjwAQJ68AGCTPQDgBL0A4AY9AIAgPABAjzwAALK7AMDpvABQoz0AQL48AIAFvQCACzwAAPk8AAA0uwBAEz0AACW8AAD9uwDAlLwAABQ8AMChvQAAq7wAAJU8AOBdvQDw2D0AICA9AACwuwAgij0AQKG8AKA6vQCAUbwAcNs9AAAcOwAAj7wAAIC8AAAhvAAAGj0AAD08ACA+PQCgVT0AgM48AADeuwAQqj0AMLe9AIB2vACgNj0AADm8AKAqvQBAD70AAEk8ACAKvQCABD0AQFs9AIA9vQAAwzsAALk8AAAUuwAACL0AoA+9AAAivAAAvTwAwCc9AIB/PACAyTwAkN89AKBgvQAAWDwAALS7ACCKvQAAaTwAYH49AEB3vQCgZ70AQCO9AGBpvQCgaL0AwK+8AACPPADgcr0AUJi9AEDKPABAOr0A4Es9AIDKPACAe7wAwFE9AADfOwAAmjsA4C89AEC4PADgJj0AgHA9AEANvQCAmzwAAHc8AGB1PQCAYD0AQP+8AFCFvQAAeLoAAAg8AECovACAHL0AAO47AKCFPQCQ+b0AQNK8ADCzvQCAWrwAYC49AEBrvQAAmLwAgIe8AGATPQBg2r0AAGo7AMCCPQAgCj0AQJM8AIADPQBwi70AwLI8AGB8vQCAxLwAACM8AECMPADA9T0AIEW9AICoPADghT0AgKK8AADQOgCASDwAwDi9ADDsPQAAfrwAwIc8AKAhvQDghD0AgLS8AIBHvAAA6LsAAOs7AACJPQBwoj0AwIY9AGDWvQCAJL0AYJM9AADPOwBAp7wAAPu7AEDiPAAAhTwAALm8ACArvQDArr0AAAQ7AIDAvAAAszwAwO+8ABDLPQAApLwAMJ+9AFCSvQDgOL0AAI67APCUvQBAkD0AgHm8ACArvQAAtbwAAJg9AMDRvAAAqzsAAHK7AOBtPQAAGDoAwGQ9AECTvADwmz0AQKK8AMAbPQAAlD0AgJa9AHCOPQAA9jsAgGU8AMC8PAAgNr0A4CC9AOATvQCgYL0AAPC7AABaPACgcb0AACI8AACIvADAybwAQAg9ACATPQBAxLwAAAC7AADjOwBAJT0AwLe8AOBxPQAAl7sAgJc9AIBKPQCADDwAgCC9AIBlvQAA6DsA4KC9AADXuwBAvjwAAN87AICkPABAEr0AgAg8AIDwPADAnzwAQPO8AADkOgCAcjwAIFM9AKAMvQAA8LoAgDi8AADqvAAAvDwAAFQ7AAAaOwCAxr0AwMw8AAC0OgAAILoAAAW8AIBZvABgFb0AIBe9AAAbvACAVb0AYCu9AKCavQAAh7sAcKM9AOBYvQCgAL0AAGU8AABkPQAAzTwAwNI8AADwOwDA9zwAADC6AACiPACAErwAgI68AAAwOwAAEL0AYBU9AADWuwDALT0AgEe8AIAvPABArbwAwNI8AIAnvABgGj0AgA49AKBVvQAAV7wAgIK8AABKvQBAUL0AkPA9AAB1vAAAjTwAwJS8AEAXPQDgRT0AACC7AEDivAAA9rsAACq9AAB4PAAAUTwAQHs9AMCqPAAgfb0AEIA9AAAzvACAAbwAANQ6AIDPPAAA0LkAIBw9AECoPQDAmTwAQNa8AIBSvABAqTwAAAw8AIC+PACgW70AsIC9ANCsvQBArr0AQJa8AGAZPQAAorwAYEW9AABWPQAA/jsAcMe9AIAGvADgQb0AwJu8AJD9vQAAbbwAANU7AED4vAAA7jsAcJi9ADCEvQBQ0r0AwOU8AAAuuwAAzrwAQPm8AGBMPQBgpz0A8IE9AMCRPACApDwAwHO9AAB4vAAgJL0AIHC9AAAlPADAFL0AwCG9AEA8vQAQiL0AgK68ACCAvQCApLwAoFs9AAC9PACAjjwAwOU8AHCEPQCAXjwAAEK7AAAavABQiz0AQBo9ACAmvQBAgLwAYAK9AJDlvQCQ3z0AgEg9AAAXvQCAXDwAAAA9AAAkuwBAeL0AACI8AEBWvQDAijwAAMA5AAAiPQAgDL0AAM87AKBcvQDAQb0AwLE8AJDVPQCgWD0A4L69ANCzPQAAzjsAwHw9AECLPAAAID0AQLG8AGBRvQCgnb0AAGC8APCKPQBQhz0AwHk9AICjvABArLwAgB48AAD/vQBACj0AwLy8AMAZvQBgU70AANy6AACrvACALjwAQGs9AFDmvQBw7T0AANI8AMCyPADAzLwAIBw9AIA9PAAAbjwAAHa8AADDOwCACbwAgMA8AADyOwCAaDwAAII8AIApvQAAwrwAAJ+7AGBvPQDABj0AMJi9AABkOwBAgrwAAJ67AADzuwAAtTsAgLA8AEAGPQAAEzwAgMi8AMCFPADgJL0AwIG8AICwPADAwDwAoCe9AIA7PAAQlT0AgE89AABOOwBgGj0AALA7AGBYvQCA67wAIBe9AIB8PABAfT0AQBS9AADcvADgDb0AAJM7AEC3PABApD0AAMG7AAD4ugDAh7wAAKC7AACdOwCgMz0AAOm7AECuPQCgob0AYLy9AAChvABAzD0AQK89AOB7vQCQo70AQIQ8AIBIvADAzLwAgAc8AKBHvQAAK7wAQFM9AIBdvAAAgr0AgMA8AADhOwAAybsAMKY9AAAbPQDAfz0AgOe8AAAUPQAAl7wA4B89AABOvABAUb0AYD49AMDGPAAA3js=","chunkHash":"47e9c74f78d920220664fabe96478aaeec020bc89947c499ff470eebb83dc28b"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef basic_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W)\"\"\"\n    #...\n            x_tensor = x_tensor[:, 0:1, ...]  # Keep only the first channel\n    elif len(orig_shape) == 5:  # Already (B, C, D, H, W)\n        if x_tensor.shape[1] != 1:\n            # If more than 1 channel, use only the first one\n            x_tensor = x_tensor[:, 0:1, ...]\n    else:\n        # Handle unexpected shape\n        print(f\"WARNING: Unexpected tensor shape in basic_transform: {orig_shape}\")\n        # Reshape to expected format by flattening and reshaping\n        try:\n            # Extract D, H, W from crop_size\n            D, H, W = 80, 80, 80  # Default size\n            x_tensor = x_tensor.reshape(1, 1, D, H, W)\n        except:\n            #...\n```","range":{"startLineNumber":1019,"startColumn":0,"endLineNumber":1033,"endColumn":0},"embedding":"AIBGvAAAKDwAgDo8AMDcvADgBb0A8J29AACoOgBAsDwAII69AADkOwDA+bwAAHs8AECMvAAAoTwAwLC8AKBwPQAA7LwAQMY8AABVPAAA2jsAADU8AIDUvACQoT0AAMM8AED6vAAAUjsAgPQ8AACQuQAALj0AgH+8AACEuwCAzLwAgEg8ACCqvQCA5bwAAHY7AOASvQCg0D0AoEg9AAAQuwCwiz0AANq8AKA6vQCALbwA4NU9AACougCAGrwAAPu7AAA/vABA7zwAAAAAAAAXPQCAZz0AgNg8AECBvACQnz0AsLC9AIAyvACgRj0AwO+8AEDgvABACb0AADQ7AEAdvQCA2TwAIFs9AAA7vQAAPLwAgAM9AAAMuwAgBL0AQBm9AECWvACANTwAgEg9AADxOwCA2jwAAOQ9AGBrvQCAZzwAAAE8AOB5vQAAvTsAwJA9AABZvQDAh70A4B69ALCJvQDgc70AQLq8AIA2PABAZb0A4E+9AIACPQBAKL0AABs9AMCgPACAgLwAYDY9AACJPACATzwAIEo9AIDIPACAKj0AIJA9AEClvADApjwAAGc8AMCEPQBgfD0AQAm9AABvvQAAmbsAAMI7AICivACAKb0AAMY7AOCMPQDA770AQP+8ABC9vQCAXbwAAOs8AMBvvQAAHLwAgDO8AEALPQAgvL0AAJG7AABoPQCAPj0AQKo8AMAiPQDAfr0AAI07ANCGvQBAjrwAgIQ8AMAdPQDA+D0AwES9AADFPABwjz0AgIO8AAD4uwAATTwAoHS9ABDlPQBA67wA4AE9ACADvQBQij0AwNW8AIBHvAAAWLwAAPS6AMCAPQAAiz0AYHo9AEDLvQDAMb0AQIY9AAACPAAAKbwAAFe8AEDEPACAVTwAYBm9AKByvQAgrL0AQIA8AADtvAAAczwAICG9ALCfPQAATrwAUKW9AFCFvQDAL70AAL27ANCNvQAgjj0AgHi8AAAovQCAGrwAEIQ9AMDovAAAErsAAG67AICBPQAA1LsAgEk9AMCAvABAaD0AALG8AEAHPQDwiz0A8JS9ADCjPQDAtTwAAFg8AEDOPADAKb0AABS9AIASvQDAgL0AABy7AIAePABwi70AQJQ8AIAQvAAArrwAYAA9AAAPPQCACb0AAB67AAAaPADAQz0AAHC8AABoPQAAhbsA4JM9ACBZPQAADDwAIAS9ADCNvQAAWzwAoJm9AABwuwCArzwAAHI8AIBgPAAA6LwAAJE7AOAkPQAAATwAQOC8AAAAOgAA+zsAIHE9AMDvvAAAwTsAwIa8AEDnvAAAnDwAAFU8AAA2OwBA0L0AgN48AIA+PAAAZjsAgFO8AECPvADgRr0AQA29AMDOvACgNb0AoBa9ABCgvQAArDoAIIc9ACBTvQBgOr0AgKg8AGCEPQAA8TwAwNg8AIBDPAAA9DwAABa7AICyPAAARDsAABS8AAAAugBgCr0AQOQ8AAD8ugBAXj0AACK7AABgOwCAsbwAAPk8AIAtvACgCT0AIAI9AMAovQDAkLwAQK+8AEBAvQCAP70AUNY9AIClvABApzwAgJ+8AMDCPADAGz0AgA28AADRvAAASjsAIE+9AAAnPACAQDwAgHU9AKAHPQCgeL0AgHc9AIBwvACAdrwAALM7AEDJPACAHLwAoFg9AKCbPQAATTwAQNW8AIA9vAAA+jwAgHI8AMCxPAAgTr0AEIC9AOC4vQBQpb0AAFG8AIASPQDAlrwAYH29ACBXPQAA8zsAUMS9AIAvvADgbL0AAAW9AHAFvgAAvLsAAE88AMDKvACAHTwAAGu9ACBZvQDQ1r0AQJY8AABKOwDAz7wAAAW9AIA+PQCwrD0AQI49AIDRPACAyDwAYFm9AADhuwCAKr0AwEa9AAC+OwCAwbwAABq9AAA7vQAwhL0AwO28AOCDvQAAArwAwEk9AICLPACAUjwAIDM9AIBePQAASTwAAKm7AAC0uwCgij0A4Ag9AEBXvQCAnLwAABu9AJDYvQBQ8j0AYFE9AOBMvQCAezwAAME8AIB7PADAb70AAMs7AOBPvQDA6jwAQIE8AMAMPQBgOL0AgKE8AIA0vQDgOr0AgDU8AEDAPQAAOD0AcLm9ANDAPQDAwTwAoIY9AAC1PACATT0AgKS8AAB6vQAwiL0AACS8ALCaPQAwjT0AwHM9AIDlvABAn7wAQIc8ACgAvgDgMD0AQPy8AMDnvABAWr0AAJC6AADXvAAAQLsAoHE9AODtvQCQ4z0AwLs8AACSPADgNb0AYDc9AACnOwCAWTwAgDC8AACAugAAPrsAgAE9AABIOgAAWDsAgCg8ACAtvQCAKbwAAMC7AECAPQDgDz0AgJC9AABKOwAAKbwAADC7AADzuwAAAD0AgAo9AID2PAAAALoAYAK9AACDPABgI70AQI28AIBAPADApjwAwB29AICmPAAgXz0AoHU9AMCPPADgLj0AAD08AEBpvQBAGb0A4Eq9AECGPABggT0AgOu8AKBGvQBAFL0AAF08AIAGPQCAoD0AAJ67AACgOgBAtLwAAHC7AAB2vADAKz0AAGi8AKC6PQAAn70AUL29AICxvAAwtD0A8LU9ANCDvQDArb0AADI8AACOvAAgBb0AAOI7AKBbvQAAP7wAQFo9AABQOgBAdr0AYBQ9AABEOwAAPLsAQKo9AKAkPQDgbj0AQOu8AAD2PAAA2bwAACc9AICDvADAZr0AgBo9AADTOwCAdTw=","chunkHash":"c597b1aa3436e5a9f75e5af709ab7841ebdb52080ae7c48465d9412ad87d7e2a"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef basic_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W)\"\"\"\n    #...\n            # If reshaping fails, create a new zero tensor\n            x_tensor = torch.zeros((1, 1, 80, 80, 80), dtype=torch.float32)\n    \n    # Final verification\n    if x_tensor.shape[0] != 1 or x_tensor.shape[1] != 1 or x_tensor.dim() != 5:\n        print(f\"ERROR: Failed to properly shape tensor. Current shape: {x_tensor.shape}\")\n        # Last resort - force reshape to expected dimensions\n        x_tensor = torch.zeros((1, 1, 80, 80, 80), dtype=torch.float32)\n    \n    return x_tensor\n#...\n```","range":{"startLineNumber":1033,"startColumn":0,"endLineNumber":1042,"endColumn":19},"embedding":"AMC7vAAAHjwAgDQ8AADYvACA6rwAQI+9AADMuwDAxDwAAG69AIApPACABr0AwK08AICLvADAwDwAgLi8AEB7PQAgTr0AYAY9AABBPADA2TwAAKA5AGANvQCQsz0AwNI8AMAmvQAAcDwAgAQ9AAAuOwAgUz0AgD68AIAVvAAAzbwAgF+8AGCmvQAA/rwAgF48AKAwvQBAuz0AAEQ9AADXuwBAjz0AAOG8AOAovQAAdrsAsM09AAB2OwAA8rsAQLO8AACCOwBA5TwAAMC7AGAlPQDAfD0AwOs8AAAQugCgwD0AkJO9AADTuwBgSz0AANi6AEDevABgCr0AgIw8AKACvQAAvjwA4Fc9AEAkvQCAQbwAIDs9AAC3OwBgDL0A4AC9AADHuwCAbjwAYCg9AIAsPACA1jwAAPw9AOA6vQCAKDwAAO07ACCYvQCATDwAcJw9AMBpvQCAPr0AkIy9AGB0vQAgaL0AgPm8AABtPAAgV70AIGa9AKAoPQBARL0AgPo8AADPPAAAP7wAgDM9AACDPAAAMTwAoFM9ACAUPQBAMT0AkIE9AIBgvAAAKzwAAMy7AEBxPQCgjz0AQOi8ABCEvQAAXLsAAI87AMDMvADgJ70AgHg8AAB5PQCQ+r0AANu8AJCxvQCAQrwAYB09AEBtvQCAHbwAgKa8AAAwPQDAsr0AgAC8AFCOPQCgIz0AAEU8AIDIPACAg70AADM8AMBrvQBgLb0AgDk8AADRPAD4AT4AgG29AIDIPAAgTz0AAI28AACYuwAA7zsAwB69APDqPQAAxbwAwKU8ACAPvQBgWD0AwMy8AIBgvADAhLwAAJy7ACCIPQBQrD0AAFs9AOCsvQCgML0AAIU9AMCYPADAkLwAAKG7AOAEPQDA2zwAAOS8AEBcvQBwxr0AgJo8AMC1vAAAqTwAADu9AMDAPQCAPbwA4LC9AABivQCA8LwAAHW8AFCLvQCgjz0AAGS8AAArvQCADL0AEI09AMC7vAAAJLsAACY8APCPPQCAM7wAYGA9AABUvABAcD0AACa8AACuPAAAnz0AYJ29ABCXPQBAljwAgD88AIBsPABA2LwAgOe8AMDmvADQmL0AgAq8AABIOwCAiL0AAIc7AECJvACAlLwAQCQ9AADuPAAAcLwAAA67AEDlPABAOz0AgCm8ABCJPQCAO7wAwJc9AEB6PQAA2LoAAKO8AAA0vQDA8zwAIJa9AAAGuwDgDz0AAHA6AABhPAAgGr0AAKM7ACAIPQAA+DoAgLu8AADWOwAAOjsAIHQ9AECjvAAAqjwAACS7AIBdvQBAqDwAACo8AEC7PABQv70AQPI8AIAUPACAcbwAgHW8AACQOQBgO70AoC69AACWvADAWL0AQEm9AKCUvQAA+LsAUKA9AEAvvQBAS70AwLs8AGBtPQBAtTwAYAU9AMChPADgDD0AAMA4AEDZPAAA0jsAgD+8AAD9OwDgBr0AAKM8AMCCPADAdD0AwIU8AADgOgBAnLwAwB49AACuuwCgJD0AwO48AKAPvQAAO7wAgKi8AGB0vQCgCL0A8Oc9AED+vACAjDwAQIC8ACAIPQCAHT0AAEq7ACAyvQAAjTsAYEu9AIDUPABAqDwAgDk9AMAIPQCQjr0AYHY9AACeOwAAYLwAAB67AAD4PAAAADsAgB89AHClPQAAiTwAgFm8AIAcvAAA0TwAAGE8AMAAPQBgUb0AoFG9ACDAvQAgkb0AgHO8AAABPQCAM7wAAE29AEBXPQCAbTwAwLC9AIB9vABgPr0AgIm8ALD8vQAASLoAwJM8AAAjvQAAEDwAkIy9ACBPvQDAur0AAKo8AIBSPACA+rwAoEy9AGBHPQDAnT0AUIE9ACAPPQBAiDwAAIy9AADwugCgNr0AYF+9AACgOgAA5LwAoEC9ACBQvQDAY70AwPO8AKCUvQAAbLwAIEI9AACCPAAAmDwAYDc9AABwPQAA87sAAG67AABhvAAAfz0AwEE9AEAtvQCAMLwAIDC9AMDIvQBQ1D0AQD09ACA1vQCAPzwAwA09AADRuwCgS70AAA67AEA+vQBAkTwAACM8AIAQPQDAwLwAAFg8AMBMvQDAN70AgDc8AHDEPQBgbz0AwKe9AFCuPQDAmDwAIH49AMCHPABAJz0AQJ+8AICDvQAwl70AAEa8AECFPQCgjT0AgEk9AIAlvAAAdbwAALk7AJDkvQDA8jwAgDO9AADPvAAgfL0AQJs8AIB7vAAAvjsAIEY9AND6vQBg6D0AQMw8AACaPABA0rwAYDY9AICxPAAArTwAAAe8AEChvAAAGLwAgHY8AACKOwAABjwAgFQ8AIDzvAAAFb0AgB28AKCHPQAAnTwA0Li9AACEOgAAVrwAANo7AIAOvAAAwjsAgH08ACAWPQAAXDwAwI+8AACxPACARL0AAD28AABQOwDAmjwAYBa9AECtPABAiT0AIII9AMC0PADgDT0AAG48AGByvQCAerwA4AO9AMC5PADQlT0AABC9AMDivAAAMr0AAAy8AABBPABgxz0AgE68AIBTPACAsbwAAIi7AADEuwAgZj0AgEG8AACRPQDgjb0AYJa9AIAqvAAwyD0AMPk9AECdvQAQkr0AAFi6AABoOgCAxrwAQJs8ACAbvQAAU7wAAD49AIAfvACgEr0AAO88AABdPAAA+LoAMKc9AMAePQAAfj0AAKW8AEAaPQBAy7wAAEk9AECRvACAO70AQGo9AIBxPACAETw=","chunkHash":"6b2994f5da1566816f31a7e8f0f880981b4704b78138c6aa2c54a52b930d36fa"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef augmented_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W) with augmentations\"\"\"\n    # First apply basic transform to get initial 5D tensor\n    x_tensor = basic_transform(x, margin)\n    \n    # Apply augmentations with 50% chance for each\n    if np.random.rand() < 0.5:  # Random flip along z-axis\n        x_tensor = torch.flip(x_tensor, dims=[2])\n        \n    if np.random.rand() < 0.5:  # Random flip along y-axis\n        x_tensor = torch.flip(x_tensor, dims=[3])\n        \n    if np.random.rand() < 0.5:  # Random flip along x-axis\n        x_tensor = torch.flip(x_tensor, dims=[4])\n        \n    # Random rotation (90, 180, 270 degrees) in xy plane\n    if np.random.rand() < 0.5:\n        #...\n```","range":{"startLineNumber":1046,"startColumn":0,"endLineNumber":1061,"endColumn":0},"embedding":"AMCWvACAnzwAgBE8AECFvAAALr0AgJq9AICBPAAAvDwAEJG9AADiuwCAH70AAPQ6AIBhPAAAOjwAYAu9AKB5PQDAMb0AAHQ7AAAdvADAijwAAP68AED4vABQwD0AwJ48AIAcvQAADLsAwBc9AAD0OwCgQz0AwKG8AIACPACA4rwAABQ7AECIvQCA1LwAADs9AOAKvQDAqz0AwEA9AECWvACApj0AwGO9AEAjvQBAkDwAwL49AIBlPAAABDsAAOA5AECUvADAKz0AgFA8AEAUPQBAgD0AgIY8AIAPPACgjT0AcIm9AABSvACgFD0AgKy8AGBsvQAAY70AwPg8AKAovQAALTwAIF89AMCovQAAjjsAIFs9AAArvACAarwAQKy8AAAGuwDAiDwAgEc9AIBaPACALDwAIOM9AKAPvQAACjwAgCI8AEAsvQCANjwAYKk9AGBGvQAAjb0A4FS9AOCKvQBwmb0AAOC8AAAzPADgML0AcLC9AIBmPAAgVL0A8Jw9ACAXPQCAwLwAYCI9AAD3OwDA4TwAwOI8AAC3PACA9TwAsIU9AECKvAAAALgAACA7AOC5PQCgHT0AIDa9AAB5vQAAADwAAPy6AICpvAAgUb0AQME8ABCnPQDAwb0AQNG8ALDNvQDARr0AIHY9AAA4vQAAFzwAALO8AADJPACw3r0AACC6APCLPQBAMz0AAKQ8ACAcPQDgib0AQI08AGBgvQCgB70AgHA8AEDePAAg6D0AwLO8AKAWPQDgUj0AACm9AAAyvAAA6jsAIAK9ADDXPQAgEL0A4Dc9ACCEvQDAYj0AADm8AADluwCAT7wAwK+8ACBQPQCAkj0AoGA9AIDKvQDAmLwAAGU9AAAGuwBgMb0AgG08AGALPQCAp7wAICS9AIAevQBw570AAEG8AIBqvQCAtDwAwKW8ACDNPQBAAL0AUMu9AHCUvQDAvLwAgLS8ACCEvQDAij0AQPi8AID7vACARb0AQHU9AIBbPACAeDwAQL68ABCDPQAAcDoAID89AIApPACQkT0AgFW8AACsOwDwmT0AIIK9ALCsPQCAJ7wAgE88AIBPPAAA8DoAYHe9AACtuwBgGr0AgEC8AIB8vAAAM70AAJs8AADQuQAA8LwAgEY9AIAZPADA6rwAANw6AAAZPACAED0AQJc8AOAtPQAA77wAwFU9AMDQPACACbwAAOi7AGAbvQAA1LsA0IG9AMCiPAAAOj0AAO27AADhuwDglL0AwMm8AIAfPQCAtzwAAIa8AAAAPAAAgDoAYII9AADqOwAAlTwAADc8AEAIvQAAgDwAAEM8AMDfPACAkL0AwCg9AACeOwAA5rsAANQ7AADvuwDAFb0AgDC9AAB5vADgOL0AACy9ABC1vQAAFLwAkJ49AGBovQCQlL0AgGo8AMBwPQBgQT0AIGA9AEALvQCAHz0AAGA7AIAMPQAAdjwAAF28AEC4PADgIr0AAAK7AABYuwDgDD0AAKg7AAATPAAAsDsAYAM9AADMuwAAgTwAIBY9AECivAAA0DoAQPy8AIAivQCgdb0AoNo9AKAFvQCgFj0AgBq9ACANPQBAXT0AAHC6AIBCvAAAfrsAwGq9AECXPAAAhzwAwJU9AAAaPQDgBb0AcIA9AADvuwAAoDsAAIo8AMAEPQCAwDwAoB89AGCTPQAALLsAAIe7AABdPABAtTwAAMY7AGAkPQBgIr0AAIK7ABDIvQBwjL0AwLy8ACBCPQAA7bwAgAu9AGBNPQAA6TsAkOa9AIBfvADgab0AAJW8AFDTvQAAALgAgL48AEDevAAALjwAIIe9ACCjvQAwxr0AIDQ9AAA6OwBgMb0AgOq8ABCMPQCArj0AoKY9AECaPADA4jwAIHS9AAA6OwAAGr0AgDe9AIDbPABAlb0AAP28AIDKvACwjr0AQK+8AKB8vQAAEDsAAB09AAAjPABA0jwAgB88ABCEPQDAtTwAAHg6AADMvADgLD0AgBU9AIB5vAAgHL0A4C69ACCQvQBw6T0AwCM9AMCivADAkTwAAGY9AIBsvACA5rwAgEg8AAAKvQAA/DsAgFg8AAD9PAAABLwAQOs8AOBIvQDAVb0AAF+8AIDKPQCgGD0AUJG9AOC5PQAAwLkAAEk9AIAdPAAAJTwAgDS8AMBuvQDwi70AAI27AMCiPQBgdT0A0IE9AABivABAnLwAACs8AHgFvgBgJT0A4Cm9AEAIvQBAYb0AAOM7AACfvAAAMjsA8K89AHDGvQBQyT0AQLE8AIABPABgIr0AwJg8AABwPACAVDwAgAw8AADYugAA/jsAAPU8AACuOwCAUbwAgHc8AMAQvQDAh7wAANi7ALCLPQBAzzwAoJK9AACQvACgJ70AAPg7AOANvQAAVjsAALk7ACAzPQAAZjsAAOA6AADQugCADbwAgNq8AACFOwBAszwAgM68AACjPADgTz0AoHY9AADnOwDATD0AAKi6AIAwvQCA3rwAAIq7AADNOwAAMD0AQDK9AIBYvAAAnrwAAFE8AECBPACQoT0AgDs8AAASOwBgbb0AAPQ6AMCDvABAfD0AABg6AKBrPQDgWr0AwIy9AACsuwCgrj0A0OY9ACB5vQAQl70AAFs8AIDivABA77wAgIU8AIBJvQCAOrwAgIM9AABKuwDwsr0AAHg6AMDjvAAAZLwAoKU9AACPOwDAPD0A4Dy9AAAePQAAOrwAwHY9AAAKOwAAwrwAULs9AADzOwAA8rs=","chunkHash":"c05fb6ed9b2fbb9c2616bdfe2c239cbde5ef002226a82aea9bc66821b6f8ee33"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef augmented_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W) with augmentations\"\"\"\n    #...\n        k = np.random.randint(1, 4)  # 1, 2, or 3 for 90, 180, 270 degrees\n        x_tensor = torch.rot90(x_tensor, k, dims=[3, 4])\n        \n    # Random intensity adjustments\n    if np.random.rand() < 0.5:\n        # Random gamma correction\n        gamma = np.random.uniform(0.8, 1.2)\n        x_tensor = x_tensor ** gamma\n        \n    # Random contrast adjustment\n    if np.random.rand() < 0.5:\n        contrast = np.random.uniform(0.8, 1.2)\n        mean_val = x_tensor.mean()\n        x_tensor = (x_tensor - mean_val) * contrast + mean_val\n        x_tensor = torch.clamp(x_tensor, 0, 1)\n    #...\n```","range":{"startLineNumber":1061,"startColumn":0,"endLineNumber":1076,"endColumn":0},"embedding":"AICYvACAlDwAANg7AIDdvAAAGL0AkJO9AECoPABAwTwAgHm9AADYugBgQb0AwIk8AACGOwAAJDwAQMy8ADCKPQAAG70AACA6AAA6vAAAdzwAAAm9AAD2vADQxj0AgNU8AIDtvAAAaLoAANQ8AAAZPAAgbj0AQIy8AABauwAA9LwAAK27ADCjvQCAzLwAgCk9AEAMvQBAzT0AYCg9AEC6vAAAmT0A4FG9AGAuvQBA0zwAQMc9AADEOwAAQDwAALm7AACgugDALz0AQIE8ACA7PQAAXD0AQJ48AADjOwCglT0AgI69AAD9uwAgCz0AAMu8AEB0vQDgUL0AAHA8AIBTvQAAgLsAYDQ9AOCYvQCAQDwAIF09AIAdvAAAWLwAAOe8AIC7vACAGDwAQB89AACrOwAA3jsAYMw9AMAUvQAAWzwAgBs8AOAkvQAA8jsA0JE9AIBPvQDQpL0AgJe9AHCQvQCQsr0AwMC8AECWPABAQ70AMLG9AMDNPACgPr0A4II9AMC+PAAAz7wA4EA9AIBlPAAAsTwAQMA8AIC3PABAlTwAII49AACyvAAAADwAAMu7AOCsPQCgBT0AgCa9AOBTvQCARTwAANy6AEDWvABgar0AwMc8AMCYPQDwyb0AACW9AIDCvQBAx7wAgI49AOB9vQAAgTsAQJO8AEAqPQAQ070AgGa8AAB0PQAALD0AgHA8AEAWPQCwhL0AwKs8AMBEvQAgAL0AAHw8AMDoPAAg6z0AANy8AMApPQCgQT0AQNq8AIBNvACAZTwAQK68AFDkPQBAlbwAoAo9AEB3vQDAUz0AAMu7AABKvAAAQrwAAL28AGBZPQCwmT0AQE49AOC9vQAAubwAgGA9AABYuwBA4rwAgBQ8AEBQPQDAp7wAgOK8AAA6vQDQ4L0AAFe8AKBUvQCA6TwAANu8ABDWPQCAAL0AQKi9AKCMvQCAx7wAgLO8ACBsvQBgiz0AwJO8AAAxvABgO70AAAs9AABiOwDAlzwAQIG8AIBsPQAABbwAYEc9AIAJPABgpT0AgHG8AAAXPAAArz0AAGO9AOCpPQAAALwAgJk8AIDAPAAArLoAoGe9AACkugAAd70AAM68AACEuwAAEb0AwJQ8AABIOgBA8LwAAEk9AIBDPACAqrwAAFE8AAD4OwBANz0AAF47ACBHPQDA27wAYIA9AOAGPQAAaLwAAMi6AAAOvQAA2bsA8IS9AADTOwCgPj0AgHq8AACxuwAgpL0AALa8AMD6PACAcDwAgGW8AACvOwAAmjsAoF89AACROwAAgzwAADs8AIABvQCAWTwAAE88AAAbPAAAir0AwA49AICLPAAAyDsAAH47AAAQuwBgLr0AoEm9AACBvACwg70AwLW8ABDCvQAAZrwAELE9AGByvQCAd70AAIA6ALCHPQBgND0AIFI9AEDUvADA5zwAANA6AOAkPQAAcjwAQKK8AECvPAAAIr0AAMQ6AAApvABACD0AAAA5AAAAOgAAKDoAoBI9AABDvADArzwAAOU8ACANvQAAsLsAQN68AKA0vQBQg70AUNk9AOBevQDAHz0AQNm8AAABPQDAhT0AABi6AECEvAAAvLoAgGa9AICfPAAAkjwAQIo9AMDGPADgDL0AMKE9AADIugAA2DsAwIY8AED4PACADD0AgAc9AACzPQAASrsAAD47AIA0PAAAoTwAAMk7AIAlPQBgD70AACA5AODIvQDQlL0AgLq8AOAwPQBA77wAACG9AOAsPQAAnzsAQN69AECVvABAXb0AAMC6ABDfvQAAijsAgIo8AAArvQDA9jwAEIC9AKCivQBwuL0AwNU8AAAaOwBAK70AwI68ACCHPQBwwz0AkJA9AACiPAAACT0AUIS9AABeOwDgHb0AoDe9AIDIPAAgp70AgNS8AIDqvACwhb0AAIq8AKBTvQAAbDwA4C89AACkOgAAcjwAAG47AJCAPQBA7jwAAFG8AMCtvADAEz0AYD49AABAvABA8LwAAFW9AFCkvQCw9D0AICg9AACFvACALjwAQJE9AIBevADgDL0AgHU8AADGvAAA4jsAQOg8AEDfPACAfrwAoAI9AMAdvQDAe70AgIe8APC1PQDgAT0AoHi9AGClPQAA+LoA4GQ9AADCPAAAzDwAAEy7AABcvQDQor0AAAk8AGCLPQDQgj0AQJQ9AAAivADAnbwAAOI8ACgCvgCAIz0AICu9AKALvQAgQr0AgC48AIB0vAAACDwAMK89AOC0vQBQ2T0AACs8AADSuwCACL0AANQ8AECCPAAALDsAQKA8AACvOwAAZDsAwP08AADwOgAAkDsAgJQ8AIDVvACA97wAgBu8AJCJPQBA4zwAcI29AID1vACAQr0AAEC6AGAAvQAAvDsAAHU8AGAXPQCAczwAAFQ8AAAoOgAA47sAgC29AIB0PADAvDwAQMu8AMCXPACAcj0AAHc9AAAAAADgTT0AgGq8AEAZvQCA9LwAAN+7AIA2PADgDT0AYDO9AAAqvAAAMbwAwM48AIAJPADAlz0AAFQ8AADgOQBQhr0AACA8AIAyvABgZj0AAD47AKCPPQBgf70A0I69AABmuwCwuD0AAMM9AMBkvQDAqL0AAOk7AEDjvACABL0AADg8AGA8vQCAUrwAIHk9AIAnvACwsL0AAHC7AMDxvAAA5LsAkJM9AACguwAAEj0AQGm9AID7PAAAI7wAoJ09AACMOwDA5bwAMJs9AAAKOwAAGrw=","chunkHash":"1280ab9ff63961e4f7e9355fbc24a121c74cec14442071073dda8674567c5098"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef augmented_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W) with augmentations\"\"\"\n    #...\n    # Random noise addition\n    if np.random.rand() < 0.3:\n        noise_level = np.random.uniform(0, 0.05)\n        noise = torch.randn_like(x_tensor) * noise_level\n        x_tensor = x_tensor + noise\n        x_tensor = torch.clamp(x_tensor, 0, 1)\n    \n    # Final check for shape\n    if x_tensor.shape[0] != 1 or x_tensor.shape[1] != 1 or x_tensor.dim() != 5:\n        print(f\"WARNING: augmented_transform produced incorrect shape: {x_tensor.shape}\")\n        # Force correct shape\n        x_tensor = basic_transform(x.cpu().numpy() if torch.is_tensor(x) else x)\n        \n    return x_tensor\n#...\n```","range":{"startLineNumber":1077,"startColumn":0,"endLineNumber":1090,"endColumn":19},"embedding":"AIAAvQAAnjwAAJ48AMDFvADARr0AMIa9AIAQPADAxjwAgIW9AAD0OwCACr0AAHc8AACmOwAAajsAQCi9AKB+PQBgSL0AAPg6AICDvACADDwAAOu8AEDuvADAxT0AgOk8AED6vAAAKDsAwAo9AMDrPACQhz0AAKC7AACQugCACL0AQI28AECZvQCA1rwAwL88AEDHvADwyD0A4Gk9AABAuwDgqz0AwDC9AEAQvQAAfTwAYKU9AIAdPAAA5jsAACC5AADMvADgAT0AAIo8AKBMPQDAYz0AgM08AAC4PABgdj0AAEy9AADgugDgMT0AQAO9AOBIvQBAT70AAF08AEBavQAABjwAACo9AICQvQAAgLsAAFo9AAAAugCAq7wAgOK8AIDMvACAgjwA4D49AIBLPAAAjDsA4OA9AMD7vAAAJjsAAHY7AAAmvQAAsTsAcKg9AIAtvQBAkL0AIJS9AACgvQDAor0A4CG9AICaPADgML0AUJ69AAB3PAAgYr0A4F49AMDRPABAurwAYDs9AIA7PADArjwAgK88AACCPAAAxDwAgGg9AIAcvQAAgTwAANY7ACC1PQDAID0AIAO9ACB8vQCAMzwAANU7AAD2vABgKr0AwLI8ADCJPQDAq70AYAK9AGC8vQDAOL0AEIQ9AMB6vQDAyzwAAN+7AAASPQCww70AgDS8AEBxPQBAKj0AoB49AKAsPQBgdL0AALs8AMBmvQAAIL0AwK48AMAAPQAg6j0AQJe8AID+PACART0AAOC8AMDbvAAAvDsAwLe8ALDlPQDgJL0AADo9AABkvQCgcz0AAOa7AAD8uwCAqLwAAO28AKCAPQAQoj0AACs9ADDjvQDAw7wAgHE9AAA4PACAsLwAACw7AMB4PQAAS7wAQM68AIBFvQBQ4L0AALA5AEBYvQCApTwAwKy8AODSPQDA97wAkMq9AMCfvQAAurwAwCa9AMB4vQCAoj0AQKW8AEDKvADAUL0AcIM9AAC4OwBAnjwAgCG8APCCPQCAKrwAgEE9AADCPACAmT0AAIK8AIAkPADAoz0AQH69AACyPQAA4rsAgFw8AADwOgAACDsAwDS9AACSuwBASr0AgL+8AACHuwCgMr0AADQ8AACeOwBgM70AYD09AAC2PAAA87sAALu7AIBIPADgIT0AwIQ8ACBPPQDAvLwA4Gk9AEC6PAAAArwAAEy8AIAuvQAABDsAoF69AABYuwBAPD0AwJm8AIBbvAAgk70AgBW9AAD8PAAAODwAAOe7AAAhPAAAZrsA0I89AAC7OwCARjwAwL88AEATvQAA+jsAAOE7AMDYPABgmL0A4CY9AIDePAAA6DoAgAw8AABgOwCAJL0AIDG9AIAKvABAb70AgPe8ALC1vQAAeLwAoLM9AKBMvQAQlb0AgEo8ANCDPQBgID0AAHo9AADkvAAA9zwAAGI8AMAzPQAAWDwAAHG8AMDfPABgBb0AAPg7AADXuwCAGT0AgDg8AACsOgAA0LoAoDk9AACyuwCAzzwAABY9AIAXvACAPrwA4BS9AIBLvQCAW70AoOg9ACA3vQCA6DwAgAq8AACQPABgXj0AAKs7AAA8vAAAbLsA4IG9AACLOwBA2zwAYGo9AIARPQDgTr0AAJs9AECAvAAAUzwAgBk8AADTPADArTwAgAk9AJCgPQAAELsAgAC8AADluwCAbTwAAAo7AKAdPQCAM70AANg7ACDPvQCQjL0AwK28AGANPQDABL0AwNO8AGB4PQAAlLsAIMy9AACdvAAAR70AgGe8AADHvQCAIDwAABA9AEDcvAAA3TwA4E29ABCEvQDQ0L0AwNk8AAA0uwCgaL0AQNG8AMBfPQCwwj0A8KE9AABdPABgCj0AoGy9AACGOwBAEb0AgFG9AIAmPADQiL0AgCe9AED7vABAib0AwMq8AOBnvQAATjsAgC09AABaPABAuTwAQNs8AOBmPQBAsjwAAJ27AMD9vADArTwAYBo9AACQuwAA27wAoGu9AFCfvQBA7z0AgAg9AMCBvAAAYDkAoHA9AIAqvAAA4rwAAN07AIDFvAAAizwAgKc8AMC5PADAmrwAoAA9AAAYvQDgSr0AAJ68ADCfPQCAuDwAAI29AHCkPQAArjsAAHc9AADJPAAAET0AAKQ6ACB6vQCAeL0AgG48ANC3PQCAlD0AAGE9AAA/vAAAmbwAwKg8AFALvgAAOT0AAGq9AICXvACAOL0AAFQ8AAAvvAAAiDoAkIY9AGDRvQCgwT0AwOg8AIAFPABAB70AgMs8AECBPAAAuTsAwJQ8AAAuvAAABjsAoAM9AIBDPAAA8LsAwKA8AKANvQBgML0AAIu8AOB7PQCAAz0AsJu9AID1vABgHb0AwJU8AMDpvACA4TwAAAg8AADePAAAXDwAgDo8AAAJvAAACbwAQMS8AADgOwCALzwAQIu8AMCHPABgWj0A8Io9AADgOgAwhD0AAHq7AKBJvQDA+rwAgJ68AACkugCgPT0AAPu8AED1vABAJr0AwJs8AADEOgDQoD0AgDU8AIAUPADgib0AAAc8AIC0vACAWT0AAMS6AECNPQBgK70AQHi9AACWOwDglj0AoM49AMBwvQAAwr0AgJ08AAByvABABb0AwIU8AAAYvQCAaLwAgGU9AADtOwDglr0AAIC6AECyvAAAmLwAkKg9AAA4OgCAMD0AYE69AMClPADAxLwAQKo9AAAOPACA2rwAEKY9AADJuwAArbs=","chunkHash":"6fb7035a92efe739d508dc4b3c39e15b89956bb4242d65dec361a779faad43c6"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef mask_transform(x):\n    \"\"\"Transform a mask to a 5D tensor with shape (1, 1, D, H, W)\"\"\"\n    if x is None:\n        return None\n    \n    # Use basic transform for masks as well, but without normalization\n    x_tensor = torch.from_numpy(x).float()\n    \n    # Reshape to the expected 5D format (1, 1, D, H, W)\n    if x_tensor.dim() == 3:  # (D, H, W)\n        x_tensor = x_tensor.unsqueeze(0).unsqueeze(0)  # -> (1, 1, D, H, W)\n    elif x_tensor.dim() == 4:  # (C, D, H, W) or (B, D, H, W)\n        # Assume first dimension is channels\n        x_tensor = x_tensor.unsqueeze(0)  # -> (1, C, D, H, W)\n        if x_tensor.shape[1] != 1:\n            # If more than 1 channel, use only the first one\n            #...\n```","range":{"startLineNumber":1094,"startColumn":0,"endLineNumber":1108,"endColumn":0},"embedding":"AOBHvQDgTr0AAHK8AAAMvACAv7wA4MW9AAC7vACAjT0AwKS9AECQPADgNb0AACC8AIBkPADAvbwAQKW8AABaPQAAKjsAwHE9AKADvQCAKTwAwO+8AICOvABgZz0AwA49AGA5vQCABjwA4C09AADwuQCA8jwAgHA9AIApvQBAprwAANi8AIDevQDAhr0AAK27AACTvACA9T0AAP27AGB0PQBg+z0AAFK9AAAOvQDAFr0AAKU9AAA6OwAA2TsAIE69AOB1vQDAxTwAYAo9AIBZPAAgnL0A4D49AGAGvQDAYT0AQCy9AOAuvQBAxzwAYA09AACIOwCgGb0AACo7AMAUvQCgjT0A4LQ9ACDGvQCAtLwAAPs7AACZvAAA97wAAN67AACJuwCAZD0AwEI9AMDIPAAgIr0AwJA9AOBovQAA0DkA4DS9AEAGvQAAWTwAsIQ9AIAbvAAQlL0AQDa9AACFvQAQmr0AAJC7AMADPQAAdrsAIHW9AACNuwAASb0A4EE9AACQuwAA5DsAIA49AIApPABwkj0AAOg7AAAKPACgET0AQEY9AACgOgAAmT0AYGY9AIDWPADgej0AwBu9AED7vACAqDwAwIk8AABYugCAsLwAACM8AIDOPABAlr0AAMA4AABVvQAA3LwAIDI9AMBuvQAAwrwAwAq9AJCHPQAIDr4AgBW8AABKPAAA4LsAAJk8AIDFPACgML0AwLe8AKBbvQDAnrwAgFU9AICAvQAA4z0AQJO8AIBbvAAQhD0AgKU8ACBhvQAAVLsA0KO9ABAAPgAACr0AQCQ9AOBRvQCAQT0AAHQ7AMDXPACgU70AIJa9AADkuwCAcT0AgL48AHC7vQCAH70AQNQ8AICoPAAAMjwAAD+8AMC4PAAAPzwAAEQ7AABevQAwp70AgKY8AIBFvAAANTwAAGe8AAAvPQBAqzwAYIa9AGASvQDQrL0AQJi8AHCLvQBgpj0AQLA8AABmvQDQlr0A4C49AACiuwAAtDoAQK28AIAgPQDAijwA8Is9AACaPACgWj0AAHQ8AEDkPABgPj0AoE29AEC6PQCAejwAgEa8AEC6PABgDL0AwAm9AIB3vABAZ70AAMY7AACjOwCATr0AAB08AAAAAABAZr0AgL88AOACPQAAojsAgI28AAD6uwCgAr0AAAK7ADCePQAAgDgAsII9AEC0PACAErwAAMm8ACB1vQAAxrsAAHu8AGBVvQDgUT0AAOW7AIA4vACARb0AAIu7AAC/OwAA8zsAgIe8AAASuwAABzwA4FY9ALCZvQAAG70AgAY9AACmvACAVjwAAIu7AABEOwAALL0AAA49AIBzvAAgJz0AAKg8AECRvADgFr0AAPm8AGAPPQBgIb0AwMi8AEB2vQDAFD0AgF49ACCSvQBASb0A4BU9AEDPPACgAj0AICi9AADFOwAAzzsAAIU7AGCHPQCAd7wAADi6AAAeOwAAJLwAgNg8AGA/PQDAiT0AAAS9AEA3vQAAh7wAAE68AIBqPAAAwrwAgPw8AIBUvABAwLwAgCi9AKCCvQDgdr0A4Mg9AMDEvADAvjwAYCy9AIArPADAmTwAQAW9AIA0vQAAgLgAsIG9AEDXPABAEj0AIAW9AGAaPQBwu70A4IY9AABPPACAzjwAIAA9AAAdPABA+DwAAKM7AKAlPQAAYjwA4HW9AAAqPADAkzwAgGA8AIBpvACger0AoJq9AJC4vQAAr70AALK8AAAmPQCAdLwA4H+9ACAmPQAAqbsA4AK+AIDOvADgCL0AAHC8AADnvQCga70AAEw7AACsugBAsrwAAJC6AAC1vACw6r0AgPq8AIAHvQDgl70AQNO8AIB6PADAyDwAgBM9AECNvADABD0AAA28AABCOwBgP70AQJa9AECrvADA7LwAAKE8AAC/vADgvr0AgFy8AMBivQAA9jsAEIM9AAAMPQCAIrwA4B89ALCIPQBggD0AgIU8AED2PACAGT0AgKa8AADwvACAEb0AgAe9ABDhvQBQrj0AkIo9AAAhPAAAibsAQBs9AIA2PACApLwAAKC7AGAZvQBA7DwAAB08AICSPACAH70AAFu8AIAKvADgcb0AADw8AODbPQCAvzwAUJW9ADCYPQDAhDwAAHA7ADCIPQCAp7wAQLq8AMC6vACAQL0AwM28ACB0PQDgCD0AoGo9AADXvACAXjwAACe8AFCxvQAA6zsAQBW9AKBBvQAARrsAIAm9AADiuwBAd70AAMo8APABvgAgjz0AQLu8AACOOwDgDL0AQDE9AAC0uwAAqDoAAFC7AOCaPQAAqrwAAAA7AIDBPAAAKrsAAMY7AKCWvQAA0LkA4Ag9AAA+PABgFj0AYBC9AABhvAAAuTsAAIA6AACWuwAAYLkAALA7AMCIPAAAKjwAQMU8AGAJPQAAS70AgFW8AGAAPQAAtDsAQOC9AAAdPQBgET0AAI48AMCBvABAJz0A4Fu9AMD8vACAtTwAADa7AADePABAij0AoFy9AECEPAAAIjsAwLu8AEDZPABwrj0AYBo9AACsOgCAZTwAAAc9AAAevAAAJzwAgD+8AMC4PQDAYb0AsI69AIAovQBwrD0AcIk9AOA0vQAgOb0A4IY9AMACvQCgfb0AgHc8AEA2vQCASLwA4G89AAD3vACgoL0AAKS6AAABPAAAjrwAcIA9AAAyuwAQqz0A4Ey9AEBSPQBAijwAwD49AIB6PABgEL0AcLs9AABuPACAPrw=","chunkHash":"eeadcf987ab369088bf6b29693b3c6334ff45c22c09f1044085a3c82b2cb8fcf"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef mask_transform(x):\n    \"\"\"Transform a mask to a 5D tensor with shape (1, 1, D, H, W)\"\"\"\n    #...\n            x_tensor = x_tensor[:, 0:1, ...]\n    elif x_tensor.dim() != 5:\n        # Handle unexpected shape\n        print(f\"WARNING: Unexpected mask tensor shape: {x_tensor.shape}\")\n        # Extract dimensions\n        D, H, W = 80, 80, 80  # Default\n        if len(x_tensor.shape) >= 3:\n            D, H, W = x_tensor.shape[-3:]\n        # Force reshape\n        x_tensor = x_tensor.reshape(1, 1, D, H, W)\n    \n    return x_tensor\n#...\n```","range":{"startLineNumber":1108,"startColumn":0,"endLineNumber":1119,"endColumn":19},"embedding":"AMBfvQBALb0AQIC8AIB4vACABr0A8MO9AACovACApT0A8Jy9AIDbPADADL0AgEC8AIBwPAAgB70AgAi9AOBNPQAATLwA0IQ9AAAOvQAAOTwAgMS8AAC0vABgVj0AwP48AIAPvQBAkDwAoDY9AACLPABgVD0AQH89AOBHvQDAxLwAwOy8ADDcvQBAjL0AwJC8AADVuwAQ6z0AAGa7AMBQPQAw5j0AkI69AMATvQBA6LwAMJ49AAAwOwDAhTwAAGm9AOBPvQCAjTwAABc9AAAkOwDgmb0AgDo9AMD5vADAQT0A4AS9AIDQvABAqTwA4B49AIAaPAAgK70AALA5AOAJvQDggT0AQKs9ACCzvQBgH70AgDo8AAB8vABAzbwAAE47AIBVvACAVz0AwEQ9AMDsPAAALL0AEIU9AIBOvQAARrsA4AS9AOAnvQAAZDsAsIM9AMCLvAAgnL0AoG69AJCbvQBglb0AAJA6AIDGPACAerwAgEO9AAAmOwBAX70AYAc9AIBBvAAAODoAYB09AMCbPABglD0AgAc8AIAGPACAUj0AIE49AIBJPADwjT0AoDA9AKAKPQAAbj0AQBu9AAD6vACAqDwAwJo8AADWuwAArbwAAGA6AMDPPACQm70AABa7AMAnvQAAo7wAICQ9ADCAvQCAq7wAwOG8ACB3PQCIBL4AALy8AIC4PAAAm7sAwMA8AOAHPQCAJ70AAKO8AABpvQCAaLwA4Go9AEBXvQCw5z0AAH68AIAEvADAaz0AgIM8AEBsvQAAALwAEJi9AJDhPQAARr0A4CE9AIAWvQDAZz0AAME7AMDpPAAAfr0AUI29AAC2uwCgWT0AQI48AKCdvQBAH70AQOk8AMDePACAWzwAgH68AADiPACAYDwAgAK8AKBivQCQor0AAOk8AADlvACAFTwAwMC8AGAXPQCA5jwAQFS9AMDmvACQs70AgLe8ANCAvQCwoj0AQLY8AOBWvQAgib0AwAU9AAAXvAAAqLsAAN67AIBBPQBAuzwAoIE9AADSPACgRD0AQJI8AICVPACAOD0AgGC9AEDEPQCgCT0AAG28AEC7PADAGr0AALC8AGAJvQBwgb0AAAg6AADOOwBANL0AAGU8AABGOwBge70AQBQ9AAB7PAAAKjwAACS8AABZPABA8rwAANo7ABCQPQAA7LoAAJQ9AIDFPAAAX7wAgCu8AIB3vQAAeDoAgEC8AOB7vQBAUj0AACC8AIDovABAV70AALC7AIBaPAAA8DkAAHK8AABQugAA6DoAkJI9ANCOvQCA77wAgBk9AIBzvADAqzwAAKg6AAAkPACgYr0AQDs9AABivABA3DwAAG48AIAJvACARL0AQPi8AEAlPQCAK70AwOK8AKCQvQBA9zwA4Ec9AKCHvQDAbr0AQBA9AGAAPQCAqjwAwAm9AACvOwAAdjsAANQ7ABCLPQAAD7wAANw6AAAwPAAADLwAgN48ACBJPQDAmT0AIAK9AIAlvQCAkrwAAPS6AMChPAAA5bwAgOI8AAA0vAAABb0A4Fa9AHCCvQDAer0A4MY9AEC1vABAqTwA4Bu9AAAYPACAIDwAYAy9AABlvQAAuDoAcJq9AADVPABgUz0AgAm9AIACPQDQ0b0A8IM9AABfPAAAuDwAgNI8AABQPADAsTwAABa7AGAbPQBAmTwAgGi9AABlPACAnTwAAL48AMCdvABwkb0AQIS9AECzvQDgtr0AwJy8AMAoPQAAw7wAMIm9AIAfPQAA+7sAgPO9AADOvACA4rwAQPW8AADfvQBATb0AAEC5AADwOgAAW7wAAIE7AIAMvACQ7r0AgMK8AID8vAAAuL0AIAG9AIAJvADAlDwAIDM9AICVvAAgJD0AAMK7AACdOwCANL0AkJy9AACWvACA27wAgHY8AEAPvQDQwr0AAMW8AFCAvQCAdTwAoIM9AEAXPQAA3LsAYFw9APCFPQCgTj0AgJI8AAD4PAAA/zwAAMC6ACAvvQBAFr0AoAO9AGDbvQCgrj0AAHc9AACNPAAA7bsAYCY9AECUPADAgbwAAIC8AGAEvQBAKj0AADI8AMCOPAAgJL0AAES8AACKvAAQi70AACE8AHDOPQAAcDwA0JS9ANCcPQAAEz0AAHw7AGCkPQCAHLwAoAa9AADnvADAJr0AAPK8AMB7PQAgGT0AoDk9AEDcvACAYzwAAIC7ALC5vQAAbTwAwFC9ACAxvQAAFLsAQLa8AABWvAAgg70AwJ08ADABvgDQnD0AwKy8AADOOwDAGb0AgGg9AAA1vAAA8TsAALM7AACZPQAATLwAgAY8AMC5PAAAprsAAFA7AOCavQAA4DoAwCw9AMCwPACAyTwAwBu9AIBfvACAgjwAAMI8AACAOACAXjwAAGo8AIC+PAAAAzwAAMU8AOALPQCAML0AABa8AECIPACAMzwAkMG9AIAhPQAAxDwAQLo8AABeuwCgED0AoD+9AMAkvQCABj0AANC7AEDkPACwmj0AgFW9AIBYPAAA2LoAIBG9AABsPACwqz0AwPw8AIAWPAAAijsAQNI8AECRvACAXzwAAGa7AFCvPQDwgb0AAGe9AOAUvQBQkj0AkLA9AGAnvQCAOr0AYIY9AID8vAAgZ70AAD08AKAsvQAAYLwAYFw9AICKvAAgi70AAHq7AACgugCAerwAcIQ9AAAgugDQpD0AgGm9AOAvPQBAhTwAAEg9AICgPACACr0AwLY9AABRPAAAJ7w=","chunkHash":"a924f5f2a660d597cbaba68a4f671c308058f54c8f5fa652f4ad750e519505e8"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef get_transforms(target_size, use_augmentation=False, margin=0):\n    \"\"\"\n    Define transformations for the input data.\n    \n    Args:\n        target_size: Target size for volumes (depth, height, width)\n        use_augmentation: Whether to use data augmentation\n        margin: Number of pixels to discard from each edge\n        \n    Returns:\n        transform, mask_transform functions\n    \"\"\"\n    if use_augmentation:\n        return partial(augmented_transform, margin=margin), mask_transform\n    else:\n        return partial(basic_transform, margin=margin), mask_transform\n#...\n```","range":{"startLineNumber":1121,"startColumn":0,"endLineNumber":1136,"endColumn":70},"embedding":"AAASuwAgTj0AQLE9AEBzvQBAw70A4Iy9AEA+vQAAiTwA0Mu9AADFOwCgLr0AAAk8AIBsvACAvLwAgAe9AIBMvAAA2DoAADg8ACApvQCASDwAQIA9AOAAPQCAYj0AABi9AAAjvADA87wA4AM9AECUvADA1jwAAF49AADNOwBAEL0AQCu9AOClvQBAhDwAgKi8AABovAAQhD0AwK08AADouwAAdz0A8LK9AADZvACAtTwAgCg9AIDcvAAA2TwAANW8AIAMvACgiz0AAOa7AIBQPAAAqDwAgDY9ACAkPQDwoT0AAO+8AICDvADAozwAAIm7AACcugAgVr0AoE89AIC5vAAAY7wAQOk8AECjvQAAszsAACi6AAChuwAAODsAAPS8AMAnvQBgMD0AAL08AMDKvADAljwAqBA+ACAMvQAA6bsAIB89ADCVvQAAJDsAwHc9ANCsvQBAKr0AoHS9AECYvQDA4b0AgEM8AAAGPABwgr0A4Hm9ACCZPQCAL70AAH89AACMPQAAg7wAANQ8AICzPADgED0AACC8AADougDgJL0AIJ89AKAEvQAANT0AcIm9AIDiPQAgpD0AgGm8AADmvACAYj0AwDG9AADgvACgJb0AwAi9AEBRPQDAzbwAoCW9AMAzvQAACb0AAJw8AACMvABwlD0AABw9AGB7PQBgdL0AgBm8AECGPAAAJjwAgMY8AMBoPQCAzbwAAAC7AICfvQAgFr0AwF49AABouwDw2D0AwAk9AIDyPACgBj0AgAK8AIDbvAAAn7sAYAG9AICTPQCgPb0A8IM9AEDvvABA3TwAAKm7ACABvQDgKL0AABM8ACBgPQDgkj0AwBo9AHCmvQCAULwAAIk8AADbOwAAwrwAADY9AEDzPADAXb0AAH88AECOvADgr70AIF09AGCFvQAAsrsAgOC8AMBmPQBgF70AsLS9AKCSvQAAs7wAwIu8AMBovQAAaT0AQOu8AACcOwDAxbwAgP48AADDOwBA9jwAgKC8AACoOgAAvDsAAGG8AACvPAAgIj0AgFi8AAAwvAAgaD0AYLe9APD3PQCAFzwAQKA8ACCYvQAA5DwAwME8AGAPvQCQ970AAFK9AIB/PAAANLsAwIc9AMCRPAAA3TwAgJE9AMDCvADgYL0AAJW8AOBhvQCAGj0AwBY9AKBQPQCgE70AkI89AIABPQCgBL0AQBC9AAAyuwCAezwAgB69AECWvACADLwAgM28AGA6vQDACb0AAIC7AIDtPAAwqb0AIDS9AECuvAAABTwAQNg8AACKPAAATjsAwLO8AMCLvQAA/jsAgIk8AADAuQAgl70AoEM9AMBoPQAAFT0AALa7AIB4PADAJL0AgHo8AACVuwBAVL0AQEu9AFCnvQDAyzwAUIo9AEA0vQAgjL0AAJg8AEArPQAAAD0AgEk8AKAaPQCgZD0AgDq8AOAtPQCAEz0AgNA8AMCaPAAAD70AgIG8AMDNPADAwzwAoEg9AMARPQAAozsAwOk8AABeuwDgIz0AYCk9AECRPADAtrwAABw9AMBpvQAANLwAcKc9AIBqvAAAaLoAoIG9AICOPADgPT0AAJ88AEDJvAAAozsAgGG9AABjvAAAXLsAADI7AAASPQDAU70AAHo9AABmuwAAaTwAgJM8AKASPQAA8LsAAEQ8ACgEPgAA0TsAQIW8AIB+PADAgTwAgD28AGBGvQCAarwAAMq7AGDKvQCAUrwAgJk8AIAzPQCAjzwAwCe9AAAuvACAmjwAgDi9AGBPPQDAR70AYD+9ACBrvQAAYDoAkLo9AMAnvQBAyTwAAIi8AIA7vQBwu70AgCC8AMAdvQAwhL0AIDE9AABmPQCA/DwAYDI9AABEPQAAlbsAAIA5AIAWvACgmb0AQP+8AAB8vAAAX70AAH+8AID9vABgjb0AgBW9AEAmvQAAAbwAgEs8AICFvQCAf7wAwKU8AMCfPAAAQ7wAAFI7AGApvQBAUj0AACg6AADivABAYr0AIF+9AFCgvQBguD0AAM67AEDlPACgOD0AYAg9AECnPAAAqLoAQKA8AIDmvACAPzwAgCQ8AAA2OwAADLwAoEQ9AIBIvQBApLwAgAS9ABDRPQCALzwAAH08ANDfPQDgRj0AANc8AIAOPACAST0AABS7AGCpvQAA1LwAgPq8AEB/PQAgHz0AwHA9AICXPADAqDwAQFo9AKgRvgBgIj0AwJ28AIDNPAAAnLoAYDs9AADMuwDABL0AACI8APCCvQBAwjwAgCE8AADJuwAAjLwAAJk8AICIPAAgGT0AwIw8AAAIvQCAMjwAYFq9AEA+PQCger0AAEq7AIA4vQBA5zwAAIS6AOCePQBgLj0AACK9AMCzvACAEbwAgCM8AMD6vQBAsjwAgDe8ABCDPQCAFbwAIIa9AMDxPABA4bwAYF69AIA1vAAA2zwAwOC8ACA8PQAAP7wAwNU9AABAOwCgJT0AAFm9AKAavQDA6DwAALU7AAA0vAAgaT0AACS8AAAavACA3LwAgN48AACkPABAKT0AQNs8AACdPAAwm70AgJq8AMBuvQBAnTwAYFc9AAChPADA1bwAEJW9AABWuwBATT0AANs9AID5vADggL0AIEs9ABDFvQAASrsAAKw7AADkugAA6LsAMKc9AIDKPACAVTwAgBS8AAARvQDAHz0AENo9AAAAugAAaz0AoEU9AIBRPABgIb0AgOw8AMC9PAAAi7sAQMk9AIAVPADAi7w=","chunkHash":"7d5b1894a2f211b1e20672ab4392cb1e790a425319986e015fea06e377755629"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef monitor_memory(stop_event, interval=5.0):\n    \"\"\"\n    Monitor system and GPU memory usage periodically\n    Args:\n        stop_event: Threading event to signal when to stop monitoring\n        interval: Time between memory checks in seconds\n    \"\"\"\n    print(\"Starting memory monitor...\")\n    while not stop_event.is_set():\n        # System memory\n        process = psutil.Process(os.getpid())\n        sys_mem = process.memory_info().rss / (1024 * 1024)  # MB\n        \n        # GPU memory if available\n        gpu_mem_allocated = 0\n        gpu_mem_cached = 0\n        if torch.cuda.is_available():\n            gpu_mem_allocated = torch.cuda.memory_allocated() / (1024 * 1024)  # MB\n            gpu_mem_cached = torch.cuda.memory_reserved() / (1024 * 1024)  # MB\n            \n        print(f\"\\nMEMORY MONITOR:\")\n        print(f\"  System memory used: {sys_mem:.2f} MB\")\n        if torch.cuda.is_available():\n            #...\n```","range":{"startLineNumber":1139,"startColumn":0,"endLineNumber":1161,"endColumn":0},"embedding":"AIAlvQCAtDwAAKi7AGCSvQDAnr0AAJI8AACpuwDAwTwAgAE8AKALPQAAjDoAAAg7AMBRvQAAnrwAwOY8AABRPACwtL0AcKE9AIAlvAAAazwAQEU9AOC3PQAgXj0AQA49AABYPQBASL0AAE48AACIOgDgOT0AAFA7AICTPACAb7wAQGS9ALC1vQBgE70AgGQ9AFCyPQAA8TsAAKU8AIDXPACA4TwAAFK9AAC8OgCAXTwAAPA8AKAZvQAAHrwAgN28AEC4vABA9jwAQJK9AADUOwCQnL0AAGy7AID9PAAAgDkAoBk9AAAouwAACD0AgLG8AIA4PADwgb0AwNo8AABZvADAO70AALw8AIACvAAAhzwAwB09AMC+vQAAEbwAQJm8AAAiOwCALr0AAPA6AMDOPACAhzwAgFw8AOA0vQCgaj0AQLy8AIBkvQCAxrwAwO09AIAgvAAQwr0AQJ29AAD1uwAAUDsAAB08AIBmvQBA3TwAwNK8AHCBPQAA6bsAgFu9AOCVPQBAbb0AgBA9ACABPQAARjwAgDM8AMBcvQBAkLwAgDo9ACBFPQAgOz0AIEc9ACAhvQAgDD0AQB69AACIOwBAg70AAP+7AAC1OwDAET0AwL+8AGB5PQBAwzwAgPS8AACAvQAAnzsAQBU9AIB6vABAlz0AAKe7AABQugBgJL0AoAi9AIALPABASz0AYDa9AEDkPQCAI7wAYFs9AMCfvQBAiDwAwLW8AICJvQDwnD0AAPu7AAAKPQAATz0AILk9AKAJPQCwnT0A4E69AABoPAAAoDkAgJ88AICRPQCAfD0AAOy6AIA2vQBAvTwAAFk8AAAOPADgLj0AwMy8AABxvACgXb0AALw8AKByPQBAzLwAAPA6AICEPQBApjwAAEI8AABQvQCgPb0AINI9AABIOwAAkTsAUIa9ACDwPQBgBb0AgNK8AIBEPAAAf7wAAGw9AEBrvQCgHr0AYC+9AKCYPQCAJbwAoDQ9AADNPACAezwAAMm7AACrPABA7jwAwPc8AAC2uwBwxT0AoFI9ALCdvQBgTz0AYCu9AMCjvAAARb0AQHC9AACAOQAAOLsAsIS9AKBbPQAAwbwAAGA8AEAKPQAAhLoAICk9AACcuwBAUT0A4Cg9AEBvvQBAubwAANe8AGAZvQBAzzwAwDM9AAB2OwAgOT0AAJ48AIC1PQAAPj0AEIk9AOBOPQCAbjwA4AE9AKALvQDAVz0AYBi9AACjvAAAQrwAAMW7AKC8PQBAybwAgBK8AABguwBgIT0AoAy9AMDZPACgTj0AwHm9AOAhvQAApLoAgNc8AACbvQAAyLwA4EA9ACA6PQDgH70AIMW9AMCIvQAAuLwAwLO8AGBIvQAAoLkAAN07AACNPAAgh70AAKU8AABguwAgxb0AAEg7ADCUPQDAnbwAAM47AADMugAA2TsAgHu8AECuPQBAkr0AAHE8AICBPAAAT7wAIAg9AAA8PQAgpz0AgKk8AIADvQCgFb0AAKI8AECWPQAAojwAAPE7AAAUOwCgL70AAA89AIDsPABAmjwAQNu8AADNOwAAozwAABk9AADmPACAjzwA4EK9AABnPAAAsjwAgK+9AECrPABAbr0AgKS9AICfPQCgoL0AwKo8AAAiuwBAxLwAAJS8AAAbPQBAg7wAoJi9AIBePQCAZz0AwFk9AABUOwBAHT0AEIM9AAAqPQCA4b0AoEs9AAB6vQAA/bwAAGI9AAAoPQAAELoAAMs8AIAiPAAgJr0AAGu8ACAmPQCgOj0AACC5AICRPACAfj0AsKk9AAAYugDAwTwAAI+7AIC+PAAwir0AgKe8ANCovQBwlL0AgFo8AEA7PQAAW70A4FA9AHCbPQAgQb0AIEY9AADnPAAA1jsAUI29AKBNvQAAw7wAwAE9AIBVPQDQ370AoC+9AID9vAAA0LoA4JM9AGDCvQBgEz0AAGY8AJCmvQAAHT0AAD28AMCcPADA6zwAABA7AIBBvAAAyrsAgLy9AAAsvABAkT0AAA49AICpPAAALTwAgFU8AEDAPAAAaj0AwME8AADWOwBAFT0A4EU9AMCwPABIDb4AgPC8AADDPACAHr0AALu8AABwOgDAkLwAwIa8AICbPADgbz0AAOU8ACAIPQDAlLwAgGE8AOAYvQAAVjwAAAo7ACBmPQCAQz0AQM09AMDCPQCAIzwAwH49AGD8vQAAxTsAoGO9AMCYvAAAcb0AoD+9AMCmvADApLwAAEM8ALCJvQAA9TsAAHe8AAD+OwAAkTwAAM08AMCXvACARL0AsJc9AKB6vQAASL0AYDy9AOAUvQBA2zwAIDU9AAC+vACgTz0AwLm8AICqPAAA5TsAwMe8AEDtvAAAzrwAYFs9AFCEvQAAsjsAIEG9AIASPADQkT0AAAQ8AEBPPQAAq7sAAGY7AIAcPAAAzrwAQJW8AEDpPABAkbwAQFU9AIBmvACACz0AAF48AMgMvgAA8TwAIGU9AEBpvQBAej0AYD89AADVvAAAybwAAHA8AICgPAAASLoA4BW9AADVuwCANb0AwNm8AEDYvABAyjwAgPk8AIB2vAAgR70AALg7AEBzPQCgNL0AIE49AAA/vABgUb0AgGO8AMD6vADQxr0AQMe8AADgPAAAe7wAABU8AACKvAAABLsAAN67AEAGPQAAdb0AwA89ADCgPQDAv7wAAJy6AEAWPQCAgr0AADg7AGCCvQAA5DwAALA8AABOvADA5jw=","chunkHash":"6daa476197e3822dd361b9823c5e179660cf6eaf504fd2fe280a0f837b9ed780"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef monitor_memory(stop_event, interval=5.0):\n    #...\n            print(f\"  GPU memory allocated: {gpu_mem_allocated:.2f} MB\")\n            print(f\"  GPU memory reserved: {gpu_mem_cached:.2f} MB\")\n            \n        # Sleep for the interval\n        time.sleep(interval)\n#...\n```","range":{"startLineNumber":1161,"startColumn":0,"endLineNumber":1165,"endColumn":28},"embedding":"AKBWvQAAvjwAACo7AGC4vQDQgb0AQAu9AADIugBAIj0AAPW7AACJPAAApTwAAIq7AECLvQBAkLwAAP48AKAFPQDAt70AQI49AMCLvADgCD0AIEY9AKAwPQCACz0AAIQ8AKBJPQCATr0AgDE8AECRvADgMz0AAJA6AAAsOwBAA70A4Dm9AKDBvQBgRr0AIEw9AACWPQAAvLwAgLc8AICEvABAvDwAAJC9AICjvAAAijsAoAg9AMA5vQDAh7wAwI28AMCTvADgWD0AYJW9AABiPADwgr0AQCQ9AACguQAA2DwAoBQ9AACHPACA2jwAgGK8AECuPABgEL0AACk8AABGvADgOb0AAAk8AIDXvAAAGDwAwFo9ALCuvQBATL0AQMs8AICfPAAgJr0AANU7AACcOgAAljwAABg9AIDvvABAxzwAwAC9AMA7vQAAC70AcJ89AAD5OwDwp70AkJW9AMAFvQAADrsAAHI7AIA0vQDA/zwAgGG8ABCaPQAADrwAIEy9AJCyPQBQtL0AwLo8AKAJPQAAVD0AAAI8AJCTvQAAQLkAgB49ACCCPQDgXj0AgEI9AKAdvQAgVj0AABu9AAAnvABgEb0AAJY7AAAIvAAAfrwAwBC9AAB5PQAAqDwAwPW8AECNvQAgFz0AQPU8AIAnvQAARj0AgAc8AADAugBgZr0A4Fa9AABXPAAADDsAgMO8ALDGPQAAvLwAIG89AIAyvQCAcrwAANc7AHCBvQCAoD0AAIO7AADpOwDARj0AAJU9AICTPABgmz0AoHm9AMC6PACATLwAgOU8AOCVPQDwwj0AAEa7AIAJvQAAIbwAAEY7AEDNPADA5zwAAN67AACivADAhb0AAAQ8AOBIPQCAIrwAALI8AECWPQBAkjwAgGs8AMBPvQDAJr0A0Kc9AAA6OwBAQr0AgEu9AHDiPQDA6rwAALg7AOAUPQDAQr0AIEQ9ACBKvQAAxrwAAPu8AJC5PQAAnzsAYD49AICOPAAAFLwAgM48AIB6PADAkzwAQAM9AIBWPACw5D0AACM9AICnvQDARj0AYEW9AICyvAAArLsAkI29AAAiuwAACrwAQHW9AABaPADwrb0AgBW8AIDEPAAAYjsAoF89AADZPAAgPT0AYGc9APCuvQAgKL0AoBC9AMDavAAgRz0AQBg9AECVPACApDwAQJ88AECYPQAAhj0AAG89AEASPQBA2zwAALQ7AAARvQDAWj0AABa8AMDKvAAAgrwAgDm9APDBPQAA0LkAgC48AMDtvAAAvjwAgFi8AICsPABgFj0AwAO9AOA+vQCAEjwAQNY8AMALvQBgZr0AsLU9AGBtPQBANb0AMJm9AACmvQAA+rwAgAC9AABXvAAA8LoAAOg7AADWvAAwkL0AAMc8AADevAAA770AAOy6AKCRPQDAtrwAgGU8AAD9OwAAEbwAQAS9AKBsPQDAVb0AAP48AIBvPAAAGzwAABQ9AABcPQDAmT0AQEM9AMCDvACA47wAgBU8AEBHPQDgQD0AAK27AECKvABgO70AIBE9AECQPAAARjwAADi6AIAFPADArjwAAGI8AGAxPQAA7DsAwIu8AACtOwCA+DwAQIy9AMBUPQCgVb0AYD+9ACCCPQBA5L0AICs9AAAXvACAoLwAAGg6AIDJPACABb0AcIG9ALCyPQDA8DwAAPg8AADKOwAgXj0AwDs9AKAZPQAgyr0AoBo9AMCIvQDA5LwAQH49AEDlPADgCj0AAAC5AACAugCAV7wAoAu9AMAuPQCAbjwAgOG8AACQuQBgQj0AAIE9AECSvABgOD0AALs7AOAAPQDgrL0AADO8AMC6vQBA9rwAAFy7AMDhPACAlLwAgHg9AMBfPQCgC70AQMc8AAAPvAAAhzsAwLS9AADDuwBAdb0AYBM9AIAKPQDw1r0AgDS8AAB8vAAAUDwAAIM9ABCxvQCA+TwAAJw7AGA7vQAAEjsAAPS6AGAJPQDgOj0AgCy8AICKvAAAvLsAQIy9AMD0vABgfD0AsKU9AACHOwAAN7wAgAk8AIBePACQgT0AAAC8AAAtPABAHT0AYC09AADDPACYCL4AAFa7AAB1PABAaL0AACW8AADGPAAAm7wAAGC5AKCRPQAgST0AAG48AADxPABArLwAALk7AMDlvAAAZjwAANE7ACA2PQDAqT0AQJY9APDMPQCAFrwAYHI9AOgHvgAA2LoAEKS9AMDpvABQoL0AwJC9AIBNvQDAwrwAAAy7AIB6vQAARDwAAAK9AMCGPAAAjbsAwG49AIAuvADAPL0AEJQ9AEAHvQAgab0AABG9AMCmvACACzwA4F09AGAGvQAAXTwAgKG8AECNPAAA5DoAgEK9ACAZvQCAv7wAgG49APCVvQCAPjwAgKu8AIAAvAAwnT0AQOw8AOBHPQDAAL0AgD+8AAC8ugAAdrwAgGO8AHCYPQCAZTwAAJw9AAA6uwAAyTwAAB48AOAVvgBAkzwAYAc9ALCCvQBgkj0AoLA9AICyvAAAQLwAANy7AIDyPADArjwAADm9AAAPvACAOb0AQJm8AIBTvACAhjwAABE8AAB5vAAA6rwAAAA7AMBlPQAA+7wAUAc+AAD1uwCgM70AgLe8AMCVvACQsr0AgBK8AEDJPAAAorwAAB08AADmvACAFTwAAJq7AGASPQBgK70AQFM9AMB6PQCAOLwAABg8AECzPADAPb0AAHY8AGBXvQBA6DwAwNI8AOAiPQAAxDw=","chunkHash":"ef8fb0b806d1601d0abbef5570daa17db255786f41cdd59b18be97083771e005"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef non_augmented_transform(x, target_size, margin=0):\n    \"\"\"Non-augmented transform function that ensures proper 5D tensor output\"\"\"\n    return basic_transform(x, margin)\n\ndef ensure_index_csv_exists(args):\n    \"\"\"\n    Ensure the nuclei index CSV file exists, creating it if needed.\n    \n    Args:\n        args: Command line arguments\n        \n    Returns:\n        str: Path to the index CSV file\n    \"\"\"\n    if not os.path.exists(args.index_csv) or args.create_index:\n        print(f\"Creating nuclei index CSV file at {args.index_csv}...\")\n        # Import here to avoid circular imports\n        from scripts.create_nuclei_index import create_nuclei_index\n        create_nuclei_index(args.data_dir, args.index_csv, args.class_csv)\n    else:\n        print(f\"Using existing nuclei index CSV file: {args.index_csv}\")\n    \n    return args.index_csv\n#...\n```","range":{"startLineNumber":1167,"startColumn":0,"endLineNumber":1189,"endColumn":25},"embedding":"AMATPQCgez0AAAc9AOCXvQDAr70AAG+9AKACvQAAWrsA4Le9AADauwCAjrwAgFQ8AABNvAAgMb0AsKS9AHCTPQCACb0AAEI7AEDIPACAGjwA4EQ9AMCuPADggz0AALG8AAAEuwAA/rwAYDk9AAAeuwCACT0AwLa8AABQPQAAzrwAMJO9AAB7vQAAnzsAAFg8AEBqPQAgKz0AwM08AICDvABQpD0AgKq9ACAvvQAAlTsAAI87AABcuwAAfLsAQHq9AACsOwDAcT0AgGA8AIA1PACgMz0AoHU9AECQPABAszwAQFq9AADUugAADrsAwJG8AECWvAAQ0b0AEIw9AACEuwAAbTwAQA89AMAqvQCAgLwAQOI8AACTOwAArTwAgMq8AAB5vAAA/TsAgJM8AICWvACAabwA0LU9AIBLPACAyzwAQPY8AIBzvQAAkjwAIK49AICzvAAgrr0AwMK9AGBlvQBQ8r0AQIg8AGACvQAAeLwAQHi9AKAzPQAAt7wAQHc9AMByPQAA3DsAMJ89AEALPQCAebwAANI7AADfPABArrwAYLs9AAB4OgAAyTwAAFS7AOCjPQDAhTwAAKG8AAAwuwBASj0AABK7AAALvABQpr0AgAy8AEBLPQDABb0AABa7ANCGvQAAazwAAPA7AEDevAAgED0AAN47AACwPQBgL70AQK68AABNPACA9zwAQL48AGAhPQAAuzwAAGS9AACjuwAgL70AwMc8AADXuwCAEj4AALi6AMA/PQAAWDwAAMu8AABLPAAAYbwAoB69AFCdPQCAZrwAgOQ8AMCqPABAtzwAAMy7AIAAPACgnr0AgF68AAC0PAAQmj0AQNQ8AJCYvQAAJDwAABI9AIAePABA1LwAAIC8AOCoPQBgcL0AgGA8ADCdvQDQlr0AQMM8ACB9vQAAoLoAAAM8AMCqPQAAZ70AAFS9AGC7vQBARr0AAKi7AMBKvQBQjj0AAO+8AIAqvQBA0bwAAJ88AABcPADAtrwAgC69AEDwPACAaLwAoBG9AADhuwDQrj0AQH69AID9vAAg4D0AwAK+ALC8PQDgMz0AABW8ACBDvQDAnrwAAAo7AMCsvAAAsb0AwEa9AIAmPQDAQr0AgB88AMCovACAs7wAwAc9AMAoPQAAwDgAgD69AIC0PADgOz0AwAQ9AICFPACAX7wAoBs9AICmPABABL0AgPY8AEAPPQCgHj0AgFa8ACAVvQCAATwAYEi9AAAAuwCACbwAwB29AMCFvABgFb0AoGG9AEAdvQAAhzsAQCo9AMClvAAAiDsAYDu9ANCnvQCAHbwAACi6AADwOQCg170AoFM9AAA5PQAA9DoAQJM8AEA5PQAgQr0AwPe8AGCDvQDAKb0AgGq9AACEvQAAlrwAwH49AOCCvQAgZ70AYBO9AEB5PQCAYz0AAFQ7AAAuPQDAdz0AoBk9AKBEPQBAJj0AQK48AECuvAAAhrsAAMk7ACB0vQBgiD0A8IU9AEAAvQCgLL0AADY9AAAeuwCgiz0A4B09AADCvAAA8bwAwPy8AOBivQBA1bwAwHg9AACXuwAAwLgAAFK7AIAhvQCAEz0AQME8AOAUvQAABL0AAC28AEADPQBgHT0AACI9AADOPACAv70AQAE9AECbvADA0zwAQBs9AGBoPQDAi7wAgCm8AEAJPQBAz7wAAPA5AAAeuwCA3DwAAH67AAD/OwAAnDoAgC68AJDlvQCARb0AQMw8AMDfPAAADDsAgLE8AEAVPQAAvLwAAAC4AEArPQAQob0AgHG8AIBcvAAAE7wA4HI9AAA3PQBAqjwAgAE8AAD/vABwnb0AgCY8AOAcvQDArb0AgAO8AAD5OwAAx7sAgJA9ACB5PQAAqLwAcI+9AAA6PQDgjr0AQII8AAA9vQCAR70AICO9ACCCvQDwlr0AgM+8AIB0vQAAYLkAIHM9AIDKvAAABD0AYEQ9AIAMPQDAzTwAANI7AACrPABgBD0AQIQ9AIDjvACggL0A4Du9AIClvQDYDD4AQJQ8AEDaPABAlDwA4C89AABgOwAASDoAAFK7AACsOgCwnz0AAFc8AIB6PACALL0AAAw9AEDEvADAc70AgCg8AAA2PQAAHb0AQNm8AGB2PQBALz0A0Kk9AABOPQCAQj0AYCm9ADCrvQBAIb0AAGQ7AAAaPQAALj0AwKY9AMDWvAAgJT0AAOi7AGCLvQAgfD0AgFM8ACB1PQCA0rwAAHu8AMC4vACAp7wAwME8ACCpvQDgVj0AgEI8AKA0vQCwhb0AAMU7AIAuPAAArbwAAE09AAC+uwDgCj0AQIa8AADpvABAyrwAgGS8AEBavQAgMT0AgJi8ALDUPQAA+bsA4Dy9AACbvACgB70AgFu8AOBPvQAAST0AALQ7AEAqPQAAkrwAgDa8AAApvABAlrwAAAU8AEAwvQBAQz0AACC8AGAlPQDAjLwA8Ns9AICZPQCAyz0AIBC9AADEvABgAb0AANA5AAAKvAAAgTwAgDY8AABYugAgnr0A4DI9AMC2PACAKD0AAB48AADbuwAA0LwAgL68AMA9vQBAmzwAQBC9AAAkPQDggb0AYAq9AOAKPQBARD0AAAc+AADguwDgEb0AAGK8AGBwvQDAqbwAABo8AIDrvACAULwAIGY9AADgOgDAizwAgAc8AGAQvQAAFz0AoFA9AMBePQBgQT0AQIu8AIBTPQAQtr0A4Fc9AECMPACATLwAIHQ9AIDHPAAALz0=","chunkHash":"9638026b3621087a3fa558df08c450f256ef8daf02323a1f5ea1d309773d0282"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n        class CustomVgg3DAdapter(nn.Module):\n            def __init__(self, base_features, feature_size, num_classes, classifier_size=512):\n                super(CustomVgg3DAdapter, self).__init__()\n                self.features = base_features\n                \n                self.classifier = nn.Sequential(\n                    nn.Linear(feature_size, classifier_size),\n                    nn.ReLU(inplace=True),\n                    nn.Dropout(0.5),\n                    nn.Linear(classifier_size, classifier_size),\n                    nn.ReLU(inplace=True),\n                    nn.Dropout(0.5),\n                    nn.Linear(classifier_size, num_classes),\n                )\n                \n                # Initialize the classifier\n                for m in self.classifier.modules():\n                    if isinstance(m, nn.Linear):\n                        nn.init.kaiming_normal_(m.weight)\n                        nn.init.constant_(m.bias, 0)\n            \n            def forward(self, x):\n                x = self.features(x)\n                x = x.view(x.size(0), -1)\n                return self.classifier(x)\n        #...\n```","range":{"startLineNumber":1411,"startColumn":8,"endLineNumber":1435,"endColumn":41},"embedding":"AACXOwBAm7wAoG89AGDCvQCA5LwAMMK9AEDjvAAA7jsAwI69AGA7PQBAprwAwBK9AMBGvQAAGDsAAGu8AABOOwDgHr0A0IA9AADCuwAwxD0AgAw9AAATvADAgT0AAEK8AEAHvQAAAb0AgPw8AOAHPQBAsD0AQJ68AEAAPQBAsrwAIJ+9AOB3vQDw5r0AgD28AMCGPACABTwAAK68AACdOwBAYD0AIL+9AIAivQDgAj0AAI48AADMuwAgED0AgDC8AECpvAAgFz0AgBa9ABCKPQBAorwAgGE9AADQuQAgXj0AAOK8AKAuvQAAwDwAAIC4ACAOvQCAjb0AIAk9AIAQvADgPr0AAMQ8AGBXvQDgEz0AgE88AADkuwBgWL0AwGG9AAAOvAAAeLoAwCU9AECzPACAFjwAwNk9AEAyvQBAAL0AACq8AADVOwDABb0AkJA9AIBrvQBw070AsJC9AGB+vQBgfb0AYCy9AADAvAAA3DsAcKC9AFC+PQCA4DwAwCQ9AEBWPQBwh70AYLY9AMCqvACAHD0AAGQ9AAAEPACAgz0AAGU9AIBbvQAAgjsAgPA8AMCEPABwmj0A8Ie9AAD0OwDAzjwAgAO9AAAMuwBAurwAgIc9AKA/PQCgEb0AAEq9AABeuwCA9TwAwLI8AGDAvQAAcDoAwA09ACAWPQAAPLsAwIC9AAC5PAAABr0AgMM8AAAoPQAA4DkAALW8AACPvQBgir0AoH09ABCNvQCQlT0AwJ88AICgvAAAhDwAAEi8AAALvQCAlz0A4Di9AEAlPQDgar0AwJo8AICLvQDw1z0AgF+8ACBqvQAAvbwAgNI8AIDKvAAgSj0AQF09AKAqvQAARzwAgBQ8AIA/PAAAmzsAQOC8AADmOwAAFrwAAEq7AGCxvQAAZb0AYLc9AIBpvABABT0AAJq7AEDFPQBA6rwAgK48AMB6vQCA6rwAgMG8AICjvAAA2zsAgKS8AADguQAACb0AgCc9AICIvAAgO70AwHM9AMCEvACA1zwAwDY9AAALvADwjD0AwEc9AAA+PACgPz0AMMK9AMB1PQCAIz0AoJO9AIA1PABA9LwAAOa8AACrPADwB74AABy8AACgugBA6rwAAPi7AABNPACAhDwAwDk9AMD+vAAADr0AQNm8AADBuwDAxDwAgBY9AEDhPAAAjzwAAI+7AACVOwCAyLwAALg8AOBEvQCAGrwAAIe8AEDXvACAqzwAoFK9AGCRvQDAmTwAwCy9AEDEvACgOL0AADg7AIA/vADAnzwAQLE9AICYvACQjz0AAIY8AIDuvACAWTwAAIk8AECwvABAIr0AUIQ9AMBBPQAAcrsAgGM9AOA4vQAAgL0AAJO8AAAAOwAABbwAgDO8AADAuACgnL0AADC6AICkvABAUr0AgD48AAAlPAAAAbwAAIy6ACAcPQDAnbwAAKY8AOBLPQAAhbsAAJC7AIBoPAAAhDwAQPc8AAChPABAtT0AIMU9AMAZvQDAJL0AgOk8ANCGPQCQhD0AgBS8AACuvACAzrwAYDU9AMBPvQBgD70AAIc8AECfPADA2DwAAA28AIC2PADgID0AgFy9AACQPQCA3zwAwKS9AOBpPQBA4zwAAPM8ADDUPQCgmL0AAHE9AAAougAASjwAQE09AABOvADAEr0AwLa8ACCmPQBAk7wAYD89AKB0vQAApjwAwKa8AEAtPQBgFr0AgHu9AICRvABApLwAwIY9AIAWPQAAw7wAQPS8AIAjPQAA7rsAQLO8AIDIPACA2rwAwMC8AKANvQDA+rwAAME8AEAqvQAQuT0AALw6AGBlPQCwEL4AgK+8ACBwvQAAbTwAAMQ7AGC3PQAAoLsAoIQ9ACAvPQAA6LsAAPW7AACqOwCAZjwAACC9AICaPADQkb0AALA5AAD2uwAwh70AADa8AAAIvABALz0AQIk8AKB0vQCALT0AQNm8AADcugAAIr0AANC6AECfPAAADjsAwDw9AMCpvQCAPrwAEIi9ABCnvQAgHT0AwFQ9AADouwAAODsAAC88AECcPABQmD0AYB29AECyPAAAeLsAgNQ8AMDkvAAAxb0AYCg9AIAFvAAgiL0AAKs8AGA7PQAADT0AYD29AKB+PQAACLwAwJU8AEC3PQAATjsAAFq7AEBTvQDA5rwAIG89AMBpPQBgTD0AsJs9AADGPAAAYDwAABK8AAAIvgCArTwAcJq9AOA8vQCA9bwAAFm8AAB/vQAACTwAAHc9AACvPABALD0AAIE8AIBDPACAJjwAYC89AEDXPAAAGb0AAGK8AMCmPACgL70AANe7AADhOwAA67wAgJi8AKBTvQAAoDsAAKA7AEA6PQDAvTwAYKa9AAADPACgHb0AAJI8AIBBPAAAmbsAIIa9AACYuwCgAb0AAA68AKAdvQBAVb0AAGq8AABAPQCQhT0A4GW9ADCyPQDQsD0AELg9AAAwuwDAXz0AgAe8ADDevQAA2zsAAHi7AABmOwDABj0AQB09AJCUPQBADL0AwLW8AOAzPQDAPj0AALg7AIDRvACAEb0AQLC8AMDEPABgJ70AAPQ7AAD+PAAA2zwAQCK9AMAhvQAAULwA2BU+ACB8vQAAL70AgEO8AADRPABA6LwAAHA8AIDIPAAAd7wAgGA8AMBhvQCgQ70AAE28AMB6vQCAWrwAYHM9AIAyPQAA1TsAAKC6AMCqPACAar0AQAI9AMCRvAAAIbwA4CM9AIDDvAAgDz0=","chunkHash":"889e90f7104a3224a14173284ff945afc218aaa22f60a97f5535dc3372f26705"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    # Parse command line arguments\n    args = parse_args()\n    \n    # Set random seed for reproducibility\n    torch.manual_seed(args.seed)\n    np.random.seed(args.seed)\n    \n    # Set CUDA options\n    if args.force_cpu:\n        args.device = 'cpu'\n        print(\"Forcing CPU usage regardless of CUDA availability\")\n    \n    if args.cuda_launch_blocking:\n        os.environ['CUDA_LAUNCH_BLOCKING'] = '1'\n        print(\"Set CUDA_LAUNCH_BLOCKING=1 for better error reporting\")\n    \n    # Create output directory if it doesn't exist\n    os.makedirs(args.output_dir, exist_ok=True)\n    \n    # Ensure the index CSV file exists\n    index_csv = ensure_index_csv_exists(args)\n    \n    # Get transforms\n    transform, mask_transform = get_transforms(args.target_size, args.use_augmentation, args.margin)\n    \n    if args.margin > 0:\n        print(f\"Using margin of {args.margin} pixels to discard from edges of samples\")\n    \n    # Make sure the nuclei index file exists\n    ensure_index_csv_exists(args)\n    #...\n```","range":{"startLineNumber":1192,"startColumn":0,"endLineNumber":1222,"endColumn":0},"embedding":"ACAXvQAA0LsAAK89AJADvgAARr0AQK29AMDtvAAA4bsA8KO9AAB7PAAAiTsAgGc8AACVvABAnzwAADw8AGBfPQAAzb0AANg6AABWuwDAyTwA4FI9AAAiuwAA+jwAgNy8AADNvADgO70AwEc9AIA7PADAujwAIDC9AAA+vQDAs7wAQLq9AFCjvQAw1L0AgBi9AKAaPQBAiLwAALs7AMAIvQBAcD0AaAG+AAANvQBAEz0AIBk9AIBvvQAA6TsAMIS9AABIPAAAXrsAAAy9ANCCPQCA17wAgHk9AIAivACAKj0AoCm9AACRvADAmTwAQF+9AABmOwBgU70AoFw9AICTPABgLr0A4Aw9AKAivQAA8DoAoGU9AAD/uwCA4rwAwJ68AAAGPADgRL0AANg8AMAVvQCAHrwA8Iw9AGBmvQCAR7wAACE8AMAdvQCgUT0AsJU9AKAhvQCwxr0AILS9ACBAvQAAdb0AwPG8AIC0vACAJLwAYD29ALCPPQCApTwAQNA8AIBKPQCAFb0AMLY9AIDJPACA8DwAwKI9AIAMPACAZjwA4Mk9AIA3PAAAmzwAgO88AMDlPAAgpT0AgEy9AIBfvAAAqDsAADG9AEC5PACAsbwAQE89AADfPABAK70A4IO9AMBlvQAABTwAgOo8AAAXvQBAqDwAIDA9AECePQAQi70AAFu8AOBJPQAAnLoAQPU8AJCLPQAATbwAwKi8AMA4vQBAkb0AYFc9AAAbvQBIAD4AgDk8AMDrPADA7zwAAB88AIBJPAAAvTwAIIO9AJCePQCAB70AIEk9AIAQvADgsT0AgDy8ACAcvQAAlDwAAGg6AADbOwAAgT0AgKQ8AGBevQAAh7sAQA09AIBQPABA+LwAwJO8AIAjPQAA4jsAACq8AAA1vQCgK70AoIk9AMBCvQAAabwAgIK8AGCzPQDgDr0AYF69AEArvQBAW70AgAa8AMBLvQBAjTwAAKY7AEDNPAAwnb0AgCY9AADUOgCgDL0AQPG8AIBLPADA9jwAgBk8AAB6uwBAUz0AAKE7AICBvAAQoT0AwL69AEBWPQAAhz0AwNG8AJCKPQCAOrwAQIC8AIBUvADID74AABQ8AECdvAAAAzwAQKU8AIBCPACA6TwAAC49AADUOgBgLb0AIEC9AICcvABwrj0AAB49AICMPACAG7wAAPS6AACLOwAAmbsAIHE9AADovADgVz0AAJ28AIBCPQDASj0AoDi9AABBvQBAsLwAoEG9AIBcPADAAL0AALC8AACFvAAAlTsAgGE9AADduwBART0AAAg6APDgvQDgEj0AAE67AOAMvQBQ1L0AoDs9AEBfPQAA5rsAALM8AAA+OwAger0AAN68AKAmvQAAcLwAgB69AIBIvADAOb0AAKQ7AOB4vQCQib0AABm8AKAMPQDAAD0AACi7AKAmPQAAxzsAgNO8AOBdPQCA2TwAgEk8AIB8PAAAGDwAAII7AADJPACgbD0AkIM9AACEvADgjr0AAD08AEDHPABgRj0AgAA8AIBZvACgJ70AwPc8AAA6uwAAlrsAgGY8AEDivABAljwAAMg6AMAoPQCAwDwAAC+8AABwvAAAWrwAQCK9AID9PACAaDwAgIo8ALC5PQCQpb0AwKA8AAACvQAA0DsAgCw9ACAOPQCAKzwAQAg9AIAHPQBA+LwAQEc9AAARvACAlTwAALC7AIBkPQBAEL0AwIA8AFDQvQAAzzsAIJE9AIAfPABgHj0AwCM9AGADPQAAmjsAQLC8AACmPADAKL0AgKu8AADIugBgWz0AAME8AICEvADgZT0AAAi7AECLvAAQyL0AAGy7ADC1vQAA8rwAAG68ADCdPQAAibsA4Gk9ALCtPQAAVLwAgNW8AAByvADgfr0AIFS9AADquwAAUb0AoF29AKAIvQBg1b0AANS8AAAgvQCgXz0AwNE8AGAXvQBQjz0AAM88AAA0OwAA/DsAYAG9ANCQPQDgRz0AAO07AABFvQAAZbwA4MO9ACCCvQDQvz0A4Ew9AABuuwAA8TsAALg6AMCFvADA0jwAAI29AGAGvQAABT0AoHI9AAA2PABAWL0AwMg8AAC8OgBgm70AAHg7ACBNPQBA8bwAQIW8AEBYPQBAoDwA4Fk9AOBfPQCghj0AALs7AEBsvQAAtbwAAE88ANCDPQDgjz0A8M49AOA7PQAAmzsAoDc9AECbvQCART0AICy9AIBzPABgub0AANK7AADYOgCA3rwAkK49AABsvADASz0A4AS9AACqPAAAi7wAQMk9AADxPABAE70AoFk9AAAVPAAAgDsAYAe9AABdvAAA3TwAAA47AECxvQAAwDgAAHI8AACvPQCAkTwA4Fm9AECDPABAE70AwLk8AEBvvQAAHbwAwA69AAAquwAAMDoAYCq9AIA/PAAwir0AAP+7AIDkvAAAPT0AAEi8AJDfPQCAXbwAINk9AEALPQCARD0AAFK8AHCHvQBgJz0AwL88AMATPQCgKD0AQHw9AABAOwDAjzwAAMo7AACVPAAA/DoAAGQ8AGA1vQDAZb0AQL68AMCmvAAAQzwAAH+8AOAMPQAARrwAQI68AGBePQBAED0AkAk+AMChvAAAgjsAAKg6AIDvvADA6LwAAPI7AACQvABAnLwAgNU8AAAsPABAML0AgM08AOBXvQAAL7wAwJw9ALCkPQDARz0AAMa7AICTPACA8LwAwMA8AAAhPAAAG7wAAFQ9AICQvAAgED0=","chunkHash":"160ebda45a07b6b80e8486c1053e8620dee4f7ab763d842c523fe367e2c9f058"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n    print(f\"Setting up data loaders...\")\n    \n    # Start memory monitoring in a separate thread if requested\n    stop_monitor = threading.Event()\n    monitor_thread = None\n    if args.memory_monitor:\n        monitor_thread = threading.Thread(\n            target=monitor_memory, \n            args=(stop_monitor, args.monitor_interval)\n        )\n        monitor_thread.daemon = True\n        monitor_thread.start()\n        print(f\"Started memory monitoring with interval {args.monitor_interval}s\")\n    \n    # Load data using optimized lazy loading\n    try:\n        # Get train and validation dataloaders\n        print(\"Creating data loaders with lazy loading...\")\n        \n        dataloader = get_nuclei_dataloader(\n                root_dir=args.data_dir,\n                batch_size=args.batch_size,\n            shuffle=True,\n            num_workers=args.num_workers,\n                transform=transform,\n                mask_transform=mask_transform,\n                class_csv_path=args.class_csv,\n                filter_by_class=args.class_id,\n            ignore_unclassified=True,\n                target_size=tuple(args.target_size),\n                sample_percent=args.sample_percent,\n            pin_memory=args.pin_memory,\n            #...\n```","range":{"startLineNumber":1223,"startColumn":0,"endLineNumber":1255,"endColumn":0},"embedding":"AIC6vADA3DwAUJY9ALDSvQCAPL0AwC29AABxPACAIzwA4I29AIAZPABgHz0AADE8AIBXvQAAlbwAgGc8AACGPACAX70AgPc8AMCivADAXD0AILo9AACKPADgAj0AAEq7AMCUPAAAW70AoCI9AEBJPQBgHT0A8Le9AEBXvQDA1LwAgEm9AABjvQBgmb0AABm9AIBZPQAAOjsAAAAAAEDJvAAgTz0AMPi9AAB8vACgUT0A4Go9AAAwvQAAPLsAAFy8AIBOvAAAGrsAYJG9AKALPQCASr0A4EM9AAB6vACQgz0AoA69AMDWvAAAwDsAQEW9AADTOwCALr0AwLY8AOAGPQDgN70AAJo8AGCHvQCAHLwAAJw7AABUOwCA+rwAoGe9AADNPAAgK70AIC09AACnvAAAcDwAUKM9AMA3vQAAqDsAgCO8AIB1vACAATwAQFw9AICwvADg470AIJ69AIA8vQAAgDoAQJy8AMCJvAAAMrsAgIy9APDGPQCgGD0AwLk8AEBSPQAAe70AoGM9AIDoPADgUz0AQJc9AAAGuwAAnjsAgKo9AIAYPADgMD0AgA49AADgOQBApj0AYJG9AMDhvAAA9zsAwGC9AAByPAAAmbwAAOw7AMD1PAAASLoAoFG9AKCvvQAAl7sAgCM9AABXvQCADz0AgOk8AMBaPQBgQb0AAKC8AIDCPACAqTwAgAY9AKCePQCgP70AwK68AMB3vQAgZr0AwPs8AGCCvQCQ1j0AAF67AOAiPQBA3jwAoD49AEDsvADwhT0AAIC9AJCGPQAA7rwAQBY9AACWvADA6D0AwLu8AOALvQDA2zwAwII8AAD6vABgGD0AwKk8AIBNvQBgBr0AgAW8AABdPQDgIr0AAI67ACAoPQCAVrwAIDq9ADCUvQAgUL0AMKU9AADvuwAAT7wAgGO8AGCXPQAAO70AoFi9AAAkvAAARL0AAPe7ACChvQBgHb0AgO+8AAB5PAAAtL0AwII9AMD9vADAw7wAAHC7ACAhPQCAazwAIDA9AAASOwBQkD0AAIw8AAAcvACgLT0AYDa9AEBMPQCAYzwAwL+8AKAUPQCAArwAEJy9AAD+uwDQ+L0AAHE8AMCPPACAMbwAQMk8AAD9OwBAhzwAQBM9AADsOgBgGb0AIBO9AADVvADgdD0AgGI9AMCePAAABj0AANo7AEDAPADAST0AYGE9AIBOvAAA0DsAAJy7AIB6PACgTD0AACk8ACBPvQAAMDoAAAQ7AGBrPQCAxbwAAOy8AAABvQAgCD0AoHI9AIAYvACQnD0AgGy8AIB2vQAA4LoAAJw7AKBIvQDgsL0AQHM9AIALPQAAc7wAALa8AIBevABgmb0AwGa9AEDTvACA7bwAgE68AEBWvQBASL0AAFQ8AIDtvADAU70AQOI8AIAKPQAAlLwAAGI8AIDbPAAAlDsAIDy9AEBFPQAASL0AgOY8AICzPACAObwAIAs9AEA1PQAgET0AwHA9AABwvACATb0AAM08AGCUPQCADz0AgAe8AAD4OgAgSr0A4Ec9AABUvABA4zwAAPy7AECTvACA7zwAABC7AIB9PQAAiDwAUIy9AAA1PAAA8DsAwHG9ACBmPQDgDD0AABo8AMDYPQCAWL0AgE88ACAYvQAA9DoAgMQ8AIC/PACAlbwAAJS6AGB+PQDAwjwAAJs8AACMugAAJDwAAPY8ACBhPQDAdL0AwM28AGBcvQAAfDsAMJk9AAAdPADgMT0AgBQ8AIAnPAAAvbwAgH68AACjPACAfb0AgNa8AAA0PAAAMD0AQPA8AACmvADgbT0AwMU8AEAtPQDoC74AgFm8AIC8vQBA77wAADS8AMBxPQDAwLwAYNw9AMBqPQBAiLwAADS7AEAZvQCAfr0AoBK9AIBvvAAgfb0AQPa8AMDnvAAQtr0AAPO8AIBVvAAgHz0AgGc8ACBPvQCAIj0AgCU9AIBNPAAAuLoAQLq8AEARPQCAcT0AAO48ACBMvQAAWrwAEKe9ALCsvQCA2j0A8IU9AADAOgCAwzwAwMI8AAAYugAAPz0AoCa9AACXOwAATj0AQPU8AAAOuwAAt70AAGQ8AAD6OwDgbb0AAIa8AEA8PQAAsbsAgNS8AEB3PQAwjD0AAFg9ACBcPQBAmDwAgFs8AABzvQCAS7wAgFQ8AMB8PQAA+jwAwKg9ACA6PQCAsbwAkIg9AJDovQDAZT0AgDe9AICMvADQib0AQDy9AICEvADAgr0AUKA9AGAYvQAATjsAACW9AABWuwAAoLwA8K09AGBDPQAgVb0AoFY9AEB3vQDAHr0AwIa8AACVuwBgQj0AAJY7AOBzvQAA5bsAgAQ9AMCTPQDAnLwAIG+9AAAXPACAPrwAwCU9ACCHvQDA5rwAwJu9ACAlPQAANjsAADA7AIAOPQAgCb0AAFW8AIBsPACAZT0AgPi8ACBBPQAAlDsAcOg9AAAGPADAcD0AICo9AIDNvQCAqDwAAMi7AADHPACAmD0AACA9AIBPPQAAkDkAQJS8AABOuwCAgzwAAMw6AEAWvQAgeb0AABa9AIAAPAAABLwAgE88AAAdPACAALwAgNC8AACkugCA2zwAcAY+AIA5vADAFr0AAEk8AIBEvABAk70AQLk8ACAYPQDAqLwAAMm8AABgvQBAy7wAABS9AAChvACAjLwAIII9AEAXPQCAzzwAAIw6AIBtPADgP70AQMi8AADvuwAAhrsA4Dg9AAD0uwCQwj0=","chunkHash":"f0cd2e2c7952ee50beb3ad4ac0fd37b710d9bd014c42ae0f5b79e1d0a1273a16"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n            debug=True  # Enable debug output for the dataloader\n        )\n        \n        # Split into train and validation\n        dataset_size = len(dataloader.dataset)\n        train_size = int(dataset_size * args.train_split)\n        val_size = dataset_size - train_size\n        \n        # Create random split indices\n        generator = torch.Generator().manual_seed(args.seed)\n        indices = torch.randperm(dataset_size, generator=generator).tolist()\n        train_indices = indices[:train_size]\n        val_indices = indices[train_size:]\n        \n        # Create new dataloaders with the split indices\n        from torch.utils.data import Subset\n        train_dataset = Subset(dataloader.dataset, train_indices)\n        val_dataset = Subset(dataloader.dataset, val_indices)\n        \n        train_loader = DataLoader(\n            train_dataset,\n                batch_size=args.batch_size,\n            shuffle=True,\n            num_workers=args.num_workers,\n            collate_fn=dataloader.collate_fn,\n            pin_memory=args.pin_memory,\n            persistent_workers=False if args.num_workers == 0 else True\n        )\n        \n        val_loader = DataLoader(\n            #...\n```","range":{"startLineNumber":1255,"startColumn":0,"endLineNumber":1285,"endColumn":0},"embedding":"AABDvAAA97wAELI9AEAFvgBAhrwAEI69AIDNvAAAUjsA4GG9AABCOwCAWTwAwI88AEA6vQBAx7wAwJQ8AGA6PQAgP70AwPk8AKBvvQCgcT0AwE09AADKOwAAYj0AAMC6AAAouwDgXr0AYFQ9AGA8PQCAFD0AkKO9AIAdvQDA4rwA4G69AIBCvQDQvL0AwB29AGBrPQDA/DwAAKA6AID1vAAAVz0AgP69AEACvQDglj0AoI09AGBovQDAFj0AABM8AADOuwAgBb0AIDG9AABaPQDAxrwAIGY9AAA7vABwhD0AYH69AIAzvQAA5zwAgJS9AABPvAAgJL0AIBk9AEA8PQDAB70AAP47AJCQvQCALjwAAIs7AEDKvACApLwAAEa9AEC5PABA8LwAQP08AOAKvQAANzwAkL09AKBuvQAAUrwAAGM8AIAjvAAAnTsAgCU9AABWvQDQzr0AkL69AKBPvQCAqTwAMIC9AACvuwBAsrwA8IS9AHDDPQCgOj0AQJw8AMACPQAwhr0AQFQ9AIBmPAAA9DoAIK89AIBuPAAAyjsAQHg9AADCvABAozwAwDI9AABIugBghD0AkNi9AACGuwAAlDoAAEW9AMAmPQAgNb0AYBY9AACPvAAgWb0AUJO9ALCuvQBAnrwAgAE9ANCTvQAAkTsAYDQ9ACBLPQDwl70AAHq7AGAePQDA2TwAANo8ACAbPQCgC70AALC5ALCtvQCwob0AAH48ALCGvQBg5D0AwGi9AIDOPABAyjwAAB28AACCuwBAzDwAICO9ANCmPQBAGb0AgKM8AIBnvQAwqz0AgGs8AADPvAAArDwAQIC8AEC5vADgWz0AQIA9AEBivQDAhLwAgEw8AIBRPACAKLwAALC8AED9PACABbwAAM68ADCXvQCwiL0AoKQ9AAAjvQBAg7wAABS8AGCgPQCgGL0AgFW9AGALvQCA9bwA8Ie9AMCXvQAApbsAwJk8AIBKvAAAb70AgEO8AAD5uwCA3rwAAAA7AOBMPQDA4TwAgKE8AADHOwBgOz0AgFo8AADruwDgfD0AAOW8AEB4PQAAFD0AgDi8AOCpPQBAl7wAYI+9AADxOwAgqb0AALO8AIBKvAAAOTwAgI68AIBQPADgCD0AgG08AABKOwDAubwAgBS8AICFvACgZD0A4DY9AIDvPADAxDwAAOC7AAA+uwCAgTwAoFo9AEA0vQBAGj0AANe8AOBMPQAAWT0AQNS8AACwvQDAgTwAgBK9AMCLPQDA4LwAgIC8AEAgvQAAJLsAAIA9AABQvADgqj0AAB+8AFCqvQAApLoAAAg8AAAPvQAgWr0AwCs9AEAtPQCAjDwAQO68AICqvAAAbr0AYEq9AAAUvACAtLwAYBe9AAAWvQDgK70AQOa8AAD1vADAeb0AoFM9AIDNPABAojwAQIi8AAAuPAAAKLwAYAi9AEApPQAAvrsAAJK7AAAtPADApTwAACg7ABCfPQBAYj0AQPo8AICbvADALb0AAN08AMAOPQDgEz0AgBM8AAAsvADA1LwAAKI8AAAmvACgLj0AQI08AGBCvQBA4zwAAHw7AKAxPQAATD0AYC29AIAPPAAAJLsAwIu9AMCAPAAAoLkAAGW8APCZPQBAar0AgFc8AIDcvACAqDwAABw9AACDvADACb0AgJA8AMDxPAAAJLwAQCc9AACRvAAAeLwAAJY7AICLPQBwm70AACq9AEC8vAAgUL0AsN09AIDVvACA5zwAANS6AAC1uwCA3bwAAEA7AACWvABgb70AQPO8AICivACAFjwAANg6AIAxvQCgAj0AgOA8AIB/PAAoDL4AAIq7ANCRvQBA9rwAABC6AEBpPQCAXzwAcKg9AOAkPQAAGLwAADq8AIAqvQDAIr0AUIO9AECkvACAar0AAKu7AIDyvABghL0AAMi8AABLPADgeD0AAAg9AABfvAAgOD0AgL48AICdvAAAeDoAgLC8AIAEPAAAbz0AAGs8ANCtvQAAULoAAJG9AIBpvQBQvj0AIIQ9AIADvQCAlzwAALU7AMDuPAAgIT0AACS9AICVvAAgJj0AwBw9AACouwAgQr0AQLo8AADwugAQmb0AAEC5AMAVPQAADzwAgOm8AKBGPQCgNj0A4CU9AJCaPQBgIT0AABK8AEB4vQDAAr0A4Cc9ACDZPQBAND0AYHA9AGB5PQAAADkAAFE9ADCxvQBgVD0AoKy9AACrPACgUb0AwLO8AECNvAAAr7wAIOw9AOAnvQDAPT0AAFS8AIBlvAAA67sAANk9AGBjPQAA4LoAQJO8AAB4OwBgK70AgIa8AADpPAAAXTwAQM+8ACA7vQAA3bsAAAQ8AEDIPQBABL0AIBm9AIC1PADAtrwAgGY8AKBhvQAAmDoAwCu9AEDjPAAAxjwAgHe8AKADPQCAsrwAABQ8AIARvACgRD0AYGS9AIBwPQBAlbwAYOk9AKALPQAgXz0AAHo8AODgvQBApzwAgIU8AGAWPQCghT0AQN08AGAsPQAA5bsAAEC7AECXPAAAJTwAADw8AAAQvQDgiL0AgIS9AMCUvACARjwAQBi9AEAQPQAApLwAgFq9AIBRvADAFT0A0CY+AAAuvACA9LwAAFK7AICbvACgVr0A4CQ9AAAAuAAAlLwAAHy7AGAKvQBwh70AALq7AAAmvAAAwrsAYG09AMDYPAAAAT0AADY7AAAQugAghL0AQPq8AIAuvACAULwAwOw8AAATvQCgfz0=","chunkHash":"53caf2948a8b8b52cd04bff865a091adb9ea3367b9a1826b20c4dbd2c745180b"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n            val_dataset,\n            batch_size=args.batch_size,\n            shuffle=False,\n            num_workers=args.num_workers,\n            collate_fn=dataloader.collate_fn,\n            pin_memory=args.pin_memory,\n            persistent_workers=False if args.num_workers == 0 else True\n        )\n        \n        print(f\"Created data loaders: {len(train_loader.dataset)} training samples, {len(val_loader.dataset)} validation samples\")\n        \n        # Determine the number of output classes\n        if args.output_classes is None:\n            # Get class information from the dataset\n            all_classes = set()\n            \n            # Load from the class CSV if available\n            if args.class_csv and os.path.exists(args.class_csv):\n                class_df = pd.read_csv(args.class_csv)\n                if args.class_id is not None:\n                    if isinstance(args.class_id, int):\n                        args.class_id = [args.class_id]\n                    class_df = class_df[class_df['class_id'].isin(args.class_id)]\n                all_classes = set(class_df['class_id'].unique())\n            #...\n```","range":{"startLineNumber":1285,"startColumn":0,"endLineNumber":1309,"endColumn":0},"embedding":"AIBhvACAubwA8MU9AEDuvQCAfLwA4Ky9AMChvAAAerwAgIC9AAAAOwAAxTwAgLE8ACAbvQAAlLwAQKC8AAA0PABAJL0AAHk8AEABvQBgUz0AQJw8AABfPABANz0AwB+9AACouwAArLwAAL48AEBfPQCAkDwAwKi9ACASvQBAobwAoHi9AEDtvACAjr0AgK28AOBYPQDAwjwAADw7AOBKvQAgBT0A4PO9AABmuwDALT0AwEA9AGBTvQDgKD0AgCK8AADnuwAAzTsAYHm9AMCJPQCA1LwAQNI8AEC6PACA8TwAAH69AMC8vACA0DwAMLa9AECVPABgI70AgGk9AAAVPQDgDL0AAKi6AIBpvQAA8bsAAM87AID/vAAAkrwA8Im9AIA/PAAA6bwAoC89AMCJvADA/LwAQIo9AHCovQBAhbwAAOY7AADRuwAA9TwAgBo9AMAcvQC4AL4AwMi9AGChvQAAw7wAICm9AAC2vAAArLsA8K+9AIDtPQBgRj0AAGi6AOBZPQDgoL0AIB89AAAiPADgCj0AQGY9AAB9PADAljwAQEE9AACcvAAAgDkAYB89AMATvQAgiz0AAN29AGAqvQAArLwAYDm9AIADPQDgOr0AgCo8AIB4PAAQgL0AIIm9AICJvQAAGDsAoCU9ACBlvQBAsjwAIAM9ACBQPQDAiL0AAPO7AABHPQCApzwAAHM8AJCLPQAAGDoAAEG8AGC8vQCwq70A4Gw9AFCIvQCwmT0AAD+8AIARPACAXDwAAIg6AEACvQCAmzwAgFi9ADCXPQAA2bsAAHw7AKBIvQAgzz0AAL08AEDsvAAAYjwAAGy7AIA/vQAwkj0A8II9ABClvQAAMTwAAHA6AAClPAAAsbsAwK88AOAMPQAAB7wAwOG8AFCkvQDAKL0A0MA9AADavAAA0zsAgPC8ABCWPQBgLL0AgNS8AECBvACAQb0AIGu9AAB9vQCAqbwAgDq8AEDxvABgs70AgC88AIDbPAAgNb0AgLS8AMC0PADAej0AALi6AICePADgIj0AQDQ9AECxvAAAbj0AQEW9AKAzPQDAvDwAAAu8ADCcPQCgdb0A4Ea9AAAAOABQxL0AAEY7AMAYvQCAErwAALi6AED4PADAlzwAgAk8AAAnPADA8bwAgDy8AMCRvABwjD0AwOw8AACuuwAAYjwAAAa7AAAOOwAAND0AACM8AEBevQCAWzwAQA69AID2PAAAVrsAgAu9ACDLvQAApjwAoCm9ACA/PQCAObwAgAW8AABavAAAgTwAIHk9AACHvADglz0AAOc7AEAEvQBA7TwAAIU8AEClvABAjL0AwBg9AMCFPAAAXDwAAJ28AIBGvAAAkL0AII69AIDyvAAA77sAIGe9AADovAAgCr0AwJK8AMCAvABgc70AgDc9AMC5PAAgDD0AAJ47AABuPAAA6TsAwDy9ACAePQAAgTsAAJw7AIBdPAAA9zsAQOI8AIAePQDgjD0AAJQ9AEDivADQib0AgIw8AIDpPABgET0AAHM8AAAIuwCABr0AgDo8AIDqvAAAND0AgO08AMDfvAAAQjwAAIy8AOBVPQBgBD0AwIq8AIA4PACgBT0AAPG8AIAtPACA2jwAAEg8AODZPQBAT70AgDq8ACA/vQCAJjwAAGo9AICKvABA57wAAFc8AOARPQDApjwAwM08AACivAAA17wAQAw9AABLPQAgOr0AQC29AMD7vACADbwAyAI+AED8vACA1TwAgAq8AIAHvQAA5bsAAKe7AAAtvABQhb0AQNS8AACHPAAAojwAALm7AKAOvQCgFj0AAKk8AIBjPACIHr4AADO8AFDQvQCAqLwAAEA6AOB3PQCAgDwAMOQ9AMBDPQBAobwAALA6AABGvQAwhL0AwHW9AAAyOwCApr0AAEo8AKA3vQCAgr0AgK28AAABPADQlT0AYA89AED0vABgAz0AIAc9AIADvAAA/bsAAH68AACzvADgcz0AgLI8AFCGvQBAvbwAoIm9AAC2vQDA2T0AwK49AACAOQBgJT0AAGA7AAAcPADgOj0AQGq9AIB1vAAAXj0AgPA8AAA/PAAAc70AYDg9AAB4ugDAg70AAFo8AKBAPQCABz0AwPu8AIAYPABgNT0AAEY9AICRPQAAzjwAADS8AGATvQCgBb0AQBs9AOCXPQBgMz0AoHU9AOB3PQDAn7wAwAk9AOCRvQCgfj0AIIm9AACxuwDgGr0A4FO9AIB0vAAAQL0AwMM9AAC4OwAA6jwAAL68AMDLPADAmDwAYN89AIBwPQCAML0AANy8AACFvACAQr0AwIi8AACRPACAdTwAAGS8AIBevQAArrwAALs7ALDUPQAAuTsAoD+9ACA/PQBAg7wAAEC8AKBdvQCAubwAgOa8AADmPAAAHjsAADG8AACIPACAzbwAANy6AID8PAAQiT0AwOy8AKA7PQAAbzwAIPc9AAAbPABAST0AAKY8ACDdvQCAnzwAgGq8AMAXPQBAtDwAgJ88AECTPQAAeLwAAE67AKAlPQAArDsAAMs7AEDovAAgiL0AYAm9AIA1PADAnrwAgGm8ACA8PQCAJL0AADa9AAACPACAQjwA+Bk+AIATvACgGb0AwBE9AACvvAAA9rwAwAQ9AAAlPACAjrwAABS7AIDqvABADL0AwP68AADEOgCAKbwAAHk9AAAouwBA7zwAgD48AADMOgBAVL0AYAC9AIBSvAAAsrsAwEc9AIDLvABggj0=","chunkHash":"02fcc8de64a99bccc1f089a03be0a275a4c53b77d93328beb71195a7f9965f4b"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n            if not all_classes:  # Fallback if class CSV is not available\n                # Get a batch from the dataloader and check the labels\n                for batch in train_loader:\n                    if isinstance(batch['label'], list):\n                        all_classes.update(batch['label'])\n                    else:\n                        all_classes.update(batch['label'].cpu().numpy())\n                    break\n            \n            # Handle class IDs that start from 1 instead of 0\n            min_class = min(all_classes) if all_classes else 1\n            max_class = max(all_classes) if all_classes else 19\n            \n            if min_class == 1:\n                # Class IDs start from 1, so we need exactly max_class output classes\n                args.output_classes = max_class\n                print(f\"Classes start from 1. Setting output classes to match max class ID: {args.output_classes}\")\n                \n                # Add a note about how labels will be handled\n                print(\"NOTE: Class IDs in CSV file start from 1, but model inputs will be adjusted to start from 0\")\n            else:\n                #...\n```","range":{"startLineNumber":1310,"startColumn":0,"endLineNumber":1331,"endColumn":0},"embedding":"AGANvQAAJDsAkJU9AIAAvgDAeL0AIFm9AAACvQAAULwAMMO9AEA4PQAA0zwAAEW8AMBqvQCA3TwAAOA7AAApPQBAyLwA8II9AID1vADASj0AgLs8AAAAugAAHz0AQKy8AECYvADAH70AIDA9AOCDPQAA0jwAQIW8AADsPABArbwAkIK9AIDlvABw5b0A4JG9AABdPACAOjwAACA6AIBovQAAeTwAYJq9AABAvAAAhDoAoCU9AAChuwAAdD0AQJu8AKAbvQCAKzwAcIu9ADCOPQAAzbwAYEI9AMDVvACA/zwAsJ69AAB6OwAAOD0AAHu9AEAEPQCgT70AQJ09AGADPQAA7zsAoFY9AOBlvQCAEbwA4CQ9AMANvQCgS70AcJG9AIAFvACgWr0AACQ7AAAKuwAA07wAIGs9AAAdvAAAHr0AAIM7AACiOwAA0rsAwD09AACkOwAgvb0AsJi9AOBZvQBgOb0A0Ke9AAAIvQAAZjwAkJ69AAgBPgAAVj0AACs8AKB0PQAAx70AIBw9AECivABAKj0AwIU9AIDlPADACz0AoBk9AGAgvQAAu7sAQEw9AADXvADA+zwA0Lq9AADNvAAAgLoAoIq9AABGuwBAbr0AgB69AMCvPADAXb0AQJa9ACBkvQAAyDoAAAo8AICavQAARLwAoDA9AAAWPQBA5bwAAP67ACARPQAAErsAwIM8AOA3PQCAujwAgMy8ADCFvQCAqb0AQBk9AGBCvQAAsj0AgI48AACouwAAoLwAAOI7AMC2vABAAT0AsKC9AJCoPQCALb0AAOc8AIBXvACA3j0AgCK9AMDWvADAqjwAgKk8AIBwvAAAIT0AgE49ALCRvQAAGDwAAGQ8AEBGPQCA+bwAQAq9AACWuwAAtjsAAJG7ALCFvQAALrwAQH49AAB9vADgID0A0JO9AAAlPQAAQLsAwOS8ACAJvQDQtr0AgOm8AACQOwAAPbwAQBe9AECpvACwkb0AADc9AAC0OgBgWb0AALy7AECEPAAgBD0AgBu9AIC9PADAZT0AwMo8AACaPABgGT0AoL29AEDXPADAsjwAQHe9ALCZPQAA0LwAwG29AADouwDAyL0AgHe8AAA4vAAA/LsAoCY9AABAOgDgLD0AALy8AIBiPABA+7wAwKu8AACovAAgQj0AgPI8AADguwAAGLoAgPa8AACVPABAjjwAABO8AIClvQAANj0AAAE8AKARPQAAvTwAANs7AEDIvQAA1rsAADi9AIA5PAAAiDoAAJo7AACkugAAwDkAwJE8AMDtvAAghj0AABo7AIAJvQDAAD0AgF88ACAfvQCAob0A4EE9AADdPACARjwAIIo9AADUOwAQxL0AgCO9AECHvAAAiLoAAE+8AMCevADA+bwAANy8AEAPvQDAt70AALC6AIAqPACAGTwAACg6AAAXvADAnrwAgG68AADIPAAAjDsAgJ08AMCevADAlDwAALA6ACBrPQDwrD0A4I09AADYOgDAsL0AALU8AACTPQCwqT0AAEw7AABQvACQgL0AAFQ9AICpvAAACLoAwAA9AECGPACgGT0AAHG9ACAkPQAgSD0AAAO9AACWPACA/DwAoBS9AEBfPQAApjwAAAi7AGDPPQCABr0AAKM7AAA4vAAAELwAQF89AIAMvQDA4LwAAK07AOBlPQAAGDsAQLY8ANCEvQAgMb0AACY8ACCoPQAALTwAoGq9AIBhvQAAADkA8Os9AACJOwCgGD0AAHy9AGAMPQCgTT0AAM+8AIBOvADgM70AwJy8AIB7PAAAqrsA4As9AKAIvQCAhz0AgPO8AIDAPACg2L0AALG8AKDWvQCAezwAwM+8AAB+PAAA/rsAgLY9APCRPQDA+7wAgOK8AMB8vQCAcrwAAF29AMCfPADA77wAgJq8AIA/vABA6L0AANY7AMDqvABAYj0AwPc8ACCSvQDgjT0AAPi6AECsvABA2rwAgP28AMC2PAAA2jwAgFe8ACAXvQBAx7wAgHi9ALDXvQDQqz0AQD09AADhOwCgJz0AgMu8AGACPQDAQD0AoBy9AIA9vACgJT0AwI48AECMvAAwlb0AgB49AABVvAAggb0AwI08AMDUPAAASLsAABW9AAB0PABgDj0AoBo9ADCrPQCAljwAQJS8AABsvQAADrsAAKQ8AIDFPACATT0AYKI9AADdPABAlTwAADQ9ACBEvQDQmD0AgBm9AMCYvADgAr0A4GO9AEDBvADgIr0AcMg9AECqPADgHD0AgHC8AMBhPQAAMjwAIJ09AADoPADAV70AANo8AABHPABA7rwAgCa8AACovAAAIbwAgJ68AECOvQBgEL0AgC08AFDpPQAAATwAsIS9AABnPAAAdzwAAFi7AECzvAAAILkA4JC9AADqOwBgEz0AwOG8AADwugAAmLwAYEm9AAD7OwAgRD0AgBq8AKBePQCAFLwAcP89AACwOwAAOT0AAAM9AAC2vQBAqTwA4FC9ANCGPQBwlT0AwEM9AFCIPQCA27wAAJ67AIAUPQAAlzwAwK28AAA/vABAHr0AALC7AIBDPAAAzLoA4BG9AIA6PQBgAr0AADm8AICmPACA/LwA+AE+AEA/vQDgTr0AAPa7AECovADwjr0AQIQ8AECqvAAAoLwAAHI8ACBjvQAAmjsAQIO8AADYuwAgUL0AYHg9AEAvPQCgOT0AAKs7AIA2PAAAKDoAwJI8AACzuwAA4bsAgHQ9AIBUvADA0jw=","chunkHash":"b3b7fea047f9827573c17f120f49d646e4fa802acd0774660692bfae41cbba41"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n                # Standard case: add 1 because class IDs start from 0\n                args.output_classes = max_class + 1\n                print(f\"Automatically determined number of output classes: {args.output_classes}\")\n        \n        # Load model\n        print(f\"Loading model from checkpoint: {args.checkpoint}\")\n        \n        # Create a base model first to extract features\n        base_model = Vgg3D(\n            input_size=tuple(args.target_size),\n            output_classes=args.output_classes,\n            input_fmaps=1  # Single channel input\n        )\n        \n        # Load only the feature extractor weights\n        try:\n            print(\"Loading checkpoint (features only)...\")\n            checkpoint = torch.load(args.checkpoint, map_location='cpu')\n            \n            # Extract the state dict\n            if isinstance(checkpoint, dict) and 'model_state_dict' in checkpoint:\n                state_dict = checkpoint['model_state_dict']\n            elif isinstance(checkpoint, dict):\n                state_dict = checkpoint\n            else:\n                state_dict = checkpoint\n            \n            # Filter to include only feature layers\n            #...\n```","range":{"startLineNumber":1331,"startColumn":0,"endLineNumber":1359,"endColumn":0},"embedding":"AABpvAAA0TsAgDQ9AEgFvgBgkL0AAG29AECSvQBAlDwA4GS9AOBbPQBAKz0AAFW8AACPvQCAZDwAQMI8AMA9PQCgNr0A8Kg9AIAPvQBgaT0AwPc8AICvvAAgOz0AAIS8AIANvACA+rwAQJs8AOAGPQCgDD0AACi8AIDiPABAgbwA4Fq9ALCGvQCgzL0AIEm9AADpOwCASDwAQMS8AMCkPACgLT0AYLm9AMDBvABgBD0AAAI7AADUvABASz0AAAI8AACJOwBA/jwA4FC9AABPPADAGL0AIEs9AADVuwDgDj0AgK68AMDyvAAAYDkAgH88AAA+PADQgb0A4E09AIDfPADAtrwAgAA9AHCUvQAAKz0AoAI9AIAKvQDATL0AwEm9AIAlvADgGb0A4BY9AIBRPACAFzwAQLE9AIDNvAAArLsAAOA6AAA0uwAgBD0AoFw9AEC1vABwAL4A0Ky9AKBgvQCwt70A0N+9AADguQCAG7wA0Iq9AODDPQAgPD0AgIU8AGA0PQBwkL0AIDQ9AAA1PADgSj0AYEM9AIB4vAAARD0AIIs9AOAzvQCAFzwAgEM9AADAuQDgTj0AYHC9AGBCvQCAADwA4Ae9AABGvACAUb0AAJM8AECoPADA4rwAEIO9AABEvADAwDwAgMo8AABSvQAACjwAYEk9AKAUPQDAAL0AgNq8AKAyPQCARbwAAAY8AAAwPQAAHDsAAJe8AKCevQAAZb0A4Ig9ADCqvQAQ0z0AQLQ8AOAVvQAAlbwAYAs9AACOvADAQT0AgKi9AABxPQDgD70AYBU9AICdvABwyD0AALm7AAAfvQAAKDwAAHg7AIDkvAAwkT0AYB09AKBcvQAArDsAAOy7AADhOwAAW7wAQBi9AIB9PQBgOL0AgDE8AGCLvQCgVr0AgH09AAC/uwCgCz0A4Du9AJCMPQAA8LwAoHS9AIBQvACguL0AoDy9AIACvQCAMr0AoB69AMD5PADQkL0AUII9AIAfPACAYr0AwLY8AACzPAAgOT0AAC47AIApvAAAwzwAYBY9AAA1PADASj0AkJ29AGBbPQBA5jwAAIi9AOBFPQCA4rwAIFu9AOABPQBQzr0AwKQ8AMBFPQBAiLwAgJ48AAD9uwDgEz0AwMU8AECCvABAP70AQAG9AIAwvACARD0AwEI9AID8PAAAQjsAAPu7AAAKOwAAILoAgAM8AABlvQCA1DwAgNK8AIAdPADA9jwAANy8ACBuvQCACLwAYBq9AAAFPAAAwLkAAGQ7AABkOwDAIz0AgOA8AAArvQCA+DwAAJe8AGA3vQCA1DwAwNk8AMCHvADAl70AAMS6AEAGPQCAeDwAAFs8AMCVvADAlr0AgOm8AAB0vAAAR7wAgDm8AAA6vQCAdbwAABY8AIAFvQCAeb0AALS8AIC7PACAMDwAAHI7AIBEPAAAxrwAgPK8AGBBPQAA2bsAAHw7AABUOwAA9bsAAGc8AHCLPQAgUD0AIDs9AACivABAI70AAJg7AKB+PQBQtj0AAKc7AADYuwAgLL0A4Cc9AEAgvQAA6jsAYDo9AIDFPABAUj0AADy9AIBVPQAgGD0A4Cm9AKBQPQBghj0AIDK9AOAfPQCgEz0AwIs8AKDQPQCgqL0A4IU9AAACPAAArTsAIE89AAAdvQAASDoAwLK8ABCgPQAACLwAQKU8ACBmvQCAa7wAwDk9AEBQPQAAQbwAwPK8AGB6vQAAZLsAMKw9AEAUPQCAGj0AAMy7AMD3PAAAOzwAACe9AIBZPACANL0AAK+8AMDZvACA8zwAwLc8AHCOvQBAfD0AgHQ8ABCAPQAwHL4AYAe9AADQvQDAkLwAAMA4AEBwPQAA0TsAADI9AAAnPQCAG70AgBM9AKAMvQAAWbwA0IW9AADluwBwgL0AwOG8AIBzvAAg0r0AwKy8AIAkvQAwoD0AgGM9AOApvQCAYDwAgAQ8AEDevAAASTwAAP+8AABzPQDA7zwAgKg8AKA8vQDAlrwAoK69AHDcvQCgbz0AII09AIBNPACA2jwAgJS8AECXPADAZj0AQM68AABuuwAA1jsAgGc9AOAWvQCgsL0AwNU8AACcugCwlb0AAJ+7ACA5PQAAmDwAwFG9ACARPQAAfDwAoB49ADCTPQAAXTwAABC7AOA6vQAAL7wAAAM9AEAGPQBAQz0AoDQ9AED/PACA0TwAgDU9AFCyvQCgKD0AgH29AGAvvQBgnL0AAIa7AIDbvACgNL0AYGU9AOAFPQCgCT0AAJ47AIAkPQDA5bwA4GQ9ACA3PQCgFr0AgKg8AAAOPACAL70AwKC8AIBnPAAA6zsAYBk9ABC7vQAAxbsA4AI9AMCnPQAARDwA4HS9AABGPABAjbwAAE08AICzvAAAg7wAQM+9AAA2vQCANbwAgOC8AABXvACgRL0AoH29AAD1PADgIT0AAHi9ADC8PQBAEj0AwOg9AAAcuwCANz0AgAA8AJDJvQCgFj0AQBa9AKAUPQDAhD0AQPY8AMA9PQAAzzsAABG8AABGvACAkDwAAHU8AMDWvABgPb0AwOO8AAA1PQAA+DsAAJC6AAAlPACAZ7wAoCi9AMCMPAAAJrwA+Ak+AMC7vADQgL0AQN88AADcuwDgWr0AAGA6AMCqPADAn7wAIEg9AGCNvQAAKrwAAFC7AEC0vABAcL0AwIw9AEBhPQBART0AADQ8AIAsPQDgU70AQP48AEDZPAAAgDkAwEw9AEA5vQBAvDw=","chunkHash":"735ebe39966b0956a8717f0c3dfa135c131f580eff3cd9a6aec97ca37f65f450"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n            feature_state_dict = {k: v for k, v in state_dict.items() if k.startswith('features')}\n            base_model.load_state_dict(feature_state_dict, strict=False)\n            print(f\"Successfully loaded feature extractor weights from checkpoint\")\n        except Exception as e:\n            print(f\"Error loading feature extractor: {e}\")\n            print(\"Proceeding with randomly initialized feature extractor\")\n            \n        # Get an actual sample from the dataset to determine correct dimensions \n        print(\"Getting a sample from the dataset to determine actual dimensions...\")\n        try:\n            # Get a sample from the training dataloader\n            sample_batch = next(iter(train_loader))\n            sample_volume = sample_batch['volume']\n            \n            # Convert to tensor if it's a list\n            if isinstance(sample_volume, list):\n                sample_volume = torch.stack(sample_volume)\n                \n            # Extract a single sample if it's a batch\n            if len(sample_volume.shape) > 4:\n                sample_volume = sample_volume[0:1]\n                \n            print(f\"Sample volume shape from dataset: {sample_volume.shape}\")\n            #...\n```","range":{"startLineNumber":1359,"startColumn":0,"endLineNumber":1382,"endColumn":0},"embedding":"AAC8ugBgCL0AgGw8AFCdvQDgRr0AkMu9AOBKvQBAjzwAYEm9AKCfPQBA9TwAAOe7ACAlvQCAErwA4As9AAAMPQAgVL0AsJg9AEDtvADgDj0AABg9AED4vAAAarsAoCW9AIAYvAAA5bwAgFM8AAAAOQAgHz0AoB+9AAA4vACAq7wA4Hi9AEBivQAAt70AAH68ACAOPQAAGjwAoHa9AMCUvABAKT0AKAG+ANCBvQAAjT0AwOw8AAA9vQCA2jwAAGa7AIBtPAAAyjwAoB69AMD3PABAU70AAFk9AMDuPADABT0AAAK8AMBCvQAAQLwAAP+7AADgPADAbr0AAJ08AIAmPQBgQr0AAGw8AAAMvQBgYj0AwJY8AEDXvADAqLwAACC5AIAIPADAKr0A4CQ9AECLvADAmbwAYME9ADDcvQBgYL0AAM68AMC9vAAAqTwAAGo9AGAnvQDYA74AELW9AEASvQBA3DwAgJ69AABXPACAB70AgL68AIBxPQBgXj0AADQ8AGB7PQDAub0AIDw9AICqPADAQz0A0JU9AAB6vABgXz0AoIQ9ADCDvQAAYD0AADE8AMCSPACgQz0AIHK9AOBxvQCAkTwAAK47AAAUOwAA07wAACs9AAC/uwCAT70AwEO9AMAqvQBwmT0AwJW8AEBnvQDAkDwAQLk8AEABPQDASb0AYEm9ADCoPQAA/bsAgC+8AKA7PQDgNr0AAGK7ACCvvQCAT70AgEs9AIAwvQBw4T0AACi7AIChvACA/bwAQJQ8AACyvACAgTwAIKW9ALC1PQAAJ70AoAk9AIDYvAAwzz0AAA67AMARvQAAITwAYAe9AACyvABwmj0AgIE8AID8vACA6rwAgPI8AABfPACAuDwAICW9AADpOwBAtbwAQJ+8AKCAvQCg270A8JU9AAB+OwAAyjwAQM28AABsPQDgRL0AAKu7AACIOwCA8rwAoDq9ACBJvQBga70AAJC6ANCKPQDAkr0AwCo9AIAuPADgGr0AoDE9AABpvACABzwAgMA8AKAFvQCAlDwAABY7AIDRvACgaT0AgHS8APCfPQBAhj0AwIa9AIDkPAAAM70AgES9AIAtvACwy70AAAo9AADPOwCAMr0AAA+8AAAwuwBA2zwAABQ9AACpvABgSb0AIBc9AAC1uwCA2TwAQNM8AADbPAAAybsAAHM8AADjOwBAwjwAgJw8AMAtvQAAqjwAoEm9AMDWPAAAdjwAAEq9AABXvQAAsbsAANA6AIAYPACA1LwAgDQ8AADiuwAAMjsAAEo9AOBmvQBgSD0AAIK8AMB/vQAAQTwAwAo9AAAuPABAf70AADI8AGAZPQCArjwAgAg8AOAavQCgnr0AAEi6AEDEPABArbwAACA5ACAavQCAMb0AgP08AACSvAAgU70AgFU8ACADPQAAaDsAwNE8AACePABAQ70AQFa9AECwPAAA4DsAYBW9AKALPQDgA70AAIa7AAD5PABACT0AIBc9AEAbPQBAvLwAAOg6AIBMPAAAUT0AAKy7AACKvABgHL0AAP48AMA8vQAAjjsAYDM9AADxuwDQiD0AAHS7AKAlPQAAnjsAIAu9AEAiPQAAOT0AgKm9AADQOQBgDD0AQI08AHCkPQAwpr0AYJU9AAAWuwAAiTsAgDo9AGAnvQCA9zwAAKA7APCqPQCAebwAABY7ABCHvQAAWTwAAFo7AAB4OwCAIrwAAOe8AKCdvQCAIzwAICI9ACArPQAAhTwAgGK8AMAVPQAAH7wAYJW9AABAOQDgcL0AMIS9ACB/vQDA9TwAgF+8AEDYvADgGj0A4Cc9ACBvPQAQM74AABm9AACOvQAAR7wAgAo8AHC7PQAAZrsAAIE8AMCWPABAFr0AQFk9AECRvABAsbwAwOe8AADWvADgeL0AAKG7AGBMvQCAvr0AAFC9AEDpvADwoT0A4Jo9AOAfvQDAy7wAACg8AEABvQBA1rwAgOM8ACBPPQAATT0AgLO8AEApvQCAQrwAQDq9AGBzvQCAvT0AAIQ9AAAeOwBgez0AgAK9AAAAOgBA7TwAABu9AMCYPACAmTwA4FA9AIA4vADAB70AQKU8AADUOgCgsL0AwCA9AOBbPQAgMD0AgK68AEDHPADA/DwAoCU9AOBVPQCABLwAgHW8AOBwvQAABrwAgC09AMCSPQAApT0A8IY9AEAoPQAARrwAAJk9ALCOvQAAMj0AEAS+AMDYvADgj70AAGa7AABmvAAAGLoAAJo9AEC3PAAAOjwAgMO8AABpPQBgJL0AwHY9AIAoPQAA97wAgNg8AABZPABAx7wAYEy9AADmOwAA+bsAgNM8AACwvQAAm7sAgEe8AIBhPQCAjbwA8Ja9AIBtvAAAEDsAgFU8ACBXvQAANbwA0JC9AEAwvQAAh7sAIBG9AABwuwBA1r0AwDO9AACmPAAAHj0AQLS8AABsPQCAGTwAAPc9AIBQvAAAPD0AgJM8AOAdvQAAoDwAALi8AIC1PADgDj0AAP08AMDTPAAgCz0AAD+8AEATvQDgDz0AgOA8AIBCvACgc70AgLi8AKBLPQAAsbsAAGq7AGAIPQAAszsAkLa9AMCxPADgpz0A+BY+AAAWvADgCb0AwD09AAD4OgBAML0AgA+8AADAuABAhrwA4Cs9AECCvACAmbwAwM48AADEPACgBb0A4EY9AOB4PQAgQD0A4AY9AIAnvADgj70AAMC8AEABPQAA4DkAAB88AACLvACAbT0=","chunkHash":"017ed96c6fc0ed94ef72795f908d958bc627735b52c571bd7f4d9591ece812a4"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n            # Run it through the feature extractor to get the actual output size\n            with torch.no_grad():\n                features = base_model.features(sample_volume)\n                feature_size = features.view(features.size(0), -1).size(1)\n            \n            print(f\"Actual feature output size with real sample: {feature_size}\")\n        except Exception as e:\n            print(f\"Error getting real sample dimensions: {e}\")\n            # Fall back to creating a synthetic sample\n            print(\"Falling back to synthetic sample...\")\n            # Apply the exact same transformations that would happen in the dataloader\n            synthetic_sample = torch.zeros(1, 1, *args.target_size)\n            if args.margin > 0:\n                margin = args.margin\n                print(f\"Applying margin of {margin} to synthetic sample\")\n                synthetic_sample = synthetic_sample[:, :, margin:-margin, margin:-margin, margin:-margin]\n            print(f\"Synthetic sample shape: {synthetic_sample.shape}\")\n            \n            with torch.no_grad():\n                features = base_model.features(synthetic_sample)\n                #...\n```","range":{"startLineNumber":1383,"startColumn":0,"endLineNumber":1403,"endColumn":0},"embedding":"AAB2PAAA4LwA4Ew9AECSvQDAU70AEK29ADCCvQAAcLsA4F29AEADPQAAQLkAAPw6AGAVvQCAY7wAACS7AID+PACgX70AYCc9AMDivAAAMzwA4BU9AMCWvADAGz0AgGG8AMDIPACgXL0AAMs8ACAkPQDwxD0AgAc8AACvOwAA+LwAYDy9ABC+vQAAur0AgP68AMBIPQCARrwAgCY8AAD/uwBQsz0AsK+9AACWvQDwhz0AgKQ9AADpuwCAWT0AwMW8AADwOgAAJT0AACG9AKBMPQCAsrwAAGg9AOBHPQBgIz0AADi8AKAIvQBAgjwAwIa8AADAuQAAlr0AgA89AACIPAAAH70AQB89AEAkvQCgfj0AALQ8AICrvABAnzwAQPC8ACA4vQCAU7wAAHM9AIApPAAAxDoAMLo9AJDKvQAA8LsAwKg8AMDhvAAAILkA4Cs9AOAevQCgzb0AsKa9AMA4vQAAZrwAgOy8AABiOwAAKL0AgJC8AAAmPQDAKD0AABQ9AID9PADgXL0AwIQ9AECrPADgIT0AwG49AABhPAAAJTwAgFQ9AOBhvQDgTT0AgJy8AICpPADAWj0A4Du9AKB5vQDAaz0AgES8AICpvABgTb0AgH48AEDTPADAg70AgFO8AOCWvQDgaT0AwFC9AKB2vQBAMT0AwCA9AABSPQDA87wA4EG9ALCDPQAAi7sAIAI9AMBRPQAAcDoAAH67AHC4vQBA/7wAwNc8AMCovABA3z0A4E29AABvPAAA8DkAgBc8AMBLvQCAVj0AgJG9AMBqPQBgh70AIHU9AABYOwDgMz0AgHi9ACA4vQAARjwAgPO8AIAoPACgVj0AAAo8AKCBvQAAqLsA4FE9ACApvQBgaz0A4CW9AACsOwCAUr0AADg7AAC6vQCg970AIEY9AACYOgDgUT0AYHO9AMCMPQBAorwAwDO9AEA4vQDA4bwAgP68ANCGvQAAKDwAAMs8AMDZPACAYrwAgEc8AAAAAADA6rwAgI09AICyvAAAPLwAACg9AIBWPACADT0AwIq8AEDOPACAhT0AgIK8AKBDPQAAWz0AAMG8AAA/PQBAszwAQK68AACkOgDAqb0AYBI9AAD6uwDAGL0AADM9AEDRvAAARjwA4HU9ANCDvQAgar0AAK67AAD/vAAgZD0AAFk8AGARPQDAtTwAAKQ8AMC1PAAAKjwAgGG8AMDGvADA4jwAwB69AEAuvQCAADwAgE+9AAClvABgBr0AgJy8AAAQOgAAzLoAgA29AIBpvAAAsjsAAH88AMDBvAAAIj0AQNA8AJCXvQDA6LwAABQ8AADtuwAQrL0AgHQ9AGAhPQAAtzsAALq7ACAcvQAwhb0AgGG8AECUPADgh70AABk8AAAiuwDAYb0A4Hk9AACavABQub0AAHQ8AOBbPQDA2bwAgJY8AED6PAAAErsAAA48AOB+PQAA9zsAoE69AAB6uwCAirwAAJg7AAA+PACAVz0AIEs9AGANvQCAwDwAQJ48AECuvACgWj0AgHM8AMAKvQAA5jsAADg6ACAlvQDAibwA4Dk9AIBtvABAxzwAoHG9AIAXPADA8TwAgA48AADKPABAST0A4J+9AAAUOwAALrwAQDA9AGANPQBwjr0A4Fc9AAC8OwAwhT0AwFo9AEDtvABAwzwAAOc7AJCQPQDgXr0AIFE9ACBbvQCAMz0AAOm7AOACPQAAyLsAAPW7AJCovQAAqjsAAGo7AOCvPQCAwjwAgAo9AAD6uwAAYLoAwA29AEDgPACA+rwAYCK9AIAFvACACT0AYCQ9AKACvQAA/TwAAE47AEC9PAA4Dr4AgCE8ACCWvQAAIbwAgB48AIBdPQCgHD0AQD89AACnPQCAsLwAAEi6AADtuwAA8rsAIB29AAAMuwCAgr0AAFC7ACBovQDQvL0AQGK9AECevQBAbz0AQJ09AOBbvQAAKDoAgPA8AEAUvQAAuzwAwAs9AIBYPACAFT0AIBE9ACBtvQCAGb0A4J+9AADTvQAwtD0AYBs9AABFvAAA1zwAIAC9AMDrPAAAhrsAwN+8AACWPAAAPLsAYCs9AMDCPAAgXr0AgPE8AKABvQBAcL0AgHw8AED8PABAjDwAAIi7ALDPPQCAazwAYBY9AHCDPQAAfDwAAAC7AEA/vQDALr0AAKm7AOCZPQCQhz0AoDw9AOAiPQAAZzwA4D89ADDDvQCA/jwAuAG+AADMOgCAD70AwAE9AIBWPACASrwA4Lk9AIAVvACAq7wAQLO8AABIPQBgb70AAD89AAD3OwCA1zwAAFy7AIDGPACgR70AgNC8AACGuwDgK70AwOC8ALCJvQAAyrsAAGi8AIBGPQDApLwAAAG8AABguQCAArwAwMK8AKCUvQDA+TwAIAy9ACAIvQCAJTwAgCy9AABsPABAkb0AgIW9AABwPACgFD0AQES9AAAJPQBAhjwAEAU+AACMPACAQz0AwJ28AACYvQAAfjwAYBC9AACgPAAgcT0AANi6AICTPAAAgTwAgES8AAAFvQDwij0AQNg8AACVuwDgYL0AAGY7AADoOgAAhTsAQKG8AIAsPQAAdDwA4MO9ADCKPQDAgjwAUCE+AHCHvQCgX70AAJs7AAAIPAAAjr0AwDG9AAA8PACAi7wAYFA9AAB2uwAA4TsAoAQ9AIBZvAAAJrsAIM89AEBsPQDAND0AwN08AAAlPAAQm70A4A+9AKAMPQAAPr0AgFs9AOBwvQDgND0=","chunkHash":"00e9be21a01f3a311456c60e7f7ad974b1840cb262a76b05d9126e1d1d2508d1"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n                feature_size = features.view(features.size(0), -1).size(1)\n            \n            print(f\"Feature size with synthetic sample: {feature_size}\")\n        \n        # Create the adapter model with the correct feature output size -> classifier input size\n        print(\"Creating adapter model with appropriate classifier size...\")\n        \n        # Create a custom Vgg3DAdapter with the correct feature size\n        class CustomVgg3DAdapter(nn.Module):\n            #...\n        # Create the adapter with the exact feature size needed\n        model = CustomVgg3DAdapter(\n            base_features=base_model.features,\n            feature_size=feature_size,\n            num_classes=args.output_classes,\n            classifier_size=args.classifier_size\n        )\n        print(f\"Successfully created adapter model with correct dimensions: {feature_size} -> {args.classifier_size} -> {args.output_classes}\")\n        \n        if args.freeze_features:\n            # Freeze feature extractor layers\n            print(\"FINETUNING MODE: Freezing feature extractor layers\")\n            for param in model.features.parameters():\n                param.requires_grad = False\n            #...\n```","range":{"startLineNumber":1403,"startColumn":0,"endLineNumber":1451,"endColumn":0},"embedding":"AIBuPACAsbwAgIA9AIC9vQDwhb0AMNe9AMAuvQCAdrwAkI69AGBXPQAAozwAgPC8AMBlvQAAlTsAAGQ7AAAxvABgHr0AQKo9AACZuwCQnT0AQMo8AMDEvABgDD0AgBy8AAAUPADAO70AgCA9ACAFPQAA8j0AANA5AAD1OwAAxrwAEIy9AOBcvQDQxL0AIDu9AACfPACAX7wAQMu8AAD7OwDAXD0A8MO9ABCOvQCAJj0AwD49AABguQAgij0AgPi8AACkuwAAEj0AABO9AECWPQCgNr0AMJE9AACfPADARz0AAPa7AABUvQAABzwAgEa8AAC0ugDQrb0AwGY9AIBxPACA97wAAF88AAB3vQAALD0AAH08AAAwOwDAh7wAoH29AIB3vAAACrwAABo9AAAGOwCAMLwAIAk+ANCEvQBAF70AAGI7AACcuwAAaLoAIGQ9AKB9vQCgyb0AoIe9AMACvQDgXL0AEIu9AAACuwCACbwAoI29AHCBPQAATjwAgMY8AGA+PQAgf70AsIo9AAC1OwDQyD0AICY9AAA8vAAgJT0AQC49AGAOvQAAtTsAAPu7AIBvPABwjD0AoA69AADKuwDAqzwAgNm8AABzvADA/rwAQKQ8AMA+PQCA/7wAgIi8AAAIugBA/DwAgMA8ACCgvQAAjjwAgN48AGAvPQDAmLwAoDq9AEDOPAAAzbwAYDM9AAAzPQAAiDwAABq8ANC5vQBgIL0A8Ig9AIBivACwtz0AAI87AABIugAARjwAAKo7AMCBvAAAkz0A4Ga9AEBDPQCgQb0AIGw9AKA2vQAAij0AAK87AOBTvQBAtbwAQBs9AAD9uwDgbz0AgFc9APCHvQAAhrsAgAU8AEDRvAAAfDwAAOQ6AADxOwBAv7wAAJO7ANDKvQCwqr0AsIY9AADguwBAGT0AALG8AECnPQCAdLwAwJE8AGA8vQDA07wAgJS8AEA6vQAAmbwAwIm8AACIPADgY70AAA88AOAOvQDASb0AYK49AACGvAAAUTwAQKQ8AACRvADgAT0AQI88AACjuwDAUT0AgMi9AMD/PADQtj0AcI+9AMD+PAAA4LsAAGA6AABpvABw570AAJY8AABmPACgIL0AQN48AABiOwCAeTwAwMA8AED8vACgLL0AALG7AADRvAAAbDsAgFU9AAAeOwAA2bsAgOK8AICfPAAA4LsAgFG8ACAnvQAAFLsAgHK8AIAivQCAdDwAADu9AKBVvQAAxLsAAIA4AOAAvQDAM70AAPe7AMARvQAgCD0AYCk9AADvvADAGD0AAJi8AADHvAAAIjsAgAk9AAC4OwBAnL0A4Gw9AGA+PQAA57wAAPM8AMBBvQCwq70AADg8AABmOwCAI7wAAEy8AIAyvAAQh70AgHM8AAAgvACwl70AgHQ8ACAqPQAAQjsAAMC5AIBtPQDAjrwAAAw7ALCZPQDA1TwAQNy8AAD4ugAACrsAwBc9AMCPPACgzz0AYJk9AGALvQBgD70AAMY7AADiPADghT0AALK7AECAvAAALL0AQDw9AABEvAAAHrsAoCE9AEC9PABAlDwAAL+8AIAqPADAxzwAwMe8AGASPQAAEz0A8Ka9AOAtPQAAODwAwAw9APCsPQBgsL0AYIs9AMCBvACAtDwAQJU9AACZvAAAp7wAgGq8ANCjPQDAzbwAoH09AOBOvQBA2DwAwIK8AMCpPACAC7wAoIS9AJCCvQCApLwAQFA9AACAPQAA8zsAABQ7AABTPACAJDwAQJe8AICoPABAUL0A4CW9AIBIvQAAwLsAYGs9AIAgvQAwhz0AwI48AMB2PQC4Br4AAKG8ADDSvQAAoDwAgBu8ACA8PQAAijsAQHs9AEAmPQBAyrwAACC5AACYPAAAxTsAAMi7AADYvABgjL0AACY9AACwvADw070A4CC9AAAiPAAgrT0AQN08AIBFvQAAajwAAHK7AID9vAAAyLoAACa8AMCuPAAA4LsAQBo9AMBHvQBAgLwAoEK9ALCyvQBgQT0AAFQ9AADoOwCAiLwAgBm9AKAtPQCgZz0AADm9AAAwPQCACzwAANc8AAAIugAw4b0AQPY8AACEOgCgSb0AgMo8AOAtPQAAHD0AwLq8AGCvPQCAlTwAQJk8AHCPPQCAfTwAwIa8AJCEvQBA3bwAIEs9AMBWPQDghD0AYLg9AABiPQBAmjwAwII8ANgdvgBgOD0AsI69AAAyvAAgC70AAFs8AAD7vAAAn7wAQEg9AAANvAAAoLoAgOI8AIA+PAAA7rwAYFM9AADBOwBAzbwAQIO8AED3PABAAL0AQJa8AADQOwCgTb0AAGS7ADCIvQBAz7wAAAI8AAA8PQAAwrsA4Hm9AICRPAAARjsAIAU9AABougAAKDoAwHW9AADFvABAE70AICS9AGAEvQBgUr0AwPi8AEArPQDgiD0A4Cq9ANCRPQBALz0AkAw+AABwugAgcT0AAI28ADDivQCAWzwAYD29ACABPQDAQz0AwC49AEAGPQCAdLwA4A+9AADQugCgIT0AAIM8AACHvACAWb0AAHi6AMDIPACAGb0AQJ+8ACA0PQAAYLoAAAG9AADvuwAAarwAEA4+AMBEvQCAd70AgBu8AICIPACAIb0AAJe7AMCMPADAhLwAANg8AEAJvQDA8bwAgDo8AMDmvACAGrwAELs9AABgPQBgIj0AgCg8AACPPABgV70AwL08AMDzvAAAurwA4Gg9ACA0vQDgRj0=","chunkHash":"8976289461a96f1b9af4cfb53215a2a9eca42ad74843adcebb547faa8a82385d"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n            print(\"Only training classifier layers (significantly reduces trainable parameters)\")\n        else:\n            print(\"FULL TRAINING MODE: Training all model parameters (feature extractor and classifier)\")\n            print(\"Warning: This requires significantly more training data and time compared to finetuning\")\n        \n        if args.freeze_classifier_layers > 0:\n            # Freeze the specified number of classifier layers\n            print(f\"Freezing {args.freeze_classifier_layers} classifier layers\")\n            for i, layer in enumerate(model.classifier.children()):\n                if i < args.freeze_classifier_layers:\n                    for param in layer.parameters():\n                        param.requires_grad = False\n        \n        # Set up optimizer\n        if args.optimizer == 'sgd':\n            optimizer = optim.SGD(\n                [p for p in model.parameters() if p.requires_grad], \n                lr=args.lr,\n                momentum=args.momentum,\n                weight_decay=args.weight_decay\n            )\n        else:  # adam\n            optimizer = optim.Adam(\n                [p for p in model.parameters() if p.requires_grad], \n                lr=args.lr,\n                weight_decay=args.weight_decay\n            )\n        #...\n```","range":{"startLineNumber":1451,"startColumn":0,"endLineNumber":1478,"endColumn":0},"embedding":"AACrvACAHz0AIAw9ACDIvQCAX70AIAS9AIB+vADAJj0AQHa9AGC+PQDAljwAgCW8AEBxvQAAGDwAABE9AAAYugCAQr0AAHo9AAD+uwBgaj0AYEg9AADEOgCAiTwAAMc7AAC0ugAAC7wAgJY9AADcPABQyT0AwNq8AABAOgAAvbwAsJW9AGCZvQBwqb0AIGm9ACA5PQAAYrsA4Be9AECZvAAAGDwAoBG+AIA5vQCgIT0AQIE9AACjuwDAaD0AAEQ7AAADvAAAiDsAAHm9AMDvPABAZb0AoDo9AECBvADA5jwAIF69AIBevQDArDwAAJQ8AID5PABAyLwAgEc9AIC2PACAQzwAgHE8AGCUvQCgKT0AAFO8AKAHPQBAcr0AkLa9AAAZPACAgrwA4Dg9AMD2PAAArTsAwNM9AABTPAAAhLsAQIo8AIBpvADA+DwAAJw9AIBWvQBA/r0AMMu9AAAQPADAKr0AAGK9AECAvABAsLwAYIC9AHCOPQBAHz0AAE48AMBfPQCALbwAoEw9AACguQDQiz0AAFM9AACIOwAAMz0AgDs8AEAovQAAOLwAQHE9AIDaPABgPT0AACy9AECcPADAi7wAwMe8AKAVvQDgMr0AwIS8AABNPQBAYL0AoEC9AIBcvACAN7wA4Ek9ACApvQCgDj0AgLU8AEBEPQAAlbwAQPm8AEAMPQCA4LwAAEE9AAB7PQCAtLwAgJK8ACBbvQAAW70AIG09AGCCvQCwxD0AQII8AACeuwCAirwAgMw8ACAyvQDwmT0AAPm8AOCuPQAgUb0AgHI8AACWuwAAoD0AAJu7AEAcvQBAhTwAwLc8AABgOwDAXz0AgKs9AOBBvQAAvTsAgJQ8AADouwCAtbwAAJ08AACYugAAmzsAQLO8ALCLvQCQhL0AwHQ9AAAGvAAAIDkAQNG8AABhPQBAobwAADO8AMA5vQCgLL0AQMG8AMAvvQBA7bwAwE+9AKAqPQCgmL0AgA49AACEPADALb0AQNM8ANCCPQDAFz0AQPm8AIAYPQDAFD0AgA09AEDXPACgDj0AUIi9AADMOgBgfz0AgNO8ACAFPQBAwjwAQFe9AADAOABAsb0AAIw8AACIOwAA/rsAAP88AMCMvACA6TwAALI7AMBJvQBAHr0AAK68AIAxvAAAlbsA0IE9AOAhPQAAW7wAwG69AIAbvADAaD0AAIS6ACAPvQAAuTwAwN28AAAdPAAgGz0AQJ48AGBqvQCAQLwAAA88AIBNPQCAPrwAAFo7AGAtvQAAbDwAAOo7AKBhvQDQxz0AoHS9ANCTvQAANDwAwMg8AAAYugBw170AgBA8AGAqPQCAAb0AYBs9ACBjvQDAzr0AgOC8AAAkOwAAAzwA4By9AOABvQDAqbwAAPo7AMCbvACgE70AYBu9AAAQugCATjwA4Ci9AADgPAAAIDwAgC+9AFCJPQBAjjwAwKe8AICKPABAi7wAwOQ8AHDXPQCAdj0AAPs7AADYvAAQor0AACw9AFD0PQBgLD0AoAs9AAC2vABwhL0AoAA9AAAOvABgJz0AYDY9AAAAOgDAbz0AgBC8AIA3PAAA9jwAgBm9AIBdPAAAwLoAAEu9AEC+PAAAaT0AAPO7AICPPQAge70AYEM9AACMuwAAUDoAYFA9AAATvADAB70AIAU9AKAQPQAAfTwAYKM9AAATvQDgIL0AwF09AMCTPQAACbwAQNC8ACBHvQCAXr0AYJI9AIAOPABgOD0AAMM7AIBKPQDAzjwAAIQ6AAAyPADAFb0AYJm9AIAYvQAAXDwAwBk9ADCYvQDAYT0AAJu7AECCPABgp70AAIy7ADDhvQCgIT0AQIe8AIAAPQCAqLwAwFY9ANCRPQAAgzwAAFY8AIB2vACAt7wAYBO9AADoOgAAsLkAAO08AADAOACA0L0AAGK7AIAdPABgPT0AwD89AMCJvQDAhjwAQMs8AAD5PAAAybsAQI28AECBPQAAQjwAAF48ACB2vQDAxLwAoB29AKBvvQCgEz0AsKM9AIAIPQAAr7sAgPK8AECnPABgbT0AAIS8AIAUvACAPT0AAGU8AIARvQDQ0L0AYAs9AIDfPADgMr0AAEw8ACA7PQBAQj0AoC69AEDcPAAQvT0A4Dc9AGBqPQCAXrwAABq7AECbvQDA6bwAAAI9AAAxPQBAbj0AIGA9AMDjPAAAYLoAgGg9AHCyvQDgVT0AYEm9AABAuwAQxr0AAOu7AECCvADA9rwAYDk9AACNPACARTwAAFM8AAAmPAAAjLwAgI09AEA+PQDgJL0AANi6AAA0vACAObwAAAC8AMALvQCAGbwAAKa7AAAxvQDgQb0AIAc9AMAWPQCA/7wAgF68AAD1PACAVrwAQOw8AEDcvAAAYTwA0LW9AAAXPAAAM7wAAM28AAA7vACA/LwAQAy9AACaPABAMD0AAC28ADDqPQAA5DoAmA4+AAAwugDAwT0AwLs8AHDbvQCAbjwAoEm9APCWPQBQgz0AII09AIAMPQBAubwAgAW9ACAOvQAACDwAgL68AACMvACgob0AgCe9AIAFvAAAZDwAAHG9AMAxPQBAlrwAwJW8AIC9vABgOb0AkBI+ACAhvQCAdr0AAMW8AACHuwAA+rsAABA7AAAAAADAmbwAAN48AGBUvQAAm70AADo7AEC5vACAj7wAwKU9AMAqPQBAnzwAAGi8AAAauwCAurwAQN+8AADBuwAAqDsAgGI9ANCKvQCAvzw=","chunkHash":"c6cbdb0684b71416c84bfb2181f8f5263ddaef6fc77d346a74282a4b62ea9ba0"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n        # Check if model has any parameters to train\n        trainable_params = sum(p.numel() for p in model.parameters() if p.requires_grad)\n        feature_params = sum(p.numel() for p in model.features.parameters() if p.requires_grad)\n        classifier_params = sum(p.numel() for p in model.classifier.parameters() if p.requires_grad)\n        \n        print(f\"Model has {trainable_params:,} trainable parameters\")\n        print(f\"  - Feature extractor: {feature_params:,} trainable parameters\")\n        print(f\"  - Classifier: {classifier_params:,} trainable parameters\")\n        \n        # Recommend classifier reduction if high parameter count\n        if classifier_params > 10000000 and not args.reduce_classifier:\n            print(\"\\nRECOMMENDATION: The classifier has a very high number of parameters.\")\n            print(\"To reduce overfitting and improve training, try running with --reduce_classifier\")\n            print(\"This will significantly reduce the number of trainable parameters.\")\n        \n        if trainable_params == 0:\n            #...\n```","range":{"startLineNumber":1479,"startColumn":0,"endLineNumber":1495,"endColumn":0},"embedding":"AIAsvQCAOj0AgPc8ADDTvQDAMr0A4DW9AMAfvQBA7zwAoDy9AOC3PQAAODoAoA29AOBJvQDA7jwAgEG8AMDPPABgM70AkJ89AACqOwBAhD0AgGk9AACTuwDAxTwAAJy6AMDAPAAAcLoAAKo8AABJPADgbz0A4AG9AAAaOwBA2bwAgKq9ANC2vQCAzb0AACG9AIAsPAAAaDsAgPa8AIAuvACA3zwAIK+9AIAPvQDQpD0AgOc8AGApvQCwjD0AAMw6AAASvQAAELoAUIO9AOAVPQAAfb0AAA49AECXvABA+zwA4B29AGBBvQAA0zsAAE68AIDJPACATL0AwC49AMB7PQAger0AAG+8AKAAvQAgCT0AAIM7AOBHvQBwkb0AEIy9AADmPACACLwAQB49AABYvAAAPDwAYGw9AEBHvQBAgrwAAIS7AIAJPACAszwAwDQ9AID9vACg8b0AEKa9AGAzvQDgRb0A0Ka9AADEuwCA1rwAoAm9ABDXPQAAhj0AgEA8AJCBPQAgFr0AwBE9AADkOgBAFD0AEME9AAAsPADAXz0A4Do9AIACvAAAgDoAoEI9AMCxPACwgD0AwAK9AACzOwAA+LoAwL28AGAmvQAgJb0AYAm9AMAIPQAAd70AoBu9AOAWvQAA0DsAAIE9AICFvQDArTwAAKo8AIAiPAAgIb0AwES9AGAOPQDAgbwAwBc9AEC+PAAAO7wAYDe9ANDJvQDgfr0AoAk9AGAhvQBgvT0AgFo8AAAFPQBwsb0AgFY8AAB1vACAHD0AAGe9AGCHPQDAprwAAJw8AABXvAAQuz0AAHq8AKBXvQCAfTwAAMA4AACduwCABD0AAC49AJClvQAApLwAAGy7AIA6vAAAQzwAwNO8AMCePACga70AgBq8AABcvQBAdb0AcJQ9AABFvAAgDz0AoE+9AFCWPQBAj7wAwAm9APCHvQCAXb0AoBy9AGB6vQAAJrsAgHS8AEBKPQBAYL0AACk9AKACPQCQib0AgPM8AMAOPQDAKj0AgHu8AABUPACA3DwAwPo8AADQOgDAIz0AoJO9AEDaPAAgFz0AoDq9ACAzPQAAn7sA4IC9AMDyvAC4Bb4AwMA8AIA4PADAlrwAwEo9AMCAvADAmjwAAHi6AECxvAAASL0AQII8AAC3uwCA1jwAIDA9AIC7PAAAq7wAgEe9AIB8PADAUD0AgHY8AMBGvQCgFT0AAG48AGBuPQAAFj0AAHa8AICgvQDAB70AwJy8AOBVPQAgD70AgPU8AAC1PAAAazwAgDU8AACHvADgjD0A4AC9ACASvQBAjjwAQNI8AIAYvABQjL0AAK48ADCKPQAA6jsAIEI9AMA1vQDApb0AwI+8AOAJvQAgar0AwBG9AICnvADAfb0AADw8ACA2vQAAOL0AgPW8AACWuwCA/jwAANg7AEC4PADAh7wAwH29ADCZPQAA9rsAQMs8AMCwPABAEb0AQIk8ACCvPQBAXj0AIHI9AIA8vQAAYb0AANc8ADC8PQCQiT0AAPU8AECLvAAAbLwAAEg8AED5vABAnzwAIDI9AIAlvABgAT0AAHS8AAAoPAAgBT0AwA29AAAyuwDABT0AQFi9AEAbPQAA3zwAABG8AACEPQAwsr0AoEw9AAAGPAAAArwAgMI8AIC/vADAyrwAwJU8AEBCPQAAqrsAAOY7ACBYvQBAKL0AwOI8ACBdPQCAA7wA4Cm9AMCOvQAgEr0AQKU9AEDMPAAgdT0AAGg6ACAzPQAAMLsAAGg7AECOPACAlbwAUIm9AIB7vAAAhjsAgAk9ADC2vQAAKD0AgB08ADCAPQAA670AgI68AEDsvQDAbT0AADu8AICKPQCAi7wAYJk9APCyPQAA1DsAoAw9AMASvQAAczwAkIa9AIBhPACACr0AgF48AABYuwCAhr0AQJO8AABaOwCgLT0AwLU8AOAgvQAAfDwAQM08AAB0vACAeDwAALC8AABpPQAAyLsAAKg7AMDCvQDgFb0A4G+9APCwvQAgdD0AQGQ9AACwugCAKjwAAKs8AMCzPAAwjj0AwFi9AADbvAAAUzwAwGU9AIDqvAAwnL0AABc9AACgOgDwir0AAMG7ACBtPQBAcz0AgPm8AKBrPQCglD0AoFM9AGBXPQAAjrwAQI28ALCHvQCABzwAwN48AFCaPQDgdD0AEIw9AEAlPQCAIrwAIJk9AJC9vQAAPj0AQGi9AACWuwAghL0AAGc8AABTPAAAjTsAwEM9AAADPQAA7jwAAFq8AABwOwAgLb0AYKo9AMDNPAAAR7wAACm8AAB6vAAAcLwAgEM8AADAvAAAvLoAwIE8AJC5vQDAhTwAQCg9ACCYPQCAOLwAABi8AADcugCAJTwAAMk8AABzvADA7jwAwK29AEDLPAAACDwAgBw8AMCFvABgQb0AwDG9AIDrPABATT0AwLS8AIDXPQAAwTwASBg+AIDiPAAgmT0AgP48AECvvQAAiTwAgAa9AIAFPQAAMDwAgD89AIASPQAAgrsAQMu8AKCOvQAA+DwAgCm8AACRPAAAh70AgL68AAC7PADAhrwAoBW9AACsPADAg7wA4BO9ACAGPQCgHb0AAAg+AKAgvQAAKL0AAJY7AFCIPQAA2rwAAA67AAAiOwBAnLwAgGE8AGAOvQDAW70AAFC7AIDIvAAAALkAoHg9AIDAPABA+zwAAGK7AIB2vAAA3bwAAFg7AAASuwAAerwAgHA9AIDivACAITw=","chunkHash":"83b8a22d8d4e22b7c7ad53ec484ff3e06c2a46b3cf87520b896d0f03e823d300"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n            raise ValueError(\"No trainable parameters in the model! Check your freeze settings.\")\n        \n        # Loss function\n        criterion = nn.CrossEntropyLoss()\n        \n        # Train the model\n        print(\"\\nStarting training...\")\n        model, history = train_model(model, train_loader, val_loader, criterion, optimizer, args)\n        \n        # Plot and save training history\n        print(\"\\nPlotting training history...\")\n        plot_training_history(history, os.path.join(args.output_dir, 'training_history.png'))\n        \n        # Evaluate the model on validation data\n        print(\"\\nEvaluating model on validation data...\")\n        val_results = evaluate_model(model, val_loader, args, adjust_labels=False)\n        save_evaluation_results(val_results, args.output_dir)\n        \n        # Save final model\n        final_model_path = os.path.join(args.output_dir, 'final_model.pth')\n        torch.save(model.state_dict(), final_model_path)\n        print(f\"Saved final model to {final_model_path}\")\n        \n    except Exception as e:\n        print(f\"Error in training process: {e}\")\n        import traceback\n        #...\n```","range":{"startLineNumber":1495,"startColumn":0,"endLineNumber":1521,"endColumn":0},"embedding":"ACAAvQAAbjwAwDQ9AOD5vQAAF70AEI+9AAAfvQCAKz0AgFi9ACBWPQAAuTsAAIg7AOBEvQAAUDwAAJe8AAAIPQCwo70AUII9AADevABAMT0AYIk9AADFuwAA9TwAgDc8AAApPAAA47sAIC49AMC9PABAfj0AALK8AADAvABAnbwAAMC9AOCVvQBQub0AoC69AMA+PQAArbsAAFY8AICKvAAAWz0AsOC9AMDnvAAADD4AgPw8AMD0vADAAD0AgKM8ACCIvQAA+7wAgHi8AOAmPQBAzrwAwJY8AIAqvAAARjwAQM28AOAxvQAAFLwAYDC9AIChvABgRr0AAN08AABxPQAAkDkAQN68AABcvQCAejwAwIu8AMCgvABAbb0A8Im9ACALPQDA7jwAgFI8AAA5vABAmDwAQGU9AEC8vACA6LwAACg7AMDRvACAZDwAgAw9ACAHvQAAvb0AQO29AIDLvAAA8LsAMIy9AID1vAAARrsAgJy8AFC/PQBwhz0AAMC5AMC2PAAAR7wAoHY9AAAivACAjDwAoJU9AADPOwCgUT0A4DY9AAD8uwCAJTwAAAw9AIBDPAAghT0AYE69AMCoPAAAcDoAgCO9AHCXvQDAbb0AALs7AABjPAAADr0AQHy9AIC9vADApTwA4Dk9AECmvQCAMz0AAHE9AED7PACAbzwAAGC5AMCfPACAQzwA4Bg9AIARPQCAR70AAA29AAD9vACAhL0AQO88AGBVvQBAyz0AoAs9AECZPACAZLwAACu8AAD+vAAgOj0AQIK8AKCWPQAAp7sAAME8AIB5PADQrT0AwLE8ACARvQAAnLoAgES8AADXvAAQkj0AYE09AICIvQAA0DsA4Ds9AADEOgAAP7wAgCG9AEAlPQBA67wAQKE8AEALvQDAjb0AoKw9AMDHvAAA/bsAQN68AGCAPQAAirwAAMS7AJCmvQBwkL0AwPS8APCQvQCAqjwAQL+8AADcOwBAoL0A4Bk9AADTPABQj70AwHQ9ACAjPQCAubwAgDe8AOA8PQAAPjsAYD09AICjPADA7zwAIFy9AICVPAAAFz0AAOW8AOByPQAAULsAAIu9AADbOwBA5b0AADK7AIB+vABAbL0AAOe7AACIvACgCz0AQNc8ACAGvQBAL70AgCC8AIDCvABAMT0AIEc9AKBoPQAAirsAYCC9AIDIvAAwgT0AYGA9AMCWvQBA3zwAgMG8AICdPABQgj0AwJ68APCGvQCAObwAAMW7AABhPQDgDL0AgHo8AACcvADA2TwAQIE9AABQOgCwoj0AAAm8AMAuvQDAOz0AgL48AABIOwBw2r0AAKw8AMAOPQCAprwAAMM8AECevABAP70AAIC8AADAOADgBb0AQNi8AGAwvQBgxb0AAHc8AKA8vQAgJL0AQJg8AEANvQCgAz0AAJK8AADguwAAWbwAgA29ANCjPQBAtbwAAIi7AEAEPQAA+7sAQPY8ALCKPQCgRT0AYI09AGAtvQDATb0AgA49AEBjPQAA9jwAANM7AABauwDAib0AIB49AECVvACAwDwAIC89AAAhvQAA8jsAAHo7AADZPADgcT0AAHi7AMDdPABgFT0AoCW9AAD9OwBgQD0AABi6AJDDPQBQtr0AYBU9AAAOvAAAsDsAYFg9AADauwCgTr0AQE89AAAjPQCA3LwAwPM8ACBfvQAADjsAIBY9AGBFPQAAyDoAIAa9AHCevQCA27wAIOE9AAAOvABgSj0AwKg8AACiPACA9rwAgOI8AABgugCQob0A4FG9AIDfvABAKD0AYB49AJDFvQCArz0AgFY9AIBbPADw8r0AAJ67AOC8vQDAWz0AAIq7AGBuPQCAGr0A4Gc9ALCFPQAAvDsAADY9AMCuvACgGL0AgDe9AACgPADgWL0AALy7AEC3PABAgr0AAPc7AIB6PACABD0AAHg7AABEvQBAkTwAAGQ8AAA3PAAAzrwAgMW8AMATPQAAaDsAAAU8AOC1vQDAgbwAAMG9ABC1vQAgej0AYGo9AIBtPAAAWrwAQJ+8AACAOABAfz0AICm9AACHvACAGDwA4H09AEDcvAAAWL0AwOs8AMDBPAAwr70AgIa8AEDTPADQhj0AAE68AADhPACART0AQEU9AKAKPQAAY7wAYAU9AOCFvQAAgDgAQIA8AHCQPQAwhj0AAJk9ACAhPQAAcLsAYHg9ANDmvQCA3zwAUJi9AACPPACAz70AQJY8AAA6uwAAjTwAAAc9AAAQOgAAajwAAO27AAA6vACgLr0AgEg9AOBnPQAAmbwAgL48AMAcvQAAFLsAgBC8AKBTvQAAUDwAgF88AGBAvQCAUrwAAK08AOBAPQAAb7wAAEq7AACOOwDA+7wAALC5AIAmvABA+jwAMJO9AAAwugBAmzwAANC5AEDUPAAAnrwAAP+7AAAmuwDgaD0AAMK7ANDsPQAAAjwA8OU9AAC5OwCgUD0AAKs8ABCWvQBA+zwAAHS8AKBJPQAgRj0AUJ09AIAIvACAXLwAQLG8AAD1uwAA0DsAgAW8AECHPAAAVL0AADq9AMCSPABA87wAIDa9AACZPQAA+zsAAFy9AECsvAAAmLwAABE+AOBfvQDAXL0AABK8AMCEPQCgGb0AAKg6AACKvADAgrwAAD08AEA6vQDAP70AAK+7AMAKvQAAZrsAEJY9AKBYPQAA8zwAAPk7AECMvABAir0AADK8AABSuwAAZ7wAoJg9AMCVvAAA8Tw=","chunkHash":"234a1be705fe8e7adde9e977dd39c8718fa21b8915bec2fdb856677c3183aeb5"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef main():\n    #...\n        traceback.print_exc()\n    finally:\n        # Clean up resources\n        if monitor_thread and monitor_thread.is_alive():\n            stop_monitor.set()\n            monitor_thread.join(timeout=1.0)\n            print(\"Stopped memory monitoring\")\n        \n        # Force garbage collection\n        gc.collect()\n        if torch.cuda.is_available():\n            torch.cuda.empty_cache()\n#...\n```","range":{"startLineNumber":1521,"startColumn":0,"endLineNumber":1532,"endColumn":36},"embedding":"AMC+vADAtDwAoEo9ADDxvQBgL70AwB69AADyOwCAqDwAgC69AAAyuwDgYj0AAOC7AEB8vQAANDwAwBU9AKAIPQBA1r0AQNs8AAAMvADA6TwAAEw9AIDqPACgFD0AYAI9AADWvADAtbwAoAA9AEDIPADAtDwAAJS7AACevACAC70AYG+9AGCevQAww70AQI28ACBrPQBAkLwAAIY7AECWvACgVj0AYMu9AAD3OwBgMT0AgEw9AADJvAAASLoAAIg8AIAxPAAA5TsA4I+9AMCmPAAAB70AcIg9AIAwvQDAvTwAwJu8AABLvADAqzwAAMS6AACXPACAgbwAAHQ8AIB3vACAU70AQGI9AKBgvQCAOzwAQOw8ACA4vQDgj70AoBS9AAD8OgAAzrwAADU8AAAoOgAAtzwAMJU9AAB/vACAObwAAL67AEBLvQAAmTwAkA0+AABSOwBA270A0NW9AOB7vQCAKTwAgGC8AKAkvQAApjwAwLC8AJCTPQAACzwAAJu7AOBDPQCgUr0AcIY9AMDQPACgHz0AAIs9AIC0vABACj0AkJM9AEC7PACAwDwAgKY8AABXvAAQsz0AIFq9AAAAOABA+bwAANm8AICqvADAsbwAgNM8AOBTPQAAZrsAIIi9AKBzvQDAuzwAQAw9AABmvQCAvTwAwDE9AABoPQBA0bwAAK+8AADDPAAAJjsAQIg8AECAPQDAtrwAYC09ACBivQAAh70AQP48ACBzvQCwzD0AAIo8AADwPAAAbTwAYFA9AIDfvAAwhj0AYHC9ACCFPQAAKzwAgBY9AAAXPABArj0AALK8AIAbvQCAXzwAADW8AICQPABgWj0AABq8AGBsvQAA97wAQIo8AIBvPAAAx7wAAJU7AEAOPQAAMjsAAE48AGAzvQAAN70AgJA9AOAIPQAA1LsAYAm9ADC3PQBgDL0AYDa9AMCIvADAVb0AQPA8AICUvQAAcLwAAEC7ACBnPQDgYL0AQBU9AABqPABANr0AAAQ7AMASPQAA1LsAoBg9AAB6uwCAkT0AgOs8AABkuwAgCj0AwIy9AEAHPQBAED0AoD+9AJCAPQAA2zsAwBG9AIAnPACgl70AADa8AADwOwCApLwAAGA8AAClPACgBD0AIB89AOAuvQBA7rwAwDa9AICMPACAQD0AAKA6AOA6PQAAwDkAALO7AEClPAAgfz0AYK89ACAXvQCA7zwAAIE7AIDXPADgdD0AgLi8AGAvvQAAs7wAQLC8ANCdPQAAtLoAAIy7AIBiPACgND0AAKI8AAA6OwDQkz0AQKW8AKC8vQCAybwAgHU8AICYvACQo70AQOg8ACAWPQBAnrwAwL+8ACAXvQAAQL0AgKK8AMARvQAAwrwAIBe9AADSuwAQjb0AAAAAAMBrvQBA070AAGC5AIBHPQAAODsAgOM8AADZPAAA+zsAAJE7ALCrPQAAyLwAQOw8AIDvPAAAGLoAwAU9AKCWPQDAWz0AAI09AGBivQDAobwAoDE9AKBcPQAgMj0AQIe8AAAbvACA17wAYIM9AIBEPABAIj0AAOM7AIABPADgCD0AALE7AIAdPQCAbD0AgE68AAAqvACAuTwAMJW9AEA9PQCAKzwAwCW9AHC5PQCQmb0AwOM8AEDgvAAA2LoAgNM8AKAVPQAAkTsAwOS8AECIPQDAnTwAoGg9AIC1vAAAkTwAYEg9AMAYPQBgS70AQNY8ACCtvQCAKbwA4GI9AED5PACAtzwAgEM8AIAXPABAgLwAANK8AMCGPAAAu7sAgM28AADNuwCwhz0AYAU9AEAWvQBAdD0AAK47AIAIPADwzb0AQLC8AEDavQAA9DsAAPe7ACBAPQAAdLsAgFs9AJCmPQAAmrwAYAE9AMAmvQDgH70AYK69AAB4ugCA5bwAwBm9AADMugAwkr0AANO7AGAdvQAARTwAQLc8AHC1vQDgJj0A4C49AMCHvAAAArwAAFG8ANCnPQCA8jwAQI88ACAmvQBAAL0A8Lm9AKBJvQDArT0AwFM9AIBBPACADr0AYBe9AADsugBA5TwAsIW9AMCyvACgNT0A4Ew9AABYOgCQyr0AQJ88AACcPACglb0AQJu8AKAUPQCApTwAIGO9AMA6PQDgTj0AgEg9AOCFPQBApDwAgMY8AAA7vQCAZTwAgI08AMDBPQCwgT0AUNE9ACAhPQCgDL0A4I89AADAvQBAqTwAwEe9AIAIvAAwBr4AwLa8AOB/vQCAaLwAgH49AJCJvQDgDD0AAJi6AAClPAAAS7wAsMc9AIBcPAAgNb0AcJ49AKAHvQBAn7wAwBm9AGAwvQCACjwAACi6AKAOvQAAxLwAgI08ACBmPQCAKbwA8Jq9AABwOwCA87wAgLI8AGB4vQAAULwAoBC9AACGOwCAmDwAAJQ6AIArPAAgfb0AAAY7AAAcuwDA0DwAABi8AJDPPQAA5DsAgLM9AAB4PABAbj0AAHw8ACD/vQAgmD0AgDw9AAC4uwCQ+z0AYKo9AADIOwAA4jsAAIa8AIACPQDAAj0A4AC9AMCgvADAeL0AAPC8AAD7OwAArTsAAM+7AIBFvACAgLwAwNi8AADyPADAqLwAQA0+ACBivQCAtLwAAEA5AACVPAAgnL0AAKy6AMC8vACAtrwAAOi6ACANvQBALr0AAJ47AABouwCAVL0AEI49ADCgPQDAzjwAQPm8AIDvPACAy7wAgPo8AIAKvAAAmjwAwPk8AAB0PADgEj0=","chunkHash":"fe1b2ec53a0b16b2a4596d495e33a6a8c21ae99ac897a81b821255aaa9572947"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\nimport os\nimport sys\nimport argparse\nimport numpy as np\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nfrom torch.utils.data import DataLoader\nimport matplotlib.pyplot as plt\nfrom sklearn.metrics import confusion_matrix, classification_report\nfrom tqdm import tqdm\nfrom torch.optim.lr_scheduler import ReduceLROnPlateau, CosineAnnealingLR\nimport torch.cuda.amp as amp\nfrom torch.utils.data import random_split\nimport matplotlib.cm as cm\nimport seaborn as sns\nimport time\nimport threading\nimport psutil\nimport gc\nfrom functools import partial\nimport pandas as pd\n\n# Add parent directory to path\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\nfrom dataloader.nuclei_dataloader import get_nuclei_dataloader\nfrom model.vgg3d import Vgg3D, load_model_from_checkpoint\n\n# Custom adapter model to handle size mismatches\nclass Vgg3DAdapter(nn.Module):\n    #...\ndef parse_args():\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":65,"endColumn":17},"embedding":"AAD0OgAAlzsA4Jk9AMDWvQAAwLwAwEi9AIAXvQDgX70AYI+9AICVPAAAYLoAgLu8ACACvQAAHrwAwN48AECQPAAgh70AACU9AAA6uwCwqz0A4A89AOAXPQAARD0AgJW8AADpOwAA8bwAcL09AECpPACQhz0AIDu9AIA+vAAAIb0AQIq9AMAZvQBw5b0AAHA6AEDsPAAAzDoAABW8AED8PAAAlTwAAKy9AACmuwAwlT0AgK48AED4vAAATDsAAFO8AECOPADgGj0AAGW8AGBkPQAAnbwA4GY9AACduwAAIzwAgA48AIDlvAAATT0AgOW8AABPvADQyL0A4A09AACoOwCAKr0AwIO8AHDJvQAAlLoAgFg8AKBbvQCAkb0A4Am9AACFPACAmL0AYAU9AKACPQAAkDoAQOI9AIC+vAAAC7wAAAa8AICOPACAMz0AoC49AAB1vABAo70AEOy9AED3vABAi70AwIS9AADQugCAWbwAoDe9AOCYPQAALD0AAEE8AABuOwAwm70AYM89AIAlvAAAuDsA4GM9AECtvABANj0AAFU9AAA2OwDAtTwAAAe8AMCEvACgVz0AwGy9AOChPQCAFjwAQCe9AMDZvAAAKL0AAPE8AGAoPQAAH7wAALG8AIAkvADAvzwAYEY9AKB+vQCAYjwA8IA9AIDiPABA47wAIDK9AAAdPACA3rwAAOC6AHC0PQBwkL0AYCW9AGB1vQAwqL0AwIW8AICivQBA7T0AgGi8AADGPACAArwAAK47AAC3uwDgdD0AIDS9AADdPAAgjr0AgM08AKAMvQDAMD0AYB69AAAEvQAAUj0AAFi6AOArvQCwiz0AQDw9AGBvvQAAGjwAwAY9AADfOwAA3bsAwLq8AHCFPQDAXL0AAJa8APCBvQDAC70AwL09AECmvAAAAT0AwOa8AGC+PQDAML0AgAG9AECivADAhLwAAC68ANCOvQAAmbsAADO8AAB2PABAUr0AABg6AECxvAAAg7sA4Do9AACtPACAQjwAgDM8AAA8vABgEz0AgBg8AIAnPABgmj0AwF+9AOAbPQAgYD0AAAq8AICRPQCAVTwAoHi9AICtvADQj70A4Am9AACKuwDAijwAgB69ACApPQAAg7sAAPU7AADbPACAfLwAALq8AIA+vQAgTT0A4Gc9AICiPADAojwAgEM8AICPvAAASTwAACM8AKAUvQAgRz0AwIW8ACAuPQBA6jwAQDG9AMDAvAAgUb0AAH28AECHPAAAjb0AwKu8AAB1vADAyLwAgIg9AEAnPQAQoj0AQLk8AGB5vQBA/TwAACg7AAAQvACQx70AgME8AOA8PQAAxzsAALU7AAAFvADwir0AgCS9AIBFPADgZb0AQOe8AIAcvQBAl70A4Cm9AAC4OgBAtrwAwL88AADQOQBA9zwAgEO8AABKuwDAgbwAACC9ACB8PQAgDb0AAM47AAC6PAAAqrwAgI88AACnvACgQz0AoLk9AMC6vACAfbwAAMw8AGBnPQAwkz0A4Dq9AAC2OwCA7bwAgAU9AMDtvAAA6LsAgAW8AEAMvQAABjwAALe7AGAvPQAA17wAwPy8AIDfPACAeLwAAH69AICdPABA0zwAABM8ACBjPQAgSb0AoDE9AIBXvADAnDwAgHU8AIBfPACgDr0AgFQ8ACBkPQBAFb0AIDo9AMBQvQAAYrwAQO68ADCEPQCAEbwAQFO9AMCPvQDgA70AQIc9AAA0vQDgBz0AANY7AKA4PQAAcbwAAOQ7AAAGPQBgc70AwDc9AIAjPAAAIj0A4Ac9AEDxvACgqD0AgEQ8AOCDPQDgJ74AYFe9AGA2vQDAsrwAgI+8ADCVPQAAiLsAgGg9ANCQPQCAbrwAAM67AAAFPQAAOL0AQDK9AADXvADAs7wAoEK9AADpuwDgO70AwKE8AADQuQCApzwAQIk8AKA3vQBgez0AAOC6AMDHvACAKDwAIGS9AMDkPABA+DwAoEk9AGB3vQAA1LsA4Py9AIAevQAgDT0AQCs9AACzPABAnTwA4EA9AADpuwBAZD0AAEm9AMDIvAAAgLoAAJE7AMBivQDgTb0AAGc8AIANPQDAUL0AAMG7AGA3PQAAhTwAAF68AEBlPQAA9DoAAEQ9AECAPQCgUT0AAOk8AABKvQAA0TsAgI88AHDUPQAgtD0AUOU9AAADPQBgL70A4DY9AKgivgCAGj0AQGq9AAAXPADwnb0AwF89AID3vAAA0bsA8Kw9AADUPAAAzbsAgFa8AIAPvADARb0A4Dg9AMA1PQDAmb0AgHI8AIDIvABA+bwAAHO8AECyPAAAkjwAAHQ8ACBOvQDApzwAYG09ACA+PQCATjwAgHm8AAAAPADApLwAQBA9AED2vAAAGrwAACe9AAB+vADgK70AgKO8AAAwOwCAub0AAGy8AMDIPAAAJz0A8Je9AODcPQAA27sA6BE+AAA0OwCAfz0AAKc7AGBrvQAA5TwAgBg9AMCGPAAAyDsAoAw9ACANPQAAwzsAQEQ9AABDPAAAoLoAQJ08AIAYvQAgf70AIHi9AEC9vACA9LwAAE28AABIOgCAZbwAADS7AAB8OwBAJz0AoCg+AKBMvQAASDsAAH88AGAZPQDAD70AYC89AAB2PADApLwAQPQ8AAAgugDAxbwAAOy6AIB5vQAA47wAwOw8AKBhPQAAIDkAgDI8AIBNPACAdL0AAGy8AIAPvACAbbwA4Bo9AMDzvADArj0=","chunkHash":"f0e114ca2043b2c4815d952285190b3637aadb2554746b79070783dab1164c55"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef train_model(model, train_loader, val_loader, criterion, optimizer, args):\n    #...\ndef validate_model(model, data_loader, criterion, device, adjust_labels=False):\n    #...\ndef plot_training_history(history, save_path):\n    #...\ndef evaluate_model(model, test_loader, args, adjust_labels=False):\n    #...\ndef save_evaluation_results(results, save_dir, class_names=None):\n    #...\ndef basic_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W)\"\"\"\n    #...\ndef augmented_transform(x, margin=0):\n    \"\"\"Transform a 3D volume to a 5D tensor with shape (1, 1, D, H, W) with augmentations\"\"\"\n    #...\ndef mask_transform(x):\n    \"\"\"Transform a mask to a 5D tensor with shape (1, 1, D, H, W)\"\"\"\n    #...\ndef get_transforms(target_size, use_augmentation=False, margin=0):\n    #...\n```","range":{"startLineNumber":156,"startColumn":0,"endLineNumber":1121,"endColumn":66},"embedding":"AECsvACgMD0AAPw8AOCdvQAABr0A4Jy9AIBRvACAK7wAoHG9AIDqPADAsrwAgEm8AID6vAAAEzwAAOG8AOAQPQBAP70AIFo9AEDGvADgHD0AwI48AADkOgDAdj0AgEO8AIDnPABAgrwAQDY9AKBhPQBAOT0AwOK8AICAvADAA70AYGO9ADCrvQAAAL0AADY7AAAsuwAQwT0AAAA9AECmvACgaT0AEKS9AIDnvABgdT0AoDU9AOAovQAA7TwAALQ6AEAQvQAAKT0AwIe8AOBgPQCABDwAAOC5AAAbPACgUT0AoLW9AIAXvQCAKLwAAL68AICEvACgS70AABK7AABuuwCgAj0AQKk8AJCgvQDAibwAAMQ7AABLvABADb0AABy9AMBjPQCAGzwAYHw9AMCGvADAFT0AMPY9AHCOvQAAdbwAwLu8AMAXvQAAOT0AgB49AKBPvQAwyb0AEJy9AKBCvQCAHb0AsLa9AIB5PAAgFb0AAFi9AEDKPQAA3jwAgPs8AACyPADgh70AIBo9AICDvAAAWjsAoEM9AAAHPQBATz0A4Go9AAB4OgAAgjsAQNU8AIAvPQBAFD0AYHu9AACTOwCA+rwAQJW8AMArvQBgir0AgCC8AEDXPAAw7L0AAKu8AAAcvQCAG7wAAPc8ANCPvQAghz0AANI7AIAPPQBwu70AwNO8AICnPAAAgDoAADg6APCRPQDQw70AgFu8AICovQBATb0AgMM8AIC/vADA8D0AAEC6AIBAPQAAELsAAJy8AADNvABAojwAgLW8ADDEPQAAGrwAAHK7AICnvACQ0z0AAIo8AACVuwBAH70AICu9AABhPAAQuD0AIFY9AKC6vQDgUL0A8IQ9AEC1vAAAQLwAANy7AIAEPQDgJr0AgKO8AEAIvQDQ6r0AYH49AACfvAAAf7wA4Da9AKBdPQCAGL0A4ES9AEBqvQDgeL0AgD69AGBVvQAALT0A4Cm9ACBFvQCABr0AAGI9AABwOgAAgjwAgKO8AIBpPQAAqLoAAJy6ABCKPQCgHT0AwMC8AAC9OwDANT0AAPG7ABCQPQBA6zwAgEM8AMASPQDAqLwAsLS9AGAFvQAwqb0AAEg6AAD+OwDAV70AAOw7AIAxvAAAPrsAQMA8AIA3PABgHr0AYCQ9AKAAvQAATzwAIIg9AKBLPQCAJLwAIDs9AIDLPAAAQDsAACS7AEDsvADA0jwA4KK9ACAWPQBArjwAwKQ8AICHvACArbwAAH67AICdPADgO70AAEO9AAAovAAAozwAQEw9AEADPQCwnT0AgHa8AAAXvQAAcz0AAKU8AAASvAAAqL0AQAE9AACRPQCAFjwAAGC8AMDYvACgB70AADC8AMCSPADgXr0AgDe9AHDOvQCAZL0AwM48AIDgvACAzbwAIE09AIBMPADA5DwAALq8AGBMvQAAL7wA4Ge9ACBkPQCAe7wAwKw8AACePAAAmDoAQLs8AIDZPADgWT0AALo8AOBDvQCAMLwAIBQ9AABtPQBA9jwAAJ87AMD5PAAA+zsAgBo8AMAKvQCAK70AgGk9ALCIvQAALjwAAEW9AGA7PQDAtT0AQAO9AMD4vAAANjsAgA+9AAB2OwBAez0AwC89ACA4PQCw1r0AYE09AKAhvQAABrsAwOQ8AIAIPABAtbwAwOo8AIA4PQAA+TsAAGy7ACA4vQCABbwA4AQ9AIAkPQDAS70AEKm9AHCuvQCgY70A4Bc9AIA6PAAACT0AwGK9AOAVPQAgVr0AYCu9AAAVvADwqL0AYG69AIBqvQCAqzwAYCo9AGBWvQAAjzwAAIC8AMCTvAB4Fb4AgN68AECevQCAWbwAgOe8AMDfPAAAWLoA4HE9AACiOwAAJDsAwIi8AMBvvQAA3rsAoF+9AMCnvADgcb0AIFq9AAAAuwDQg70AABg6AICWvACAMDwAwNY8AEDLvAAAuLsAICo9AMDSPAAAbDsAQNy8AADNuwBAQj0AgF88ANCHvQAA2rwAQJK9ALCvvQDgmj0AIGo9AADIOgCATzwAQCs9AADROwDAxDwAgGS8AIAdvQAARDsAAKc8AADcuwBAKr0AQEo9AIATPACgi70AAN+7AHCFPQAAaT0AwPy8AEANPgCgQz0AoEE9AAAnPQAAY7wAgE+8AOA/vQAAyTsAQIi8AKB4PQCQgj0AIH49AIAfPACA07wAACw9ABDzvQBACz0AgHK9AABnvACwgb0AgDO8AADevAAATrsAwKQ9AMAYvQAARDwAABo8AACQvACAFr0A4EM9AMAqPQCAfbwAAIA6AIBLvQDgOr0AAOg8AABAuQDAmzwAADg8APC3vQCAhjwAgGA8AAC0PQDAAz0AAAK7AIDEvAAAILwAAAA8AIBDvADAiTwAQIq8AIAoPQCAOLwAAPo7AMD4PAAAdbwAAG+9AAB0uwBAKj0A4Ji9AMCOPQAAxTsA4Jo9AIAYPACApTwAgAE9ACA/vQCAorwAgDS8AAAKPADAYT0AAAY8AMCRPACAKr0AQNs8AAAvvQBAcj0AAAu8AIBcPABAPb0AgCK9AMDIvADAjTwAAGe8AABwPQCgK70AELO9AMD9vADgLT0A2Aw+APDSvQBwqb0AwK88AICWPABAxbwAgFE8AAChvACAXbwAQOk8AAAvvACgob0AABo7AADNuwCASTwAoIY9AECuPACgXT0AgEo8AAB2vACAKL0AQMa8AACduwCAN70AoFE9AICKvABAtDw=","chunkHash":"4b8915704b19ba3154e351ddea4e0071d0a5d7dcba0ecaa4a6f33be11d72e418"},{"text":"File: `scripts/finetune_vgg3d.py`\n```python\n#...\ndef monitor_memory(stop_event, interval=5.0):\n    #...\ndef non_augmented_transform(x, target_size, margin=0):\n    \"\"\"Non-augmented transform function that ensures proper 5D tensor output\"\"\"\n    #...\ndef ensure_index_csv_exists(args):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":1138,"startColumn":0,"endLineNumber":1536,"endColumn":0},"embedding":"AACZvACwlz0AQJO8ALDJvQAQqr0AwEi9AABGPAAAPDwAwF+9AIAjPQAAJLwAAKu8AMDcvAAAjbwAAF69AMBPPQAAab0AAAE9AIB9vAAA1jwAADw9AACbPACAND0AgGi8AADkPABAib0AQMw8AIBjPADgFz0AAL07AADrPABAH70AoJ69ALDAvQAAuLwAQL48AGBkPQAAVz0AQIk8AACFOwAwpD0AYJe9AKBdvQAAobsAQPI8AICbvAAgGL0AAAW9AABEOwBwmj0AIAK9AMCevAAAMDsAkIc9AABpPABgRj0AgJi8AIDUvACAojwAAGu8AABivADAqL0AQIM8AIDWvABAxbwAQBw9AOBwvQAANrsAwKk8AOACvQBA0LwAgFq8AIB5PABAq7wAAJc8AACwOwCAELwAELg9AAAKvAAA5DwAAMK7AOBHvQDA4LwAsPg9AMCUPADwwr0AwNK9AHCgvQCAYL0AACC5AIAcvQAAODwAwDO9AMCEPQAAP7wAgEk8ACCPPQDgVr0AQDg9ACBBPQBAwjwAgL88AECLvAAAKbwAQHg9AIC6PADgdj0AAEo7AEAxPQBgDj0AYCq9AADOvABAnLwAAKo7AADqOwAAY70AQOO8AABKPQCApjwAgLO8AGCfvQCABTwAAIs8AKAFvQAgMT0AgDw8AEBbPQCAOr0AQKu8AIB7PACA+TwAAJA7AABcPQAAjLoAACA6AKA+vQBgHr0AoCg9AKA8vQBQBj4AgCm8AOAdPQCALjwAgEs8AABdPAAAVT0A4J29AKCjPQCAWzwAABA8AKA1PQBghT0AgCm8AACYugBAL70AAAq8AAD1PABgXj0AwJg8AMD0vACAHLwAgAI9AADVPAAAIrwAAAm8AMA4PQCAh7wAABY8AGBivQCQsL0AwGg9AAArvQCASbwAYCW9AIDCPQCwjL0A0IK9AHCCvQCAqb0AQLw8ACBMvQCA5jwAgEu9AEDnPACANbwAoA09AAAfPAAAtLsAAFe8ACAYPQAAQbwAgM88ACASPQDA1z0AgA88AIB6vQCQjT0AIL69AOBWPQAAjDsAgCG9AAAlvQCASTwAEIu9AADYvABglL0AAEK8AAA8PQDAFb0AgAU9AIAwPAAAqLoAUKA9AOATvQAA7bsAgDK9AAASvACArjwAQLw8AADhPAAA3bsAwJw8AGAePQAASDwAwPU8AEAGPQCA9TwAABW8AOBcvQDAtTwAAA28AECCvAAAbrsAIFa9AOBLPQAAUbwA4Ha9ACAXvQAA2DwAwOI8AACFvAAABz0AwD69ANCnvQAAnLwAwO08AAAAuwDgXL0AUIo9AOBzPQDgB70AACW8AABQOgCAyrwAABS9AEDdvAAASDoAIAy9AMBovQBA+rwAYDU9AKAnvQCwu70AAIu7ACBOPQDAgjwAQKQ8AEAtPQBA7zwAgDm8AEDAPQDgAz0AAEo8ACAdPQAAIDkAgHU8AEDaPAAgjj0AMJM9AICYvAAArbwAgNI8AICKPAAgfT0AABw8AAA4ugAgQ70AgBS8AAB2vACAH7wAQIY8AACAuAAAITwAwLa8AAARvACgRz0AAFa8AECqvAAA3LoAEJK9AGBvPQAAGT0AgHy8AGAhPQBQtL0AIGg9AOBPvQAA0TsAgKM8AID0PAAAyLwAwAS9AKCCPQAgHj0AgEQ8AIA1PABAdz0AQCI9AEDIPABgXL0AAH88ACADvgAAeL0AANA8AACGPQAA7zsAAOm7AABrPAAAkbwAYD69AIAMPQDAPL0A4BW9AAAeOwAAoDwA8JM9AIBavABADT0AgB48AAAYugBw9r0AAAS8AGC1vQCga70AAB88AMDJPAAAurwAYHI9ACBlPQAA07wAQMu8AAAGuwBgY70AQD69AAACvQAAcL0AQP+8AACgOwDQ970AQNm8AEBAvQDA3DwAsIE9AABPvQDAxTwAQAQ9AIAvvAAAxLoAAHS8AABaPAAgHj0A4Ak9AAD8vAAAPL0AwOO8AHCmvQD4Az4AQEM9AAD/PAAAZ7wAgHs8AABWPADA9TwAgAW8AECHvAAApj0AQMI8AACoPADwh70A4BQ9AAClvADAAb0AgBi9ACAuPQCAZLwAIDi9AEC7PQCQnT0AIGg9AEBaPQAANTwAgM+8AHCxvQBAAr0AwNa8AACJPQAATT0A8Lo9ACAmPQAAnTwAoCM9AKD0vQBArjwAQNa8AEChPABgbL0AYEa9AFCCvQCgA70AIA09ACCLvQAA6TwAwOi8AMCZvABAEr0AAEU9AACRPABgKb0AAKk9AACluwAAULsAAK68AMDjvABAJ70AABQ7AAB1vQDAvjwAAMc7AFCUPQAAm7sAgHq9AIAVvQAA5bwAAEI7AGCfvQAArDwAQJS8ACANPQAA0TwAAKI8AACkugCABb0AgKi8ACAgvQBA/DwAIEm9AGBePQAAuLwAUNI9AJCLPQAgRD0AgFS8AMCpvQAA+7sAgFY9AAA+vQCgiz0AIDc9AEDsvADACb0AAAc8ACAcPQCAYz0AAPA7AMCWvAAA87wAAKK7AOBnvQAAmDsAALm7AMCFPAAgar0AAAu9AAAQPQAA6bsAYEM+AIAivQDAMb0AgOW8ACAOvQBgWb0AgCA8AMDqvADAnrwAICU9AIACvAAAWzwAgMk8AACEOwDAh7wAUIg9AMAwPQAA7TsAADw7AACLPQDAgL0AAD89AKAmvQBAmzwAIEs9ACAtPQDgID0=","chunkHash":"b630f1fb1663b4b3fc31b7599dd5cdc541f0b0e76a8e8c92e7419888c177cd81"}]},"file:///teamspace/studios/this_studio/scripts/temp/visualize_morphofeatures_inputs.py":{"hash":"4d32383a0262e28f94668c88310a0a224b385c3912ebfcad49930d4609f20735","entries":[{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef load_shape_model_input(sample_id=None, config=None):\n    \"\"\"\n    Load an example input for the shape model.\n    \n    Args:\n        sample_id (str): Sample ID to visualize (optional)\n        config (dict): Configuration for the shape dataloader\n        \n    Returns:\n        dict: Dictionary with 'points' and 'faces' tensors\n    \"\"\"\n    # First try to load pre-generated sample mesh\n    try:\n        sample_mesh_path = \"sample_meshes/sample_mesh.pt\"\n        if os.path.exists(sample_mesh_path):\n            print(f\"Loading sample mesh from {sample_mesh_path}\")\n            return torch.load(sample_mesh_path)\n    except Exception as e:\n        print(f\"Error loading sample mesh: {e}\")\n    \n    if config is None:\n        # Default configuration for shape model\n        config = {\n            'data': {\n                'root_dir': 'data',\n                'cell_dirs': ['cells'],\n                'split': {'train': 0.8, 'val': 0.2},\n                'use_gt': True,\n                'add_noise': False\n            },\n            'loader': {\n                #...\n```","range":{"startLineNumber":17,"startColumn":0,"endLineNumber":47,"endColumn":0},"embedding":"AFCgPQCAkzwAwMu8AICZvAAA+bsAoIS9AKBRvQDAhTwAIAW9ACASPQAA8LkAgIs8AICuPACwnb0AgBm9AIBcPAAAtTwAgKM9AEBxvQAgcj0AQJE9AAA0vABgXT0AwH89AAAxvQAA27sAoD+9AIDoPADAPT0AAFi8AAD4OgBgCL0AUN+9ACAKvQCAe70AACi8AADSuwCASDwAoAi9AIB3PAAAvjwAQMq8AAAyPQAg8j0AQCo9AIALvQCAPjwAYAq9AADSvAAgej0AoBY9AIDtPAAATbwAgAe9AIDwPABgGT0AwJq8AGAEvQDAYL0AoE89AIC4PAAgX70AQKa8AIAaPQAAHrsAAAI8AOBhvQDABj0AgIa9AIAiPQDAsDwAID29AACEuwBAJr0A4C49AAAIvABgtb0AsNc9ACDAvQAAOL0AwJU8AADvuwDART0AgK29AAC4vAAAj7wAkJ29AACIugCgKT0AAFK9AKANPQAgD70A4K69AADkPADA4zwAAEo9AEDsvAAgpb0AAFU9AABJPQCQnD0A4DI9AAACuwAAVrsAAJ87AECfvACAaz0AgM+8AAD3uwDwgT0AwAK9AMBNvQBgtz0AwKG8AEDjvACAEb0AgDe9AOBiPQAAJb0AACy8AIAAvACgFz0AACi7AMDLvAAALLwAACS8AIDVvADgBz0AsLm9AAAkPQDAmjwAgDs8AIAyPQDArL0AAHw7AFC5vQAA/LwAgJi8AIAVPAAAvzwAgA09AAAauwAAPrsAgEY9AADIvADgBT0AgIO8AMB4PQAAFrwA4Fw9AABCPACAdTwAwOM8AKCEvQAgCr0AoK29AIAevAAARLsAACq7AECyvACQlT0AQMu8AICsvACArjwAwMC9AEBIPQDgmb0AACQ8AOAuvQAwvL0AQJK8AEAHPQCAlzwAAN68AEC1PACAADwA4CS9AAAQugAAHT0AwFe9AIC+vQAApbsAAIy7AGBYPQDAOb0AgJi8AABMvACAdD0AgCA9AEAhvQDA87wAAH88AACtOwCAtbwAAIO8AAAnvQBgxz0AwJ28ACCSPQCgiL0AAHs8AKAwPQBAJD0AACW8AMAFvQCA/7wAAGi7AAAkPAAAbDsAoG49AICQvAAAZLwA4G89AEDMvACAqDwAAEK7AIDTvAAAiLoAAMA6AIALPQDA0rwAgA49AAAnPQBAkT0AAAg6AADHOwCABLwAAIe9AEAdvQBgFD0AAIm8AIA2vQAAobsAAEQ7AOANPQCgM70AgOg8AKA9vQAAJz0AAP07AIBCvABA9jwAAPM7AIDuvACgiD0AQOw8AIBGvQAgo70AACk9AIDVPACAfT0AAJE9AMCnPABwqb0AQAm9AICOPQDArL0AgMC8ADCmvQDQnL0AsPI9AGAovQAAobsAoIQ9AIBcvQBAmrwAAPS6AAA1vAAAOLoAgE28AEDKPAAAjLsAQJo8AACguwDgWL0AAIS6AADavACAhT0AgFI9AABeuwDAuLwA8Ly9AKBRPQCAGT0AAM47AICRPAAA07wAYFe9AMBFvQBA6rwAgDo8AOBAvQBAA70AEKi9AAD3PADAsjwAgK68AIC1PQDgjj0AkJy9AADyvADA57wAAMg8AAD2OwAA4LsAgDM8AIAFPAAAoLkAAJE9AACjuwBAiLwAwCC9AABfPQDA3zwAwCq9AMCPPABgfj0AELw9AIDrPAAAmTsA8JS9AIBaPACgWD0AQN08AIA/PAAgUz0AoHy9AADNuwAArDsAYAK9AADEugCA4LwA4CC9AMCpvADgbz0AAIQ6AADUOwCAXDwAIDE9AGB3PQAoEr4AAOA6ABCNvQCASrwAgGi8AOAsPQCAkLwAwPg8AEDUPAAAUL0AAM27AEBMvQAgDr0AAAo8AMCIvACAWDwAkJ+9AOA3vQBAsrwA4Ga9ADDMvQDA37wAwI89AEBCPQCA2jwAANk7AAC2uwAAmDwAABw7AOCFvQAAzLwAANg7APC5vQDAp7wAwJG9AEgTvgBggD0AgIU9AICuPACwlj0AAIE8AIAKvQCAzzwAAIg7AABBvAAApLwAADg7AADQOgAApDsAgHw8AICZPQBAJb0AwMg8AEAnPQCAQz0AwJE9AODaPQAAFjwAAEU8AABPvAAA7LsAgBC8AMDGvAAAZzwAQB+9AABoOgAgfj0AAES7AAC6vAAAirwA0MY9ACDuvQCAs7wAIAa9AAAAOQDAYL0AgDY8AADIuwCAJrwAoAE9AADJPABgQr0AgI68AMAIvQDgrb0AoAU9AOB4PQAAmLsAwA29AEDkvACAEjwAIB09AAC4OwBAHj0AQN48ACCSvQCAcD0AgHu8AGAaPQDAUb0AAKg7AADQOQDwgT0AACc8AIArPACAxjwAAEG9AACquwCAL70AQJm8AGBcPQAAwrwAIAu9AADUPACgtT0A4IC9AGBvvQBAirwAgGA9AEAqvQCAYbwAgKw8AMALPQCASbwAoDW9AGA1PQAAgLsAoEW9AMAdPQBAprwAACS7AACjuwAwlj0AQLQ8AMCmvABAWb0AQNG8AKA4vQBARj0AoEg9AEDsPACQkz0AoHa9AIBePQCAhTwAUK89AAB7vQAApDwA0JM9AIA4PADwpr0AAJ08AADgPAAAC7wAgCI8AMBPvQBALj0AwPo8AIA9vADgAL0AgKw8AIAdvACANT0AQMk8AJCJvQDgZL0AoFK9ACAWPQBA6rwAADA6AEB6vQDwzT0=","chunkHash":"a28745b850f2734f47e102ab263118981523d0e63dce9d8b4c1d3fe5cbacac56"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef load_shape_model_input(sample_id=None, config=None):\n    #...\n                'batch_size': 1,\n                'num_workers': 0,\n                'shuffle': True,\n                'drop_last': False\n            }\n        }\n    \n    # Try to get dataloaders for shape model\n    try:\n        loaders = get_train_val_loaders(config['data'], config['loader'])\n        train_loader = loaders['train']\n        \n        # Get first batch\n        for batch in train_loader:\n            return batch\n    except Exception as e:\n        print(f\"Error loading shape model input: {e}\")\n    \n    # If all else fails, generate a simple mesh\n    try:\n        print(\"Generating simple mesh as fallback\")\n        from generate_sample_mesh import generate_cell_like_mesh\n        return generate_cell_like_mesh(n_vertices=1000, noise_level=0.2)\n    except Exception as e:\n        print(f\"Error generating mesh: {e}\")\n        \n    # Last resort: return dummy data\n    print(\"Returning dummy mesh data\")\n    return {\n        #...\n```","range":{"startLineNumber":47,"startColumn":0,"endLineNumber":76,"endColumn":0},"embedding":"AICOPQCgVj0AQJY8AEDovADAmrwA0Le9AEAuvQAAwTsAoBu9AIAkvACAkzwAgHa8AICpPABQg70AgEW9AIAJPQAAHTwAIDY9AHCFvQBwiD0AwII9AECzvABApDwAAGw7AABzvAAACr0AID29AOAOPQDAXT0AgJK8AAAMvQAgAL0A8OW9AIAqPACQrr0AgMy8AABkvAAAUDsAgDS8AACxuwCAIT0AoG69ACANPQAwwT0AAM48AAD0OwCAgjwAQFm9AIAjPABADz0AAGE8AIA6PQAAHbwAADi8AEADPQDAjT0AwL+8AKAuvQDgJr0AQIk8AIBdPQAAUr0AwIk8AIBQPAAAmLsAANM7AHCGvQAA0rwAALy8APCFPQDA3LwAoGC9AIBDPACAbb0AAAg9AABKuwCgrL0AQL49APDIvQCAZbwAoAM9AIAEPQDQgT0AYFW9AOBSvQCAKb0AYEq9AAAivAAAhjsAgGK9AADQPADA1zwAAFq9AIBmPQAAbDsA4GA9AADUPADAs70AQAA9AMCvPAAgiD0AQBE9AIADvACA6TwAAIi6AADJvACgQz0AAHm8AMCuvACwzT0AoAa9ABCcvQBwiT0AgF+8AIA+vAAA6LsAAIO8AKAfPQCAFb0AAME7AAApvQCAMD0AAOe8AADIOwCAR7wAAHK8AABOvAAApTwAMMG9AMARPQAArDsAADM8ALCiPQAwl70AgF68ALDrvQBAGr0AQEw9AADKOwDwij0AgFW8AGAQPQCARTwAQAM9AIAkvQCAGj0AYG69AKBtPQBA6LwAwH49AACTuwAAYLkAAEQ9AMBhvQDgFr0AwMO9AADJuwDgAD0AAGi8AEDBvAAgQz0AAIk7AAAgvAAgCT0AIHe9AABGPQAgLr0AAHW8AECNvQDg2b0AAGU8AAAKuwCAwzwAIH69AADyOwAAsDkAAOO8ACAcvQAAJDsAgNW8AKC7vQBAijwAAKC8AMBCPQBgA70A4C+9AAAQOwBghD0A4A49AIBXvAAADrsAwIM8AACcuwCA37wAACw8AIBFvQDgvD0AANw6AGBGPQBAhjwAgJC8AEBOPQCAmDwAQPq8AOCRvQBwl70AgAM8AIA5vAAAcLsAgD89AAAqvAAAgjsAQB09AECuvACAYzwAADo8AAByvADgGD0AgMQ8AABGOwCAYTwAQJg8AMCtPQCgdT0AgBo9AAD2uwAAgDoAYEi9AOAQvQAApjwAAFg6AGAWvQAAhbsAQCo9AICwPADAOr0AQJU8AOAovQCA2TwA4DY9AIDbvACATTwAAIE8AAAQvAAgYj0AQKs8AKAevQDgkL0A4Cw9AECIPACAYTwAIHg9AECGPADgf70AABS9AEAJPQBQxL0AABY7AICkvQAAp70AgMc9AAC1uwBAR70AMI09AECXvAAA7rsAgD48AMC1vAAAM7wAgNe8AAC1OwAASLwAAE48AIAHvAAAZb0AAKo7AACPuwBAsD0AwCw9AADmOwAAtLwA4GC9ACBlPQBAtjwAAAA7AIAhvABA4LwAgCi9AOAmvQAAKb0A4Bg9AAAFPAAAdLwA4GG9AED8PADA1bwAQNy8ACChPQCA4DwAAGu9AADQPAAgDr0AwA89AADNuwBAr7wAAIW7AIBGPABAwzwAEI89AIDOvACAhbwAYGS9ACAMPQBAkDwA4HO9AACqvADQnD0AALw9ACCJPQAAEL0AMJ+9AACIuwAABT0AAFG8AAAeOwCgPT0AYCq9AIDcvAAAEjsAwCe9AAA2PADAOb0AgPa8AMCAvADAej0AAK+7AADIPAAAoTwAAN87AGCiPQCIIr4AAEA8AGA6vQAAcrsAQBI9AOA5PQCgA70AAGo9AACuOwCA4LwAALs7AKAavQBAA70AAPC7AMCXvAAA8DoAgMu8AOAOvQAASbwAgHK9APCyvQBA6TwAwN49AAAZPQDAJD0AADm8AACvuwBAkjwAICq9AKAGvQCAxzwAgK08ALDNvQBgIb0AgGK9ACASvgCgUj0AYI49AIAtPABwvj0AgAg9ACAbvQAAhj0AAFS9AACNPAAAb7wAAJe7AMCdPAAAWr0AgAA8AAB/PQAgYb0AQMc8AABDPQCAeT0AIEE9AECjPQCAqDwAABS7AOAsPQAAwLsAgJS8ACAXvQAACD0AICa9ACADPQAgeT0AAHC7AAC1PAAAlbwA8M09AJD+vQAAvbwA4JG9AGA2vQDQqL0AAKM7AAAguQCAF70AkIE9AAAzvAAQhr0AAJu8AIBcPAAQjL0AAPg8AOBqPQDAi7wAgJ28AMDEvACA0bwAgEo8AKAWPQBgKD0AwEg9APCGvQDA6DwAgO28AMBhPQBAgL0AAJW7AAAxvAAAljwA4AE9AMDtvAAAMrsA4H29AADFPAAABr0A8JW9AABOPQDASb0AgIS8AABPPACwqT0AYHS9AICWvADA7rwAoKM9ACAkvQBA9DwAYFU9AMCUPAAAx7sAUIq9ACA8PQDgLb0AACW9AECBPQAAm7wAALk7AEClvADglz0AgAo9AMCEvABAI70AwAW9AGADvQCAjDwAoCA9AKAjPQCgTz0AIJG9AECVPACgbD0AwAw+AOBjvQAAGDwAgBA9AMC8PAAwhb0AgKo8AGAePQAAebwAACg8AOCNvQAA6TsA4CE9AADJuwCA2LwAAHK7AABouwCALj0AACo8AAAUvQCA5bwAoBy9AICKPAAAJbwAAKI7AADsvACg8z0=","chunkHash":"dc2200271b0ef80008a29194ad5e397dd3158c909c4a90ceaa05dbe47ba21160"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef load_shape_model_input(sample_id=None, config=None):\n    #...\n        'points': torch.randn(2, 1000, 3),  # Two point clouds\n        'features': torch.randn(2, 1000, 3),  # Features for each point\n        'faces': torch.tensor([[[0, 1, 2], [1, 2, 3]]], dtype=torch.int64)  # Dummy faces\n    }\n#...\n```","range":{"startLineNumber":76,"startColumn":0,"endLineNumber":79,"endColumn":5},"embedding":"AIDuPADA1TwAYDc9AKAFvQBAmrwAAM69AEAZvQCAkbwAgIO8AACtPACAVjwAAHK7AADYPAAgTb0AQDW9AKAePQAAkLkAYHU9AMA3vQAgZD0AAAc9AGAWvQCA0DwAAEg6AIAJvQBAqLwAgMG8AAAVPABAfz0AgB28AACgugCgSb0AYOi9AIA9vAAgwb0AAOk7AMDWvAAgGT0AoAm9AACAuwBA6TwAYAe9AMAbPQAgdj0AQNQ8AAB1vACALbwAAFG9AAALvQCAhj0AgBc9AACtPAAA6jsAwJ28AEDYPADgaD0AIAm9AACVvACga70AIIc9AAB9PQAgY70AgEY8AECnPAAAjbsAAMo8AACavQBgDL0AgE68AKBaPQDAg7wAACI8AIB8PABAmbwAAIM9AEDnPADQx70AIOc9AAC9vQAADL0AgEY9AMDJPACAhD0A4Kq9AGAJvQBACL0AgCy9AIAqvAAAPjsAwE29AEDdPACAfTwAYGy9AECrPAAAa7wAQD09ACANPQBAyL0AwPE8AIB/PAAgdT0AwKk8AKAJvQAgUj0AgHM8AMCYvABgmj0A4A+9AAASvABAyD0AwOq8AMC4vAAQoj0AAOM7AED1vAAAETwAwCm9AMD0PAAAqbwAQOG8AIDWvAAA6zwAgFW8AADlPAAAYrsAAM27AABcuwAAqLoAwKq9AECGPABAqbwAgHg8AEDaPQBAS70AAI27ABDlvQAAm7wAoC89AADnuwCgMT0AQNk8AIBUPAAAdjsAQBY9ACBJvQDACD0A0MC9AGCKPQCALr0AoIo9AIBvvAAAtrsAQEU9AABUvQDAVL0AENe9AAAAOAAAejwAQMa8AIAgvACAwzwAQAq9AIBrvAAAzDwAYF29AIDiPABgO70AwIQ8ADCFvQBACb4AQAe9AECYvACA6TwA4Am9AABkOwAACTwAQAm9AADovAAAtrsAAP68AOC7vQDAEj0AANy8AMBFPQDgfr0AANO7AAA3vABghz0AgFw9AADUOwCAgTwAABI9AIA8PAAACbwAAI48AOBkvQDAkT0AgBI8AABuuwCAgjwAQJC8AOBPPQCAIz0AAIW7ADC1vQAgib0A4AY9AABsOwDAxbwAoC49AACKuwAAozsAQPI8AIBpvADAtrwAwM28AACTvAAAeDsAQJa8AIDBPAAAqrsAAMM8AJCyPQCAGj0AANk8AAA4OwAAozsA4Au9AEC2vAAAkDkAAG28AEDmvAAAjrsAgKA8AADsOgAgKb0AQA89AIBTvQBAzDwAAI48AEBPvQBAqTwAAEG8AEDAvAAAez0AABY8AIDavABARb0AAHU9AIDxPACAyTwAYHo9AICsPACAWb0AgFC8AMBPPQCgqb0AALA8ABCYvQAQkb0AsLk9AGAivQAAh70AIGs9AGBbvQCAFbwAwMW8AACIuwBAybwAwNq8AACzPACALrwA4DQ9AAAwuwAAbb0AgA+8AACOPACAmD0AoBs9AADouwAA+7sAYFu9AKBFPQCA0TwAAJC6AECWvAAATLwAQKq8AED4vACgPb0AYBs9AECEvAAA4rwAQGC9AACTuwAAETwAAM68AEBSPQBAHD0AUIG9AAA1PABgTr0AQKQ8AICMvABA9LwAAOM8AAAXvAAAwzwAkKA9AACcuwDAgLwAYKK9AGBiPQAAg7sAQIy9AOAOvQDwhD0AwNo9ACA1PQAA77wAkIi9AIDdvADgKj0AAJW8AAB4OgAADT0AYC29AMAmvQBAzTwAgCS9AAAtPACA2bwAgEK9AICxvACghD0AwJS8AMDkPACA1jwAYAO9AICMPQAIGb4AgPy8AMBrvQAAQrsAoEw9AOBSPQDAAr0AALA8AIBxPABAcb0AAFe8AIDwvAAgEr0AAOS6AADpvAAA27sAYAy9AGBkvQBAH70AgOa8AADdvQBA7DwAoLc9AAAiPQDAgTwAgK68AIDHvACABzwAQO+8AEDSvACAXDwAAPC5ANDEvQAgO70AgIi9ABAAvgDgOD0A4FM9AACpuwDAZD0AgMA8ACBevQDgOT0AAE+8AABcOwCA1LwAACE8AMD0PABAlLwAgIU8ACBtPQBAXr0AYAY9AEByPQBAKz0AgCo9AFD+PQAA9jwAgCa8AAAwOwCA57wAADq7ACAIvQAABz0AwEG9AOAwPQDQnj0AAJs7AACRvADA3LwAUKA9AGgDvgAA/rwAIH69AIAVvQDgfr0AgCm8AIDQvADA07wAAD09AAAFPACAGr0AQAS9AAAQPADAlb0A4AY9AIB+PQAAMLwAAFM8AAAKPADAt7wAADg6AAD2PABALT0AQN88AECsvQCAIj0AgLu8ACAQPQCA/7wAgDc8AMCcvABgAT0AgFg8AICmvABAKb0AoF+9AACDOwBgHL0AQEK9AKAsPQBgNr0A4Ee9AABpPACgrT0AkJO9AECwvADAzLwA0KU9AAD3vAAA5LsAADk8AMChPACAdzwAgAG9AOAWPQAArDoAAHC8AKAsPQCAXLwAwKw8AIBUvABQqz0A4Ho9AABUPADAOb0AADq7AOAQvQBALz0AgD09AEDzPACAkT0AAEe9AIBbPQCgZj0AACE+AACavQDgEz0A4EQ9AIAzPQCgvr0AgDM8ACAbPQCAabwAQNo8ACCXvQCAIbwAQCI9AECMPABAer0AwJI8AIA6PADAOT0AACQ7AEAovQAATLwAgLq8AAA4ugCA47wAgI48AACmvAAYBD4=","chunkHash":"6a7f51d069f61d8c0c8ca6f760175903bdcee5e94e58f97fd9a51537e19f5f91"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_shape_input(batch, ax=None, show=True):\n    \"\"\"\n    Visualize input to the shape model (3D mesh).\n    \n    Args:\n        batch: Batch from the shape model dataloader\n        ax: Matplotlib axis to plot on\n        show: Whether to show the plot\n        \n    Returns:\n        fig: Matplotlib figure if show=True\n    \"\"\"\n    # Extract point cloud from batch\n    points = batch['points'][0].cpu().numpy()  # Take first sample from batch\n    \n    # Create new figure if no axis provided\n    if ax is None:\n        fig = plt.figure(figsize=(6, 6))\n        ax = fig.add_subplot(111, projection='3d')\n        create_new_fig = True\n    else:\n        create_new_fig = False\n    \n    # For proper mesh visualization, we need to:\n    # 1. Plot the points\n    ax.scatter(points[:, 0], points[:, 1], points[:, 2], s=1, alpha=0.3, color='blue')\n    #...\n```","range":{"startLineNumber":82,"startColumn":0,"endLineNumber":107,"endColumn":0},"embedding":"AOA7PQCgPT0AACE8AECrvABgeL0A0Km9AMD7vAAAcDsAQMC8AAAfPAAA9LsAgEk8AIDUPABAR70AgHG9AEAaPQAAfjwAADM8AAAHPAAAdTwAQM48AICKPACwpj0AAKq8AMBlvQAA1jwAQKC8AOBWPQAA8TwAEJM9AEBGvQAAubwAIP29AOBYvQBwo70AAB69AIBnvQDgNz0AAHS8AIAgPACwnj0AAJG8AAClPACglj0AwC49AADwOgBASD0AwF29AABEOwAQmT0AANk7AJCoPQBgBj0AoFa9AAAFvQAAhT0AoEC9AIAUvAAAKD0AAPQ6AGBxPQDAEb0AgDU8ACAxPQBgRb0AABI7ACBvvQCAj7wAAIa7AEDdvAAAbLsAwKK8AECOPADAr7wAgNi8AEAvvQCAtL0AQBk9AFCvvQBAgLwAALa8AACkPADAPj0AQNk8AMAsvQAgK70AoCm9AIAlvADAo7wA4IK9AAC0OwAAPDwAwOm8AIBvPQCAtTwAsOM9AID/vABQsL0AYDg9AECPvAAAqjwAIA89AMCPvAAA6TsAgEU8AABSuwBANz0AwFM9AICAPAAAaT0AACi8ACALvQCgBj0AAMk7AMCtvADALb0AQCU9AACMuwBAWL0AAJe8AAAUOwAgPz0AAIW8AMCAPAAA/TwAAGC6AMCVvAAAy7sAQPm8AACbPACAdzwAAJA6AGAGPQBAA74AAIu7ALD0vQCABr0AgHE9AGBAvQCArzwAgIs8AJCsPQCARTwAIGO9AEAbvQDQsz0AoDi9AOCNPQCArrwAgJc9AKACvQDgWj0AoF89AMCAvQBACb0AYEC9AABQPQBAtzwAgG08ACAkvQDgmT0AgOC8AAAjPACAXjwAsLK9ALC1PQDAjb0AwLc8AGA3vQAoC74AwPi8AABrvAAAADkA0L+9AOAuPQAA0TwAAB29AGBavQBAkLwAgN+8AGABvQAArDwAYCO9AOAqPQAgBr0AYAw9AKAPPQAArz0AAGQ8AADkuwDAHL0AAIM8AAB2vABAkrwA8Io9AEC/vQDAaD0AwM+8AHCpPQAAnLoAwCk9ADCVPQAAH7wAwGG9AAAAAACAQrwAABc9AABQvQCAgL0AYEM9AEC2vAAAvDwAwJY8AIA2vAAAmDoAQNk8AAAKvADgYT0AANa8AECvPAAAqrsAgHi8ADCZPQAAmDwAQMs8AIAmvACAMT0AIBu9AMBCPQAA8bsAABg8AEDNvAAAajwAsLM9AAApPACAebwAAHI7AACTuwCAmTwAQEg9ACAXPQAAZzwAgDw8AADAuQDAxD0AgAQ9AACguwAAbb0AAP67AIAoPACAUzwAQN08AIDbvADgM70A4Bu9AACMPAAg4L0AAFU8AEBnvQBgfb0AoDk9AACwOgAATb0AIGU9AABwPADA1zwAgGM8AMAfvQAAmLwAgKA8AIDJPABAkDwAgDM8AABtPACASr0AgHg9AOANvQCAeT0AwJ48AED5vACA0DwAQNq8AEDYPQCAaLwA4Bm9AIBgvAAAW7wAoBy9AAADvAAwg70AQHQ9AADxuwAAJbwAgBI8AIC1PAAAtLwAQKo8AECWPAAA6DoAcIy9AMDCvACgOL0AAEM8AFCtPQBA+rwAYD09ACAevQCABbwAELo9AIAFvQDgQ70AoFi9AIBSPAAAAjsAAL+9AOBvvQCAcj0AMNQ9AADIPABgAr0AYGW9AIApvAAAhDsAgIc8AABEOwCAMrwAcIi9AACHOwAAp7wAwIG9AABOuwAAfbwAwIu8AACTvABgDz0AwLs8AMAfPQAABrsAQLY8AGBaPQDQIr4AANO7AMBavQAA0rsAAPq7AABAPACAWjwAAHY9AIBxPABgYr0AgK28AMBAvQDA7bwAAJA6AADLOwAAyzsAkKm9AOBcvQDALj0AgH+8ACCuvQAAnTsAYCY9AADlPAAAFz0AALS6AOBTvQAAyTwAIEa9AADduwBAyDwAABw7AKDbvQCAR70AQEy9AIDivQBgXj0AYBQ9AAD4ugDA3zwAAP67AGBovQDAPD0AgLC8AMAxvQBgBb0AAJA7AAD4OgAApTsA4Gw9ADCIPQDArLwAACM9AABIPQCA+TwAAJE7AOCEPQAAG7wAALY8AECbPQDgGb0AALS6AMDFvAAAh7wAADa8ACBDPQAA0TwAICW9AMAdvQBAcD0AsIA9AOCXvQAAbLwAgCW9AGADvQBAA70AAIy7AEAyvQDgPb0AILI9AIA7vADghL0AIB49AMCXPAAQub0A8Ks9AIDBPQAAZ7wAgJQ8AABIvQCAxzwAoAU9AICePAAASjwAANI8AEChvQDApTwAgOK8AEDSPACAZLwAQMe8AEDjvABACj0AAGu8AIDRvACAoDwAcIi9AACgugAA6TsAoDG9AIDqPADAo7wAYES9AACBuwAAAj0AQKm8AABfPQCA27wAANA8AEDSvAAgsT0AgJU8AOA+vQAAMz0AoIa9AEDtPABgS70AAMW8AABgPQDAq7wAwAg9AEB0vQCwnD0AAK67ABCivQCAE70AwHi9AABOvACgAj0AgA48ABDxPQCA+DwAAJe9AEC5PACAHTwAgKA9AMBCvQAghr0AwKE8AACIugAAvrwAYA49AIBKPAAAKLwAgFQ9AOAavQBgRr0AgIw8AIDDPACAf7wAoJo9AOAjvQDAxT0AANS8APCSvQAAFjsAAPC6AGAHPQCAM7wAACM9AAAIvACACT0=","chunkHash":"e0f50f8e8ba0c04e56e5cec3beec447789532dbfa7cb0102f4cda4623840855a"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_shape_input(batch, ax=None, show=True):\n    #...\n    # 2. Attempt to visualize the mesh structure\n    try:\n        # If batch contains faces information\n        if 'faces' in batch:\n            faces = batch['faces'][0].cpu().numpy()\n            # Plot mesh triangles\n            for face in faces:\n                # Get vertices for this face\n                verts = points[face]\n                # Plot the triangle\n                ax.plot_trisurf(verts[:, 0], verts[:, 1], verts[:, 2], \n                                alpha=0.5, color='cyan', shade=True)\n        else:\n            # If no explicit face information, attempt to visualize local connectivity\n            from scipy.spatial import Delaunay\n            # Use a subset of points to make this computationally feasible\n            if len(points) > 500:\n                # Subsample points\n                indices = np.random.choice(len(points), 500, replace=False)\n                subset_points = points[indices]\n            else:\n                subset_points = points\n            #...\n```","range":{"startLineNumber":108,"startColumn":0,"endLineNumber":130,"endColumn":0},"embedding":"AADjOwCAyzwAYDA9AMCQvACggr0AIKa9AADlvAAAgLgAwH29AAASOwCAFT0AQIa8AAADvADgbL0A4D+9AIAgPQAA8LoAABk9AOAGvQAANzwAoCQ9AAC8ugBgQz0AYGa9ACBSvQAADrsAgDK8AGAMPQAgHT0A4Fs9ACAevQAA0rsAMKO9AMBEvQCQwb0AgIS8AMBEvQAAST0AQMi8AADBPABAvT0AwLK8AAD5uwDgED0AIBA9AACMOwBgCT0AQEG9ACA1PQAgUT0AAPW7AHCMPQDAIj0AwIO8AEAavQBAGj0AIJe9AAAIvABA9TwAQMw8AOBIPQDgS70AQMY8AEDmPACggL0AgCA9AIBcvQCgBL0AwCA9AACAOACgF70AAKq8AIAAPQAA97wAAFi8AADbuwDgf70AwF09ALDIvQAApLsAADK7AACLPAAALz0AAEw8AOBCvQDgjL0AELu9AAAQugCghr0A8JS9AMDePACAYT0AQB29AAB8PQDAsDwAoPc9AAA5PADQlb0AoBk9AMC4vAAAiDwAABE8AIAtvQAA2zwAQLM8AIAevACA/TwAYHE9AECWPAAwmj0AAO67ANCCvQBAwzwAgLU8AEDHPABgeL0AAMY8AACEPAAgLr0AAMq7AEAEvQBgSD0AAFq9AADxOwAAmDsAAEU8AAD3uwAATzwAAPG7AABYugCA8zwAgHi8AAAYPQBwp70AAAS9AGgWvgAAnrsAALo9AACougBA5TwAgAU9ADChPQAgTj0AAFq8AKANvQDgij0AoKu9AOChPQDArrwAAKY9AABAOQBggT0A4EY9AICbvQAAQL0AoIW9AIBbPAAgIT0AACA5AADDuwAgXD0AwG69AADHPAAAkTwAQGm9AAB6PQBAUr0AAB08ABCCvQDg5L0AoBe9ACBcvQCAyjwAMIS9AHCTPQBAozwAwKO8AOB2vQAgGb0AAM28AABcvACAszwAABK7AIAbPQDAJr0AgIw8ABCCPQCAhT0AgOA8AACGOwAAxjwAgDM8ACAjvQAABDsAwKg9AEDgvQCQgT0AwLO8AMC5PAAASrwAAMc7AAAYuwAA2DsAQIa8AADEuwAAlL0A4AI9AMBcvQAAWr0A4C89AADKuwCgYj0AAAE8AAD8OgAAGjwAQJw8AACsugDAiT0AQA29AIAcPAAATDsAgAi9AECLPQBgHD0AIAw9AIBaPACACz0AIHy9AACFPACALbwAAMu7AACwvABAoDwAQGg9AICgPAAA3bsAgH08AACQuQAAHLwAoDQ9AACZOwBA6DwAgEm8AACOPACgeT0AAFg8AGCGvQCA+bwAgG48AAC1uwAA/DoAgCg8AABYugBAlr0AYAq9AAApvADg+70AAAE9AICFvQAA2bwA4EM9AMCyPABgkr0AwM08AIBkPABAzjwAgPY8AAC2uwBAA70AgDy8AADougCAgj0AQOI8AACzuwCQgb0AgF49AIBnvABQqT0AgDQ9AAAQOgCAhLwAAKA7ABCqPQAA9rwAgJW8AABcvACAqbwAYC+9AIAxvAAQiL0AgBQ9AMCSPAAA+jsAAB48AIB4vADA1bwAAKW7AEBEPQAAnzsAIF69AAB0vABAK70AwNY8AACmPQDgLr0AoC89AIBlvADA/zwAoLM9AIBlPABA/rwAgHa9AEBzPQCAPDwAsJW9AKCDvQDwrT0AYKQ9ANCGPQAghr0AIDq9AIAIvQDgDj0AgOE8AAAvvADAEr0AwGK9AEC8PAAATDwAYHK9AEDcPAAAebwAAPi6AEC9PACABrwAQPI8AMAhPQAAjzwAANi6AAAnPQDAD74AgG28AIBBvQCAXrwAgPI8AOAuPQBgCD0AILg9AADAOADAvLwAQKy8AIBJvADAQL0AAI08AMCIPABA3rwAAMy8ACBrvQAACLoAgFc8AEDFvABA/zwAwA89ACBIPQCAqDwAAKS7AGApvQBADz0AAAO9AAAMuwAAFz0AAHw7AACevQDgJb0AADm9APDevQCAJD0AwBg9AADEugBwiz0AgHY8AGA/vQDAQj0AgAe9AADFvAAAQLsAAEA8AABlPACAVb0AADU9AKCIPQCA1bwAQIE8AECxPAAAILsAQI08AAA4PQBAqjwAQKI8AOBSPQDAl7wAAI28AAC4vAAAW7wAAOm7AACpPQAAUDoAwJC8AMCFPACAAjwAoFY9AHDzvQAA/LwAIF+9AIDYvACgdb0AAOy8AIBlvQDgur0A0OA9AAA+vACA4rwAgBu8AIBcPQBAjL0AoLs9ADCbPQAAEjsAgFs8AIATvQAAirsAQK48AHCJPQAAODwAQMY8AOCyvQBAaD0AAAe8AEA2PQBA+7wAAGW9AIBXvQCAZzwAANC5ABCBvQCgIj0AYCS9AAC7uwDAijwAILa9AACnOwAgB70AYDK9AIBtPADgWT0AYD+9AIAoPQBgFL0AgBc9AADVvADAeD0AQIg8AJCGvQCQgj0AgKu9AAA4PABAOb0A4HK9APCsPQCAAbwAAGI9AMBkvQDQnD0AAGG8AOCIvQDAyLwAgNO8AABqvAAAjrwAACI9AMDCPQBAjzwA4FG9AIBXPAAA5DwAkMk9AMCnvAAgKL0AgGI8AMD4vADAOb0AAA88AABIOwCAjLwAADC6ACBmvQCgtL0AgNw8AEAvPQCABbwAEK09AABCuwAgRT0AoCi9AABmuwBgVD0AAFC6AMCuPACA87wAQMs8AIDLPABA9zw=","chunkHash":"70fd880eb4bcca6508eb986fdccb1e91ee03dded7e0677f77ee29f91e2cba7b1"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_shape_input(batch, ax=None, show=True):\n    #...\n            # Create a simplified triangulation for visualization (not the actual mesh)\n            try:\n                # Attempt 3D triangulation (may fail for complex shapes)\n                tri = Delaunay(subset_points)\n                # Plot a small subset of the triangles to avoid overcrowding\n                max_faces = 200\n                if len(tri.simplices) > max_faces:\n                    face_indices = np.random.choice(len(tri.simplices), max_faces, replace=False)\n                    simplices = tri.simplices[face_indices]\n                else:\n                    simplices = tri.simplices\n                \n                for simplex in simplices:\n                    verts = subset_points[simplex]\n                    ax.plot_trisurf(verts[:, 0], verts[:, 1], verts[:, 2], \n                                    alpha=0.2, color='cyan', shade=True)\n            except Exception as e:\n                # Fall back to wireframe visualization\n                print(f\"Triangulation failed: {e}, falling back to wireframe\")\n                #...\n```","range":{"startLineNumber":131,"startColumn":0,"endLineNumber":150,"endColumn":0},"embedding":"AACoOgCA7jwAQAY9AIDIvADgZ70A8Iq9AMC0vAAAbjsAADO9AADXuwAAIT0AAF+8AAAbPADgcL0AIBi9AGBQPQBApjwAAAc9AIBwvQBA7jwAQO88AAC5OwAAZT0AYF29AOB0vQAAsbsAAJy8ACAWPQAAVT0AIE09AAAavQAAN7wAAKG9AEBnvQDArr0AAJG8AECZvAAALz0AgMa8AMCKPAAg0T0AoA29AABUPABAOT0AwEU9AEDHPAAAKT0AQCu9AEDyPAAA6zwAAMu7AEB9PQDgBj0AQI+8AHCNvQDAQj0A8JO9AABGOwBA4TwAgGU8AEBbPQDgFb0AwOM8AECzPADAYr0AoFI9AABCvQDAlLwAAEM9AECYvADA17wAQNq8AGADPQCA97wAALQ6AECiPACwh70AAJM9AEC4vQCAf7wAAEI7AIDDPADgFD0AwLE8AKAHvQBAW70AMJG9AACAuQDAKb0AIIu9AAB1PAAAJD0AoDK9AOBxPQCAejwAQAg+AIAPPAAQjb0AYAY9ACAcvQAAGDwAAD08AKA7vQAgBT0AAGs8AIAIvAAgET0AoBo9AIB/PAAQsz0AAEi7AIBqvQCAzzwAAKk8AECpPAAgVL0AgGI8AIAzPQDAtbwAAAa8AICyvADA5zwAoD+9AACIugAAITwAABo9ACAQvQAA3DwAQI+8AAAcuwBgKD0AgF68AGArPQAQr70AQMK8AGgGvgAArzsAgLs9AAAfvAAgOj0AAOU8ABC/PQDgOT0AYCK9AACIvACgtz0AkKG9ALDQPQBAuLwAYJA9AIAzvADwkT0AYA09APCLvQBAZL0AQCu9AAAgPQAA0zwAABw8AIBkvAAAzzwAoEi9AABwuwAAmzsA4GO9ACA9PQCgE70AgAA8ACBkvQCAz70AYB+9AKCQvQAAbzwAoF69ACCpPQAADD0AgCa8AIBtvQAA6rwAgHe8AAAWvQAAXzwAAEY7ACAkPQCAK70AAIC7AMBtPQBgPj0AACk8AECUPAAA+DwAAEA6ACA1vQAAfzwA8Ko9AODSvQBAMz0AQKO8AADgPAAAtzsAAIs7AIAGPAAAjTsAgEW8AIBkvAAgaL0AQDg9AMA/vQBgVL0AoBY9AADVuwBgPD0AADA8AADPOwAAlTsAgO08AIChPAAwjD0AwIe8AMCsPAAAsLoAAPe8ABCBPQBAyDwAwBE9AABQOwBAMz0AYGm9AEDbPAAAlDsAAE88AIANvAAAnjwA0J89AIAgPAAAgDgAoBQ9AAATPAAASLwA8IY9AAA6OwBAjzwAAL68AABHPABAcT0AwL08AIB2vQBANL0AAGm8AACIPAAAvrsAALY8AIATvABgab0AQOa8AAC4OgAw1r0AwKw8AJCXvQAA3LwAQGo9AABQOgDAsr0AgM88AECpPACAXjwAAB49AADOOwBA5LwAgA28AAAIOgCAlD0AQOY8AACJuwAAdb0AgHg9AAAGPADguT0AwBg9AAAHPACAJjwAAP47AIB3PQAA/7wAQOS8AACcuwCAr7wAQFi9AABGvABgk70A4BA9AIB4PAAAEDoAwMU8AABxvADA/rwAgEe8AOAlPQAA9TsA8Jq9AMCcvAAAtLwAgG48AGCQPQAgIr0AYJI9AECavAAAQTwAALo9AAC4OwDAtLwAEIS9AIA3PQAA/rsAUIW9AECEvQBg4D0AwL09AICbPQCgb70AwCG9AAAtvQCAED0AwIg8AAAyvABAML0AkIy9AEC2PACA1DwA4Fu9AICYPADAx7wAAC47AAAAPQAAVDsAAKo8AADLPAAATjwAAAq8AMCSPQAIDr4AABm8AKBcvQAAmbwAgPc8AIAMPQAAoTwAgI89AAAyPABAjbwAgB28AAASuwCgSr0AgAY9AAByOwAAOLwAQPi8AKByvQAAPDsAwLE8AAAkvQBA6TwAYAE9AKAZPQDAzDwAAKC5AMBTvQCgBz0A4AW9AADQOQAAszwAANY7AOCWvQDgPr0A4Aq9APDTvQBAJD0AwPQ8AAAsPADAXz0AAOS6AAAUvQAANT0AwPK8AMDpvACAUbwAQO88AIC7PADgPL0AQC09AICNPQCArLwAAJ48AEC5PACAbjwAADA8AAANPQDgHT0AwK08ACBYPQBAkLwAgF28AMD1vAAAXrwAAA67ANCgPQAAz7sAQJ+8AEDBPAAADDwAwFc9APD3vQDgEL0AgGq9AECZvADglL0AYAS9AOCOvQBQrr0AkNE9AICOvACA2bwAgAc8AKAmPQCAo70AQLw9AIBiPQAAMrsAAB09AAAivQDA/jwAANc8AKCEPQCAiDwAQAU9AADKvQDAez0AwJe8AEBlPQDABb0AgJO9AAA4vQAAYTwAAOm7ACBOvQBAwzwAQBG9AAD1uwAAIjsA8MK9AIBVPAAAy7wAQGi9AIAlPACQjD0AADm9AGBNPQCAMr0AgAg9AAAPvAAwoj0AgL88AMCIvQDgYj0AMLa9AAAfvABgFb0AgEu9AKC3PQCAZ7wAoA49AABpvQDgoT0AAI68APCfvQBAvrwA4BC9AECtvAAAPDsAwOc8ANCXPQBAiDwAQFa9AABBPAAAwzwAQNA9AIAavQCgR70AAPa7AIC5vABAHL0AAEM8AICHvAAAkrwAACi6AIBavQDAwb0A4A09AAD1OwCAirwAMNY9AADfuwBAhD0AoAm9AADEPADABD0AAF67AIDNPADA17wAoD49AACMPACADTw=","chunkHash":"e5ee505ed90f723088289104a0c0bcdf0e00a2cdd34aa9ffaae628c225ea4fac"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_shape_input(batch, ax=None, show=True):\n    #...\n                # Calculate nearest neighbors for wireframe\n                from sklearn.neighbors import NearestNeighbors\n                nn = NearestNeighbors(n_neighbors=4).fit(subset_points)\n                distances, indices = nn.kneighbors(subset_points)\n                \n                # Plot edges between neighbors\n                for i, nbrs in enumerate(indices):\n                    for j in nbrs[1:]:  # Skip the point itself (first neighbor)\n                        # Plot edge\n                        ax.plot([subset_points[i, 0], subset_points[j, 0]],\n                                [subset_points[i, 1], subset_points[j, 1]],\n                                [subset_points[i, 2], subset_points[j, 2]],\n                                color='cyan', alpha=0.1)\n    except Exception as e:\n        print(f\"Error visualizing mesh: {e}, showing points only\")\n    \n    # Set labels\n    ax.set_xlabel('X')\n    ax.set_ylabel('Y')\n    ax.set_zlabel('Z')\n    #...\n```","range":{"startLineNumber":150,"startColumn":0,"endLineNumber":170,"endColumn":0},"embedding":"AIByPACAFD0AQNc8AMAbvQDArb0AkMO9AAAjvAAAbrsAUIO9AAB2vADAKD0AAGK8AADCuwDgUr0AQBa9AGAhPQBgFD0AgGw9AOBcvQBAjzwAQJA8AAC0PABgcD0AAGq9AEB6vQAAVrsAAPK7AKBkPQAgKD0AQIo9AGAavQAA5bsA0J29AAAkvQCQwr0AwKe8AICOvABAvjwAADu8AECBPAAAfT0AYEK9AAAEOwAAGT0AwDA9AMCwPAAA3DwAoAy9ADCNPQDgRT0AgEC8ABCMPQDgFT0AAMu8AKAtvQAQmD0AwDC9AABUuwDgXj0AgLe8AGCaPQDgaL0AACU9AAD1PADgPr0AAL88AACIvQBgTr0AIEQ9AAB7vABAi7wAQMG8AEDuPAAAhDsAwKO8AIDYvADAs70A4Ho9AJDFvQDA47wAAGm8AIDiPABA7TwAAB48AIBHvQCQib0AIHG9AIAIvADgMb0AAKO9AICFvADgGD0AgBC9AABDPQBAmzwA6Bg+AAByvADgwr0AAP87AEAsvQAApjsAAAAAAEAevQAAYzwAAIK7AECBvABAtDwAoB89AADGOwAQjT0AAJM7AMBzvQCAmTwAgL08AIDdPAAgfr0AAK07AACqOwAA2rsAQL08AACJvACAbD0AoDW9AACYvAAAOjsAgHM8AEDrvAAA3jwAAIW8AADluwBART0AgHu8AIAMPQCAtb0AgGi9AOD6vQAA8bsAUMU9AMDvvAAgZD0AQCE9ABCyPQDgJD0AYHO9AIDavACAsz0A4GW9ANCbPQDgBb0AYJs9AADGOwDQkT0AgIc9AHCMvQAAJr0A4DC9AIA+PQAgBD0AgEu8AAAgOwAAZz0AgHe9AACtPAAAqDwAwGm9AABDPQCAE70AAGo7ACB3vQAA470AADK9AMCTvQAAUjwAwCu9AACKPQBA+jwAQJm8AJCFvQAgB70AQJi8AEDWvACAvjwAwAq9AEDyPACgAL0AAJ48AIBRPQAgiz0AQJo8AAD4ugDAqzwAQKO8AKAAvQBAlDwAsI89AFC0vQDgFj0AoAG9AED4PAAAFrsAACQ7AEAOPQBAxjwAgKW8AMC/vAAgBL0AACU8ALCovQAAKb0AQEY9AAAQOgCAvjwAIDc9AEC3vACAWzwAAKE7AIBJPACwhz0AwNm8AIDPPAAAmrsAAOC8AEB/PQAAKD0AoCg9AAAQPAAAUD0A4Em9AKAoPQAAqDoAAAi6AICEvADAKj0AgJo9AAD/OwAAQjsAAM07AADsOgAApbwAoDU9AADBuwAAlDsAgBA8AADsPACgcT0AAOI7AKBHvQAgLr0AAIA6AAAougBAjrwAYBk9AADEugBgRr0AQOK8AECNvABQxb0AgIk8AMBCvQBACL0A4Hw9AABVvAAQj70AwL48AAAkOwAAZjwAIE09AAAwuwBA4bwAAEC7AAAgvADAUj0AYAs9AAASuwDwoL0AUIM9AIB1vABw3z0AALg8AAAEvACATTwAAOS6AHCKPQCAlbwAgOO8AIBmvADghL0AYF69AADKuwBga70AIC09AABGPAAAQLoAwIw8AACQuQCAMb0AgNk8ACBUPQAABDwAwJC9AIBfvADAC70AADI7ACCnPQCAer0AADA9AACVvAAAjLsAYLc9AIA/vACgNL0AYFm9AKCUPQCAKLwAwKq9ACBdvQAQtT0A0J89ACCIPQDAgb0AABW9AABYvAAAVj0AAPw7AGAIvQAASrwAgHO9AABsPAAAfzwAgDK9ACANPQBAGL0AAPC5AOAWPQCAWTwAABs8AAApvABA/jwAQO68ADCQPQDQH74AAJ28ABCCvQAAibwAYG09AACWOwAAaTwAgI49AACpuwAA7bsAwNG8AACsOwAAPL0AgNY8AADTOwDA1bwAwLq8AEBUvQAA2DoAgIE8AEA0vQDgDT0AwPI8AMAIPQDA+jwAgDm8AOBYvQAAaDoAgMe8AMCzPADAUj0AAOy8ADCYvQDgNr0AYGC9APC5vQCAET0AALY8AAC9OwCAJT0AAJ07AKBFvQBANj0AgF+8AOAvvQAACLoAAPk8AECVPACAVr0AwEw9AHCBPQDAv7wAAOg6AIAQPAAA5jwAgKE8AMAKPQBgDT0AgFs8AOBwPQDgJL0AQAq9AEDevACACLwAACy7AMB/PQAAbbwAAGw7AECYPABAvzwA4EQ9ADDnvQAAzbwAIAe9AAAQvQAAaL0AAC+9AGBFvQBgvb0AgLU9AAD4OwAA9LwAgHM8AMBwPQDwnr0AoJw9AHCQPQBgBb0AgK88AKAEvQAAMjwAgGY8AOAyPQAAHrwAwIo8ALDXvQAATj0AAIK8AMAcPQAA5bwA4Ga9ACBjvQAAhDoAAAA6ACBvvQCgOT0AgFG9AAAKuwCAtDwAEI+9AMDNPABAIb0A4C+9AADNOwBAYT0AgKq8AKAWPQAgLr0AQBk9AMAJvQDgdD0AAPs8ACBpvQDQhD0AgJq9AAChuwDgbL0AID29AACmPQAAibwAQFI9AOBovQAAXD0AgGe8AKB8vQCAEr0AQNS8AIAYvAAAMDoAAHa7AABfPQCA2DwAAF29AECLPAAAxjwAAOQ9AADmvACAFr0AQIS8AAADvACABr0AgG88AACyuwBAg7wAALq7AEA1vQCQvb0AwCc9AAC/OwCAlrwAwJc9AIB/vACgYz0AQJ28AEDKvACgGT0AAA88AMAFPQBACL0AANg8AMBxPQBAPT0=","chunkHash":"04c23d2b9d5d88dc318d85bb82d8e01d3c1a153d63ccb3281fb15746ce72b338"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_shape_input(batch, ax=None, show=True):\n    #...\n    ax.set_title('Shape Model Input (3D Mesh)')\n    \n    # Set equal aspect ratio\n    max_range = np.max([\n        np.ptp(points[:, 0]),\n        np.ptp(points[:, 1]),\n        np.ptp(points[:, 2])\n    ])\n    mid_x = np.mean([points[:, 0].min(), points[:, 0].max()])\n    mid_y = np.mean([points[:, 1].min(), points[:, 1].max()])\n    mid_z = np.mean([points[:, 2].min(), points[:, 2].max()])\n    ax.set_xlim(mid_x - max_range/2, mid_x + max_range/2)\n    ax.set_ylim(mid_y - max_range/2, mid_y + max_range/2)\n    ax.set_zlim(mid_z - max_range/2, mid_z + max_range/2)\n    \n    if create_new_fig and show:\n        plt.tight_layout()\n        plt.show()\n        return fig\n    \n    return None\n#...\n```","range":{"startLineNumber":170,"startColumn":0,"endLineNumber":190,"endColumn":15},"embedding":"AICaPACARz0A4GA9AADIvACwmr0AQKa9AADuuwAAALsAgFy9AAAgOgDAqjwAgI28AADiuwCgVr0AAFe9AKAxPQAA9DoAQCo9AAAHvQAATDwAgDg8AABAuQDgLD0AgO28AJCOvQAATbwAABq8AEB5PQAAgz0AAKk9AKAXvQCAvbwA0Oq9AMAavQAAwb0AQAO9AGBXvQCAzzwAAGo7AABDPACQlD0AwPm8AAAwPACAIz0AICg9AABRPAAgOz0AQMu8AIAiPQCgST0AAIo7ACAgPQBAUT0AgGy8AEABvQAgnT0AwE29AAA+vAAAET0AgJY8ALCMPQBgdb0AQAQ9AMCDPADgWL0AAOk8AMCjvQCAIr0AQCM9AGAAvQAAILwAAKy8AECkPAAAjLoAgDa8AADHuwAQuL0AMIo9AEC/vQAA1LwAAK+7AADgPADA/zwAgMI8AAAbvQCAA70A0Im9AABOOwDAVr0AwJW9AIClvAAA+TwAYAa9AEBTPQAAMTwAEAc+AADwuQCwpb0AwMw8AED/vACA8TwAAOA5AADZvABAOT0AAME7AIBTvABgBD0AgG89AAD3PABAiT0AgBI8ACBivQBAuTwAAKY7AACwuQAAbr0AgIg8ACAOPQCgF70AAIC4AICxvACgST0A4CG9AAAGuwBAyTwAADE8AMDavADAoDwAgBi9AAChOwDAnDwAAAg8ACB6PQBwwb0AIE+9ALAQvgBAtLwAkLY9AAAEvQAgaT0AwDs9ACCdPQCA+jwAIE29AEATvQDQsj0AIJ69AIClPQDgAL0A8Js9AIBevADALT0AYEg9ADCCvQAAV70AgE29AMBhPQAAuzwAgGQ8AIAOPADAaD0AQGG9AADIOwAAAD0AAHq9AACAPQBA2bwAgDs8ACCKvQDA270AoAm9AIBVvQAAojsAoJi9AKB5PQCAXjwAABG9AEAuvQCAAb0AAIy7AICtvACAyTwAgMe8AEAaPQAAJ70AAFi7AEDaPAAQlj0AQAE9AACMugAAfDwAADK7AICEvAAAuTsAsKk9ALDfvQCgMD0AwKe8AEAjPQAAmzwAAMs8AIB0PQCAezwAQO28AIAtvACgT70AgCs8ACBwvQBgfL0AwD49AAB4ugBA5DwAgDM9AIA6vAAALzwAgDc8AABYOgBAnD0AoAq9AMCvPAAA4DkAAJ28ADCuPQAAezwAYF09AAC0uwCgZT0A4B69AECIPAAA6zsAgCA8AAAoOwCAvzwAoLs9AABBPAAAnbsAwNU8AADAuQAAVLsAQPA8AMD4PACA9zwAAKu7AAAuvAAgcz0AAEa7AEDFvACgSL0AgAC8AADbOwAAkDsAgAs9AAB8vAAghb0AYDK9AICpPAAg2L0AgOs8AOBkvQBgU70AgDY9AABIOwDAlL0AYCQ9AMCUPACAZTwAgIQ8AACDuwAAdbwAAPc7AACIugAAPD0AoAQ9AIACPACgU70AQIw9AADbuwAgsj0AgB48AEDPvAAAFjwAAPm7AICjPQCA5LwAgLu8AACCuwBAkrwAIGK9AMCBvADgib0AAD49AABguwAAVzwAAF08AIA9vAAAgrwAgOE8AIDnPAAAFDsA4Em9AIB0vAAgQ70AQIw8ACCNPQCAYb0AIAQ9AACGvAAAojwAEK09AACvOwBgE70AAHG9AIBfPQCAqLwAEMa9ACApvQBQoT0A4Ks9AKBqPQDgYb0AYAa9AAAHvQDA4DwAALA8AAB/vACAgbwAoHu9AADwOgAAwLgAAFO9AADLPADA3LwAQIq8AIB7PABA3jwAwB09AACVPAAABz0AALi7AGBePQBwIL4AwL28ALCSvQAAC7wAAAs9AAC4ugAgFD0AIIQ9AAA7vADA6rwAwOO8AADKOwBAB70AgEk8AAD0uwCAvrwAwKa8AKByvQDAs7wAwA49AMBWvQBAvTwAQC49AADFPAAA5zwAAJe8AMA8vQAAEbwAIAu9AACkPABA2jwAAPm7ABCuvQAASb0AgD29ADAAvgAgKD0AACI9AACpuwCAeTwAQJW8ACBUvQBwkj0AAEy8AIC1vAAAvrsAQOc8AMCSPADAlbwAYFI9AKCEPQAAx7sAABs9AGBePQAAvTwAAHk8AOBiPQBgEz0AAOA6AOB1PQAgHL0AAIO7AABAuwAA7TsAwJO8ACAnPQAAtLoA4Ca9AACYugCABz0AAJE9AKDbvQDAk7wAwIG9AECovAAAKb0AgOS8AIBlvQCgr70AYMk9AMCWvABAyrwAgAc9AIDkPACAo70A0KQ9ALCnPQAAPrwAgHc8ACAsvQCAvjwAQII8AIAfPQCAHrwAAEw7AICJvQCABD0AAO67AOBXPQCAmrwAwE+9AOAKvQCAZTwAALO8AOA+vQDgDz0AIB29AABquwBAjDwAcI+9AAAxPACAr7wAQEm9AADzuwCgGz0AAOq7AIBhPQCA3bwAwMg8AAC2uwBwkD0AAAA8AAAyvQAgZD0AwI+9AACSuwDAcb0AoBq9AEBqPQCgEr0AQGk9AEB3vQDw3z0AANk7AABwvQDAkbwAoC+9AOAgvQAA+rsAAIA4AHDWPQDAIj0AwGW9AMCZPAAAfDwAkO49AOBNvQAgWr0AAF68AMCSvAAA9rwAQMs8AADmvAAAirwAALA8AEAkvQBAa70AID89AACzOwAAsLwA4Ng9AICXvAAAqT0A4Aq9AADVvAAAqDoAAOg6AICRPAAAIrwAwC09AMAHPQCA7Tw=","chunkHash":"2fd9f1ea394053b49d9de9b16f357f3f353ca9c24712731702f9264ac08760ab"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_lowres_input(batch, ax=None, show=True):\n    \"\"\"\n    Visualize input to the lowres texture model.\n    \n    Args:\n        batch: Batch from the lowres texture dataloader\n        ax: Matplotlib axis to plot on\n        show: Whether to show the plot\n        \n    Returns:\n        fig: Matplotlib figure if show=True\n    \"\"\"\n    # Extract volume from batch\n    volume = batch[0][0, 0].cpu().numpy()  # Take first sample, first channel\n    \n    # Create new figure if no axis provided\n    if ax is None:\n        fig, axes = plt.subplots(1, 3, figsize=(15, 5))\n        create_new_fig = True\n    else:\n        axes = [ax]\n        create_new_fig = False\n    \n    # Get volume dimensions\n    depth, height, width = volume.shape\n    \n    # Choose three representative slices\n    z_indices = [depth//4, depth//2, 3*depth//4]\n    \n    # Plot each slice\n    #...\n```","range":{"startLineNumber":193,"startColumn":0,"endLineNumber":222,"endColumn":0},"embedding":"AGAsPQBADD0AwIG8AGBAvQCAe70A4Ga9AED2vACACrwAAG29AIAZPAAASjwAAPC7AMAMvQAAsLsAAB88AECmPACAyTwAEJQ9AIBzvAAATDwAAGY8AABTvQAAdDwAAMa8AABYOgAA9bsAAOC5ACBQPQDAKz0AwHw9AGA7vQAAvLwAIJy9AJCGvQCwpL0AIGC9AAAeOwDAnTwAQL+8AMCrvADAdD0AQLu8AACpOwDwhz0AsMA9AMA+PQDgTD0AAAu9AIAPPQBADj0AAJ68AEBkPQBAaj0AALa8AEAHvQBgkD0AoA+9AAA1vABA0DwAgEY8AGARPQAAg70AgEs9AIBePABAgL0AwLk8AFCCvQDgG70AAJw7AECDvADA4bwAgDS9AIAhPACAl7wAgD88AAC4OgDAU70AoBg9AJD+vQBA8bwAALQ6AGBePQAAjLsAAAK8AKAbvQAAF70AAD67AAClOwAAXDwA0K69AECTPACQnD0AABK9AECDPQAAYLsAgLY9AACAOgCAu70AAEA9AMC/vAAAaDwAAM08AOAcvQAAiDsAQMg8AADAOAAA0TwAgNw8AOAHPQBQkj0AAGU8AABXvQCgBD0AgL+8AAB+OwBArr0AAPi8AECjvABA6rwAwKG8AMAsvQAAUT0AoBS9AACsOgAAEzwAAGC6AADjOwAAiDsAQLg8AIB8vACwqT0AAAe8ACAiPQBQ0b0AgEK9AID6vQCAKDwAgFg9AAAnvABAUT0AwLo8AFCUPQAAjLsA8JW9AAC/OwBwAD4A4Cu9AMAqPQAA8LoA0JU9AACBPADAhT0AAIc9ADDBvQAgar0AwDm9APCpPQDA2TwAgBI8AGAOvQAgAz0AwHC9AMB7PQDAvDwAkJ69AKBgPQCwpL0AQEE9AGBzvQCQmr0A0IG9AACYuwAAwjsAOAO+ADCIPQDAmDwAABC9ACA+vQDAxbwAAEQ7ACB9vQCAfLwAAHI8AADEPACAS70AwPG8AABAOgBghj0AYCe9AAChvABgCr0AgIA8AMD3vAAAzjsAIK49AJCSvQCgWj0AgIc8AEBMPQAAETwAgGg8AAC2PQAA+DsAIG29AADhOwDAzDwAADS8ACAIvQBAFb0AYCU9AIDHvACAZD0AAAo9AIAVvAAAHjsAAPA6AECjvAAANz0AALi7AACIuwCAkLwAQFG9AIAuPQAApDwA4Eg9AACnvABAID0AMIq9ACBLPQCAGDwAAMw8AEC5vAAALz0A8K49AAAYPQBAn7wAQI88AIAsvABABT0AAME8AADzOwDAj7wAALa7AADkOwDgbj0AALC6AGA8vQAwwb0AAAU9AACGvAAACDsAgGU8AGAdvQDgur0AAJu8AAD8OwDg9r0AICI9ADDYvQBA4bwAIFA9AAC2PAAgRb0AALU8ACAMPQAAvLoAQKU8AAAAOwAQgr0AgCc9AIC4PAAAADgAMIA9AADzuwCAjL0A8J09AMCuPADA7TwAAEi8ACCiPQAAEzwAwBS9APCaPQCAOzwAgFi9AECNvABAr70AQG69AACIuwBQob0AoHo9AABdPACAxbwA4Em9AEC4vAAACDsAwIS8AAAEPQAAezwAAJW9AEDxvABAJr0AADo7AAAePQAA6bsAYEI9AECMPAAAMbwA8Ls9AACwPABgKL0AwK29AGBgPQCAjjwAYBW9AABeOwBwrT0AICU9AMC5PACAwbwA4FC9AMCWvQAAYjwAQLg8AOABPQAA/7sAYJ29AIBQvADAAL0AoBi9ACALPQDAjTwAwKu8AAA4OgCAT7wAwHg9AAD+OwCArzwAwPk8AEAxPQBg5r0AAEg6AICRvQCAZzwAwDk9AOAlPQBAZj0A4HM9AMCxPADAq7wAwAm9AOA4vQCAELwAAE47AIAovAAAybsAQMm8AOATvQAAzLwAYBQ9AOBvvQBgJD0AwG89AAChPADgFT0AgBy8AADFvADAwDwAAPQ7AABcOwDQiD0AALy6AAD/vQCAuLwAUIy9ANCSvQAgez0AADQ8AKAjvQBA7jwAoBi9AADjOwCAfz0AgKS8AKAbvQAAJb0AQMs8AABDvAAAP7wAQP48APCAPQAALL0AAIE7APCcPQDgIT0A0Is9AADXPADAUj0AwOE8AOBhPQAABLwAgLo8AOBIvQAAeDoAIAu9AMBIPQBAh7wAwIi8AIAGvACgPz0AwIw8ANCsvQCABb0AIJq9AAACvACA6rwAAPE7AMDnvACgX70AQLs9AMDdvADAvbwAIEo9AEDOPADA3rwAMNg9AHDOPQDAsbwAABq7AAAquwCAJzwAAJS7AACouwDAoLwAAKW8AICWvQCA8DwAgGS8AECDPABAV70AwKg8AIACvAAApDoAQEW9AADNvAAAyjwAQOC8AAC5uwAArrsAwJ29AMA6PQCAFD0AYEu9AAD6uwBApDwAwMW8AABXPQAAPrwAAMQ7AMC7vABwlD0AALs7AGAWvQDgbz0AoBm9AEBFPQDA2bwAAN68AIBxPQDAz7wAQC89AABAvABAdD0AAGs8AKBlvQDA4bwAwDK9AIBEvACgC70AAMY7ABDEPQCAwTwAAL29AIAvvABAUj0AYLE9AICvvACAt7wAwOO8AICWvAAAXjwAgCk8AIA/vACAUbwAAOg6AACEvQDwwL0AQEA9AIB5PAAAP7wAQDA9AMCAvAAg1D0AwLm8AECcvAAASrsAwMk8AABnPACgJr0AQGo9AMCoPABAkz0=","chunkHash":"4214d6f1d1a91e1baf6530c4258219bd3f773e8f73d93470ea7feefec9ba9771"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_lowres_input(batch, ax=None, show=True):\n    #...\n    for i, z_idx in enumerate(z_indices):\n        if i >= len(axes):\n            break\n            \n        # Get the slice\n        slice_img = volume[z_idx]\n        \n        # Normalize for visualization if needed\n        if slice_img.max() > 1.0:\n            slice_img = slice_img / 255.0\n            \n        # Convert from [-1, 1] to [0, 1] range if needed\n        if slice_img.min() < 0:\n            slice_img = (slice_img + 1) / 2\n        \n        # Plot the slice\n        im = axes[i].imshow(slice_img, cmap='gray')\n        axes[i].set_title(f\"Z-slice {z_idx}/{depth}\")\n        axes[i].axis('off')\n    \n    if create_new_fig:\n        plt.suptitle(\"Low-Resolution Texture Model Input (104³ volume)\", fontsize=14)\n        plt.tight_layout()\n        if show:\n            plt.show()\n            return fig\n    \n    return None\n#...\n```","range":{"startLineNumber":222,"startColumn":0,"endLineNumber":249,"endColumn":15},"embedding":"AEAxPQBgej0AAIC5AGAkvQDAnr0AAGy9AECavAAA0LoAIHm9AKARvQDgJj0AAMi7AKARvQAAvrwAAKW7AMAsPQAAyTwAgFI9ACCavQAAWDwAgOs8ACA1vQAgCD0AoGa9AICyvACAsrwAgC08AMBKPQCglz0A4H89AAAAOgDAybwAwJS9ACAvvQBwvr0AgFS9ACApvQAAUTwAANa7AADwOwBAfj0AgPC8AICGPACA1DwAsKc9AJCAPQAAOz0AABe9AIAiPQCATDwAAJe7AMBYPQAgeT0AAHW8AMDyvADQjD0AgD29AAC8uwAABLsAwEQ9AIBcPQCQir0AAHg9AAD4OwBAIr0AAN48AGCIvQCAQL0AIAg9AAC3vABgBr0AAM68AABwOgCAKTwAgDc8AADIuwBATL0A4DQ9AFDMvQDgW70AAAA7AHCIPQAAkLsAgKW8AADbvACABb0AgDq8AAAgugAAzLoAUL+9AABCvABgmD0AgB69AIAKPQAAirwAoLY9AMDnPAAQwr0AgK88AAAAvQAAezwAACE8AMDfvABAlDwAQMQ8AADwOgCAvTwAgDM8AIDiPADgnj0AAEA7ACB3vQDAEj0AICu9AABWPACger0AwD29AADSuwCAXL0AACy8AAC6vAAAbT0AYF29AEANPQAAojsAAMW7AABYOgAAIzwAAAAAAICzvACAcD0AAFG8ABCGPQBwy70AwHe9APgEvgDAAT0AgK89AACvvAAwhT0AAJo8AKCXPQBAGj0AUI69AAASvAAA6j0AIJq9AGClPQCASLwAwJQ9AMD0PADAnj0AwEw9AJC9vQAAj70AQAG9AHCePQBAKT0AADU8AIC/vACAGD0AQGC9AGBgPQAArDwAQJq9AOA+PQAALL0AANg7AEB2vQCAor0AoIu9AKAvvQAAarsAsNS9ALCJPQAALzwAsKW9AMCOvACABL0AAJA7AEDgvAAAYDsAAFi6AMBCPQCwhL0AAF08AACQuwAAFD0AwMm8AAC4ugCAGbwAABy7AAAhvQAA1zwAwHs9ANCivQBgAT0AAE88AIAyPQDA0TwAAIU7ADCWPQAgNT0AIBC9AICQvABAsTwAACQ7AOA7vQBgJL0AgAU9AID8vAAQmD0AgGM9AADyvABAvTwAwIY8AABZvABQjj0AAOq7AACBPADgFb0AAAi9AECbPQCAMT0AcIA9AECAvAAA1zwAUI29AACAPQBAlzwAQF89AMD5PAAAfTwAIJM9AIAjvADArzwAAI48AECRvAAA8jsAQN88AACAuAAAFjsAAN67AAAJvADgHT0AAFI7ABCMvQCgob0AAKo7AEAYvQBAqDwAwK88AMC+vABAvL0AAOK8AICzvABA070AwPw8ABDCvQCAtbwAYEo9AIA9vACws70AAOU7AIAGPQAAcLoAwAw9AABzPABgYL0AwCc9AECNPADAQz0AUKs9AAAKuwDgnb0AAIA9AOA3PQCANz0AgI28AAB1PQAA9jsAAK28AABiPQAAFj0AoCy9AAAuOwBgIb0AQDW9AAC0OgCAo70AwE09AIA9vAAAwrsAgB48AOA2vQAAoLkAQMu8AIB4PAAAHLsAYJm9AAD4OgAASLwAQIA8AMABPQDAX70AQEk9AIDjPAAAdzwAsJs9AOACPQCA4rwAIHW9AABoPQAApDsAQAG9AEDHvACgtj0AoIE9AEB2PQCgdL0AwPy8ACA3vQDA/zwAgMM8AMC5PAAAIDkAQIW9AAAKOwCAiLwAIBO9AMBhPQAAvDoAwLG8AIAJPAAAezwAAMU8AACQOQDAST0AQKe8AOAVPQAA9r0AAEC5AEBhvQBApzwAoC49AACTPACADj0AAAY9AIAnPAAACb0AAPq7AACfvABAn7wAANy6AAAUuwAAojsAALS7AIBkvQCAX70AwDo9AIDkvADAQT0AQHQ9AABxPAAAGT0AgAM8AGABvQCAprwAADq8AMCHPACwmz0AQJG8AJCpvQAgUb0AYGi9ANCkvQDAaz0AgOc8AIAqPADA5jwA4AC9AECcvABAaz0AwIW8AMDDvAAgJb0AgIc8AIAsPABAZr0AQKQ8AKBlPQCA17wAwL88AMAePQAAgT0A4Ek9AEAlPQBgOj0AgAg8ACAcPQCAC70AANA6AAAovQCASzwAAPI7AGAbPQAAhLwAgJu8AABdvAAAtTsAwCo9ABDZvQDAlbwAkIC9AMC/vADAM70AACi8AMAqvQBAxr0AoMQ9AIAfvABAhbwAgBc8AEDPPACgab0AoK09AACnPQDAF70AgDA8AMC8vAAA8DwAAGK8AACpuwDAqzwAQM+8AKCMvQBgET0AAMU7AIBjPQBA4bwAgEW8AIB5PACAn7wAIFC9AEDxvAAAEzwAwI68AICBvAAAVrsAgMa9AADCPAAAsbsAIKW9AAAqOwAA6zsAAGW8AIBmPQDgFL0AAPC7AIAfvABAuTwAQJQ8AEDIvAAAYD0AIDS9AADSuwCAu7wAIDm9AIBYPQAANbwAgCo9AMC6vAAAlD0AwA89AHCAvQCA8LwAQOS8AADBvADAX70AAOm7AAAoPQAAgrsAIH29AADSOwDwxz0A4Pc9AMDRvAAAhrwAgEm8AOAgvQAA9bsAAEs8AACquwBAj7wAAPK7AKACvQAg3b0AwCw9AACnOwDgF70AcKA9AIAgvABwnD0AgMu8AIAevADAvLwAIAw9AABoPACADb0AALQ9AEBTPQAAkTw=","chunkHash":"df5408b4788ef89a414cc05f7b486d98f5803de4a0eb49dd881aaae0d14d094c"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_highres_input(batch, ax=None, show=True):\n    \"\"\"\n    Visualize input to the highres texture model.\n    \n    Args:\n        batch: Batch from the highres texture dataloader\n        ax: Matplotlib axis to plot on\n        show: Whether to show the plot\n        \n    Returns:\n        fig: Matplotlib figure if show=True\n    \"\"\"\n    # Extract a contrastive pair from batch\n    view1 = batch[0][0, 0].cpu().numpy()  # First sample, first channel, view 1\n    view2 = batch[1][0, 0].cpu().numpy()  # First sample, first channel, view 2\n    \n    # Create new figure if no axis provided\n    if ax is None:\n        fig, axes = plt.subplots(2, 3, figsize=(15, 10))\n        create_new_fig = True\n    else:\n        # If only one axis provided, we can't show all slices\n        axes = [[ax]]\n        create_new_fig = False\n    \n    # Get cube dimensions\n    #...\n```","range":{"startLineNumber":252,"startColumn":0,"endLineNumber":277,"endColumn":0},"embedding":"ACBQPQAA+DoAAJC5AIBbvAAglr0AwH29AEDKvABAg7wAgAm9AEDvvACAqTwAACi7AADYOwBAPL0AQJe8AMAWPQCARrwAEJ09AIAtvAAAZrwAABO8AIDVvACAJzwAwLi8AIDyvAAAGDsAgKu8AJCnPQDAdT0A4Gc9AOBbvQCA0rwAYEa9ACBMvQDwxr0AoIi9AMDMvABgYj0AgCa8AAAovABApz0AANC7AACAuwCQpz0AIIs9AMDxPADgED0AIC69AAAEPQBgZj0AAKA7AIB9PQBA4DwAAE68ACAlvQDAWz0AgDa9AIA7vAAAqzwAAAo8AADMPAAwib0AgNo8AAB8uwDAab0AAMC6AAA0vQBAEb0AAIQ8AIC3vABA6bwA4Cy9AACEuwAA0LwAAJ27AADHvACAar0AYGA9AACzvQDgN70AAAe8AGBxPQAAuDoAAGA5AAD5vACA5rwAgIG8AADVuwAAArsAUIu9AMDpPACw0T0AwIG8AMA7PQAA+7sA0Kg9AIDovAAwqb0AwO08AMCDvAAAlDoAgBE8AEBivQAAljwAIFU9AECpvABAqzwAQHc9AMDyPACAIj0AAAQ8APCIvQDA4DwAwKe8AMCIvACAn70AACe8AADWvABA/bwAgC+8AIAbvQAAaT0AQBK9AICPvAAAYLsAgIW8AABgvADAlzwAAAAAAACROwCgmD0AAGS8AOA2PQBg170A4D+9APDnvQAAeLoAIFA9AMCivADgnT0AAB47AJCHPQAApTsAYIS9AIAsPACg1D0AQCa9ACAdPQAAE7wAgIQ9AECQvACgRz0AIIk9AGDKvQAA/rwAAHW9AGCJPQCgID0AANU7AOAgvQAAIz0AcIC9AEApPQAgGT0AAIa9AEB6PQBgyr0AgDk9AIBbvQCAsL0AAIu9AADwOgCAQ7wAsOe9AMC1PQAA4TwAwPy8AEB4vQDgUb0AANu7AAA0vQAA7LoAIBc9AOArPQDAD70AwPG8AAA8vABAXT0AANa8AAAlvAAAqLoAABA9AECgvABArTwAUIc9ABC2vQCAjD0AoAg9AMDdPAAAGbwAQMM8AHC8PQAAizsAwKC8AADQOQAAvLoAAG88AIC6vACgFr0AwDI9AICYvAAgYz0AwPg8AACkvAAA2LsAACm8AIDjvADAWT0AACi6AAAcuwDAA70AgP28AKAHPQAA2DwA4FM9AADCOwAgET0AYGW9AABAPQAAgTwAAJg7AEDAvADgOD0A0LM9AECFPADAjbwAgIo8AADnuwAgGz0AgD88AIAXPACAQLwAAJm7AABwugBgJD0AAA47AAAvvQBAsL0AAHY8AADGOwCAorwAQDg9AOBVvQDAx70AgO28AACVuwCg270AABo9ALDivQCA/rwAADI9AKAFPQCgZ70AAN08AICvPACAzTwAgGA8AACIOwAwk70AQNo8AMDHPAAAEDwAIHI9AIB/vABgd70A8Kw9AKAPPQCAmDwAAAC7AAB7PQAAbDwAwAK9ADCpPQAAWjwAsJm9AICGvABQmL0AoJi9AAClvABwor0AYIM9AADfOwAAmDoAAGq9AIB0vAAAkzwAAAu8AOA5PQCAvTwAsJW9AEArvQDgBb0AQIO8AEB1PQAAXLwA4GE9AAAQOwCAHzwA4L49AIAYPADAgbwA0Nq9AKA+PQDAgDwAgD29AADwvAAQnT0AoDA9AIAAPAAAt7sAwNe8AEBJvQAAgbwAgAo9AABhPAAADbwAgKS9AACIuwAA/TsAwN+8AACHOwAAtDoAwIO8AADwuQAAQDkAYE89AACAuwBAujwAAP48AEAePQBYD74AAIW8AGCKvQCARjwAAEA9ACBuPQBQhD0AoKA9AADROwBgOL0AQDe9ACATvQAA1bsAQA09AAATvABAHL0AACO9AADyvABAk7wAwLs8ANCFvQDgQj0AQH49AIAVvABgBz0AAEa7AABIvQCgVD0AgB48AABLvABALD0AAD68AIgBvgAAtbwAoIC9AACevQCQqj0AAAC7AIBevAAAODoAQMS8AADgugCgdj0AADO9AIBCvQCgWb0AoA89AIAgvQCAJrwAAFs8AHCLPQBAOL0AAKy6AACjPQDA0jwAIHs9AGArPQCAPD0AgA89ANCaPQCgBb0AAKa7AEA3vQAABrwAgEy8AAB8PQCAA70AQAy9AAD4ugCAOT0A4Ac9APC9vQDAyLwA8JO9AIBZvAAAH70AAA47AIB0vADAWb0A0M09AADVvAAAOLoAQB89AAAfPQAA97wAUJE9AJCqPQDAD70AgBk8AACKPAAAxrsAwOE8AAAKOwAAwLwAANq8AABFvQAAmDwAAHc8AMDdPABACb0AgOc8AEC5vACAJTwAICu9AOB+vQDA2jwAACC8AAC7vACAGjwAgCK9AEBMPQAAdDwAcJC9AAAYPAAATjwAAEY8AGADPQDAsTwAALM7AEC3vADwjD0AACi7ACAuvQCAdT0AwOS8AOAAPQBAmLwAQNe8ACB7PQBgEr0AQGg9ACANvQAwkD0AAMq7ACB7vQBAU70AgBS9AABMuwBgKb0AwMA8ADC6PQBAxDwAwNi9AMDWPAAAxTwAENc9AOAwvQAASb0AQK68AIDsvAAAdTwAgJw8AADnuwAAabwAABE8AOAlvQCwnr0AgH08AECHPACA3LwAYDI9AAD1vABwuz0AQIa8AADauwAAVrwAABE8AAB3PABgCL0AMJM9AAAKPACAXz0=","chunkHash":"2d25dab66f27b98d7baeb1c2763e6d608e8b25d5c69b3229a3a3e6c734caa8b2"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_highres_input(batch, ax=None, show=True):\n    #...\n    depth, height, width = view1.shape\n    \n    # Choose three representative slices\n    z_indices = [depth//4, depth//2, 3*depth//4]\n    \n    # Plot slices for view 1\n    for i, z_idx in enumerate(z_indices):\n        if i >= len(axes[0]):\n            break\n            \n        # Get the slice\n        slice_img = view1[z_idx]\n        \n        # Normalize for visualization if needed\n        if slice_img.max() > 1.0:\n            slice_img = slice_img / 255.0\n            \n        # Convert from [-1, 1] to [0, 1] range if needed\n        if slice_img.min() < 0:\n            slice_img = (slice_img + 1) / 2\n        \n        # Plot the slice\n        im = axes[0][i].imshow(slice_img, cmap='gray')\n        #...\n```","range":{"startLineNumber":277,"startColumn":0,"endLineNumber":300,"endColumn":0},"embedding":"AABXPAAAsDwAwIc8AMDFvACgZb0AkKC9AMC3vACADbwAYGm9AMAdvQDAQT0AAD68AECZvACgQr0AAMK7AADpPAAAADsAYHw9APCEvQAAkDsAAAq7AAB3vABAxTwAgBK9AKBhvQCALbwAQIy8AIBYPQAAqj0AgEk9AIAsvQBAkLwAYJi9AKAmvQCQ2r0AQHW9AOBQvQBABD0AAKg7AAClPADQ3D0AgIm8AACDOwDADT0AIJ09AKAwPQCAEz0AoH69AKA5PQDAGT0AAGY7AOBwPQBgIj0AADw8AMC4vAAwpz0AwHS9AMCAPACAizwAAOg8AABpPQAgb70AgDc9AAC0ugCgVL0AAP08AIBxvQAA6rwAACo9AIC0vABgDL0AQJu8AIB3PAAALrsAgCI8AACsuwBANL0AIGA9AMCxvQBgKb0AgJG8AOBXPQAAXrsAACE8AKADvQAwgr0AQMa8AAA4OwCA8LwAYJe9AADwuwAgnT0AgPy8AAAiPQCAHbwAsOo9AAB6OwDQrr0AAA08AEDvvABA1DwAgK08AMBQvQBAozwAALg8AIDnvAAAGT0AQFs9AEAmPQCgOz0AwMY8AACOvQCAPzwAQLC8AAAXPABgR70AAPm7AAAAOgDgaL0AADK7AIBjvADgcj0AIFK9AAAYPAAACLoAAGu8AAAivACA/zwAACi8AABgvADAez0AAPC7AECVPQDgwr0AAHS9ABDuvQCARDwAQMU9AMAWvQDgtT0AAMk8AOCePQBgKz0AoHq9AAAuvACg3z0AgK+9AECePQDA+LwAEIE9AMDePAAAWT0AALE8ADDAvQBAdb0AwBm9AICFPQAABD0AAO47AEABvQBAsTwAgHy9AAAHPADAFT0AUJm9AOBoPQBAh70AAKE7AOB+vQDQuL0A4Eq9AGBEvQAAtrsAgKW9ACCSPQAA1zwAYCm9AMBuvQCAYL0AAPQ6AIBgvACAtjwAwIo8AGBdPQBgVr0AgKI8AADzOwBARz0AAO+7AACdOwBA6jwAQI88ALCDvQDArDwAMIY9AGDgvQCA8jwAALw7AIB/PACAcTwAAC08AOB9PQAAVDwAgJK8AAAYPADAl7wAAKI7AMDZvABAHL0AoAQ9AABAugBQkD0AwHQ9AAAHvACAqjwAAKM7AIAQvABQqD0AAOQ6AMCNPAAAAb0AgBW9ACCAPQCgND0AsI89AADAuwAgMD0AgFi9AHCePQCACTwAQOc8AAARPACACj0AgIE9AICIvACA8zwAQCg9AMDUvABAsDwAAFA6AIAkPADAnDwAAOu7AABXvAAAhzwAAEC5APCEvQBwiL0AAHe8AADqOwBAiLwAgH48AIATvQCgsL0AwIy8AEDBvAAA2b0AoAI9ADDIvQAgEL0A4EE9AMCVPACwn70AABU8AIAQPQAA8LkAIBY9AMDIPAAAOb0AgN08AMC2PACwkT0AwFI9AAAyOwCAYL0AsIg9AGBUPQDA/zwAQPu8AGAdPQCAbTwAAMG8AECJPQAAJzwAgBm9AAAOuwAAFL0AgEC9AAAFvADgpb0AoDM9AIClPAAAUjwAACq8AMDbvAAAYDkAgOm8ACBAPQDAizwAQHe9AAAiPAAAnLwAgAg8ALCWPQBgNr0AoGY9AADSuwDAYz0AEI49AEDYPAAAZrsAsJW9ABCmPQBAyDwA4FS9AKAKvQCAuj0AAOM8AOBWPQBAYb0AYBi9AABavAAAvjwAYBg9AAAwOwAAobwAgES9AAA7PAAAKj0AQF29AOAAPQAAsLkAAM68AIDaPAAAK7wAAJY8AAA7vADAhDwAwJ+8AICtPACoD74AIDa9ACCpvQDAuDwAAD09AEDtPAAgKD0AoD49AAChOwCgMr0AgPq8AACBuwDAC70AQCo9AMCAvACADLwAAF+8ACA/vQDgQb0AwPI8AEAGvQCAej0AIIY9AACHOwCAVT0AAEc8AEDcvACA37wAoAW9AIDGPAAgfD0AAMy7AJCFvQBgfL0A4Em9AIC8vQCANz0AgGQ8AAA0OwDA1TwAABW9AMABvQAwkD0AAMe8AKBdvQCAxLwAANw8AACcugBADb0AQJI8AFCBPQCAGLwAwLg8AAAePQAAAz0AwCc9AACaPAAgWT0AgM88ACBnPQAAPb0AgBe8AOAUvQAARrsAAPc7AEB1PQAAyrsAwPW8AACAuwAALDsAYEI9AIDUvQBAxLwAoH+9AAB2OwAAS70AQLu8AABPvQDApL0A4L49AABKvACAubwAAGK7AGAGPQAgb70AwLA9AECgPQBACL0AgBs8AACMvAAAqDoAAFo7AADBuwAAwjsAwPe8AIAQvQCAujwAwJ+8ACBTPQAAybsAgNK8AIAAvAAAq7wA4Be9AKBRvQAAoDoAgLm8AABIvADArTwAgEC9AEAdPQCAs7wAEMu9AIAiPAAA1TwAAJg6AEAwPQAAd7wAAKK8AECIvACgAD0AQIM8AGA+vQBAYD0AALK8AICrvAAAkbsAoGq9AAB9PQBAzrwAQKI9AOAdvQBAlD0AAOA8ALC4vQAAK70AADi9AIAFvADgNr0AAKA7AIBoPQBAljwAcJ69AADsOwCgiT0AoNU9AECTvACgKr0AAEy7ACB3vQDAwLwAwPA8AIDuvACAibwAgGS8AAAnvQCQzr0AQNE8AIAwvACAh7wAMLQ9AECsvACgdT0AQCS9AACAuQCAErwAAK47AOAzPQCAprwAAIg9AGABPQAA5Ds=","chunkHash":"5033d8f4ae1c34efb1065171dd31a600f9ef7f6a4d5aee9b012ed0086918c34e"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_highres_input(batch, ax=None, show=True):\n    #...\n        axes[0][i].set_title(f\"View 1, Z-slice {z_idx}/{depth}\")\n        axes[0][i].axis('off')\n    \n    # Plot slices for view 2 (if we have a second row of axes)\n    if len(axes) > 1:\n        for i, z_idx in enumerate(z_indices):\n            if i >= len(axes[1]):\n                break\n                \n            # Get the slice\n            slice_img = view2[z_idx]\n            \n            # Normalize for visualization if needed\n            if slice_img.max() > 1.0:\n                slice_img = slice_img / 255.0\n                \n            # Convert from [-1, 1] to [0, 1] range if needed\n            if slice_img.min() < 0:\n                slice_img = (slice_img + 1) / 2\n            \n            # Plot the slice\n            im = axes[1][i].imshow(slice_img, cmap='gray')\n            #...\n```","range":{"startLineNumber":300,"startColumn":0,"endLineNumber":322,"endColumn":0},"embedding":"AADOPADgMj0AAF47ACAbvQDAer0AsIG9AAAbvAAAXDsA0IW9AAAevQCASz0AAE68AKAGvQAgJr0AwJS8AADSPABAiDwA4Iw9AECBvQCAqjwAAPu7AED0vAAA1TwAgDS9ACBjvQDAnrwAAFu8AJCBPQAgkD0AgFE9AIDBvABAu7wAkI69AEAOvQDQyL0A4GW9AGBLvQAA1DwAAGg6AIBrPACAyj0AwMy8AIAcvACA6TwAgJA9AIBXPQCAFz0AgHm9AGAYPQDgFT0AAAg8AKBEPQBgIj0AgGM8AEDZvADgsz0AIGK9AADAOwAALDwAAIQ8AMB0PQDAZb0AAHg9AACRPADAJL0AQP88APCIvQDA8bwAwC09AAAevADA8bwAwPO8AACMPAAAGrsAACA8AADRuwAAYr0AoFo9ADCpvQCAQ70AgGu8AABsPQAA2TsAAHo7AMDBvABgOL0AgNm8AAB4uwCAwrwAIJy9AADIuwBwtj0AgBm9AGACPQAAHLwAIPI9AICAPAAQxr0AAKQ7AEDavAAAmDwAAI87AIBgvQAA1jsAQMw8AIDEvAAAvTwAoEQ9AGAMPQDgOz0AAG08ACB4vQBA7TwAwNG8AICbPADgR70AAF67AACiuwDAVL0AAH67AEC4vABgWz0AkIO9AACUPAAAOrsAQMC8AID9vACA6DwAAPW7AIBMvACgQj0AgAS8APCDPQCgxr0AAIe9AADtvQAAJjwAAKk9AKA/vQBQoD0AwJ88AGCLPQDgMD0A4IK9AECNvABA2T0AcJ+9AMCxPQDArrwAsIs9AMDDPACgij0AgA09AMC1vQBAjL0AAK68AHCBPQDACD0AAMw7AMDCvABA7TwA4Iu9AKALPQDA6jwA4I+9AMBEPQCQgb0AAGg8ACCKvQBQur0AoFa9AIAtvQAA0bsAoLC9AACXPQCA2zwAAHi9AEBCvQAgd70AAOc7AIAhvAAALjwAADg6AEBnPQCAP70AwKA8AAArvADAJT0AwJe8AAAPPADADD0AgHE8AKA3vQCAzzwAEIw9ANDQvQCgHT0AAFE8AECdPAAAAzwAAGQ7AIBePQDgEj0AALS8AADAOgAAy7sAAJI8AKAJvQCgDL0AIBo9AAAVvAAAqD0AYG89AIAvvACAtDwAADs8AADfvADgqT0AANC6AABgugDA57wAwPi8AABpPQDgIj0A4I09AIBAvACA9DwA4Em9AJCWPQCAuTwAACI9AIAdPACAKz0AsIg9AAAOuwCA8zwAQPM8AOARvQCAojwAAE48AECWPAAAkjwAAAa8AAB8OwBgET0AAKC5AABovQCwg70AAAC6AADAOAAAmLsAAL48AID7vACgzr0AgNC8AMAvvQBgyb0AYBk9AHCmvQDA9bwAgCs9AACTOwDQxb0AAFg8AOAaPQAA8DsAIBA9AAC4PADASb0AAM88AACCOwAAfz0AQIA9AADFOwBwmb0AYHM9AIBAPQCAND0AAEC8AEDvPAAA0DwAwNq8ABCKPQAAyDsAACG9AADauwBAOr0AgDS9AAAwOwCgy70AgDE9AIBdPAAA4zsAAHi6AMAYvQAAXDwAANS8AMASPQAAzDsAoGu9AADWOwCAm7wAgIs8ANCJPQBgQL0AAFQ9AIBQvACAJz0AsIU9AABhPACAnLwAwMG9ALCdPQAAfTwAIBm9AOAvvQDgtj0AgCc9AMBqPQBgkL0AQPm8AADLuwCAsDwAYBY9AIBsPAAAB7wAYGy9AACPPACAAD0AICW9AIAvPQAAA7wAQNS8AACTPAAAYrwAAJ88AABwvADgCj0AYAi9AADYPAD4Db4AwOS8AOClvQAA4TsAADM9AMC3PACAGT0AYDM9AIAYvADAJL0AIC+9AECUvAAgIr0AgPM8AIA6vAAAzLsAAAq7AMA0vQCgQL0AIAA9AEACvQBAfT0AEJA9AMCLPAAgYj0AAGE8AAAHvQDAmrwAgPG8AMCePADgiD0AQLm8AJCTvQDASr0AQBm9ABC9vQBgSz0AgJc8AICXPABA5zwAoBu9AACVvACwhj0AQCG9AAA8vQAArbwAAOg8AACMugCASr0AYAk9AOB4PQBA5rwAAME8AGANPQBA9TwAIFY9ACAZPQCgVD0AQMk8AGBJPQDASb0AgPO8ACAxvQCALbwAAOw7ACBRPQCAmLwAADK9AACwugAAQjwAACk9AGDRvQAAZLwAgEu9AAA4vABgYb0AAMW8AIA1vQAgpb0AQNE9AACwuQBAsLwAAKI7AIASPQAgb70AAJc9AACXPQCgAL0AAKQ8AIB3vAAAZDsAABW8AAAMuwAAEjsAgOi8AIATvQDgLD0AgB28AEBsPQDAmLwAAIy8AABAuQAAtLsAwC29AOB/vQAAPzwAgBS9AICHvABAoTwA0Ja9AIDHPADAgbwAELq9AIBePACAkDwAALC5AOAWPQAgA70AAKO7AABBvABA6zwAwJY8AMA8vQBA9jwAwO68AAAZvACgBb0AwEe9AOBqPQDAsbwAQJY9AIABvQDgaT0AQJk8AFCzvQCAF70AwDK9AMCavAAAUL0AAEw7AEBqPQCAtDwAkIm9AADyOwCQlz0AwMI9AADavADAGb0AAK+7AGCDvQCA7LwAQMg8AABougAAi7wAAKy8AMABvQAwx70AAOM8AAA2uwAAxrwA4Kw9AADlvAAwjD0AwAW9AACAuADAqLwAgEc8AEDtPADAnbwAAKI9ACAcPQAAxDs=","chunkHash":"366ad70030841a575ef05d65ed9e676946ed2c094f484491d76e945a6ee2ff53"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_highres_input(batch, ax=None, show=True):\n    #...\n            axes[1][i].set_title(f\"View 2, Z-slice {z_idx}/{depth}\")\n            axes[1][i].axis('off')\n    \n    if create_new_fig:\n        plt.suptitle(\"High-Resolution Texture Model Input (32³ cubes for contrastive learning)\", fontsize=14)\n        plt.tight_layout()\n        if show:\n            plt.show()\n            return fig\n    \n    return None\n#...\n```","range":{"startLineNumber":322,"startColumn":0,"endLineNumber":332,"endColumn":15},"embedding":"AMC9PACABz0AwIY8AIDTvADQjb0AQIW9AACAOAAAxbsAoHu9AMArvQAgOj0AAJw6AECNvADgeL0AwOC8AGA5PQAAjDoAQEU9ACA4vQAAGjsAAAC4AOARvQBApDwAIC29AGAfvQDA6rwAAIa7ABCMPQBApj0A4GU9AIBDvQBgE70AMJ69AKAOvQAgwr0AAIS9AMAvvQBAPT0AAKA7AAAiuwBAvz0AwEe9AIBaPAAgLj0AoD09AABpPQDA/zwAIAy9AMAuPQCgMD0AgG48AOArPQAAWz0AAGC7AAD0vABwgj0AwHO9AADQOQAAsbsAgPA8AMBIPQDAdr0AoBY9AECYPADAAr0AADY8AGCEvQDAQL0AAAI9AADcvAAgD70AQLy8AAAQOwAAULsAgGe8AAAevABAQ70AkIQ9AJCjvQAwiL0AADC8AOCTPQAA0DsAAPe7AIDMvAAgLr0AoEa9AACDOwAApbwA4L+9AMCJvABQnT0AQOC8AEDGPADA8rwAsPo9AABgugCwyL0AAEa7AMCVvAAAWjwAALy6AGBWvQDAzzwAQPA8AIA2vAAA1DsAAA09AIDhPABgbD0AQIe8ACCAvQDADD0AgJu8AADIOgDwhL0AgCK8AABIOgCgZr0AAFi7AADbuwDgdz0AYCa9AAChPAAAxLsAAFa7AIAuvADAvTwAAIG8AMCRvAAA1zwAgCq8AFCGPQBwyb0AgEi9AJAAvgAAqLsA4Mo9AOARvQBQhj0AALQ8APCWPQCAZzwAwGq9AECAvABQ5j0AcKe9AFCWPQAAiLwAIIU9AACoOgAAkT0AwFI9ADCWvQDQj70AIBW9AACKPQAA/jwAALA7AACZuwCgFD0AIH+9AMAkPQDAqTwAwEe9AIBIPQCgU70AgMw8AIBVvQAgnL0AgDy9AAAJvAAA9DoAQL69ALCGPQAA0DwAQCm9AMC+vADgTL0AAIC5AADDuwCAqzwAAAg8ACBQPQCAF70AABS8AACeuwCgPT0AgFe8AADGOwBA2DwAAFS7AIDCvABADj0AYIw9AKCvvQAAQj0AAAo7AIAsPACAMTwAACA7AFCZPQAAIjwAgCw8AIAOvACAi7wAAOI7ACAUvQCgU70AYBs9AADruwCgkz0AoDU9AIDevAAAwLoAAEQ8AIAxPABAdT0AACW8AACIOgDAi7wAwN28AMBSPQAA/zwA8II9AAD1uwDAyzwAIEW9ADCEPQCAoDwAACg9AAAaPAAAyjwAAJQ9AADeOwCAhzwAgLM8AICvvAAAzDwAAIg7AIBzPAAA1jsAgAm9AACHOwBgUj0AAAm8AOBcvQBQh70AAAg7AABVPAAAqrsAwPU8AIATvQAg3r0AgJC8AABpvABQ370AoA09AACgvQBAFr0A4Dw9AAAouwBQiL0AgLs8AAAuPQAAiTwAQME8AIBUPACgLr0AAA48AIASPACAST0AwKE9AACuuwAAhr0A4JU9ACAXPQBAVD0AAKA5AGBIPQCATzwAAOC7AECOPQAA8jsAcIC9AAAMvACAfr0AwIG9AAC3vAAAmb0AoGs9AADTuwAA9jsAAB+8AMAovQCArjwAAJC7ACATPQCABDwAAHy9AACgOgBAirwAAPA5ABCLPQBger0A4IY9AADwuwCA0TwAULI9AEDaPACAGr0AUMC9AECVPQAAKDsAAFW9AOAfvQBwlD0AwDg9AKBHPQDgWL0AQI28AGAwvQAA4TwAwN48AACAugAAXbwAAJy9AABuOwAADjwAwJK8AAATPQCAH7wAQJu8AAAuPABAhDwAQBI9AIBHvADALz0AQMS8AMDTPABAD74AAG+8AICovQAAoTwAYFA9AIAZPQAgVT0AoGo9AAB4OwAgIL0AgC+8AIC0vACAsLwAgHQ8AIAyvADA2rwAQMK8AKBuvQBAEL0AIC09AADZvABAYD0A8Io9AAClOwCAAD0AgGo8AICHvQCAMLwAAPW7AIDYPADgTz0AwMi8ABC9vQCASr0AYEe9AFC5vQCAfz0AgBw8AIAtvACAXzwAQNS8AABiuwDAaD0A4Ai9AAAAvQCgAb0A4CM9AMCIvACgAb0AwN08AHCdPQBA2bwAgAI9AIBQPQBAGT0AwG89AIBmPQAASj0AgDU8AEBIPQBAfb0AQJe8AAADvQAA3LoAgC08AABSPQBAzrwAgDO9AMCoPAAA2TsAYD89ADDZvQBAq7wAQHq9AADOvADgeL0AQBm9AEA6vQDwmr0AMO09AIA1vAAAJLwAACA6AACzPAAAsLwAIJM9AHCyPQBAHr0AQJk8AABwuwAA9DsAAH47AACQOwAAVLsAALK8ACB2vQBAyDwAADQ8AAA0PQBAyLwAgFu8AADWuwAAcrwAwDm9AKCBvQDAtjwAYAO9AICWvAAAVjwA4JS9AEC5PADAjbwA8La9AIBDPABgLD0AgI28ACBBPQCAirwAAMQ6AADDuwDAQD0AANq7AMA5vQBAYT0AwMG8AACTvACAxbwAQN28ALCDPQBgPr0AIKA9AAD3vADgnz0AAAQ8APCEvQAAX70AwDS9AIC+vADwjb0AgCc8ACCZPQAgDj0AIHS9AIDdPADgKT0AGAw+AAD4vACgYr0AgKq8AMBAvQAAkrsAAGY8AADluwAAlrwAgEq8AEDovABww70AQMo8AIBmPACgDb0AIJ89AIC8vACwlD0AICq9AAAwPAAAVrwAANk7AIC4PAAApLwAQGU9AIBAPQCAwDw=","chunkHash":"dd3ef0d307c76fa8a89e6e93db2fe49d312799b806f5c5a0639f8b4a4953ab69"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_comparison(sample_id=None, output_path=None, show=True):\n    \"\"\"\n    Create a comparison visualization of all three MorphoFeatures model inputs.\n    \n    Args:\n        sample_id (str): Sample ID to visualize (optional)\n        output_path (str): Path to save visualization (optional)\n        show (bool): Whether to show the visualization\n        \n    Returns:\n        fig: Matplotlib figure\n    \"\"\"\n    # Create figure with subplots for each model\n    fig = plt.figure(figsize=(18, 12))\n    \n    # 1. Shape model input (point cloud)\n    ax1 = fig.add_subplot(3, 1, 1, projection='3d')\n    shape_batch = load_shape_model_input(sample_id)\n    visualize_shape_input(shape_batch, ax=ax1, show=False)\n    \n    # 2. Low-resolution texture model input\n    try:\n        # Get a batch from the lowres texture dataloader\n        lowres_dataloader = get_morphofeatures_texture_dataloader(\n            root_dir=\"data\",\n            batch_size=1,\n            #...\n```","range":{"startLineNumber":335,"startColumn":0,"endLineNumber":360,"endColumn":0},"embedding":"AGA9PQCgCD0AAI+8AOBQvQCgRr0AMKC9AMDhPAAAVrsAoFE9AMCGPABAqjwAAEC6AIAvPACwxb0AAH+9AEC9PACAzTwAoAk9AAAYOwCwwz0AALG7AIAzvQCgAz0AgKI8AKAtvQDgAL0AwAq9AEC1PQBgLj0AgEg9AAAbvQAATrwAkMG9AAC7uwCwr70AYB49AIANvABgHz0AQCq9AECqPAAgxD0AANs7AAClPQDAdD0AQIs9AAAIOwAwvz0AAHK9AABMvABgGD0AAPw7AEABPQAAcLwAcKC9APCdPQDgEj0AoEm9AECdvAAAALwAALg6ADCvPQDAJL0AYHA9AACYuwDgSL0AQKA8AEAYvQAADL0AwFQ9AAAePADAlrwAAJ88AMAwPQBAybwAAPG7AICxPACAfL0AAJA7AICPvQCAiL0AIEs9AGB0PQBAKD0AQBw9AABIvQBAYL0AAPI7AMC4vADA17wAAKy9AMBmPQAgKD0AsKK9AACgvACADj0AADw9AIDgvAAwmb0A4BU9AIAiPQBgCT0AQIo8AKAbvQAAdbwAIHw9AACDuwAwrT0AAKa7AACTOwCAkz0AgBs8AIDvvACgTD0AwIW8AAANvQDAoLwAACK8AIBgvQAAFDwAgHq9ACBNvQBAsDwAQNU8ACAPPQAgXj0AAMS7AACTvABACL0AwPS8AIBgPABgAz0AAD48AKB7PQCgdr0AAIS6AMD/vQCgGb0AgB89AAAOvQCQjj0AAE08AACEPQCAFLwAAOk7AMC6PACAJj0AYEW9AMDDPABAyLwAoBA9AOAKvQCgOr0AwIw9AKB4vQDgQL0AgCm9AMBPPQAAyDoAwPi8AMDxvAAgED0AANK8AACWuwCAvLwAIC69AEBoPQCQqr0AALM7AKBkvQAgub0AAP68AACAuwCghj0AcKC9AFDFPQAAY7wAAFw7AEBEvQAAFz0AAH88AECSvABA5DwAANA6ALCWPQBAV70AgAy9AECBPAAgFj0AQOk8AIAWPACATDwAAIs8AEB0vQAAzTsAAG68AIBIvQAAZT0AQKE8AIDnPACgFz0AgKq8ADCHPQDABj0AAOO7AAAZvAAAoDsAwIS8AIAuvQAALL0AQGE9AACIuwAADz0AwMQ8AACVPACgCz0AABE8AOB3vQAAjjwAAK67AMD7PACAX7wAAMw6AKAnPQCAcTwA4Fc9AACmPAAApzwAIEW9AIBevAAArrsAQBw9AAA5PAAA+LsA2AQ+AIDuvABgEL0A4LI9AACEvABAZD0AAG47AAAivAAA1DwAYBC9AIBTvQCAaj0AQKo8AMBYvQDAb70AgBi9AICgPABgTT0AcM49AEDQvADAJr0AALg7AKBZPQAwor0AsIE9ABC/vQBgZr0AAL48AMC4PADQjr0AAAs9AIDGvAAAPjwAwLG8AIDfPADQm70AACM9AOB8PQCA9LwAQB09AAD3PACgRL0AAOQ7AACTPADArDwAgHw8AGANvQAAi7sAAFC6ALCQPQDAcD0AwMa8AIBIPAAAnrsAQKe8ACB8vQCAM70AIBS9AOAevQCAojwA4F29AEDsPABgAz0AAEQ9AMA6PQBA3zwAgIS8AACAvACwh70AgEK8AACjPQAAl7sAwK48AIDmvABAbr0A4C09AADAOgCAQr0AcAO+AMAPPQDAIr0AADG8AOAWvQDQlj0A4Fo9AIBlPABAq7wAYB+9AKB0vQCgET0AAOM8AIAIvQBApTwA0J+9AMBGvQAAs7wAACG8AACHOwDgLL0AAFC7AAAnvAAA1LoAYE49AAAeuwDgAT0AwO08AABvPQDAE74AAJS8AJCOvQAgDb0AAF08AIAhPAAAALkAIF09AOAXPQCgFb0AAAi7AIA+vABA3DwAgMg8AABVvADAvDwAoLa9AAAcuwCAAbwAgJi8AAA8vQAgEz0AMJA9ACAOvQCgAj0AALw6AECRvACAerwAwKM8AMCJvAAAmLoAAOi8ANDQvQDgOb0A8Ja9AMC5vQCAMD0AADA9AAApPADAWT0AAGW9AAAKOwCAJz0AAE67AABHvABAhbwAALE8AAA0vACgTr0AwEE9AOAFPQBgp70AwCw9AKClPQAAhLwAwB49APCCPQDQmz0AQK08ADDQPQBA2rwAAA28AMBBvQAAJrsAACo7AABePQAAmDoAgCq8AMCBvADgLT0AQDY9AAA7vQAgK70A4MO9AAAhvAAA1rwAIAC9AIBLPAAAE7wAQIE8AABZPQDA1bwAoAQ9AICqvACgM70AAAo8AGCnPQAAoDoAUKQ9AMAIvQBAQL0AAPc7AIBUPADgGz0AALC7APDjvQAABj0AALS8AGBEPQDArrwAQM48AMC+vACAZT0AAMO8AEAYvQDAtTwAIB+9AAC0OgAAEr0AIBO9AECovAAApjwA8Mm9AACmPQAgRT0AAEo7AAAfvABABb0AoFI9AIBCvAAAVT0AgA48AABhPACAhz0AALS8AAATPQCARbwAIF69AGCGPQCQrb0AYDE9ALCZvQAgNj0AQFs9AAB8vQAA1LsAwNG8AMCavACAX7wAAEg7AGA3PQAABT0AAF+9AAAdPABAKL0A4M89AOCPvQBgH70AgBC8AEDGvAAA9TsAABg7AIBRvACAOrwAgA28AHC4vQCQur0AoGw9AIB+PAAgE70AABc8AACTvADAzjwAwDY9AACnuwCAiLwAIFC9AICrPACAAr0AQBI9AABBvQAgaz0=","chunkHash":"729c117fe57ef8daf34125bf3e27b996f2b1b89a3ec30542733acf13741d3f83"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_comparison(sample_id=None, output_path=None, show=True):\n    #...\n            class_csv_path=\"chromatin_classes_and_samples.csv\",\n            sample_ids=[sample_id] if sample_id else None,\n            num_workers=0,\n            debug=False\n        )\n        \n        for lowres_batch in lowres_dataloader:\n            break\n        \n        ax2 = fig.add_subplot(3, 1, 2)\n        visualize_lowres_input(lowres_batch, ax=ax2, show=False)\n    except Exception as e:\n        print(f\"Error loading lowres texture input: {e}\")\n        ax2 = fig.add_subplot(3, 1, 2)\n        ax2.text(0.5, 0.5, \"Lowres texture data not available\", \n                 horizontalalignment='center', verticalalignment='center')\n        ax2.axis('off')\n    \n    # 3. High-resolution texture model input\n    try:\n        # Get a batch from the highres texture dataloader\n        highres_dataloader = get_morphofeatures_highres_texture_dataloader(\n            #...\n```","range":{"startLineNumber":360,"startColumn":0,"endLineNumber":382,"endColumn":0},"embedding":"AGAgPQCAUTwAwL88AID3vACA/LwAwJe9AICMPACgA70AAJC7AABQuwCAdTwAAOw7AIBDvACAib0AoHe9AOAOPQBABT0AABU9AKAUvQDglD0AoEA9AGAdvQAAgDgAAAC4AADYvACgDL0AYE+9AADMPQCgbT0A4AE9AEBTvQCA/7wAsIi9AMCsvAAg570AAK68AADGPABA3jwAAIi7AIDevACwrD0AQJ28AGAKPQDA3TwAAC49AAAXPADALD0AsJC9AKB8PQCALzwAAKk7AAC/OwAA3zsAgM28AAC6PABgWT0AIFO9AIAAvAAArbsAwAC9ADCLPQAgOb0AAJw9AMCOvAAAnb0AAK08ABCHvQBAM70AwJQ8AABOOwAACLwAQKC8AMCmPACAN70AwN48AAAeuwDQmL0A4AM9AKCqvQCgTb0AwDo9AMCqPQDAnzwAANO7AAB5vADgWb0AQE+9AABRvADAorwAsMK9AIDePABQsj0AQPG8AAC2PADA7jwAcJY9AMDkvACQnr0AwL88AIBQPQDAEj0AABS7AMAPvQAApLsAwF89AMAGvQAAHj0AIDC9AAA1vACgkz0AAAI8AIB+vQCA1zwAgFS8AKBpPQCAP70AgKW8AECQvABAmLwAABa7AACxvQBA+jwAgGK8AACvOwCAjzwAwJW8AECUPAAAprsAgCC8AEC6PADwhT0AQJS8ADCRPQBQlb0AQDi9AJDVvQBAjbwAgDo9AAAUvACQuT0AADc8AKBtPQAAhLwAAK08AADkOgCgij0AYJG9AICLPQAAODoAQDY9AADluwAAWrsAwHY9ACCLvQBgIr0AoH+9AACvPABAsDwAIC+9AIB6vAAAET0A4DG9AMD3PAAA+bsAgH29AOBfPQCwjb0AAHg7AIC0vQDgYb0AAEO9AMDgvACQgD0AgKK9AIBbPQAAdbwAAAA8AADOuwBA7LwAANw7AABDvQAA4bsAYDw9AOBJPQBAVr0AcM29AACcPABgbj0AAJS6AACJOwCAFT0AACg8AOAUvQAAJTwAgEw8AOA7vQCAjD0AgKc8AMCivACAIj0AgJ+8AECkPQDAtTwAAKE7AKAqvQDAx7wAwJm8AIDQvAAABr0AwGk9AAAMuwBAIz0AQNE8AIB4PADgBD0AALa7AACbvAAQjT0AgBU8AADJOwAAADoAgE28AOBFPQCgfD0AgO48AADvuwCAhTwAwD29AACbvACAhTwAQEk9AAAyuwCABT0AYKI9AAAFPQBgZ70AgEY9AIBavQCgKz0AgAQ9AAAIvQAAfLsAgK28AIB1vACAHz0AAJ08AHCPvQCgz70AAOi6AIB0vADAxzwA4I09AACTOwCg6b0AgL+8AKADPQAgw70AAGc9AJC4vQDgkL0AAGw8AMCkPAAwir0AoCA9AMDwPAAAnLoAAMA6AMD+PAAAnr0AAKs7AIDUPAAAMLsA4A89AAAqPACAob0AgOE8AMCRPABAgz0AAJQ7AIBrPAAAWLwAAJe8AMC0PAAgDT0A4DO9AABAuwCgWr0AQOu8AABgvQAgJb0AAKg7AKAwvQDAhjwAoDW9AADKvAAAqDoAwEE9ACB8PQAAJjwAQHG9AACEvAAgXL0AANw6AIB9PQBA/bwAgAc9AEDFvAAAf7wAsKM9AIB5PADA97wAgM69ADCVPQAA4jsAgHu8AAB5vAAAnz0AYB89AOBXPQAANr0AgLG8AICqvQDgHT0A4GQ9AICUvADA4jwAgJi9AOAevQCAaTwAgD28AAD4OwCghb0AACg8AICdPAAArLoA4Ds9AECJvACAgz0AALQ6ACA7PQCwJL4AQJC8AKCMvQBAmTwAIG09AKAIPQAAljwAsLc9AMCoPAAA3bwAgJw8AIAovAAAursAQPw8AICovAAArLoAgCO9AECqvABAk7wAAOM7AEDEvABggT0AILA9AADLOwCgUT0AwI08AMDhvAAA0TsAoAc9AICTvAAgCj0AgE68AJDevQBAM70AsI+9ADCVvQAgVz0AcIU9AAC2uwDwmT0AYCK9AEDPPABgYT0A4FC9AAAYOgAAjLwA4Do9AICMvACgk70AwJs8ANCZPQCgLL0AwAg9AKCXPQAA3bsAgI49AIDxPADAxD0AQOs8ANCEPQCABbwAoDu9ACAxvQAATLwAgIU8AGASPQDgEr0AAFg7AMDsPAAA1DoAQAk9ADCSvQCACL0AMLO9AACQvADgML0AAHC9AAAguQDgXL0A0IY9AADnOwAAyDwAgG28AIDCPACAp7wAoFQ9ACCuPQDAM70AwME8AAAKvAAgFr0AAAc8AACwOQDgLz0AgBq9AKCovQAAkTwAAFi8AIBsPQBgT70AwMA8AIBCPACA7DwAQOu8AKBevQAATDwAgMW8AABKPABAp7wA8IG9AIBjPAAAmDoAAG69AGB6PQAAZT0AwP+8AAA0vACgbr0AAO08AIDUvADgFD0AACg8AAAuvADgdz0AgJ68ACAdPQBAjrwAAGW9AECMPQBgv70AAFU9AECbvADwjz0AAPg7AOBmvQAAPLwAAL48AHCDvQAwib0AAFe8AKBAPQAAkDwA8Iu9AACoOwAAtDwAuAo+AIBMvQDA+7wAACe8AIDRvAAA2DsAAK67AAC9OwDAhrwA4Ai9AGAivQBgkL0A4B49AMC+PABAW70AAH48AEDkvADAtzwAQDA9AMC1PADgT70AAMC7AACTOwCA/LwAAP88AAAgvACgmT0=","chunkHash":"53f613af1c253e2e5f1973e6bb336e471d1089009a5a39c0a2702771bc1981f1"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_comparison(sample_id=None, output_path=None, show=True):\n    #...\n            root_dir=\"data\",\n            batch_size=1,\n            class_csv_path=\"chromatin_classes_and_samples.csv\",\n            sample_ids=[sample_id] if sample_id else None,\n            num_workers=0,\n            debug=False\n        )\n        \n        for highres_batch in highres_dataloader:\n            break\n        \n        ax3 = fig.add_subplot(3, 1, 3)\n        visualize_highres_input(highres_batch, ax=ax3, show=False)\n    except Exception as e:\n        print(f\"Error loading highres texture input: {e}\")\n        ax3 = fig.add_subplot(3, 1, 3)\n        ax3.text(0.5, 0.5, \"Highres texture data not available\", \n                 horizontalalignment='center', verticalalignment='center')\n        ax3.axis('off')\n    \n    # Add overall title\n    plt.suptitle(f\"MorphoFeatures Model Inputs Comparison (Sample ID: {sample_id or 'random'})\", fontsize=16)\n    #...\n```","range":{"startLineNumber":382,"startColumn":0,"endLineNumber":404,"endColumn":0},"embedding":"ACA9PQAA4bsAgD48AOAhvQDAE70AwKm9AIAsPACADL0AAMk7AAC+uwDAzTwAAHI7AADHuwBwsL0AQFu9AMAgPQAAIDsAgGU9AMD4vAAgrz0A4Ac9AAC4vAAA5DoAAE88AADIvABA9bwAQGW9AEC8PQCgoz0AwMI8ACBVvQCA47wAAIW9AIB8vAAYAr4AAPm7AEDxPACANDwAAAK7AACxvADAqD0AgIC8AOBHPQDgBz0AwKc8AAD0ugBgDz0A0JS9AEBuPQDAlTwAAGE8AACZPAAAnDsAIDi9ACAcPQBAaz0AoC69AADCuwCAFbwAANm8APCZPQDgP70AIHY9AABGvACAh70AwIg8AOB7vQDA77wAAMQ8AACZuwAAnDsAgD28AABfPAAAML0AAAu8AABwOwDAir0AQDo9ABCEvQCAk70AoBo9AECRPQAgFT0AABi8AEDgvACgBr0AsIW9AECSvADAzrwAcKy9AEDdPAAwqj0A4Ea9AIANPABA8zwAsIA9AEAivQDwob0AgDs8AMBjPQDAID0AAOA6AEAhvQAArLsAAFU9AED7vAAAeT0A4DC9AEDSvAAgXz0AAMA5AFCFvQCAjDwAgAu8ACAEPQCA7LwAAHq7AABWvACAfLwAgFe8AICdvQAAbzwAQKC8AAAiPAAAwjsAQMi8AAALPAAA7LoAwKC8AEAVPQAAWD0AgG68AKBYPQDga70AgK28ABD0vQDABL0AoGk9AMD0vAAQ0T0AAN47AKBvPQBArbwAQL08AAD+PABwhz0AoIq9ANCSPQAAWLoA4CI9AABkuwAAhbwAADI9AECMvQDgJ70AYGq9AEDsPAAAQLkAADa9AIAMvAAAMz0AYDy9AICPPABAirwAYHy9AKCCPQBgcL0AQIG8AMCPvQBAWr0AIC69AOAJvQBQqz0AUIa9ACBFPQAA1bsAAIc8AAB/vADAlLwAgNc8ACBGvQAAVjsAACU9AHCKPQCgE70AYMy9AABMPADAgT0AAJY7AAA8uwDgST0AAKi7AMAbvQCAWjwAAOG7AGBCvQCAkj0AAJk8AMC6vAAANz0AgNe8AHCoPQCAxjwAQKc8AIBlvQCgFL0AQAG9AMC2vADATb0AgGk9AADguQCA3TwAgLs8AADRuwDgJD0AgIS8AEDRvADQmz0AgGs8AAD5OwAAwDoAwJc8AGBnPQDAND0AgA89AECaPADAsTwAwCa9AMAqvQAAtzsAYEs9AABwOgDArzwAEMc9AAAkPABAX70AwG89AIB2vQBAFz0AAMo8AICmvAAAsDkAwJq8AMDBvADgBz0AQMQ8AMB2vQDgr70AwIK8AMCHPAAAtzwAMJ49AIBFPABA5L0AgIa8AIAMPQBAmL0A4Gc9APCPvQAArr0AgHM8AEDPPABgeb0A4FI9AIAnPAAAQDkAAC08AEAkPQAgib0AAGi7AEAZPQAAa7wAoAE9AIBTPACwjr0AQMM8AEC1PACQjz0AAPA6AACNvAAAoDkAADg6AADwPACgVT0AYCa9AAB4OgCgGb0AwPO8AOB0vQAA/bwAQNS8AIAuvQBA6zwA4GC9AAAyvACAWjwAIGo9ALCUPQAA6TsAoCC9AABbvACAjb0AgC+8AKCjPQCA67wAAAU9AADuvABAkrwA8JE9AAADPACAy7wAMNO9AOCkPQAAOrsAAI+7AMDwvABAlD0A4Gw9AEBDPQAAH70AgK+8AKCHvQDA+DwAYEo9ACA+vQBgGj0AsJW9AID/vADgHz0AAP47AAAmuwAwn70AAKC8AICNPAAAdTwAQFo9AICyvABQjT0AAE68AKBhPQDAJL4AgMW8AMB7vQAAxjsAoD89AEDNPAAA0jsAgKI9AIDRPADgK70AgIo8AACNuwAAgTsAYB09AABSvAAA+LoAoFe9AECDvAAAnLwAAJC5AEDgvADgfz0AkLg9AICIvAAQgj0AAG47AADVvAAAcLoAQPY8AIClvADgBD0AgJC8AODYvQBAYL0AgJe9AOCnvQDAOD0A4HM9AIBtvABgdz0AgBC9AAC4PADgZT0AACy9AECPPAAAljsAoB89AIArvABAgb0AgM08AGCWPQAgWb0AAM08ANCcPQCArLwAAEw9AKAfPQBAwT0AgKo8ABCWPQBAsLwAgLW8AIBOvQAAsbsAANM7AAAXPQAA6LwAACu8AADDPAAA5LoAwEM9ABCIvQDAyLwAUKG9AADOvACAfL0AoEK9AADwOwCAOL0AoEU9AIC3PAAAsjsAgHS8AIAzPAAA1bwAYA49AOCtPQCgGr0AoAM9AIBgvACA/7wAgAc8AACYOwCAOD0A4Au9ALC5vQCANDwAgFm8AOBqPQDA97wAQKI8AIA8PABA2jwAAKy8AHCKvQAAVzwAAOa8AMCAvACAmrwAgIS9AAASPAAArzsAQLe9ALCWPQDALD0AwKy8AMDnvAAAD70AABA9AGAkvQAAwDwAAH08AAAwuwDAnj0AwJK8AECpPADA87wAIFe9AECWPQAAtr0AAFM9AGAjvQDQij0AAKw6AGCFvQDA5rwAACk8AKBAvQBgZr0AwNu8AMBGPQCAxTwAAH+9AMC7PAAAUrsAyBk+AABXvQCA8rwAgHC8AEDHvAAACrsAAOe7AADvOwCAgbwAwJa8AOAxvQCgQ70A4CU9AACBPACASb0AAH08AAAKvAAA8DwAwEU9AADnPABAQL0AgJe8AIBfPAAA7bsAACw9AAB1vABALT0=","chunkHash":"c76c4b2fe2163f88489164a7a042e028075194d86b4d9b9b0f78de0e3d28b5c8"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_comparison(sample_id=None, output_path=None, show=True):\n    #...\n    plt.tight_layout()\n    \n    # Save if output path provided\n    if output_path:\n        plt.savefig(output_path)\n        print(f\"Comparison visualization saved to {output_path}\")\n    \n    # Show if requested\n    if show:\n        plt.show()\n    else:\n        plt.close()\n        \n    return fig\n#...\n```","range":{"startLineNumber":404,"startColumn":0,"endLineNumber":417,"endColumn":14},"embedding":"AIC0PABAtDwAQA29AABwvQBgYL0A8Im9AKASPQAABLwAAAq7AAAMuwAgCD0AAJA8AAAlvACAn70AwDe9AKAhPQAAkTwAYAI9AMACvQCQ6T0AgMk8AKA1vQAAET0AgEM8AGAkvQAAh7wAYHK9APCMPQCgaT0AgCM9AOCBvQBA6LwAAIm9AAAAuQBQzb0AQPo8AAAiPAAAgLgAwLK8AICQvABgiT0AYDa9ACCXPQAALjwAIAU9AIBpPACgOT0AcIm9ACBIPQAA8zsAgIA8AACMugAAnLoAIAC9AACdPACAaj0AgB29AAAvvACAwDwAQJS8AJC9PQDArLwAoGA9AAAPPABgNr0A4B49AFCRvQAAsbwAoB89AECavACAoDwAAMy6AAACPACAqrwAAIQ7AADUOwCgd70AoDk9AICSvAAwy70AAKE8AMArPQBgfT0AALu7AADkvADgdr0A0JC9AIB3vACgH70A4Ie9AMBvPQCAkT0AkIW9AADeuwAA9TwA8NE9ADCFvQCAZb0AgBc8AMBLPQCAjj0AAA68AHCavQBAhLwAcLQ9AACAuwAAdz0AgDW8AICgvADgmT0AwPo8AOCKvQBgBz0AgHg8AABpPABgF70AgLY8AEDHvAAA3LoAQDa9ACB4vQCAPbwAAGG8AAAYugCA+TwAgBg8AECqvADAlbwAgDK8AICTPAAAY7wAgAw8AKC/PQDAYb0AQMC8AFDAvQAAIDkA4CY9AAD8vADA4T0AgDk8AAB/PQAARrwAoHs9AIB3PABgUT0AYK29ABCRPQBA87wAAA89AIAAPQAARDwAQEg9AOBWvQAwnL0A4BO9AECZPAAAxrsAYF69AADcugCAAzwAABy9AIAVPAAAOLwAAM67ACBXPQDA8LwAgKO8AGB1vQDAM70AAN68AADouwAQqD0AYFy9AKCzPQAAHrsAQLg8AKA3vQCAW7wAAG48AOAFvQAAIjsAAOy6AACaPQDAobwAcIK9AOAPPQDAjTwAgOc8AIAXPABwiD0AAD48AMAsvQAAg7sAwLe8AJCIvQAgXD0AAIC6AACmvACALT0AgEK9AOAePQDA3DwAgO88AABEvQDgR70AYAq9AMDVvACA2LwAAAw9AAC2OwDAxjwAIGY9AACAOgCgNj0AAM+8AABqvABQiz0AABC7AIADPAAA/7wAAMI7AICVPQAAmDwAYFg9AIBmPAAAnjwAgGS9AADbvAAAJzwAAC09AMCSPAAAQDoAcL49AACguQCADL0AQDo9AMDCvABgCz0AIAU9AIAmvAAAdDwAQBS9AIBCvQDgMD0AAMs8AGBfvQDgVb0AwB69AAA6PABAqjwAgH89AIBgPABgrL0AAIU7AADdOwBwyb0AIG09AIBevQCgdL0AAPo8AIBXvABAa70AAHQ8AABAuQCAFj0AAPw7ALCQPQBQnL0AAEQ7AIBvPQAAsTsAoDI9AADxPAAAlL0AAEI8AAD2PADQlD0AAHY7AADguwCABLwAAEC8AACaPADA+TwAAHA6AAAIOgBA5LwAAC+8AOB8vQAAt7wAAMW7AICFvABAAT0AAJC6AIDkvAAgAT0AIKY9AABdPQCAiTwAYA69AADRuwAgpb0AAJ27AHCzPQCAW70A4Ao9AMD/vAAAaDsAgE89AMC2PAAAzrwAQOq9ABDEPQCAETwAgEc8AAC3vABAoD0A8Ic9AED8PADAWb0AAB28AMBYvQAwpz0AgJg8AKBgvQBAnDwA8J29AGA4vQDAFz0AgFA8AAB4OgBAdL0AYDG9AOBmPQBA7DwAQFA9AACUOwDAkj0AQOW8AMAqPQAAJb4AAN+8AICsvQDgO70AADI9AIBUPABA+zwAkI49AOAHPQDAQr0AAKK7AMCFvAAA97sAICA9AMCXvAAA3DoAAGC9AGBNvQDgHL0AAIw6AEDrvAAgJD0AYH89AACYvACgVD0AAMY7AECAvABA8bwAAHg7AEC5PADAqjwAAIi8ABCdvQBQjr0AQHC9AOClvQAgCz0AYHE9AACeuwCgbj0AML69AMCSPAAAPj0AgAG8AACYOwAA4zsAQD09AICWPADgXb0AoAo9AIBCPQAAgr0AQBI9AOBOPQBAvbwAoBU9AIB2PQDAzT0AAAI8AIBTPQBA1rwAwJu8AAAHvQAAzDwAAKu7AABVPQAAm7sAgLi8AAD1OwAAQLkAwPs8AJCLvQCgEb0A0MS9AACevAAgor0AYEa9AECqvABgaL0AAKY7AMD+PACAYrwAgCQ8AIAYvAAAtLwAAMA8AICGPQCgOL0AQKE9AOAhvQDAlLwAgCa8AABYOwDASz0AANG7AKDLvQDAxDwAADW8ACCBPQCAPLwAAMO7AECCvAAA5jwAAJK8ALCKvQAAqTwAAF+8AIAavADABb0AQD29AABmPAAAJ7wAAN69AMCoPQDgJj0AAIm8AECcvADQl70AwPw8AAB+uwDgJj0AAIY8AADkuwDwzj0AAL+8AMDBvAAAxjsAYEy9AIBRPQDQwr0AALY8AJCFvQAgpj0AQJA8ANChvQAAubsAAGA8AKAcvQAAV70AQJO8AOBwPQDAYT0AgAm8AAA2PAAA0jsAsNw9AIDwvABAC70AAOE7AEAJvQCAdrwAADC8AECkPADAh7wAgBG9AIBhvQCgY70A4JI9AIC2PABgib0AABw8AMDxPACAIz0AAIY8AEDkPAAAobwAAMW8AABmPAAA8DkAwM48AMA7vQBgID0=","chunkHash":"85ccdf36b49d06bd7443dddf7bed518c43b2d25fb899ea29b4f5e8d97cade65c"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_all_three_separately(sample_id=None, output_dir=\"visualizations\", show=True):\n    \"\"\"\n    Create separate visualizations for all three MorphoFeatures model inputs.\n    \n    Args:\n        sample_id (str): Sample ID to visualize (optional)\n        output_dir (str): Directory to save visualizations\n        show (bool): Whether to show the visualizations\n    \"\"\"\n    # Create output directory if needed\n    if output_dir:\n        os.makedirs(output_dir, exist_ok=True)\n    \n    # 1. Shape model input (point cloud)\n    shape_batch = load_shape_model_input(sample_id)\n    shape_fig = visualize_shape_input(shape_batch, show=show)\n    if shape_fig and output_dir:\n        output_path = os.path.join(output_dir, f\"shape_input_{sample_id or 'random'}.png\")\n        shape_fig.savefig(output_path)\n        print(f\"Shape model input visualization saved to {output_path}\")\n    \n    # 2. Low-resolution texture model input\n    try:\n        # Get a batch from the lowres texture dataloader\n        #...\n```","range":{"startLineNumber":420,"startColumn":0,"endLineNumber":443,"endColumn":0},"embedding":"AICOPQAAZz0AAO08AKCvvQCggr0AoIe9AIByvABA+LwAQNE8AAD7OwAAIjwAgFI8AKACPQCg4b0AoJO9AAAbvAAAeDwAoFw9AIDsPADQmz0AQEw9AOBUvQCApDwAQMQ8AIDBvADAkbwAwIq8AJCWPQBgfj0AQJI8AACXvAAAY7wAYNq9AAAOvADgxL0AwHA9AICXvAAAWjwAAPa8AIDpPAA4HD4AAP+8AIAPPQAAbD0AkLE9AMDhPAAwlD0AYI69AAD2OwDA3jwAwBA9AKAgPQCAcrwAkJ69AKB8PQCAOjwAkJ29AOA2vQBAqrwAgEe8APCnPQAA/rwAIKQ9AADQPAAAPrsAABk9AGALvQCgO70A4Gs9AAAKvACA57wAALy7AIAxPQAANDsAQLM8AGASPQDgyb0AgPA8AAD8vQDAgL0A4Fg9AKB5PQCAVjwAQGo9AFCNvQDAFr0AAF+8AIDLvACAWjwAIGC9AIA2PABAWz0AoMW9AADEuwAAKLsAAEo9AEAnPQDwmL0AAFW8AMDoPAAgVD0AQIs8AGAMvQDA3TwAQOc8AAAVPABQnj0AwPw8AABcPADgJz0AAMm7AGARvQAArT0AgKm8AIAiPAAAsbwAAO+8AACTuwAAALwAYEK9AMBLvQAAcz0AAF08AAAfPQAA2jsAgDo8AEAdvQBAqbwAQLG8AAD6OwDgQD0AAJC6AFDIPQAAW70AQNM8AEDYvQAAJrwA4C89AEAnvQAQkj0AoA49AMB9PQCgJj0AANU7AAAiOwAwiz0AoCy9ACA3PQAA7LwAADA8ALCWvQAA47sAgMc8AOB9vQAAL7wAALa8AMDdPABACT0AAFM8AAAKOwCAlzwAAO87AKAGvQAAfLsAgI69AMDVPAAA2rwAABQ9AOClvQDgwr0AQIW8AACwOgCAgz0AALW9AHCePQBA0rwAIAC9AKA7vQCAXzwAgHQ8AACxvADgej0AAAy9AAA7PQCgML0AALO7AIB+PACA9TwAAKC6AMDePABAgjwAAAK7AMCrvABgCD0AYBc9ACBevQBA3jwAwKo8AIAGPAAAwLkAQLO8AECtPQCAYz0AQDu9AAAmvADAjLwAAFW8ACBrvQAAUbwAgPU8AMCNvAAARD0AALs7AOAlPQAA2zwAwKA8AFCgvQAAxjsAgGQ8AABiuwCAlTwAoBC9AMA3PQCAFTwAcIs9AADgOQAAh7sAYIq9AACUOgAAODwAICU9AOAqPQAA8zsAKAM+AABgugAgNr0AAEw9AECuvABA7zwAANQ6AABguwCANTwAQEa9AOAxvQCgTz0AQJU8AIBdvADAUr0AYDK9AABfPACA9DwAEJ49AIAxvQBAV70AAJ47AMCyPQDAzr0AwMk8ANC/vQAAGrsAwJw9AMCavABgqL0AoE89AACcPAAAK7wAgN28AOASPQDA4LwAwEY9AGAkPQAAHbwAACU8AACwOQBAR70AAGU9AMC/PABA3DwAgEQ8AAA8vAAAursA4DG9AEBqPQDgcz0AAKg6AABMOwCAAL0AAHw8AECWvQDAX70AgHI8AGBFvQAAHjsAIGC9AICZPAAAAjwAgHo8AEBJPQAA9zsAwIG8AICqvACgXr0AgDS8ACBgPQAArLoAQOk8AOBDvQAA17wAYJg9AICfvABAurwAIN+9AGAbPQDAEr0AgHU8AABtvQBATT0A0J09AOAfPQAAGr0AUIa9AEDCvACAAz0AAIS7AACnuwBAsjwAAIC9AMDlvABA8bwAAOG7AAAgugBAM70AQIK8AICEPAAADLsAgKY8AIAqPAAAn7sAQLU8AMAEPQAAFr4AAGi6ADCbvQCAf7wAoAQ9AICRPADAjzwAoDY9AACIugBgQb0AAFg7AIAZvQCAIrwAABI8AGAKvQBgJD0AEIu9AAByvACALL0AANS8AEBmvQAAKT0AoFM9AABgvACgHj0AAMQ7AACtvAAAvLoAACo8ACAIPQDAHj0AIA29ACAWvQAAaLwAwK29AHCpvQCAQj0AIBw9AEB+PQAAYD0AoG69AMDVvADgID0A4AC9ACA/vQAAyrsAAPw7AECavACA4LwAIEk9AEDWPACgU70AgHY9AEDWPQAAnDoAANg8AKAUPQCgWj0AgGS8ANCUPQBgGb0AALC5AEDivAAAlLoAAA08AHCSPQCAuDwAAJa8AKAMPQAAwLoA4DE9AKBivQCACL0AIAa9AEDEvABAxbwAAM67AIBwvADA1LwA8I09AAD4OwBgOr0AQOw8AACSvADAqL0AAIG7APCzPQAAoLsAADw7AACtuwBArrwAABu8AKAXPQAAUzwAYCg9AHClvQBgaz0AgFW9ACAaPQCgHL0AwNI8AACmvAAgMj0AAKQ7AMAEvQAAlbwA0Ju9AIAqPAAgJL0AQFa9AABQugAAQLkAUMm9AJCLPQAAxT0AADy7AMCVPACAo7wA4Aw9AAA1vADQkT0A4GQ9AACYuwDgKD0AAL67AID6vACABr0AAOW8AGBLPQAAMb0AwKs8AIA8vQDgCz0AQEo9AACWvQCAI70AIIW9AICovAAA2jsAAEC9AGCOPQAgFT0AQM69AIDyPABA4bwAAIU9AACGvQAA47wAwOM8AICsvACA6TwAgCU8AGAJvQCASbwAAN68AICkvQCgwr0AQME8AABZPAAA07sAIC09AIC8vADA4DwAANM8AGBovQAAkLoAgIW9AAC9OwCA2rwAgHc8AIDQvAAAUT0=","chunkHash":"422f9e1e6460d76f3f6ec5b41eeb8db281e81f0a0dbf407d2822fbea4b200c02"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_all_three_separately(sample_id=None, output_dir=\"visualizations\", show=True):\n    #...\n        lowres_dataloader = get_morphofeatures_texture_dataloader(\n            root_dir=\"data\",\n            batch_size=1,\n            class_csv_path=\"chromatin_classes_and_samples.csv\",\n            sample_ids=[sample_id] if sample_id else None,\n            num_workers=0,\n            debug=False\n        )\n        \n        for lowres_batch in lowres_dataloader:\n            lowres_fig = visualize_lowres_input(lowres_batch, show=show)\n            if lowres_fig and output_dir:\n                output_path = os.path.join(output_dir, f\"lowres_input_{sample_id or 'random'}.png\")\n                lowres_fig.savefig(output_path)\n                print(f\"Lowres texture model input visualization saved to {output_path}\")\n            break\n    except Exception as e:\n        print(f\"Error loading lowres texture input: {e}\")\n    \n    # 3. High-resolution texture model input\n    try:\n        # Get a batch from the highres texture dataloader\n        #...\n```","range":{"startLineNumber":443,"startColumn":0,"endLineNumber":465,"endColumn":0},"embedding":"AABdPQBAEj0AgO08AGBrvQBAOb0A0KC9AABquwAgF70AALm7AADXvACAnDwAwJ48AACgPAAg070AYGW9AACCPAAA3TwAAGE9AAD4OgAwgD0AoJc9AECTvQCAnjwAgCU8AAC0OgAAP7wAoBG9AOClPQAwiT0AAMk8AGAQvQDAsLwA4Kq9AEAKvQAoBL4AAHw8AAC6uwAAzjwAANa7AAB8vABgBD4AQP+8AMCtPACA3zwAIK49AACCPACAEz0AUKi9AEB4PQAADjwA4AM9AECQPABAhDwAAHy8AAB8OwCA8DwAwHW9AKAJvQCACb0AoBS9ALCcPQCgBb0AkLg9AAB0OwBAkLwAoAI9ANCSvQCA/rwAAMA8AABwOwCAJbwA4AC9AGAIPQCA6rwAoE49AECgPABgrb0AQNE8AKgLvgDAQ70AsII9AKB3PQAAqDsAgEw8AAA3vQCgN70AQOm8AABovAAALjsAQHi9AABEvABgrj0AwGK9AICFPAAABLsAoIE9AADFOwAwtb0AAAy8ACAQPQAggj0AgD08AGAWvQBAqjwAwN88AACgvABA7zwAAAC4AADjOwBAHz0AAFi6AMByvQDgaj0AAC68AKBaPQCABr0AgMC8AABUuwCAc7wAQLG8AHCGvQBAfT0AAJi7AIApPAAA2LoAALI7AIAcvAAA47sAACg7AICtPACAkT0AAKC8AGCwPQCwkL0AALe8AODFvQAAgLkAgEM9AIC0vABg2z0AgFc8AGBMPQBAhjwAwKs8AABOOwAwtj0AYGK9ALCRPQAARjsAIAU9ACAivQAAursAgDQ9AGB6vQAAh7sAQGi9AMCRPACgST0AANa8AACUuwCAkjwAoAa9AAD8OwAAGzwA0Ky9AIBfPQBAKL0AAOs7AIC9vQDwhb0AQM+8AIA5vABgEz0AEM29AKBePQBA+bwAgFi8AAATPACAUrwAAOA7ACAGvQAgET0AACS7AEDxPADAN70AAHW9AIAuPABALj0A4E69AMCTPAAA7jwAwMw8AECAvABA9DwAAGM9AGArvQDgDz0AwDk9AAAgvAAAYTwAAKK8AGDqPQDgKz0AwOq8ACAXvQDAqrwAgDS8AEBkvQCAfLwAQCI9AAACvADAUz0AYDQ9AIAiPQBACD0AAHG8AOAjvQCAOT0AQJc8AABsuwAABDwAgH28AGCHPQCgFj0AIG89AADHuwAA1rsAwGa9AIACPACAYDwAIBU9AADAOgCAJz0AsLs9AICHPAAgMb0AwKM8ACB0vQCgMD0AAO07AEDjvAAA1DoAIAa9AICAvACgbD0AgGE8ACAxvQAAhb0AANy8AIBevADAqTwAwEc9AABauwBwxL0AAFi6AOCPPQDA+L0AwLw8AJCrvQBA4bwAgEc9AIANPABgoL0A4HY9AIBCPQAAgLsAAHG8AACUPACAV70AQIU8AMAJPQAAnbsAQM08AAASOwCwgr0AAGE9AAB4PABgMT0AAAg6AEDlPAAA5DoAIDS9AOAHPQBAJz0AwLm8AADbuwAAnr0AABY8AGCQvQDAVb0AwAA9AMAavQAA4DkAICe9AECBvACAH7wAAE88ACBNPQCAHTwA4CS9AOAVvQDAjL0AgCi8AABFPQCA8bwAYC09AACQvACAmLwAIMc9AACnuwDAG70AkLi9ADCoPQAAADsAwI88AADevADQnT0AYH89AABBPQBARr0AQCi9ACBsvQBAJD0AAJo8AADFuwAA8jwAMJW9AAASvQAAnrwAAFq8AAAMPACgML0AAL07AIBBPAAA4LsAgNw8AADeuwCAwjwAAKU7AIB8PACAIr4AgHm8AICxvQAAOTwAYG09AEBNPQBA3DwAgKE9AEC7PADgKL0AwOc8AEDrvAAANrwAAIs8AIAEvQCAnzwAoIC9AEADvQBgPb0AgBm8AMBKvQBAaD0A4Lc9AACAOACA7jwAABo8AEApvQAAfDwAwMo8AEDfPACAGj0AgJ68ANCFvQCAJbwAQKy9AICPvQAgSz0AgIg9AADgugBQqT0AAFW9AABkOwBglT0AwG69AKBMvQCAV7wAQB89AACjvACA87wAQLY8AMB6PQDgV70AQOw8AJCpPQAAbDsAwA49AABEPADQuj0AADi7AIBbPQBA07wAABu8ACAlvQCApbwAAHU8AJCEPQCACDwAgM+8AIB3PQCAb7wAgNs8ABCEvQCgJ70AIGG9AMCqvACA1bwAoBC9AIAwvADAP70AYMw9AIB7vAAA9LsAAIu8AICgPACgJr0AwA09AKDOPQCAUbwAAM+7AAAEPAAAkrwAAMy7AADdOwAA0jwAgDs8AOBJvQCgGz0AgBG9AMABPQAwgr0AwPE8AADVuwAAUDsAAC68AKBFvQDAgbwAYD29AACMOgDAFL0AcI69AECUPAAAursAQKq9AJCOPQDgpz0AwP+8AAAbPAAAs7wAgLo8AICRvACgfD0AYDA9AAA+OwBgZT0AALA5AACquwAAwbwAwAG9AGApPQCQi70AQM88AACvvACAUT0AwCM9AAAvvQBAMr0AYAO9AGBPvQBAwLwAwPq8AAB6PQAAbzwAwOq9AMCRPAAAOzwA4MU9AIBMvQDAyLwAgN88AECvvAAgIj0AABa7AADkOgCAgLwAgN68AAACvQAgub0AAKa7AAAtPAAgFL0AMIA9AIC0vAAgLj0AwKM8AAAoOwCAzLwAgL+8AAAIugAgQ70AAMU8AAD+uwBwhT0=","chunkHash":"1a49c9786691e0c73a30554b5ec1e81a70da61b06336968b451a76170fa1890f"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef visualize_all_three_separately(sample_id=None, output_dir=\"visualizations\", show=True):\n    #...\n        highres_dataloader = get_morphofeatures_highres_texture_dataloader(\n            root_dir=\"data\",\n            batch_size=1,\n            class_csv_path=\"chromatin_classes_and_samples.csv\",\n            sample_ids=[sample_id] if sample_id else None,\n            num_workers=0,\n            debug=False\n        )\n        \n        for highres_batch in highres_dataloader:\n            highres_fig = visualize_highres_input(highres_batch, show=show)\n            if highres_fig and output_dir:\n                output_path = os.path.join(output_dir, f\"highres_input_{sample_id or 'random'}.png\")\n                highres_fig.savefig(output_path)\n                print(f\"Highres texture model input visualization saved to {output_path}\")\n            break\n    except Exception as e:\n        print(f\"Error loading highres texture input: {e}\")\n#...\n```","range":{"startLineNumber":465,"startColumn":0,"endLineNumber":482,"endColumn":58},"embedding":"AGBpPQAAwDwAALk8AOB/vQBAQb0AgMG9AACgOgCAEr0AAEq7AIDvvADA9zwAgII8AIAIPQAA9r0AsIC9AACmPACAJTwAgIo9AACIOgDAiT0AEIk9AOBtvQCArzwAAJA8AAD0uwAAZbwAACe9AJCoPQAQlj0AQKM8ACASvQCAoLwAgJG9AIDJvACIDL4AwNQ8AADbuwAArjwAAFC7AAAOvACAFj4AQPm8AEDdPADA5jwAQI49AAA+PABA2jwA4KK9AFCIPQCANTwAwBk9AAC1PAAAjDsAAGS8AADlOwDA+jwAkI+9AMDevABA/rwAABu9AECxPQDACr0AQLU9AADbOwDAirwA4Ak9AGB4vQAA5rwAAOk8AAAcuwAA1DoAwMa8AOABPQDAzLwAwDQ9AMCdPAAgpL0AwPM8AAgEvgAAab0AYE49AKBmPQAAvTsAgBA8AMBcvQBAJr0AAD69AICUvAAAuzsAgFa9AADsugAAtT0AUIW9AIA+PAAA/LoAwIM9AADkOgCgtr0AANe7AIAWPQBAPz0AAMo7AMA7vQCAqDwA4AM9AMC8vADAxjwAACw7AAAoOwDA/jwAgDc8AAB4vQDgGz0AgCm8AMBkPQBAwrwAAAS7AABiuwAAeLwAgCu8AGB2vQBgYD0AAPi7AACWOwAA2bsAALE7AEDdvAAAYjsAAMC7AEC7PAAwgT0AgEO8AIDBPQCwj70AgEG8ACDFvQAAw7sAQFo9AADQvAAw7j0AgDE8AEBcPQCA7DwAgMg8AAA2PAAgqT0AgGu9AICgPQAAMTwAQM48AMARvQAA9rsA4AY9ACCCvQAAYDkAQDq9AADQOgCgEz0AwPC8AADLuwAAaTwAAP28AADJuwAAtzsAYI+9AMBOPQBgF70AAOA5AHC5vQDghb0AgAy9AACpvACgUj0AoIy9AICKPQBAx7wAAHa7AIAqPABAm7wAgAs8AED1vAAgFT0AALc7AEARPQCgC70AoFi9AMCwPAAACj0AAP28AAAUPQCAKz0AgG48AECWvABgDj0AoCw9AGBRvQBgDj0AIBU9AECQvAAA3jsAAOm8ABDZPQCgOD0AQIy8AKAavQDgCL0AALS6AEBuvQAAS7wAAAg9AABuuwBAIz0AIC09AGAIPQDgKD0AAHa8AAAOvQDgNj0AgGM8AAA3vAAAjDsAABS7AGBrPQCAyzwAQIY9AABYOgCAJbwAgEa9AACAOgBAijwAQKM8AAA4ugAAOT0AYLs9AIAUPABAR70AgLU8AHCHvQAAEj0AgEc8AECvvAAAADkAANK8AADRvAAgYD0AQNg8AEA1vQCgSb0AoAS9AAChuwAAaLoAIE89AABAugCAwb0AALS6ABCFPQAg570AQOs8AKCJvQAABL0AYGw9AADtOwDgnr0A0II9AIAsPQAAaLoAgCm8AEDUPADASb0AQNA8AMApPQAAijsAAKE8AACsuwBgfb0AAHc9AMCkPAAAVz0AAKc7AMCOPAAAYLkAQCu9AEDKPAAARD0AwI68AADZuwBgjr0AgH08ACC2vQDgQ70AgKg8AMAtvQAAGTwAoBG9AIA5vAAAhjsAgIw8AMBZPQAAGzwAAMy8AKATvQAQqL0AADS8AAB2PQBA/bwAoBc9AED6vAAAHLwAoMI9AABMvABAwrwAAMC9AEDGPQAA3TsAgMA8ACAUvQCgnD0AAHY9AMBIPQDgVL0AYEO9AMBDvQAgGD0AQK48AMCVvABAsjwAsI69AAACvQAA2DsAAMa7AACyuwBgV70AgDq8AACqPAAAkLkAgHg8AIAbvAAADzwAAJ+7AIA2PAB4Ir4AgKy8ALCwvQAAtzsAoIQ9AABmPQDAxzwAgKA9AECBPACAYr0AQKE8ACAVvQAA6rsAQMc8AADjvAAADTwAoI29AGADvQAAbb0AgCm8AABUvQBAdz0AwLc9AIB4vACgBD0AAJy6ACA2vQCAWTwAAME8AIDSPACgGj0AQOS8AKBlvQCAxLwAsKS9AICavQAgXz0AgF09AAAUPAAQkD0AYFa9AAD0ugCQjD0AMIu9AMBRvQAABLwA4Bc9AACCvACAA70AAKg8AKBqPQDAc70AgN08AKCnPQAA67sAwMk8AACuOwBgrD0AALq7AIBSPQCAu7wAAP67AEAJvQAAhLwAAI08ACCNPQAAKDwAwN68AAB/PQAAp7wAwCE9ABCLvQCACL0A4E29AIBnvADgDr0AgC29AAApvABASL0A8ME9AAAWvAAA5DoAQIW8AIDkPADgLr0AgGY8AGC8PQBAnLwAALI7AABPPADAubwAAOK7AAAUPACACj0AgHA8AGBkvQAgBj0AwC+9AAAfPQBgQL0AAOc8AADSuwAALDsAAK67AECBvQCAxLwA4DS9AABTvACABr0AoIC9AIDIPAAAWrwAoLK9AOCiPQDgsz0AwP28AADgOQAAQrsAgGY8AIBVvABAaD0AQF09AABquwCQiz0AAGC6AKABvQBAvrwAQPC8AIBePQAwkb0AAMU8AAABvQAgVj0AwP08AKBXvQAgM70AQCe9ACAdvQCA/LwAgB+9AMCGPQAAYjwAMN29AMChPACALDwAYNE9AEBcvQCA6rwAgPA8AADBvAAALT0AAMu7AADeOwCAeLwAoCG9AMCsvAAQsr0AAN67AAClOwDALb0AoGo9AEDDvADgAj0AALc8AIBwPAAAsLwAgAW9AAD0ugCgB70AQJA8AACxvAAgRT0=","chunkHash":"27a4feac5057b7b602bda5180696ca9be3bd463f1162a71a41a60a3ce871de72"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Compare and visualize all three MorphoFeatures model inputs\")\n    parser.add_argument(\"--sample_id\", type=str, help=\"Sample ID to visualize\")\n    parser.add_argument(\"--output_dir\", type=str, default=\"visualizations\", help=\"Directory to save visualizations\")\n    parser.add_argument(\"--combined\", action=\"store_true\", help=\"Create combined visualization\")\n    parser.add_argument(\"--separate\", action=\"store_true\", help=\"Create separate visualizations\")\n    parser.add_argument(\"--no_show\", action=\"store_true\", help=\"Don't show plots, just save them\")\n    args = parser.parse_args()\n    \n    # Create output directory if needed\n    if args.output_dir:\n        os.makedirs(args.output_dir, exist_ok=True)\n    \n    # Default to both combined and separate if neither is specified\n    if not args.combined and not args.separate:\n        args.combined = True\n        args.separate = True\n    \n    # Create combined visualization\n    if args.combined:\n        #...\n```","range":{"startLineNumber":485,"startColumn":0,"endLineNumber":504,"endColumn":0},"embedding":"AKACPQCAsT0AAFA6AKC/vQAgdL0AMJW9AAAzPAAAILkAABU8AIBdPAAA2jsAwOe8AADwOgDwtL0AIE29AMDKPAAAgzsAoG49AICFPABgoz0AQOw8AGAUvQAAELoAALw6AEANvQDAd70AQAy9AACgPQDART0AAAo9ACBMvQAAtbwA4Lu9AADQPACQ4L0AgGA8AMABvQAA0zsAAJy6AAChuwDA0z0AoEm9AIBfPADgUj0AgNE8AACeuwCgdT0AIDe9AOAnPQAAa7wAAEC8AAAwOgAATLsAAOw6AMDlPAAA/TwA4HO9AMA6vQBgOL0AADK8AECRPQAggr0AAEA9AACIOwCQh70AwOw8AKAjvQAA5LwAgAY9AAAYuwAAQDsAAFA8AGBZPQCAoLwAAGY8AAD8OgDgOb0AwHA9AFDHvQDwmb0AwOg8AABxPQDACj0AwA89AOA7vQAAj70AADw7AAAGvAAAwbwA0LK9AIAKPQBwgz0AAFi9AICLPACALz0AIGk9AED6vAAAt70AAO47AIDYPABAiD0AAOe7AFCUvQBAQD0AAHs9AIATvACQkz0AQIc8AMBfPQAQhD0AAJq7ACAdvQAQlT0AAAW9AMDnPADAubwAwA69AACAuwBAuDwAcJy9AOAEvQDgFz0AAF08AAAmuwAAtzwAQOQ8AADYvADA8bwAgNa8AID8PABAyzwAAAG8AKDUPQAAdr0AgBa8AODhvQBAsbwA8Jk9AIAfvQB4Bj4AAAY8AIBhPQAAojsAwL48AADIuwCgWT0AMJK9ACBuPQCAO70A4A49AACBvAAAwLoAQGo9ABCLvQCA97wAwMO8ACAzPQCArzwAAFw7AADAugCgPj0AgL+8AADouwAAMDoAgBG9APCBPQBAsLwAAEs8AMCjvQAwoL0AIF+9AOAFvQDA/jwAAK29AEC0PQCgEr0AgA68AKBuvQAABjwAQJY8AMDavABAxjwAALS8AOA+PQDA2LwAQL28AABAuQCgIT0AAGy7AIDVPABAZD0AQJE8AABKvADAlzwAQOE8AGA1vQAgeD0AAF47AACeOwAgQj0AwOW8AKBoPQAgQz0AwMC8AKAQvQBgN70AAPS7AGAIvQBgBr0AAF09AACpuwDABT0AoEo9AOArPQBA3TwAQNy8AGCGvQCAfDwAAD08AIDxvAAAnzwAwB+9ACDCPQAAQjwAwKA9AACvuwAAJj0AgIq9AABNvAAAGTwAgDI9AIDwPAAA2LoAUNQ9AIA3PADAO70AgDE9AAD9vABgPj0AAAs9AABeuwAA4DoAgP+8AAAIvQAAsDwAgGI8AMA7vQAAhL0AgPa8AIAYPABAOD0AkLg9AACouwDgSb0AAGi7AMCEPACQ3L0AIA49APCxvQDA/LwAIDg9AMAEPQDgrr0AANU8AICTPAAAKjsAgLa8AIARPQCAar0AAFw7AGAAPQCAtTwA4F89AIAiPABAmb0AQOQ8AADzPACAgT0AgLo8AICQvAAAOLoAAIy8AJCTPQCA/jwAYAu9AAAVPACAcrwAgFe8AGBMvQBATL0AQJo8AAARvACQhj0AIBq9AAAquwDAzzwAADk9AOCKPQAgBD0AgD28AMCSPAAgab0AANI7AMAfPQAAKjsAIGM9AAAYOwAA0bwAAA09AMDKvAAA0LwAoOW9ACCePQCA07wAgJQ8AGAuvQDAxj0AsIM9AIDJPABgCb0AYFW9ACBEvQCgez0AACQ7AIBZvAAALjsAAGi9AAAQugAAlLwAADc8AIB1PADQgL0AAGS8AAC+PAAAfjwAAFE8AACgOQBgLj0AgIA8AOAmPQCwJ74AAGa8ANCxvQAAk7wAQNI8AID4PAAAJrsAwKA9AECGPAAAnrsAgIW8AIBevAAA9LsAgBg9AABTvQAAo7sAIEW9AADBOwAgIL0AABg6AMCjvACgID0AAAK7AACkOgDgDT0AAMy7AMDvvACAOLwAAA47AMCYPAAAgLoAoFS9ALCFvQAgY70AABm9AHCqvQCAGDwAcIA9AAAmOwCgYD0AQF69AICovADA0zwAgHe9AADlvAAAGr0AwBc9AADbOwCgP70AgKI8AABTPQCgib0AQC09AMB+PQAA4zsAQKA8AGCoPQAwuj0AAKG7ABCVPQCAP70AAOg6AABGvQAArTwAQL88ACCrPQCAWDwAAJC7AMCyPADAmjwAgJU9ALCTvQAAgLoAAJK9AADcugDgcL0A4DS9AECUvADAhbwAwAg9AMBhPQBAh7wAAKY8AICmvADgOb0AAGg6AJC3PQAAsLwAgCI9AIBlvABA4bwAAHq7AKAEPQCAvDwA4C49AMC5vQBAiz0AQMu8AIA6PQDAmrwAgA+8AEDqvADAYT0AQL08AFCSvQAAr7sAgDy8AACqvABAJb0AQJq9AAC+PACAVbwA0LS9AACdPQBAhD0AAKk8AAApPQAAybsAwHA9AMCrPADAVD0AwBY9AEBkvQBABj0AoDC9AIB3vADAo7wAALG8AEDvPACAEb0AQEE9AIBZvQAAxzwA4BU9APC9vQAA2rwAwPG8AIB8vAAAprsAwDO9AFCVPQCQjj0AAIK9AOAFPQDA/LwAgMk9ALCAvQAANb0AAHK8AEDRvAAAirsAAHy7AICuvADAgLwAgGC8AOCdvQBwk70AAIw8AAA+OwDABL0AIGc9AIDFPACAiD0AAIM7AAAIvACAeLwAAEg6AABSOwDAVL0AwNA8AADnvAAgQz0=","chunkHash":"caf0fcab161957117ff560c5b63505de9dd410efb8472aa6f2f94f740573f681"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\ndef main():\n    #...\n        output_path = os.path.join(args.output_dir, f\"morphofeatures_comparison_{args.sample_id or 'random'}.png\") if args.output_dir else None\n        visualize_comparison(sample_id=args.sample_id, output_path=output_path, show=not args.no_show)\n    \n    # Create separate visualizations\n    if args.separate:\n        visualize_all_three_separately(sample_id=args.sample_id, output_dir=args.output_dir, show=not args.no_show)\n    \n    print(\"Visualization complete!\")\n#...\n```","range":{"startLineNumber":504,"startColumn":0,"endLineNumber":511,"endColumn":36},"embedding":"AKAxPQBgKz0AAKK7AFClvQDQur0AEK+9AEACPQBA5bwAAMw7AABHPAAAVDwAAE48AACMOgBg6r0AIES9AGAGPQCAI7wAoCU9AICHvACgeD0AwAg9AEBjvQBA7zwAABg6AOApvQAANL0AYCG9AJDAPQDQjz0AAMM8AKApvQDAybwAEIi9AACiuwAQ2b0AwMQ8AACYPAAAfrwAADQ7AACxuwAg3D0AoIC9AEC+PAAAPTwAoCo9AMCbPAAAIj0AEIW9AFCCPQAA3bsAAFa8AECOPAAA4zsAwAO9AIDYPAAAOT0AQEG9AAACvAAAPbwAoFK9AECqPQBAgrwAYKA9AACHPAAA+LwAgCE9AKBDvQBgB70A4Ac9AAACvAAARLsAQM08AACZuwAAprsAwM08AIBBPAAAab0AgAI9AOBqvQDAT70AAJQ8AACKPQBghj0AAOU7AEDnvADAfb0AAOW8AEDzvACAVb0AsJK9AICNPABwuT0AkI69AECnPACA0TwAUJ89AGAgvQAQkL0AwKg8AOAyPQBALD0AAIe7ADCYvQAApLsAUJs9AIBgvADgiT0AwNk8AABsPABQvT0AAL07AOAivQBAhT0AgLG8AGA6PQAAGbwAwBw9AIAjvAAAIjwAwHy9AOBmvQAAWrsAwJm8AAA3PADALz0AoBo9AAAnvAAAmDsAgGO8AKAjPQAArDoAAEy7ALCcPQAA/bwAAJm8APDivQBA7rwAIGY9ACA3vQDQ+T0AgAA9AKBwPQAAmDsAwPk8AMCIPABAkj0AAIe9AICTPQAAT70AICQ9AEAAPQAAujwA4F49ACCIvQBgDb0AACu8AIBlPACAjDwAABi9AAAquwAALD0AwD+9AEDCPAAAZ7wA4D29AICaPAAAULwAAA28AICnvQBgh70AgBa9AMCcvABgVj0AgGy9ABDJPQAAr7wAACK8AIAdvQAATjwAwMg8AMDdvAAA8DsAAMu7AGBpPQCgTL0AQJ68ABCAPQAAMjsAAIA8AABdPABAYz0AAJw8AABrvACAVzwAgEs8AGBxvQDAOz0AgNC8AACdvADgOD0AYCC9AEAuPQAgSD0AABA6AOB8vQAgLr0AABu8AGAqvQCAt7wAgDo9AADgOQCArzwAYFM9AECjPABgMT0A4Ca9AOAgvQBgtD0AAJ+7AEC/vACAeTwAgAW8AEBaPQAA4jsAkJU9AACGOwBA9DwAYGO9AAAivACAezwAICc9AOADPQCAUjwAoJc9AAAAuADANr0AAD09ACBHvQCgFT0AgAY9AMCWPABgBj0AgKi8AOBhvQDAwzwAgHA8AKAhvQCA6bwAANm8AACfOwBAzzwAwFo9AABWPADwy70AAIO7AADxOwCwn70AAHA9ANCTvQAA57wAIBw9AIBBvAAgwb0AgBI9AAA5PACAsjwAoAm9AACMPQDACr0AwLo8AECYPACArjwAwB09AMDPPACAOL0AQCI9AACePABgjT0AYBc9ACAvvQAAnTwAALy7AMAkPQCgGT0AgLm8AACcugDALr0AACi7AEB+vQCAWbwAAPK7AABEuwAAhjwAAMg6AICcvAAA8zwA4E89AKBBPQAA+DoAgJK8AADCuwCwjL0AAIO7ANCVPQBgKL0AwBI9AGBBvQCAA7wA0IU9AABvPACAgrwAMPu9AHCmPQAAgDkAgCQ9AEAuvQCAaj0AAIs9AIBcPQCgkb0AwKK8AABFvQCAaz0AgH08AIAGvQDAyDwAICW9AICHvAAAg7sAACQ8AACJOwAQor0AgJS8ADCRPQDgFz0AICQ9AIATvABAaj0AgEY8AIDtPAAYJL4AwI68AADHvQBgKb0AABI9AIAJPQAArzsAIHo9ACAEPQDgO70AAFA6AADCuwCAkLwAwCI9AIAuvQCAl7wAAC+9AGAZvQBAHL0AABa7AMD9vAAgjz0AQD89AEAPvQAAEj0AAIm7AMDdvACAJr0AAOI7AAAlPQCAqzwAAGe8ANCnvQCAVb0AgIW9AFCovQCAfzwAIHg9AEClvAAAbT0AAKm9AAAOvAAgFj0AgPu8AACxvAAAVDsAgPA8AAAIOgCwi70AwMo8AGCPPQCQkr0AgL88AGBsPQAgI70AwD09AGCIPQDQ1T0AAN87ACA+PQCA2rwAABK7ACA3vQAAZDsAgOc8AABhPQCAQDwAgPm8AIAdPQDgCz0AQDQ9AMCyvQCAkrwAYLW9AACAuwAAhb0AQBC9AAC0vADgNL0AAAk8AKBVPQAAJjwAAPm7AIAAPAAAKr0AYBU9AKCbPQCANbwA4HY9AACJvACAMbwAwJ+8AECtPAAAfD0A4A49AOC8vQDALT0AgGa8AABNPQAALjwAgHI8AABQPAAAEjsAADu8AFC2vQCAd7wAAEC9AACEugDgKL0A4Je9AAAZPAAAkLwAYNW9AAA6PQDAcT0AAEI7AEDhPABgH70AwOs8AGBEPQBAEj0AoCU9AOAyvQDAcT0AwDW9AEA3vQAA/LoAAOO8AOBxPQBgcb0AAPM8AOAevQDAMj0AQM08AIDWvQBAubwAgC+8AKArvQBAMb0AACu8ALCFPQDgoT0A4Em9AIByPAAAzDoAoLw9AOBGvQAA17wAQKG8AIAavAAAXrwAAH+8AAC5uwAAYbwA4Dm9AGBUvQAgj70AAFE9AIBevACARb0AQHY9AIAXPACAJz0AgBw8AOAwPQAAYDwAAAA5AIA6PAAA/LoAgAQ8AMBCvQCgAj0=","chunkHash":"906e2f46e36f0e0669d358bcb4f785c0192a9871a7c13513334aaa7704906a7a"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\nimport os\nimport sys\nimport torch\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom PIL import Image\nimport argparse\n\n# Add parent directory to path to allow imports\nsys.path.append(os.path.dirname(os.path.abspath(__file__)))\n\n# Import dataloaders\nfrom dataloader.lowres_texture_adapter import get_morphofeatures_texture_dataloader\nfrom dataloader.highres_texture_adapter import get_morphofeatures_highres_texture_dataloader, extract_cubes\nfrom MorphoFeatures.morphofeatures.shape.data_loading.loader import get_train_val_loaders\n\ndef load_shape_model_input(sample_id=None, config=None):\n    #...\ndef visualize_shape_input(batch, ax=None, show=True):\n    #...\ndef visualize_lowres_input(batch, ax=None, show=True):\n    #...\ndef visualize_highres_input(batch, ax=None, show=True):\n    #...\ndef visualize_comparison(sample_id=None, output_path=None, show=True):\n    #...\ndef visualize_all_three_separately(sample_id=None, output_dir=\"visualizations\", show=True):\n    #...\ndef main():\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":484,"endColumn":11},"embedding":"AADTPAAA2DwAAC48AGBWvQCAJb0AIHG9AMD6vACgFr0AgBi9AACGOwDA4jwAAFo7AADaPABwlL0AAIq8AIAjPQAAaLoAMJQ9AMCdvQBAjT0A0IY9AAAnvACAbjwAYBO9AABuuwAgD70AAIe7AHCfPQBQnj0AAMQ8AKAOvQCAcLwAgOu9AABWuwBA+b0AALq8AACYuwAA1LoAgHY8AAA4vAAgtD0AAKm9AIDuPABgOz0AQM08AABxvACAoTwAYKC9AGA/PQDAvTwAgI88AECsPACAAz0AADQ7AAC3uwBgUj0AYGa9AAC6vADAgjwAgKI8AGAWPQAgf70AwCk9AAAtvAAAzbwAwKA8AFCsvQCgNb0A4Ag9AECdPADAtrwAAES7AEC6PAAAvb0AIFg9AADYOwAQnL0A8O89AKCYvQBgJr0AAPY8AKBnPQCgIz0AAGw8AOAXvQAA0bwAEKG9AMC3PAAApjsAMLu9AADHOwCgUD0AYHG9AMDQPAAAajsAQJw9AAByPABAzL0AIEc9AIAVvAAAOT0AQJQ8AEAKvQDgHT0AgB49AIB+vAAACD0AANG8AADyuwBQmD0AQN28AEBIvQDgiT0AAIs7AMCrPADAOb0AwCI9AECTPAAAwTsAAPy7AOAsvQCAOD0AgOe8AACZPADA4zwAALA7AEAFvQBgJj0AoCG9AACAugAAXDwAQKG8ANC5PQCAqr0AwLO8AJDQvQAAmzsAgC08AIDavADg3z0AwPU8AKBMPQAAD7wAAH48AKAFvQAgTj0AsIa9ACCbPQDAq7wAgBw9AABMOwAAeDwAwE09AFCHvQCAo7wAcJS9AACQuQDAlD0AgG+8AIBFvACAAj0AgI68AABnvADgdT0AwCm9AKBgPQAA/rwAAGY8AEBrvQAwvL0AQPO8AIAyvABATT0AAJm9AJCAPQDAqbwAQB+9AADjuwAAKrwAAP+7AICIvQCAHDwAADy7AICpPADgVr0AQAe9AICzPADwgT0AIAo9AAAYPQAAZT0AAIk8AICUvADA2zwAIGk9AKAXvQDAiD0AAM07AACuuwAAqDoAAOo7ACCpPQCAnT0AwIW8AGAfvQBgXL0AAMA6AKAsvQCAyLwAgHs8AAB4OwAAkLkAANU8AIBnPAAANzwAABI7AABQvQCA2jwAAGQ8AABOuwAAoTwAAI+8AEBSPQCAAjwAAB49AACluwAAHLsAcIe9AECxPAAAALsAAGQ7AAC4OwCALTwA0K89AACKPAAgS70AAGi6AOAivQBA0DwA4B09AAA5vABgOz0AQPy8AMAWvQAAnTwAgIk8AIDlvABgU70AAGi8AIBnPABAujwAgMU8AAA9vACwkb0AAMW8AGAXPQCgp70AgMO8ALCLvQBAHr0AgI49AAA1PACATL0AgJs8AIBWvACAPzwAwOy8AMDTPAAAyrwAgFK8AEA0PQBgFT0A4Bk9AAB0OwDQub0AoC09AABmPABAlz0AQFA9AEDoPAAACrsAgI68AGBBPQCgET0A4H69AADYugAgDr0A4Ai9AEB1vQBgUL0AACw8AAAZvADApbwAIFK9AAAuPAAAerwAAHQ8ACCIPQAgPj0A0JC9AIBHvAAAN70AAOw6AAAkuwCAZ7wAALM7AAC2uwDAwTwAMI89AAAWuwBAAr0A4IS9APCIPQCAB7wAAF28AIAovQBwkD0AID89APCFPQDA9LwA0KW9AFCIvQCAcDwAwIE8AICVvABA9TwAsIa9AABCuwAAhzsAAKa7AACfPAAghr0AQI88AGA/PQCAVD0AYBs9AMCgPACgGz0AwKK8AIA7PQCQN74AwEq9AIBmvQCAZ7wAgEw9AMAvPQCAuDwAwEo9AEC7PAAAdrwAAKu7AACHPADA6LwAAPg8AGAxvQAAXLsAACW9AMCyvADAvrwAAPy6AECLvQDAMj0AQJo9AAA4uwAAED0AgCS8AIANvQAAYTwAQBS9AAC8OwBgcT0AAKC8AOBtvQAgbL0AgLW9AMCcvQCAqjwA4Bg9AIAaPABAcT0AAMe8AEBCvQCAkj0AwK28AAC6vAAAbLwAwP88AID8vAAA0TsAYAQ9AICbPQAAybwAgHw8ADCGPQDAoTwAgP48AOCCPQBghj0AoAw9AADnPAAAxrwAABs8ACAjvQBA2jwAAKE7AICLPQAgdz0AgAw8AAAqPAAAmrsAYHM9AAAVvgDAOr0AwIa9AIAnvABwmr0AgJW8AMDUvABAz7wAcMA9AAAOuwDAA70AAFu8AAByvABwmb0AwEE9AODBPQDARr0AACw8AIArvAAAgLkAwOK8AAC2OwCAPT0AAKI8AGC+vQDA3TwAgKo8AGArPQCALrwAALk7AABSuwAA6DwAAAE8AKCsvQBAqLwAoFK9AABEOwAA0LwAkJW9ACABPQDAAr0AQG69AADKPAAQnD0AAEK9AAA2PACA27wAQB49AKAevQBgWT0AgMc8AADFuwBAqzwAAHQ7AABTPACgNL0AYFy9AECSPQDgJ70AgJw9AAB5vABADz0AoCM9AGBGvQAAZr0AAIe8AMDGvABgQ70AALi8AKCXPQCAFT0AAJW9AEDLPACAxjwASBA+APC6vQAAOTwAQAA9AECOvADwkb0AgOU8AIBTPQCAc7wAQOu8AMBovQCwpb0A4Fk9AABwugAgTb0AoAE9AAAPvABgCj0AAGe8AACmPACgCb0AAP28AAARvACAH70AgBc9AADXuwBwuD0=","chunkHash":"935273d92ca01a334d769acff850fb85f112b354d832fded8acab06b971bf729"},{"text":"File: `scripts/temp/visualize_morphofeatures_inputs.py`\n```python\n#...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":513,"startColumn":0,"endLineNumber":515,"endColumn":0},"embedding":"AAAGuwBguD0AgIg8ANCavQBQo70AoLu9AKAZPQAA3zwAwFq9AAD3uwAAYzwAwMy8AADBuwAgjL0AwKu8AEDxPABAqjwAYCY9AMAdvQAAUj0AAFk9ACArvQAAdLwAADY7AEDTvABAML0A4Ga9ADCrPQBAHD0AgPk8AABZvQBAMb0A0J29AADguwCQr70A4Au9AMDEvACAgDwAAMa8AIAkvADAjz0AwJa9AAA2OwDAozwAAEC6AAAIOwAAWTwAYGC9AMCCPQAAIbwAAOu7AIC3vAAAJjwAACe8AAADPAAAhj0AYBy9AACWuwCgG70AALy7AMCCPQBAibwAQLw8AAAyOwBghL0AAGA9AKBpvQAAIL0AgGM8AAAMvAAACjsAAAa7AMAEPQAAwrsAYCM9AMD/vAAATL0AMLw9APCbvQCAW70AoAw9AOCZPQBA5TwAgA88AIDcvABAXb0AQEq9AAAWuwCAI7wAwLS9AAAAOABgkj0AIAu9AEBgPQCATjwA4N09AIAJvAAQur0AAGi7AAAOOwAgXz0AAIE7AEBgvQCgEj0AIGo9AICLvADAhz0AwJW8AEDiPADg0T0AgK68AKAbvQDAZD0AAHO8AGApPQBAoLwAACw8AADguwAAgLgAMIm9AEC6vABA6zwAIA69AICQvAAACLoAAM48ACALvQCAVTwAwB69AEC5PAAAM7wAAN67AHC0PQAAar0AgBO8ANDNvQCAEb0AoLE9AACivAAoCz4AAHU8AOAIPQCAHTwAICI9AIDuvAAAJT0AoJa9AJDmPQBA27wAoFY9AKALPQBgBT0AAA49AED3vAAgP70AgL+8AGAQPQDgMj0AgLm8AIBOPACAvjwAwHW9AAAPPAAAFjwAcIW9AECkPACAvrwAwJU8AOBTvQBQtr0AAC+9AKAmvQAA5DwAAIu9AEAsPQCAAjwAANy8AGBYvQAA5LwAgL88AMClvACARzwAwI28AIBQPQAAL70AAIK8ACAEPQBAqDwAAHg6AABOuwBAgT0AgBU9AACGuwCAxjwAAAA9AKBXvQAgFT0AgIS8AAACPABgPj0AgCC9AIDzPADAyTwAAPW8AGBHvQAQgb0AAB68AAAGuwCAM70AIAI9AADcuwAAQzwAQGs9AIDDPABAET0AwPi8AAAuOwBglD0AAIC6AAAkvADA4jwAgDe9AADlPQAAejwA8Jw9AECYvAAgKD0A4Bi9AADDuwAAxTwAIDY9AABkuwCABT0AII09AMDaPACgD70AoAo9AAAivACAFj0AQN48AADLuwDAwTwAgKW8AMALvQAAXzwAwIE8AGApvQDA77wAAMQ7AKAwPQDArTwAYAA9AOBAPQBwhb0AAAI7AABYuwCg2r0A4E49AIAPvQDgEr0AwFw9AKBovQBg370A4Bo9AEAKPQCAdLwAAAy8AEAPPQAAxrwAYEO9AAC8PADgKz0AgCo9AIBLPADAqL0AQHI9ACB4PQBAkj0AQMc8AIA0PACAOzwAAJQ7ACAqPQAAjDsAIGS9AACougCgQ70AAEQ8AABZvQAAVL0AANM7AACnOwCA9TwAAO07AIAIvQAARzwAQDE9AAAaPQAAgTwAgGG8AMDKPADga70AAAU8AACsOwBwrr0AoLQ9AIAkvAAAe7wAsKU9AAC+OwBgH70AUKK9ACDVPQCAI7wAQIG8AADvvADQ1T0AQME9AIA5PQBAir0AoDi9AGBOvQCgjD0AABe8AAB5vAAALDsAgGO9AAA4uwAAVbwAAOO8AADkPADAhbwAAAa9AKA8PQCgIz0AAKA6AIBjvADAbT0AgAK8AGA6PQBoJL4AAAA5AAClvQCAUbwAgHs9AOAhPQAA4DkAQFU9AADcOgCAWrwAIDe9AAAmvACAvrwAgC08AECJvQCA0rwAAAy8AMAQvQCA87wAgBe8AMBvvQAgFD0AAAI9AICZPACAGj0AAAC6AABMuwBgGb0AwDy9AOAbPQAAUbwAAEO9AACbvQDAOr0AwNu8APC6vQBAhDwAgCk9AMCWvAAAuD0AoBW9AAD4uwCAFD0A8JK9AIDbvAAAzLwAoFg9AIAbPAAgJb0AICM9AGC7PQDAV70A4AU9AEBpPQCAQTwAANc7ALCbPQAwij0AAO27ACAwPQDAZL0AAIS6AIBYvADA/jwAAHi7AIB8PQAAUDwAgIW8AAAwuwBAHD0AAFI9AFDZvQAAILwAgIO9AEDPvABAgb0A4Ea9AOAqvQBgPr0AYCY9AIC+PAAAz7wAgBE8AMAhPQCgAr0AAOM8ANCMPQAgGr0AYCg9AACDuwCAJjwAAP27AEDfPAAAbzwAwD49AMC1vQCggz0AAJ47AMCWPQCAK7wAIAi9AAACvACAYjwAgGk8APCGvQDAk7wAIA69AEAPvQBAv7wA4Ny9AAA9PQCABb0AgJ+9AIBHPABwrj0AAA28AIBPPQAAKb0A4HE9AKBlPQCgSD0AAJI8AICCvQBAxDwAAHm9AIBZvAAAcrwAAPe7AMAzPQBANr0AYDc9AIB/vABAcz0AYCo9AHCavQAAK7wAQMm8AIDnvACAO70AACm8AABsPQAgyj0AwLm8AIAlPAAA6LoA4O09AEA/vQAAPLsAABQ8AACfuwCAhLwAANo7AIAsPADAhrwAQDK9AMBNvQBga70AYE89AADKuwAALL0AAEs9AIACPQAAkT0AgLi8AIAIvABApDwAQCs9AAAmOwAAPLwAgBq8AAB0uwBgFz0=","chunkHash":"64eb9fa30498aafc1434c9b1c71f2d52f8313cbf3896d6c0e24e0b0230e63ed4"}]},"file:///teamspace/studios/this_studio/scripts/temp/visualize_patch_comparison.py":{"hash":"f7db07c4890324b386cc84bf84ec150a20643210d866e92e37cb2563bf2e8c21","entries":[{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef extract_highres_cubes_from_lowres(lowres_volume, num_cubes=8):\n    \"\"\"\n    Simulate extracting highres cubes from a lowres volume.\n    \n    Args:\n        lowres_volume (numpy.ndarray): Lowres volume with shape [Z, H, W]\n        num_cubes (int): Number of cubes to extract\n        \n    Returns:\n        list: List of cube coordinates (z_start, z_end, y_start, y_end, x_start, x_end)\n    \"\"\"\n    depth, height, width = lowres_volume.shape\n    cube_size = 32\n    cube_coords = []\n    \n    # Generate random positions for cubes\n    for _ in range(num_cubes):\n        z_start = np.random.randint(0, depth - cube_size)\n        y_start = np.random.randint(0, height - cube_size)\n        x_start = np.random.randint(0, width - cube_size)\n        \n        cube_coords.append((\n            z_start, z_start + cube_size,\n            y_start, y_start + cube_size,\n            x_start, x_start + cube_size\n        ))\n    #...\n```","range":{"startLineNumber":17,"startColumn":0,"endLineNumber":42,"endColumn":0},"embedding":"AIBYvQDAhrwAABA6AIAZvAAA0zsAYAS9AABdvABgCz0AIEC9AAAmOwBgHD0AgH08AAAKPACATLwAwKA8AAAMPQAAYLwAQKE8AACIvQAAo7sAAHy7AECSvQAAmjsAYE29AFCUvQAAAT0AII89AMDUPAAgiT0AYCo9AACCPAAARLwAwCq9AGAHvQAghL0AAKO7AAARvQDgYD0AAKg6AIBmvACQmT0AgAi9AABuOwDAnbwAYJo9AEBYPQCAAzwAEKK9AAB4PQDAgjwAgOi8AACkPQBAAT0AMIO9ACAHvQAAg7wAAOG8AADUuwAAlrwAQOE8AIBuPABAXr0AQMc8AADyuwDAA70AAHI9AIAePAAwjr0AYBA9AKAOPQCgz70A4CI9AIDvPACAKbwAgK48AGAlPQAAEbwAQIU8AEAvvQAgVL0AAP28AAAeOwAQgT0AAK88AACFvAAQrL0AAES7AMCCvADAjDwAIOK9AAAmPACQ3j0AQBa9AKAsPQBgQb0AAJc7AIBYPQDgE70AQK49AICtPADA3DwAIFQ9AGBFvQBgBz0A4J49AJDGPQAAwjwA4Bi9AMDEPADQxj0AgHs9AOAZvQBAyDwAgJ29AACmuwDAzrwAAOW8AIBTvAAANLwAYFs9AHC/vQAA+DoAACY9AECVPAAAeT0AwCi9AHCEPQDgM70AALE8AIBzPAAgSj0A4BM9AECYvABwib0AoBe9ANDYvQDAEj0AQNI8AMC7PABgnj0AgFC8AIDQPAAA9jsAADM8AEC+vADg6z0AoHm9AOBlPQDgYb0A0Kg9AMCkvAAAJz0AgMo8ACB2vQBgVb0AkIS9AECWPQAAkLkAQAE9AAAIuwAAwr0AAHG8AIAIvQAgaD0AQJq8AIAsPACgib0AYCU9AGCPvQBA27wAAGS8AIDqvABAxLwAEKW9AMBuPQAA4DkAgNq8AIATvADgM70AIAc9AGB0vQCAnb0AAFW8AMAYPQCwj70AADQ7AACnvAAAnzsAALS8AMD1PACAJ70A4Dg9AGAuvQBAQz0AwM+8AMBMvQDgHj0AoDM9AABIuwDAKb0AoGy9AEBkPQAAALgAwLi8AIBaPADA1bwAAIW7AADFuwAAmzwAAHY8AKAUvQCASz0AwKI9AIBDvQBAAL0AgDq8AAD5OwCwmT0AIG29AGBjPQBAvbwAAAQ8AMB9PQAAgT0AQAQ9AAA6OwAAu7sA4LS9AKAkPQDQgj0AgDK8AIAbPQCAMbwAYEA9AABsPADAmrwAAL67AMDmPABA9jwAwO+8AABDPAAAsbwAAKa7AAA/vABANj0AADu8AMBPvQAws70AQBs9APCTvQCgCT0AAGC7AMCmvACAlL0AAI28AKAzvQAAmLsAACC5AMCGvQAA5LsAwPs8AMBXvQCwo70AwAC9AMBxPQDgEz0AAEY8AAAMPQDgtL0AALq7AIDlPABAqDwAgLI9AMBFvQAAObwAAOA6AKCDPQBA+LwAgBw8AOAUvQCARLwAQBu9AMBCvQAAdT0AwBg9AICZvAAgdb0AwNE8AEClvAAgA74AAD09AIC5vQDgeL0AAOa7AKB1vQDAkzwA4Iq9AKBJvQAA57sAIIq9AIAdPACAm7wAoEo9APCTPQDgkb0AgCC8AACUPABAFT0AgLi8ACBhPQAAg7wAgFg8AICPPACA4rwAAK47AMAVvQAghD0AQJq8AIDTPAAgRL0AoA+9AGDEvQCgkz0AgEc8AABKvAAAYbwAgD+9AIDpvADgBr0AcMW9AEDDPADAiTwAAK+8AOA5vQDA8LwAoDS9AABKOwCAUDwAQIC8AOBTPQAArTsAoD49AEDzvAAAXbwAIHg9ACBhPQBA1T0AAL+7AKBIPQBgYL0AABs8AIAWvQDA7rwAAOY7AGAEPQAAiLwAgAg8AOBHvQCA6bwAAA89AEBcvQBgMz0AULg9AAAhPQAAjDsAwPA8AABsPQCgUT0AAHk9AAApPQBAvTwAAKS6AMCpvQBAgrwAYIi9AAAkvQAgYj0AAM88AACDvQBA0TwAALm7AECMPAAAmzwAIAw9AIBFvACA4TwAoG89AACkugAQqb0AwBW9AMADPQDQi70AQAY9AMC1PAAwAz4AQMI8AAA8PQBAJD0AQIc8AABsPABAj70AADY8AACCvADAkzwAAIk8AOClPQBAQD0AwA49AADSuwAAu7wAgKM8AKCNvQBA57wAkKO9AIDyPADgIL0AwEy9AABgOwAAFL0AYBc9ACC1vQAAybsAwAw9AIDUPABArjwAsJU9AIAyPQAA6LsA4GE9AIAuvAAAe7wAgC48AAAHPACACrwAQOG8AABUvQAA3rsA0JY9AOBOPQDgLr0AQP68AIAEPAAgdb0AAPS7AOBPvQBAA70AoJ49AMCavADgRz0AAJQ6AAByPQBAl7wAkJG9AAAevAAAoLkAgBi9ACA1PQCA7LwAIBU9AADWvADgNr0AYD09AMDUvADAsz0AAKq7AMDCPABAqjwAwJo8AACYvACgCb0AQCM9AFCbvQBgdT0AoFg9AAA8PAAgDr0AICG9AACwPADADL0AAOQ6ACAZPQBwgb0AYBy9AHCKPQAgLD0AgIU9AMCAvAAAEjsAwEA9AADkugAgNb0AAGi6AED+PAAAXrwAAF67AABKOwCAjb0AoI09AABVvABA2jwAgGI8AOBrvQDAPz0AAB47AADBPABA7bwAAPw7AECYPAAA1LoA4OU9AAAHPQDAFD0=","chunkHash":"93cd2f7a2962abc78754ff7431715ed9e562c12981022a8f58b0b6d6746d7a53"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef extract_highres_cubes_from_lowres(lowres_volume, num_cubes=8):\n    #...\n    return cube_coords\n#...\n```","range":{"startLineNumber":43,"startColumn":0,"endLineNumber":43,"endColumn":22},"embedding":"AFCBvQDAoLwAADq8AIBvvAAAqDwAALY7AMCHvACAWDwAABW9AAASOwDA8jwAQJg8AAAuOwAA/7sAQKQ8AKBcPQAAqzsAgHI8AOCvvQAAkjsAAFm8AMBlvQAAgzwA4Du9AEA+vQDgOD0AIBA9AADQOQAQjj0AgCQ9AIBpvAAAGr0AgO+8AMCzvADAkr0AwAy9ACBvvQDAkz0AANs8AECzvABgvD0AgMe8AAA3PQDApLwAgGU9AEDDPACAY7wAMJS9AKA6PQAA0LoAAFG8AGCGPQCgGT0AYBa9AMDNvAAAgTwAQB69AADIOwAAxjsAABq7AGAbPQAgCr0AAEE8AAAwuwBA9LwAgKQ9AIA7vADgbr0A4Cg9AECbvAAQh70AMI09AAClPADA4bwAgMA8AKAyPQAAojsAsLI9AAACvACgkb0AAMW8AADzOwDgej0AwAQ9AMCfPABQx70A4CC9AMD5vAAAdrsA8P69AADluwAwvz0AQPW8AIA2PQCAEr0AgBU8AAABPQAgGr0AgCE9AADbPABAHT0AYEs9APCovQBAKD0AUJg9ACD5PQDAfz0AoEy9AADLPABQ2z0AgDk9AABHvADgBD0AQDy9AACXuwCAYLwAgMO8AMDqvABAsrwAoAE9AFCRvQAAVLwAYCg9AACHOwBgKD0AQKG8ADCFPQBAIr0AgAI9AAD6uwDApzwAAIE7AACTPACAjr0AwFa9AFCxvQCALz0A4CA9AACEOgDAwT0AAMg6AGAaPQAAzjsAgDQ8AADwOwCA5z0AcKy9AOB5PQAA47wAsLY9AOAuvQDgGj0AgEY9ACBlvQBApb0AwJa9AJCIPQAAbLwAAH48AADnuwCAub0AgKa8AIAUvABAMD0AAHW8AICUPAAAj70AgAY9AIB5vQAA1LsAQMi8AADVuwCAkbwAIMq9AMB9PQCAKbwAgIG8AMCWPACgPr0AYAM9ACB+vQDwhb0AAMQ8AKAoPQDger0AANC7AACjOwCAEjwAANc7AIAvPABAq7wAsIA9AEATvQCAkj0AgC+8AAAyvQBgND0AgH48AABmvQAAbrsA8JC9AGBoPQAAb7wAALC7AAAXPACgqb0AwOC8AGAAvQCA8TwAAIw8AIBWvQBQgj0AgDg9AMC0vACAATwAQI28AMDqPACAqz0AABe9AEBdPQDA0bwAAE47ACAnPQCwiz0AAC49AAC8uwAATzwAAJ29AIA4PQDALT0AgGk8AKBFPQAAvLwA4D09AACjOwDA8LwAgHc8AAAGvAAAwjwAgBW9AADguQBAnbwAAIq8AACEugBAxDwAANe7AMBLvQAwjb0A4A89AEADvQAAJDwAQAE9AIDWvAAwvr0AANq7AEBkvQCALbwAAFo8AAB+vQAArrwA4BA9AKBAvQCAOL0AwP+8AAAjPQBgJj0AABq7AIA5PQCw0L0AIDi9AAAMPQAAIDwAwJM9AADlvAAANDsAwKg8ADCGPQDAhrwAoA09AEDvvACAf7wAwNi8AADmuwBgdz0AAHU8AADMvAAAeL0A4B09AAD2uwAQ1b0AwP08AGChvQBgJ70AAOQ6ACCzvQAAk7sAIHy9ACA7vQCAkbwAYBa9AABKuwAAo7wAgFA8AKC7PQAAnb0AgJo8AABzPAAA/DwAQAe9AMBIPQDgKL0AQI+8AMBxPQCA5LwAwOm8AACkvAAAIz0AgDa8AACVPAAAOrwAADW8ABAJvgBwnT0AwIA8AIC9vADAmrwAUKm9AIBMvQCABTwAoIS9ACAdPQAAYTwA4D69AAAKOwAA57wAQLo8AAAyuwBAgzwAQB+9AABbPABAkbwAALQ7AIBvvQDA4LwAUJk9AEAePQAwwT0AAPM7AGCAPQBggL0AQKk8AIApvACAO70AAKQ8AAAnPABALr0AAFi8AMB8vQAAhDsAYG09AEBHvQCApDwAoKU9AIAsPAAAQDkAYEw9AMArPQDgLT0AYIs9AIDhPAAAgbsAgHq8ALChvQDAH70A4IK9AOBGvQDALj0AIFw9AKCWvQDA4TwAAFO8AABTPADgFT0AAKg8AIAEvAAALzwAoJM9AADLOwCwkL0AAKO8AMBUPQAgFr0AIFE9AMCSPACA1j0AgJ88AMCJPQDgYj0AgGc8AED2PACgg70AAJI8AIBBvADASD0AAMA4AOCCPQBAID0AwMo8AAAeOwBA0bwAwPs8AJC2vQAADb0AYLe9AACUPADAW70AwAW9AAB5vAAgRb0AwP48ABCOvQAA8TsAAGE8AAC0ugDgbT0AoJY9AAATPQAAgDgAgOw8AADyuwAAPjwAANq7AIBfPACA7LwAgMG8AIBDvQAAeLwAMK09AGAAPQBA8bwAgE+8AIATvABgF70AIBe9AFCXvQAAwLwAQMw9AADpvAAAaD0AQKs8AECCPQAA3LwAAOK9AMCjPACANrwAQNi8AIBmPQAAwLwAgMc8AADIuwCA37wAQJI8AIAnvQCQ4z0AABg6AACcOgCAaDwAgCU9AEAivQCgdL0A0IQ9AIBsvQDggj0AwDw9AIAjvABAKr0AgH28AICBvADAvLwAQO48AABHPACAkbwAwPy8APCTPQAABDwAgKQ9AEDJPABAsTwAAIA8AAD8OgAAUr0AAMA4AOALPQAAg7wAgHW8AADJOwDgd70A4LM9AIAWvAAAtLsAwII8AAAHvACAHT0AAIc7AGBQPQCAh7wAgPs8AECqPAAArDsA8KU9AECBPQAgFj0=","chunkHash":"d0b9d064304aa3b5b754a3fe1d15e01cf5b2cdf33bdfab841e382cd06cbd34b4"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef normalize_for_display(image):\n    \"\"\"\n    Normalize an image for display.\n    \n    Args:\n        image (numpy.ndarray): Input image with shape [H, W] or [H, W, 3]\n        \n    Returns:\n        numpy.ndarray: Normalized image with shape [H, W] or [H, W, 3]\n    \"\"\"\n    if image.ndim == 2:\n        # For grayscale images\n        min_val = image.min()\n        max_val = image.max()\n        if max_val > min_val:\n            return (image - min_val) / (max_val - min_val)\n        else:\n            return image\n    elif image.ndim == 3:\n        # For color images\n        min_val = image.min()\n        max_val = image.max()\n        if max_val > min_val:\n            return (image - min_val) / (max_val - min_val)\n        else:\n            return image\n    else:\n        raise ValueError(\"Unsupported image dimension\")\n#...\n```","range":{"startLineNumber":45,"startColumn":0,"endLineNumber":72,"endColumn":55},"embedding":"AADJuwDAQb0AsIG9AEAVvQAAg7wAkJm9AGAyPQAAErsAQDy9AECOPAAAMDsAEIs9AKCXvQCA/LwA4Dc9AKBtPQCARTwAAFw8ANCnvQBgOz0AQOq8AAAbvQAAJzwAwC29AADNOwAAULsAgPy8AAAEvQAwuz0AoAk9AOBlvQCADbwAgCm8AKApvQDApL0AAAe9AGCjvQCAfj0AAL+7AAC1PABA/DwAAJK8AKCtPQBArrwAwA89AAAgOwBgcD0AgEy9AIAGPQCAKTwAoAm9AKBfPQBgFj0AoBq9AMALPQDAqT0AQJk8AAC5OwBA7TwAABq9ALC+PQAAKD0AgEW8AABEuwCgdL0AoKQ9AOAAvQAAu7sAID49AEDYvAAAObwAQJo8AACYOwAAwLwAIGY9AOABPQDgL70AAMk8AID9PABQs70AgIa8AECcPAAA57sAsMI9AMC2PABA9rwAAEs8AID5vAAAqDwAQAW9AEDkPACAFj0AgKG8AJCJPQAgNr0AICo9AGAwvQAAPLsA4E89AAA2OwAAiDwAoHQ9AIA2vQCAvbwAQEo9AECzvABgjD0AwBo9AAAIPADwiT0AsIQ9AABgugAAdD0AgAk8AMA3PQDQkL0AABC6AADvuwBADT0AYIC9AGDRvQDAVb0AgEs9AGC+vQAAEj0AgES9ACAnPQCA1r0AAL68ACAVvQAAzzwAALA6AIAMvACQyr0AQD69AIDNvQCAgD0AAAk8AEAGvQBw/z0AAA67AMCGPQAAKrsAADE8ABCYvQAA1D0AQMe9ALD3PQAAC70AQOE9AEB5PQAA2zsAANg6AAA7vADgr70AIDa9AMgEPgAAB7wAgAm8ACBCvQDgVL0AAIq7AACYuwAgJj0AwLG8AACeuwBgFL0AAFm8AIAYvQCAjL0AgE29AABSOwCA5jwAcJy9AKCXPQAADDwAgFs8AAAmvQAATL0AQMw8AECVvACAR70AMIC9AICpPABgEb0AgPy8AABavAAAfrwAQJk8AABWPACA+LwAQA09AIDSvAAAz7wAgEo8AACuvACAgj0AABS7AEDyvACgOz0AIHW9AAD2PAAApDwAgBK8AAD3uwDAQ70AYCS9AMAgvQAAljwAABQ9AADIugAALTwAgI88AAAgOgAAcz0AYEi9AAD/uwDARj0AwEG9AAAyuwCAA70AADE8AEDzPQAA1TwAoBS9AKAgvQAAlzsAgIu9AABgOwBA07wAAHg7AMDcPAAACrsAADQ9AIA9PADAnrwAgIg8AIAHPADAn7wAAMs7AACYuwBAWT0AwJW8AABHvAAAGrwAQAa9AGAFvQDA7rwAAPY7AAByPAAA6rwAgNc8ABDgvQCw1L0AgLW8AAAWvAAA/7sAQAS9ALCrvQDgND0AQOk8AAAIuwBAa70AwFm9AGALPQAAIjwAAEK8AABaPAAgLr0A4Gw9APCfPQBAsDwAAI48AADcuwBA5TwAwAe9AADvuwAAfjsAQFM9ACCrvQAACr0AgGI8AMCePABwxT0AABA7AAB2vABAyLwAQJQ8AADsPADwur0AAOG7AADlvAAAmjwAQNE8AIC9vADgQT0AALS6AIAJPABArbwAAHu9AMByvQDgxL0AIH69AJC4PQDAaL0AAAg6AOAXPQCALj0AQKW8AAAsPABA+bwAAGC6AMC3PQCAVLwAYC29AABGvADArDwAAAA8AMCSvACAdbwAAHu8ADChvQAART0AABs8AMA9vQAAGbwA8J+9AKAovQBAhjwAkJi9AOAzvQAAPL0AAJi8AICHvAAgDj0AgHg8AEDBvABgLD0AgGu9AIAgPQDg970AgJu9AGAGvQBAwbwAoIc9ANCEvQDgOD0AwJI8AEDyPACARrwAQI68AABlPAAA3bwAYGE9AACFOwBAoDwAQIa8AADnvACAEbwAAAS7AIBEvQCgIL0AIE09AAC/vACAJ7wAAMC7AEAFPQAAKLsAgGY9AGAKPQAAL7wAwLw8AOBTvQAgP70A0Oq9AAC4vQAwsj0AAA68AEAHvQAAZjsAALW9AAA8vAAwzT0AgNc8AADAuACAKjwAUJc9AICMvACAYL0AgEk8AMCKPQBArbwAgJ28AIDQPABAMT0AAAC4AADIuwDAaD0AQNU8ACCmPQAAb7wAAMk8AAAjvACgZb0AwJK8ALDKPQAAXDsAoD89AMCXvACA+DwAAAW8AOAxvQAAejsA4IS9AADsOwAAnr0AAOg8ACAbvQAA4LwAoHg9AMAQPQCABj0AAAw9AKBRvQDAqbwAwMg8AACAOADAxjwAANs8AAAeuwBAwDwAQIg8AABkPAAAjjwAQFE9AIAmPAAAQLkAwOw8AOBsPQBAozwAQIq9AECovADgDb0AQOS8AIBUvADA8zwAgHE8AIBrvACAlTwAgAo9AMCOPQDAsbwAQPW8AADkPAAAPzwAwMy8AADKPAAwgb0AQO08AADgvAAA0jsAANu7AAADPAAwxT0AcIG9AEASPQDA3rwAANu8AEASvQCAabwAQJk8AED7vAAg7z0AgDE9AFCTvQAAejsAYFk9AIArPABgaL0AQIa9AKAVPQCACbwAACS8AGCjvQAgBT0AoCo9AIBcvABgJ70AADQ8AACHvADwur0AAOM7AACwvACAYLwA4BO9AAA/vACASbwAYHc9AGBDvQAAl7sAAFg7AADQuQDA5TwAAJW8ACCfPQCAGbwAADo9AKAvPQAAgLsA4GQ9AAD1uwCgLj0=","chunkHash":"15cda2be29be89c985425aaa65902df33291acb5265adc554a40b3676d6dce09"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    \"\"\"\n    Visualize the relationship between lowres and highres patches.\n    \n    Args:\n        lowres_batch: Batch from the lowres texture dataloader\n        highres_batch: Batch from the highres texture dataloader\n        output_path: Path to save the visualization\n        show: Whether to show the plot\n        \n    Returns:\n        fig: Matplotlib figure\n    \"\"\"\n    # Extract volumes\n    lowres_volume = lowres_batch[0][0, 0].cpu().numpy()  # First sample, first channel [Z, H, W]\n    highres_views = [\n        highres_batch[0][0, 0].cpu().numpy(),  # First sample, first channel, view 1\n        highres_batch[1][0, 0].cpu().numpy()   # First sample, first channel, view 2\n    ]\n    \n    # Get dimensions\n    lowres_depth, lowres_height, lowres_width = lowres_volume.shape\n    #...\n```","range":{"startLineNumber":75,"startColumn":0,"endLineNumber":96,"endColumn":0},"embedding":"AACwvAAA/rwAwN08AEBWvQCgEr0AQJq8AIBzPADAQb0AAKS6AADNOwAA8DkAoJg9AMA3vQAABzwAAAg8AIBsPQAAnDwAQFs9AMBDvQDA9zwAACq7ACBZvQDQgj0AAO+8AMDYvAAAXDwAAHA6AIA9PQCAFT0AgH89AAACvQAAO7wAAPA6AAAtvQDAtL0AgI+8AEDBvACgVD0AwNG8AEDjvAAwmz0AwJ08AACAuQBAkTwAAM48AIAGvABwiz0AANW8AED+PAAA9jwAQMW8AABXPQDAjTwAAA+9AMCgPABgfz0AwBc9AIBCPAAAgjwAIDG9ADDhPQCA8bwAoDM9AIA4vABAVr0AgM48AEDnvABAhr0AoGI9AAClOwAA0zsAgBk8AIC2vABArzwAwMg8AECrPAAALrsAACy7AIA1vQAQp70AgFe8AMAyPQCA1TwAQIA8AIAZPABgk70AALU8AADeuwCAPrwAUMi9AHCLPQDApj0AAJO8AKAzPQAAAzwAAGA6AACfvACgIb0AAPk8AAAXvAAAS7wAICo9AMBlvQBANL0AQC49AIATPQDAnTwAIC09AAD2PACARD0AQEE9AACgvABgET0AwKK8AACOOwBAsL0AgCq8AHCbvQBA2DwAwMG8ABD5vQAA7rsAwNo8AMDhvACQiD0AAKC7AADwPADA/bwAgPQ8AED1vAAQlj0AgDQ8AACoOwBA3b0AwNq8AGgEvgDA3DwAwNM8AMCIPAAQwz0AACi8AMAlPQCAUr0AAOm7AAA5vACYDj4AQI68AAAAugAADLsAQKI9AMDOvABAkTwAAEc9ACCtvQBAZb0A4IO9AMCZPQCAxLwAANW7AAA6OwBgL70AADi8AOB/PQAA1TwAwMi8AAAYPACAlb0AAC88AMBivQBAxbwAYGq9AACgPAAAQz0AMN+9ABDBPQAA77sAgCO8AABIuwCACbwAALs7AIAmvAAAT7wAAIC5AMCcPACACr0AwJu8AIB8PACgRT0AABC8AACQuQCANLwAIKI9AIBnvAAAqrwAAFI7AOCdvQAAYj0AwO88ACAPvQCA2bwAAMm7ACCtPQCA6zwAQMq8AOAVvQDAurwAABS9AKBFvQBAwzwAAEC5AIA5vACgfj0AAFo8AIBVvABA8jwAYEK9AIDdvACQzD0AwIy8AAAJPACgOb0AAAy8AADhPADALD0AwMM8AKAGPQBgfj0A4Lm9AGCFPQAAtjwAAEG8AIA7PAAAkDwAkI09AADgOQBAVr0AwJU8AIApvAAApDoAADy9AAD/OwAA1DwAAB08AAChuwCgYD0AwNC8ABCQvQCAiL0AgFg8AOBYvQAgTj0AYF09ALDYvQCQhL0A4CS9AAAZvAAgZ70AgFM8AGCUvQBAAr0AQN48AKAIPQAgbL0AQIe8AMCjPAAgID0AALg7AMAjPQDw7b0AAEA7AIA1PQDAhzwA8JU9AABAuwAAdDsAAFu8AACAPADAvrwAADQ7AEAgvQDgCb0AgAQ8AACOPACQrD0AwK+8AMCGPADgSL0AYBI9AIDoPAAgVL0AgC28AIARvQCAVbwAAIK7AGABvQCAhDwA4Dq9AADSvACAOjwAwCm9ANC9vQDgWb0AAG28ABADPgCATTwAAM27AAD5PACAoDwAgDS9AABNPQBgJL0AoFq9AMD7PAAAKjsAwL68AABEvACgPj0AAPA7AMDQvAAAnLwAAAa7AMCmvQAAcLsAwPY8AKB5vQAAnLsA4DS9APCwvQAANLsAAEa7AAACOwBAgL0AAAu9AADNOwAger0AgJQ9AAAUvACAVD0AAJs8AMDyPADAc70AAHy8AOCavQAAMDsAUI49AACkOwCAdz0AAMA4AACwPACgU70AALA7AAArvADgWb0AAHk8AICZvACAO7wAAJi6AAB3vQDA6TwAQLc8AEBvvQAA5LoAQDw9AOA1vQAAKDoAAG47AAAvvADQlj0AYEU9AADqvAAgaz0AAKa8ABDCvQAAaDoA0AS+AOACvQAwpj0AAFg8AGC+vQBAxTwAIIu9AKAZPQDgej0AgIw8AMCnvAAABDwAAAo9AABuPABgk70AANs8ACAuPQBgjr0AAK67AMBzPQDAxTwAgMs8AIBAPQDg1j0AcIk9AGBIPQCgCL0AAAg7AICkvQAA7DsAgAU8AGDQPQCAEL0AgJS8AAAWOwCgDD0AAIC6AABcvQCgKb0AcNi9AABIOwBAu7wAABI8AABYPADgRr0AIGg9AACuPAAAZj0AwIM8AEDtPABgQz0AcAg+ACDIPQAAAAAAQCs9AOAOvQAAIDoAMJk9AADAPABAKz0AADe8AMCgvAAAWLoAAFI9AMCNPACAzbwAYBU9AMAFvQAAtbsAQG69AFDEvQCAvzwAgEE9AOAlvQBA5TwAAHk8ADCWPQAgNz0A0IW9ACBIPQAA/jsAQGY9AAAavAAAhDwAgM88AOAJvQDgOz0AAAw7AACyvACg0T0AAHK8AMD1PAAArzwAQAm9AIASvAAgkL0AEIc9AEChvQAggj0AAJ27AABsvAAAqzsAQBG9AABsvACgTL0AALO7AMAlPQAA/bwAAFm9AECDvAAAXT0AkI09AGATvQCApbwAAIu8AMCrvAAAjbwAwKa8AECCPAAAcbwA4C69AIAjvQDAHL0AwNI8AEAUPQCAUrwAwJA8AACsvABAPD0AAFg8AKBWPQCAgrwA4Ck9AID9PABA7rwA8M49AIBYPACwkj0=","chunkHash":"da92aaa82e4764b4e25dba8182e79879b1eb4e96da12c830473c323f09f64faa"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n    highres_depth, highres_height, highres_width = highres_views[0].shape\n    \n    # Calculate how many highres cubes would fit in the lowres volume\n    cubes_z = lowres_depth // highres_depth\n    cubes_y = lowres_height // highres_height\n    cubes_x = lowres_width // highres_width\n    total_cubes = cubes_z * cubes_y * cubes_x\n    \n    # Generate random positions for cubes\n    cube_coords = extract_highres_cubes_from_lowres(lowres_volume, num_cubes=8)\n    \n    # Create figure\n    fig = plt.figure(figsize=(20, 12))\n    \n    # 1. Show lowres volume with cube positions\n    # Mid z-slice of lowres volume\n    z_mid = lowres_depth // 2\n    lowres_slice = lowres_volume[z_mid].copy()\n    \n    # Normalize for visualization - consistent method for all images\n    #...\n```","range":{"startLineNumber":96,"startColumn":0,"endLineNumber":116,"endColumn":0},"embedding":"AOAOvQBAD70AABs8AIDOvAAAabwAQMC8AIBPPAAA8LwAwP28AAB6uwBgKj0AAEo9AIBovAAAKLwAAHA6AABTPQAAcrwAwNg8ANCevQCgRD0AgAe8AJCWvQCALT0AIDm9AMCFvQCAtDwAAL+7AMDdPACgGD0AoHU9AADDvACAV7wA4Da9AKAmvQAAzb0AwJW8AEA0vQBA4DwAgL48AAB9vACguj0AAKW7AACdPAAACjsA4Bo9AMDmPAAgKj0AsI29AIAcPQAAqjsAgKi8AKCiPQBAHj0AAJ+8AADcOgCArzwAAC67AADlOwCAIDwAgDe8AECxPQAgG70AAHY9AADJOwCgWL0AIBE9AIBUvADANL0AAJc9AADAOQDA8LwAIGQ9AABRPADAozwAwJ88AIALPAAAejwAwNQ8AICfvADgsb0AYCy9AED0PABQhj0AQNk8AABmuwCQiL0AAOi8AOADvQAgFb0A0PG9AAACPQCw5z0AgB29AIAXPQCA37wAICU9AACwvADABL0AIGg9AADguwBArTwAgNw8ACChvQAAKLoAIKU9AOCWPQAArTwAwM88AECTPADArj0AwE49AAAQvQAAtTwA4Fe9AIBcvAAgWr0AQBM9AGA5vQAABTwAAAM8AODUvQDAhbwAABs9AADDuwBgQj0AAJW8AOBDPQCA87wAwPc8AICXvABgOT0AwMU8AAAEOwCQvb0AYCG9AEDnvQAAlDwA8IM9AICzvAAg1z0AAPw7AAC4PQDA7bwAAGA7AICwvAAoFj4AsIO9AIAiPQBAsbwAQI49AAA3vAAgID0AADM9AICdvQCgqL0AUIO9AKCdPQAAkrwAgDg8AAD4OwBAab0AQOK8AECiPADgKz0AQP+8ACAwPQCAbb0AgCO8AICZvQBAtLwAgL+8AABjvADAvzwA8Mq9ALCqPQAAzLoAgO+8AMCHvAAA0LwAAO88AGAYvQBAr7wAAMC4AAAdPQCARb0AwOG8AACbOwAAVjwAADy7AEDyPAAA4jsA0J49AGBJvQBAsTwAgA28AKCvvQAAaT0AAI67ACA2vQAAQrwAQMW8AICYPQAAQjsAgHG8AACFOwAwh70AgNC8AEAevQAAdjsAAIE8AEDhvADgiT0AwFg9AIAJvQAAED0AgPi8AAAMvACA6z0AAMG8AECpPADAGL0AgN08ACACPQDAZj0AAAs9ACAqPQDA5TwAAJS9AHCLPQBApzwAAKq7AIBcPACADjwAAGM9AIB8vACAEb0AgL08AAD+vAAAUzwAIDe9AADwPACA+zwAAJ47AIDBvABAXz0AAOO7ABCjvQBgmr0AADi7AMBHvQCgGT0AQNU8AOCAvQAQnr0AwKu8AIAJvQDgQ70AAGw7AEBqvQAADbwAANU7AADnOwDASL0AQMC8AIA3PABgSz0AwP48AKAIPQCAtb0AQNe8AKBTPQDAQT0AgKQ9AAASuwAA0LkAACy8AADfPACASDwAAJA7ACA+vQAAobwAAKO7AABEOwDQmj0AAJm7AADVOwBgNL0A4AI9AIDTPADQhb0AgBG8AKAjvQDAwLwAgGA8AGBWvQAAHDwAADe9AMCnvACArLwAoCq9AIC9vABACL0AACM8AKAYPgAgDL0AgIS8AEDCPADgCj0AAFq9ACBOPQCAXrwA4AS9AABQPQCABrwAACC7AAACvQDAIj0AAAg7AADBPAAgFr0AAM87AGDLvQDgIz0AoCw9AKB2vQAAd7wAIHK9AGA+vQBAyjwAANO8AADpPABga70AgHO8AABgOgAA57wAANI8AIAqvABAUj0AAB47AMA2PQCgnb0AQOm8AECAvQCgJL0A4Hk9AAByPACAnT0AAIs8AAA0PQDAcb0AwDI9AACIugAAU70AAI88AABOOwCAnLwAANe7AKCFvQCAZrwAYDU9ACBHvQAgAT0AAIk9AICpvAAAijsAIAw9AIB0PABAkzwAYCY9AADWPAAA2DwAgIK8AJDMvQBAr7wA8Nq9AOCUvQAAgz0A8II9APCvvQAADzwAgJO9AMCoPADAVj0AgJs8AACQuwAA8zwAAFg9AEC/PAAwrr0AABE8AIBUPQDgML0AANI7AKAjPQBAojwAoA09AABbPQAQoz0AgBU9ACAJPQAgTb0AAG48AMBCvQBAkDwAABQ7AOCtPQAAjDoAAKo7AADJuwAALTwAgNo8AGCJvQCA67wAQNG9AABlPAAAUr0AAA08AAA6vAAALb0A8Jk9AABRPAAAWDoAABg8AEDePABgBT0AAO89AICpPQAAaLsAoIg9AOAQvQAA1TsAAKA8AIDlPAAAujwAwIK8AEASvQAAy7sAwEA9AIBBPQAAFzwAwJO8AADguQDgK70AoE69AHDDvQAACLwAwIA9AEDevACgMz0AAFI7AMBHPQAAXDwAsMK9AMAPPQAABjsAQPA8AIARPQCAgrwAQLY8AIBZvACAlzwA4AI9AIDevADg+z0AAAA4AACqOwAA7zwAAKK7AOAPvQBAf70A4H49ABC5vQAwkD0AIBQ9AIBOvQAA7LsAgEm9AIAyvABAVb0AAIY7AEBePQAAYLwAgB68AADgPABgFT0AII89AICqvACAAbwAAEE8AEDCvABgH70AANc7AECDPADAjLwAAPy8AGAwvQBQnb0AYEg9AACMuwCAZrwAwPQ8AADjuwBgCj0AAEW8AECFPQAATrwAAJw6AMALPQCAfzwAAOk9AIDpPADA4zw=","chunkHash":"b9707a2c4b2cb2070194f4cb984a44dc5572b5628af251615617cbfd83fbcb2e"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n    lowres_slice = normalize_for_display(lowres_slice)\n    \n    # Plot lowres slice\n    ax1 = fig.add_subplot(2, 3, 1)\n    ax1.imshow(lowres_slice, cmap='gray', vmin=0, vmax=1)\n    ax1.set_title(f\"Low-Resolution Volume\\n104³ voxels at 80×80×100nm\\nMid Z-slice ({z_mid}/{lowres_depth})\")\n    \n    # Highlight random cube positions\n    colors = plt.cm.tab10(np.linspace(0, 1, len(cube_coords)))\n    for i, (_, _, y_start, y_end, x_start, x_end) in enumerate(cube_coords):\n        rect = mpatches.Rectangle(\n            (x_start, y_start), \n            x_end - x_start, \n            y_end - y_start, \n            linewidth=2, \n            edgecolor=colors[i], \n            facecolor='none',\n            label=f\"Cube {i+1}\"\n        )\n        #...\n```","range":{"startLineNumber":116,"startColumn":0,"endLineNumber":135,"endColumn":0},"embedding":"AADluwDArLwAAKE7AECgvAAABb0AgDe8AMCfPABA6bwAAPi6AAAEvADASD0AYEw9AED9vAAAKDsAAIA5AIBBPQAAkLwAwM88AMCSvQBAIz0AQKS8AMABvQBgCT0AAEW9AGCBvQDAtzwAgIi8AIDNPADgWj0AoDk9AMADvQAAqbsAQO28AKBVvQCQ6r0AANC7AABQvQCgGT0AACg8AAB6vACwrT0AgEK8AIBUPACATbwAAEU9AAB2PADA2DwAIES9AEDdPACArTwAABQ7APClPQAgBj0AAKS8AADeuwAART0AAGA5AADiOwCAQTwAwJC8AHC4PQBAtrwAYBc9AACQOQAgRb0AABo9AIDZvABAVb0AkLo9AAAQOwDA4rwAQEs9AECMvAAAUDsAAKQ7AACoOwCAKTwAwC89AAAyuwCQsb0AAMe8AEAZPQAghT0AAOQ7AIBhPACApb0AwHa9AAA9vACAD70AQL69ACAsPQBgrD0AIGy9AEBTPQAAgTsAgHs9AIABvQDAAb0AIGg9AACGOwAAXzwAgJE8ACCCvQDAn7wA8JI9AJCIPQBgXj0AYA09AIA7PAAwmj0AUIA9AIBJvACA3TwAAPC8AABsuwDgXb0AANA8AOBevQCAWjwAgAG8ALCzvQCAVTwA4Bs9AADkuwDART0AgE+8AOBSPQAANr0AgMM8AACLvAAgEj0AAI07AIAVPACAy70AwDm9ADCdvQBAzzwAIE89AMBRvQAwuT0AALA5AMCOPQCAbDwAAJq8AAAAugA4Gz4AULK9AMBIPQCAIrwA4Mk9AADoOwCgDj0AAGM9AIBovQBAsL0AYHO9AKCTPQCAU7wAgEy8AIBIvACgAb0AQKe8AAD5OwAA/DsAQPe8AEAfPQCwkL0AAOq7AACXvQDgD70AAOO8AGAavQCAjDwAgJu9AEC6PQAAUDwAoBK9AAD9uwCgOr0A4A49AMDqvACAaLwAAMC7AICBPQDQn70AoCG9AAAmPAAApTwAAI67AMCbPAAAILoA4J09AOCGvQBAsDwAwIW8AFDDvQBAez0AgEM8AAAQvQBAqLwAwAu9AECpPQCAADwAAOK8AABSuwBAdb0AIA69AOB4vQAAqzsAwCM9AIByvADgqj0AwGw9AKARvQAAkjwAQOC8AABLvABg8D0AgGi8AECfPADgQr0AAMU7ACB0PQBgcD0AgPg8ACBsPQDgAj0AQIq9AOBvPQAAaDwAwJ48AOALPQAAYbwAIIE9AICZvADA3LwAoA09AGATvQAASDwAQO68AECoPAAAVTwAAGo7AKAFvQCQoD0AAGy7APCTvQDgnb0AAMA6AEBHvQDA6zwAoBg9AHCIvQAgtL0AYAG9AEDcvACAE70AgO88AOCKvQAA+7wAABs8AIDfPACQn70AADi7AACIOgCAHz0AIBU9AADjPAAQir0AAM+8AGApPQDAwzwAYKY9AMCIPAAA5TsAABi8AECwPABAkjwAAJe7AOADvQAAp7wAADK7AADiPACwjD0AAES7AMCLPABAIr0AQI48AAC/PAAwub0AAAs8AMAxvQBArLwAwIs8AKAUvQAANjwAQHe9AAChvABAWL0AIDO9AAD8ugAAYLwAwOI8AEgSPgAAnrwAgAk8AID1PACA4DwAgP68AGAzPQCAG7wAMIK9AACOPQCAv7wAgL68AIDcvACA9jwAgGg8AED9PABAJ70AwLs8APC1vQBA/zwAAGM9AICAvQCASbwAQIm9ACA0vQBA2zwAQLm8AAABPQBgar0AgAq8AICePACA0rwAwP48AAA6OwAgNT0AAMm8AKAbPQDQxL0AwKK8ALCVvQCAlbwAIHQ9AABQugCQqj0AAGU8AEA3PQAAir0AQNo8AADgOQAAhr0AgKY8AKAKPQCgDL0AgJ68AGB3vQAArLoAIFI9AGA9vQCAjTwAQBc9AICfvACAVjwAQB49AIATPABgAj0AQPM8AADjPABADz0AgIq8AEDBvQCA17wA4OC9AGBKvQBAeT0AwHI9ADCAvQAAKjsAoGy9AAD0ugAgbj0AgBw9AIBLvAAACrsAIHQ9AMCHPAAAxr0AANs8ACArPQAAO70AQJY8ACAcPQCgBD0AACs9AKBzPQCwpj0AQPw8AOA7PQAgar0AAHM8AGBcvQAAZrsAAIy8AMC4PQAAILsAADQ7AECgvAAAAjwAQM08AECcvQCAv7wAoIS9AAAwPAAgb70AAPw6AMDqvABgR70AgLY9AOAHPQAAhLsAACA7AMD2PABAzjwA8AE+AKBvPQAANLwAAFg9AEC9vACAfzwAgPg8AICfPAAgCz0AADS8AEB7vQAAprwAIEI9AIABPQAAbLsAQPe8AACkuwCgcr0AwEG9ALClvQAA5LoAcIE9AEAUvQDA0zwAgA68AEAxPQAAlrsAkLq9AGA8PQAAMDsAoAo9AIAkPQCAEL0AAGc8AEDNvACA+zwAQIc8AEDqvABA+D0AALe8AACwOgAA4DoAgMi8AADQugBgAr0AoD89ANC5vQBAaz0AALc8ACB4vQBAR70AwPe8AMDuvABAHb0AACo7AOBoPQCAp7wAAGg7AIAhPQAgDT0A0Kw9AEDPvABAgLwAAKG7AIBlvAAgDb0AgCU8AAAIPACAmbwAgEO8AEDkvACgob0AQB09AACvvADAm7wAQN48AAC3OwCA2jwAQI28AHCNPQCAOLwAAIw6AADHPADAijwAUNQ9AGAIPQAA3js=","chunkHash":"475900dfe7aed93b0553d950ca848d172ce05456519b162047db5031cfc1070f"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n        ax1.add_patch(rect)\n    \n    # Add legend for cube positions\n    ax1.legend(loc='upper right', fontsize='small')\n    \n    # 2. Show a single highres cube at the same scale\n    ax2 = fig.add_subplot(2, 3, 2)\n    # Mid z-slice of first highres view\n    highres_z_mid = highres_depth // 2\n    highres_slice = highres_views[0][highres_z_mid].copy()\n    \n    # Use consistent normalization for visualization\n    highres_slice = normalize_for_display(highres_slice)\n    \n    # Plot highres slice (scaled to match lowres)\n    ax2.imshow(highres_slice, cmap='gray', vmin=0, vmax=1)\n    ax2.set_title(f\"High-Resolution Cube (at same scale)\\n32³ voxels at 20×20×25nm\\nMid Z-slice ({highres_z_mid}/{highres_depth})\")\n    #...\n```","range":{"startLineNumber":135,"startColumn":0,"endLineNumber":152,"endColumn":0},"embedding":"AABuvADAD70AALI8AIDfvADA07wAAOC5AAB+vAAAB70AgBG8AACMugAgWz0AYDI9AAAZvAAA47sAAFW8AIAWPQAAJrsAgO88ALCkvQDANz0AQOK8AEDwvAAAJj0AgBO9ACCKvQAAFTwAQKC8AOAVPQBAOj0AwDc9AMDPvAAAX7wAgBi9AAAJvQBgCb4AgF28AEAYvQCAHz0AQNA8AADYugAQuD0AgI28AICsPAAAODsAAPk8AIB5PABA3DwA4Ee9AIAtPACAGjwAANc7AAB2PQCATz0AAKK7AMCbvADATD0AgGo8AMCyPAAAuTsAgGW8AJCqPQBAjbwAgN48AIAFvADgUr0AALg8AECUvACgMb0AMKc9AAAuuwAA6LwAQDE9AACEugAAzzsAAPg7AAD0OwAAgLoAQGQ9AAA7PADQrr0A4De9AMC9PACwgz0AgDc8AMC1PAAgtb0AgDS9AACZvABgCb0AsM+9AIB1PQDQ3z0AgGS9AEAoPQAAYjsAQHA9AAD3vADA0LwAQB89AABQugDAEj0AADQ8AGBwvQAAQLoAYGg9AFC2PQBABT0AIA89AICWPACQqz0AwIs9AACuvABAzTwAIDW9AABKvAAgR70AgDI8AEB6vQAAMLsAgBw8ADCnvQCACbwAIDw9AMCovABgMD0AgEW8AOBRPQBgIL0AwOA8AIC7vAAgJT0AAA48AABNvAAQvr0AADi9AFCwvQCAEjwAQCI9AEAvvQDQvj0AACA7AGCTPQCAArwAAH+8AIAEPACIJD4AwJe9AKARPQCAPbwAgMI9AICRvABAMT0AwEE9ADCCvQDgq70AgF+9ADCcPQBAzrwAAIG7AICmvADgLb0AwJm8AAAIPAAAhzwAgI28AIBRPQCwo70AgGG8ANCLvQDgEL0AANO8AIB0vACAkjwA4Jq9AODVPQDAgTwAQNS8AEDGvABALb0AAO48AEAgvQBgBL0AAPw7AMAoPQCwmr0A4AC9AACHuwBAhTwAAPy6AACbPAAA3TsA8LI9AMBYvQBgBz0AACi7APCzvQBQkT0AAKA5AOAGvQAA0rwAwKC8ADCQPQAAFTwAwM28AAA0OwDgbb0AQOC8AMBivQAA7rsAgGI8AAAQvQBQtj0AgEY9AMDevADAsjwAYCS9AACtvAAw4T0AgES8AADkPAAgKb0AAPk7AMAbPQBgfD0AANg8ACBmPQCAmTwAQIu9AIBqPQAAjzsAAKE7AIDRPACANbwAQJo9AIBGvABAorwAAP08AKAsvQAAEDwAYFu9AOAMPQAAajwAgBu8AMCivADgkT0AACm8AHCWvQBwq70AADS8AEBLvQCAJzwAwEE9ACCCvQDAt70AQCW9AMDgvAAgAb0AAHc8AGB9vQBAnLwAAKk7AAD3OwCgMb0AAOA5AADAuwBAPz0AYAI9AEDyPAAgtL0AwJC8AIArPQBgGj0AwJY9AACAuQAAJTwAAB48AED/PAAApzwAAIU7AIAcvQBgHb0AACK7AMD/PABghT0AgBu8AICkPACAPr0AAEw8AIApPQBQjr0AAKQ7AAAmvQAA07wAgE08AIA6vQBAqDwAwFi9AMCSvABgH70AgBC9AABVvAAA1LsAADE8ALAZPgBA/bwAAIC4AMCFPABgGT0AAOy8AGBuPQAAUrsA4Hu9AEBlPQAARrwAgOS8AGA4vQDA1zwAABC7AIDaPACAlLwAQKc8ALDavQBA5TwAcII9ALCKvQAAbLsAIJa9AABdvQAAWTwAAJq7ACAEPQAgf70AAJ+7AEDQPABAAL0AYAQ9AIBVvACAOT0AAPS7AIASPQCQwL0AANO8ANCtvQDAubwAICo9AECFPADQtD0AgGY8AGA6PQAgir0A4AU9AAAsuwBQk70AoBE9AOAOPQCA0LwAoBW9AAAPvQCAKjwAIEw9AGBCvQAA7TwAwF89AIBVvACAZTwAYBU9AACiOwCA/zwAwDI9AEDhPABA9TwAALa8AMC2vQAAnLwAMNi9AAB8vQDAkT0A4G09AHCJvQCANrwAUJu9AAByOwBAOj0AgHU8AAAgOQAAtLoAsJk9AMC2PAAgtL0AAF48AIA9PQBAJr0AAHs8AEA5PQBAVT0AYC09AGBuPQDAoT0AAEU9AIBDPQBAQr0AAOq7AABNvQAAxbsAAES7AHC7PQAAebwAgFU8AAB4vAAASDoAAEA8AGCEvQCAiLwAgKi9AABRPABAYL0AAA47AEAAvQBA3rwAAJw9AMDAPAAAfjsAAIe7AIBLPABALz0AgOg9ABCGPQAAYrsAAJo9AMDSvABAjTwAQLA8AADfOwBgAD0AgNC8ACAGvQDAAL0AIGs9AGACPQCATjwAQMu8AIAHvACgNL0AIGG9AACxvQAAxDsAQEY9AMD7vABgLT0AAN27ACA7PQAApzsAMLi9AKA4PQAArTsAQNc8AMDvPAAAA7wAgJk8AACIugCAvjwAAFU8AMDQvAAQAz4AANO7AAD6OwAAfjwAACI7AMCCvABASr0AwEA9AFDMvQAAeD0AgKE8AMBQvQDgN70AwKW8AMDDvABAw7wAAEY7AOA7PQDAgrwAAIe7AID3PAAAyjwAsKo9AADOvABA8bwAgCO8AAC9vABgAL0AABA6AECNPACAkbwAAA+9AAAJvQBAjb0AAOw8AABdvAAAaLwA4Aw9AIBBPACAzzwAALC5AOB5PQCAtLwAALi6AED+PABAqDwAYOQ9AKA0PQAATzw=","chunkHash":"401b7896a580169203d6c0538202740fdfd8413ea9e6a56047e58c9ced1e0bd2"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n    # 3. Show zoomed-in highres cube\n    ax3 = fig.add_subplot(2, 3, 3)\n    ax3.imshow(highres_slice, cmap='gray', vmin=0, vmax=1)\n    ax3.set_title(f\"High-Resolution Cube (zoomed in)\\n32³ voxels at 20×20×25nm\\nMid Z-slice ({highres_z_mid}/{highres_depth})\")\n    \n    # 4. Diagram showing cubes within volume\n    ax4 = fig.add_subplot(2, 3, 4, projection='3d')\n    \n    # Create a wireframe for the lowres volume\n    lowres_corners = np.array([\n        [0, 0, 0],\n        [lowres_width, 0, 0],\n        [lowres_width, lowres_height, 0],\n        [0, lowres_height, 0],\n        [0, 0, lowres_depth],\n        #...\n```","range":{"startLineNumber":153,"startColumn":0,"endLineNumber":168,"endColumn":0},"embedding":"AMC1vADA27wAgAE8AADLvACgKr0AgFu8AADAuQDAnbwAAL+7AACUugBAaz0AAFI9AIAfvAAAIDoAgNK8AEBnPQAA1bwAQPY8AKBivQBgJz0AALC7AADPvADABj0AgEm9AACIvQCAyjwAwO+8AMA6PQCgPD0AIFw9AGAevQAAa7wAQAW9AIAZvQCA+70AgKm8ACA/vQDABT0AgKk8AKAGvQBwoz0AAE67AICMPAAAO7wAQFE9AADRPACAFDwAQCW9AACTPAAA/jsAAIy7ACCiPQCADj0AoBa9AECTvAAAFz0AgAW8AAD8OgAAqTsAgBe8AMCvPQCAkbwAgCc9AAAkOwBAML0AABQ9AABmvACgSL0A8KQ9AIAovACAmbwA0IU9AAA5vAAAjTwAAM08AIAivAAAqzsAwAE9AAD9uwDAur0AgAm9AEAHPQDgmz0AAP07AAAdPACglL0AoFy9AABdvACgM70AEOO9AKAlPQDQqT0AIFG9AIAkPQAA4LoA4FE9AECrvABAE70AYAM9AECwPACADT0AgG48ADCfvQCAAbwAUJs9AAC7PQBA/TwAgAQ8AAChOwBwlD0A4Gk9AIDavABA1TwAANK8AICRvACAaL0AAKs7AOBZvQAAODwAAJQ6ACDBvQAAeDoAQDg9AIAqvADAgz0AAJi8AMAoPQBgLb0AYCs9AAB0vACgUz0AwIg8AIBCPABw7b0AoAe9AKCYvQAAOjsAwFI9AOA6vQAQxD0AABK7AFCnPQBAyDwA4A29AIBdPABQHz4AYJS9ACAzPQBAsbwA4Ic9AABTvADAMD0AYG09APCQvQCAqL0AwES9ANCgPQCAOrwAAKC6AECFvABgP70AgA+8AAAIugAAgbsAQJK8AGANPQCwgb0AAHi6AACQvQDAAL0AAKG8AIBnvAAAZDsAQJ69ABDIPQAA1zsAABe8AABpvABAGr0AANc8AEC7vABA5rwAAIC5AGAkPQBQn70AQP+8AIAYPACARDwAAGm8AMDBPAAAXjsAMJs9AAB/vQAA8zwAgEi8ACCevQCAbz0AQIk8AAAsvQAAqbwAAHO8ABCKPQAAUzwAgFe8AADnOwCgbr0AQKK8AGB/vQAAZDsAAGw8AACqvAAgqT0A4HE9AEDcvAAAXDwAYAG9AACuuwDA3j0AAOG8AADsPACgLL0AAMS6AMAfPQAAgD0AwMY8AEBhPQCADDwAgIy9AOBXPQBAgzwAAJM8AIDQPAAA2LsAcKs9AAAZvABArLwAwJ88AGADvQDAhDwAIDO9AAC1PAAAdjsAAPC6AAC3uwCwmT0AALW7AKCLvQDwrL0AgGq8AEBZvQBAojwAgBY9ANCIvQBQt70AAAK9AIC+vAAgMr0AQAY9AIBYvQAAk7wAAGY7AACwOwAARb0AgF48AABdPADATj0AwD89ACAWPQCgt70AwJ28AOBPPQDgCz0AwKI9AIA+PAAAKDoAACg8AEDlPACAbDwAAKM8AIA7vQDAiLwAAIi6AIABPABghT0AQM+8AACUOwAAP70AAHY8AMAQPQBgjr0AAIM8ACA7vQAAy7wAwMc8ACBDvQAArzsAABq9AAD4vADAvLwAADe9AAAAuwAACrwAwLg8APAUPgBACr0AwIw8AAAsuwDACj0AQL+8AMDbPAAAr7wAQEq9AMBJPQAAy7wAQJq8AIBsvQAgAD0AAAy8AMDGPAAAF70AABU8AODGvQAAHj0A4E89ALCOvQAAUbwAsI69AOAHvQAAfTwAAO+8AEDHPADgS70AAAy8AICePAAA/bwAoA09AACUvAAgUj0AALi8AABOPQDQub0AAPS7AMC3vQBAnrwAQDU9AEAiPQDAqz0AAI88AEDqPABwm70AQNU8AABUuwCgm70AAAM9AKAGPQCAsrwAQK28AOBjvQCAWjwAoCQ9ACA2vQBAqTwAsIE9AACMOgAAErwA4Ec9AAAMOwAAxTwAADs9AMDEPABAbj0AAPC8ANCovQAAIr0AAOa9AKBivQAwkD0A4H09ADCbvQCASzwAAI+9AACYOwDA8DwAAIo8AICwvACAJzwAAG09AMCPPADAsr0AAIk7AMBPPQBgTb0AQNI8ACAfPQDgbj0AgAk9AIBMPQAgvT0AgGk9AKAUPQAAOb0AAAY8AMBvvQAAALoAAEw8AACjPQAAVjwAAOA7AAD6uwAAm7sAgCo8ALCdvQAA3LwAEKi9AAAYPABgVL0AAGq8AECjvAAA4LwAUJE9AAAdPABAmzwAAKQ6AMCzPAAANT0AaAQ+AACEPQAAg7wAkJU9AADlvAAACzwAoBw9AAAVPADArDwAoAu9ACBVvQAA0bwAIFw9AKA4PQAATrsAgMO8AIADvACAJb0AIEy9AJC2vQAAHDsAIB89AACJvADgHT0AwJa8ACA1PQAAtrsAkL69AKAfPQAAMLsAgBY8AAD3PAAAbDsAgIk8AIBkvAAAjzwAADw8AAAgvQBQ/j0AgFK8AABmOwAAMzwAgAS8AIA6vAAgKr0AYDY9AHCrvQCAWT0AAI88ACA2vQDAF70AwBC9AIDgvAAA3bwAwIE8AGAxPQDAmLwAgIe8AEBRPQBA/zwAUK49AIAMvQBA8rwAAOQ7AECdvADgBL0AgAA8AEChPABAlLwAQOu8AMDzvAAwx70AIEg9AABsuwAA/bsAYDo9AADMOwCAHT0AgLu8ALCQPQBAHL0AgCu8AICzPAAAETwAoOM9AMBIPQCAPDw=","chunkHash":"c21a189a9ce8ab3f2f3c4005e533dbc5ebbe5f460c272023873cfc94fd5202b4"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n        [lowres_width, 0, lowres_depth],\n        [lowres_width, lowres_height, lowres_depth],\n        [0, lowres_height, lowres_depth]\n    ])\n    \n    # Plot lowres volume edges\n    edges = [\n        (0, 1), (1, 2), (2, 3), (3, 0),\n        (4, 5), (5, 6), (6, 7), (7, 4),\n        (0, 4), (1, 5), (2, 6), (3, 7)\n    ]\n    for start, end in edges:\n        ax4.plot(\n            [lowres_corners[start, 0], lowres_corners[end, 0]],\n            [lowres_corners[start, 1], lowres_corners[end, 1]],\n            [lowres_corners[start, 2], lowres_corners[end, 2]],\n            'k-', alpha=0.5\n            #...\n```","range":{"startLineNumber":168,"startColumn":0,"endLineNumber":185,"endColumn":0},"embedding":"AOB4vQCAM70AgHQ8AOCUvQBgU70AgLG8AABeOwAA5rwAAOU7AACFPADgFD0AwGs9AAC8vAAAubsAAKi7AKBrPQBAgzwAgDk9AKCnvQAA+TwAgLO8ACBYvQAgAz0AIEW9AAAhvQBAjTwAwN28AAB2OwBA9DwAgH09ACAsvQAAF7wAgAK8AGAwvQAAsb0AAJC6AIBfvACAnDwAAD47ACAxvQAwtT0AACk8AMDBPABAvzwAwPM8AMCJPAAgVT0AwMe8AIAFPQAAELoAALq8AICKPQAA/jwAgFK8AADgOQBgNT0AAE48AMDgPADAKT0AwPi8AOClPQDA37wAYCI9AABOvADgpb0AwNk8AAAJvQBAS70AYII9AACluwCAmbwAwJc8AMCNvACAazwAQN48AABZPAAAPjsAAIg8AADQuQAAk70AgJG8AKBdPQDAST0AgHE8AIBLvABgqr0AAFG9AICmvAAgKr0AkMO9AEBRPQAgsj0AoDK9AOBZPQAA3DsAcJQ9AED4vAAA7bwAQGc9AACEOwAAjjwAYAY9AMCtvQAAw7wAcKA9AABbPQDgSz0AAOM8AMAMPQDgkD0AQEk9ACA5vQAA0zsAYA+9AEDSPAAArL0AAN87AAAlvQCA7zwAgPq8AHDFvQBAqzwAQAo9AICsvACgiD0AgCw8AICnPADAhr0AwAY9AIDSvAAATD0AALo8AADIOwDwp70AIA29AKDLvQDAmDwAYHc9AACFvABQwD0AAKM7AEC2PQAAFb0AAFA7AABDvADwHD4AwHe9AEAcPQCAerwAMM09AIAJvACgVz0AYA09AGBBvQDwx70AsIC9AMCSPQCgAL0AgHu8AMDJPACA17wAwKW8AOAXPQDAvDwAAM27AGBKPQBgI70AgA68AICDvQAAurwAANy8AMDDvACgZT0AwL+9ANDJPQAALrwAAGq7AADWuwAgJ70AAIs7AEATvQCAprwAAHG8AEBFPQBgKr0AIAm9AIClPABArzwAAIq7AEDsPACArDwAwF49AED7vAAAmLoAAMC5AKCzvQDANz0AAAy7AIAavQAANLwAgBm8ADCSPQAAPzwAQJ68AIBYvACwgr0AoBe9AOBovQBAvjwAQJA8AABoOgDgkj0AwLg8AEDJvAAAHT0AgEe9AABnPAAg7z0AgM+8AAD3OwDA97wAAKu7AMCZPADQij0AQIY8AMBKPQBgbT0AILi9AOAGPQAAq7sAgGW8AECcPAAAILsAwFM9AADcugDAQL0AQAo9AECfvACAyTwAoDy9AIAsPACA6DwAACA5AACuuwCANT0AAJG8ANCQvQCQh70AAHw7AOBAvQBAzDwAYCM9AKBTvQCAlL0AgCK8AADvuwCAQr0AgEs8ADCgvQAAtLsAAMU8AMCUPADgW70AgNK8AADYugDAKz0AgCY9AIBaPQBQoL0AgGS8AEAqPQCgLT0AMIw9AAAWuwAA+DsAgIi8AEDlPACAMTwAAGw8AKA/vQAA7bwAAPw7AIBvvADgpT0AgJ28AACnvADAOL0AAHg8AMD/PABQh70AABY7AEDsvAAAsDkAwIY8AGAWvQAAhbsAoBW9AADJOwAAJDsAADG9AMCsvAAgKr0AgBA8AHAaPgCAcbwAAHK7AAC9OwAA+zwAoBa9AMB4PQAAZrwAQFq9AFCTPQCAY7wAgE68AEAjvQAALj0AgAC8AAAEOwAAcb0AAOW7AFDXvQAAfTwAAGI9AFCGvQAAubsAoDu9ACAlvQAgNT0AAEo8AACduwCgkr0AgM+8AECgPADgA70A4HQ9AICUvADgET0AgD28AICfPADAzL0AYCS9AKB5vQBA9bwA8Jw9AIABvQDAhj0AwMA8AMAGPQCgRL0AwPk8AABqPADgOb0A4Dk9AMCqPACgS70AAH+8AMDzvAAAU7wAIHY9AAAavQAAOTwAQCg9AIDyvAAAVjsAACK7AECfPADAxDwAoCM9AIB4PABgij0AAN+7ALC2vQCAzrwAgPG9AGApvQAAiD0AwEE9AFCtvQAA6LoAoL+9AAAvPAAgWj0AgOQ8AAC7vAAASDsAAAw9AEAQPQAQqb0AgOA8ACBEPQDgGr0AAD88ACB3PQCAND0AgDQ9AEC/PAAA6D0A4EI9AKA+PQAAU70AAMQ8AABevQAAMTwAAAE8AGDIPQAASLwAgLM8AACnPAAAoLoAYCM9AMA3vQDA6rwAwMC9AAD1OwDgDr0AAJY8AABzvABALL0A4JI9AABaPABArzwAAOu7AIAcPQCAezwAkPQ9AMBMPQCAPLwAoFs9AADkvACAQjwAoB89AABxPABgDz0AAH68AAAGvQAAxrwAACE9AAAtPQAAADkAwAe9AICgvABABr0AQE29ALDcvQCABTwAwLo8AMDIvABA1DwAAGw7AKCiPQCA+jwAsMO9AIAVPQAA2LoA4F49AECgPACAXLwAwC89AMAQvQBAFD0AABA7ACAavQCACT4AAKQ6AAAWPAAAxzsAgPG8AIAjvADgTb0AwHs9ADCnvQDAez0AAOI7AMBkvQAAtDoAAIi8AADWuwAgVb0AAP+7AABLPQDAnLwAgIG8AAAXPAAA7DwAoJU9AOAEvQDAzbwAgEW8AMAhvQCgNr0AABA7AACBPADAjLwA4DK9AGBSvQBwlL0AQGw9AADXOwAAN7wAQJk8AIAKvADA7TwAQIS8ACCxPQBAt7wAgJE8AMB+PQAAjDsAwIY9AEC4PADAIT0=","chunkHash":"77b220a5de25754c3aaf0e66c41f04711292ef1e74fa734d78dd78461ccda87c"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n        )\n    \n    # Plot highres cubes within the volume\n    for i, (z_start, z_end, y_start, y_end, x_start, x_end) in enumerate(cube_coords):\n        cube_corners = np.array([\n            [x_start, y_start, z_start],\n            [x_end, y_start, z_start],\n            [x_end, y_end, z_start],\n            [x_start, y_end, z_start],\n            [x_start, y_start, z_end],\n            [x_end, y_start, z_end],\n            [x_end, y_end, z_end],\n            [x_start, y_end, z_end]\n        ])\n        \n        # Plot cube edges\n        for start, end in edges:\n            ax4.plot(\n                [cube_corners[start, 0], cube_corners[end, 0]],\n                [cube_corners[start, 1], cube_corners[end, 1]],\n                [cube_corners[start, 2], cube_corners[end, 2]],\n                #...\n```","range":{"startLineNumber":185,"startColumn":0,"endLineNumber":206,"endColumn":0},"embedding":"AOApvQBgEr0AAIM8AIDevADA87wAAKS6AABCOwDAobwAAGC7AACAOgDAYD0AQD49AAAauwCAmrwAgBe8ANCIPQBAyLwA4DM9AECKvQCA5zwAQLG8AKAkvQCAJT0AACq9AMCevQAACD0AAOw7AACyPADAHT0A0IU9AEDAvACAFLwAgPi8AGBgvQDw3L0AAD67AEAOvQDA+zwAgLk8AADHvADgmD0AgGY8AIApPAAAgDoAAKQ8AECaPACAnjwAAEu9AKAwPQCAbrwAAI68ABCyPQBACD0AAIC8AABzvABAwjwAAMS6AIAnPADA1TwAgMy8APCMPQBAnrwAoD49AEC8PAAAY70AQLU8AAACuwCgXb0AQJY9AABuPADA37wAIF49AADIOgAAEDwAQJ08AAD8OgAARDwAwBs9AACHPADQt70AgBS9AKATPQCwkz0AAEU8AAC4uwDQpr0AQCS9AIB8vABA2bwAQLy9AEA8PQDw7z0AIG29AGAvPQAAZLsA0IU9AACMuwDANr0A0Ic9AABUOwCAGzwAgNw8ABCdvQAA8LsAwMQ9AMCxPQCAJT0AwIw8AACgOwAAgT0AsII9AACLuwAArjsAYCS9AIBivABAgb0AQKo8ACA2vQAARzwAAPw6AACrvQBAqDwA4AM9AMCNvADAdT0AAI27ACAVPQDgTb0AoAU9AECevADAjDwAgCg8AAC4ugBAp70AgCu9AKCdvQCAcjwAwPQ8AMChvACQuD0AADA6ANC6PQAAcjsAgHa8AAC6OwD4JD4AYHW9AEAmPQBAtLwAgHQ9AADtvABgRz0AQBo9AHCovQAgpL0AEIq9AGB/PQBAv7wAAMk7AAAAuQAgGL0AwN+8AAAIPABgAD0AAMK7AGAoPQAAh70AAGk8APCgvQCAU7wAgGe8ACAUvQDA0jwAoJy9AAAGPgAAXDwAgBy8AOABvQBgHb0AQIc8AADpvAAA/LwAAOm7AGBqPQBwmL0AAB28AAA5PACAGDwAAKa8AEDqPAAAVDsA0I49AIB7vQBgHz0AABo7AICzvQCALj0AAAO8AGAgvQAgG70AAD68AMCMPQDAwTwAAFS7AACIuwCwjL0AAMu8AGA2vQDAiDwAALM8AAC9vADwjz0AQOs8AECzvAAA6zwAQDi9AACqOwCwyj0AgB69AICsPADAGb0AoAQ9AKAPPQDglT0AgLY8AEBePQBA2jwAQKO9AKALPQAASTwAgJu8AECoPAAAUDoAkJA9AIB1vACAXrwAgNY8AEACvQBgCD0AwBe9AICcPAAAvTsAgEG8AIB+vABAaT0AAJy8AACMvQBgoL0AADI7AMBfvQAApjwAYC89AKAsvQDQjb0AgM68AKAQvQBAx7wAgE88AMAZvQCAvbwAQBA9AAC5OwCgQb0AAEK8AIApvABgYj0AgDE9AEAkPQDgqr0AAJ+8AKBuPQAABT0AAK09AAAOvQCABjwAgBg8AAB1PAAAwTsAQOs8AGARvQAAirwAQKq8AAAIOgBQnj0AgBu8AABxvACwgr0AwMc8AIBwPAAAqL0AANI7ACByvQBAwLwAIAk9AMAbvQBAhjwAwE29AIAmvADgEL0AQJC8AABOvACAM7wAAMo8ACgZPgAAirwAAOe7AMDuPAAgJD0AQBa9AKBYPQCAqbwAwHi9AKB1PQDAq7wAgCu8ACBZvQBAJD0AAGA7AID1PAAAQb0AAA+8APDqvQAA7DwAAE89AOCYvQCAPbwA4Gm9AAAavQAAyjwAgL28AACjOwDAYL0AwIu8AADMPADgEr0AQAw9AIAOPACgRT0AgK28AKAWPQBgor0AwMy8AEB8vQBgAL0AYIU9AAAfPABwkj0AgIA8AMAcPQBgXb0AAJM8AICFvABgVr0AoAg9AAAfPQCAXL0AwLW8AEADvQAA4LsAgFY9AEDHvABArTwAUIQ9AAC6OwAAELoAAFs8AEDbPADAbz0AwCc9AACdPACAOz0AgFm8AIC2vQBA0bwAaAG+AKApvQCggD0AAEw9AMBtvQAAwLkAQIq9AICOPAAgOj0AQKA8AAA7vACADDwAQCw9AIDfPACwqr0AAKA5AIBgPQAAOr0AQJc8AGBZPQAQgD0AgNw8AEB3PQDwtj0AACM9ACAXPQBQib0AgHI8ACAhvQAAQDoAAOi6AACsPQAAXrsAQL08AIBSvACAdrwAANs8AICLvQCAjLwA4MC9AAByOwCASb0AADC8AEDDvADgKr0A4Jw9AADDOwAAMbwAACu8AAAjPQDA6zwAgNo9AIBaPQDA2bwAkJM9AIC0vAAAljwAwNE8AAAhPADAqTwAgFe8ACBCvQCAAb0AsJM9AMAyPQCAFrwAgAK9AIBxvADgJr0AAGa9AHDUvQAAALwAgD89AMAmvQCgLj0AAFY7AMCAPQAAyjsAUNS9AGBIPQCAYLwAQAw9AGAbPQCADLwAoCU9AIA/vAAAHjwAADI7AID0vAB4AT4AAAi6AABMPAAAajwAwNq8AMC9vADgLb0AIFo9ALCLvQAgUz0AgCs8AGBBvQBApLwAgDa9AICDvAAAGL0AADe8AEBsPQAA/rsAAIO8AOBjPQAgFz0AAJs9AOAyvQBAr7wAAAQ7AICmvAAAC70AgBQ8AEC4PADAi7wAwAK9AEBTvQBQw70A8IM9AADbOwCALrwAADg8AAAiOwDA/jwAALm7AACFPQCAg7wAAHO8AIDdPACATTwAkOU9AIDlPABAujw=","chunkHash":"8e43e2a9d4ef5b2d186e4857870724d30c95631d94f3992996b9bd9275085ecf"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n                color=colors[i], alpha=0.7\n            )\n    \n    ax4.set_xlabel('X')\n    ax4.set_ylabel('Y')\n    ax4.set_zlabel('Z')\n    ax4.set_title(\"32³ Cubes Within 104³ Volume\")\n    \n    # Set equal aspect ratio\n    max_range = max(lowres_width, lowres_height, lowres_depth)\n    ax4.set_xlim(0, max_range)\n    ax4.set_ylim(0, max_range)\n    ax4.set_zlim(0, max_range)\n    \n    # 5. Comparison of multiple highres cubes\n    ax5 = fig.add_subplot(2, 3, 5)\n    \n    # Create a grid to place multiple cubes\n    grid_size = int(np.ceil(np.sqrt(min(6, len(highres_views) * 2))))\n    grid_img = np.zeros((grid_size * highres_height, grid_size * highres_width))\n    #...\n```","range":{"startLineNumber":206,"startColumn":0,"endLineNumber":226,"endColumn":0},"embedding":"AADavADgVL0AQKU8AABTvACAgrwAwPa8AAB8OwBAGb0AAGm8AAAHPAAwhj0AwJQ8AMD1vACAzLwAADg7AEB1PQAAbrwAQM88ABCqvQAAHT0AgFe8ACBmvQCA7TwAwPq8AICCvQCAOzwAgFy8AEAYPQAAOT0AwBw9AEAhvQCAMbwAYFe9AOBGvQDQ3r0AANO8AEDQvAAA4zwAwBY9AIBWvAAQuD0AAMA5AADePACAWzwAYBU9AMDJPADAFz0A4DK9ACANPQCAUDwAgAk8ACCMPQAgIz0AgIi8AAC+OwAAPj0AQNa8AICEPACATjwAQMS8AJCXPQBgGr0AgBY9AAASvADAaL0AwJY8AABWuwBAML0AUKg9AECPvACAaLwAQEM9AECAPACAPDwAADi7AIBOPAAA+DsAgOM8AMCDPADAo70AAB69AEDOPAAwhT0AgMQ8AIBCPABwl70AYA+9AABYvADgRr0AoOG9AOAmPQAgvD0AAAu9AEAVPQCAKbwA4Fg9AKAzvQCAiLwAQEE9AACsOgCAVDwAgI48AKCJvQCABD0AYI49APCzPQBgKz0AIAA9AIAEPADgvD0A4DM9ACABvQCAJDwAQFm9AABCOwBAY70AANc7ACB6vQAAPTwAAAAAAEB+vQAAHrsAQCU9AADpvACQjT0AQJO8AKBJPQDgYL0AgBU9AABuvABgBD0AAEQ8AMC4PACwv70AwDi9AEDUvQBA6DwAoCo9AKAJvQBAuz0AQOE8ALCQPQAAd7wAAKi6AAC6OwAIFj4AAKO9AABiPQCAT7wAYIo9AABuvABA/zwAwB89ACCXvQCQjr0AIIK9APCpPQCAPLwAANC7AADFuwBgMb0AwKG8AABoPACARDwAAL+8AABIPQBAd70AgEe8AOCVvQAAlLwAAOG8AABvvAAgPT0AEKW9AHDVPQAAMLsAANG7AABrvAAgBL0AYDE9AOAXvQBA4LwAAPA5AMCWPADARL0AQBq9AIAFPQAAPjsAAKS7AMAKPQCAmjwAcJQ9ACArvQDA7DwAAJm7AKCjvQDgTT0AABA8AMBXvQAAODwAAK47AHCxPQAAUTwAgGe8AAACvADAkr0AAJy8AOA7vQAA27sAgGs8AIAlvAAAWj0AIBM9AICpvAAAfDwA4FW9AIC0vADA3D0AAOS8AEA7PQCgKL0AANI8AOBbPQAgUD0AALA7AACAPQAA+jwA4G29AOAsPQCAOzwAgAo8AECsPACAXLwAEKQ9AMDkvAAgKr0A4Bw9AIAPvQDAjjwAQA29AID8PAAAnzwAgEA8AGAKvQCAID0AAHq7AKBpvQCAlL0AgDq8AMA0vQCAWjwAQC49AMCSvQCQsL0AANC8AADtuwAAsbwAAGM8AOB3vQDA6bwAAOi6AAAKPAAgP70AAN68AACUOwBgYz0AQOs8AKBGPQDAwb0AgLK8AKCJPQCACD0AsKY9AAC/OwDA0TwAAAS7AADtPADgCT0AgDE8AKA+vQCAvLwAANG7AEC+PAAAZj0AgES8AAAIOgBgEb0AgCw8AMD6PAAgfr0AAAo7AMBHvQAAprsAgB48AABbvQAAjjsA4B29AADrOwBAxLwAQEa9AACOvAAAE70AAKq7AKgKPgAgUb0AAIC8AABVPAAAHT0AAF28AAAXPQCAE7wAQFa9ACB+PQCAYbwAQPW8AKA8vQBgCT0AAE48AECePABABb0AgJM8AODVvQAAQz0AQMw8AACQvQBA27wAIJK9AEAgvQBAhzwAgGq8AADWOwDAor0AAFa7AEAnPQAAQ7wAQAA9AIDUvABAYz0AADO8AEDMPAAAwb0AwPG8ALCgvQBAEr0AwGo9AAA+OwDQmz0AQJU8AEDLPACAOb0AoA89AAByPABAZb0AgBM9AIA5PABAHb0AQBC9ACAmvQAAUrsAAJw9AGAWvQBgAT0A4Kc9AICJvAAAADoAgNc8AIAYPAAA5jwAEIs9AEDrPABA0zwAAAC5AJCsvQBAPr0AwOe9AABHvQDAjj0A4AU9AFCYvQAARrsAIGa9AABUPADgZD0AwKY8AMCgvAAASDoAYGc9AAC5PAAwkb0AAN88AIB8PQCgWL0AgFA8AAAoPQBAPD0AQL08ACBJPQDwyT0AAC09ACBiPQBASb0AANw7ACBhvQAAsjsAgBc8ACCrPQAAALoAAOc7AADhuwDAobwAABE8ADCfvQCAAL0AgJ+9AADEOwAQgr0AAMm7AED1vABAbr0A0Ko9AABmOwAAJTwAgGU8AACsOwAA8zwA8Ow9AHCdPQBAhrwAgHs9ACA4vQAAxzsAgNE8AABpPABgOj0AQJe8AGAevQDA0bwAIE09AEBdPQAAtrsAAFm8AACgOQCAYrwAQEi9AHDcvQAAMjsAQDA9AIDRvABASz0AwIO8AACWPQAA9LoAMMO9AABmPQAAWLoAYBw9AECBPAAAiDsAgGs8AIBDvABAxjwAQLo8AKBIvQAQDT4AAKY7AAC5uwAAYLkAAAC4AADtuwCQlr0AQFw9ADCzvQDAkj0AAJc7AIBUvQCA5bwAwOK8AIDvvACAJr0AAEK7AGBKPQCAK7wAACi7AAAJPAAAODoAcJc9AIAfvQDANL0AgH+8AEDGvABgWL0AgKc8AECEPAAAlLwAgCq9AED6vABwob0AAGY9AABuuwCAjLwAoAc9AADuOwAAeTwAAAC5AECDPQCgFL0AANs7AEDjPAAA7TwAUNc9AGAAPQBACz0=","chunkHash":"731b79975b20c2c967eb8fef1b297654c7f2caaad8315486bbb6f3bc53fe5ca5"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n    # We'll fill the grid with views from the highres batch\n    count = 0\n    for view_idx in range(min(3, len(highres_views))):\n        for z_idx in range(2):  # Show 2 z-slices per view\n            if count >= grid_size * grid_size:\n                break\n                \n            row = count // grid_size\n            col = count % grid_size\n            \n            # Get the slice\n            z = highres_depth // 3 * (z_idx + 1)  # Show slices at 1/3 and 2/3 depth\n            if z >= highres_depth:\n                z = highres_depth - 1\n            \n            # Get and normalize the slice\n            slice_img = highres_views[view_idx][z].copy()\n            slice_img = normalize_for_display(slice_img)\n            \n            # Add to grid\n            grid_img[row*highres_height:(row+1)*highres_height, \n                     #...\n```","range":{"startLineNumber":227,"startColumn":0,"endLineNumber":248,"endColumn":0},"embedding":"AMAyvQAgLL0AALM7ACBovQBgP70AQPC8AIARPAAA5bwAQBO9AIBgvABgOj0AYEI9AMC8vACANDwAwLY8AAAZPQAA0TsAgB49AECRvQBAQT0AwIC8AKCWvQDAWD0AwNi8AHCBvQAAeDwAQLa8AABvPADgND0AYII9AAAovQCABLwAgLK8AOAfvQBQxr0AwAu9AOAyvQBA8TwAAPC5AIAQPABA6z0AgIw8AADoOwCAJLwAwCM9AICIPAAAbT0AIGO9AIAfPABApDwAALs7AEBoPQCAKbwAgM28AECmvABALD0AgGa8AADkuwAACjsAgGi8APCbPQBAz7wA4Es9AACFPADADL0AABw9AICWvACACr0AgHU9AIBBPADAHL0AgHI8AIDwPAAAgLkAoAE9AAC1OwAAEj0AANC6AIAdPQAAZr0AAJS7AAC6PABgRz0AQLg8AABePABgmb0AgHS8AICSvADAFb0A4Ji9ACAHPQDwuz0AgDu9AKAgPQCAjLwAAIw9ACADvQAAoLwA4AE9AADpOwAAMzwAYCs9AIBjvQDAt7wAQIo9AABqPQAAy7sAAFQ9ACA6PQCwpj0AwDs9AIALvQAApbsAgDO9AIAHPABAGL0AAMY7ACCJvQDAkjwAAAY7AHDmvQAAtbsAAAo8AEDzvABALz0AgE68AIDVPABAvLwAgPY8AMCZvAAAvDwAgJQ8AAD9OwCA3b0AoF69AFCivQAALzwAoG89AMDVvABgxD0AACu8ADCdPQCA2bwAACo7AMAAvQA4Fz4AoI69AGA8PQAAg7sA8KM9AAACuwBAljwAwBw9AGCOvQDAsL0AQE69AMCJPQBA/rwAAAu8AACMugDARL0AoCW9ACBVPQAA+zwAYH+9AAAdPACQi70AwIu8AJCnvQDA57wAgLW8AID9vABABj0A8J29AKCwPQCAlzwAwCC9AADsvACgH70AgIs8AID5vAAAgjsAAHq7AMAsPQDgJ70AQKe8AAAJvAAAszsAQNm8AAC2PAAACjsAcJM9AOB6vQAAUjsAAEC8ADCYvQAgTT0AQIA8AOAivQAAdzwAAH67APCZPQAACjsAAJy8AABAuQBAMr0AQLy8AKA9vQAAMzwAAHo7AIBEvAAQvz0AYAo9AIDGvACgCT0AgCm9AIDQvACg+j0AAAa7AAA2PACgV70AAEA5AMAgPQCQoT0AICQ9AGAxPQDgfz0AoEq9ALCsPQAApDsAAEw8AAAwPABAozwAYA49AADMOgBAprwAYAs9AMCnvQCAijwAYFO9ACALPQCAJj0AAHI7AMCDvACAnjwAgC+8AICevQAgmb0AAGQ7AMDMvABAmzwAAG09AKC4vQBwsr0AQIS8AIA0vACgKr0AgAk8AECWvQBAmLwAAEq7AABPPADAYr0AQMK8AIAAPABATj0AoA89AEAmPQCwt70AAD47AADCPABAVT0AwMA9AAAOPAAAxzsAABW8AIAAPQAAZTwAAF48AMA+vQCA2bwAAEo7AIDTPACAij0AAFe8AICwPAAAM70AQMc8AGA3PQCAZr0AwMK8AMAOvQAAoLkAwKc8AEBDvQBAsDwAwDK9AIByvAAAFzwA4Ee9AIDAvAAA9LwAADy7AKALPgAAA70AgF68AAAcuwCAAz0AwE+9AOAmPQDAqLwAgF+9AOA/PQAAA7wAgLq8AMAvvQBAaD0AgDu8AMCAPACAKL0AAME8AAClvQCABjwAYD49ALCKvQDgAb0AQGa9AGBavQBACT0AADK7AECOPABgmL0AANM7AACcuwBgab0AALo8AMDovACAdz0AAIa8AABRPACQyL0AcIa9AGB5vQAAm7wA8Ik9AAAGuwAAbz0AwA49AIABPQBQjr0AIBM9AADKuwCgk70AQMs8AAAJPABAu7wAgEG8AAAlvQCACTwAIFw9AHCPvQCAqTwAYGE9AAAhvAAAbDsAwFM9AABGPABArDwAADU9AEDePABABj0AAMW8AJC9vQAA9rwAkA2+AGBRvQDwlj0AoEM9ANCBvQCAfrwAsLG9AMCmPABAJD0AAFq8AACIuwAA8TsAgCQ9ACBKPQAwyb0AgNI8AGBNPQCA5rwAABM8AADZPADAijwAAOI8AEB0PQBAtD0A4CI9AABsPQDgJL0AACW8AHCqvQBAkbwAAIS7AGBtPQDAgLwAgFY8AACcuwAAaLoAAGQ7AMCQvQAA5LsAILq9AIBAPACAar0AACa8AAATvAAAM70AkKQ9AEDlPAAAuDsAgDi8AAD9PAAAHT0AwMg9AIBkPQAAoLkAgI09AMANvQCAvTwAQPg8AEC7PADA6DwAgFi8AEDsvAAAKTwAAM08AAB3PQCAVjwAgAu8AGADvQBAgrwAwEW9AFDBvQAAt7sAgEo9AIAbvADABD0AwKy8AHCFPQAAxjsAAIi9AIAKPQAAcDwAgCA9AADXOwAA0LsAAGA8AECivAAgKz0AQP08ACA9vQCACT4AwI88AIDePACAyDwAgLm8AAAyuwCgI70AoDM9AICdvQAAUD0AAHQ8ALCQvQAASrsA8JG9AOAFvQCgSL0AgF+8AIDGPADAp7wAwIG8AADquwCgdT0AoJ09AIAxvQAgCr0AADc8AOBdvQDgSL0AANA6AAC8ugBAlrwAYHG9AIAAvQAAw70AwBQ9AABHvACAiLwA4AM9AACYPAAAA7wAALu7AMCGPQAA5bwAADA7AGByPQAAZjwAAOk9AIClPABAeT0=","chunkHash":"4a6e3fabcbf5e9ef30d5cfe88e833d0ab38b1b97b92ba7e5601dc0fd343fe782"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n                     col*highres_width:(col+1)*highres_width] = slice_img\n            count += 1\n    \n    ax5.imshow(grid_img, cmap='gray', vmin=0, vmax=1)\n    ax5.set_title(f\"Multiple High-Resolution Cubes\\nShowing {min(6, len(highres_views) * 2)} slices from different cubes\")\n    \n    # 6. Add text description with statistics\n    ax6 = fig.add_subplot(2, 3, 6)\n    ax6.axis('off')\n    \n    # Calculate statistics\n    lowres_volume_size = lowres_depth * lowres_height * lowres_width\n    highres_cube_size = highres_depth * highres_height * highres_width\n    \n    # Ratio of resolutions\n    resolution_ratio_xy = 80 / 20  # 80nm vs 20nm \n    resolution_ratio_z = 100 / 25  # 100nm vs 25nm\n    \n    # Number of bytes per volume\n    #...\n```","range":{"startLineNumber":248,"startColumn":0,"endLineNumber":267,"endColumn":0},"embedding":"AAApvACAHb0AQJI8AMAcvQBgN70AQKS8AADIOgCAUb0AAAq8AAACuwAgfj0AQDc9AGARvQAAwrsAAJS6AGA7PQAAhbwAgEo9AKBevQBgXj0AALS7AOBavQCgSz0AgMa8AABvvQAAojwAAO+7AEDyPAAgdz0AAAc9AKAcvQCAS7wAgMC8AKAnvQCwBb4AAFu8AADsvABAAT0AYBw9AAASvADQ5z0AAJy7AACFPAAA7TsAgMA8AABQuwCAQzwAwFu9AOA7PQBgBD0AwJI8ACChPQCADj0AgPi8AACYuwDA/DwAAOG8AOANPQAARDsAQNe8ADCqPQAgAb0AoE09AIBFvAAgYL0AwNc8AADEuwCgNb0A4Hc9AAClvADAmbwAADo9AACBOwBA0zwAwII8AABUOwAANbwAwOg8AACoOgCAsr0AQMe8AKADPQCAUD0AwJw8AADzOwDwhr0AoGS9AMD8vACA37wA4OS9AACkPACAvT0AQBq9AIA5PQAAq7wAIEk9AADCvAAA6rwAgFg8AADsOgCAkDwAgM88AKCDvQBAoDwAcIQ9AHCaPQCgHj0AwAw9AIC/PACgoD0A4Ac9AID6vABA3jwAQKa8AABYOwAgGL0AAIs8AIBcvQAAyLsAAKg8ABC3vQAAxTsAYBc9AIACvQAgWD0AgAK9ACAlPQCAKL0A4Ck9AADougDAFj0AAA88AMDhPABww70A4EC9ADCvvQBA0jwAYFA9AMBBvQCw4z0AAFo7AFCRPQAA9jsAAM07AACsugA4GT4AsL+9AKBJPQBA47wAcJ49AACWuwCA9DwAgM88AICdvQBQmL0A4Fq9ANCZPQAAADgAAPK7AECDvABgfL0AwLa8AACNuwDAhjwAwPG8ACBGPQCgVL0AAMg6AFCtvQDA7bwAAAa9AICCvADgGz0A0K+9AOCaPQAAjLsAAKy8AMCNvADAurwAAMg8AOBTvQCAHrwAAJC8AOACPQCwgL0AIE+9AABmPAAAADoAgG88AEDhPAAA1rsAYIk9AGBQvQCAjzwAAMq8APCTvQAAPz0AQIg8ACB3vQCATTwAgAE8AOCNPQAAtbsAACW8AABbvADQob0A4Ba9AAA6vQAALrsAgHg8AECOvACAnD0AgHg9AADrvAAAVDsAwCm9AEC1vABwuD0AANA6AID1PADAE70AAAk8AOACPQCghj0AgLk8AABRPQDA1zwAoH69AOA+PQAA6DsAgD08AMDFPAAA57sAoIs9AMC8vAAgPL0AwB49AMAwvQAA0DsAQPC8AMDkPABAgjwAgAc8AMCzvABADj0AQK28AECevQCQwr0AgAc8AMCzvACA9zwAIBQ9AHCmvQCw370AwIe8AMDkvAAAZr0AgPg8AOALvQDAibwAAAK7AAAIOgBwir0AgI28AAC5OwCggD0AwBA9AGBfPQBwvL0A4C29AMDmPABAszwAIHI9AOAsPQAAoLkAQIU8AABvPADABj0AAGy7AGArvQDAl7wAADi6AIBLPADAqj0AAK67AAAzPABAUb0AgIg8AAApPQDgm70AgKM8AAApvQAAZLsAgJI8AEBhvQBAgzwAgNW8AAAeuwCAVLwAgBu9ACANvQAA47wAALA6ABAGPgAAOL0AAJM7AIADPACAGD0AAKy8AMAhPQAAUrwAABW9AGA4PQAAdLwAwP28AGBEvQAART0AADC7AIAIPQBAwbwA4CY9AJDCvQDACD0AQBA9ANCGvQAAQ7wAYGK9ACAvvQDA0TwAgES8AMAjPQDAXr0AAPi6AMDUPABAsrwAAIg8AEDovACAgT0AQNO8AADnPADwvb0AQP+8AFCtvQCgE70AIH49AIBJPADwuT0AgNk8AIC4PAAgnr0AgHA9AECmPAAAfb0AgC89AABiPAAABb0AAIK8AMD8vACADjwA4Hk9AMAIvQBgDj0AMLY9AADnuwCAAbwAIAI9AABIPACATzwAQCs9AMAxPQAgCz0AANw6AJC4vQDA27wAkP69AAAuvQAQgz0AwII9AJC0vQAAobsAAOi8AADyOwBAlDwAAEY8AICZvAAAwDoAIHc9AKBQPQDQnL0AgLk8ACBkPQAAarwAgMU8AADcPAAACD0AYFI9AGBJPQCAnD0AwBM9AABBPQDgBb0AAHK7AMB/vQAAIDwAgA28AKDFPQAATjsAgNA8AIAMPAAAazwAgC88AACYvQBAwrwA4K29AMCpPADAb70AoAK9AAAIuwBADL0AoJs9AACjuwCAqjwAAOa7AAAEuwDgUz0AoO09AKBJPQAAybsAYJQ9AOAwvQAAWTwA4C49AGArPQBA7TwAwMy8AABvvQCAKLwAYEI9AABnPQAAXLsAwJ68AAAsvACAprwAoHG9AGCkvQCAajwAoHw9AICfvADgGT0AgJ68AEA1PQCAC7wAsLe9AGA7PQAAqLsAoCA9AID1PACAIjwAwLg8AMDPvABAozwAANg7AEAJvQBgAz4AAKk7AADhuwAAILwAANK7AABLvABAgr0AYGY9AEDjvQAgdD0AAPA7AIBjvQCAQLwA4D+9ACBkvQDgVb0AAH67AMDmPACAsLwAADa7AEC8PABArTwAgJE9AMDkvADAO70AgDc8AAAOvQCAWr0AgFo8AICVPAAAl7wAwD+9AMDwvABQwL0AwLs8AACwvADA07wAYBQ9AMDePACABjwAAPS7AEBUPQCA/bwAAIY7AMDIPAAAazwAELo9AEAnPQBAujw=","chunkHash":"f16a23d895b8f3821d16e54af6b87e2fd1827d7935895c3a0717fc72fd716d29"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n    lowres_bytes = lowres_volume_size * 4  # 4 bytes per float32\n    highres_bytes = highres_cube_size * 4  # 4 bytes per float32\n    \n    description = [\n        \"COMPARISON OF LOW-RES AND HIGH-RES TEXTURE INPUTS\",\n        \"\",\n        f\"Low-Resolution Volume:\",\n        f\"• Size: {lowres_depth}×{lowres_height}×{lowres_width} = {lowres_volume_size:,} voxels\",\n        f\"• Resolution: 80×80×100nm per voxel\",\n        f\"• Memory: {lowres_bytes/1024/1024:.1f} MB per volume\",\n        f\"• Purpose: Captures medium-scale texture features\",\n        f\"• Processing: Full volume autoencoder with skip connections\",\n        \"\",\n        f\"High-Resolution Cubes:\",\n        #...\n```","range":{"startLineNumber":267,"startColumn":0,"endLineNumber":281,"endColumn":0},"embedding":"AKAkvQAA2bwAAPS7AMB7vQDgUL0AgE68AIByPAAgRb0AgBQ8AAC8ugBADD0AQHU9AAA4vQCAv7wAQJa8AKBgPQCAl7wAYBM9ABCcvQCArTwAAMG7AKCOvQBALj0AwP+8AIA+vAAAQbwAgNO8AICnPAAAdD0AQOQ8AOB2vQCAtrwAgBC8AAAdvQCg3b0AAHy8AMD6vACgCD0AgJE8AGAqvQDAwT0AAJi7AIDhPAAANTwAAE08AAA/PACAGz0AADG9ACAOPQBAzzwAAIi8AFCvPQAAjTsAYCG9AACYvABAxTwAAPC7AICDPAAA1TsAAOK8ABDQPQBAh7wAgPk8AAC9vAAgkL0AQDY9AICjvABA8rwAoIA9AACNOwAAdDsAAFY9AIBsvACAPTwAwKk8AAAsPAAAf7wAAKM8AAAgOgBg0L0A4B29AMAiPQAAND0AANm7AABcPADgaL0AgEm9AIBOvQBgAb0A8Lm9AECoPABwyj0AoAm9ACAjPQAAxDsAQBQ9AOBNvQBA3rwAgMM8AAADPABAjTwA4AQ9AMCPvQAAibwAAII9AGBuPQBAAj0AADQ8AADwOwCAaD0AQN88AAClvACAvDwAAJO8AIBoPACwgb0AAB28AGA1vQCAMzwAgEa8AEDevQAAhzsA4D49AABAvQBgTD0AgI68AEBVPQBgTr0AoFM9AAAQvACA3zwAgDK8AAApvADQu70AQMu8AHDovQAApLoA4HE9AADVvAAQ4D0AAHu8ADCOPQCAu7wAAFk8AACzuwBYBz4A0KK9AEAjPQAAZbwAwIc9AIByvAAgQT0AwNc8AIBgvQBQlb0AMIK9AACMPQAA4DkAAN+8AACcvADAGr0AwLS8AOAuPQAAYrsAgHa8AADOPAAAEr0AANG7ADCHvQBgJ70AgBS9AIAmPAAAoDwA8Ku9ACCxPQAANbwAALS6AAB3vAAAy7wAgIM8AAAqvQAAmbwAALg6AIAEPQDAYb0AQDG9AMA2PQDA4zwAgBk8AABsuwAAXTwAgC89AICFvAAAyjsAAGu8ALCsvQDQkj0AAAW8AIByvQAAajsAgEC8ACCvPQAABDsAgFq8AABXvACwgr0AABC9AJC8vQAAI7wAABg9AAAGuwBwqj0AYC49AMAtvQBAuzwAYAG9AAAqvAAgvz0AQIG8AADougDgAr0AwBg9AAArPQBgVT0AAIi6AOBsPQDAqDwAQKG9AOAmPQCAiLwAgEA8AKAePQAAh7wAsIY9AAATPABgcL0A4Dg9AEC4vAAAHjwAAI28AADEugCA/zwAQKY8AIB/vAAALT0AAJQ7AICivQAQ170AAEc8AKAovQCA2DwAwEQ9ABCYvQBwwb0AAMC7AIAOvACgKr0AAIU8ACACvQCAc7wAwOU8AICcPAAQj70AAIU8AMCCPABgXD0A4Bs9AKAePQBgxb0AwNC8AIBnPQBgIT0AwI49AADXPACAZrwAAAs8AADPOwAA7jsAAIg8AIBrvABACL0AAI47AICDPAAgpj0AgBW8AADhOwBA8rwAwKc8AECtPACgNr0AABA6AABSvQCAFzwAAO48AOB6vQAA5DsAAOy7AIBHvAAAlzsAQNi8AICVvACgdr0AALy7AIgDPgBgI70AgIQ8AABouwDgAD0AgEW8AIAcPQCAaLwAwCy9AMCDPQAAYLwAwJu8AAC5vACgKT0AgJ28AIByPABA0rwAALo7AHgEvgBA/zwAQDc9AGAivQCAEDwAEIy9AMDEvAAA3DwAAJA8AACrOwCgm70AAFY7AIBqPAAgC70AYDM9ACA+vQAgdj0AgBC8AGBAPQDg2r0AANq8AGCXvQDAg7wA8JI9AACiOwAwiz0AoCk9AEBZPQBgLr0AgGc9AEACPQAgWr0AAIc8AACYOwCgQL0AAG28AGApvQAAYjsAQC09AEDTvADAsDwAkLg9AMCmvACAebwAACA5AAC9uwAA/jwAwOk8AIB4vAAgNT0AgGC8ANDdvQDA7bwAQAO+AEASvQDwmj0AYDI9AIDHvQAAjzwAAGy9AGA6PQAAtjwAgHY8AMCjvACAczwAEJA9AIBqPABwgb0AAOC7AJCCPQAAH70AANe7AKB6PQCA6jwAYIY9AAAMPQDQyT0AwB09AAAqPQAAYrwAgKU8AMB9vQAAOTwAAI67ACDMPQAAZDwAQJ88AADJPABAljwAwPQ8APCSvQCAGb0AYLe9AAAgugAgT70AAN07AAAwugBgC70AgI49AIANPACAWjwAAFi8AAAJPQAgcz0AgPI9AIB4PQBACr0AkIE9AABovAAAUjwAYAI9AEALPQCgUj0AAJA5AGBbvQBApbwAoCY9AEAfPQAAxjsAAMu8AACVvAAA3DoAQCi9ACDcvQAA7jsAwCk9ACATvQAgDj0AwIq8AOBnPQAAWjwAcOO9AEAQPQCAMjwAoEY9AADjPACAhDwAICg9AMCvvACAJz0AAFi7ACBFvQCQ4z0AAG47AAA1vAAAlTsAAMK7AIBjvAAgib0A4C49ACC/vQCgJD0AQJA8AIAuvQAA2LoAAI68AMDevAAgRr0AAEA7AMAoPQDA2bwAgPO8AIASPACAfDwAANo9AGBbvQDA1LwAgFC8AGAPvQBgZb0AAKS6AACiPAAAmrwAIAG9AOBIvQCwl70AQOI8AEC9PAAgLb0AAKE8AECaPABA5DwAAKU7AAC2PQDAsLwAQIE8AMAjPQAAQ7wAwIQ9AKA3PQAAkDw=","chunkHash":"6f8318e9bed619d5c3f6f09d147796e658dd5fb9128e0d5c7cdf0a8c35282c2e"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n        f\"• Size: {highres_depth}×{highres_height}×{highres_width} = {highres_cube_size:,} voxels per cube\",\n        f\"• Resolution: 20×20×25nm per voxel ({resolution_ratio_xy}× higher in XY, {resolution_ratio_z}× in Z)\",\n        f\"• Memory: {highres_bytes/1024:.1f} KB per cube\",\n        f\"• Cubes Per Volume: Up to {total_cubes} cubes (theoretical maximum)\",\n        f\"• Typical Use: {6-12} cubes per sample after filtering\",\n        f\"• Purpose: Captures organelle-scale ultrastructure (mitochondrial cristae, ER sheets, chromatin granularity)\",\n        f\"• Processing: Contrastive learning on cube pairs with data augmentation\",\n        \"\",\n        f\"In the paper, High-Res branch is crucial for discriminating:\",\n        f\"• Mid-gut vs. secretory cells\",\n        #...\n```","range":{"startLineNumber":281,"startColumn":0,"endLineNumber":291,"endColumn":0},"embedding":"AKBGvQBAwrwAgKI8AEC/vADA07wAQIG8AIBGPABgHL0AgOC8AADIuwCgcD0AwDM9AIDFvADAEL0AQJS8AOBGPQAgBL0AgNs8ACBvvQCAEj0AgDc8AOBqvQCgTj0AgDG9AAD4vACAVbwAACC6AMAWPQBwnj0AAFg8ALCHvQCA07wAwNe8AAARvQD4E74AAG48AMDfvAAAPj0AAMo7AACEOgDw3D0AwN68AMCyPABA7DwAAJA5AABIugAAfDsAIFq9AIDGPABA7TwAAMC7AIDHPQCAMbwAgEa8AICLvAAAzTwAAAY8AIBLPACAFrwAwKq8APC2PQBAK70A4BY9AAA/vADghb0AQDc9AIC+vAAgEb0AQHw9AAAQOwAAfjsAYFM9AOALvQAAgzsAYBc9AADYugAA4rsAAFI9AABouwDww70AgHm8AMCtPAAwgz0AAB+8AKADPQBwhL0AIFq9AIBSvQAAIb0AYMy9AEC2PACwoD0AQGK9AGAQPQAACLwAgEc9AABKvQCgE70AQL88AMC5PAAAxTwAwI48APCXvQBAwLwAoIQ9ACB/PQDAEz0AAAK7AAB5vABAeD0A4Hg9AIC3vADAkzwAgJy8AAC+uwCATb0AgA68AID1vAAAeLoAAKq7AJC6vQBAgDwAoDU9AIDKvAAAiT0AwMq8AOCdPQCAdbwAIBI9AACMvACAqjwAAIc8AIADvAAQrb0A4BC9AHDIvQAAubsAwIQ9AIBWvQDgtD0AADc8AGBpPQAAp7sAAAQ8AACnOwB4ET4AsKu9AHCCPQAgIr0A4Kg9AIBqvAAAnDwAIBo9AABSvQCgeb0AkJK9ACB0PQCAQjwAwOa8AACXvADgGr0AgI28AIBwPAAA0DoAgBi8AGBHPQAAdL0AAIy7ANCmvQAA37wAQOi8AIC8vAAAGj0AYFm9AHCLPQCAHLwAwOy8AICVvADgPL0AQK88AABqvQDAjrwAAHm8AKAiPQCAcL0A4Ei9AEC1PAAA+TsAADg6AABkPAAAbrsAgHY9ACAlvQAA1DoAQNe8ACCPvQCArj0AgMC8AABAvQAAHrsAwIC8ANCjPQAAlbsAQLm8AAAougBgwr0AAIm8ABCLvQDAhzwAwIw8AABYOgDwnD0AQBk9AIDYvAAAHDwAACC9AACpvAAgrD0AAIe8AACzOwDArrwAQBE9AEB5PQDAlD0AwJe8AKBhPQAA0TwAsKi9AADlPACALLwAgAU8AMClPACADb0AgFo9AAAwvAAgKr0AYAY9AKAhvQDAiTwAIDm9AECbPABAAz0AwJc8AACSuwDAaT0AAOe7ADCzvQDwu70AAK48AMCavADAkDwAAFU9AIBovQAA9r0AQOO8AIAovAAAK70AQOY8AIBWvQBAn7wAgCk8AICLPACgc70AALC5AABGuwDAWz0AAI08AIB5PQBwr70AgPW8AGBPPQDA5DwAQH09AABRPADAiLwAgC88AACIvAAAtTwAAJI7AIABvQAgKr0AQOY8AABSPACAdj0AANK7AMChPACAPb0AgB08AMCPPABACL0AAEi6ACAlvQAAkLsAANI7AECgvQAARbwAgLy8AIBWPABAkLwAgCS9AAACPAAA47wAAM48APDhPQAA6rwAgAg9AAAcOwCADD0AAHC7AMBcPQBABb0A4B29AGBqPQCAR7wAwOe8AKBmvQCAAD0AQMK8ACAJPQDAqrwAQJo8AJDlvQCApDwAAHY9AMB3vQAAdzwAoFi9AAB+vAAgED0AAHI7AIB2PACgfr0AAAY7AAAwPAAAybwAgGo8AOAgvQBwtj0AAO67ACBcPQAA0r0AwFe9ANChvQDAmbwAsIQ9AOAmPQAAhj0AgOI8AEAkPQBgcr0AwPo8AIDiPABgdb0AAGo8AECsPAAAZ70AgKy8AOBlvQDAiDwAYE49AMDRvABA1DwA4MQ9AAAovACAVTwAQAE9AIAhvABgBT0AoAQ9AIBsvACAmDwAwLC8AOCfvQCgAb0AYAe+AIBFvQAQkT0AQGY9AICKvQAAHDwAQLa8AADnPACA9jwAAEU8AAASvACAGTwAwFo9AECxPAAgvr0AAIQ7AAAwPQAAfrwAAKI8AMAsPQBABT0AII09AEAbPQAguT0AwDw9AIBJPQAA6LwAgEU8AGB3vQBAoTwAAKU7AJCqPQDAwjwAAC08AIAgPAAgBL0AgJw8ANCpvQBAyrwAoKe9AABMOwDQo70AgBK9AIAiPACgC70AoJs9AAB1PADAh7wAgOK8AADePAAgQz0AsP09AICBPQCAx7wAoGc9AMAMvQAAYLoAQLg8AEAtPQCA8jwAAFq8AKCTvQAAerwAoE89AAAnPQAAN7wAwNu8AICovAAAeLsAICy9AKDIvQAAnDwAwF89ACA7vQBAXj0AgBu8AOBfPQAAVLwAUNq9AOATPQAAMzwAQIw8AIDvPACAEDwAoHQ9AIAmvADAOz0AABK7AMC3vACA6z0AAFg8AIANPAAAEjsAAIm8AACbuwCAf70A4C89ADC9vQAgBD0AAAE9AMD7vADAQb0AAE+8AICfvAAA77wAAAM9AGAaPQAA3rwAAAO8AIDCPACAXzwA0M89AOBHvQDANr0AAOi6AMDbvACA6LwAAPC6AAB1PACAp7wAwNS8AMCtvACAd70AADc8AIAfvACAE70AYCs9AIBDPAAA5DwAAIS7ANCaPQDAMb0AAB67AIBZPQCA1jwAkKU9AGAYPQAAkjw=","chunkHash":"4b351644072378a9c7f04608bb930b1100130f5873a298b64c8707b45f910577"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\n        f\"• Rhabdomeric photoreceptors\",\n        f\"• Chromatin-rich muscles\",\n        f\"• Other fine ultrastructural details invisible at lower resolution\"\n    ]\n    \n    ax6.text(0, 1, '\\n'.join(description), va='top', ha='left', fontsize=10, linespacing=1.5)\n    \n    plt.tight_layout()\n    plt.subplots_adjust(hspace=0.4, wspace=0.3)\n    \n    # Add overall title\n    fig.suptitle(\"MorphoFeatures: Low-Resolution vs. High-Resolution Texture Inputs\", fontsize=16, y=0.98)\n    \n    # Save if output path provided\n    if output_path:\n        plt.savefig(output_path)\n        print(f\"Patch comparison visualization saved to {output_path}\")\n    \n    # Show if requested\n    if show:\n        plt.show()\n    else:\n        plt.close()\n        \n    return fig\n#...\n```","range":{"startLineNumber":291,"startColumn":0,"endLineNumber":315,"endColumn":14},"embedding":"AMCcvAAAm7sAAHQ7AMBPvQDgBL0AQPK8AADOOwAArrwAAMC4AMCOvABATz0AgIY9AABHvQDAibwAAEq7AAC5PACAMzwAgOI8AIALvQDQoT0AAJE8AFCwvQDgFT0AgCG9AMBUvQAATrwAICS9AEAUPQDwmD0A0JE9AOBHvQAAAb0AAIO7AABHvQDgB74AAEk8AABbPADAoDwAgAi8AAD1uwDA4T0A4Bi9AIA6PQCAnDwAAOU7AIAyPACAZD0AoDu9AGAmPQCAUDwAABS7AKBdPQDAnDwAAE48AIC5vAAAZT0AQLA8AAC/PACAFLwAAIS7APC0PQAAr7wAoFU9AEBLvQDQm70AwFo9AJCKvQAgJb0AAIs9AIA2PAAAYDsAAOS6AECsvAAAiTwAgHQ8AABEOwAACL0AIB49AAAYOwBwqb0AABW8ACA5PQCAKT0AgDS8AACoOgBQjr0AwDe9AIDIvADAYr0AgLO9ACBZPQAgxD0AwFq9AIDxPAAA9LoAwF89AJDAvQCAdrwAgHc8AADePABAOD0AAN87ANC6vQDA1bwAgFI9AKA+PQDAlTwA4Co9AABaOwAwjT0AwIQ9AIANvQBAJT0AAOi7AICEPAAQj70AAHK7AAD8vACAoDwAABu8AJCmvQAAxzsAgAo9AIALvQAwmT0AANu7AKBCPQAA17wAAEw7AKAKvQCgbz0AgD48AIAOPAAAjL0AAFm9ANCgvQCALzwAgIg9AIBFvQBQsD0AAEw8ACBMPQAAO7wAAH48AIBDPABQ/z0AwJe9ACBEPQAAF70AkMA9AAARvABA3zwAYGI9AID3vACAmr0AYJW9AOCWPQAAODsAwHS9AIApPQAAo7sAQKO8AMDQPAAADTwAwKC8ACAEPQCgc70AAH67AKCYvQAAEb0AQFK9AAABvQAgJT0AgGO9AEBdPQAA0DkAQMW8AACIuwBgTb0AgKI8AICZvADAl7wAgCQ8AKBlPQCALL0AkKq9AACuOwAApjwAwK68AIBJPAAA6TsAQA49AEAivQBA3LwAAIO8ADCBvQAgjT0AAPC5AMAZvQAAKTwAAJK8AFDOPQAAdjsAAMI7AADHvAAgXr0AICC9AABQvQAAnbsAwMo8AAAEOwCQnz0AwLA8AECovACAZDwAYBK9AABYPABgvj0AAA48AACouwBAxbwAgFe8AIBJPQCwoD0AgIQ8AKBhPQBgIT0AUMK9AACrPAAAerwAgA49AMD6PAAA9bwAIFk9AACSvADA+rwA4DU9AICevABgDD0AgFG9AAA8OwAAKzwAABg6AMCIPACghT0A4Am9AGCNvQDQvr0AgCy8AGAMvQDgeT0AQGw9AOByvQBAxL0AgDC8AACjPAAAer0AQLo8ANC/vQBAq7wAABS8AAAXPQDgS70AgIg8AMCuPAAAQTwAIAE9AGBTPQAwrL0AgGi8AEAhPQCgND0AYDs9AIC1PAAgHr0AgFY8AABIOwBAyTwAgBu8AABwvAAAX7wAICA9AACnOwCQjD0AQBW9AACUOwDAJr0A4BG9AMCKPACA3rwAAIO7AIAhvQAAPDwAANy7AHCRvQAATDsAAKY7AADQPAAAAAAAYB+9AADUvAAAaL0AAI48AMDTPQCAqbwAYBA9AADuOwBAgTwAACg6AAAXPQDAxLwAkIa9AMBXPQCAuLwAwPe8AICavAAA+DwAALG7AAAKPACAV7wAAEY8AADZvQAA0TwAACU9AJCSvQAAKLsAwF69AOBmvQCgBD0AoBM9AEDDPABgub0AAFS7AABIuwBgFr0AgHA9AEBcvQCgyj0AAF47AAAcPQDg7r0AwC29AOCKvQAgGb0A4HA9AADOOwCwnj0A4DU9AEDMPABgA70AwDU9AABPPQAgKr0A4Cc9AADBuwBAUr0AAIa8AIAkvQCAIzwA4EQ9ACAUvQCA/jwAIFk9AAABvQAAwDoA4Bs9AIA/vADAwzwAoA49AACTuwBAsDwAgOW8AJCxvQAAw7sAcN69AIDWvACAPT0AAP08AJCnvQAAa7wAUIG9AOARPQDgiD0AgEi8AAD+uwAAmLoAwGI9AIBPPABgmr0AwP48ACAqPQDAAb0AALc7AMACPQAAR7wAYGk9AADwOgBQ3T0AYGk9AABGPQAA4LwAAGS8AHCJvQAA+zwAAHS7AECxPQAAzbsAANO7AAAAuwAAUjsAAN88AIBSvQAA57wAkIu9AACiuwBAMr0AAM27AIBtvADgG70A4Fg9AACYPABAmbwAgBa8AAANPQAAHj0AIAA+AGB6PQBAq7wAEIA9AABguwAApzsAANc7AAAOPADwhT0AwPS8AOCBvQAAlrsAwDs9AEAtPQAgLL0AAC68AEDgvAAAmbsAwEC9ABC2vQDAZD0AoBw9AIC6vAAAWTwAAIC4AAAhPQCAgTwAQNO9AIDSPACgMD0A0I89AKAAPQAA87sAsIM9ACAqvQBAij0AAE68AABQvAAYBj4AAH+8AAAgPACABrwAgOe8AMCtPAAwlb0AAEk9AKCovQAAUT0AACQ8ACAavQCAQ7wAACa7AIDKvAAA9rwAALw6AKBsPQBAlbwAALO7AAAsvAAA2zsAQJI9AMCZvABA6LwAQKm8AIDWvAAASLwAAPS6AAAKPABArLwAYCi9AGAbvQAQhL0AAPQ6AABWuwAALL0AAKE8AIB+PABANT0AAAW8AOCXPQDAHL0AgAM9AMCBPQAAMjwAgKQ9AEDtPABgIj0=","chunkHash":"7bb28603017d9d98ec3b2ddc1ead12c9378a7459545c1c542b410edf9dfd5e70"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Visualize the relationship between lowres and highres patches\")\n    parser.add_argument(\"--output_dir\", type=str, default=\"visualizations\", help=\"Directory to save visualizations\")\n    parser.add_argument(\"--sample_id\", type=str, help=\"Sample ID to visualize\")\n    parser.add_argument(\"--no_show\", action=\"store_true\", help=\"Don't show plots, just save them\")\n    args = parser.parse_args()\n    \n    # Create output directory if needed\n    if args.output_dir:\n        os.makedirs(args.output_dir, exist_ok=True)\n    \n    # Get lowres batch\n    lowres_dataloader = get_morphofeatures_texture_dataloader(\n        root_dir=\"data\",\n        batch_size=1,\n        class_csv_path=\"chromatin_classes_and_samples.csv\",\n        sample_ids=[args.sample_id] if args.sample_id else None,\n        num_workers=0,\n        debug=False\n    )\n    \n    # Get highres batch\n    highres_dataloader = get_morphofeatures_highres_texture_dataloader(\n        root_dir=\"data\",\n        #...\n```","range":{"startLineNumber":318,"startColumn":0,"endLineNumber":341,"endColumn":0},"embedding":"AOAXvQCAgLwAgBQ9ACAjvQDA8LwAgMi8AABsOwAALr0AAMy7AAAoOwAAUjsA4Eo9AAA/vABgSr0AgHi8AMBkPQBAhTwAQBQ9AMATvQCAeD0AwKA8AGA9vQBApTwAwAy9AMC6vABgAL0AIA29ACCfPQDggj0AgN08AEAovQCAgLwAANm8AACKvAAQyr0AAGm8AABIOwBA+DwAACO8AMDXvAAQ2j0AwBa9AADPPADAzTwAALi6AADnuwDgfj0AwCW9ADCDPQAAB7wAwE+9AGAdPQAA0DoAgAG9AIDvPAAAMD0AABA7AMCbPABgAL0AIEK9AFC5PQAA+rsAYBM9AIBLvAAwmr0AgDA9AGAGvQAALr0AYBA9AACiPADA1jwAoBI9AACyuwAAt7wAAFc9AIBsPACAUbwAIAk9AICevACQmL0AAJQ6AOCNPQDAHj0AAOc7AIA5PACA070AAMi8AABvvAAACjsAsL69AEChPQAQ6j0AABy9AABjPADAhzwAgJE8AIB9vQCgWb0AYBU9AOA+PQBAGD0AQKA8AICYvQAA/rwAID49AEC8PADgAj0AQOA8AMCQPABwlz0AgJg8AOAWvQBgZD0A4Ae9AMAZPQBgc70AwKW8AGAavQAAizwA4Cm9AHDovQAAPTwAoAI9AMCBvABAWj0AACS7AMAwPQCgT70AwLY8AAByuwBgOj0AALE8AMC7PABwqL0AwO28ALgAvgCAhzwAwPI8AAAyOwAA6z0AAJs8ACBCPQCAJr0AYEM9AECnvABgyj0A4Eq9ACBnPQDACL0AEMQ9AEC7vAAA2DoAIG49AMBPvQDQir0A0Ii9AABoPQAAersAgDa9AAA9vABgEr0AAP+7ACAlPQDA4zwAQDW9AIC+PACgK70AgIu8AGCXvQBgJr0AwBW9AAB0OwDgSj0AwHy9AACPPQCAgbwAQOi8AECBPAAAfbwAABw8ACAZvQDA1rwAAFe8AADzPAAgXb0AABu9AIADvAAgaD0AgAu9AAD7OwCAezwAUJQ9AADcvACAvLwAgBW8AAAhvQCQkD0AwK88AKBpvQAgCT0AwOm8AMCHPQAAxTwAAA+8ACAlvQCAcr0AwJO8AMA8vQDAnjwAgDg8AIAmvADgbD0AgBY8AIBQPADAUz0AoHy9AIA2vADwsz0AACU8AEDsvAAAZLsAQPC8AGBdPQAgpT0AABE9AIBGPQCAMj0AwJ+9AIDxPADAyTwAADS7ACBPPQCAR7wAwKg9AICkPADAEr0AwB49AIAEvQBApzwAgAa9AIBevACAfjwAAKu8AMCjvAAAKz0AQJC8AMCWvQBAlL0AQKk8AIA3vQAgdD0AoHE9AKCwvQBwy70A4AS9AIAtvACAAb0AACI7AGCXvQAAiDsAAHY8AGAkPQBAZr0AgDA8AEAKPQDAxzwAAAi6AAA7PQDw370AAIe8AADwPADgOz0AQHg9AAA6OwAAeLsAQI+8AACePABAoTwAgBc9AOBPvQDgCL0AANi6AIAqPACAmj0AgIE8AECGPACgCr0AgNs8AIDXPABAB70AgAO8AMC7vAAAjDsAAPS8AOA7vQAALTwAgA69AACYOwAAiDsAgCC9AIBYvAAAQb0AAJE7ACDePQAAzzwAgAs8AACXOwAA4DoAwMO8AKA6PQBABL0AUJC9AEBjPQAAyrwAAIy6AACXOwDAGj0AAIi6AIA7PACA+bwAQCe9ADDTvQAAnjwAYC49AHCyvQAA8DoAABC9AMCZvQCAITwAQB89AAAUPAAws70AAD68AGA9PQDAxrwAoG09AAB+OwBAID0AAJC6ACA8PQAADL4AQK28ADCzvQBAh7wAwHs9AADQPAAAfj0AgDc9AAAAPQAgMr0AQPQ8AECtPAAAtb0AgOQ8AEDjvACAybwAAO+7AKBzvQDAxTwAgG48AMDyvAAgCD0AgD09AADGvAAA1jsAQFE9ACADvQDAGj0AIGI9AIA+vADgGD0AwLu8AKDGvQDA47wAkPG9ACA/vQBAMD0AQFI9AGBXvQAAOT0AIKW9AMAlPQBA/TwAgA+8AABAuQAAuDoAwF89AABMuwAgzr0AANS6AMCLPQBAc70AQKU8AAA/PQAAADsAgNQ8AMDCPABw5T0A4DI9AKCLPQDAQr0AgEa8AEC0vQAAujsAAOw8AMC/PQDAirwAAE67AIDvPACAFzwAIBA9AKB5vQCAu7wAsMS9AIBFvABAT70AYA69AAAkPAAgT70AoGI9AIC9PAAAPz0AAFq8AMCyPACgGT0AKAQ+AKCUPQCAYzwAYDU9AAAAOwAAPrwAIBo9AEDcPADAYD0AAKW7AIABvQAAhzwAIGg9AMBlPQCANL0AQJk8AACUvACAKzwAADA6ACDSvQAAibwAgDw9AABcvQBAmzwAgJK8AMALPQAAnLsA4Ii9AEAHPQCAIz0AIAI9AMC5vACAWrwAEIo9AIAIvADABj0AAE08AED7vABwyD0AgAW9AAAKPQBApbwAQOy8AADOuwBAhr0AQHk9AAB/vQAgJz0AwPA8AIAivQCARbwAgEG8AMAAvQBACL0AAP68AEDrPACAT7wAAOy8AIDMPADA5jwAgMY9AGBwvQAAC7wAABy7AEDlvAAAM70AAPA5AEDsPACAkbwA4D+9AAAgvQDgLr0AgK88AICdPAAA3LwAQLw8AIBvPADgSz0AgLA8AGBePQBAAr0AYCs9AGAEPQBAkbwAAGs9AAAkOwAgbT0=","chunkHash":"d88aa42ee27a25ab3430bad26e8391bee9b834ddb3ad36c7003c504115f7dbeb"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\n#...\ndef main():\n    #...\n        batch_size=1,\n        class_csv_path=\"chromatin_classes_and_samples.csv\",\n        sample_ids=[args.sample_id] if args.sample_id else None,\n        num_workers=0,\n        debug=False\n    )\n    \n    # Get a batch from each\n    for lowres_batch in lowres_dataloader:\n        for highres_batch in highres_dataloader:\n            # Create visualization\n            output_path = os.path.join(args.output_dir, f\"patch_comparison_{args.sample_id or 'random'}.png\") if args.output_dir else None\n            visualize_patch_comparison(lowres_batch, highres_batch, output_path=output_path, show=not args.no_show)\n            break\n        break\n    \n    print(\"Visualization complete!\")\n#...\n```","range":{"startLineNumber":341,"startColumn":0,"endLineNumber":357,"endColumn":36},"embedding":"AIC1vABALL0AQPE8AKAevQAAWL0AoDy9AIDPPABANr0AAIQ7AACYuwDAEj0A4Hw9AIAbPADwrr0AwLi8AEBCPQAAXbwAwJM8AEDNvABAbz0AAEg8AAD2vADgCz0AAHW8AEBYvQDAgLwA4BS9ABChPQAAyzwAAFG8AMCvvABAkrwAAPS8AAC6vACA8L0AQKE8AABUPACAtjwAAHi6AADAOQAQxD0AwFK9ACA5PQDgHz0AgCk8AEDFPABgLj0AgEq8AGB/PQAAdrsAgN68ADCiPQCAFTwAgGS8AAAPPACgTT0AIDO9AIArPQAAqrsAAGm9ABCmPQDAwjwAYCo9AAB8PAAwo70AgOo8AACPvABA/LwAgP88AIBQvAAAtzsAALo8AEAYvQAAoLkAAOw8AACSOwDAnLwAwMg8AAAeOwCgIr0AAEQ8AGDBPQAAeT0AQNA8AAARPAAQz70AQDq9AKAOvQCAd7wAELG9AGAdPQAg/T0AgHu9AFCNPQDACT0AQE89ANCPvQBgVr0AwGQ9AGBnPQBgBT0AAL08AACNvQAABbwAQCQ9AAAgPABA0zwAwLw8AEAYvQAwtD0AAOs8AEANvQAgOj0AAGW9AEDmPAAgWL0AAAk9AEBtvQAAxjwA4Ai9AND0vQAA0LoAwKc8AEDdvABAmDwAALS7AKApPQCAPb0AwFQ9AMCsPADA3jwAAIg6AACtvACAOr0AADA6ACD7vQAA3DoAAG89AEDHvACAxz0AwJE8AKCAPQBAxrwAgE88AAAXvADwtT0AIGe9AIBBPQCgA70AMJQ9AAB9vAAA+DsAsIE9AICBvQAwvr0AoHS9AGATPQAAfzwAwP28AABQvAAAojwAAA47AKAYPQAAAbwAoC29AIDlPABA/rwAwDC9ABCuvQBgdL0AAJw6AEBCvQAgMD0AgPu8AEBAPQBA+rwAgMm8AABOPACA9bwAAK48AEDuvAAAtbwAwB29AAAXPABwjr0AgDe9AEBTPQAA4DkAwN28AACAOQDA7DwAwBY9AMAWvQAAgLsAwNK8AEC0vACAcD0AgO+8ACA6vQCgRj0AgMe8AMCKPQAAd7wAwMG8AACPuwCAgb0AAES8ACBTvQAAWDsAABK7AACmOwBA1zwAACI8AEAOvQDgJj0AoIu9AADwuQDQ1z0AAO87AAAwugBAiDwAAA88AADYOwDQrD0AgEk8ACBlPQDgDz0AgHu9AABbPAAAIjwAgAW8AABGOwAAorwAICc9AMCJPABAYb0AoCM9AOAJvQDApzwAgEi9AABivABATj0AADE8AEAkvQCABT0AAP67AGAhvQAQn70AACA8AMDUvACA9TwAQGI9AIAGvQBg5r0AYEq9AAA+uwCAeLwAAJk8ANCAvQAAJLwAALu7AIACPQBgnr0AQAg9AADCPAAAoTwAIAo9AMAMPQAgPr0AAIG8ACBEPQBgVD0AgC09AAAaOwAAHDwAgAG8AMDcPAAAdD0A4CM9AMCdvQBAt7wAAHM8AADQOgCA2D0AAO47AACAOQAgir0AwPM8AEC1vACA6TwAQNy8AMCrvAAAUDoAgJ68AMAEvQCABz0AADq8AEDJPAAArrwAgEK9AMCXvACgYb0AAKC5AFgTPgAAiDsAwNa8AKAOvQDA4zwAwKY8AEBIPQCgXb0AgDi9AEABPQAAVLsAABU8AECbvAAAajsAwOK8AMALPQAAUL0AwK28APCJvQBAsTwAYNU9APDivQCAvTwAAHK8AIBavQCgJz0AAMA6AIAIPAAQtr0AAKC6AKAdPQAAgLkAQJw8AACOuwDgBz0AgHs8ACBrPQDIE74AALu7AKDQvQAgLL0AgHI9AEClvADgKD0AYL09AADIPAAATr0AQBs9AAD7OwBgwb0AAOY7AIAOvADgP70AAHy8AKCVvQDAFT0AAH48AMCUvAAgPT0AICc9ACAxvQAA3DwAQHc9AEDUvABANr0AUIk9AECtvACAPD0AAJ+7AGCfvQBApLwAYOa9ADCHvQDwlT0AQG09AGBsvQBgIz0A8Jy9AMAmPQAAEj0AgJi8AIB8vADgMj0A4BQ9AADwuQAwo70AAIc7AKCbPQAATL0AgBA8AACpuwAAqLwAQP08AICTPABg5j0AgCU9ACBMPQCApbwAADq8ACBJvQAAS7wAQFk9AICoPQAAgLwAAJY8AMAGPQAAFbwAgD09AIBIvQDAibwAwKG9AADfOwAQh70A8Jm9AIAyPAAA1rwA8Io9AMD7PADA8DwAACw7AKBBPQAAjDsAYOw9AEA+PQCA2bwA0IE9AEDCvAAgHr0AQLk8AAA3PADQiD0AAEq8AIA0vQAAALwAoEE9APCRPQAAgLkAoB29AIAAPAAAH7wAABy8ADC9vQCAI7wAwIa8AADkvAAAhzsAAFi8ADCCPQCA+bwAQJG9AKBMPQDAzTwAQKE8AADWuwBAqrwAgB89AADZOwCgPD0AwEI9AAABvQBg0D0AgNu8AEAaPQBADb0AAEu8AIAIPQBANb0AoGA9AEAOvQBAvjwAgK48AKCQvQCA67wAAEA5AECPvABgX70AAFS9AMAQPQAA2DoAACK8AEDSPACACDwAYLk9ACASvQDAurwAAIk7AKBdvQAgAb0AAC08AACAuwDAgrwAIDW9AIDSvACAjr0AwOw8AIAkPABAFb0AAMC5AACwOgAAdzwAAE28AJCFPQAAlDoAgLI8AMC1PAAgMj0AYFE9AABSvACADj0=","chunkHash":"dad7ed482fb51ca2489a48421e1ab588c57169c2908a05e5172eb2c44af1269b"},{"text":"File: `scripts/temp/visualize_patch_comparison.py`\n```python\nimport os\nimport sys\nimport torch\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom PIL import Image\nimport matplotlib.patches as mpatches\nimport argparse\n\n# Add parent directory to path to allow imports\nsys.path.append(os.path.dirname(os.path.abspath(__file__)))\n\n# Import dataloaders\nfrom dataloader.lowres_texture_adapter import get_morphofeatures_texture_dataloader\nfrom dataloader.highres_texture_adapter import get_morphofeatures_highres_texture_dataloader, extract_cubes\n\ndef extract_highres_cubes_from_lowres(lowres_volume, num_cubes=8):\n    #...\ndef normalize_for_display(image):\n    #...\ndef visualize_patch_comparison(lowres_batch, highres_batch, output_path=None, show=True):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":361,"endColumn":0},"embedding":"AICuvAAAGrsAAGK8AMBdvQAAELoAADG8AADkuwAgAb0AgF68AAD3OwBAMT0AoDY9AAB7vAAgSL0AwJA8AOBwPQDAnLwAgLQ8ADClvQCARj0AAFE8AACCvABA1TwAsIG9AMCWvAAAurwAAFW8AMAGPQAwmj0A4Fk9AIAgvQAA1rsAAG+9AACXuwDwu70AwJW8AMATvQAATT0AAJA7AABcuwDwrz0AsIe9AICFPAAAzLoAAAS7AMCGvADgIj0AwIe9AEB9PQAA77sAAKA8AABePQCAOj0AAFa8AACcugAA+TwAADS7AIB4PABgAD0AgDe8AMBzPQAA7rsAACc9AOAVvQAAPL0AwCo9ACBDvQAgLr0AkIY9AECwPAAA8bwAAOc8AAACuwCgar0AAPk8AAAIPAAACbwAYKE9AKAIPQDwiL0AAKQ6ANCLPQBAYj0A4Fw9AADcOwBgcb0AQKa9AIBzvAAAmrwAwO69AGADPQDwxj0AwAi9AIBGPQAAcjwAgAI9AIA7vQAAKr0AMJo9AAAwugAgBz0AQCA9AMBivQAAWjwAwK49AGBnPQCgHj0AAIA4AADWOwDgyT0AIDc9AIBtvADgZj0AwMG8AIB0PADANb0AABM9AADEvABA4DwAAMm8AIDQvQAA6zsA4CM9AACqvAAAgz0AAII7ACArPQDAEr0AQL88AED2vAAAsDwAAIK7AGATPQCAsb0AgCK9ADDJvQBACz0AwLA8AABpvABA/D0AAOo7AIBOPQDAyLwAoC49ACABvQDQtj0AAGK9AJCZPQCANrwAQLE9AACquwAAWTwA4Fo9ACBTvQDgdL0AUKm9AGBVPQAAHj0AgL68AIBMvACAAb0AgAC8AAAAuQDAOT0AAIq8AJCAPQDAYr0AAIy7AMBKvQBwiL0AADC9AMDnvADA4TwA8Ma9AOCtPQBAurwAIDa9AIAPvADgBr0AgDg8ACByvQDgB70AAOi6AAAWPQBAi70AwJ+8AIB8PAAAAj0AAKI8AAA0PQAApTwA0Ic9AOBtvQAAUzwAAI07AABuvQCQnj0AAJK7AEBPvQAAgDkAACq8AJC8PQAgXT0AgK28AACougDAer0AwE+9AAAovQAAmDwAAIW7AADFuwDARz0AAI48AACmOwDA7DwA4Di9AMDSvACAtT0AAMC4AIB3PACATjwAAAO8AEA2PQBgPz0AgF88AIDMPAAAizwAcMS9AOBHPQAAv7sAwJu8AOBPPQCAoLwAoFo9AACbOwDAGb0AAAA8AABtvACAFjwAAAG8AAD2uwAgVz0AAJ+7AEBXvQBAgDwAAAi7ANCJvQBgJ70AgEm8AOAIvQDgIT0AwM88AOBRvQCgqr0AgA69AMASvQDACr0AwIa8AOBtvQAA8LkAQI88AKAjPQBgYb0AwCm9AABgOwBA+DwAwJy8AIBZPQCgdL0AwMW8AOB5PQAATT0AwF49AICiPAAA+rwAAF67AIAkPAAAwDoAoIM9AGAxvQBA7rwAAJo8AEC2PADwkD0AQOK8AABiOwBA/7wAAI88AADEugCQnb0AALa8AIB9vQBAjbwAAFM8AGAOvQAA9DoAwBa9AIAMPAAAoTsAwB29AIA0vAAAkr0AgDG8AGCiPQAAxrwAAGC8AGAJPQAAEj0AAPm8AMCxPACAS70AIA69AHCRPQBA3rwAAA47AAAYOwCA3jwAAAm8AGAOPQAAdbwAIAS9AMD4vQCAzTwAgEo9AOCVvQBA3jwAIGG9AMBPvQAAnDsAAC88AMDGPABgor0AIBI9AEAjPQAA1DoAgDo9AABAOgBgVD0AQAC9AADsPAAw5L0AIDe9AKBTvQCAzbwAEME9AIA5PADAhz0AoAM9ACBkPQCAy7wAgN08AEAoPQAwiL0AgGU9AMDlvACAPbwAQMi8AKA+vQBAmTwAYAk9AJCGvQAANT0AwEI9AACCvACAJzwAAK08AADaOwAgQD0AADk8AAD7PABAhjwAADq8AFCkvQDA+7wAsPW9AIAMvQAgPD0AQIw8AABcvQAArDwA4FS9AICUvABAXj0A4AQ9AADWvAAA8jsA4MM9AGAyvQBgRb0AACU8AECSPQAAaLwAgGW8AGAYPQCAqDwAAAs8ACASPQAgnT0AQCc9AOBEPQAAIr0AQJY8AGByvQCARTwAQP88AKAFPgCAIj0AgDE9AICnvAAA0zsAAEw9ADDVvQAA9rwAwL+9AMDjPACAm70AQMO8AAD7uwBgZ70AEJE9AACoOwCAIDwAAFE8AECLvADAiDwAQKE9ALCYPQAAnLwAwG09AACavAAAxDoAAI+8AABAPADgdz0AgAM8AMBkvQAAv7wAcMQ9AAAzPQCAajwAgFu8AAAAuQAAsbsAAMK8ANDmvQBAGb0AoAQ9AIDrvACA3jwAAIq8AMA1PQDAqrwAYHG9AMAdPQCA4zwAgAC8AMA1PQCAA70AAAg8AAClvACAED0AACI8AABYugCAsT0AAOQ8AADGPAAAtDoAQNG8AAD9OwAwhr0A4LI9AMBsvQDA9jwAIGw9AIBlvQCgJr0AAMS6AAB3vABAYr0AIFm9AKB4PQCASLwAQLW8AABZPAAAoDsAIPE9AEBTvQAgMT0AAAQ7AIBVvAAAjL0AgDs8AIB4PQAAkbwAIBG9AMA0vQDAj70AwFc9AKAAvQBgPb0AgBI8AADhuwAANzwAANO8AJCXPQAA+7wAACQ7AAA+PAAASDoAQJc9AADBPADAgD0=","chunkHash":"a6f9d7bb4c741fd2a14b7c9237fad375852cd61223831ae2791fa5c003d7d41f"}]},"file:///teamspace/studios/this_studio/scripts/visualize_example.py":{"hash":"4ec281a52497a813033a8b88d9c88d6735135a7d7bd21012e5972765f7c091ed","entries":[{"text":"File: `scripts/visualize_example.py`\n```python\n#...\ndef parse_args():\n    parser = argparse.ArgumentParser(description='Visualize nuclei data from dataloader')\n    parser.add_argument('--data_dir', type=str, default=config.DATA_ROOT, \n                        help='Path to nuclei dataset')\n    parser.add_argument('--class_csv', type=str, default=config.CLASS_CSV_PATH,\n                        help='Path to class CSV file')\n    parser.add_argument('--output_dir', type=str, default=config.VISUALIZATION_OUTPUT_DIR,\n                        help='Directory to save visualizations')\n    parser.add_argument('--mode', type=str, choices=['2d', '3d'], default='2d',\n                        help='Visualization mode: 2d (slices) or 3d (volumes)')\n    parser.add_argument('--class_id', type=int, nargs='+', default=None,\n                        help='Filter by class ID(s). If not specified, all classes will be included.')\n    parser.add_argument('--batch_size', type=int, default=4,\n                        help='Batch size for the dataloader')\n    parser.add_argument('--num_samples', type=int, default=5,\n                        help='Number of samples to visualize')\n    #...\n```","range":{"startLineNumber":18,"startColumn":0,"endLineNumber":33,"endColumn":0},"embedding":"AGA+vQAA3DwAoBM9AHDhvQDgrb0AwO+8AEAhvQCgCr0AAG29AMAIPQCAljwAwP08AMDDPABwjL0AAIC7AMC9PABgRr0AYCY9AGAlvQCArz0AwPo8AMCnPAAA8zwAwIC8AGASvQBgAr0AAGa7AOCiPQCAWzwAcJW9AAAlvQBA77wAALC8AOBJvQCQjb0AwGK9AEDePADgB70AQO08AOAAvQCANj0AwNm9AADwOgDgSz0AAHw8AABTPAAAybwAQGS9AMA2PQAAcLwAAEC7AKAHPQBgFj0AUJc9AMCEvAAAzjsAQIe9AOAHPQAAlDsA4BK9AOAKPQDgTL0AwFc9AMB0PQBACL0AANk8AICYvACgV70AwIC8AACgPADgBT0AgAy8AOA8vQAA37wAoHs9AAAHvACgx70AIBc9AGAOvQAQjr0AAN67AABgPQAAmzsAYEO9AADguQBQnL0A4Au9AAB2uwBAAL0A4Ia9AIAnPABAND0AkJO9AOCHPQDAAT0A4NQ9AAADPAA4Cb4AELc9AADguwBgNj0AoDM9AABVvQDALz0AQB09AMATPQCAVzwAQCg9AACvuwCA2TwAACI7AAAIvACgXT0AUJq9AMDGPAAAs7wAAEw7AKA1vQAA0rsAAAm9AABTvACA3DwAANA8AIAMvQCgQz0AAGO8AMCPvACAMbwAoFY9AEDzPADArrwAgBq8AICgPQAgUb0AwAe9AHCOvQCA9LwAAL07AADQOQCoHj4AgIc8AIB0PQDAAj0AIBs9AAArvADAaz0AoKa9AJCLPQBgEL0AABo9AOAMPQCA/D0AAMk8ACB3vQAAiLwAwK48AMCRPAAA9jwAQNU8AACzuwCAiLwAAGy8AICAvAAABr0AIIS9AKBmPQAA+7sAQKW8ALCJvQDA8rwAoBm9AICIvAAgZj0AAHq8AMCmPQCAKbwAgJY8AECnPAAAUDsAAEq9AIBwvQDgx70AwNW8AEAivQAgpr0AAFg8AIBVPACAirwAABO9AABVPAAAdD0AACU8AABYOwBACD0AwJC8AACxvACgID0AgCC9AADsOwCAEj0AADs8AMCvPABAqzwAIKi9AAAMvQCgJ70AAGA9AADKvADA2TwAQIY8AECqvAAANDwAgFw8ACAwPQDABL0AAHI7AMABvQCAsT0AUJE9AOBuvQBAsLwAAFi7AAB6uwCAbDwAACI7AABsuwDgGj0AgBi9AMCtPABQlD0AgF08AABWOwAA1zwAINE9AMDGPADAU70AANc7AKBtvQAgAr0AgNI8AIAsPAAggT0AAD48AAB4OgBgTT0AwL88AOAFvQBAQL0AAMO7AECsPAAAjTwAwLI8AACOuwAIGb4AQOC8AIBzvADgr70AABS8AJCLvQAAnLoA8Js9AADCuwAAejsAAL47AIA6PABAPj0AAIG8AOAJvQAgUr0AUJi9AMCdPADAhzwAQEE9AED/vADgYL0AgOg8AMDqPAAgNj0A8LQ9AADUOgCgrL0AAHK7AED9PADgWD0AAPy7AACYugAAdbwAgCa9AMDzvACAD70AYAA9AAACuwAADrwAQNm8AAApvQDAh7wAAIQ8AOBsPQAgLj0AwKi8AAAOuwAAbTwAQK08ADCcPQAALbwAQLC8AAC4vAAwlj0A4BA9AIDtPADAp7wAAAK9AGBpPQDAvjwAABu8AEDSvADgaT0AwAs9AIA/PQCAdbwAkJi9AACxvABAnz0AkI89ACAivQDAwTwAwEO9AAASOwAAYDoAgBY9AACruwBg0L0AAKA7AGCuPQAgET0AgB29AAAUPACgDT0AAJS6AGBtPQDAx70A4C+9ANDkvQDwl70AQJe8AIAEPQAgKj0A4J49AOAYPQCAorwAAJa8AMCEvQBAnr0AAFw9AKAnPQAAC7wAEJe9AKBHvQAAU7wAgKI8AABQvQCALDwAAPY7AICzPAAAdz0AALU8AKAHPQBASL0AIBU9AIBSvADggD0AQIK8AAD4vADgLb0AACi9ABC9vQBwmj0AgJ49AAA/vQBAtjwAgE69AAAGvAAA5LsAgJy8AED2vACAcbwAgDk8AMDdPAAACDwAAAq7ANCcPQCAAb0AAN08AKBIPQAAu7sAgF88AOAJPQCgPT0AwLQ8AAAWPABAQj0A4AY9ACAFvQCAJLwAACs8AAACPACAaT0AwP08AMBLPQDAcr0AAHY8AECfvQCASD0AAI67AIBhvACgnb0A4Cu9AEDzvABwiL0A8Ik9AAD1PABgSj0AcIy9AABKOwCALr0AQEg9AKByPQDADb0AAA47AIDYvABAk7wAgJY8AAAwOwDgOD0AYEU9AFDHvQCAaj0AAAA4ABCXPQCAWDwAwLG8AABkPAAAKDwAYCY9AEBcvQAAnrwAAEs8AIAivAAANLsA4Ku9ACAUPQDALL0AgKC9AFCaPQDAQD0AwGi9AABQPQCAZLwAYCo9AIBVvABwij0A4FY9AECsvQDgEj0A4Hm9AIAEvAAAy7wAAPg6AIAMPQBAmbwAAEA9AACpuwDgAT0AAIA5AGCkvQAgTb0AgLm8AIABPAAAELoAADw8AKA1PQBA+DwAgHW9AMBHPQDAND0AsJQ9AOCgvQBAvrwAoCY9AEAGvQDgWr0AAK67AICJPACAFLwAYBO9AAAEPABAQr0AAMC7AMCfvACAx7wAoAY9AAA+vAAAqT0AgCg8AOAhPQCA17wAwHe9AADyPABgGb0AAOC5AMDFvABgej0=","chunkHash":"5ac2653fbc530030731510d00a0dc053e5cd74ea60b69ea34d151b88a14fb3de"},{"text":"File: `scripts/visualize_example.py`\n```python\n#...\ndef parse_args():\n    #...\n    parser.add_argument('--slice_range', type=int, nargs=2, default=None,\n                        help='Range of slice numbers to include (for 2D mode only)')\n    parser.add_argument('--show', action='store_true',\n                        help='Show visualizations (in addition to saving)')\n    parser.add_argument('--max_crops', type=int, default=8,\n                        help='Maximum number of crops per volume')\n    parser.add_argument('--target_size', type=int, nargs=3, default=[80, 80, 80],\n                        help='Target size for volumes (depth, height, width) for deep learning models')\n    parser.add_argument('--no_resize', action='store_true',\n                        help='Disable resizing to target size (use original size)')\n    parser.add_argument('--compare_resize', action='store_true',\n                        help='Show side-by-side comparison of original and resized volumes')\n    \n    return parser.parse_args()\n#...\n```","range":{"startLineNumber":33,"startColumn":0,"endLineNumber":46,"endColumn":30},"embedding":"AGAEvQDA2DwAAAw8ACCvvQAAwb0AwNm8AIBHvAAA8jsAwC69AKB/PQAAnDwAADW8AABGvAAArjsAAJW8AMCJPADgIb0AALs8AMB9vQDA2jwAgBE9AAAovAAAIz0AALy7ACBgvQAAXr0A4Cc9AMDdPQCAXT0AAM68AOBXvQAAM70AYE69AMBRvQBAmr0AALq9AADlvADAobwAwLE8AADKOwCQuj0AUKO9AAABvACgLj0AgEM9AADIPADAj7wAAKa8AIDfPACAAz0AgCW8AIAMPAAAqrwAALw7AABNPAAA/TsAQFS9AACLPADADT0AIFa9AIBfPQCAubwAAKK8AIC1PAAgb70AoHc9AKAfvQAAarwAQKi8AIAMPAAAF70AQMK8AOBGvQCABzwAcKY9AEANvQCgab0AIFU9AABCPAAgxr0AADk8AMCSPADAHT0AAJC6AACKOwDQmb0AgOm8AACDOwBgtL0AEIy9AADMOgAAhjsAANw6AEBYPQDALj0AwM09AADsugDA070AYEw9AIAcPACAbTwAYAU9AHCwvQAAfD0AYEQ9ACA1PQDAYT0AgGE9AGCxPQBAOz0AAN+7AAD1uwDwhz0AMJS9AIANvAAgk70AYBy9AABFvQDAAb0AgL28AMBVvQAAAD0AANc7AABwOgBAOj0AAIo7AAB0PACAzrwAQMM8AOBpPQCAyrwAwMY8ANDJPQAgGr0AQNy8AGCavQAAKr0AYAw9AIBKvABIFj4AAG+8AKAhPQCAIj0AAOI8AAB/vQBAJj0AMLu9ALCDPQDAgb0AIH09ANCUPQBAtz0AwJI8ACA+vQDQrb0AQJO8AEAuPQCAITwAgOY8AEA7vQCAorwAQMs8AECNvAAAjjwA4K69AMA3PQCAFTwAQLU8AICYvQBAlb0AIAG9AMD8vABA8zwAIGS9AICxPQAA8LkAAAi9AIDhPAAAQLsAALk7AACnvQBA+rwAgEy9AAAePACATr0AgLo8AIAGPABA5bwAwIM8AAAIvQBAJT0AwMo8AADbuwAAaTwAgCK8AKB4vQCwgz0AQMA8AACHOwDgUj0AAGw8AOBNPQDAmjwAQHG9AABmPACQjL0AAFk8AACEuwBAxjwAwPQ8AICIvACAzDwAgEA9AMDmvAAAUbwAAGg6AKAEvQBgJz0A4D09AADfuwBAz7wAAD67AAAtPQAANDsAAG48AACRuwCgVj0AIDe9AEDgPADAZz0AgG88AICdPAAA0DsA4Ho9ACBFPQAQj70AgAy8AAD2vADA4rwAAHq7AGBEPQCAPj0AgFc8AICTvQBwkT0AQEQ9AMATvQDwlr0AAHW8AEDJPACgDT0A4AY9AIBKvQCAA74AADC7AABWvQDgfb0AQDW9ADCwvQAAXjwAoH49AMDZPADghL0AAJO8AAAuOwDgfz0AgCW8AEDkvABAlbwA8KO9AOACPQDwlj0AoIA9AECTvAAAWb0AgA+8AFCRPQBgCD0A4Ak9AICXvAAgjr0AAB67AECgPABgGD0AQEs9AADgOgAAiLoAwNq8AABGvAAgBr0AIFk9AMBFvQCAFzwAQMG8AMBWvQAAUz0AwJK8ACAKPQAA8zwAQI68AAABvQCAmrwAAP08AGAXPQCgDL0AAOg7AIAnvQAAjj0AAEA8AMBAPQAATjsAQI28ACB9PQAADDsAoEw9AKAPvQCQsD0AAJY7AIDDPAAAGL0AgF29AKAfvQBAlTwAEMM9AICevACAVjwAwNi8AABougDAsTwAgEW8AIA6vADAXr0AsIW9AED1PAAAh7sAwLW8AED2vAAAnjwAABY7AEDUPAAAY70AABw7AFCpvQAAgr0AAKs7AIA+PQBACT0AwCo9AAAePABgFL0AAHk8AEBEvQCgtr0AwJ48AAAAOACAwDwAYCu9AACjvQDALb0AAKc8AIBsvQAAmzsAgOI8AABoOgAAqTwAgD88AGBnPQCANb0AACs9AAAqPQAQwz0AgBG8AICkvQAQh70AAMu8AIDVvQDwgz0AICo9AKAgvQCgCz0AIEi9AIBVvAAATLwAQL48AEB5vQAAxbsAAEc8AICdPADgAL0AAEy7AKCIPQAAAr0AQCQ9AABvPQDA0zwA4CI9AKCFPQAgKT0AwL08AABHPACgFj0AQIc8AEAPvQCAhzwAwIk8APCGPQDgnT0AIE09AACXuwAAvrwAoC09AIDDvQDAFD0AoHS9AACXPAAgrb0AADq8AABcuwBAAL0AYE09AECUPAAgUz0AQB+9AADkOwAAgrwAMMA9APCHPQDAhLwAAFw7AIBcvAAAV7wAAD08AOBhPQBgI70AAFQ8AODBvQDgOz0AADi7AAByPQCAKDwAABC7AACFOwAAEDoAQAq9AAAivQAAnrsAwNQ8AIACvAAAvrsAwD29AIAQPQAAXb0AMOG9AKAUPQBAnzwAYE69AHDAPQCQmb0AkIc9AGAjPQBAWj0A4Bw9APCZvQAA1zwAgCC9AIARvAAALzwAAPM7AADYvADAmrwAgHA9ACAtvQAAHTwAADg8AGC/vQBAq7wAgAa8AOAEvQAACL0AAJS7AAC5PAAABT0AkJS9ACBPPQCAQD0AQM49AICavQDgGr0AAIA5AIANPQBATb0AABK8AABeuwCASbwAQIq8AMDIPAAASr0AwO08AAAkvQAAGDsAwJ89AAAYOgAAED0AALq8AID/PABA6LwAAEY7AADQOgAAKLwAgGI8AMAivQAAMjs=","chunkHash":"35f83bbc516f334a76557ef05d894c6472565049065bd7512de2de5168ae0b1b"},{"text":"File: `scripts/visualize_example.py`\n```python\n#...\ndef load_original_volume(root_dir, sample_id):\n    \"\"\"\n    Load the original 3D volume and its mask directly from the dataset without resizing.\n    \n    Args:\n        root_dir (str): Root directory of the dataset.\n        sample_id (str): ID of the sample to load.\n        \n    Returns:\n        tuple: (volume, mask) as numpy arrays, or (None, None) if loading fails.\n    \"\"\"\n    sample_path = os.path.join(root_dir, sample_id)\n    raw_dir = os.path.join(sample_path, 'raw')\n    mask_dir = os.path.join(sample_path, 'mask')\n    \n    # Check if directories exist\n    if not (os.path.exists(raw_dir) and os.path.exists(mask_dir)):\n        print(f\"Sample directories not found for {sample_id}\")\n        return None, None\n    \n    # Find all image files\n    raw_files = sorted(glob.glob(os.path.join(raw_dir, '*.tif')))\n    \n    if not raw_files:\n        print(f\"No image files found for sample {sample_id}\")\n        return None, None\n    \n    # Load the first image to get dimensions\n    #...\n```","range":{"startLineNumber":50,"startColumn":0,"endLineNumber":77,"endColumn":0},"embedding":"AMAxPQAAmDwAAEw7AKAMvQAAI70A4NC9AIA8PADAizwAQEm9AAAfPQAA8TsAgKE8AMCUPQAAfr0AAKA5AGA1PQDAM70AAPc8APCQvQBA3jwAsII9AMCevADAjDwAgAS9AMD6vACAXrwAAK88AIDmPADAYz0AwJK8ACA8vQDA5LwAQKC9AIBTvAAQy70AYA89AABpPACAiTwAwBq9AMBzvQBQhT0AkJG9AIBHPACwgj0AcII9AAB0PAAA+jwAcIS9AOAtPQDA+bwAAB09AKBwPQAA+DsAQBa9AIAPvACAEDwAACW9AAC1OwCgVL0AgB+8AADlPADA5bwAAB47ACADPQAAFz0AIFU9AAC+OwAgPL0AgJ28AAAnvAAAv7wAYBI9AADGvADgR70AAGI7AABsvAAAVr0A4BQ9AFD0vQAglL0AAAA5AECAvADAvjwAAGA8AKBkvQBAGr0AABm9ACABvQCAUDwAYBi9AADwOwAAX7wAAMa8AEC4PAAAIrsAAOM7AOApvQCws70AAKk9ABCYPQCAUDwAoJM9AIAIPACAIj0AwHM9ANCMPQCAcT0AgLE8AAAwPAAAwDsAAJS6APDrvQCQsj0A4GG9AKAqvQCADz0AwJe9AAC/vABgiL0AQBq9ACC3vQDAn7wAAI08AIDAPAAAMrsAUI69AAAgPQAAar0AgBe8AIDxPACgez0AAOW7AADQOgDA7b0AQAW9AKBdvQAABj0AgC08AAAjvAAAuT0AEIO9AAAvvADgOj0AAIk7AAA0vQCApjwAYDC9ADCOPQAAJLsAIBI9AACAOgBgOT0AoC89ANCCvQDArL0AIHu9AOAIPQAAszwAAGq7AABWPADgbb0AAEA8AAA5PAAArrsAUJy9AMChPQAA4DkAwOq8AACFvAAQsL0AAA48AKAkPQBAFz0A8N69AIBqPQAA6zsAABG9AHDSPQAAgLoAAG48ACAmvQCgGL0AgMY8AMDVPACA9LwAAFs8AAByvABgAj0AQB69AEAPPQDgFz0A4CY9AABxvACAPj0AQGy9AABCvACwjj0AICw9AAA2PACAgjwAAAQ8AEBWPQAAQzwAAEY7AABUOwCAKr0AANy8AADGuwAgNL0AQLu8AIDEvAAAtbwAYD89AIBIvQAApbsAACk8AACUOgDgBj0AALi8ALCbPQAAYLsAoG89AMDrPADAyzwAwKC8AKAOvQCAnLwAgJK9ACA9vQAA0zwAwKY8AAAPPQDAAb0AIGc9AAAoOgCADL0AUIG9AEC8vADgRD0AgIS8AABhPADAAz0AAEg7AACsvADAozwAAFy8AAAAOQCAc70AQMy8AMDNPAAQhj0AwKQ8AIClvABAZ70AgHI8AIAyPQBgtb0AgBO8AKBrvQAAgLsAYC89AEDTvAAA87wAACk9AAA1PAAA8TsA4BU9AICJPQAA2LwAwP88AECXPQAA/7sAwGc9AACEuwAwjr0AAOM8AIA3PAAAoLkAAD09AICfPACAebwA4A89AEB+vQBAGz0AANC5AEDivACggL0AACA9AAC4vABwj70AoEA9AFCcvQAAv7sAQH+9AEA3vQBArzwAQOY8AEDGvADAhTwAoGe9AACzvAAwpr0AABC7AGCIPQAgHL0AAE68AMCUvAAALjsAgIY8AAAMvACAfrwAADI8AOBmPQDAwjwAoHc9AADrvACAXD0AQPg8AOArPQAAhTwAgFa9AIBYvQBAeT0AAIY7AACVvAAAGDwAgA29AIB0vQCAFD0AGAK+AECtvADAjrwAoE+9AACtvQAAyzsAABC7AOBxPQCAk7wAAAu9AIAPPADgVr0AANw8ACAivQBgLr0AgG+8AOA/PQDgJD0AgCQ9ACAJPQAAdL0AAGi8AEDHvABgOr0AADu8AIBwPADAwTwAwIC8AKDbvQBA+LwAwIi9ALCDvQAA6LsAgK49AECDvADAD70AoD09AACDuwAAKLwAgEA8AGABPQDgnj0AwAm9AKAHvQDAIr0A4PC9ABCNvQCA5j0AoCQ9ANCXvQDAeD0AAMM8AAAUvQAgNL0AQJc9AIAzvQCgXj0AgHU8AGAxPQBAojwAgGK8AADvOwCAn70AAJU8AIDuPQDAuTwAAKq8AOBZPQCAJj0AYHA9AICXPACAjTwA4CY9AEBSvQAAQ7wAgKY8AJCbPQBAlz0AcIE9AACIvABwpr0AgJ68AOAyvQAACLwAsNO9ACBxPQCAxzwAADy8AAA2OwDA8bwAoBg9AIBVvABApDwAACU8AADEvACgSL0AYIc9AOAAPQAAvLsAQMq8AOBdvQCACjwAAFi6AICLvAAAwrsAQPi8AADbvACAmLwAwLi8AADFuwBAXz0AAPO8AEDyvACAuLwAQAS9AADsPAAAILoAAO+7AIAkvACAKjwAABm8AFCdPQDQhL0AgES8AKCJPQAAtDwAAMS9AIA8vAAAQ70AQPa8AMBcvQAAtLsAwKs8AOBXPQAgiT0AwKi8AMABPQAAMLsAADm8AAC5PAAQkb0AwIs8AADBvAAAUz0AQNE8AMDwvACQnL0AAIA6AAD0uwAgBb0AABQ8AICrPQAASD0AMLC9AGCTPQDwsj0AAFw9AMB7vQAASLoAgLg9AOAkvQBgl70AgCI8AIBGPAAA8rsAAAm8AMBCPQBgYr0AYBU9AIAJPQAAijwAMKc9AEDzvABgcj0AwMe8AAAzvACgnb0AoIi9AIAVvAAAzrsAcIY9AADkOwCAWj0=","chunkHash":"cebb9a1f2ba0c4af04ac5fef493ac4ebcee7337d70a626d56723f5a623c8d8a9"},{"text":"File: `scripts/visualize_example.py`\n```python\n#...\ndef load_original_volume(root_dir, sample_id):\n    #...\n    first_img = np.array(Image.open(raw_files[0]))\n    height, width = first_img.shape\n    depth = len(raw_files)\n    \n    # Initialize volume arrays\n    volume = np.zeros((depth, height, width), dtype=np.float32)\n    mask_volume = np.zeros((depth, height, width), dtype=np.float32)\n    \n    # Load each slice\n    for i, raw_file in enumerate(raw_files):\n        # Get corresponding mask file\n        file_name = os.path.basename(raw_file)\n        mask_file = os.path.join(mask_dir, file_name)\n        \n        # Skip if mask doesn't exist\n        if not os.path.exists(mask_file):\n            continue\n        \n        # Load raw and mask images\n        raw_img = np.array(Image.open(raw_file))\n        mask_img = np.array(Image.open(mask_file))\n        \n        # Add to volume\n        volume[i] = raw_img\n        mask_volume[i] = mask_img\n    \n    print(f\"Loaded original volume with shape {volume.shape}\")\n    return volume, mask_volume\n#...\n```","range":{"startLineNumber":77,"startColumn":0,"endLineNumber":104,"endColumn":30},"embedding":"AED/PAAAUjwAQK+8AOAavQCgQr0AMMG9AADMPACAUjwAgFu9AMAiPQBgLj0AYBs9AACBPAAgYb0AYBg9AGCYPQCAWr0AUI49APDVvQAAQzwAYBE9AOCVvQAAYDkAALK7AACdvACgH70AAEk8AMBfPQDgez0AQNi8AADeuwBAxbwAQNm8AECKvAAQAr4AACq8AABTvABAmLwAANy7AEAGvQDAyj0AoJG9AMCZPAAwoT0AkKE9AIBVPACA7jwAIEq9AOA7PQAARrwAYCk9AACLPQAgTz0AAIC9AIAcvACARjwAkJS9AMDkPABAH70AAGA6AAB3PQBAKr0AABM9AAA7PAAABjsAICM9AMC/vACgB70AAAo9AMDFPACATLwAQM88AMBkvQCgCL0AQJk8AECUvAAwh70AAEk8ANCKvQCwsr0AQII8AACwuQAAID0AAJO7AIDLvACAO70AwAy9AABXvAAANbwAAF+9AKAavQAAbzwAwCe9AMAEPQCAIzwAAME8AEDbvABAq70AkIY9AGAPPQAAPLsAwJE9AABwuwDA7DwA4FE9AICAPQDgdT0AQMc8AMC+PADAvTwAAC48AIDuvQAAaT0AAIS9AADpuwAAvDoAQO68AMAYvQDAU70AgPm8ACCxvQAArTwAABg8AABQvACAKjwAQHm9AAAAPQCAd7wAwKA8AAChPACALj0AALA8AIBGPQBQzr0AgLG8AMBnvQBgQj0AwDc9AOABvQBQ7z0AoAq9AMCBvAAACz0AwPM8AIDavAAAYD0AQK29AECHPQAAeLoAgDK8AGBaPQBASj0AAJA5AECPvQDAub0AgAK9AABhPQDgDT0AAOS6AAA0PADwjr0AANA5AADVOwBAmLwA8KG9ALCOPQCAMjwAAP68AMAYvQDwtL0AID29AIBkPACAGz0AENi9AOBiPQAA4bsAQJS9ACAnPQAABrsAQIw8AKBrvQBAy7wAABa8ACB8PQAAN7wAAAM9AACCPACAZLwAAFe8AEAJPQBATT0AQPM8AIBevAAwgT0AAFm8AGAAvQBgiT0AoCw9AABWPACArDwAAF47AIA1PQDA0jwAgEK8AACVOwDAib0AAMi7AMD4PAAAajsAAEq7AADzuwAANjwAMJc9AKBnvQAAsLwAABq8AAAMuwBgRz0AgKC8ACBtPQAA7jsAIF89AMAIPQDAVT0AACK8AAD1uwAARjsAkIG9AACevACAcTwAwDo9AOAzPQCALb0AgNo8AACKPABA7bwAQBS9AACOvAAAgjsAAM+7AABQugDwmD0AAEE8AIClvAAAVjsAgE08AEC7vABgUb0AgJq8AMB1PQAgOj0AAKI7AMDZvADwgL0AQL08AECZvAAA2r0AICW9ACCEvQAAsLsAgFs9AEAOvQCAh70AgAI8AIB+PAAABTwAoFU9AACSPQCAvLwAAKC7AOBdPQAAirwA4H09AABvPABgJb0AgBK8AMCMPAAAv7sAoAM9AICqPAAA1rwAAME8ACBivQDwiT0AAMU7AMDAvAAAe70AgCQ8AAAgvQAwpr0A4Bg9AKBZvQAAhbsAQCu9AAAtvQDAET0AAMY7AADougCAnD0AAPi8AABqvAAwsr0AgOY8AACePQCAYLwAIBG9AIBDPACAErwAgAw8AAAqPAAA8DoAgPy8AJC2PQDA6TwAgKY9AEAUvQCQpz0AYAc9ACBaPQAAxDoAYGi9ACBYvQDgbT0AALA8AMAdvQCgYj0AYGa9AAAhvQAgNj0AENS9AACHuwCAdrwAgCK9AEAZvQAA2jwAAFa9AACLPAAAbTwAAMm8AACAOQCAML0AAMs7AAC7vACAl7wAoAE9AAAMPQAACz0AQFw9AAAivACAEL0AAK07AIAgvABAU70AgGg8ACCAPQCATzwA4Bq9ALDgvQBAj70AANm8AFCVvQAA0TsAUJ89AICwPACAV7wAACg9AEAdPQCAYrwAALE8AABqPQBghj0AQKy8AKBZvQAAebwAQAm+AJCMvQAAfD0AAOo8ACCzvQCAXj0AQIY8AAA4ugCALbwA0IE9AEDjvAAgdj0AQBE9APCUPQAAdrwAALu7AKAzPQBgib0AwJA8AKC7PQAACDsAwIu8AMCNPQBAOT0AICU9AABJPADAQT0AICk9AGBqvQCAJ7wAAIU8ANCWPQCwxz0AMJA9AADxvAAgkr0AAG67ANCOvQAAlDoAUN+9AGAWPQDAwbwAgEC8AACxuwCgWb0AAGE9AADpuwCALTwAAFq8AADsugBgDb0AgDA9AAAFPQCABb0AACs8APCvvQAAEDoAAGe8AADTOwAAE7wAgFi8ABCRvQDA27wAgKW8AAB0PADAlT0AAO68AMDpvAAAl7sAwKW8AIB5vADAhDwAAJ07AAAAuAAAMDsAQEq9ACCHPQBAf70AALO8ACBxPQBADz0AwI29AADIOwCAGrwAAJg7AIA2vQCAJTwA0I49AMCJPABAhz0AgBq8AECmvADgCr0AAMe8AAAVPQCQnb0AACE9AABpvQBARz0AAPC6AABevQBwhb0AgLe8AMCpvABgW70AAEc8AEBrPQAA+zwAIKW9AGA5PQCwgD0AIKA9AOCFvQBAgLwAUJI9AMDbvAAwub0AAOy6AACwugCAV7wAwIK8AIAFPAAgML0AIBc9AAB4ugCAEzwAsJA9AADyuwDAhDwAwNO8AIAePAAAcL0AwAW9AABNvAAAALsAAGk9AIAhPADASj0=","chunkHash":"409dad6f1752a2f99bbd5d136e43adcc10ca94428850fa63b491b4d831bc1922"},{"text":"File: `scripts/visualize_example.py`\n```python\n#...\ndef main():\n    args = parse_args()\n    \n    # Create transform\n    transform = transforms.Compose([\n        transforms.ToTensor()\n        # Removed normalization for visualization\n    ])\n    \n    mask_transform = transforms.Compose([\n        transforms.ToTensor()\n    ])\n    \n    # Create dataloader based on mode\n    if args.mode == '2d':\n        # 2D slices mode\n        dataloader = get_nuclei_dataloader(\n            root_dir=args.data_dir,\n            batch_size=args.batch_size,\n            transform=transform,\n            mask_transform=mask_transform,\n            class_csv_path=args.class_csv,\n            filter_by_class=args.class_id,\n            return_paths=True,\n            load_volumes=False\n        )\n        \n        print(f\"Created 2D dataloader with {len(dataloader.dataset)} samples\")\n        \n    else:\n        # 3D volumes mode\n        # Use target_size only if --no_resize is not set\n        target_size = tuple(args.target_size) if not args.no_resize else None\n        \n        dataloader = get_nuclei_dataloader(\n            root_dir=args.data_dir,\n            batch_size=args.batch_size,\n            #...\n```","range":{"startLineNumber":108,"startColumn":0,"endLineNumber":144,"endColumn":0},"embedding":"AABzvADA0DwAgM08ADCTvQDwpL0AAJO9AID2PACAgDwAIIu9AIAWPQAA1DsAwP88AAA2PQBgc70AAIo7AECFPACA17wAoB09ACBJvQCA+zwAAMI8AECpvACAQj0AAGQ8AMBjvQCAsrwAAL27AGCIPQAAUjwAYEC9AABovACAsLwAwH+9ABCnvQAQoL0AgEK9AADiOwAApbsAQIS8AADpuwCg8z0AkLO9AABnvAAwhj0AAFI9AIA5PADA7TwAYDe9AEBLPQCAZDwAAG+8AGBIPQAgOD0AAME8AIA0vACAaDwAULq9AIAqPQBA0LwAoA29AEAfPQCAS7wAwO08ACBxPQAArrwA4GU9ACBevQAgLr0AoEi9AMAnPQAgIT0AAEm8AADHvAAAIbwAoHA9AGAsvQCwib0A8IM9AKAzvQAAKb0AAFA7AEDnPACATTwAAKk7AECUvAAgl70AoBa9AMDtvACA6bwAAIW9AACXPACgJD0AIG29AEBBPQBAGz0A8O09AACyvACwxr0AkKc9AGAsPQAgdT0AgBw9AIB0vABgPj0AgN08AADKPADgLT0AgIU8AEDfPABAXT0AQJK8AAA2vQBAsD0AoA69AIBDPACAfrwA4CY9APCcvQBAprwA4AK9AFCkvQAAejsAAAA4AACkvACAhTwAAC28AADkugCAp7wAAJ48AEBLPQCAwbwAQOY8AABXPQDwpr0AgK28ACBAvQCAbLwAYAc9AIB6vAAAMD4AgOe8AICgPAAgPj0AID49AKA+vQBA9zwAIKO9AODsPQDABL0A4DA9AAAFPQBAlz0AALy6AKB3vQCglL0AAM+8AGAyPQCgdz0AQK88AOARvQAAs7wAwKe8AIBIvAAAmDsAIKu9AGARPQAArbsAAOy8AIClvQDwy70AQL28AAD0ugBAxzwAsJW9AADNPQAA5rsA4Ga9AAD4OgAAMjwAgAG9AMAgvQAgJb0AgLS8AABsvADAtL0AwAI9AAAlPAAAOLsAANS8AIB6PACAqDwAsI49AICTvACAqzwAgK68AECfvADgXj0AACk8AED1PAAA+TwAwLs8AAAEPQCA/jwA4KO9AAAOvAAgnL0AwM48AAB2OwAAtrsAwO48AADIugCgAD0AcIE9AACvvABA0rwAABC6AOALvQAgnz0AIFA9AIBVvAAAo7sAgCI9AIC9PAAAoLsAAOy6AGAFPQAACTwAwAm9AADeuwAwkz0AQIY8AAARPABAEj0AwG49AMAEPQCgfr0AAJe8AKAGvQCAJjwAwIo8AABSOwAwgD0AADg7AIAKvQCAMj0AQMA8AIAYvQDgdL0AwPQ8AEA3PQDAbT0AAK27AMDEvAAwuL0AQPa8AEC6vACAZL0AgH28ADCHvQAA8LoA4Fk9AACqOwCgWb0AAEW8AAAnPAAgSD0AgL+8AADsuwAAMrwAYBK9AMCIPQAAijsAQB09AAByuwDAdr0AALg8AEBAPQAgbz0AoFw9AAAmvAAgIr0AAEw7AECQPAAAhzwAAKA6AACVPACgEL0AAAI9AKBkvQAgjr0A4HM9AMDwvACAerwAIBi9AACfuwCAAT0AAHc8AIAxPAAA8jwAQOG8AADAOQAAtbwAQIY8AECfPQAA6LoAAP07AACOuwDgHT0AAD89AAABPACAILwAIBq9AMCPPQDAizwAQDY9AIABvQCwhz0AoDc9AABrPACA6LwAQLK9AOCXvQAAszsA0Is9AAAavQBAmzwAIFK9AADpuwAAvbsAoAW9AABYuwCAnL0AAPS8AAC6PABAzDwAYAu9AACqOwDAzjwAgNw8AOBMPQBIBL4AAAm8ABDavQCAo70AALw6AMBvPQAAQD0AUJ09AACMOgDgEr0AAOy6ALCJvQAQvb0AAPU8AAA8PAAArLsAACG9APDZvQCAf7wAQMu8AGBsvQBAqDwAEJY9AABSOwCA57wAYDw9AIAnPQAAKbwAgAI9AABUPAAgnz0AAGg8AMCUvQCgNb0AQDq9ADgDvgCwxj0AwBk9AECSvQCAYD0AQI28AAC4OgAA+7sAAEi7ACB1vQDAtzwAADc9AABPPACAT7wAgLc8AABUPQCgYb0AgGG8AMB5PQAAeDoAANs7AECrPQDAPj0AgO08AAAgPAAA2DsAgIg8AID4vADgKr0AwOs8AGAnPQBgMT0AwGQ9AICdPAAA8rwAYFg9AABwvQDgRT0AYFi9AMCcPABgAr0AwDm9AIALPACwgr0AgH89AMCpvAAAmDwAwFa9AACYugBAKb0AwGc9AKBOPQDAqLwAAKw8AADrvACAMLwAgIQ8AIB2PACAADwAAMc8ACCLvQBA1TwAAPC7AACoPQCAhjwAgKW8AAB+uwAAiLwAAJI7AKA6vQCAR70AwKu8AABsuwCAYbwAQB29ALDJPQAA0bwA4HG9AGBePQBgGT0AUKK9AACLPACAbDwAYEM9AAAWPQAwgz0AALg8AGBrvQCApTwAAPa8AAD+OwCASbwAAKi8AADfPADAEr0AQM88AADwOgAgfj0AwC09AHCKvQAA9rsAALG8AMClvACAwLwAwJg8AICEPQBAvDwAUMu9AACuPACA5TwAwLI9ABDfvQAA97sAgPw8AIBAvADwhL0AgFY8AEBSPQCAXrwAgDa9AAACOwAQj70AAEy7AEAQvQAABDsAcJs9AACRvADAnD0AAKE7AKBmPQCAQr0AgEq8AICYPAAA9DoAAHQ8AGAavQDA0zw=","chunkHash":"ac5a0fce81cf1142228f59481c85ee93a8bd9cf4b4dc6a049250197a6094c6c1"},{"text":"File: `scripts/visualize_example.py`\n```python\n#...\ndef main():\n    #...\n            transform=transform,\n            mask_transform=mask_transform,\n            class_csv_path=args.class_csv,\n            filter_by_class=args.class_id,\n            return_paths=True,\n            load_volumes=True,\n            target_size=target_size,\n            crop_size=(80, 80, 80)\n        )\n        \n        print(f\"Created 3D dataloader with {len(dataloader.dataset)} samples\")\n        if target_size:\n            print(f\"Volumes will be resized to {target_size}\")\n        else:\n            print(f\"Using original volume sizes (no resizing)\")\n    \n    # Create visualizer\n    visualizer = NucleiVisualizer(output_dir=args.output_dir, cmap='gray')\n    \n    # Visualize samples\n    num_visualized = 0\n    \n    for batch_idx, batch in enumerate(dataloader):\n        print(f\"Processing batch {batch_idx+1}/{len(dataloader)}\")\n        \n        if args.mode == '2d':\n            # Visualize 2D slices\n            visualizer.visualize_batch(batch, max_samples=args.batch_size, show=args.show)\n            #...\n```","range":{"startLineNumber":144,"startColumn":0,"endLineNumber":172,"endColumn":0},"embedding":"AACSuwDAwDwAwNU8AGBfvQCgub0AsJy9AAABPAAAADgAMIu9AADFPACAWjwAQPM8AAAcuwDAVr0AAJS8AIBFPQDgCb0AIDc9AKAKvQAA3DwAQGo9AADsuwBA3TwAgLg8AEBgvQDgBr0AABK7ALDWPQAA2zwAYG29AGAsvQCgBr0AIHa9ACBxvQAAur0AgL68AAC7PACAIbwAAJA5AEDGvACw8T0AQMy9AIDIPACgTj0AUJM9AGBePQAAMDwAYCK9AMBQPQCACjwAABu8ADCtPQDgDz0AABw7AIB1vABApzwAELW9AAC+PACAXLwAgDC9ABCNPQAAnLoAABQ9AICJPQDgMb0AIEA9AACmvACgML0AYBi9AIAlPACADT0AACa7AIAsvQAAu7wAoEE9AIAgvQBgTL0AoHc9ADCDvQDgML0AAGS7AKAsPQAAATwAANA8AAC9vABAXb0AAEm9AIAVvQAAMbwAgDu9AAAAuQAAGz0AQCa9AGBfPQAAMD0AoOs9AABcOwBAur0A0JU9AIDoPABAOj0AAFo9AAAAvAAgDD0A4Ac9AADgOwAAkTwAAJW7AIDAPABA+DwAAGy8AAD7vABwpT0AoES9AAAFvABAnbwAYCg9AGCXvQBA8rwAwCK9AMDJvQCAfDwAwLG8AGA5vQAA7LoAwIm8AIDSPAAgFL0AQA09ACAmPQAAPLwAQPk8ACA7PQDQzb0AADq8AJCTvQDAsbwAQOQ8AMCPvADAKD4AAE28AMDcPABgfD0AgPE8AIBEvQBA0jwAoGa9AODDPQCAtLwAADk8AABwugCwkj0AAKU7AECQvQAQlb0AgAC9ACABPQDAdj0AAFY7AICYvACAkbwAgBG8AAA0vACAGLwAkK+9AMBZPQAAgDgAgNi8AECSvQAQr70AADi7AMCxvABA0zwAEIK9AJClPQAACbwAQOq8AADBOwAAfDsAIFC9AACUvADgdb0AAPa7AABBvQBAbr0AANk7AMDMPAAAaLoAAPm8AAAQOwCgCj0AIBs9AEC0vAAA6DwAgMK8AED7vACgXD0AAMa7AACcPABgFD0AgKo8AGBhPQAAujsA4Hi9AAAcPACAmb0AAPE8AIArPAAAOrwAwIw8AADMOwCATDwAwFo9AECOvACgCL0AAIS8AMDYvACwvT0AgJo8AACWuwAAXTwAIGw9AMCCvAAAMDsAALy7AADbPAAAgTsAAEC9AADGvADgYz0AQPA8AAAXvAAAKT0AIDM9ACA4PQBwpb0AQIK8AGASvQBA9DwAQDA9AAAIOwBAWD0AAEc8AEC/vADAMT0AgB49AIC4vABgeb0AADs8AEBJPQAAiD0AAE67AADgvADQx70AwLS8AACQOQAgqr0AQNG8AKCHvQCAJrwAIBE9AECVvACAf70AwBI9AKBHPQAgNz0AAOU7AABCOwBAhrwAQM+8AACyPQCAI7wAQOo8AADiuwCAdr0AAEE8AIAvPQAwjD0AAGQ9AABBvACgRr0AAMA7AABmOwDAST0AACs8AADQuQBAHr0AIBo9AGAvvQAAUL0AoCA9AEAZvQCAJbwAgB+9AACsugCAWj0AAL47AMDCPAAA6jsAYBe9AABgugDgFb0AgEk8AEDLPQBgEL0AwNc8AAAYvABAyDwAAFk9AABKOwDAwrwAgKq8AKCwPQAAjzwAID89AEAYvQCARD0A4Ds9AEDyPACAxbwAUL29AKCHvQAA/TwAsIw9AMBLvQAA3TwAgGq9AECBvAAA+DoAAHa9AACrvABgYb0A4A69AADUPACAOTwAIEq9AABhPACAxjwAgDg8AOBOPQCoAb4AAAi7ALDovQAgqr0AAEs8AIAWPQAAKj0AwHs9AABYOwDgOL0AQKa8ABCFvQDQgr0AIGc9AADnOwAAADkAAP+8ALDnvQBAu7wAAAy8AGA+vQBA7DwAYLE9AACNuwBAzbwAgFA9AECUPACA9bwAwKc8AIAQPADguz0AAO+7AOByvQCAX70AgCu9AADEvQCAuz0AoBk9AOCovQAgOT0AAHo7AADsugAAT7wAAAQ7AIA7vQCARz0AoAc9AACiPADAubwAwJc8ANCMPQBgf70AwPq8AKAnPQBAmDwAACY8AEB5PQAgDj0AwDE9AIBPPADgFT0AgJA8AABSvACgHL0AgNg8AKArPQDAGj0AoDc9ACAiPQDAAL0AoIE9AOB9vQDA5TwAEJO9AAAevACAj7wAoKG9AIApvACAQb0AgMM9AOAHvQDAzzwA4B+9AAA6PADAtLwAYKA9AGBAPQAACrwAgJY8AAD8vAAA0rwAAPo7AAAgOwCAnjwAgD+8AABhvQAAw7sAgJe8ABCdPQAA3TsAQAe9AAAWPADAjLwAALS6AIACvQDAnLwAoBW9AIA9PAAAwbsAYBu9AGCZPQCAuLwAwIi9AOBvPQBAjjwA4NW9AIC+PAAA97sAAO07AADJuwCAWz0AYA89AGAOvQBA1DwAgGm8AABhPAAA3LoAgKa8AEA+PQDgDr0A4Hg9AAAYuwBAZz0AwCk9ACBZvQBAjLwAwJq8AABgvACANr0AgCa8AOCPPQBA6TwAYN69AIAJPQDApzwA4Ko9AKChvQAgCb0AABg9ACACvQDgIb0AAMY8AMAuPQAASrwAAFK9AACluwBAqb0AQI48AABgOgAAELoAoIY9AIAvvACgjz0AgIC8AGBWPQBgob0AAJq8AAAkuwDAtjwAAKs8AOAJvQBApDw=","chunkHash":"3c0a945ac1c716beed7d5c7164b07c4e084d599132342abd72365ad9f5fe9731"},{"text":"File: `scripts/visualize_example.py`\n```python\n#...\ndef main():\n    #...\n        elif args.mode == '3d':\n            # Visualize 3D volumes\n            print(f\"Processing 3D volumes, batch size: {len(batch['volume'])}\")\n            \n            for i in range(min(args.batch_size, len(batch['volume']))):\n                # Extract the i-th sample\n                sample = {}\n                for key in batch.keys():\n                    if key == 'metadata':\n                        sample[key] = {k: batch[key][k][i] for k in batch[key]}\n                    else:\n                        sample[key] = batch[key][i]\n                \n                # Get sample ID for file naming\n                sample_id = sample['metadata'].get('sample_id', f'sample_{i}')\n                print(f\"Processing sample {i+1}/{min(args.batch_size, len(batch['volume']))}, ID: {sample_id}\")\n                \n                # If compare_resize is enabled and we are using resizing\n                if args.compare_resize and not args.no_resize:\n                    print(f\"Comparing resize for sample: {sample_id}\")\n                    # We need to load the original (unresized) volume\n                    #...\n```","range":{"startLineNumber":173,"startColumn":0,"endLineNumber":194,"endColumn":0},"embedding":"AEC4vABA5TwAgJU8AMCWvQBAmb0AQG69AIAjPQCALrwA8IW9AACjOwAAGD0AAMc8AAC3OwCgCL0AgAC9AKBKPQBgjL0AQE09ACBtvQAAPDsA4CE9AAAivADgXz0AwKU8AAAKvQCAIbwAAM47AHCXPQAgOz0AIB+9AIAkvAAA0bwAoJq9AOAyvQDg770AwJO8AADcvADgML0AALY7AGAUvQAw/D0AAES9AIA+vAAQhD0AIHw9AIBFPQCAazwAwGy9AEB/PQDA/TwAgLO8AECJPQDABT0AQEe9AAClvAAAD7wAULC9AAC4OgCAYzwAwN68AAAdPQCAALwAAOI7AIBYPQAQsr0AwI09AIDRvAAACrwAAEC6AADyOwAA+7sAgLo8AKBXvQDArbwAAGw8AGAhvQAAab0AwOA8ABCUvQDQsb0AAAi7AIBkPACgBT0A4Bo9AOAZvQBAiL0AQE+9AGAfvQCAXrwAwGW9AIAVvACALj0AAGy9ACBtPQAgCj0AkMU9AADTuwBg0r0A0KQ9AMDOPADAhzwAcJI9ACB8vQBA4jwAgMU8AECNPACABz0AgHc9AECmPADA2DwAABa8AMA5vQAggD0AgC69AABiOwAAhrsAgAM9AKAXvQCATb0AYGm9AJDavQCAaj0AgCO8AAAkvQCA4DwAYFK9AIAMPQAgCr0AQOs8ACCAPQAAXrsAAMQ8AMAZPQDwt70AwJ88ABDWvQCAFzwAAKM8AAATvADoDT4AgCm8AICEPAAA+jwA4B09AMCDvABARz0A8LS9ACCwPQAAqLoAgAc9AAD4OgAg3j0AADC6AHCCvQCAEL0AAD+8AIA+PQDgfz0AYBg9AABmvACAKbwAIFy9AICaPACAQrwAIIK9AIAkPQDAKz0AQJ+8AKByvQDwk70AAAY7AADIuwCAoDwAELW9AEDrPQCAhrwAgBe9AABgOQBA2DwAADw8AMBJvQDASb0AQBi9AICAvACgLr0AAEg8AEDfPAAAsrsAgIm8AIBCPAAAqTwAYFU9ACAtvQDADT0AANC6AEABvQCAXD0AAN27AECMvAAA4jwAAI47AED+PAAAwDkAkIW9AADXuwCgq70AYBg9AGA5vQAAu7sAgNU8AMCCvACA6jwA4HY9AMD0vADAjbwAAOO7AMDuvABgtD0AgI88AAAHPABgBL0AwJU8AABfPABgCT0AAA88AECmPAAAaDwAIKe9AMCbPACArjwAAHY7AADsOwCAgjwAgCo9AAAUPQDgAb0A4CG9AACKvADAmDwAAPA6AAAlPQDAiz0AAOy8AGA4vQAAID0AANw7AEDhvABQl70AAIg7AACePAAAijwAwAS9AABFvABA270AALA6AABYvABghb0AAIm7AIDlvACAAbwAwP08AAAWuwAgZb0AgIw8AABeOwCwnj0AQOs8AADqOwAA6DsAAFu8AIDMPAAAtTwAwDA9AAAPvACABL0AoDI9AOA2PQBAuDwA0KQ9AKAUvQAA27wAgAM9AECTPAAA2jwAALY7AIBavAAA67wAYEE9AACAOgBAZr0AwCY9AADkvACAXrwAADS9AIBhvADgKj0AAJM8AIDAPABAqjwAwBS9AAD0uwAAGrsAAFg7AMDiPQBgIL0AAIs8AOBrvQAAAT0A4BE9AICHPAAAtDwAAFS7AGBnPQAApLwAwDo9AIBzvQBACj0A4Es9AEC5PAAAgb0A4DK9AAAfvQDghD0AoEE9AIBCvACAWLwAwPG8AAASuwAAhzwAQNi8AIBzvADgAr0AAOu8AMCfPADwnz0AAJm8AABIOwBAPz0AgHu8AMAePQCA5b0AAOo7AGC9vQDgdL0AALg8ACA0PQAAVT0AcIM9AMDZPACge70AQMg8AFCRvQCwvL0AAPM8AIB9PAAgA70AAHO8AKDBvQCgLb0AoBG9AOB9vQCARDwA4EI9AICRvADAjTwAAG48AMAzPQDgab0AAMc8AIAqPQBAmT0AgBc8AEBCvQDgU70AwIe9AODsvQAATj0AoKY9AKCEvQAgKj0AIHC9AAAYugAAl7sAAC48AAB2vQAAhjwAADC6AEBNPQCAC70AAIw7AFCBPQCgWL0AIAg9AMAePQBgWT0AAGC7ACCEPQBART0AQP88AAAsOwAAdDsAYEE9AMANvQCAF7wAALk7AEB4PQAATT0AwJA9AOCBPQAgBr0AIHg9AEC0vQCAazwAAJu9AADwOwBgT70AIAK9AACsugAAK7wA4H89AACwOQAAtDsAwIe8AMDtPAAA5bwAwJc9AOCIPQBAJb0AANw8ALCVvQCAT70AgFg8AIAUPAAAVzwAAIS7AHCbvQAAHbwAwAC9AKBxPQAAODwAoF29AACyvAAAQrwAABA8ACBQvQDA7bwAwPe8AEDivADAvTwA4BW9AIBcPQCgVr0AEMe9AGAxPQDAmTwAgCy9AEA6PQAAYbwA4Cg9AAAGPAAgQz0AIEk9AOA6vQBASz0AYAm9AICRPADAxrwAQKk8AADsuwBAOb0AgGY9AABXvACgXT0AALQ8AICvvQBgO70AAGK9AICLvAAAUr0AYBY9ABCOPQBAgzwAkKe9AMCsPQAAoDkAAK49ACBKvQCAmLwAwLg8AIBOPAAghL0AANK7ACADPQAAbLwA4Fe9AED4PAAwr70AgIg8AADMuwAAgDgA4Hg9AMC8PABQpz0AgIo8AAC3PADAPr0AAJK8AABcOwDAuTwAAEw9AAD3uwAArzs=","chunkHash":"635c53898ff61cc34d3c4ebe2aaa301ad42c7d1eab197d934c5656e4092c859e"},{"text":"File: `scripts/visualize_example.py`\n```python\n#...\ndef main():\n    #...\n                    original_volume, original_mask = load_original_volume(args.data_dir, sample_id)\n                    \n                    if original_volume is not None:\n                        print(f\"Original volume shape: {original_volume.shape}\")\n                        print(f\"Resized volume shape: {sample['volume'].shape}\")\n                        \n                        # Create side-by-side comparison static image\n                        save_path = os.path.join(args.output_dir, f\"{sample_id}_resize_comparison.png\")\n                        print(f\"Saving resize comparison image to: {save_path}\")\n                        visualizer.visualize_resize_comparison(\n                            sample, \n                            original_volume, \n                            original_mask, \n                            save_path=save_path,\n                            show=args.show\n                        )\n                        \n                        # Create side-by-side comparison animation\n                        save_path = os.path.join(args.output_dir, f\"{sample_id}_resize_comparison_animation.gif\")\n                        print(f\"Saving resize comparison animation to: {save_path}\")\n                        visualizer.visualize_resize_comparison_animation(\n                            sample,\n                            original_volume,\n                            original_mask,\n                            save_path=save_path,\n                            show=args.show,\n                            axis='z',\n                            frames=15,\n                        #...\n```","range":{"startLineNumber":194,"startColumn":0,"endLineNumber":222,"endColumn":0},"embedding":"AIAFPAAAwzsA4Ai9AMAGvQDAub0AYGq9AEA3PQAA4DoA0IS9AADGPADAHD0A4FI9AAAXPADAXb0AAI67AEC2PQCggr0AQIU9AHC2vQCAijwAAJc8AABUvQDADz0AwLQ8AMD8vADgG70AgAu8AADaPADA/TwAQNq8AIByvADAIb0AQNG8AEAIvQAw+r0AgHo8AABavADgcb0AAHI8AIA6vQDQ4D0AQNS9AMCJPAAgpT0AsMI9AKBWPQDABT0AwE69ACAfPQAAZDsAAD67ANCNPQAA+DwAICq9AECLPACAWjwAEJe9AABWPAAAcbwAACi9AMBzPQBAz7wAwAc9AMD6PAAgH70AUJA9AEBovQAAtTsAAMg6AAA4vACAYzwAABY7AADcvACABLwAAGg7AADauwAAFb0AIF09AKA/vQDgrL0AAOW8AIADPAAA6jwAQKs8AGAgvQAAf7wAIEG9AAAJvAAAYDsA8IS9AMCnvADA+zwAYCe9AGAdPQBgUT0AMJM9AMDavABAYL0A0Ko9AGBiPQAgTD0AYAs9AKAtvQBAyDwAoIM9AAAaPQAQjD0AYAg9AAAHPQBgiD0AQMU8AJC5vQCgFD0AgFW9AAD2OwAA8rsAwNA8ACBavQCgKb0AoCC9AADPvQAAnTsAAKC6AMDlvABAZz0AQGu9AAAwPACAPL0AgJU8AAD5PACgEj0AgPM8AED3PABgpr0AQLi8AOB1vQCAhzwAAEM9AEDsvADgCz4AADk8AABiPAAA+TsAgMU8AEBMvQBgVT0AEI69ACBYPQAAXLwAwKY8AOALPQDgsD0AANQ7AEBzvQDgk70AQKq8AIATPQAA8TsAANO7AICavADAVL0AoAa9AECEvACACzwAUKy9AKAXPQCAETwAIEa9AKCOvQAwoL0AAA68AACvOwDA8DwA0Lu9ANCzPQDAibwAIDO9AIAsPAAAODsAANo8AABxvQBgB70AABy8AABkPACAJL0AAII7AEAsPQAAIDoAAKg7AIBJvACgBj0AwOE8AIBTvABAZT0AoAO9AGANvQBQkD0AAG47AAD7vACAJj0AgCY8AGBMPQBAKz0AAFC9AMDJvACgq70AAJc8AMC6vACgGL0AAHw8AAAYOgDAmTwAwMU9AKBivQDAwLwAgDe8AADAOgBwvj0AAKW7AEAzPQCALL0A0I09AID2PAAAhzwAAKM7AEDSPABA1zwAYEq9AKAYvQDAijwAANC6AMC9PACAeLwAYCw9AIAhPQDQpr0A4BW9AACsvABAmjwAAMw8AADVOwCAVD0AgMU8AOAHvQAAdzwAwAM9AEDNvACAj70AABc8AMDPPABAFT0AAAA5AACUOwBwoL0AANg6AMAtvQDAiL0AADK7AJClvQCAFjwAgCc9AIAwvQDgZb0AABw8AMCjPABgeD0AQEw9AIAjPQCA8LwAgAE8AOCJPQBArzwAQGU9AMAjPQAgM70AANk8AEB3PQBAIz0AAEc9AABguwCgHL0AgH08AED+vACAgj0AwNU8AAAwvABAAr0AwMw8AMAovQCgL70AID89AFCHvQCAN7wAQF+9AIA2vQBAQj0AALw7AEDSPAAAmTwAwP28AACauwAgeL0AAMy8ABDqPQAABr0AwI+8AACvvADADz0AwBM9AICwPAAAgDgAgG68AGDcPQAASjwAIEU9AIA3vADgbD0A4FE9AAA5PACgNr0AwEm9AECdvQBwhD0AAKC7AEAcvQAAEz0AgJm8AMD5vAAALj0AACG9AACguwAgR70AgMu8AABQuwAAcz0AQLA8AAAGPADgCD0AAG+8AIBHPACAw70AAHq8AACRvQDASr0AoEQ9AEC4PABgLD0A4Ic9AAAFPADgNr0AQLo8AECdvAAAY70AgCc9AEANPQCAuLwAgPi8ADD6vQDgVb0AAHa8AOBVvQAAKDoA4MA9AIB7vABAl7wA4DQ9AKAFPQAAPb0AAHU9ACAmPQDAqz0AAJA6AACZvQBAGL0AcPO9AMDZvQBwgT0AwCg9AGCavQAAqjwAAJq8AAApPACAijwAAFE9AKBPvQDABj0AgBU8AKCaPQDgNb0AAHI8AMD8PADgvb0AAFC6AHCZPQAAtDwAgDU8AICwPQBAhT0AAP88AECBPAAAAzwAYEc9AGBkvQAAUrwAAHC8AGAIPQDgHz0AwBM9AADRPAAAIL0AoFM9AJCZvQAAwTwAELC9AOANPQCAj7wAANO8AACkuwCABL0AgJY8AABMPAAA7bsAAEO8AABWuwAAvLwA4KA9AADwOwDAorwAAPk8AKCrvQAAfDsAAAW8AAB9PAAAtDwAAGA6AACFvQDAHr0AAK47AABmPQCA3zwAYB69AACDuwAARjsAAHq8AOBUvQAAzrwAAJy7AACUOgCAWTwA4Ae9AIBlPQBAxbwAELm9AGAqPQAA+zsAgEy9AAAbPACgDb0AoDA9AADYuwBAkjwAkIo9AAApvADg1j0AgIe8AACWOwCAZrwAgL68AIAKvACAH70AQLU8AIBUvQAgbz0AALw8AHCVvQBA3rwAgO88AMB4vQAgLb0AYBM9AIBFPQBADz0AwKe9AMAIPQCACz0AIGs9AEBzvQDgFr0AAMw8AED8vACgNr0AAGa8AMDkPACAgLwAQMa8AABlvADgCr0AgPk8AICXPAAAXLsA0Ko9AADsuwCAbzwAALo7AMB8PQBgqr0AAKm8AIAuPACASDwAgDI9AACevACApjw=","chunkHash":"01049dd7d495a4ebe1ff1c9ac3aa5be9c8aebb6f0ede3812b286fb5e80997bfb"},{"text":"File: `scripts/visualize_example.py`\n```python\n#...\ndef main():\n    #...\n                            interval=250\n                        )\n                    else:\n                        print(f\"Failed to load original volume for sample {sample_id}\")\n                \n                # Standard visualizations (always performed)\n                # Visualize middle slice from volume\n                visualizer.visualize_slice(sample, show=args.show)\n                \n                # Create animation for z-axis slicing\n                save_path = os.path.join(args.output_dir, f\"{sample_id}_volume_animation.gif\")\n                visualizer.visualize_volume(sample, save_path=save_path, show=args.show,\n                                            axis='z', frames=20)\n                    \n        # Count the number of samples visualized in this batch\n        batch_size = len(batch['volume' if 'volume' in batch else 'image'])\n        num_visualized += batch_size\n        \n        # Break if we've visualized enough samples\n        if num_visualized >= args.num_samples:\n            break\n    \n    print(f\"Finished visualizing {num_visualized} samples. Results saved to {args.output_dir}\")\n#...\n```","range":{"startLineNumber":222,"startColumn":0,"endLineNumber":244,"endColumn":95},"embedding":"AEDXPACAjTwAwIi8ABCSvQCg+r0AIEC9AAAbvACAZ7wAgO28AAAnPAAgaT0AgBw8AACkvABAO70AAFM8AFCwPQBgjr0A0L09AEBFvQCAHjwAABE9ANCBvQAA3TwAgDw9AGBZvQCgM70AAPk8AMBoPQDADz0AgHG9AIBZvADA9LwAAGa9AICPvQD4Gr4AAPo7AAB6vABgVb0AAOs7AJCCvQCw0D0AgM69AACPPABwkz0AkKc9AMCZPQAAjjwAQPS8AKCIPQAAHzwAACC7AIClPQCAyDwAwJy8AACjPABAlzwA0Ia9AAChPAAAD7wAAK68AKA8PQAAsrsAQNI8AEBLPQAAoLwAsIA9AIDgvAAAJLsAAAo7AIADPQCANrwAADA8ANCRvQCAAzwAgDO8AGAEvQAgP70AwOU8AGBrvQBQs70AAGS8AACYOgCA+TwAwIc8AAA+vABgQL0AcKa9AIAzvADAHz0AEIi9AIC7vACggT0AIFS9AAD6PAAALz0AYJs9AAD/uwBQmb0AwJU9AAATPABA3zwA8Is9ABCHvQAAQjwAIDA9AOALPQAAnzwAgFk9AABgugDAsDwAwOo8AOCZvQCAWDwA4HC9AIAOvABApLwAwFw9AGBJvQAgOr0AAGO8AHC2vQAAXz0AgLG8AEDlvADArTwAgE29AMCWvAAAgzwAgM48AIBUPQCgHz0AAJ67ACARPQDgpr0AgDy8AOCNvQAACjsAgCg9AEDDvAAIEz4AAJ68AIDzPABAhD0AgFU8AIBQPACQpz0AQHW9AMA4PQAAGLoAAHg8AIBQPQDQzT0AAHi6AKCGvQDAe70AQPu8AACIPACAYz0AAHO8AACIOwAAPLsAAP27AIBGPAAAJ7wAsKS9AMDYPACAAzwAACO8AFCTvQDQnb0AgC68AIBuvACgCj0AIJ69AIDHPQBAi7wAoDe9AABrvAAAnDoAAPQ7AOAuvQAAn7wAYCu9AABaPAAgML0AAH48AAA0PQCAybwAgA68AIAbvAAgBT0AAAM9AMADvQBAcD0AAP68AABdvQCAdD0AwP+8AADcOwBAlzwAAJO8AMDmPACA4DwA4Ia9AIABvADgWL0AwBM9AMCRvAAAuDoAgGw8AIChvAAAGj0AQNc9AOBovQAAEbwAgDw8AABOOwDQ0z0AIAA9AIAJPACAKL0AIBs9AACwOQDgRT0AoC89AAA6PACAlTwAYEO9AIAzPABQhj0AwKg8AAAouwAADDwAwL48AECoPACA77wAAJW7AICJPAAAjzsAAKc7AIAhPADgfT0AgIs8AAB0vAAA0TwAgLA8AACxvADAQb0AADM8ACAMPQAAsLsAQOe8AIC3vABAq70AACg6AIBPvQCgcL0AYAu9AKB0vQAAsbsAYGE9AMCnvADQiL0AAEc8AAAhPACQhT0AQGg9AEDkPAAAMLoAAJC7AOBHPQBAqzwAIJ09AABUuwBgLb0AAHo8AABmPQAgMT0AYB89AIBdPABAsLwAAIQ8AMDfvAAAdT0AwM08AIADvACgKr0AwAc9AIDhvADgPL0AIBU9AMCfvADAE70A4CW9AAAAvQDAHD0AgHE8AABPPQCAED0AQFu9AIAlvABA5bwAQKY8ANCwPQCAQbwAgI08AECMvADgMD0A4FQ9AOAMPQAAmzwAgOK8AKCcPQBgGj0AwIM9AOAJvQDgXj0AwDU9AABWPQBwjb0AgGq9AGBNvQCASz0AIH49AACxvABAhjwAAJS6AAD6vACAzjwAgLu8AIAIPABAQb0AgFu9AIAYPQCgXT0AwAG9AADgOwCA5jwAQAK9AABCPQBQs70AADI8AOCivQCAVL0AoAo9AEA7PQDgVz0AYGI9AECsPABAjr0AAJI8AFCMvQBAXr0AgGw8AGBGPQCAG7wAgHy8ACDvvQAQhL0AgNm8AIBtvQBAmDwAkJo9AICCvABAw7wAgI89AEASPQBAgL0AoE49AOAmPQAQuz0AAPS8AKA5vQCgIr0A8IO9APDQvQAgnT0AIE09AEBdvQAgMz0AwEG9AICRPAAAizwAAAAAAMDdvACA/TwAgEu8ALCXPQDgdL0AAFg8AEAwPQDwir0AADK8AGAJPQDAkj0AAGA7APCRPQCAgz0AAEk9AADIOgAAszsAQDg9ACA8vQAANDsAgLE8AGBuPQCAIT0AgEY9AOADPQCAtrwAgBo9AIC7vQAAQLwAUMm9ACAIPQAgkb0AgMm8AADquwCgBr0AgFU9AADPOwCAELwAADG8AMDuPADAz7wA4Ig9AIDwPAAAIb0AQNY8AEBZvQAAUTwAAA+8AIB3vAAAVTwAgDA8APCVvQAAAAAAoDm9AEBKPQCAjTwAQOS8AACEOgAAsbsAgGy8ACAzvQDAlbwAgH+8AADAuAAAPj0AoDO9AKA/PQDAj70AUPK9AMAOPQAAuDsAgJ68AOAMPQBAAb0AwJA8AIBJvACAMbwAsJA9AMAzvQAgYz0AQPq8AAAIvACATzwAgEq8AIDFPABA77wAAAA9ACANvQBALz0AABK7ALCgvQAAAr0AQIy8AABmvAAAaL0AQJk8AKAxPQAAhzwAsLy9ALCNPQDAGD0AEIU9AID9vACgRb0AAC88AIDdvADAH70AgLC8AACGPACAfrwAMIO9AADmOwBQlr0AIBs9AIDDPACABrwAYDM9AADYOwDgLT0AAKK7AEDRPADgWb0AAMq7AACbOwAAcDoAoBk9AMDevAAAuLo=","chunkHash":"188d658ab84dcbcc96a46e74b9eccd215a2501ff106e518641230d0c9e5c707d"},{"text":"File: `scripts/visualize_example.py`\n```python\nimport os\nimport sys\nimport argparse\nimport torch\nimport matplotlib.pyplot as plt\nimport torchvision.transforms as transforms\nimport numpy as np\nimport glob\nfrom PIL import Image\n\n# Add parent directory to path\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\nfrom dataloader.nuclei_dataloader import get_nuclei_dataloader\nfrom scripts.visualize import NucleiVisualizer\n\n\ndef parse_args():\n    #...\ndef load_original_volume(root_dir, sample_id):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":249,"endColumn":0},"embedding":"AIDAvAAAhDwAQJI8AHCKvQBwnb0AUKW9AACNOwDgDL0AgLG9AACHPAAAADwAYGE9AIDWPADQnb0A4DU9AMCJPQAgnr0AABI9AIBqvQDARz0AgII9AADPuwBgHj0AACC5AEAuvQAAZrwAAOg6AMC3PQDAbT0AwF69ACAEvQAAObwAYD+9AOAjvQAYB74AAFo7AECePABgIb0AAAs8AADquwBgvz0A0KC9AICZPABAoD0AALk8AIB3PADgB70AgHa9ABC/PQBAl7wAwBk9AEC/PAAAKT0AoAQ9AMDHvAAAWbwAQHu9AOAaPQBAo7wAAAy7AADaOwBAaL0AAEQ9AICaPAAASzwAgJk9AHCNvQAAdb0AANk7AMAqPQCABjwAwK88AAA/vQAgmL0A4Jk9AIAZPADgfb0AAIA9AMD/vADgsr0AAJ+7AIBWPADgHT0AALK8AADTuwAAWb0A4Ia9AADoOwAA7DoAMK+9AABMvADADD0AAPu8AMC5PAAAoDwAcPE9AIAZvABwzr0AoIs9AMCDPACAzjwAIHM9AGANvQCQjD0AIJA9AKBgPQAAFT0AAJK7AAC7uwCgRz0AwKO8ACBdvQAgOD0AgEG9AIA2PAAAaLwAQDw9AOAmvQBAlrwAwDm9AEB8vQAA+zsAwIc8AACguQDgDT0AwMQ8AAAYPADAKT0AgB48AABGPAAADjsAwIW8AKCDPQDAY70AACy9AIBnvQCAmbwAABC7AICUPAA4KT4AgJC8AAAgOwDAhDwAYEw9AABUPACAPD0AQF+9AIDJPQAAwLkAoEE9AECDPACAKT0AABi7ACBnvQDgCL0AoBG9AICuPACwgT0AANm7AACrvAAApDsAADa7AEAVvQAAiDsA8Ku9AEDJPQCAO7wAAIm8AGCAvQBgmb0AIHe9AIA3vAAAxjsA8IG9AJCgPQAAVLwAQIe9AABiPQAANTwAAFQ7ABCRvQCgBb0AAHa8AIBZPACAmb0AAM88AEC6PACAJLwAACS8AIBJPAAAiTwAgKA8AIDavADgsj0AwI28AICRvADQjT0AQKq8AMDOvADA3jwAAJY8APCVPQBgfD0AQIK9AOAKvQCghL0AoDE9AADFuwCA7zwAQJU8AACIOgAAdrwAwC49AAAEvAAATLwAAEi8AAC7uwBgpj0AoCY9AMCLvAAAZTwAAKA7AABFPACAeDwAAFs8AAD6OwAAMDsAYHq9AACLOwBAez0AAEK8AEDyPACA2LwAIA09AACKPABgKL0AwIW8AAAkvAAA17sAABM8AMCfvABAoD0AgB08AIBXvQAAvDwAAGA5AMCmvACgNL0AAE+8AIBcPQBA9jwAAKe7AMDfvABQtb0AAIw6AACcOwAgrr0A4Eu9ALCFvQAA3LwAkKI9AACwugCAprwAgDO8AAAwPAAgSz0AgM08AEBOPQAAZbwAwPm8AEBaPQCAK7wAAHw9AED5vAAQrL0AAIa7AIAdvABgCT0A4Jc9AECaPADAcb0AIBw9AAAZvQBAjj0AQGy9AACEuwAA+bwAAMw8AIBovQDAIr0AgHO8AEDQvAAgLL0AwDG9ACANvQAAsLkAgOE8AEBVPQBgoT0AAEC5AMCNvABARL0AAFE8AACTPACAQ7wAAHW8AAASuwBALD0AgII8AGAmPQAAzrwAgPi8AMCePQAAhDwAYC09AMCSvABgCj0AgPc8AHCUPQAAzLoA8IW9AGCuvQDgCj0AYDA9ACCdvQDgWz0AAG28AAAAuQAAUjsAAB28AIBAPADQrb0AACw8AGAQPQBgRz0AYCS9AIBGPQCARjwAQMW8AAADPQCgr70AgMq8ACBevQCAkb0AAMs7AMBHPQCANT0AwEg9AID+PABAFr0AALy7AADOvADQjb0A4DY9AAAdPAAAwDoA4Je9AICuvQAA0bwAQPK8AODCvQAAqLoAwHg9AICIPAAArjsAYEo9AKA2PQAAiDoAALy7AEC2PABAIT0AwMC8AOARvQAAC70AYMa9AKBivQDAWj0AAGA7AEA0vQBgHj0AAKs7AEDdvADAwLwA4Bo9AOBWvQDAzzwAQBQ9AAB2OwAAdjsAgCe8ADCtPQDAK70AAC67AABOPQDAsLwAAMA5AEAkPQBgRz0AgFU9AADcOwAAOT0AYDo9AKBmvQAA2TsAIF89AMBtPQBwxT0AEIw9AICdvAAQrL0AAEg8ABCqvQAAbTwAwD69ANCbPQAAhr0AwPO8AACQOgDAGr0AAHo9AIC0vABAgTwAAF+8AEDvvABAZL0AwD49AGBGPQAgGb0AQBE9ALCAvQAADTwAAOE7AADNuwCAGD0AYAs9AHCtvQCARTwA4EM9AABDPQCgET0AQIy8AACauwAAiLoAAOA5ACAyvQAAubwAAEQ8AIB7vACAtbwA8I29ANCKPQBgKb0AoEe9AMBKPQDgaT0AYHW9AIAAPAAAiLoAwJ08AAAqvAAATz0AwFM9AMC4vAAA4DwAAHw7AABMPAAA17wAAOK8AOAqPQCAbL0AcIg9AMCEvAAAaTwAgLI8AIBbvQBAyrwAgL68AKAbvQAQqr0AoAq9ACBxPQAA3TwA4HG9AMAMPQCAEz0AcOs9AACSvQAA5TwA4AQ9AMCRvACgg70AgB88AKBVPQAAZ7wAYDS9AIA4PQCgpr0AQBo9AKAnvQBAoLwAgOA8AEDkPAAAszsAANC5AEAiPQDgfb0AYBC9AEDCvACAWzwAgFU8AECvvACgYz0=","chunkHash":"7185fd7a071d08450fd086d3d4e81e47e803c5b4bcc8637b427ea7913001a7b5"}]},"file:///teamspace/studios/this_studio/scripts/visualize.py":{"hash":"c9f2cd787cb580fa91f63ccb1c668cefd3102b39a0027e91706f6e8537fb35fb","entries":[{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def __init__(self, output_dir=None, cmap='gray', mask_cmap='hot', alpha=0.7, figsize=(12, 10)):\n        \"\"\"\n        Initialize the visualizer.\n        \n        Args:\n            output_dir (str, optional): Directory to save visualizations. Defaults to config.VISUALIZATION_OUTPUT_DIR.\n            cmap (str): Colormap for raw images.\n            mask_cmap (str): Colormap for mask overlays.\n            alpha (float): Alpha value for mask overlay transparency.\n            figsize (tuple): Figure size for plots.\n        \"\"\"\n        self.output_dir = output_dir if output_dir else config.VISUALIZATION_OUTPUT_DIR\n        os.makedirs(self.output_dir, exist_ok=True)\n        \n        self.cmap = cmap\n        self.mask_cmap = mask_cmap\n        self.alpha = alpha\n        self.figsize = figsize\n        \n        # Create custom colormaps for mask overlays\n        red_cmap = self._create_transparent_cmap('red')\n        self.mask_cmaps = {\n            'red': red_cmap,\n            #...\n```","range":{"startLineNumber":23,"startColumn":0,"endLineNumber":45,"endColumn":0},"embedding":"AABtvACgUz0AAN+8AMByvQAw6b0A4EO9AKAdPQAA7LwAIFq9AAAgOgAAOLoAIK09AIBmvAAw+b0AgB49AACMPACgp70AICA9AMCyvADATD0AQGw9AMAvvQAAHrsAwEs9AAAGvAAAQjsAwNG8AGCsPQAA47sAIEu9AGAsvQCAlbwAQIG9AADVvACg1b0AwNy8AAAmPABAqrwAgDq8AIDBPACA6TwAsL29AID+PADAZj0AQIY8AIBRPQDAvbwAgDO8AACvuwDApbwAgEY8AADEPACAYTwAAFu8AMC4vADA4rwAQA69AAAWvQBQhL0AABs8AGDCPQBAwDwAQGU9AIDXPAAAwbwAAAA7AACGOwBAIL0AIIM9AICovADAYT0AAKO8AKAXvQAgRb0AAL68AABhPQAAX70AgNk8AEB7vQCQlr0AgAq9AIBtPAAAAD0AAHy8AADIuwDAZr0AADq9AIDOvAAACLsAgB69AICqPAAAQT0AgCe9AEBnPQAAkLsAcJI9AADEOwDAjr0AgGM9AAAauwDACj0AAKm8AMD8vACgDz0AgO88AICJPACA/bwAAFO8AEDfvABAbD0AAI47AADMOwAA6D0AEKu9AMAHvQBAEr0AQIC8AAB/vACASTwAQLm9AIAIvAAAa7wAYEg9AIAdvACAW7wAgLq8AIBqvAAAlzwAAPu8AECLvAAA+7sAAOC8AICEPQDAvL0A4JC9AEDKvACgFL0AAFM8AOBNvQAguj0AwJA8AAAdPABwmT0AAN68AAC0ugCAXj0AYJq9AMAgPQBASb0AgLg8AMC5PABQ8j0AAJg9ACgJvgCA67wAAEs8AAC9vADApbwAwBY9AAC7uwAAuDoAAHE8AIBevADAJr0A8Iy9AKA5PQBgU70AwN68AEBgvQDADr0AAIo7AACiOwAglz0AoIW9ACDCPQCAs7wAwLA8AOATPQDAIb0AAKy6AADBOwBAOL0AgBa8AEA8PQAgub0AIJc9AMDWPADAI70AABY8AMBqvQAAWjsAAGQ8AIAOvQCAcD0AADA9AECEvQDgFz0AADi9AACcPAAAEjsAgMG8AACjOwDAGD0AUIy9AMCZPABgc70AgIM8AIB6PACgSD0AAIM8AIBJvADAM70AYHw9AMCwPADgD70AALc7AEASvQDgQD0AQMK8AIA6vADA7rwAAKg8AMClPAAAfLsAAHE9AIBLPAAADzwA4EG9AMDQPAAgmz0AgMs8AAB0OwBAkTwA8ME9AOBuvQAgi70AACQ9AAA/PACgXz0A4Go9AACMuwDgHz0AAFi6AMC6vADAjj0AAIg9ANCivQBAvrwAQDe9AADdOwCgFz0AgDI8AADmPACALb0AoDS9ANCCPQDgvL0AAJi8AOBJvQAgbb0AcIQ9ADCpvQCgHL0AANW8AAB4ugBgSz0AgGi9AECHPADAb70AAGk9AKCAPQCARr0AwKs8AADlOwAAKzwAIAA9AAA4PADAij0AYCA9AEAjPQBQu70AgC+8AACCPQBwiT0AAHO8AADougCAtbwAgE48AIA8vQCgbr0AgGo8AADgvADAw7wAANW7AMA+vQCAMDwAwMs8AGAHPQCAIzwAgFW8ACBUPQDgKL0AABS9APDmPQDAubwAAB48AEBIPQBAND0A8Is9AOCNPQBAszwAEIm9AMCqPQCAPDwAAN87AAD4vADgWD0AcLo9AAAvPQAAVLsAYNK9AACSuwCgXD0AAM08AMCHvAAAHbwAgDW9AHCivQDA6LwAIDK9AMCTPADgHL0AgLS8AMC2PQCAB7wAwDi9AOATPQBApLwAQEo9AADpPABAxb0AQIC9ADCJvQAA+rsAgIe8AIChPAAAk7sAAO08AOAfPQCAsLwAAPG8AED8vAAgxb0AAD48AIDXvAAAkTsAAFi8AEBvvQCAS7wAwII8AKB7vQCAXrwAEI89AMCbvAAATrsAgHA8AMCDPABAmbwAANm8ACBrPQCgKj0AoFK9AIBMvAAAnbsAIJS9AOC1vQBglz0AwOq8AABHvQDAnDwAAC47AABlvADAhz0AACE8AAD9uwAAQbwAoAc9AIBUvAAA57wAAAw9AMDzPACQib0AkLG9ANChPQBAfT0AABw8AAAovACAdT0A8I89AAAyPQAAHLwAwP88AABivADAtDwAAN07AED1PACAKz0AwIc8AEDNvAAARr0AgOE8AFCuvQAAUzwAAE67AIDqvADAwbwAAPY7AAB+vQDQn70AALM9AACcvAAAA7wAAJE7AIAEvQBgKL0AgK+8AAA+PABgLr0A4FA9AABQvQBACz0AoCo9ABCJPQCA/DwAAGM9ACBHvQAAhrsAANK8AMA5PQAALD0AAGO8AICtPAAAibsAQHe9AHCWvQAAVDwAgIy8AMAQvQCA0LwA4Ca9AKAPPQAADbwAgPi8ACBLPQBA9jwAQIC8ANCMPQAAbLsAAHg7AACKOwAAyjsAAPi7AAA3vQCgyT0AADI8AECVPABgGL0AwIS8AEB6PQDAh70AgIw8AAAnvABAcj0AAGC7ACCRvQCAD70AELu9AABCOwAA2bsAACC6ACAOPQCAJbwAQNa8AMCCPADA0TwAENc9AEC9vQDAo7wAYEM9AHCbvQAApDoAgCQ8AACVOwAANrwAQLG8AGA7vQBAdr0AgKY8AABuvAAAgrwAAEA5AECKPABgRT0AgHy8AAAiPQAgD70AALq8AAAQOwCAFjwAoAQ9AKCLvQAgMj0=","chunkHash":"09776eb117ff83df5f811b6198b8ec418da288ddb021a8346b7cab6e69d385b8"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def __init__(self, output_dir=None, cmap='gray', mask_cmap='hot', alpha=0.7, figsize=(12, 10)):\n        #...\n            'blue': self._create_transparent_cmap('blue'),\n            'green': self._create_transparent_cmap('green'),\n            'hot': plt.cm.hot,\n            'binary': plt.cm.binary\n        }\n    #...\n```","range":{"startLineNumber":45,"startColumn":0,"endLineNumber":49,"endColumn":9},"embedding":"AIAWvQBARz0AgJI8ACBUvQAgk70A4HG9AEA7PQAAq7sA4EW9AACMuwDAQT0AsI49AADAugDQur0AANA6AACmOwBAIL0AABs8AIBQvQBQpT0AwOY8AMCrvACAlzwAQJ48AAAevQAAMT0AoIy9APCbPQCAHzwAgDs8AFCWvQAAQbwAALy8AABbvQDg0L0A4AK9ACApPQAAlzwAABI7AABlPADQgz0AAIm9AKBXPQAA0TwAQIo8AOAtPQAgCL0AoFS9AMAFPQCAlDwAIAQ9AIBDPQCAAT0AACs8AMBsvQBA2zwA8IG9AAA5PABAFL0AAOu8ACBlPQAAuzsAwCU9AOATPQAAsLoAAEY7AGA0vQCQnb0AoIM9AMASvQAgJD0AAMa7AGBNvQBA+LwAQO88AIDNPAAAPL0A4Gc9ALCevQAAPjsAIIS9AGA+PQBA3DwAgDm9AADfuwDAor0A4Gi9AECovAAwg70AQDu9AICGvAAwlz0AoEi9AAAsPQAALLwAiA8+AACBvACQiL0AEIw9AACzOwDgBj0AAKu7AMCdvAAAGT0AAHA9AACKPQCgaj0AANw7AAAGvQAgdj0AAHI8AACyuwCwvT0AgNK8AADPuwCgT70AAH88AADUOgAgaz0AIHm9AAAVvAAgC70AQOw8AEAevQCAMDwAAOI8AADLuwAADjwAAGY7AABfvADA4bwAgFS9AIAHPQDApL0AkL+9AADQugCgDL0AMIc9AOB7vQAQCj4AABE9AGBfPQAAQT0AgIa8AACruwDghD0AANq9AAC8PQDAKb0AsJs9AMAxPQBQpT0AIBQ9AFCmvQCgmr0AAHy8AAC8OgAA4jsAAIy8AIBavAAA27sAgC+8AKAcvQCAqLwAQLK8AGByPQCgQL0AALy8AGBDvQCAT7wAAEK8AAChvADAQD0AYFe9AOChPQAABrwAwBc9AAAEPABwwr0AQOY8AACvuwBgD70AAHm8AMAvPQCAS70AgK88AMBePQDAuLwAAJ28AEAdvQDgCj0AQCo9AAAJvACAiz0AAFC8AIBYvQBA4TwAAOG8AEDwvACAlTwAwM28AGCFPQAA4jwAwHm9AAAVPAAgnb0AQFo9AAAmuwCAOD0AICU9AACLOwAA4TsAQCM9AAAjPACAJrwAwCm9AABeOwDgcD0AAEC5AMCJPACgBL0AgAu8AICUPACATrwAAOQ7AGBUPQDAjzwAoEK9AIAZPACAhD0AwIs8AMCcPACAkDwAkKE9AACIugDQqb0AgH88AACIvACgHD0AYBM9AMCavADAhTwAgDM8AIBnvADAEz0A4CE9AJCQvQCA4bwAAF29AADwuQDAtzwAYCY9AACXOwCgcr0AAJW8AAAyPQBQ7b0AAMA4AIDRvAAAZb0AwEA9AOBrvQDwhL0AQBq9AACHPACABT0AgDK8AKADPQBgfb0AAC88AMDRPABQmL0AoGI9AIALPAAAkDkAQKQ8AIATPADgbT0AYD49AABKOwDgsL0AAJg6AIBaPQCAQz0AoEa9AABIvQBAm7wAICE9AKAmvQAArb0AIGo9AAAYugCge70AAMG7AOBBvQBA27wAQNM8AICcPACASbwAAO28AAAFPAAgXb0AAMe8AHCjPQDANr0AQKQ8AMBdPQDgGT0AcJY9AMACPQCAojwAwG+9AECqPQAAljwAAEA5AEDTvAAA6DwAAKQ9AOAYPQAA9rsAIDm9AGB8vQBQsT0AAIU8AAAmvQAAvDwAsLy9AGB1vQCAdzwAQKW8AIDbPADA77wAgJC8ALDJPQAAtjsAkIy9AAAhPQBAuDwAQES9AABcPABQz70AYAa9ALCuvQDgV70AQKo8AEDPvADAnjwAcJE9AECGPQDAA70AAL28AABAuwBAur0AAOs7AACMOgAA37wA4Hy9AMAnvQDAobwAwM88AOBevQDAqDwAUIw9AEDZvABA4TwAAJw6AIBDPADACr0AgEO8AAC5PABAXD0AALe8AMDKvACgIb0AEIC9AEB0vQAQlz0AwAE9AICJvQAACjsAALA7AACMugCgGT0AADu8AGBhvQAAQ7wAgNA8AABFvACgNL0AgME8AMCNPQDQn70AgIS9AKBNPQAAyzwAQKE8AIADPADgVD0AYCg9AIBwPQBABr0AwPg8AEC7vADAlTwAAJC8AAAwPQCA5jwAYBk9AACAPACwj70AgBQ9AGA+vQDAijwAANk8AEDRvADAMb0AQIK9AOAHvQDglL0AkLs9AAAUuwAAILkAgG88AIDMvAAASLwAAKI7AICePAAgTL0AQIE9AADavACABT0AwBk9AIBHPQBgDz0AQIM9AABrvQBAgjwAAHS7AADMPADgSz0AAPi7AABuPAAAPr0AQIe8AADWvAAAaDoAwJQ8AMBvvQAAqDsAYJu9AOCGPQAA2DsAQKy9AAA6PQCAjjwAACW9ADC0PQBABr0AgD88AAADvQAAYT0AACw7AIAWvQDgzD0AANS6AAAgOwCwh70AALy8AAC8PQDAfL0AIEM9AIAEvACgdD0AQIG8AMAcvQAASLwAQJ68AADjuwAA6LwAAOM7AECCPQAArLsAAOe8AECpPACAfzwA4Mw9AMBIvQAAm7wAQEg9AKCKvQCAErwAAEI7AAClOwDAjLwAQL+8AABWvACgqb0AgGk8AIA0vAAA9bwAgEE8AAC5uwBAKz0AEJi9AAAHPQAAnrwAQBG9AABOPACABrwAgBc9AICdvAAAArs=","chunkHash":"dd26313c32c0718fb1521fe751fb3febfac0506dc892c09605474b7766f7566a"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def _create_transparent_cmap(self, color):\n        \"\"\"\n        Create a transparent colormap for overlay visualization.\n        \n        Args:\n            color (str): Base color for the colormap.\n            \n        Returns:\n            LinearSegmentedColormap: A matplotlib colormap.\n        \"\"\"\n        if color == 'red':\n            color_tuple = (1, 0, 0)\n        elif color == 'green':\n            color_tuple = (0, 1, 0)\n        elif color == 'blue':\n            color_tuple = (0, 0, 1)\n        else:\n            color_tuple = (1, 0, 0)  # Default to red\n            \n        # Create colormap with transparency\n        cdict = {\n            'red': [(0, 0, 0), (1, color_tuple[0], color_tuple[0])],\n            'green': [(0, 0, 0), (1, color_tuple[1], color_tuple[1])],\n            #...\n```","range":{"startLineNumber":52,"startColumn":0,"endLineNumber":74,"endColumn":0},"embedding":"AIBDvACABj0AAIa8AMDVvAAANb0AIFy9ACBlPQCALLwAUIq9AACcOwAA3DsA4J49AIBKvADAxLwAAMw8AGAtvQAAXLsAwII8AIATvQCQhT0AoCG9AKA4vQCAA70AEJI9ADCdvQAAGDsAQIa8AGAuPQBATb0AAGQ7AAAMOwAApbsA4Je9AGAhvQCQ3L0AAGc8AMCkPABAjrwAAFi8AIAxPABAizwAAJC6AIBAPQCA6DwAcJs9ABCqPQBA/bwAwF29AIBQPAAALj0AAB08AACZPAAA+7sAABK9AADTuwDAWD0AQMq9AEARPQDgdb0AAIS6AMAmPQCAmrwAoDW9AAA0OwAAjr0AIAQ9AEBYvQBAHL0AgFE9AEDDPAAA9jsA0Iy9AID4vADAj7wAALS6ACDIPQAAW70AgHk9APCpvQBAZL0AwCq9AACfuwBgMT0AQN48AIDyvADgcL0AAJC7AAAHvADA3TwA8Iq9AACEvADAvTwAQIK9ACBePQCA+bwAoMA9AAAAvADAMr0AoEM9AACNPABgGr0AgIq8AOCBPQAgHj0A4Ig9ACA6PQCAvDwAADM9ACApvQCgFT0AgMU8AACbvACgqD0AgDy8AIB4PADgLL0AgHS9AECgvADgMz0AYC29ACBAvQBgdb0AAOY8AACOuwAAJ7wAgAe8AOAZPQAA4LwAAGo8AABwugCgbj0AIMO9AACTPACAgb0A0L69AAChvAAA5DoAgFc8AECVvAAAkD0AAAS8AADtPADAcz0AwIK9AOAPvQAgeD0AwEu9AKDFPQCALTwAkMY9AABMPADAZD0AgG88AAAyvADgN70AwH69AMCUPQDAFj0AIAw9AEDFvACAQrwAoBU9AECNvABAVr0A8IW9AABIOwDwhL0A4CO9AICmvQCAjb0A4BI9AAAgOQCAXjwAgMG8ABDmPQAACrwAoEI9AAAgvAAACLoA4Cc9AAATvQDA3rwAgGm8AAA4PQAQlr0AQMs8AFC6PQBA3LwAQJO8AIBXvQBglb0AYBU9AIBbvQCAjDwAQE29AKBgvQAAELoAAIi7AACiOwBAAL0A4Eq9AIAHvAAAwLkAAI69AMCmPACAdrwA4Fw9AKAYPQDACD0AAGo9AMD7PADASz0AgEG8AEAsPQAAMrsAQFa9AAB+uwAQmz0AgOw8AMAQPQBgbL0AwBO9AABoPAAADLsAgHY9AEDZPACAPj0AoFO9AADGOwBg4D0AAF88AMD4vADAbT0AIAs9AMD8PACgzL0AAOw6AAAougDgTz0AAEw9AEDHvABgDz0AgHW8AAB7vQDA9LwAQCY9AGAevQAANDwAAGi6AAByOwAAhTwAADk9AABMvAAQr70AwBA9AMDvPABQ2b0AgFe8AMBQvQCgnr0AQJ89AAAKvQAQuL0AQHW9AMAyPQCgYj0AQN28AIAnPAAABLwAQIk9AECCPQDA2LwAANC6AAB4vADgAT0AAJw8AOA5PQCA3DwAUIg9AADCvABgqL0AAMg6AICwPAAAcT0AoB69AACrvQCAX70AQAc9AAC0vAAoDL4AAN88AECZPABAx7wAAPa7AACivAAA5LoAgM88AEAkPQCAljwA0Ka9AEAfvQAArb0AAIi7AABHPAAAz7sAgAQ9AHCiPQCANrwAQJw8AOAjPQCgbb0AEI29AICePQCAILwAAJq7AACtOwDAIT0AAKY9AAAQPAAAuzsA4C+9ABCFvQBwhD0AADk8AMD2vAAAnzwAoGm9ANCavQAwtj0AkJG9AAAZPACABrwAoBk9AMCFPADAoLwAgDe9ACAIPQAAPz0AAOC8AECQPQCgqr0AwOG8AKCLvQDgo70AAFy7AACIuwDA/bwAAJw7ACBCPQAgXb0AwEO9AGAnvQDAv7wAAD28AECFPAAAgrsAYB+9AIA8vAAAGDoAwIU8AEC0vQAAvbwAQGE9AACmuwAAlLoAAFY8AEC+vACA+rwAAMI8AIBePABA0jwAAFg7AKAivQCAcLwAwGO9AABnvQAAxT0AANs7AACMOgAAFjsAAMc8AIAzPQDA8zwAgHK8AMAdvQAAUjsAwPI8AAApvADQq70AAPc7AADePACQtb0AgGK8AEA3PQDwij0AwHs9AIBCvAAAbjwAwBM9AMCsPADAZb0AYAy9AACXPAAAkbwAAKC6AMDRPABAHz0AAHE9AAB1PAAAxLwAoAk9AGCSvQAAYLsAYFg9AADguQDAk7wAAEW9AADbvABgW70AYAE9AMC/PABgBz0AQLU8AOBcvQAAD7wAgHq8AMDpvACgQ70AQKE8AAAhvAAA0LwAoBc9AKB/PQDAOT0AcJE9AKAVvQAgAD0AQC+9AAB9PACA1LwAgB28AEDePABAzL0AgKu8AMBQPQAAn7sAYGA9AMDnvABA0zwAgLW8AOAZPQAAYTwAgB+8AAA4PQDgQT0AAGY8AEBUPQDAiL0AAJs8AICLvQBAvTwAgGU8AACsuwDgcz0AgIO8AMAvvQCQn70AAGy9AKAXPgAA8DkAQNA8AACUOgAAsD0AABI7ALCivQAA4bsAwJ48AIAJPQAA/DoAAD08AEAgPQCA7LwAAA47AMBQvQAAYLsAgF49AOA4vQAANDwAAIw6ACAdvQAAYjwAAFe8AEClPAAANLwAQL+8AIAJvABgZL0AgKo8AIC0vAAA4rwAAEq8AGBtvQAAyjsAEKW9AAChPQCArLwAAOI7AEDlPAAAAz0AgBE9AIAHvQBgET0=","chunkHash":"cfee4a20cb844565ad2d522385c1f33c8275b6bb9f0ccf2496fada1174661800"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def _create_transparent_cmap(self, color):\n        #...\n            'blue': [(0, 0, 0), (1, color_tuple[2], color_tuple[2])],\n            'alpha': [(0, 0, 0), (1, self.alpha, self.alpha)]\n        }\n        \n        return LinearSegmentedColormap(f'transparent_{color}', cdict)\n    #...\n```","range":{"startLineNumber":74,"startColumn":0,"endLineNumber":78,"endColumn":69},"embedding":"AEAXvQDAHj0AAD47AAAevAAA6rwAYH29AOBQPQDAmrwA0K+9AAD4OgCgWD0A4Hc9AAByOwAAUr0AAOm7AACEOgDgB70AgPM8AKAMvQBAez0AgA68AKALvQAAlbwAID49AKBNvQAAIrwAIDu9ACBqPQAAEL0AgA28AMDXvABAkLwAYFa9AECQvQDQwL0AwOa8AID/PACADz0AgKy8AIBFPADAvDwAoDq9AIBTPQCArDwAIB09ABCjPQAgN70AIBC9AIABPAAgNj0AgL08AKAxPQAAwDkAwIa8AOA8vQBAVj0AwLO9AACKOwDQlb0AQPC8AAC7PAAAYrsAwJK8AABWPADAH70AgH48ACAovQAAXr0AAH48AEALvQCAOzwAwBm9AAA9vQDAurwAwLw8AGBgPQAAe70AQMo9ANCEvQDA7LwAAIy9AEADPQAA/DwAwPe8AAAAOwBwtr0AwIq8AAAWuwCABDwA4CG9AIBfPACAoTwAQDW9ACBhPQAALjsAGAI+AABZvAAQg70AYJE9AIByvADAiLwAALs7AED4PACgND0AcIo9AFCCPQAAXz0AAAo8ACCWvQBgXz0AgHI8AAAmPACAAT4AAMy8AAAEPACAuLwAoDG9AECAvACgTD0AUI29AMALvQBAMb0AALU8AAAJvQAAQDkAAEw7AAAgOgBAx7wAgJ+8AAAJvAAABzwA8L69AMCsPADAJ70AgLW9AADYOgAgFb0AwMI8AABuvADQuz0AAEc8AGAuPQBgdD0AADK9AMCAvADAPD0AcLG9AHD8PQBAwDwAIKY9AECQPACQgT0AAE08AEANvQAAx70A4B29AGBlPQBgCT0AAHi7AADAuACgF70AoBo9AEDCvABAUb0AQGK9AADQugCgUL0AADK9AICEvQAgXb0AABQ7AACavAAAOLsAwAi9ACDAPQAAi7sAgB49AADVvABAXL0AgC49AAD0vAAAHDsAQN28AGAePQCAkLwAgNE8AHC4PQCgGb0AwLa8AMCTvQAA1rwAAGc9AICPvAAAWT0AwPS8AOAPvQAA3jsAgHa8AABEuwAA7jsAICG9AMDBPAAAeDoAIIS9AABdPAAAS70A0K89AIDbPADA/zwAIA09AICAPACAij0AgFA8AIDCPACACbwAoBW9AIB/PADA0z0AAI07AIAoPQAAYL0AQLq8ACAyPQAA+bsAAHQ8AKAGPQAAIDwAgHS9AGAUvQBAtj0AYEE9AIDYvABAdT0AQAs9AMChPADoAL4AABo8AICAvACATj0AgEQ9AGAvvQDAizwAoAq9AACwvAAA3LsAQDE9AMD3vAAAObwAwJa8AACYOgAAFbwAQCI9AMDSvADwjL0AANK7AGBgPQBApr0AgIw8AGAAvQDwh70AYDw9AMBNvQDQmr0AkKy9AEAXPQBARD0AAG+8AADeuwDA+bwAAMk8AADEPABQlL0AABc9AAC9uwAAgTwAAOw7AEAaPQDAzDwAgL49AMDrvADA2b0AAIS6AEBdPQCgST0AAFy9ABCYvQCAGr0AgE89AEDxvAAQ5L0AAB09AIAEPACQj70AgFc8AGA3vQAAbjsAgAu8AIDFPAAAGLwA4BC9AOAhvQDQh70AgDG8AIA1PQBgQ70A4EI9ACCVPQAAArsAQCo9AEC5PADA/7wAUIS9AKA9PQAA3jsAAKK7AABGvQBA/TwAQJE9AICnPABArDwAQPq8AGBLvQBAcj0AgII8AGBQvQDAxjwAMMO9ALCFvQCgVD0AYJC9AIAPPACA4bwAYAE9AEDpPACAh7wAkIK9AAAEPQDgXD0AcJG9AIDiPACAr70AgBW9AACXvQDgXr0AgG88AAAmPACARLwAYCk9AMAiPQBAFL0AwB+9AACzvACge70AQIK8AOAzPQCACb0AoHO9AIDzvADAz7wAgIY8AIBTvQCApbwAQIc9AAA9vAAAWjsAgFm8AAD0uwBA7bwAAKo7AAAGOwCAfzwAANS8AOBCvQCgFr0AoB+9ACAtvQBQpz0AwMw8AACpvAAAhLoAgBI9AAA1PAAABzwAQKa8AGAvvQAAxzsAwOw8AABQOgCQjb0AAFq7AIBbPQBQub0AwLW8AMD6PADAQz0A0Jk9AADOPAAgQD0AQCw9AIBtPQBgGL0AwKW8AIBgPAAAursAAK68AMCTPABA5DwAYCs9AABpPAAAsLwA4Cg9AOB8vQAAsLoAQPk8AAAXvQDAC70AkIG9AED6vACgUL0AIJQ9AABoPADAjDwAgMo8AGBsvQAAjTsAAKk7AAACuwBgb70AAEA5AMCzvAAAVjsAAMc8ACBwPQCghz0AkAM+AKBcvQBA4TwAAAa9AACYugBArTwAAN68AADvOwBgpb0AwNO8AMDBPACApLwAIBU9AMB/vQAA6bsAYGy9AECWPQDA0DwAEIS9AEBfPQCART0AgMG8AJCOPQAAz7wAgKA8AAAFvQAgMj0AwMQ8AAA3vQAwuT0AAHi6AMDqvAAQyb0AQNe8AGgGPgBAnrwAwMU8AADJPADAij0AgMO8AEDFvACAfbwAQKQ8AIBJPQAAOLoA4BI9AAAaPQAAmzsAgEi8ACA2vQDADz0AIKs9AOBIvQAAP7wAgP08AAD7uwAA3rwAwKy8AIBMvADAj7wAwH29AIAIPADQhb0AAAM8AABqvADgRr0AACm8AGAAvQAA4LoAsJq9ACBwPQCAQrwAgFC8AICiPAAAersAwK48AIBLvABAOz0=","chunkHash":"ea918defe93fbb7fb5236d3c72181596f7c60b9508e25f326c47f692e4f4a083"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def _tensor_to_numpy(self, tensor):\n        \"\"\"\n        Convert a PyTorch tensor to a NumPy array.\n        \n        Args:\n            tensor (torch.Tensor): Input tensor.\n            \n        Returns:\n            np.ndarray: NumPy array.\n        \"\"\"\n        if tensor is None:\n            return None\n            \n        if isinstance(tensor, torch.Tensor):\n            # Move to CPU if on GPU\n            if tensor.device.type != 'cpu':\n                tensor = tensor.cpu()\n                \n            # Remove batch and channel dimensions if present\n            if tensor.ndim > 3:\n                tensor = tensor.squeeze(0)  # Remove batch dimension\n            if tensor.ndim > 2:\n                tensor = tensor.squeeze(0)  # Remove channel dimension\n                \n            return tensor.numpy()\n        elif isinstance(tensor, np.ndarray):\n            # Remove batch and channel dimensions if present\n            if tensor.ndim > 3:\n                tensor = tensor.squeeze(0)  # Remove batch dimension\n            if tensor.ndim > 2:\n                tensor = tensor.squeeze(0)  # Remove channel dimension\n                \n            return tensor\n        else:\n            #...\n```","range":{"startLineNumber":81,"startColumn":0,"endLineNumber":114,"endColumn":0},"embedding":"AABjvQCwo70AEL+9AJCUvQCAZ7wAQAW9AOCevQCAoTwAAAI8AEBEPQAAvLoAYOc9AIDgPABgbL0AgMI8AIDWvAAAO70AAGc8AAB0vQDAkTwAgCi8AECLPABgLD0A4BS9AABaOwAAfTwAAMa7AABZPAAA5DoAwNY8AACSvQAAkrwAAH+8AIBkvQBAYr0AwGC9AACDOwCAW7wAQIi8ANCQPQAAUT0AQO48AADEvACAMz0AAJO7AGB3PQCAo7wAQCS9AGANPQAAf7wAwE49AOBePQAAgLoAQCE9AHCrvQBgKT0AALK8AADVuwCAfbwAADA7AECmvAAAnLoAsMs9AEAyPQBA8bwAAII8AKADvQDAgbwAALM8AACdPACAubwAoA09AMCuPACA5LwAcJQ9AMC1PQDglb0AYFs9AMCsvAAAIr0A4As9AICSPAAAHLsAoD89AGCAPQBAh70AwOG8AMCCvQAA7DoAAMs7ACATvQCwgT0AcPW9AIAAPACAlrwA4D89AIBfPABAc70AIGU9AAASuwAAljwAkJA9AEAPvQAwhj0AQGA9AOBOPQCgZj0AAEi6AMD5vADAzD0AACa8AMDbPACAgD0AAJK8AMDDvADA0LwAwHI9AAAKvACgJz0AMJ29ALCBvQBgMr0AwEI9AIAmvQCAnzwAQI08AIDDvAAAm7sAwOA8AACIPAAABzwAEI29AAA8OwBAd70AgGW8ANC/vQAA+bwAAMa7AAB5PADg7j0AANm7AAA+OwCADj0AQEs9ACCLvQDwkz0A4Hu9AIAuPQAAybsAADY9AADwOwAAVzwAADw8AIAAvQAgDb0AAHS9AKBwPQDAGD0AYCM9AMCgvAAADrsAAF+8AKCqvQAAEDwAIAy9AECdPAAA77sAwLi8AMBGvQCQur0AoBu9AID3vAAA+bsAALe7ABDIPQAASLwAgCa8AADYvQCASLwAQOu8ALCovQBA9LwAgEW9AIADvQCgML0AQFM9AADoOwCAi7wAQDG9AICjPACAojwA4DQ9AKA6vQCghj0AQJm8AKAGPQBA8TwAgDW9AACzvAAAdTwAwAM9AABHPQCAjzwAAAi9AGCpPQCgXL0AwEE9AIBMvABgdz0AQLc8AEDIvAAA6bsAgFi8AIB5PAAATDwAII+9AIBKvABA1D0AkMK9AEDVPABA4TwAMJg9AADMOwAAF7wAQLe8AAC6uwAApLwAAEC9AIAiPADgVj0AAGw8AAACPABgJb0A0Ik9AMBSPQAAl7sAoK09AAD8ugBAjzwAAAY7ACACvQAgRz0AgEU9AACXvACAybwAAEw7AEDIvAAgn70AoBs9AAA5vAAAVLwAgIA8AADsvACggr0AwFu9AKASPQDQnL0AAJ87AIAVPQAAMzwAILo9AADuvAAA67wAQMI8AADkugAA5LoAgHO8AOAMPQAAcbwAkJQ9ABCVPQDger0AgPc8AABguwBgpb0AAOA5AAAoPADgGD0AILY9AAAtvQAATL0AgG+8AEDOPABAzrwAgEw8ALCIvQBgUL0AAIk8ACB0vQAg/L0AwAc9AICfvQAAorsAwJU8AMCfvACAkbwA4GU9AADguQCAJT0AgE68AGA7vQCwsL0AAJ88AIBtvADA1bwAgA+8AIA8vQAgPz0AQCc9ANC7PQCAP7wAgBK8AID/PADAFj0AgCI8AKBAvQBgPz0AAPe8AACaPQDA0zwAQLq9AJCUvQCAOj0AIDU9AABrvQBAzjwAwLa8AIA1vQDAJj0AAIS9AADCOwAA3bsAQOI8AIAYPACAE7wAAAG9AIAKPADA9LwAgHq8AABsOwCAmbwAIFu9AAD+OwCAtbwAABE8AMCBPACAAD0AcJU9ACAaPQAARj0AwJS8AACQugCAg70AAGA7AIAsvADACD0AALe7AEDqvAAAv7sAQDo9AAAbvgAAJrwAoBI9AEDnPACAsLwAYF89AAAPPQCAYz0AgKU8AMBAvQAAILkAwE69AED7PACA0DwAgE+9ABDjvQAAxTsAoDq9AIBrvQCAf7wAAKC5ACB9PQCA1DwAwBK9AABovABAqjwA4HY9AHCFvQAAVLsAYGw9AMBbPQCA8bwAgA+9AKBAPQAA+zwAQPO8AKBsvQCAETwAkIE9AADnOwCAHTwAQL49AECvPABAqr0AQJA8AMB/PQDQwz0AQLk9AIDQPACAIL0AAFM8AMCyvQAAYDsAgDi8AABRPAAgc70AwL+8AKC5PQCAUr0A4EE9AFDevQBgET0AQKK8ACANvQAA27wAgLc8AAC2uwDAB70AgAU8AADYPACA/zwAALK7AMBvvQAApLwAIB49AABZPAAAKDoAwCo9AHCFPQBADD0AgMu8AIAvvABAnr0AgGm8AIAOvQBAgjwAQLI8AKBPvQAgVD0AkIC9ACBRPQAgGz0AADg6AMAJPQBAibwA0MO9AIC5PAAAfDwAQKI9AIBKvAAgez0AACU8AEC/vACAsTwAQNQ8AMD8vACAezwAQIa8AOAZPQAAjrsA4Is9AIDePACACz0A4DC9AMAZvQCAijwAIAw9AEBuPQAAALsAALS7ACCuPQAAXb0AkL+9AACpPACApLwAQNk8AAAavQAAkDsAgAE9AABUvADASb0AAPA5AICKvAAAzLsAAI88AADZOwDghr0AAAg8AMAWvQBA/bwAAOA5AEA7PQBgdT0AACu9AIBKPADAgjwAwMg8AADKuwBAsb0AoFk9AMCCPAAA6Ds=","chunkHash":"50ee9e307c4d7d2bf5bafcb150e41e5930522f0dd8e5f4f09d43f3cf3381ee02"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def _tensor_to_numpy(self, tensor):\n        #...\n            raise TypeError(f\"Unsupported type: {type(tensor)}\")\n    #...\n```","range":{"startLineNumber":114,"startColumn":0,"endLineNumber":114,"endColumn":64},"embedding":"AJDRvQAAxzwA4JW9AKCwvQBAKb0AAC29AGBYvQAAgjwAsMO9AACMugAAZ7wA4IQ9AACsugBAXr0AACm9AMC1PADAb70AQAQ9AOB/vQBA7DwAQNg8AIA+vADAAD0AQN+8AADOPACAWTwA4D69AKDFPQCAZTwAoAk9APCEvQCAc7wAAHy8AGBavQDAAb4AYEW9AECavAAAdTwAAAE8AAAoOwAwnj0AwO28AIAovQAAID0AAO+8AFC3PQCA9LwAYC+9AADguwDAkrwAAAI8AACUPAAA0bwAQIE9AAB2vQAAUjsAIGO9AABzPADgJ70AQMK8AMDHPABAgjwAIC49AAD+PAAAMr0AwM48AAA3vAAgfL0AgNk8AECIPADAorwAAJI8AADCOwAAGDsAQEA9AIB1PQAAfr0AQHA9AACKOwDgur0AgAe9AMDAPACAvrwAgCc9ALCIPQDAhb0A4E+9AACHvQAA4LwAwAq9AAAyvAAARD0A4BS9AABOOwCA4bwA4II9AIBVPQAQ5L0A4DM9AAAGuwAAaLsAoLA9ANCEvQAwvz0AoCs9AFCVPQBgRT0AAM68AECMvADg3D0AwDI9AGAWvQCAWD0AQJi8AIDmvABwjb0AgIk8AIBRPACABz0A8IW9AEDvvACAjjwAQEc9AKA0vQAA7DoAgNI8AKBEvQCgdD0AAOc7AGAIPQDASb0AgHu9AOAaPQCA67wAgLC8AJCHvQAAprwAwAk9AAAAOgCgDD4AwJY8AICmPAAAxzwAQAg9AOAJvQDgPj0AsJi9AIDePAAAxTsAYEE9AAB6PABwsT0AALI7ADCNvQCQyL0AYHa9AECDPABgcD0AQLk8AIDLvAAAlzsAAHC8AEA1vQCAOrwAQKS9AMA+PQAA/DoAUIG9AADwvAAgVr0AAOq8AAA4vABAwbwAAEA6AMDkPQCAJL0AgAk9ACB5vQAACr0AgFI8AEBovQDA07wAgA69AIBOvADgJb0AcKQ9AAA6vADAjbwAAFM8AABBvQCAnzwAIEE9AACguwBA5j0AAF67AECTvACA87wAYFW9AEDDvACAID0AQIc8AIBcPACASDwAAKa8AAA6PACAvL0A4GI9AACNOwAAsDsAgDg9AADpvADAvTwAgD88AADNOwCgJT0AQLC8AECyPABwvT0A4FW9AAAsvAAAvTsAIJE9AICSPACALDwAwPA8AMDKPAAgQL0AADG9AAA6uwDAiT0AAFk8AIBPvAAA0zwAEIU9AOAmPQAAvLwAgHI8AICSPACAS7wAAGA7AABUuwCAUj0AAD47AACBOwDAkLwAgJ88AAA0PADAD70AADE9AABougDAp7wAIEs9AABjvACgY70AoFu9AMDbPADQzr0AABO8AAAbPABAj7wAoK49AGA1vQCASr0AgCa9AOBfvQAA77sAAPA5AADiuwCAgbwAgMQ8AAAyPADgN70AAC67AIBKvQAwnb0AgEw9AADIOgCglD0A4IY9AABkvABwgb0AQBg9AAC4OgAAYrwAwOW8AGBAvQAAGr0AAII7AMC2vAAQj70AoC09AACiuwAA/bwAAOs7AIB9vQAAB7wAoIE9AADQOgCgFD0AgMG8AABFvABAz70AAEY7AADEuwCAG70AAMs8AACiPAAgdz0AQLg9AEAePQAA1rwAoHm9AMBfPQAAQD0AgBS8AMAKvQBgJD0AgFU8AHCDPQAAdTwAoFC9ACAEvQBAEz0AIA49ALCZvQCAfTwAYF+9AADcugCA2DwAQL28AIAPvADAHL0AgAA8AIBKPQAAl7sAAIa9AADTuwBAwjwAgEq8AKAXPQAgeb0AoCW9AEDIvADgb70AAE28AABsPAAAjzsA4Ms9AABDPAAA+DwAAPG8AMCDvAAAW70AAPg7AAC7uwBAmDwAYE+9ACCqvQAAmLsAAL+8APCyvQCACzwA0Jw9ACBaPQAAnLwAwBs9AGBkPQBAvjwAACm8ADCHvQAA+TsAABi6AAApPAAAgDgAgN68ACC7vQBgQj0AAFC8AMBpvQAAZrsAIBG9AKBnPQAgaD0AYAi9AGCBvQCA7zwAgGQ9AABCvQAADrwA0Is9AOBxPQDAr7wAAIW9ACAOPQCgdD0AAEC6AAB/vADAQD0AQE09AIA3PAAAcLsA8LI9AAClOwCAXjwAAAA5AAAkPQDg2z0AUJI9AMCXPACQkL0AAEA7AIDdvQAA3jsAAFq8AAArvAAQlb0AoGC9AMAaPQAARr0AQHU9AFCgvQAAGb0AYDu9AACoOwAAq7wAAFU8AADGuwAASL0AoBg9AACEOgAgij0AgEw9AAAwvQCABDwA4G89AMDsvADwiT0AAGQ8ACAQPQCgKz0A4Ia9AIBdvADgAL0AAFW8AIBAvAAA7rwAwL08AOA6vQCgUj0AoFq9AOBiPQAA8DkA4Cy9AACuvAAAezwAkKq9ALCZPQAA/DoA0I49AAC9OwDAXD0AAGA9ANCTvQAgBT0AAM27ACAHvQCANbwAQIo8AGBhPQBAe70AQIY8AMDwvABAlzwAgIW8AIBHvQAAwDwA4FM9AMCnPAAAPDsAQLY8AACjOwAAg7wAYN29AICCPAAACbwAYOM9AAAtvACAATwAgPY8AECpPADAz7wAwOq8AIBLPAAAV7wAQAe9AEDlPACAd70AgFy8AMC1vACg1b0AAJC7AECtPADgHj0AYEW9AAAoPABAlTwAQPs8AAA9PACAirwA4Io9AACAuAAAALs=","chunkHash":"cb503ee87b76c722ae255611a02f3d0199bac3b35d9b6e4d4ff1373156c82ba7"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def _normalize_array(self, array):\n        \"\"\"\n        Normalize array to [0, 1] for visualization.\n        \n        Args:\n            array (np.ndarray): Input array.\n            \n        Returns:\n            np.ndarray: Normalized array.\n        \"\"\"\n        if array is None:\n            return None\n            \n        # Check if already normalized\n        if array.min() >= 0 and array.max() <= 1:\n            return array\n            \n        # Handle empty array\n        if array.max() == array.min():\n            return np.zeros_like(array)\n            \n        return (array - array.min()) / (array.max() - array.min())\n    #...\n```","range":{"startLineNumber":116,"startColumn":4,"endLineNumber":137,"endColumn":66},"embedding":"ADCAvQDAmTwAoAu9AADAvADANL0AQHu9AIDxvACgWb0AANK8AACQPQAAhzsAgKU8AAC6vAAAhDsAYHg9AECePAAA77sAgE09ACCLvQAA5TwAQIG8AGAavQAAzzwAoFa9AEDfPAAAnbsAAGC5AICiPQDgOT0AAPU8AMBQvQAAgbwAAJA6AIBRvADQ3r0AQF29AMDDvACAbbwAAE67AIDqPADANj0A4I+9AIBTPAAAYjwA4GI9AEBiPQBA3DwAAES8AOBMPQDA0rwAAIG7AECxPQDgCz0AAMY8AMA1vQDQkT0AwBy9AADJPACANr0AgMI8APCaPQDgND0AYFw9AMBDPQAAZr0AgCw8AGA4vQCgZ70AQG89AKACPQAAebwAAPI7AAD4OwAAZrsAAEU9AGAWPQDgS70AwLO8AAADvQBgZ70AoCW9AACHOwCAED0AgCQ8ANCoPQDwo70AAAI8AMDTvAAA4rsAQOw8AABeOwAAkzwAeAW+AADQOgAABLsAwEY9AABqPACAU70AcK89AIBRvACA2zwAQIU9AMA4vQCQgD0AQBY9AABTPAAAKz0AgBM8AEAgvQDgaD0AgAs9AACHOwAAmT0AwGK9AIBzvACAMr0AwKQ8AICTvABwiD0AQJa9AOCQvQBALr0AoAs9AFCmvQBAy7wAICW9AICkPAAA0LsAQO+8AED1vACALz0AQO+8AIBdPQBwkr0A0Oq9AADjvAAAAAAAgI48AIBbvADQCD4A4CE9AIBgPQCgez0AQAC9AAAvvQCgxT0AsKC9AGDjPQAA7DwA4C49AOBAPQAgAj0AAEU8AABAOQDA17wAALm7AMDKPQAArzwAABi7AID5vACAFT0AAJU7AKA1vQAAIr0A4Bi9AIAPPACgXb0AoBi9AAD+vACAjb0AIOm9AMAuvQCALjwAAGu9AOC7PQAAZLwAAM+7ABCAvQDgbb0AYGI9AADMOwCA4rwAQLC9AACiuwAAb70AYBw9AAAOOwCgH70A4KG9AABSPAAAKDoAQDQ9AGCxvQCwpj0A4Bs9AMCjvAAACzwAgCG9AABtvACAJz0A4BO9AADTuwAAGLsAAFm8AMC0PABwu70AALQ6AAAIOgAAfz0AQBw9AKAxvQAAeDwAgLg8AIABPACAqDwAIBC9AECmvABQlD0AAOE7AADSOwDAmrwAgG08AIBEPQAAwTwAAKq8AIAnvQDAAT0AAPe8AICrPACAzTwA4K09AAByPAAANT0AoAw9AECxPAAAyTsAIF09AMCGPABAvbwAUIM9AACsOgBAcj0AgHU8AECxvAAAijwAAIe7AMBZvQDAuzwAANG7AEDWPADgQL0AAGg6AIBSvQDAQ70AAIS9AADovACgkr0AwKK8AAAsPAAAxzwAoKU9AACIvQDAorwAQNW8AIAJPACgE70AAM87AMDoPACgYb0AQI09AEBvPQDAHb0AgFo9AACJvAAAQjwAADO8AEDtvACAaTwAUJs9AGBBvQAQgL0AQJy8AKA6PQDAjz0AACI8AAAovADgsL0AQAQ9ACANvQCQBL4AgEm8AMCaPABAO70AANg8AEC4vAAAYrsAgG49AEDFvADACD0AIDy9AABQPADAab0AAI27ACB8PQDgc70AAHm8AADMOgBAgj0AADM9AACOPQBgIT0AAD68ABCYPQAAwrsAgBW8AMDfvAAAwTwAAJE7AMBNPQBAGj0AMLi9AOAdvQDgPD0AwOo8ACA2vQCALDwAgBq9AOBUvQCgJz0AIMW9AAByvACgbb0AAAY8AIB1PADAyjwAoJa9AACnPAAgbL0AAJ+9AIAZPADAWb0AoHy9AADbvADgGT0AIEE9AAA6vQCgAr0AYF09AADBOwBAgjwA4C+9AECovABwvr0AgOc8AECrvAAAgbwAwKS8AIBvvQCgFr0AAAY7AJC3vQDAZb0AIA49AIAuPAAAkTwAgN88AIAsPQAAUTwAAGA7AICMPABAmjwAgOm8AICUvAAABzwAAIi9AKCKvQCAmz0AYBG9AAAlvACgHr0A4Ey9AABougAwsj0AQI28AAAMuwAA+TwAgGY9AADgOgAgJb0AYA49AKCfPQBAvLwAgDS9AOCMPQAAdz0AQES9AKBEvQDAWz0A4FE9AMB8PQAA+jwAAIs9AACuPADAHb0AAB47AIATPQBA8zwAIFQ9AMDQPAAAkLwAAKe8ACAFvQBgGj0AoGa9AEDCPADAdr0AgA49AOBEPQBwxL0AYGo9AABSPAAAYDkAANk7AOAJvQDA0LwAQKo8AABovACAo7wAQLo8AIDovAAgQz0AgHw8AIC9vACAK7wAgMU9AIA9vACACT0AwIs8ALCXPQBAKT0AQOO8AEDyvAAAvL0AgNS8AADuuwAALbwAAHa7AIBdvQAALbwAYBi9AOA9PQCAHDwAgHO9AIDBPACAgjwAwBu9AECzPQBAVL0AYCM9AGAcPQDAkzwAABc9AAAfvQBgMj0AQMG8AEC6PADAkbwAQLo8AIATPQCAETwAIEk9AIACvADg8z0AwFc9AHCLvQAApDoAgD48AIChPACArbwAUJS9AKAGPQAAqTwAAIW9AIADvQAwhD0A4C89AMCuvADAMr0AABK7AMDIvAAggr0AwEY9AADhvACAObwAAHG8AEDiPADAf70A4DA9AOAuvQAAvDoAwKC8AADzOwDAOj0AQK28AMCYPADgKL0AgHQ8AIBqvADAg7wAcIA9AIByvAAA2rs=","chunkHash":"2d8872a65af74357e5327c73668f7bf59e56bd0f9c4340b74fce3235199f4683"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_slice(self, data_item, save_path=None, show=True, title=None):\n        \"\"\"\n        Visualize a 2D slice from the dataset.\n        \n        Args:\n            data_item (dict): Data item from the dataloader (__getitem__ output).\n            save_path (str, optional): Path to save the visualization.\n            show (bool): Whether to display the plot.\n            title (str, optional): Title for the plot.\n            \n        Returns:\n            tuple: Figure and axes objects.\n        \"\"\"\n        # Extract data from data_item\n        if 'image' in data_item:\n            # 2D slice data\n            image = self._tensor_to_numpy(data_item['image'])\n            mask = self._tensor_to_numpy(data_item['mask'])\n        elif 'volume' in data_item:\n            # Extract middle slice from 3D volume\n            image = self._tensor_to_numpy(data_item['volume'])\n            mask = self._tensor_to_numpy(data_item['mask'])\n            if image.ndim == 3:\n                mid_idx = image.shape[0] // 2\n                #...\n```","range":{"startLineNumber":140,"startColumn":0,"endLineNumber":163,"endColumn":0},"embedding":"AIAMvAAAdzwAgG69ADCrvQDAQ70AAKi7AABAugCAbTwAADG8AEDjPAAAgz0AAPY7AGBCPQCAk70AAHo8AGATPQAANLsAwHQ9AMDevABAoz0AgOI8AIACvADgiz0AgLK8AAA+vACA0TwAAKQ8AADaPQAA8rsAAKS7AJCcvQCAWbwAABC7AKA3vQBAg70AAEA6AMDGvADA87wAgLW8AECuvAAQ1T0AIE+9AIAcvAAgSz0A8Mk9ACAKvQCAs7wAwK28AABCPAAAEzwAgBM9AOCxPQAAQrsAANe7AIBsvACgoT0AoBm9AECaPABgCL0AQBe9AABtPQBAgjwAgOE8AODSPQBApLwAAF67AIA/vQAAkDsAgHa8AAA/vAAANjwAAK88AADRvAAA4rsAEIQ9AIDLvABwpL0AgIM8AMCMvACwmL0AANy7AKA+PQCAFrwAwHU9AECPvACwkr0AYBi9AMCiPAAAljwAIE+9AAC0OgBAwTwAUJW9AIBhPADAJD0A6Ak+AADiuwDQoL0AgDQ8AEDbPACABTwAUJ09AAA+vQAgFT0AgAA9AACpOwCwnT0AoF09AAA2uwAABL0AAHW8AAAeuwDAdj0AAMe8AIBnvQCABTwAwMc8AEBFvQAAhDwAgFU8AAByvQCA5bwAAEC5AAD3OwCAZjwAwIu8AJCBvQBgUL0AgL08AABmPAAAXrwAQJi8AACsOwCA2b0AwAy9AMCEvAAAo7sAYAS9AJCrvQDA+z0AYDq9AIBXPABAgz0AIFC9AAAyPAAgiT0AoM+9ABCsPQAAS70AIDo9ACB8PQAgjD0AsI49AJC9vQDYB74AAKi7AMAYPQAAUjwAALC5AACsvADQg70AgCS8AKB+vQCAJ7wAcKe9ACAHPQCQjr0AAK88AABDvQBwir0AoDa9AIA+PACAAz0AACW9AGCTPQAAi7wAAAO8AAAhvACgQr0AAB88ACCuvQBQlr0AAPm8AABqPABAVr0AgIk9AIAbPABAhrwAgO+8AIDgvAAAOrsAoD49AKAFvQBgSz0AgN+8AMDyvAAAEj0AAGi6AABJPQBA0jwAACW8AOAAPQAAY70AYH69AHCsPQAAm7sAIDQ9AEDkvACA4LwAgMA8AAAGvADA7DwAgIc8AIAavAAAgjwAgG08AABmvAAAWT0AoBk9AAC1OwBgBb0AAK09AEDiPAAAXj0AIAg9AAAFvAAAAjwAAOW8AAC4ugDArjwAIBo9AEBAvQAgXD0AoGk9AABtvQAANrsAgDC8AABIugAAZDwAAO88AACLvABgDj0AgCG8AECSPACwlT0AAFA6AADWuwCgBb0AAOC6AABAuwCgKT0AgCe8AKBCvQAwlb0AQN+8AOAxvQBAlL0AQAk9AKA+vQDAuzwAoH89AECnPADgH70AAH88AGAevQCAtTwAgIs8AAC8OwCgBL0A4Am9AAD9OwAADDsAwJQ8AABiPADwhb0AwIo8AIC2PAAAyjwAAIg9ACA2PQBAEr0AAGC8AABoOwAgBT0AYDy9AIB2vADgXb0AAI08AAAbvABgR70A4G49AOAIvQBAm7wAgJ48AACCvADApjwAAIa8AADYPAAAKrwA4C69AABSOwDAjL0AoEE9AOBDPQAADrwAAFc8AOAFPQAgsj0AoDI9AAAtPADADb0AMIq9AGBdPQAARj0AoAC9AIBSvADA2T0AAHU9ACAnPQCAoLwAAIi9AIAyPQBApTwAoLQ9AKAzvQBApzwAAEa9AAD8ugCAOjwAoMC9AEACPQAAyLsAQH+9AACYPAAAtbwAQNq9AOAxPQDA+7wAQGO9AIB1PQDge70AAAS8AHDbvQAgpr0A4Bu9AAC8PAAADj0AII09AADqvADgu70AQAu9AJCdvQCwo70AgAE9AACEOgBAwLwAAJW8ALgAvgAAYT0AQNO8AEDovQCA87wAkOc9AECDPAAARrsAgH88AGAVPQCAhrwAQO+8AADGuwDQmT0AAJg7AEC8vQAAF7wAAES9AEAhvQBgyz0AgEi8AOAgvQBAp7wAADe9AIAwPQAA7jsAgAm8AADpOwAA/LoAwFE9ACAyPQBAmLwAAD47AMCGPACgjL0AAKM8AMDoPACgIb0AAJ48AAAougBwij0AQFM9AADuOwCADLwAAI27AIAuPACgDr0AAHY7AACMPAAAdj0AgCi8AAD6vAAAKzwAAIC5AACnvQAAxjsAwHW9AIBIvAAAVb0AoB+9AABeOwAAgb0AoHw9AACXPAAALr0AgGC8AIBfvQCAHDwAYCc9AEBNPQCAozwAwB49AACbuwBgAj0AoGs9AOBOPQAApjsAAAY8AKBnvQBAGD0AQI88AOA7PQCgLL0AAPw6AACXvAAAEbwAgAa9AAD2uwCA9bwAwBw9AECZvACA+DwAoIW9AACiPQBABj0AgLW9AMCzPACAQDwAgGC9AMC0PACgeL0AgFY8AMCwPADAhD0AQDw9AKA4vQDgTz0AQJY8AIBevAAAGTwAABO9AIBFPQDgbL0AgGw8AADjvAAgUj0AQDU9AGBevQDAhbwAAJm8AACOPABAiL0AYC09AED6PAAAKTwAEKW9AAB4ugDgiD0AAAU8AICIvADgCr0AoHw9ACBhvQAA67wAAIS6AGB1PQAAILwAgNS8AAB+uwCAfr0AgKo8AAA2vQCgEL0AQI48AAAIPADQ0D0AIBC9AECoPAAAAb0AQI28AIA/PABAAr0AAJo7AMDIvABAgj0=","chunkHash":"10fed2516d9e5f6bad31ec2c1addc6e6d753ba31ee88b0913474dd7cdf7e67fc"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_slice(self, data_item, save_path=None, show=True, title=None):\n        #...\n                image = image[mid_idx]\n                if mask is not None:\n                    mask = mask[mid_idx]\n        else:\n            raise ValueError(\"Invalid data format\")\n            \n        # Normalize arrays\n        image_norm = self._normalize_array(image)\n        mask_norm = self._normalize_array(mask) if mask is not None else None\n        \n        # Set up the plot\n        fig, axes = plt.subplots(1, 3, figsize=self.figsize)\n        \n        # Plot raw image\n        axes[0].imshow(image_norm, cmap=self.cmap)\n        axes[0].set_title(\"Raw Image\")\n        axes[0].axis('off')\n        \n        # Plot mask\n        if mask_norm is not None:\n            axes[1].imshow(mask_norm, cmap='binary')\n            axes[1].set_title(\"Mask\")\n            axes[1].axis('off')\n        else:\n            axes[1].set_visible(False)\n        \n        # Plot overlay\n        #...\n```","range":{"startLineNumber":163,"startColumn":0,"endLineNumber":190,"endColumn":0},"embedding":"ACAUvQBACz0AYEm9AICjvQAwkr0AwEK9AAAZPACADTwAYDK9AACYugCAbD0AwPI8AAATvADAer0AANs7AOAlPQBAtbwAYJI9ACBfvQDAgT0AwBE9AACsvACA8jwAAAc8AIBdvAAgCD0AgAe9ANCUPQBA7TwAgBQ9AHC7vQDAv7wAgI48AADavADA/r0AgB+8AADMugCAFb0AAH68AABBPACwwj0AcJC9AABfPACAbj0AUK09AACTOwAAVjwAABy9AACmPAAAuDsAALk8ANCzPQCAUTwAAHY8AADivADghD0AIFW9AEDtPACATL0AQOi8AAC4PQAAdrsAQLM8ACBOPQAgWb0AAKC6APCfvQCA67wAgAg8AIB3PAAAqzsAAMm7AAB3vAAASLsAIDU9AACwOwDAn70AQK08AEDevACwnb0AwN+8ACA+PQCAW7wAgIc8AACIPADAbb0AYIe9AAAguQCAzrwAwNi8AEDJvACgBD0AcL+9AMDGPAAAITwAaAk+AAAguwAgEr0AgPM8AAAgPABAnjwAIFw9AEA7vQCAqTwAIEQ9AADcugCQrD0AgFg9AAAzvACAkDwAYBw9AAAJvQBQiz0AQPO8AMDCvAAAJjsAALQ8AAAyvQBgJz0AgNS8AMCYvQAARrsAgDE8AMDDvACAK7wAgAG9AMCRPACgMr0AAJQ7AIDMvACAIDwAIBm9AMAsPQDQvb0AcLy9AADyvADA3TwAgEk9AJC/vQBICj4AANy6AAAxPQAgTT0AQAi9AACFvAAgXD0AeAC+AECNPQAATLsAcJo9AKB3PQDghT0AwEI9AOBqvQBQ+L0AgKa8AOBDPQCAlzwAQG29AGAAvQBgDb0AICS9AOA8vQCAGbwA0K+9ALCZPQAgWL0AgM28AABTvQCAoL0AkKi9AKApvQCAyzwAAEK9AOBWPQCAJrwAAIo7AIBKvABQlb0AgNY8ALCKvQAAgbsAQEe9AIC0PACwjb0AQD89AMClPADAgLwAANu8AADFuwAAuzsAgP48AABWvQBgez0AQMA8AMA9vQCAtTwAQKS8AABiOwCgGz0A4Cq9AGCRPQAAkbwAgMm8ALCoPQCwgL0AQE49AMDUvACAqrwAoA89AMCCvAAAjTwAACc9AMAuvQCAiTwAAJi7AADyvAAA7jwAgNM8AIAEPQBAqLwAwBM9AIAmPQDgRD0A4Ec9AAAuPADA8jwAwK28AACAOACAbTwAoIE9AABlvACgHj0A4GE9AOBEvQCAc7wAgD28AIADvQAAfDwAQD89AGB4vQDQkD0AAFS8AABoOwDAOD0AgHk8AIBCvQBASL0AoBC9AAA3PAAgRj0AAMI7AAAnvQBQvb0AgNy8AIBgvAAAqr0AgMk8APCXvQAA8DsAgE89AADPuwDAOb0AQAS9AIDlvAAAIDwAADg7AADSPADgj70AgCa8AEAcPQCAAb0AwCo9AAC+uwCA87wAgGM8AGBAPQBACj0AwDI9AADKPABQiL0AAIy6AADsugCwiz0AQPy8AMDlvAAAZ70AANE8AACYvADAtL0AAFY9AAAqvQCgBb0AAKw8AKARvQAAFbwAgOG8AIDoPAAAeDwAwOy8AIAIPAAQkb0AAJi7ANCCPQAA4LwAALQ7AAA4PQCgaD0AYHQ9AECcPAAgEr0A8M+9AJCiPQBAEj0AgHy8AACZvADwqj0AwGU9AGBEPQBAxbwAIFi9AAANvQDAIj0AAME8ANCNvQBgBj0AoDa9AEDSvAAAwDgAsJK9ACBJPQAAVLwAQFS9AGAUPQAAtTsAkJq9AKAjPQAAPTwAgD29AEAXPQCAcL0AoHq9AABwvQCAM70AAHC8AAAwOgCAC7wAwIY9AABguQBAG70AAMW8AAAIvQBAfL0AoCM9AIABPQDA1bwA4E29APDPvQCACLwAAMy6AADPvQCAZ7wA8MU9AIBuPAAAXzwAAJo7AKA5PQAA+7wAwBS9AKArPQAwoz0AADA6AIBtvQDAtLwAQLe9AHCOvQCAdz0AAMO7AGATvQBAvbwAQJC8AABAPADALD0AADs8AABSvADA0DwAwBc9AEAMPQCgkr0AAEo8AIAmPQCge70AAKy7AEADPQAAn7sAgCG8AAAmuwDAjj0AAP88AMAsPQAAK7wAoFc9AABeuwCAkbwAgBW8AGAXPQBgFT0AALA8AKAGvQCAw7wAAPQ8AOCmvQBAKD0AQPq8AADcuwBA8rwAAH29AIBdPABQ2b0A8I89AMDGPAAAQr0AAKy8AEBmvQCAhrwAIA49AAA9PQDAkbwAwFk9AGBCvQCAPjwAYAU9AMCpPACA1zwAQDM9AOBYvQAAGD0AgP88AAD/PAAAtjsAAOu8AMCqvADAGL0AAEq8AADCvACAebwAAI48AKAmvQDAnzwAYE+9AOB9PQAAh7sAgIi9AADEPAAA3DsAYEy9AOChPQAASL0AAAA8AIAWvADgZT0AAAs9AECdvACw4D0AgAO8AAD2OwAgUL0AAPu7ABCKPQDgLL0AgDk8AKBKvQBAiz0AoB89AEA4vQAA7rsAAL+7AAA4ugAQj70AgBo8AEAEPQAARjwAIH+9AICOPAAgdj0AgII9AACEvADA5rwAwKM8AEAlvQCAuLwAAKs7AACLPADAlrwAwKG8AADGvABAjb0AAOc7AAC7vACALL0AAEA7AKAIPQBQmD0AsIC9AMDkPAAAD70AgJO8AIC6PAAAmzsAEJw9AAC0OwAgLD0=","chunkHash":"872807a903f234971bdac819958d62cf65f723443becc459c592b06dec095d6c"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_slice(self, data_item, save_path=None, show=True, title=None):\n        #...\n        if mask_norm is not None:\n            axes[2].imshow(image_norm, cmap=self.cmap)\n            # Create a more visible mask overlay with red color\n            mask_overlay = np.ma.masked_where(mask_norm < 0.5, mask_norm)  # Increase threshold to make only strong mask regions visible\n            axes[2].imshow(mask_overlay, cmap='autumn', alpha=0.7, interpolation='none')  # Use 'autumn' colormap which is more visible\n            axes[2].set_title(\"Overlay\")\n            axes[2].axis('off')\n        else:\n            axes[2].set_visible(False)\n            \n        # Set metadata in the figure title\n        metadata = data_item.get('metadata', {})\n        if title:\n            fig.suptitle(title)\n        else:\n            sample_id = metadata.get('sample_id', 'Unknown')\n            slice_num = metadata.get('slice_num', 'Unknown')\n            #...\n```","range":{"startLineNumber":190,"startColumn":0,"endLineNumber":207,"endColumn":0},"embedding":"AECfvABA7zwAYC69AACTvQBAtr0AAOi8AADMOgCALTwAoCq9AACgOQBgOT0AgPg8AAAWuwDAd70AgIU8AKBCPQAA57wAYI49AGATvQBAcz0AoFA9AIAZPACA+TwAAKM8AMCxvADgDj0AoAm9AIDbPQCACD0AAEI7ABCHvQCA5bwAgHA8AACRvACYCL4AgAe8AAAnPACAUr0AQMi8AADguQCQtz0AwIm9AEDCPABgnj0AwMI9AABBPAAAaDoAQGG9AICnPACA5zwAgAM9AMCXPQAAkbsAgJw8AECpvAAAlj0AYFC9AGAFPQDAP70AgLK8AHDCPQCAGzwAgDQ8ABCGPQCATL0AgJI8AEDhvQCAnbwAgG48AADCuwAAPzwAAGI8AMDYvAAAnDsAgPI8AACEPAAwuL0AwP48AACcvADQpb0AQIO8AAD7PAAAabwAABc9AAA6uwBgbL0AgHq9AMCVPACgKL0AoEC9AIBNvACArjwAELO9AACaPAAAPTwAICw+AECnvABgRb0AQO08AAAJPAAAljwAQB89AADdvAAA+zsAwAw9AABoPABQhj0AYH09AACauwAAWDoAAIc7ACBFvQDAVj0AIGi9AABIvACApbwAAMU7AKApvQCALT0AAAK8AKCnvQAAKDsAAKo7AAC+vACAwrwAAE+8AIBSPADAtLwAAIS7AMAovQAABzwAICa9AIA1PQCw0r0A8K69AEABvQAApTsAYDM9AMDEvQB4Bj4AAH67AEDuPAAgiz0AIAC9AEDYvABATj0A8PC9ANCFPQAA77wA0KM9AECEPQDgfz0AYAg9AACNvQBQ1L0AwAe9AKCiPQCA5DwAoFm9AMC8vADgCb0AoEK9AKA4vQAAZDsAQKu9ANCMPQCgWr0AgEG8AOB8vQAgY70AsJq9AECpvADgNj0AYEe9AJCFPQCACrwAAAQ7AAD4ugCAOr0AQCQ9ALCRvQBAjbwAQNi8AOAqPQAglr0AQC49AMDCPAAAEDwAgJO8AAB8OwAAHjwAYA89AEA8vQCwhz0AAAw7AIAUvQAAHD0AAPS6AACAuABAuzwAAAS9AEAsPQAALLsA8Iy9AGCAPQAAYr0AYDs9AEDSvABAyLwAoC89AAAWvABAjjwAgBU9AEAkvQCAjDwAgDK8AAAHvQAAKT0AwCI9AIAAPQAAmrwAwJQ8ACBqPQDAGz0A4Ec9AADFOwDA/DwAAJe7AIACvQDABz0AIFo9AAAMvACgCj0AACM9AIB6vQCATbwAgCy8AED6vAAAPDwAoFw9AEBuvQDAlD0AQJq8AAD9uwBAUT0AwOY8ACBwvQCAPr0AwC69AADPPACARj0AQLI8AICCvADAuL0AwOu8AEDIvABg3L0AwPk8AABwvQAA9DsAgIE9AIApvABwgL0AgCa8AECbvAAAzTsAAKg7AACTPACADb0AAPW7AIDlPABA2rwAQDU9AACSOwBAE70AgN08AIBmPQBADj0AwIs9AICmPACgSL0AAF67AAB8OwBAiz0AoCS9AECyvAAAab0AgCM9AIAnvABwob0AAG09AOBEvQAAa7wAAGC7AKAovQAAmDsAwJO8AAA5PQAAdzwA4C69AAAwPABAoL0AAGa8AHCUPQCAPbwAAEQ8AABEPQAAMz0AQC89AACkOgCADjwAkMG9AMCuPQCAuDwAAKC6AICXvACgsz0AAEk9ALCfPQAAMDsAgGy9AMAQvQDAjzwAQLM8AIAzvQCAmDwAYBC9AACuvACANzwAQHO9ACBvPQAAK7wAwCu9AMAnPQAAUjwAUJy9AIDpPAAAhLsAgDK9AAAmPQAgPb0AQFi9AHCsvQCAH70AAHG8AAA4vAAAZLwA4Ag9AACOOwAAR70AgMi8AMCuvAAgYr0A0II9AAC2PADgFL0AAC29AEDMvQAACDwAAJy7AIDhvQBAjrwAwNk9AACgOQCANzwAAI68AEAmPQCA5rwAgK68AOAGPQCAez0AgA+8AKAcvQDA4bwAEKm9ACBovQAAbT0AAAy7AGAIvQBAwbwAQIe8AMCXPADgEj0AADI7AMDovADAsDwAgA49AECDPADwnr0AQKU8AOAMPQBAaL0AAAU8AIAtPQCASTwAgCg8AAAePADgrD0AgAs9AAAPPQBAvrwAICg9AADQuwAAorwAAFI7AIAGPQCgBT0AwLQ8AIAAvQCgGb0AgBo9AJCsvQCAED0AAJW7AACMuwDAsrwAoIS9AECcvACgqL0AYF09AMClPADAi7wAwLu8AMBgvQAAorwAgGE9AIDMPACAdbwA4FU9AKAovQCApjwAoDI9AEDLPABAhjwAQL48AAAJvQDAvDwAAMM7ALCGPQCAv7wAgBG8AKAAvQAATL0AwBa9AIDJvABAmLwAgHY8AGA3vQDA7DwAQJW9AGBhPQCASTwAwJa9AGAiPQAADzwAIFm9AGCfPQAghb0AgHo8AECcvACgaT0AAOs8AEC9vABQ1T0AAHS8AACQuwDAGL0AAFC8AIC0PQAAMb0AgKg8AOBNvQBAhj0A4AU9AMBovQAAubwAAEu8AACKvAAAR70AAHE8AAAxPQAAEjwAYJG9AMC2PADAtjwAoIE9AIAFvAAAULsAACQ8AMDrvADAn7wAAKS7AABMPQDAk7wAAJC8AGBMvQCAgb0AACw7AMD+vADAt7wAANU8AIC7PAAgHD0AIHu9AEAGPQDAEr0AQL68AADaPAAAejsAgHc9AAATvABAAT0=","chunkHash":"e91908e89cb3a48857473f840378bb48d96b2fdd7ba87cd350d1ba8eee110ac8"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_slice(self, data_item, save_path=None, show=True, title=None):\n        #...\n            class_name = metadata.get('class_name', 'Unknown')\n            fig.suptitle(f\"Sample: {sample_id}, Slice: {slice_num}, Class: {class_name}\")\n            \n        plt.tight_layout()\n        \n        # Save the figure if requested\n        if save_path:\n            plt.savefig(save_path, dpi=300, bbox_inches='tight')\n        elif show:\n            # Auto-generate a filename if save_path is not provided\n            if metadata:\n                sample_id = metadata.get('sample_id', 'unknown')\n                slice_num = metadata.get('slice_num', '0')\n                auto_save_path = os.path.join(self.output_dir, f\"{sample_id}_slice_{slice_num}.png\")\n                plt.savefig(auto_save_path, dpi=300, bbox_inches='tight')\n                \n        if show:\n            plt.show()\n        else:\n            plt.close(fig)\n            \n        return fig, axes\n    #...\n```","range":{"startLineNumber":207,"startColumn":0,"endLineNumber":228,"endColumn":24},"embedding":"AAAHvACA1DwAgPW8ALC6vQDwnL0AwMi8AACtuwDgAb0A4FG9AADfuwBgfz0AAMc8AIBevABAsr0AALG7AEAWPQDA37wAIF49AIAAvACgaz0AkIc9AIDDvABAWT0AgCQ8AAAyvQDAHT0AYIG9AEDOPQDA9DwAgMY8AKAovQDAtrwAQMM8AECsvABg6r0AAGw7AAB0OwBwgb0AAPm7AEAGvQBw2T0AcJ69AKAEPQDwij0AMJk9AABKPACAeLwAgFO8AABJPQAAiDwAgKM8ANCBPQAABrwAgBE8AOAlvQAQij0AwHG9AMCGPACAxrwAABm8AOB7PQAApjsAYAA9AJCfPQDAgr0AwKc8ACDDvQAABrwAALE7AMCOvACAuDwAgBA8AEBLvQAA5bsAIA49AABLvACwur0AYD49AACnvADg2b0AAMe7AMBfPQAAULoAAII8AAAcOwBgdL0AkKu9AIBOPABAu7wAwBa9AACOvABAwDwAEPC9AAAUPACALzwAqCo+AICYvAAA3LwAgMk8AAAKPACAiDwAQCE9AOBuvQAAPTwAwN88AICXvABwgz0AIGA9AICrvACAEzwAADY7ACBYvQDgbz0A4D69AIAjvQBA37wAgJ88AEDfvAAA8TwAAA68APCivQCATTwAAMo7AIB1vAAABLwAgIG8AAAyOwAAwLsAIBQ9AIAfvAAASDwAAP+8AOBLPQDwqL0AwHa9AKB6vQAA07wAgEw8ALClvQDwEz4AgDQ8AAB5PADAFz0AABe9AACsugBAIz0AYNa9AIB2PQAgPL0AoCo9AGA2PQBglT0AwBY9AHCmvQAgq70AAOa8AKBgPQBAgzwAQBa9AIBlvABA47wAQKO8AECEvQCACDwAYIq9AEBKPQAAd7wAgCO8ADCivQCAK70AQH29AMC/vABgcz0AoB+9ACBhPQAASbwAAHQ7AAAavQDA8LwAQKE8ACBHvQDAhrwAIDK9AKAZPQDAZr0AgMI8AMDPPAAAcDsAgFE8AACJOwAAPDwAYDQ9ACBQvQCgRz0AgO68AID6vAAAQT0AgKC8AACkOgAgRj0AAEO9AKB9PQBA6rwAIEK9AEB9PQDgW70A4D49AJCBvQCALLwAoFE9AIDHvADAizwA4D09AMAAvQDAmTwAAHa7AEDcvAAAXj0A4As9AADkOgAAvrwAgHI8AADtPADAUT0AkIg9AAAsPADAnDwAAKC8AMDFvAAgBT0AsIg9AECqvADACT0AAC09ACCCvQAArrsAgDu8AACAOQAAALgAwDs9AOBUvQDwoz0AgLO8AAAQOgBQiT0AwKs8AMBgvQDALL0AQMy8AICbPABAyzwAQII8AAA2uwCgvr0AQPC8AIBkvACgzL0AgF88AKAKvQAAdDsAAB09AIClvACATr0AgCA8AAAYugAAqTwAACE9AMCIPADgQb0AAFa8AADKOwAAZrwAAPE8AICmvAAgLb0AwJw8AIBNPQBgVz0AUIQ9AMCePABAO70AAFu8AADaOwCgpz0AwN68AECJvADgYr0AgBE9AABxvAAAK70AQC49AIAGvQDAyLwAgIS8AAAcvQAAODwAgFQ8AADZPAAAPzwAwNC8AIAivADwqr0AgAg8AIChPQAArrsAAIC5AICWPACAZz0A4GI9AAB5PAAAJDsAMMa9ANCbPQDgBz0AAEA8AEDgvACAvj0AoE09AHCZPQAAWrwAgB+9AABivACAaj0AYD09ABCQvQAAzTwAgDK9AMD/vABA2jwAwA29AMB+PQBAjbwAADW9ACCFPQBAxzwAgE+9AGBqPQAAKD0AIG29AKBzPQBgPb0AAC+9AMDDvQAwj70AwJu8AAC8ugAAjTsAgIs9AAAoPAAAjb0AgA+8AKAnvQCwir0AQD49AEDbPACA3rwAwCK9AGDqvQAAobsAALC6AHCtvQAARrwAEKk9AMDFvAAAuDsAAPa7AGA6PQCAjL0AAHC8AACQOwBAPz0AAB48AGAgvQBAwbwAQJ29ALCIvQAAfD0AAAw8AEDGvAAA/bsAwBe9AOB1PQCgHj0AALi8AADNuwCAlTwAgJA8AAAKPADAlL0AAP47ACA8PQCQgb0AQAU9AACBOwAAbDsAgKM8AAB4OwBQoD0AQPg8AMCePAAAILwAgEs9AMC7vAAAYLsAgCO8AADUPADgGj0AAIu7AAAuvAAA1rwA4Cs9APDUvQDAkTwAAPO7AAAcvAAAe70A8IK9AIA+vACAcL0AAGw9AADIugDAzrwAwJe8AEDwvAAAbbwAoHk9AMBnPQBAEb0AUJQ9AMAWvQDAujwAgEE9AEDRPAAAPjsAwOU8AABpvQAAxzwAAPA7AOB9PQBgC70AQM28AGA2vQAAp7wAAIS8AOAQvQBAwLwAAJY8AOAfvQAAoDwAMLC9ACBPPQAAqTwAALu9AAAoPQCAvTwAwKK8AMBCPQCgUb0AYAE9AAD2uwDwhT0A4Iw9AOBsvQBgzz0AADq8AGAyvQBADb0AQJu8AECCPQDQor0AAIM8ACBPvQAAFj0AgKA8ACAkvQCAurwA4E29AEDNvACgL70AQJg8AIDrPAAAWrwA0Im9AIDKPAAAdLwAcJg9AIDZvACgMb0AgGU8AAD6vAAAmrwAAPS8AMCZPQAAkrwAwBq9AACXuwCAe70AAIS7AIDOvAAwir0AgPc8AIBbPQBATT0AIBm9AICePACARr0AgKu8AAAjPAAALDsAYAA9AACnuwAAFT0=","chunkHash":"6e4db526a1155618834ee125b59ebf43d3324ce243fa8ac77204a5da9501d8f9"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_volume(self, data_item, save_path=None, show=True, title=None, \n                         axis='z', frames=10, interval=200, colorbar=True):\n        #...\n        def update(i):\n            slice_idx = slice_indices[i]\n            img_slice, mask_slice = get_slice(slice_idx)\n            \n            # Update raw image\n            img_plots[0].set_array(img_slice)\n            \n            # Update mask\n            if mask_norm is not None and mask_plots:\n                mask_plots[0].set_array(mask_slice)\n            \n            # Update overlay\n            if mask_norm is not None and overlay_plots:\n                overlay_plots[0].set_array(img_slice)\n                masked_data = np.ma.masked_where(mask_slice < 0.5, mask_slice)\n                overlay_plots[1].set_array(masked_data)\n                \n            # Update title with slice number\n            fig.suptitle(f\"{main_title} - Slice {slice_idx}/{n_slices-1} ({axis}-axis)\")\n            \n            return img_plots + mask_plots + overlay_plots\n        #...\n```","range":{"startLineNumber":340,"startColumn":8,"endLineNumber":360,"endColumn":57},"embedding":"AMDXvACAXD0AQAi9APCxvQAw2L0AgPC8AAC4PAAATDwAUKW9AMCFvACgYz0AIEI9AKAIvQCAQb0AQLg8ALCCPQBAMb0AYJA9AIBvvQAAQj0AwNQ8AAAJvQCgRT0AADo7AIAzvACA7TwAgIa8AHCtPQDA3zwAwOC8AIBjvQCgFb0AQIs8AECwvAB4AL4AgB68AADMuwAAIr0AAFy7AABJvAAw3z0AAI+9AIBKPABAdj0AMMA9ACAEPQBAp7wAACG9AAD6PAAAvDoAwIu8AIDAPQAA/jsAAPO8AAD5uwBwjT0AcJG9AACvPACgEb0AQPq8AGCpPQBAtLwAQDE9AKBSPQDQl70AAA48AOB9vQAAuLwAAEo8AACAOwDAjzwAAIm7ACAwvQAA3DsAwPo8AABqOwDAXb0AgBI8AEDhvACAl70AoDC9AMCqPACAEbwAwAI9AABmuwAAYL0A4CS9AMCCPADA8rwAIIK9AKBPvQCAHT0A0Lq9AMDwPAAAzzsAcP09AICFPACA8LwAwJA8AAD/OwBAnjwAICM9AIDHvAAAVDwAIE49AEAPPQCgID0AwPo8AAAwvADAkzwAAJ47AAA/vQAgOj0AIKG9AMDAvAAAhrwAgAE8AADIvACAPjwAQAq9AGAxvQDAmDwAABi7AIAVvQDAgTwAgGW8AACGuwBA5bwAAOi6AIBWvABAvjwAAAy9AABoPQBAzL0AcJu9AABQvQAAOLsAwHA9AOCHvQCQEz4AgG68AMArPQCA+zwAQBK9AMCOvACgfT0AoMC9ANCRPQAAgLgAgPc8AKAWPQBwvT0AAKc8AFCNvQDAr70AwLC8AKBdPQCABj0AAJi8AAC8uwDAnr0AQPS8AOBavQAAwrwAIF29AGCgPQDgD70AAOG8AMBsvQDAr70AoG+9AMDtvAAgBT0A4Ge9AACsPQAAxrwAABS7AIAePADgRL0A4EA9AIB3vQCAR7wAYIy9AKAyPQAAVL0AAGQ9AIAtPAAA2DoAwIS8AADXOwBA/jwAgAM9ACAqvQBAwj0AgLG8AKAXvQBAyTwAAIq7AIBtPABgHT0AwIm8AABkPQAAeDoAAG29AABPPQBgWb0A4IY9AADkuwCABrwAgN08AIB3vADgET0AQHY9AKBhvQCAEbwAgK+8AEDGvABgfT0AAM07AED4PAAAdLwAQHs9ACBMPQBAWj0AIHQ9AEC5PABAOj0AAI27AAC+uwBgOD0AAGg9AADoOgDA5DwAIDY9ACAmvQCA5LwAgFO8AICGvACALjwAoIw9AABhvACgrj0AAIY7AACbuwBA7DwAAOM8AOBCvQCgB70AQNG8AOA2PQAADD0AAL27AIAsvAAQuL0AQCC9AAAhvQBw3L0AgAM9AGB5vQAAIjwAAJo9AECOvAAQib0AwAe9AIBGvABADj0AYAs9AABjPQDANb0AAEO8AIB6PAAAtLsAgEs9AABwOgAA/LwAgK48AMAsPQAQgz0AQGg9AEC8PACgH70AwIG8AAAuuwCgiD0AQKi8AACfvAAAbb0AoD89AIB3vAAgob0AAE49AAA5vQDgRL0AQJU8AAC6vABAjDwAAHm8AIA1vAAAnjwAgBS8AACquwCgYb0AQJg8AKBtPQDArrwAABs8AEA3PQCgAT0AwBM9AICbPAAAsLoA0JC9AIB4PQDAgjwAgIc8AEDzvACQrD0A4Io9AICLPQDA3rwAgEm9AEDGvADgPj0AoAI9AMB0vQBAqDwAwN+8AIBavAAAfDwAsJK9AGAnPQCAN7wAIBm9AKAnPQDAkjwAsIK9AECoPAAgCT0AwF29AKBvPQCgHL0AgBe9AOAevQCgVL0AAHI8AIBZvAAAsLoAIFk9AECvvADAZ70AAIe7AMACvQCAJb0AgOs8AMD1PACA/rwAAMG8AFC2vQAA47wAAGy7ALDDvQCAdLwAcM49AACBuwCAGbwAAJM8AAA8PQAAcbwAgMG8AGAKPQCgkj0AQLC8AKAbvQCApLwA4Ly9AFC2vQCgcz0AAJq8AABevQAA8LsAgHK8AIBdPABgBj0AgA49AAA3vACApDwAgNo8AMDRPAAwnr0AAAY8AKA1PQBgar0AgFy8AEDmPAAAyLoAgBG8AGAaPQAQuT0AYCs9AOAePQDAxrwAQIg9AIDQvAAAEbwAAAI7AADNPABAPT0AgPw8AABgvACgD70AwAc9ACDNvQBAGz0AgM68AIBFPABAQ70A4FS9AAD4OgAArL0AIHY9AIBOvAAAibwAAG67AIBFvQAA77sAAFU8ACAHPQCgQb0AAGI9AIBkvQDA4zwAYGk9AIDvPABAszwAAOg8AMBHvQDAtzwAAIq7AMCsPQCAjzwAAEm8AMD7vAAgOr0AgDK8AEA0vQAADbwAgLY8AAAXvQAA5DwA0Ke9AOBCPQAArjwAcLa9AADtPAAAOLoAAOy8AOCOPQAgAb0AQKE8AICbvADgWD0AIIM9AOBXvQAQhj0AAO67AAA4vADAQb0AAKS7ACBePQAgkr0AwAc9AICOvQDAdz0AwK88AMBuvQAAYLwAgEK9AAAgugDQqr0AQNc8AIB2PAAAa7wAIKG9AIAZPACgaz0A0Jc9AGAKvQBA3bwAAAU9ACBRvQAAWrwAAMC5AMDpPABAkrwAYAO9AEATvQAwvr0AAII7AECZvACAQL0AoBE9AEAIPQAAOj0AYHO9AKAPPQAARr0AQK28AMDAPAAAXDsA4Gw9AAC/OwDA+zw=","chunkHash":"4b0787ee6aae4bf29945c8e78f3a4036e34eb34607170c6b1846c155b3b6264e"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_volume(self, data_item, save_path=None, show=True, title=None, \n                         axis='z', frames=10, interval=200, colorbar=True):\n        \"\"\"\n        Visualize a 3D volume from the dataset as an animation.\n        \n        Args:\n            data_item (dict): Data item from the dataloader (__getitem__ output).\n            save_path (str, optional): Path to save the animation (as .gif or .mp4).\n            show (bool): Whether to display the animation.\n            title (str, optional): Title for the animation.\n            axis (str): Axis to slice along ('x', 'y', or 'z').\n            frames (int): Number of frames to show (0 for all slices).\n            interval (int): Interval between frames in ms.\n            colorbar (bool): Whether to show a colorbar.\n            \n        Returns:\n            tuple: Figure, axes, and animation objects.\n        \"\"\"\n        # Extract data from data_item\n        if 'volume' not in data_item:\n            #...\n```","range":{"startLineNumber":232,"startColumn":0,"endLineNumber":250,"endColumn":0},"embedding":"AACIuwAQjj0AgEq8AACovQCQiL0A4IG9AAA1PAAAOLsAAIi7AKA4vQCA6TwAYCE9AECQPACAp70AAKe7AEBiPQAA/7wAgCM9AABgOgDALD0AQNQ8AADwOwAAkT0AgO+8AAAquwAAUDsAgJ88ANCfPQAAwbsA4EG9AOAsvQCAAb0AANG7AMCbvABAqL0AANs8AADjvAAAEzwAAGi7APCXvQDwyT0A0Mq9AAAIuwDQiD0AUOE9AAB3PAAAMbwAAOC7AED4PAAAczwAAPS8AIAQPgBAUD0A4A29AIBDPACQjT0AYHm9AEDMvAAAHL0A4Be9AECDPAAA4rwAgBk8AMBwPQBA5bwAADi6AABXvQAAuTwAwLq8AAAEOwBAmjwAAM67AGAHvQBA1rwAAGU8AECJvADAir0AoAu9AMCmvQBAar0AwOa8AACQOwCAWb0AoCE9AMBIvQBghr0AAEu8AABSPABAgDwAgJi9AIBTvQAAnjwA4K+9ACBBPQAAHD0AMK09AEC1PABgYb0AQCo9AABuPACgDT0AYL49AADZuwBArzwAYFQ9AKA5PQBA6jwAgK88AIB6vADgVr0AAHa7AEC/vAAA1DoAYCm9AKAgvQAAvLsAAL47AMCOvADA0bwAwKu8ACAUvQCAMzwAQPE8AAC5PABgVj0AgFu9AIDLvAAgJ70AALC6AICfPAAgSD0AYC69AOB1PQBwF74AQCS9ALCXvQCAxrwAgEe8AABEvQCoED4AYDm9AEDLPAAAez0AADm9AEDOPACgsT0AwDa9AGCKPQCAjbwAgCk8AAC/uwBAzT0AAOI8ADCpvQBgSL0AANS7AABWPACAYT0AgGk9AIDfvABgg70AAEe8AKBevQCQgr0A4He9ACCPPQCA6bwAQKC8AACIvACwg70AACe8AAAgOgAAWjwAAAS9AEDoPQBAZr0AgDo8AAArPQBAmrwAgN48AMAxvQDgW70AMIi9AIAXPABA4rwAMM49AKAUPQCACrwAwJm8AADEugAA4DkAQKg8AAAgvQAAZD0AYEu9AAA3vACAuTwAgMC8AAD2PAAAarsAgEg8AGA4PQBANr0AYNq9AMAZPQCgGL0AQBE9AAAEuwBAJr0AAEq7AIDzvACAfTwAgH88AEC3vACAQrwAwJE8AACNOwAAnz0AAIw6AKA1PQBAs7wA4NA9AEAFPQCACDwAANQ8AEDjvACAKbwAYAi9AAC5PAAgHz0AALU7AMAOvQCAAz0AwGg9AGAPvQAAW7wAgFS8AID1PADA6jwAoMs9AOBBPQAgej0AANk7AMC2PACAVj0AQJg8AECDvABA7LwAACK8AABtPABAWz0AYCC9AMCQPADAOb0AYBO9AIA7vQCQzr0AQF09AMBpvQAAKTwAUJ89AAA2PACAsrwAAEM8AICJPAAQiD0AIFg9AACePACAYLwAAKk8AADHPAAAOLwAwLM8AIASvADgXb0AIJk9AEBoPQCAVDwA4Eg9AGAWPQAgEb0AwKc8AAC4OwCA/TwAQHO9AAB1vADAj7wA4Gw9AABQvACAPb0AQAM9AKB5vQAAAr0AAAA4AABLPAAAMDwAQJ28AIB0PAAAoLkAgFy8AEDgvACAXL0AQII8AKCvPQCAvrwA4G89AABovACAejwA0Ik9AEAcPQAAxrsAAIA8AADpPAAAIj0AwMu8AEAtvQDAsD0AQHI9AMAwPQBA+LwAwMa9AAD0ugBgNz0AQMA8AIBmvQAAf7wAICO9AABYOwBAvLwAsLy9AECHvAAAd7wAgPW8AIBivABgMz0AUIm9AADvPAAAoLwAQCe9AMA4PQBAPb0AQJY8AECsvQAgRL0AgFe8AACTPABAAz0A4BM9AAAQOgCQuL0AADi7ALCRvQDAGL0AgHo8AFCBPQDANL0A4AS9AOC6vQAASLsAwPe8AJDTvQCAX7wAoMc9AABpvADAi7wAAOC7AABwuwCACbwAgIS8AADqOwBQqj0AQKG8AAAhvQBgIr0AgHG9AABfvQBg0D0AAMC4AEAWvQAAnDoAgGq8AACPOwAAdTwAADM9AMCqvAAAxLwAwBI9AKA/PQDAqbwAAKE8AAClPABwt70AACw8AEBYPQAADLsAAKw6AOAKPQAAzDwAwH09AAAUPABgP70AoBE9AAB5PAAAs7wAADk9AADHOwDAbz0AAMk8AAANPAAALb0AoBY9AOCUvQAA0LsAQD69AIC9PACAcrwAAEq9AAD1OwBgUb0AUIk9AMDMvAAgIL0AgDQ8AAD7vACALrwAQGs9AOBuPQCAPbwAACk9AADMvAAgCD0A8JI9AIBJPABgMT0AQNI8AKAZvQAAwDwAADC8AKCZPQAAArwAgLK8AAAMvADAAL0AAM47AIA0PADAK70AAHA8AEDlvAAAPD0AAJG9AMDRPABA+jwA4Aq+AMCcPACAPrwAgKS8AGAgPQCA27wAAIc8AACRuwAAdzwAAPY9AMDbvADgQz0AQJW8AEBTvQCAIbwAgHq8AOADPQAQrr0AwOI8AKApvQAgED0AwCM9AEBevQAAG7wAgAW9AMCxPADAlL0AIAU9AKBIPQCAPTwAkOC9AADIOwCgBD0AwOw8AIDNvAAgJL0AwFQ9AHCSvQCgAD0AANA7AIDqPAAAJbwAYAi9AADYuwAQr70AgAu8AMCePABAu7wAoCU9ACAFvQBQrj0AQG69AIBhvADQmr0AADO8AACAOQAAG70A4Cs9AACQOgCAJD0=","chunkHash":"518764d11a9d710bbae5ef4765f9ff347715eb54bc99a7d39110739a6005238a"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_volume(self, data_item, save_path=None, show=True, title=None, \n                         axis='z', frames=10, interval=200, colorbar=True):\n        #...\n            raise ValueError(\"Input data does not contain a volume\")\n            \n        volume = self._tensor_to_numpy(data_item['volume'])\n        mask = self._tensor_to_numpy(data_item['mask'])\n        \n        # Normalize arrays\n        volume_norm = self._normalize_array(volume)\n        mask_norm = self._normalize_array(mask) if mask is not None else None\n        \n        # Determine slicing axis\n        if axis == 'z':\n            n_slices = volume_norm.shape[0]\n            get_slice = lambda i: (volume_norm[i], mask_norm[i] if mask_norm is not None else None)\n        elif axis == 'y':\n            n_slices = volume_norm.shape[1]\n            get_slice = lambda i: (volume_norm[:, i, :], mask_norm[:, i, :] if mask_norm is not None else None)\n        elif axis == 'x':\n            n_slices = volume_norm.shape[2]\n            #...\n```","range":{"startLineNumber":250,"startColumn":0,"endLineNumber":268,"endColumn":0},"embedding":"AICivADgPT0AYBO9AKB6vQCwr70AQNW8AAAouwAAODwAwIy9AAA0vACAzTwAIAA9AADduwCAUb0AQP88AOB6PQBgK70AIJY9ABCGvQDATz0A4CM9AMDTvACAQD0AQMe8AAA/vAAA6DsAAJU7ABCpPQAAED0AAOC8ACAfvQCA9LwAAAA4AEAEvQDA770AAFI7AAAbvACAi7wAgD68AADQuwDQ0D0AQGm9AAD+uwAwpT0AIOo9AACgPAAALbwA4Du9AAAGPQAAjLwAQP68AKCqPQCgBj0AQIS8AADluwDgZz0AQKe9AADvuwDAOr0AIBa9ANCBPQDA+bwAgAs9AABQPQCgfL0AwIo8AIAGvQCgOb0AAOa7AEDJPADAijwAQI+8AADBvAAAfzwAIB89AAAsuwDgf70AAC+8AMBXvQCAXb0AwO68AACqOwCALbwAAPY7AMDevABgZb0AwKq8AIBGPAAAnrwAoKG9AOB+vQDgCj0AAK29AGASPQAAfTwAINg9ACA5PQAAnL0AgAs9AACNuwAAtDsAYGo9AACKuwCAFj0AwHM9AAAVPQCAOT0AAD08AAD6OwBAzjwAgBQ9ACCJvQDgMj0AAHm9AADUvADA8rwAAKO7AECcvABAhbwAAFq8AIDFvABAvDwAAIo7AMDIvAAA4TwAgN68AIDZvAAATbwAAAg6AMCNPACgHT0AAO+8AOBRPQBwx70AwIG9APCfvQCAk7wA4Ew9AEDWvADoEj4AALi7ACAkPQDgPj0AoAG9AICbvAAgLT0AwIy9AKCsPQAAADgAQKk8AIBTPAAAwD0AgHQ8AIDLvQBAlr0AwNi8ADCBPQDQkD0AgAE8AIA1vQAwhb0AgLC8ACA4vQAANLwAoLS9AHCDPQBA7rwAQD69AMBBvQBguL0A0I+9AAAuuwCAHj0A0Iq9AACtPQAA/7wAgBO8AICcPAAAA70AQAk9ACCfvQBAwLwAAGC9AEDxPACAKb0AYLA9AADoOgDAjTwAAAo7AADQOQBA4zwAAFa7AMDkvABg4z0AQA+9AGAYvQAAQTwAAJi7AABCvABAxDwAgF+8AGAePQAARrwAMIm9AMDAPACQjb0AkII9AACcugCA07wAgAQ8ACAivQBgBj0AgHs9AGA6vQAAuzsAwLo8AIDZvACwiD0AAAG8AICSPACAHLwAoLI9AKB1PQAgPj0AIBQ9AADAOAAAHz0AQO28AABQvACA/TwAYAc9AMCqPAAgJz0A0Iw9AIAcvQCgEb0AANe8AAChPACARTwAYHo9AABsuwAgeD0AgF88AACqOwDAijwAwJM8AIAUvQDAwrwAAEo7AMAYPQDA6jwAAEG8AADzuwDQlr0AoFy9AMAuvQBwA74AoCA9AHCAvQCAfDwA4HE9AMCWvACwhb0AYB29AIDqvACgID0AwBU9AAD7PADgSL0AAI08AAB5PABA07wAIHs9AABxvADAmr0AQOw8AABEPQDAPj0AQE49AIDRPABgSr0AANy6AKACvQCAWz0AAEC8AMCSvACAGr0AAEA9AACOvADwn70AAH49AEAqvQAgJr0AgKU8AMDevAAAIbwAAH+8AACguQBAtjwAAD29AACFvABASr0AIDg9AIBOPQBA/LwAACC5AKARPQAAVz0AIG89AMArPQAAHDsAIDG9ACCAPQDghz0AABq7AEABvQBgqT0AAAI9AKCjPQDAHr0A8IC9AKAFvQCgJz0AQPI8AKA7vQBgFz0AAC+9AAC2uwCACTwAEKm9AADGPACAiLwAAOa8AAADPACARDwAkI69AAAdPABApzwAYHq9AMBCPQAgPr0AQLy8AMB5vQDA9LwAQM88AECMvACADzwAoFM9AAAmuwCgGb0AgPe8AIAQvQDARL0AALk7AMDDPACAtrwAgCy9AMCqvQBA3bwAgJS8AFCrvQBgHb0AgOQ9AAC+OwAA/rsAAAo7AEAvPQAAMzwAANa8AABWvABwvT0AgP28AIAOvQCAL70AcJu9APDRvQBAej0AAPu7AOAbvQAAwDgAAAm8AACOPABAKD0AADY9AICHvAAAaDoAIAo9AAA2PQDAFr0AACq7AGA4PQAA77wAgAy8AIAKPQAAkjwAAEy7AIAUPACwlT0AQGk9AMATPQBAPL0A0IU9AECIvACAarwAQJI8AEDQPADgVT0AIBU9AADXuwBwi70AYBg9ADDGvQCAvzwAgAy9AMCCPACA6rwAQPq8AKAHPQBQzb0AIDk9AAD9vAAAC70AgFy8AIAMvQAgAL0AAB47AGAQPQAgAb0AwPc8AOA7vQCA/zwAQEs9AIB4PAAAdzwAACU8AKBwvQCABT0AwJE8ACCgPQCACT0AACg6AAAyvAAgNL0AgFK8AIAgvACATrwAICU9AIBEvQAAJT0AoKS9AOBOPQAgBT0A0NK9AMDfPACAGjwAIAy9AABAPQAAsLwAALQ8AAA4uwBAOD0AUJw9AMAJvQDAXD0AAPi7AMCYvACgJ70AAHC8AEDSPADwir0AAA+8ACCHvQCAij0AAMM7AMDyvAAADDsA4Eq9AIBXPACgk70AAMA8AMAHPQCAorwA2AG+AIDFPABghT0A8Kk9AAAhvQAAjLsAgHo8AKBJvQAA/7sAgDK8AOAKPQCAhLwAgDe9AABeOwAwu70AoAY9AAC2uwBAL70AgO88AADIugDQiT0AoHO9AIALPABAUL0AAAy8AABmuwDA17wAQIk9AADLOwDA/jw=","chunkHash":"63c885a6c3a8e3c935059a0e9d2300347963621b2c27bc5b50556d1d5db03c71"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_volume(self, data_item, save_path=None, show=True, title=None, \n                         axis='z', frames=10, interval=200, colorbar=True):\n        #...\n            get_slice = lambda i: (volume_norm[:, :, i], mask_norm[:, :, i] if mask_norm is not None else None)\n        else:\n            raise ValueError(f\"Invalid axis: {axis}. Must be 'x', 'y', or 'z'.\")\n        \n        # Determine frames to show\n        if frames <= 0 or frames > n_slices:\n            frames = n_slices\n            \n        step = max(1, n_slices // frames)\n        slice_indices = range(0, n_slices, step)[:frames]\n        \n        # Set up the figure\n        fig, axes = plt.subplots(1, 3, figsize=self.figsize)\n        \n        # Initialize plots\n        img_plots = []\n        mask_plots = []\n        overlay_plots = []\n        \n        # Raw image\n        img_slice, _ = get_slice(slice_indices[0])\n        #...\n```","range":{"startLineNumber":268,"startColumn":0,"endLineNumber":289,"endColumn":0},"embedding":"AACdvADATz0AYAq9ADCgvQDAwb0AwC29AACguQAAgjsAEJ69AIAevACAQj0AgDk9AAAAvQDgZ70AgBM9AABpPQDgE70AgFQ9AKAyvQCAYj0A4A49AMDJvABAHj0AAHy7AICkvADAhjwAANO7APCtPQAAEj0A4Ae9AEAQvQBA7bwAgF88AICrvABQCr4AANA5AMCYvACAzLwAALq7AIAEvACwxj0AkI+9AABeOwCgdj0AMO49AEASPQAAmLsAwDa9AIAePQAAwzsA4BG9AICtPQBAwzwAAOK7AIAFvABwlj0AMKa9AIBYPABgGL0AIBe9ABClPQCgAr0AACI9AKA4PQDgWL0AALw6AIBJvQDgE70AABg6AICYPAAAqDwAgJ28AOAHvQCAMTwAwPM8AAAPPAAgdr0AACY8AIA6vQCwkb0AoBe9AABOPACAUrwAwOc8AMCTvAAgVb0AgA68AIDHPADAzrwAMJ+9AGA2vQAAEj0AMKe9AGAOPQCACjwAsPQ9AIAXPQDAWL0AALA8AAC6OwCAOjwAAGc9AEDDvADA4jwAwEw9AMBFPQCgPz0AgN08AIBUvAAA4jsAgAo9AKBQvQBgRz0AAJm9AGAcvQCAerwAgAO8AEDTvAAAoLsAgF+8AICDvACAJzwAALY7AAC+vABAizwAAOy8AIBPvAAAybsAABw7AAD+uwDAFj0AwDK9ABCHPQCgwb0AkKu9AEB9vQAAj7sAwEo9ACBHvQC4GD4AgI28AEBBPQDwgD0AoCS9AIAjvABQlz0AALu9ALCRPQDAgrwAwCU9AKAXPQCQtT0AIC49AOCyvQBgx70AwJS8ACBuPQDgWD0AALY7AIATvQAwjr0AoAK9ACASvQBAybwAoIO9ALC2PQAgCr0A4Gq9AGBgvQDAnr0AkIq9AAAAvACgCj0A8I+9AHCyPQCA+LwAAG68AACUPAAgLb0AQLo8AHCJvQDA/rwAoIu9AMClPADAOL0AcJY9AACIPAAAAAAAAEq7AADpuwDAhDwAgHc8AMBlvQCAwT0AAE67AMBnvQCAODwAAEg7AACoOwAAzjwAgO+8AICCPQAApLsAYI+9AIAMPQCAYb0AgJs9AABAOgAACbwAgLw8AEALvQAAFj0A4II9ACCPvQAACLwAANe7AADcvACAjz0AAL47AICxPAAAebwAQIU9AMBmPQAgKD0AwFE9AAAAAAAgOj0AgE28AACdOwBAOz0AQMo8AABIOwAAyjwAgEw9AEBjvQAAvbwAQMq8AADsOwAAljsAQIM9AMCCvAAwhz0AAPE7AACluwCgDj0AQN48AIBBvQBAm7wAAF68AKA6PQAA2zwAAAe8AEDGvABwgr0AICu9AOA4vQAw3L0AgAM9AJCHvQAABDwA4II9AABuvACAdL0A4Cy9AEC5vACAET0AwPQ8AIDlPACASb0AANw7AAB9PADAvbwAYB09AIBRvABAPr0AgPI8AABnPQAgLD0AoDU9AEDoPACANr0AAKk7AABKvADAgD0AQIS8AMD4vABgP70AAFU9AAALvAAAl70AgD09AIALvQBANb0AAG08AIDhvACAG7wAgJu8AADZuwAA3TwAwPK8AICCvADgOL0AwPE8AKBpPQBgAL0AAB48AGANPQDgPD0A4EE9AEDGPAAAzTsAAHG9ACBEPQAAOj0AAOi6AACEvADglT0AAD49AECrPQBAhbwAoG+9AMDRvACAVD0AQOM8AMA9vQAADT0AICy9AABoOwCAUTwAYI+9AED5PACARbwAAC29AADDPAAAGDsAsI69AMCYPABAwTwAwD29AABdPQBAQr0AQPy8AABevQBAOb0AgLg8AAD1uwAAbDsAIBI9AACFuwAAe70AAMe8AGAovQAAVL0AwMs8AEAXPQCA87wAwA69ALDRvQBA47wAAD+8AEC+vQCAG70AMNM9AACMuwAA4LsAABw7AAAzPQCAyLwAwBO9AEDLPAAgxj0AABO8AIDuvACAGr0AQG69ANC0vQDgVD0AAIu8AIAwvQAAV7wAgGC8AABaPABgIz0AAFk9AEDFvAAAMrwA4B89AOALPQCQg70AAMk7AMAGPQBgQb0AAIU7AADaPAAAUjsAAI+8AADjPAAAlz0AwDs9ACAbPQBACb0AAI89AICgvAAAYDoAQLg8AAD3OwCgQT0AAO48AECyvADgRr0AoDM9AAC8vQDADz0A4Ba9AICDPABgJL0AwD29AIA0PABwu70AIJo9AIBAvAAAk7wAAPW7AGA1vQBAoLwAANM7AOAhPQDAM70AgEM9ACBHvQAA1TwAwGE9AKAAPQCAsjwAAPw6AEA2vQCA5zwAAMy7AKCoPQAAZTwAwJO8AADvuwDAtbwAAGG8AMCPvACAX7wAAMo8AOBgvQBAGD0AkKC9AABaPQDA3zwAYKy9AIDkPAAA0LoAABu9AHCYPQBAxbwAQOg8AADAuACgMT0AAJc9ACA3vQDgXz0AgDO8AADgugCgRb0AAFS8AMAFPQBQhb0AAMg7AACBvQDwkz0AAAo8AOBkvQAAJjsAAD29AABFPADwrr0AwJ48AMDyPAAAJ7wAYNC9AABiPAAggD0A8IA9AIB/vAAAgLwAAGY7AEBGvQAAozsAgA68AADiPADAgbwAAFS9AAAWvAAgor0AALM8AIBLvACA+7wAIBE9AADqOwBgbz0AkJG9AMCTPADAfr0AgFC8AAAPPADAuLwAMJQ9AACEOwDADD0=","chunkHash":"cc2a4edb9a6f3cddf46483dcfdf2f6926ccd290c2962ce39c80464bfd268c883"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_volume(self, data_item, save_path=None, show=True, title=None, \n                         axis='z', frames=10, interval=200, colorbar=True):\n        #...\n        img_plot = axes[0].imshow(img_slice, cmap=self.cmap)\n        axes[0].set_title(\"Raw Volume\")\n        axes[0].axis('off')\n        img_plots.append(img_plot)\n        \n        # Add colorbar\n        if colorbar:\n            divider = make_axes_locatable(axes[0])\n            cax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\n            plt.colorbar(img_plot, cax=cax)\n        \n        # Mask\n        if mask_norm is not None:\n            _, mask_slice = get_slice(slice_indices[0])\n            mask_plot = axes[1].imshow(mask_slice, cmap='binary')\n            axes[1].set_title(\"Mask\")\n            axes[1].axis('off')\n            mask_plots.append(mask_plot)\n            \n            if colorbar:\n                divider = make_axes_locatable(axes[1])\n                #...\n```","range":{"startLineNumber":289,"startColumn":0,"endLineNumber":310,"endColumn":0},"embedding":"AAB0vADAbT0AAMi8AABlvQCQ6b0AQCy9AAAePACAYTwAoFC9AIB4vADgcj0AYFU9AECIvADgAr0AQNo8AOA7PQDgAL0A8JQ9AAA9vQCgXz0AQN88AABXvADgOT0AAEc8AABfvAAAUzwAAKe8AFChPQAApTwAIBe9AIB3vQCAA70AAEI7AICivACwBr4AAHs8AAAQPABACb0AgAO8AACAOgBQ1D0AgHi9AIAWPACQoj0AgM89AGAsPQAAZbwAAE29AKARPQAAjjsAwNu8AHC9PQBA/jwA4AK9AECvvAAgiD0AELC9AMC1PABAW70AwIK8AGB1PQBA8LwAwAM9AIAGPQAAg70AACK7AMB6vQBgFr0AALI7AIBiPABAozwAAOC7AMBkvQDAhDwAwAY9AADcOgDAcL0AQKA8AIBrvQBgkL0AoDy9AIA9PAAAXLsAAFQ8AECevADAdr0AAO+8AABePACgHb0A4Jy9AKBUvQAAFj0AMJK9AOAlPQBAgTwAWAA+AECVPABgTr0AQKs8AAAyPAAAfzwAAD09AACkvACAPTwAQIY9AADKPACgVD0AwO08AICavAAAsjsAAL08AMB7vQCgYT0A4HS9AEDIvACAJrwAwMY8AAA+vAAAJDsAgMK8AIDIvACAhjwAALi6AAAVvQDgCT0AQNy8AABWOwBAhLwAAPc7AECavAAA+DwAgP68AABqPQAQ0r0AAGy9ABCHvQAAojsAoDk9AKB4vQBIET4AAM+7AGAlPQCgaT0AAOy8AADxuwBAUj0AsMa9AECrPQAA97sAQCE9AMAcPQBgqj0AAOk8AOCYvQAwuL0AAMW8ABCEPQBgYj0AgBm8AOAPvQAAaL0AQAS9AIAwvQDAorwAEIK9AOCWPQCgN70AAA+9AOB/vQCgm70AgJG9AABqvADAMD0AMJe9AGCpPQAAC70AwJq8AECNPACAVb0AAPs8ACCOvQDAubwAwHW9AKARPQBgTL0A8Iw9AAAzPAAA2TsAAIy8AIB+vAAArTwAgMY8AMBQvQDwrj0AADm8AOAHvQDAojwAgGc8AABkvABAszwAgN28ALCmPQAA/rsAMJS9AKBXPQDwiL0A8K49AABgOgAAXLwAgIU8AMCUvACA3zwAUIw9AIBDvQAAoDoAAIg6AKAUvQCQvj0AgFk8AEDtPADAqrwAgFQ9AABvPQAgZz0AYEc9AIATPAAACj0AQLa8AADIOwCgDz0AoE09AACkugBArzwAoFA9AIBJvQCAsLwAgDG8AACJOwAAaDoAAEU9AAA/vADgez0AAFY8AAAquwBApDwA4AE9AOBZvQBAX70A4AS9AAAqPQBgAD0AAKI7AABYvAAQhL0AIAe9AKBNvQCw6r0AgN08AKCEvQAA5rsA4H49AEC+vACgYr0AIA29AIBAvADgUz0A4B09AAAKPQCgTL0AgHU8AIAIPACgC70A4GY9AADQuQDATb0AAL48AIAbPQAgEj0AYAo9AEDQPADgOL0AAEA6AIA6vABwpT0AAF28AKAHvQAAI70AQE89AICjvABwob0AAHU9AIDsvABAXL0AgAg8AMDKvAAAlDoAAGW8AACLOwDA9DwAQAG9AICYvACAS70AYAM9AIBvPQAAGL0AAIg8AOBDPQAgGT0AwFE9AABjPAAA8rsAoJW9AAB4PQAAAj0AgAo8AAD6vAAQmT0AAG09AACKPQBApLwA4Hm9AGACvQBgVT0AgKo8AOBVvQBADz0AAEe9AADauwAAtjwAQKK9AEAnPQAANrsAANu8AOAqPQBAojwAoJS9AKAAPQDAzjwAwHK9AABNPQAgI70AAJ+7AKBnvQAgEb0AwK48AIAAvAAArzwAwEw9AAAPvABAar0AAE+8AMDCvAAgRr0AQM08AKBYPQDABb0AwP68ALDLvQCAgLwAAMI7ADC7vQDAu7wAwPM9AADQOgAAIrsAAJy6AAD/PABAm7wAAMq7AIADPQDQqz0AAJe7ACA/vQDA5bwA4Jq9APCuvQDgeD0AAMw6AIBLvQBAirwAAOC6AAAoOwDAwDwAoEE9AIBivAAAEjwAIDE9AMATPQAwlb0AgDo8AIDFPADAjb0AgC+8AECMPAAAjDoAAE47AAD8PACgbz0AYBU9AIASPQAAQb0AYFo9AEDYvACAILwAgAU8AACvPAAgQz0AgOs8AIDHvAAgS70AwBQ9AEDFvQCgCz0AAGm8AABTPAAgMb0AwGy9AIBxPADws70AoH09AECfvAAAmrwAAO+7AIAwvQCAnLwAAD88AKAWPQCgIL0AIAY9AMBMvQAAgDwAABE9AIAUPAAgHz0AAL07AABmvQCgBz0AgLo8AEB+PQBA+zwAgH+8AMCvvACAb70AgE+8AMDOvAAAGrwAQLM8AOBnvQDAvjwAcI69AGBMPQAAuLoAEK69AADhPAAAMLwAACi9AGBuPQBAqLwAAOg7AAA4vACgbj0AYIg9AMDevABgcD0AgKm8AABNvACAWb0AAD28AAA4PQAApL0AgME8AKCOvQAwgz0AAOs7ACBNvQBAiLwAANe8AECBPAAwuL0AAFA6AEAUPQAA8rsAAMa9AABoPAAgaz0AgJQ9AEChvAAAgbwAAAc8ACAjvQAAcLwAAIC5AEDDPAAAjLwAgEm9AAB6vACQor0AgJo8AECPvABA+bwAgAE9AAD1OwCgMj0AcI69AADrPAAAV70AAMi7AADAPAAAejsAkIw9AAA4OwAAkDw=","chunkHash":"ef35fea03d5c9896ed565da42548c53a7a4006297da65692ad52f43c2bf0f098"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_volume(self, data_item, save_path=None, show=True, title=None, \n                         axis='z', frames=10, interval=200, colorbar=True):\n        #...\n                cax = divider.append_axes(\"right\", size=\"5%\", pad=0.05)\n                plt.colorbar(mask_plot, cax=cax)\n        else:\n            axes[1].set_visible(False)\n        \n        # Overlay\n        if mask_norm is not None:\n            img_slice, mask_slice = get_slice(slice_indices[0])\n            overlay_img = axes[2].imshow(img_slice, cmap=self.cmap)\n            masked_data = np.ma.masked_where(mask_slice < 0.5, mask_slice)  # Increased threshold\n            overlay_mask = axes[2].imshow(masked_data, cmap='autumn', alpha=0.7, interpolation='none')  # Using autumn colormap\n            axes[2].set_title(\"Overlay\")\n            axes[2].axis('off')\n            overlay_plots.append(overlay_img)\n            overlay_plots.append(overlay_mask)\n        else:\n            #...\n```","range":{"startLineNumber":310,"startColumn":0,"endLineNumber":326,"endColumn":0},"embedding":"AICGvABAXD0AAES7AECBvQCw6b0AAOC8AIA3PABAgDwAIGW9AAAbvADgRj0AwGI9AICwvAAARL0AQO48AABTPQBA7rwAoHc9AGBEvQDAaD0AAKE8AIAkvADgGj0AAFI7AIAzvACAKDwAAGq8ALDAPQCAmDwAwB69AEArvQAgDr0AgIg8AIDQvAA4CL4AAFA6AMDSPAAgCb0AAKO7AACIOwAwyj0AUIm9AIAyPAAwlD0AgMY9AEBYPQCAMLwAAEe9AOADPQAAWzwAAMC8AOCaPQAAsDwAAEI7AICsvADwlD0A4KC9AMACPQCgKL0AIBq9ALCdPQAAQbwAwKo8AEBqPQAAi70AAIQ6AICIvQBgF70AgCs8AIAoPADAtjwAgC+8AIA4vQAAwTsAwPk8AABZPABAcL0AgA08AKAbvQBggb0AwCu9AADYOgAAObwA4Bg9AIAJvAAwlr0AQAO9AKARPQAgBr0AIJC9AIA7vQAAHT0AEI+9AEAFPQCAXjwASBM+AECcPAAAjb0AwMY8AADZOwDA/TwAwKY8AIC5vAAAMTwAwGk9AGAcPQDgOD0AwMo8AADBuwAAmzwAwLY8AEBLvQDgJz0A8IW9AACTvACAdLwAAHI7AAB7vAAASzwAwI+8AMAlvQAA6TsAAGi7AAAVvQCAbzwAAAe8AIANvADAgbwAAMm7AIDQvAAA2DwAwCW9AKB0PQAw0b0AkKm9AFCCvQAA+DsAEJs9AABavQD4CD4AAHy7ACAUPQCgYz0AAN+8AMC8vACAgz0AYJ29AACEPQCAgrwAYBA9AIDAPABgoj0AQPg8AOCevQDwuL0AAJi8AMB2PQDgTz0AgEa8AIDkvABgib0AABm9AGAdvQCA5rwAEJa9AECYPQAgJL0AwAO9AICHvQCgnL0AUJS9AEC7vABgJT0A4Ie9ALCpPQBACL0AAGe8AADSPAAANb0AIBg9AABwvQDAAL0AIEa9AAA+PQCgPr0AgIo9AEAHPQAAmjwAgOu8AAAQOgCArDwAwLI8AMAJvQBwzz0AAMK7ACAXvQBAlTwAAC88AABOvACA6TwAgOK8AACCPQBAkDwA0Iy9AOB2PQCgPb0AIKk9AACUOwCAHrwAwI88AAC4vACA4DwAgHs9ACBWvQAAi7sAgGa8AADTuwCwqj0AgJE8AIAnPQBAg7wAQHY9AEAtPQCAvzwA4Gs9AIBUPACgBz0AgHK8AACiOwCAOT0AoC89AIAYPADA5TwA4Gc9AOAYvQCAmLwAAKC6AAD+uwAAGDoAIFA9AEDUvACAnT0AAFE8AAAbvAAAWDwAwO88AGBKvQAAP70AYAe9AIB0PQAAMz0AALI7AACAvACwlL0A4EG9AMAEvQBw8r0AwPM8AGCOvQAA4bsAUII9AMDGvACAcL0AICq9AAC9OwBA9DwAIA09AED0PACgc70AgCs8AAD9PADAAL0A4GE9AABEOwCAMb0AwMY8AKAuPQDgQj0AAGA9AMCQPADARb0AAPA7AAB2uwBAfD0AQMK8AIDDvAAgG70AYEw9AABvvACwqb0AwGk9AIAqvQDAUb0AAOg6AMDdvAAAybsAgHG8AABGPABAvzwAgDS9AACOuwAANr0AAAg6AIBsPQAA/LwAAGq7AGA7PQBgOD0A4CE9AECTPAAAfrwAIJW9AACFPQCACz0AAHK7AADVvACQnz0AoH89AKB9PQDAnLwAYFq9AOAxvQCgVT0AwII8AKBavQCA9TwAoFS9AAB6vACAATwAsJG9AGAePQAACbwAYAe9AOA4PQAAUDoAAEy9AAC1PACAmTwAYCW9AIAmPQAASr0AwPe8AABlvQBAKr0AAMk8AIDevACASjwA4Cs9AABGOwDgHb0AgN28AEAGvQCAVb0AYAY9AIAsPQBAorwAgHi8AODIvQAAL7wAgDQ8AFCzvQAAsLwAgNY9AACRvAAAFDsAAFC6AAB8PAAAfLwAgDy8AEDdPADgvT0AADW8AEBHvQDAIr0AEJS9ABC6vQDgfT0AgIe8AMAyvQCAV7wAAGi6AAC8uwCAozwA4Fo9AAAovABAmzwAQDM9AEDmPADQkb0AgBc8AMAqPQDgir0AwIS8AADPPAAAeDwAABS8AEALPQBglD0A4FM9AGA5PQAAOb0AoFU9AMD8vAAAgLkAAFw8AEC+PABAMT0AAPs8AABAvACgm70AwEU9AECpvQAgHT0AAKy8AAAePABAwLwAYF69AACWuwBQlb0AEIU9AICfvAAAY7wAgCe8AOBrvQBAsrwAgFs8AAD/PADgGL0AoC89AECPvQBA1DwAYEw9AEDmPAAgHj0AgH08AAA9vQDA9zwAgL48AKCbPQDAgzwAIAu9AIDBvADgbr0AAHy8ACASvQAAr7sAABA9AMBTvQCgJz0AMIG9AIBzPQCAqzwAMKa9AOAAPQAA7DoAgBC9AABsPQBAuLwAgFA8AADquwDAcj0AYG49AKAgvQBAlD0AgIq8AAAGPAAgLr0AAHm8AAB/PQBger0AQKc8AGCIvQCAsz0AgIA8AABmvQCAHLwAAAA4AAD2OwDgq70AAIE7AGAiPQAAWrwAsLS9AAB0PAAAWD0AgK09AABwvACAO7wAAFQ7AIA3vQAAybsAAL47AIAjPQDAlLwAwBa9AMAyvQDwl70AQKE8AADcuwAA/rwAgAU9AADEOgAAGD0AQI69AEAaPQAARL0AgEe8AMDrPAAA/DoAEJY9AICjvACAUzw=","chunkHash":"1ca32f16261c6687a170b038764c9e2d5ead7481069f6b49bee1b93f027bfa66"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_volume(self, data_item, save_path=None, show=True, title=None, \n                         axis='z', frames=10, interval=200, colorbar=True):\n        #...\n            axes[2].set_visible(False)\n            \n        # Set metadata in the figure title\n        metadata = data_item.get('metadata', {})\n        if title:\n            main_title = title\n        else:\n            sample_id = metadata.get('sample_id', 'Unknown')\n            class_name = metadata.get('class_name', 'Unknown')\n            main_title = f\"Sample: {sample_id}, Class: {class_name}\"\n            \n        plt.tight_layout()\n        \n        # Update function for animation\n        def update(i):\n            #...\n        # Create animation\n        ani = animation.FuncAnimation(fig, update, frames=len(slice_indices), \n                                      interval=interval, blit=False)\n        # Save animation if requested\n        if save_path:\n            try:\n                # Ensure .gif extension\n                if not save_path.endswith('.gif'):\n                    save_path += '.gif'\n                #...\n```","range":{"startLineNumber":326,"startColumn":0,"endLineNumber":371,"endColumn":0},"embedding":"AADJOwBAej0AAPi6AJC1vQCQ2r0AgDS9AIBrPAAACLwAMIC9AACnvADAOD0AQGA9AMAcvQBAoL0AAJM7AIB9PQAAXb0AgCw9AIBgvADAST0AoA89AACRvACgCD0AADc8AAAwugCAQDwAAA69AADRPQBA1zwAgM68AACVvABA0bwAQPA8AADEvACQ270AgJs8AAC8ugBgZ70AgBG8ALCKvQCA1D0AAM29AIBHPAAQpj0AcNg9ACBYPQAAmLsAAHa8AMBVPQAAADwAANu8AFDXPQBAzzwAwLi8AACCuwCgmD0AoJq9AACAOQBgF70AALC8AEBCPQCAkbwAQDs9AEA1PQDAmb0AAGo7AICOvQAAo7wAAIc7AIAWvADAzjwAgIq8ACAgvQAAwbsAAE48AIAjvACQgL0AAKk7AKBIvQAwkL0AYBy9AECxPAAA1bwAQJk8AAD7vABgYb0AQDe9AAAAOwCAwLwA4H+9AKBbvQBAED0A4OW9AMDzPABAiTwA0Ak+AEDdPAAAN70AQBc9AADwuQBgJj0AIDc9AMDKvAAAIjwAgCk9AEDePACAMz0AgDg9AECWvACANTwAgF08AGCWvQBA+zwAQI69AMDavADACb0AgFY8AAAGvAAAsDoAwMG8AABRvQDgAT0AANg7AGABvQBAnDwAABe9AIBCvACAUDwAACA6AADGOwAgXz0AQBS9ANCUPQCg4r0AwIm9AOCmvQAArLwAgAc9AOAJvQBIHj4AAIO7AEAjPQBA+TwAAMS8AECsvAAgdT0AQIO9AECFPQBAzbwAAFE8AMCCPABg4j0AwMM8AMDBvQAAVL0AAJi8AADxPABAVD0AAEA5AADwOgAgOb0AwOi8AIAvvQDAx7wAYF69AGB6PQDAuLwAgCC9ACBpvQCATb0AoFi9AIBevAAgST0AAHu9AJDGPQDAQb0AgFI8AIBwPADgA70A4GQ9AGBwvQCA2LwAgIi9AEAwPQBgFL0AoH89AEDaPAAAjzwAgIi8AIAevABAsTwAgJo8AEABvQDQlT0AYDG9AADYvADAjDwAQN68AAC4uwBApzwAQAy9AGBMPQAAtbsAQKK9AMC0PAAAXL0AIIQ9AEDkvAAAorwAgA49AMDpvACAtTwAIC89AJCQvQAAsLoAABQ7AIBovADwoj0AgD68AIBePACAybwAIGo9ACAcPQAA+TwAIIE9AICKPAAAuDsAgGG8AMDbvACATT0AQKY8AADduwBgND0AAHU9AMB+vQAAfrwAgFe8AMCVPAAABjsA0LA9AAAAAACQqT0AABq8AABoOwDAmDwAwBw9ACAwvQDAwrwAgAy8AMAfPQAAszwAALe8AIBHPACARr0AoA+9AEBwvQCQ2r0AADU9AMBxvQAAATwAAJI9AIAfvAAA8bwAgC69AIAnPACAFT0AgGA9AKAWPQDAHb0AgH08AABFPACAGbwAQMg8AIDjvAAANb0AMIc9AMBaPQBARD0AAHw9AMDsPADgRL0AAAa7AADQOwBgUD0AIAy9AACGvAAgJb0AYCs9AIADPABAXr0AoD49AGAGvQDAQr0AQLK8AOALvQAAYjwAAMA4AEC4PACgDD0AoCm9AECbvADwmb0AAOC5AICGPQBAl7wAwP88AICnPABgLj0AUIU9AEADPQDA/TwAoCi9AIB3PQDAMj0AgE28AIAPvQAwnT0AYGI9AJCfPQAAmLwAcIm9ACAJvQDwgT0AQKk8AHCHvQCABTwAAOu8AIBrvACAvDwAwA29AMDzPAAA3LoAAHK8AOBJPQDAPT0AoA+9AAAPPQAgED0AIGu9AIAHPQAA4LwAgLW8ACCIvQAgI70AAI87AAAhvAAAYDoAwGE9AADwugAAjb0AAGa7ACBIvQDgWr0AgAo9AEA2PQAgNr0AwMm8AKDKvQAAZLwAAGy8ABDIvQBAnLwAgOM9AKAXvQAA2LoAAP27AIB0PAAAKr0AANs7AECsPABwkz0AACS8AMDtvABAwrwAgH+9AOCcvQBgmD0AgIi8AKArvQAAcLsAAHK8ACANPQBA+TwAgPg8AMDKvAAA47sAwKc8AMDHPABApL0AQJc8AGBePQBQm70AALi7AACoPACAfzwAABw8AIAQPQDgjj0AwEc9AMC7PABgIL0A4FQ9AEDmvACAGzwAgIM8AMCHPADgLD0AAPo8AECEPADAVb0AADQ9AKC0vQDAszwAwIG8AADwOQDgIb0AAHy9AAAcOwDAjr0AcIE9AEC2vABA2LwAAOI7AGAbvQAgH70AwKc8ACAJPQCgKL0AkII9AIA+vQBAgDwAoHw9AIAiPADA0DwAwIc8AIAPvQCAkzwAgC68ANCkPQCAc7wAQDK9AMCXvADgFL0AAMA6AAD1vAAAO7wAAD08ACACvQAgET0A4Ki9AID4PACA7TwAsMO9ACAXPQAAATwAQKi8AGAzPQCAzbwAQDg9AIAXvACgBT0AQNQ9AGAyvQCgpT0AABm8AGABvQDgJb0AAKA6AIAiPQAAqr0AAOM7AMBwvQCgbj0AAIA7AEAavQAArLsAQM68AAAyuwCQjr0AwLQ8AAAEPQDAq7wAIMS9AIAuPAAA/DsAwG09AMDDvAAAprwAQJw8AEB2vQAAXrsAQNy8AIBCPQDAhLwAAEy9AECUvADgtb0AgHU8AAClPACgLr0AwPQ8AICRPAAgND0AIEO9AMCMPADQiL0AAJS6AIAVPAAAnzsAAG09AMCEPADgAj0=","chunkHash":"6b6ee731163c5b143eaa0acf190cce506fc5cae04ce9b563386c0166c635b1eb"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_volume(self, data_item, save_path=None, show=True, title=None, \n                         axis='z', frames=10, interval=200, colorbar=True):\n        #...\n                ani.save(save_path, writer='pillow', fps=1000/interval)\n            except Exception as e:\n                print(f\"Failed to save animation: {e}\")\n        elif show:\n            # Auto-generate a filename if save_path is not provided\n            if metadata:\n                sample_id = metadata.get('sample_id', 'unknown')\n                auto_save_path = os.path.join(self.output_dir, f\"{sample_id}_volume_{axis}_axis.gif\")\n                try:\n                    ani.save(auto_save_path, writer='pillow', fps=1000/interval)\n                except Exception as e:\n                    print(f\"Failed to save animation: {e}\")\n                \n        if show:\n            plt.show()\n        else:\n            plt.close(fig)\n            \n        return fig, axes, ani\n    #...\n```","range":{"startLineNumber":371,"startColumn":0,"endLineNumber":389,"endColumn":29},"embedding":"AAAzPAAwiD0AgCa8APDAvQBQ7r0A4C+9AICGPAAAxLwAIAe9AAAmvQCgMD0AAEs9AOAhvQDgob0AAB47AEB2PQBAI70AAGg9AADevACA+DwAwGI9AADxuwCAKz0AAK08AADruwAAh7wAIAK9AFCXPQDAvDwAgCW9AICgvAAAA70AQK08AGAZvQD4AL4AAHM8AAAQPACgY70AABg6AOBfvQBQ7D0AYMK9AMAfPQCwtT0AkMk9AGBCPQAAsDoAAMK7AEBvPQAAGDoAQLG8ADDHPQAAXD0AAJ+8AIClvADAZD0AQF69AADYugAgOr0AoC69AIAUPQBA8LwAANk8AOAkPQAAKb0AAAe8AACJvQAAmDoAgAq8AICNvACAjDwAAIe8AEADvQAASLoAAMi6AADnuwCgbr0AADY7AIBhvQCgi70AQCO9AACuPABACr0AgGc8AACpvABgPb0AQHq9AECoPACAsrwAQKm9ADCTvQCgOT0AgLa9AGA5PQBA6DwAaAU+AIBwPAAAIb0AgBw9AABIOwCAojwAoBc9AEDvvAAA0zwAwAA9AIDaPADASj0AAD09AABouwAASDwAwIQ8AACWvQBAujwAgF29AKARvQBAobwAQLU8AMCqPACAZ7wAgNq8AIAcvQBgIT0AgG48AKA1vQBgBD0AgKC8AIDavACALTwAAEo8AIBjvADAXz0AQNy8ALCXPQBYAL4AYJu9ADC5vQCAsLwAQPk8AEDovADoID4AgCI8AAA/PQAgKz0AgPC8AAAFvABwhT0AAEy9AMBiPQCAeLwAALc7AMD6PAAgzj0AQJE8ANCqvQBghb0AAJu8AECLPADASj0AAJc7AACBvAAwgb0AQJO8AGBOvQCgIb0AEIW9AICQPQCAsrwAoE69AMBIvQDgZr0AIDK9AEDovABA9zwAMIW9ANCdPQAgdb0AALg8AECWPADgQL0A4F89AOBovQCAO7wAgHm9AADYPADA97wAoJ89AOAjPQAATrsAgCY8AAA4ugAAETwAAMM7AECVvABQoj0A4B+9AIDUvACACjwAgEu9AADBuwBA1TwAwIe8AGAXPQAALrsAUKG9AABkPADgiL0AYF49AMCDvAAAnLwAAII7AECHvABAkzwAwFU9AACKvQAAaLsAAOK7AADCOwAgtD0AAN67AABYugCAE70AEIc9AAC1PACAxzwAgFs9AMCQPACAPTwAoAC9AMCKvAAgQz0AQJI8AACwOwAA1DwAIH09AGA0vQDAxrwAgEu8ACAxPQAAbDsAsMo9AACPPADAiz0AAL07AADfOwAAPzwAYAA9AIAgvQBAirwAAAa8AEACPQCAojwAQNW8AMCwPAAAYr0AADa9AOCGvQDA0b0AICE9APCDvQAA2DoAYHg9AIC1vADAqrwAwIm8AIAWPABgTT0AQFw9AED8PACgA70AgAk9AADrOwBAk7wAABI9AAD2uwDALr0A4Jc9AKBtPQBAZD0AwEY9AKANPQBgHr0AAPA6AADXuwBgOD0AwKa8AICNvABgAr0A4E89AAAQOgBAir0AgCA9AOAOvQAgUL0AQIi8AEAYvQAA+TsAgCq8AMD/PAAAljwAQMq8AECjvAAQh70AAMM7AAB5PQBAAL0AwI08AABPvACgAz0AcIs9AOBWPQCABzwAQCq9ACBmPQAAVT0AADi6AEAEvQCwmT0AwGE9AHChPQBAnrwAsIa9AKAVvQAgez0AgHA8ANCAvQCgHj0AwJ28AIAWvABAuzwAAIK8AAA/PACAWrwAQOO8AABKPQDgQj0AQFm9AABzPAAADT0AQAa9AAB0PADAU70AAFC7AGCdvQCAUr0AAKA7AEDHvAAA6DwAoIQ9AIBLPAAAcL0AgDe8AAAHvQBgcb0AQOo8AMBDPQBAuLwAoAO9APC2vQCgCL0AgAK8AFCsvQCAxrwAgNI9AMAPvQAAArsAgBk8AAB+PACA+bwAQNw8AECpPAAQrD0AAIi7AOAQvQCA27wAMJG9AOBxvQBAij0AAIK8AAAfvQAAaLsAAGC7AKAzPQBA7TwAoAo9ACABvQAAMDoAgPc8AIASPQDgWb0AgGE8AKBCPQBAtr0AAKm8AMDNPAAAgDoAAPA7AMAUPQCATD0AoB09AACEPADANL0AoFQ9AECLvAAARzwAwMI8AIAHPQDgLT0AQKQ8AECPPABgd70AABw9ACC/vQAAwTwAgGG8AICYPABAV70AwCG9AACcugDQmr0A4G49AEAFvQCA4bwAAEg6AIAUvQAgJ70AQPY8AKBmPQBADb0A4Gw9AEBkvQBAvjwAwDA9AAAUPAAgFz0AIAc9AAAxvQCAgTwAAMM7ANCyPQAAVbwA4DO9AEC6vAAA6LwAADI8AAAovQDAmrwAAIM8AECWvACATDwAcKK9AAC7PAAAoTwAsMy9AMCaPAAANjwAgAA8AAApPQAAtbsA4Ao9AACQOQCA8TwAYMM9AGApvQCwtT0AAIK8AGB0vQBgAL0AgFu8AICdPACwzL0AAMs7ACBtvQDAGD0AAFi7AAD5vAAA7LsA4ES9AMCivACwp70AAEg7AIDmPAAAfLwA4Lm9AAAiPACAOLwAAIU9AAD7uwAAnLwAgAg8AIBovQCAGDwAwAO9AFCCPQBAiLwA0JC9AAD/uwAwx70AgEU8AACiPABANr0A4BM9AADHPAAAWD0AQFu9AMCiPABgnb0AgKQ8AMCYPAAAEbwAwD09AEC3PADgDD0=","chunkHash":"ee8e25a1101e54d964aff18d1ed6a00761c1467995b37dffc3f18e8d42e3587c"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_batch(self, batch, max_samples=4, save_dir=None, show=True):\n        \"\"\"\n        Visualize a batch of samples.\n        \n        Args:\n            batch (dict): Batch of samples from dataloader.\n            max_samples (int): Maximum number of samples to visualize.\n            save_dir (str, optional): Directory to save visualizations.\n            show (bool): Whether to display the visualizations.\n            \n        Returns:\n            list: List of figure objects.\n        \"\"\"\n        figures = []\n        \n        # Determine if we have volumes or 2D images\n        if 'volume' in batch:\n            is_volume = True\n            data_key = 'volume'\n            mask_key = 'mask'\n        elif 'image' in batch:\n            is_volume = False\n            data_key = 'image'\n            mask_key = 'mask'\n        else:\n            raise ValueError(\"Batch does not contain recognizable data format\")\n            \n        # Get batch size - with the custom collate_fn, these are now lists\n        batch_size = len(batch[data_key])\n        #...\n```","range":{"startLineNumber":392,"startColumn":0,"endLineNumber":420,"endColumn":0},"embedding":"AACuOwAAALgAAKu7AOBpvQCg5L0AwGC9AEBcvQDALL0AAJe9AADsOwAgAj0AAC49AIAZvQBguL0AAJU8ACB1PQCAh70AQJU9AECOPAAAhzsAAOA8AGALvQAgdz0AgFm8AAAtvQAAkDsAACW8AICEPQBAwjwAACu8AIBSvQCACbwAIIS9AABcvQDwD74AABC6AIAwvACAwrwAwE+9AMCMvAAgjj0A8L+9AIBfPADgOj0AgIA9ALCJPQCA8DwAIE29AFCSPQDgXD0AgBc8AKD4PQCARbwAgJC8AMACPQAAtzwA4F69AIBpvACgBz0AAE68AIAuPQAAK7wA4GU9ANCCPQDgEb0AAI48AGAHvQDgJ70AQNA8AADpvADA7TwAQN+8AACVvQAA/rwAIAu9AICAvABgT70AwKU8AODIvQBwo70AAEg8AAAHPAAAZDwAoAA9ACA7vQAAh70AgAG9AADZuwCA5jwAwMS8AIADPQAAHT0AEKa9ACATPQCABLwAgMs9AABhPAAwpr0AoC09AMDSvACAAD0A4Co9ACBivQAATz0AAFM8AABVPADAGj0AcIY9AGBfvQCAdTwA4Ae9AKBgvQCQlT0A4IC9AIAKvQDgL70AUK89ACAIvQAAz7wAQNm8ACA/vQBAnzwAAMC4AACqvAAAqDsAgAS8AIB5PADAtDwAQEM9AACqPAAAUzwAgKm8AMBQPQCgvr0AgCq8ANDMvQAA1DsAABA6AEDuvACQkj0AAOs8AIC5PADAdj0AgBK8AECwvACglz0A8Na9AAACOwCAg7wAwPM8AADluwDAfD0AAO08AOCgvQCAPr0AgFi9AIAwvACgOj0AAAS7AKAMPQAAGjwAwAe9AICkPAAA+bsAoGS9AIApPQCAlTwAgCw8AGBBvQDAG70AYCo9AEA9PQAQoz0AYKi9APCiPQBA7LwAYAO9AEARvQCgR70AAJ28AACsvADgCL0AgBO9AICfvACA8bwAAMQ7AEBTPQAAybsAICW9AAADvQCA/zwAAEI7AMC6vABgbT0AYAI9AEARvQAA1jwAALS6AADsPAAAVLsAwDu9AMAJPQBArbwAIFi9AICZPABgmL0AkK89AIAavQCAfjwAADs8AAAeOwAgqD0AAHE8AMBtvQCgDb0AgPU8AMD1vADwhT0A4BK9AADEOwAA3bwAALg8AEAUvQDgOz0AwAo9AKANPQAAFDsA0KK9AAC0PAAALDwAgCy8AEAtvQBgRD0AIHE9AICWvAAAwLgAADk8AOAcPQCAsLwAADi6AAAyvADggT0AADM8AACBOwBAFD0AgIA8AMBJvQBgDL0AAPy8AADGOwCAOTwAAAA4AABcvABwrL0AgPm8AACJPAAwxr0AgOe8AGAyvQCAXDwAYHA9AACNOwBA2LwAAFg8AICZvABARD0AAFK7AAAqPAAAmbsAABM9AMDAPAAAATwAYDs9AOAVvQAAsLkAYIg9AAB0uwDAxjwA8Ks9AACDuwCA+rwAAEQ9AADDPAAAPzwAAC+8AFCQvQBA6LwAAJ+7AAAEOwCAuLwAAJU8AAD/OwAA17wAICi9AABYuwAASLsAwNE8AEBqPQBQhj0AgCi8AOByvQDQnL0AAIa7AADZPQCAFDwAgGu8AICKvQAAhT0AAIo9AIAfPAAAUDwAoEC9AGAQPQAgIj0AwNu8AIBqvQBgMj0AYAc9AADiPAAAsDkAQH29AACAuwCgIT0AkI89AACLvQCA7rwAYH+9AGAhvQDAnDwAMJy9AAD3OwCAn7wAgJO8AKAXPQAAZLsAwNu8AMBiPQAAHTwAAGA6AMAuPQDYC74AgAW8AAD0vACALb0AwLO8AICOPABASz0AwFs9AACWvADwj70AABY7AKCnvQDgZL0AIBU9AAApPQBgQ70AgCS9APDFvQAAeDsAQIm8AFCFvQAAMLwAoPE9AADwOQAA2bwAAJC6AAAwPAAAgLoAoAc9AMAePQCw3z0AIAy9AECZvABgCL0AcI+9AKCdvQDQ1T0AQN08ALCLvQDgKz0AwG+9AACAOQAALrwAAPC7AAASvACAGz0AAGe8AACDPAAAF7wAQOw8AADbOwAATL0AgOU8AAAyuwBgHD0AAGE8AADVuwBguz0AgNg8AOAwPQBAt7wAYDI9AIDavAAgJ70AwIQ8ABCdPQBgKT0AwNA8AKBHPQAgIr0AAM27AAAmvQDgB70A8Ma9AMATvQAAhrwAIDK9AEAIPQBAgb0AgPE9ACAFvQDAb70AgD29AKBAPQAA3LwAAKE8AKBUPQCAorwAAAw8AAAHPAAgPr0AQF09AAD1PAAAErsAAE49AFCWvQAAmLsAACu8AGAJPQBgTL0AAB+8AKACvQCA3jwAAG28AAAWvQBAxzwAEIy9AMCUvACAaz0AYKu9APCOPQCAoTwAsKO9AIBYPACAFDwAQF29ACBbPQAALLsAAMY8AICOvQAgnj0AYFA9AIBtvADgBz0AQAe9AEAmPQAA77wAADi8AFCfPQCAbbwAYH49AGAHvQAAfDwAACk8ACBGvQBA8LwAgC29AECKPQDgdr0AgAI9AIAfPQCAwDwAYEm9AABNPAAANj0A4BY9AIAIPAAARLsAIHM9AECKvQDAH70AALG7AAAfPAAA7bsAwG+9AIAdPABAkb0A4FA9AIAWPQDAkLwAAG08AABUvABwjD0AAI07AKBLPQAAUzwA4Gq9AEDWPACAOLwAICo9AECVvAAACD0=","chunkHash":"1a136054f2011c7cd7af9f04918bf7961168bc98171f9a4f78a664812b5fd161"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_batch(self, batch, max_samples=4, save_dir=None, show=True):\n        #...\n        # Limit samples to visualize\n        n_samples = min(batch_size, max_samples)\n        \n        # Create save directory if needed\n        if save_dir:\n            os.makedirs(save_dir, exist_ok=True)\n            \n        # Visualize each sample\n        for i in range(n_samples):\n            # Extract sample data\n            sample = {}\n            \n            # With custom_collate_fn, everything is already a list\n            for key in batch.keys():\n                if key == 'metadata':\n                    # Handle metadata dictionary special case\n                    sample[key] = {k: batch[key][k][i] for k in batch[key]}\n                else:\n                    # For other keys, just get the i-th element from the list\n                    sample[key] = batch[key][i]\n            \n            # Generate save path if needed\n            if save_dir:\n                metadata = sample.get('metadata', {})\n                sample_id = metadata.get('sample_id', f'sample_{i}')\n                if is_volume:\n                    #...\n```","range":{"startLineNumber":421,"startColumn":0,"endLineNumber":447,"endColumn":0},"embedding":"AMAnvQAANjsAgBg8AECMvQAgwr0A4Dq9AAAmOwCARb0AoKq9AACruwAA8zwAwBs9ACBFvQBgkr0AABi7AGBsPQDgUL0AoHs9AAAlvACAHDwAwIM8AAC8vACggj0AgHE8AIDtvAAARDsAIE29AMB9PQDgCj0AQL28AABGvQAAS7wAQDy9AOAGvQBIEb4AAAY8AIAsPADA4rwA4Bm9AECVvACgsj0AYJK9ACAFPQCgiz0AIEc9AIBrPQCAmzwAQHK9AEC1PQCAND0AAJG7ACDHPQAAqTsAAJU7AACkugAAEzwAgFm9AADUuwAAvLoAQNC8AGAJPQAAoDsAAHk9AECBPQDQo70AAN88AGANvQBADL0AYDM9AADGOwBgBD0AACC8AKBAvQDAurwAAJw7AABDvABwnb0AgHc8AHCavQCwr70AAD28AEC6vABAhDwAAJA6AIDcvAAwhr0AwHi9AIAmvADAr7wA4A+9AACBuwCgdz0AILW9AKAsPQAA9DwAQPw9AICmPAAgkr0AIBY9AADtuwAAwLsAQMA8AOBzvQAAuzsA4BE9AICBPADA9DwA4Fo9AECAvQCgJT0AQL28AMCJvQBgMT0A4FG9AACAugDgVb0AwCU9AIA3vADA5LwAAFK9ABCtvQDgND0AAJq7ACADvQAAGTwAQKS8AIAXPQBA6TwAwBA9AECePAAAkDkAAMS8AIBSPQAQwL0AYEG9AFDbvQAAh7wAACc8AECpvADwwj0AQJM8AIBNPAAggD0AAAg6AEDovADgfj0AwOO9AOCMPQAAiLsAoA89AIARPADQlj0AgE48ABCMvQDAb70AgPm8AAAcuwCgQD0AAIq8AAC8ugCAZbwAYA69AABEOwAA6jsAgGe9AEAFPQAAKrsAADg7AECgvQBAD70AADq8AADhuwDQgz0AAGS9AJCNPQBA7LwAQIO8AMAcvQDQg70AAJI8AIDUvADAlLwAoBi9AACIvADgBr0AQK88AKBkPQAAXzwAgD+9AIDGvADAkjwAAG88AMDpvAAArz0AwMg8AGAivQAAmTwAQKm8AAA4vAAA6bsAoDK9AEBhPQDAorwA4Di9AOAUPQBwvL0AQMM9AGCGvQAAvTsAAA88AAA9vACQmj0AwEc9AMABvQAAIjsAwKw8AGAhvQBgoz0AgFC8AIC7vABAibwAAKK7AADXuwBAiT0AAGI8AICqPAAAEDsA8Jq9AAC+PACgNT0AwKI8AGAEvQDAzDwAgCo9AICnvACAKTwAQKC8AAAtPAAAQrwAgD88AADVuwDwpz0AAPy6AAAYPAAAfTwAgLE8AABnvQCA4bwAwIu8AAB0PAAA+DsAAMy6AICwvAAg3b0AAL+7AABYOgCA1b0AAJe8AAAvvQCAEzwAAE89AABevADgEL0AAJA5AAAYvAAgdz0AAAE9AAAAPADgBL0AAAU9AAA4OgAAvLsAgEM9AOA/vQCA9LwAgEI9AABqOwCgHz0AwKo9AAAGvACAoL0AACi6AADIPABA+jwAAAo8AOBKvQAA5LwAgCk9AADHuwBwlL0AgPY8AAClOwAA+rwAgBm9AID3vAAAjLwAAJ08AEBRPQBgVj0AAKi7AMDQvACgoL0AwKg8AODaPQAAUbwAAIK7AECtvADgDD0AIGQ9AKAlPQCAnDwAoB+9AEBIPQCA8DwAADA6AOBbvQAA7jwAQOY8ACBKPQAAtDsAQAq9AGA4vQAgVz0AYDg9APCNvQAAk7wAkIy9AMA6vQCgCT0AYB+9AAD6PADgNr0AAMw6ABCKPQAAOLoAIHS9ALCaPQAAYjwAQNG8AEBUPQAA2L0AoEa9AMBYvQCAOr0AAHC6AKAAPQCA2TwAwJQ9AAB6PAAAVL0AAOY7AJCFvQBQpb0A4AQ9AMCYPQDgAL0AgPW8ANDYvQBA5rwAgFy8AIBivQAAmTsAAPI9AABiuwCAgjwAAOS6AEDjPACAcrwAAMy6AAB+PAAglj0AQJi8AADhvAAAlLwAkJW9AOCTvQCg0D0AwC49AAAXvQCA5TwAQMa8AABqPAAAOTwAAHA8AAB4uwBgVT0AAPU7AEDpPABwg70AwPc8AIDBPACQhb0AQJQ8AACAOQAAPT0AgHo8AABHvACQmT0AAPs8AEBbPQAAEb0AYHM9AIClvAAAirwAAOo7AJCHPQDAST0AgDE9AABZPQBgqb0AYAM9ALCMvQCAJjwAkKK9AAD7vACgIb0A4IG9AECBPABAS70AgMs9AMDHvACAt7wA4B69AADUOwDAIL0AAOM7AGCIPQDALb0AACI8AIBEvACAC70AoCo9AIADPQAAuTwAwDw9ACCSvQCAQDwAAOm7AAAlPQAAvDoAQDa9AGBuvQAAB70AAAM8ANCFvQAAqDwAAOW8AIA1vQCAUj0AsIy9AMAlPQAAPLsAMJm9AEDUPAAAGT0AAP28ACA3PQAAbLsAAI09ACA5vQDglD0AEJ09AACDvADgXD0AALW7AMC6PABAWL0AAJu7AIA1PQCAQLwAEII9AIAuvQBA2TwAgME8ACBQvQAAr7wAAEq9AADnPABAWr0AAHC7AMAMPQAAXrwAsKu9AMD/PADAtTwAAM89AMCGvACAODwAoDg9AAB6vQCAzLwAABS8AMDoPACAgLwA8Ja9AMCbPADgor0AoAc9AKAcPQAAvLwAwLo8AIBTPAAgYj0AgLU8AMCDPAAAtrwAADC9AADHPAAAxzsAYE49AADcugBAKT0=","chunkHash":"285aa7c9b06eb9b22e4f95926fe0f8f032950adb9185d1c917a0670504c4faed"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_batch(self, batch, max_samples=4, save_dir=None, show=True):\n        #...\n                    save_path = os.path.join(save_dir, f\"{sample_id}_volume.png\")\n                else:\n                    slice_num = metadata.get('slice_num', 0)\n                    save_path = os.path.join(save_dir, f\"{sample_id}_slice_{slice_num}.png\")\n            else:\n                save_path = None\n                \n            # Call appropriate visualization method\n            if is_volume:\n                # For volumes, just show the middle slice for batch visualization\n                fig, axes = self.visualize_slice(sample, save_path=save_path, show=show)\n                figures.append(fig)\n            else:\n                fig, axes = self.visualize_slice(sample, save_path=save_path, show=show)\n                figures.append(fig)\n                \n        return figures \n    #...\n```","range":{"startLineNumber":447,"startColumn":0,"endLineNumber":463,"endColumn":22},"embedding":"AICYvAAA3zsAADO8AECmvQBQ7r0A4Be9AADjuwDABb0AQJS9AAC7vABgOj0AgC89AAAbvQCwq70AAJg7AMB0PQAgYb0AoH89AMDPvACAPzwAAKU8AKAIvQDgXT0AAI88AKBBvQCAPzwAgP68ABCSPQDgHz0AAIS8AEBRvQCAMbwAgBe9ACArvQCAHL4AAMu7AIAOvAAANL0AQJa8AIDgvADA6D0AAKu9AGAlPQAQmD0AIIs9AECEPQAABjwAwFi9AJCgPQBA+jwAAPA5AICZPQCAATwAAA48AAANvADACz0AAHK9AACQuwCAKTwAAPu7ACAUPQAAyLoAQGE9ANCcPQCAEr0A4CY9AMA5vQCAqrwAAL88AIAxvAAAgLkAgAO8AAAqvQCAbrwAwIs8AAC7uwAghb0AQJU8AOB+vQAAwb0AQIW8AIAovACAKTwAQLw8AIACvQBwi70AUJ29AIB0PACAerwAwCK9AACcOwBASj0A0KO9AKAWPQAAmTwA8BE+AAA+OwBgkb0AIEg9AACkuwAAJLwAQP88ABCEvQCAUT0AQBA9AAB4OgDAIj0A0Is9AOACvQBA+zwAABO8AJCIvQAAWT0A4Ga9AIBpvAAgib0AcJU9AMDNvAAAbbwAgBK9AMCNvQCgDD0AAGa7AID2vAAAYLkAACa7AMCBPADAnjwAoCM9AICuPAAA8LoAALK8AOBEPQDAv70AgNK8AJCzvQDAnLwAAAk9ACAZvQAw9T0AgLw8AIC2PAAwgj0AgMi8AICmvADQnj0AEMC9AEBfPQCAWbwAABQ9AAA8PABQtT0AYAA9AICnvQBQmL0AwNm8AAApPABgVj0AQIu8AIAlPACA9rwAAH28AABZPAAAKbwAwH29AMA8PQAAj7sAADu8ACCKvQAAL70AAMA4AIA6vACAjz0A8JG9AOCwPQDA/LwAgOG8AGACvQAgKb0AAIs8AMDGvAAAmbwAoAi9AIB1PAAABb0AQOQ8AABWPQCATTwAgHG8AADvuwAAoTwAQNg8AIDwvAAglj0AABw8AEAtvQCAiTwAALu8AABAuwAAdjwAQDy9AICUPQCASLwAYFi9AKApPQBQuL0AYKk9ABCEvQAAKLoAgOQ8AADmvACwkz0AgE49AMBkvQCALbwAABg8AMDpvADAzT0AAFy8AMCtvABAi7wAAOi6AMCNvACAXj0AIBI9AADRPACACjwAQGm9AADJPABgQD0AAEE8AMDTvABAnTwAYAs9AEAKvQAAMDoAACC8AEDcPAAAHbwAAEC6AADsOwDQuz0AAAS7AIBRvADgNT0AgBk8AIBcvQBAmrwAQNq8AIBTPAAAm7sAQNE8AACwOQCA1L0AAG+8AADVuwDA170AADy7AKAkvQCAabwAQIQ9AAAgOgAgMr0AQLY8AACVvABAaz0AgBI9AAAoOwCAprwAwP48AAACOwAAT7wA4Dw9AACsvACAgbwA4Ew9AAA2OwCgFz0AMIU9AABmPABAar0AgIs8AAA0uwDAQz0AAPU7AAAUvQBgI70AACo9AAAFvABAXr0AAK08AACyuwDAG70AoAq9AACSvAAA1DoAgDM8AEDaPABATj0AAIg6AMArvQCglb0AwIw8ALDWPQAApbwAgLS8AEDCvADAOT0AIGc9AIDWPAAAIrsAIEW9AJCBPQBA8DwAgME8AMB7vQDAEz0AgAI9AIBxPQAAgLkAIAa9AKABvQAAMD0AoHA9AIBrvQAAxDoAQCu9ACAFvQCAFz0AQES9AOArPQCgEL0AwMi8AOA7PQCAPDwAQNq8AOCXPQAArzwAoCG9AIAqPQCQzr0AgAG9AKBpvQDAhr0AAMM7AADcugAAED0AoJI9AADnOwAQmL0AAKa7AGBsvQBQnb0AYCY9AMBNPQAAtLwAoBW9AOD1vQBABr0AgGy8AMCVvQAAsLkAQOI9AAANvACAGbwAALK7AEDVPACAML0AAJo7AKAiPQBwmz0AAPu7AIAUvQCAO7wA4Mi9ALCrvQCAsj0AQBk9AABGvQAAGLoAgKy8AACqOwDA9zwAgBw8AADAuQBA2DwAgCC8AMDJPACgJr0AgNU8AECePADgWL0AIAs9AAB4uwCAzzwAQJY8AACwugCQuD0AQNM8AIDTPACAlrwAoJI9AAAHvQAAzrsAACC7AOBNPQAACD0AAG88AOAVPQBAh70AAPI8APCpvQCAB7wAII69AADcOgAgUr0AAFy9AAAnPABAZ70AwMA9AMDWvACAIrwAYCy9AECIPAAAs7wAAJE8AAB1PQCA8rwAAOw8AMDAvADAxLwAAC88AADmOwAAtzwAwOM8AOCgvQAAyjsAQKe8AEAcPQAAyLsAIBG9AEB5vQDAvLwAQLu8AIBIvQDAnTwAwJe8ACAjvQCgMT0AcJi9AOAhPQCALrwAgLK9AEDGPAAApjwAwOK8AOB1PQAAHrsAwOc8AIAHvQBwlT0AMJg9AADRvACwkz0AwMa8AADCOwCABL0AAEC8AMB/PQCANr0AQDw9AKBovQBgHj0AAEE8AIBavQAAHLwAUIe9AIB5PADAdb0AgL48AGAAPQAAlDoAgKK9AMC9PADgIj0AEK09AIBxPAAAiDoAYAE9AOBSvQBAj7wAAMG8AIDhPACAabwA8IS9AAAOOwCAqr0AAC49AACrOwCAMr0AwD09AMAXPQAAUT0AgF+8AMBSPQBA5rwAQN+8ACAAPQAAgzsAoBs9AACmuwCAozw=","chunkHash":"abc3f99996c6dfcd570e5c9b9b80c66c61bc3de1c4761ee56594c85381eef4aa"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None):\n        \"\"\"\n        Visualize a side-by-side comparison of original and resized volumes.\n        \n        Args:\n            data_item (dict): Data item from the dataloader with resized volume.\n            original_volume (np.ndarray): Original volume before resizing.\n            original_mask (np.ndarray): Original mask before resizing.\n            save_path (str, optional): Path to save the visualization.\n            show (bool): Whether to display the plot.\n            title (str, optional): Title for the plot.\n            \n        Returns:\n            tuple: Figure and axes objects.\n        \"\"\"\n        # Extract resized data\n        resized_volume = self._tensor_to_numpy(data_item['volume'])\n        resized_mask = self._tensor_to_numpy(data_item['mask'])\n        \n        # Get middle slices\n        orig_mid_idx = original_volume.shape[0] // 2\n        orig_img = original_volume[orig_mid_idx]\n        #...\n```","range":{"startLineNumber":466,"startColumn":0,"endLineNumber":487,"endColumn":0},"embedding":"AACduwAgPD0AYC69AGAWvQCQt70AgCq8AMDLPACASzwAoH+9AADAugCAHzwAoFo9AIAFvADgYL0AALo7AICfPQCAOr0AUI89AOCFvQAgkj0AgF48ACBJvQBwlz0AgAg8AAAYvQAARbwAAMg8AFCbPQDgOz0AQIS8AICxvABA5rwAAD48AACoOwCQ2r0AAM88AABmPACAu7wAgFI8AIALPADQtz0AgBS9AIDCvACALD0AwL89AACsOwBgPj0AIIm9AIA3PAAAwbsAgAY8ADCrPQBAgLwAoGm9AECmPAAAZj0AAOS8AACAugAAyTsA4C29APCMPQCwh70AQGE9ACAOPQBgRb0AAA67ACA4vQAA6DoAgEI8AAB9vAAA7DwAgEQ8AABYOgAAMr0AgKo8AADfuwAA5LwAYDs9AAAOvQBwir0AgFy9AACgOgAArLsAwFI9AOAmvQCA07wAAHa8AABYPAAAvjsAMKK9AAA8OwAAyTwAIGq9AIBZPACgCz0AcNE9AAArvADAfL0A4C89ANCKPQDAmzwAYHQ9AABDvQAAbTwAMIo9AOA9PQCgvz0AAP08AECEPADAtDwA4H49AMD8vABgez0AQHW9ACAyvQBA0LwAAKC7AKAovQAAabwAQLa8AOCHvQDAQb0AgDq8AEApvQBAfz0A8JK9AIAoPACQqr0AAJI8AED+PADAyTwAgE68AADcvABwwr0AQJ+9AAB6vQCAvbwAgFm8AIAlvQDgAD4AgFS8AADguQAAGLsA4GG9AADaOwBAlD0AYFi9AAAiPQDgPb0AQM88AABwPADggj0AgIs8ACCdvQBQ5b0AgG28AICrPABA/7wAgMg8AIAsvQAAbb0AAB68AMD6vACgBr0AgAW9AGBbPQCgBr0AAKK8ABCCvQBAjr0AAOi6AACTOwCgID0AoF+9AHCRPQDAm7wAQJ28AAAQugAA/rsAQBY9AIB5vQBwlb0AQIe8AACJPABAR70AoCk9AICQvACAKDwAABi7AKByvQBAqTwAIAc9AJCGvQDgdD0AIH29AMAlvQAANz0AALM7AACNuwDAZD0AgDO8AGA8PQAAFzwA4DC9AIDUPACAsL0AADS7AAByvAAANjwAAIk8AIAwvACgKD0AAPc8AGBxvQDAwjwA4EO9ACAivQAAjj0AAFq8AOB1PQCAxbwAkOQ9AIDjPACAdzwAgEw8ACBMPQBgST0AgC69ACA7vQAAaLsAAMC5AIArPAAAeDoA8Lc9AIDevAAgvb0AgIy8AOBIvQDAqDwAAGg9AOANvQCQkT0AADA6AEBfvQBAAz0AAAi7ACAXvQAgfL0AgH68AIDTPADAQT0AgK48AAARPADgfb0AIBK9AMDavADgp70AUIo9AEAwvQAABLwAALU8AABFvACAjLwAADK7AEDovACANz0AQCE9ACAfPQDwgr0AwKU8AEAaPQAAO70AgNk8AIAhPADATr0AAAs9AMBsPQBgEz0AAFc9AKAEvQDAyrwAAP08AAB4uwCgYz0AQIg8AABcvACgar0AwMw8AIBkvADggr0AAI68APC5vQCAGzwAwAC9AAAOvQAApDsAADA8AAD8ugAAJrwAQEy9AIBnvACAar0AgK28AFCrPQAARLsAAFK8AEC5vACA5zwAwLy8AMBwPQBAgrwAUJO9AKAIPQAAjzwAgG88AKAAvQCgnD0AAMm7AECrPAAAUrwAwBO9AADfvABAdT0AwOw8AGBHvQAATj0AgCS9AIDyvAAAyTwA8Iq9AEC/PAAAeLsAgGC8AAAkOwDA6LwAACS7AIBCvADAjzwAwMy8ACBdPQAATL0AAAA4AEBLvQBgh70AAKs8AADEugAADTwAIFg9AMAjvQBAdL0AQPa8AEAavQCARr0AgCA9AICTPAAAzLsAQNC8ACDQvQDA0DwAAOE7ADCxvQDwgr0AOAs+AAAHPAAAWLwAANO7AMDuPAAAmDwAgDm8AAD4ugAgsj0AABk8AMCjvQDgNL0AABK+AKAIvQAAMz0AANg6ANCqvQBA6jwAABK9AECAPAAApbsAcNo9AMAIvQBAJT0AwBA9AKB6PQCgS70AAMS8AABAvACgzr0AANU8AGAqPQBgUb0AAOO7AOBoPQDAfD0AAAQ9AFCCPQCAAbwAABI9AEByvQDA2rwAgIi8AIAOPAAgEz0AACY8AADjvABA0LwAAGE8AGCWvQAABzwAwJq9AAB8PAAAYLoAgCq9AIAHPQAAXb0AAJi6AAAiPABAFr0AAIC4AGCavQAA5DoAAOI8AECNPAAAHDsAYK49AECJvQCAwrwAcIU9AIBZPQCAB7wAwLE8AIBVvQDA9LwAQEM9ACAzPQAAcbwAAOu8AACBvACA3jwAoHW9AIAtvACAObwAQNk8AGAovQBADD0A0JW9APCGPQCAmD0A4NK9AEDhPADgKL0AYCK9AEDxPABgML0AYG49AACFOwBgwz0AAH47AAB+uwDguj0AQO48AAA3PQDAhrwAoCS9AADsugAAub0AwLg8AIBivQDAaT0AgOA8AGAfvQBAGj0AgCA8AMCwPABwl70AwI88AID3PACAgrwAoJy9AAAvPAAAszwAYE09AEAevQAAujsAACa8ACADvQAA0rwAAAA5AOAFPQCAObwAAOQ6AICbvACA5LwAgAw9AADQOQAA8rwAoFk9AICIvACAbD0AIAU9AOARPQCAer0AoEi9AMDmPAAAIrwAoJI9AAAAvACAVz0=","chunkHash":"11c4139e601eb9b33161a8ea44b38e52f89e87acef64c634990f8dd337647d5e"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None):\n        #...\n        orig_mask_slice = original_mask[orig_mid_idx] if original_mask is not None else None\n        \n        resized_mid_idx = resized_volume.shape[0] // 2\n        resized_img = resized_volume[resized_mid_idx]\n        resized_mask_slice = resized_mask[resized_mid_idx] if resized_mask is not None else None\n        \n        # Normalize for visualization\n        orig_img_norm = self._normalize_array(orig_img)\n        orig_mask_norm = self._normalize_array(orig_mask_slice) if orig_mask_slice is not None else None\n        \n        resized_img_norm = self._normalize_array(resized_img)\n        resized_mask_norm = self._normalize_array(resized_mask_slice) if resized_mask_slice is not None else None\n        \n        # Create a 2x3 subplot grid (original and resized, each with raw/mask/overlay)\n        fig, axes = plt.subplots(2, 3, figsize=(18, 10))\n        #...\n```","range":{"startLineNumber":487,"startColumn":0,"endLineNumber":502,"endColumn":0},"embedding":"AEDKvAAgRz0AAIG7AIDCvAAwz70AgBe9AKA1PQDAjDwAELO9AIARvABAxDwAwEw9AMCLvAAAC70AgLY8AKBnPQDAL70AIF09APCovQCAVD0AgNM8AIC7vABgEz0AAKy7AGAAvQAAlTsAADS7AGB/PQAgNj0AgDw8AAAjvQDAC70AAAAAAACbvADQCb4AAAg7AACvOwDA7bwAAGi6AIBGPACA6T0AoKG9AIBcPACgYj0AUK89AIARPQAA+DwAEIO9AIBqPACACbwAABY7AJCjPQAAMDsAAFC8AAA0uwCgdT0A4Ga9AMDiPADAQ70AQPm8AFC5PQCAF70AAG49AIAgPACAZb0AAN47AEBHvQBA2rwAADc8AACKvAAAUTwAAIY8AIALvABAlrwAoE49AIBMPAAASL0AgBY9AGA1vQCAdL0AYJS9AMDsPAAADLsAwEo9AADQvABAQ70AgAK9AABoPAAA0LwAUJC9AMBRvQDASj0A0IW9AEDrPAAAJjsAIPE9AADQOwBgTL0AYCk9AIDrPAAA7DwAYAs9AGBPvQDAHD0A4CA9AEDsPADAgD0AoCI9AIBGPABgHT0AYC89AMA6vQBgdT0AAGe9AEDavAAApbsAAIS6ACAWvQCAWbwAwM68AIBTvQCA5rwAgFg8AIBCvQBgUD0AIBK9AICrPACgZ70AgMw8AIBfvACANj0AgAq8AIApPQDg3L0AoMy9APChvQAA/TsAYD09AECLvQDA9T0AAGy8AIDjPAAAADkAoEu9AEAqvQAAbT0AEMK9AOCjPQCAx7wAgGQ9AMDDPAAAhj0AYAU9ANCRvQAAw70AQNG8AFCXPQAAFTwAADI7AMD7vAAgY70AgHy8AMA+vQBA6rwAUIS9AMCkPQDAIb0AgDi9ABCLvQBgj70AAEi9AMC/vACADz0AgJ69AICePQCAgrwAQIW8AKAIPQAA0rwAEJU9AABGvQAgI70AYAC9AIDuPABAP70AAAI9AAAEPAAAYDkAADO8AEARvQBA2jwAwLQ8ACBZvQBQjj0AAMC6AMBuvQAAJz0AAJK7AMDFvABQmT0A4Au9AMCQPQDA0jwAYC29ACArPQDAy70AwMg8AECRvAAAgDgAAMI8AACOuwBApTwAAHQ9AOBLvQAA1jwAgNC8AMDgvAAAkz0AgCK8AGBvPQCA/bwA4JU9ACA8PQDAkTwAgP48AADxPABAXD0AwMW8AICivACAdjwAAFY8AIDVPABAizwAwGg9AIDdvAAgar0AQMW8AAASvQBAjTwAoDI9AAANvQDwnT0AAJA5AIDdvADAmTwAQKc8ACB4vQDAQb0AoBm9AMDbPABgST0AAH47AABSOwDgRr0AgMa8AACRvABQwb0AgFA9AMCOvQAAxjsAwLo8AEA5vQBAX70AwKm8AIBGvACACT0AAFU8AGBCPQBggL0AQAA9ACAUPQAAOb0A4B09AACZOwDA17wAACo8AAAyPQBgcD0AAGE9AABouwAgL70AAB88AAAAAACAUj0AACS7AEASvQDAMb0AYCU9AAAYvADgqr0AAII7AACkvQAA/bsAAMs7AEA7vQAAOrsAgBy8AADzuwCAFjwAAN28AADEOgBAMb0AAO68AICsPQDgI70AAC67AMDbPACAWT0AAH88AIAaPQCAC7wAsJi9AOBWPQCAEDwAAIA7AIBPvAAwgj0AgDo9AEASPQCAnbwAgAS9AFCHvQCAej0AACI8ACA1vQCAEj0AgEe9AMBYvQAgDj0AsJG9ACAePQBAwLwAQI68AACUugAA1DoAwNu8AABBPACAQzwAYBC9AEACPQAAY70A4Ai9AIAtvQBAX70AgPE8AAANvAAADDwAoI09AABqOwCAF70AADC8AABWvABAd70AwJg8AAAPPQAAXrwAwLC8AKCsvQAAcDsAACg8AMC2vQCgFb0A0PM9AAAsvAAAebwAAJS7AIDxPABAhrwAQIq8ACAIPQDQjD0AgGW8AEAwvQAACr0AEA6+AOCfvQBAXz0AAEw7AFCnvQCAPrwAACi6AECSPACAtzwAUII9AAATvQCAMD0AQIg9AEBZPQCwlb0AAIS6AABaPABAeL0AADM8ACBUPQBAubwAgBu8AOALPQBwlz0AwDo9AICPPQAAmLsA4Go9AMA2vQCAqrwAgPK8AEDhPACgDj0AoDc9AICgvADAj70AQMA8AFCZvQDA1zwAAC29AMCjPADAxbwAQGO9AIBjPAAwq70AIDI9AAAovACAIr0AAI47AKBHvQAAarwAgAs9AMCIPAAAYbwA4IM9ABCEvQAAJjsAoFc9AKASPQAAqjsAAPc7AOAuvQAAXTwAwBk9ABCEPQDA6DwAoC69AIDjvAAAUrsAwDq9AECHvAAAdTwAgO48AOAQvQBAxjwAoI29AGBPPQAAtTwAQIq9AEDuPAAAB7wAcIi9AMBlPQAgCb0AgOo8AIAVPABgfD0AQJU8AABHPABA2z0AAGS7AIAIPQAgNr0AAC28AIARPQDQur0AwLA8AKB6vQCwuD0AQCo9AEDnvAAAMjwAACS8AABNvAAwqL0AgIU8AOArPQAAQ7wAAG69AICsPAAgND0AwLY9AOBZvQAADjsAAGI8AEDgvABAwLwAwMc8AICVPACAlrwAACW8AABwuwBgWL0AgKA8AMDFvAAA5LwAADk9AAB/PAAADz0AQO+8AOAPPQCAiL0AAK68AABePAAA3TsA4JI9AADOuwCgMj0=","chunkHash":"00c50634148f30550880dd4effb8940bac3034023a8521fb7f7d26d79e0087b7"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None):\n        #...\n        # --- Original volume visualization (top row) ---\n        # Raw image\n        axes[0, 0].imshow(orig_img_norm, cmap=self.cmap)\n        axes[0, 0].set_title(\"Original - Raw Image\")\n        axes[0, 0].axis('off')\n        \n        # Mask\n        if orig_mask_norm is not None:\n            axes[0, 1].imshow(orig_mask_norm, cmap='binary')\n            axes[0, 1].set_title(\"Original - Mask\")\n            axes[0, 1].axis('off')\n        else:\n            axes[0, 1].set_visible(False)\n        \n        # Overlay\n        if orig_mask_norm is not None:\n            axes[0, 2].imshow(orig_img_norm, cmap=self.cmap)\n            mask_overlay = np.ma.masked_where(orig_mask_norm < 0.5, orig_mask_norm)\n            #...\n```","range":{"startLineNumber":503,"startColumn":0,"endLineNumber":521,"endColumn":0},"embedding":"AMCovACAaD0AgHu8ACApvQAQzb0AQCq9AAA2PQDAyDwA4GW9AADMOgCAFj0AQHw9AIAMvADAwrwAQNM8AGCSPQDAO70AoII9ANCbvQAgQD0AAPg8AMCZvADAPD0AAFM8AEDkvAAAu7sAQJS8AMCMPQDgCT0AAHC7AIBWvQCgIb0AACQ8AAAyvABoCL4AAFA7AGAMPQDAyrwAAIS8AIAtPAAwzT0AIJG9AMCZPADQpj0AoKw9AABPPQBA6zwAAJG9AABaPAAAEjsAAOi6ANCvPQAAvjsAwNu8AACgOwCA4DwAYHG9AMAFPQBAPr0AwM68ACCnPQAA67wAAFg9AIAfPACAUL0AANS6AGCYvQBA6rwAAMQ7AABUuwDAhzwAAEe8AADqvADAlrwAwPU8AAA0OwDAHr0AwNs8AMBYvQCALr0AAIm9AAC8PAAAErwAgN08AED/vACgVr0A4C69AADcOwCAA70AQJC9AEBlvQAANz0AgGm9AAAEPQCAZjwAIPY9AIACPADAXr0AoEA9AIDRPADAwTwAQLc8AIDGvABAGT0A0IA9AGBEPQAAdj0AYBk9AACAuwCA9DwAAOY8AGBqvQAgSz0AADW9AAAEvAAAoLoAQJO8AICgvACAk7wAoA29AEB/vQDAsrwAgH08AKAnvQDgLj0A4Be9AIDFPABAN70AABw7AMD5vAAgGD0AgBG8AKAQPQCw2b0AANG9ALCTvQAA0jsAQH89AMA5vQCw5z0AAE68AACVOwAAbDsAgB29AKADvQBAcj0AsLm9ACCKPQBAnbwA4Dk9AADpPACQqT0AAPo8ACCivQAgyr0AYC29AFCcPQAAlTwAgGO8AIC4vACgXb0AgMy8AAAivQAAwLwAYGa9AFCuPQAgS70AADW9AOCAvQAwnL0AwEy9AAAuvADAID0AsJ29ACCMPQBAnrwAwMa8AAAPPQDAMr0AgIU9AMA6vQCAvbwAgKa8AEDwPADATr0AYDg9AIADPACAqTwAgAC8AEDivADgBD0AwI08AADJvABAtz0AAI28AOArvQBgKT0AACC5AEANvQCAIT0AgLK8AKCMPQBgOD0A4G+9AGA5PQAglr0AQB89AABDvAAAyrsAwP48AAD0OgBAxjwAAE89AIBSvQAAmTwAgNi8AEDOvAAAqT0AAJi7AHCDPQBAqrwA0KM9AOBTPQCAyTwAIAg9AMD9PABAPD0AwPi8AKALvQCgBz0AwPc8AADJPAAAkrsAoIA9AMDFvADAX70AAF+8AEAhvQDA6zwAoCM9AEANvQCwpD0AALC5AMCrvADArTwAgLI8AMB9vQDgKL0AIDK9AID5PACAUj0AgNg8AACAOwDQh70AAOK8AIDgvAAg6r0AYIc9ABCRvQAAEDwAwCI9AKApvQCAHL0AIA69AAABvADALj0AgN48AIDDPADgdr0AAAA9AIAWPQAgJ70AoEQ9AIANPACANL0AgN48AOAiPQCATD0A4FI9AACCvACAFL0AgG88AAAUvABAaj0AgES8AGAVvQAAM70AoD09AIBOvABwvL0AAC88AHC1vQAAx7sAwIS8ACBRvQAAOLoAACw7AACSOwDAuTwAgLi8AABauwDAWL0AwPO8AGCkPQAA3rwAgF08AAAdPQBAJD0AQPU8AKAgPQAASLsAsI69ALCRPQAA3zwAgFw8ACAPvQDAfT0AgGA9AMByPQAA9rsAQFy9AGCKvQCALD0AAOE7AAAZvQAALD0AQCS9AIAWvQCAEz0AAK69AIDqPAAA7LsAgHq8AIAIPAAAHbwAgJy8AAB+PACAjTwAwB69AACzPABAMb0AgNW8AGAGvQAAN70AgP48AMC4vAAArTsAYHA9AADTuwAgCL0AwIG8AACnvACAGb0AgP08AAA8PQCAabwAgLK8AFCzvQAAgLkAQMY8APC4vQDAqLwA8OY9AIDSvAAAADgAAKy6AADSPAAAsDkAAJm7AICZPABwhT0AgDW8AID3vADAvLwAYAm+ADCVvQCwiD0AgAG8AHCivQAAhTsAADI8AAAYOwCAW7wAAI49AMA0vQBgMj0AIEA9AKBEPQAgq70AAKe7AACQPADAt70AQIS8AIBQPQCAo7wAAL87AAA5PAAArD0A4EI9AMCRPQCAELwAoD49AGB0vQBAuLwAgAm8AEAXPQAA8zwAIC09AADXvAAgg70AgPY8AABUvQCA1zwAwB69AECFPAAAN7wAwBe9AIAfPAAAt70AoDA9AAAguwDA0LwAAAa8AIBDvQDA1LwAgPg8AADKPAAAtbwAYHI9AJCfvQAA+LsAYEE9AIAyPABA8TwAgHg8AKAuvQAAgLsAgAc9AJCOPQBAzzwAwMG8AIAsvQDgA70AgGG9AAAMvAAAijwAgAM8AIBCvQAgAz0AUIG9ACA5PQCAzjwAQJi9AAAUPQAAI7wAIFy9AIBkPQBAFr0AgBA9AADPuwCAjT0AgDk8AAAwPAAgzD0AAA68AAAGPQCA+7wAAP68AKAXPQDAp70AQIE8AEBivQBgqD0AQIA8AIDtvAAAmDsAAIM7AADwugCge70AAJU8AOBXPQAA3LsA4KS9AABKuwAgPD0AkLQ9AOB6vQCATjwAAMU7AGACvQDAhbwAAMi6AAC0PACAorwAAO67AADuvABAd70AAHc8AMCevAAA+bwAoC89AIBnvADgAD0AQBe9AIBYPQDAQ70AAFu8AADOPAAAKjsAIKk9AIBtvADgDz0=","chunkHash":"c35829fb792b5e6a0ed9e5e0fd8fd8e94dd6171ea610f8430d7d387e819cbd2e"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None):\n        #...\n            axes[0, 2].imshow(mask_overlay, cmap='autumn', alpha=0.7, interpolation='none')\n            axes[0, 2].set_title(\"Original - Overlay\")\n            axes[0, 2].axis('off')\n        else:\n            axes[0, 2].set_visible(False)\n            \n        # --- Resized volume visualization (bottom row) ---\n        # Raw image\n        axes[1, 0].imshow(resized_img_norm, cmap=self.cmap)\n        axes[1, 0].set_title(f\"Resized ({resized_volume.shape[0]}x{resized_volume.shape[1]}x{resized_volume.shape[2]}) - Raw Image\")\n        axes[1, 0].axis('off')\n        \n        # Mask\n        if resized_mask_norm is not None:\n            axes[1, 1].imshow(resized_mask_norm, cmap='binary')\n            #...\n```","range":{"startLineNumber":521,"startColumn":0,"endLineNumber":536,"endColumn":0},"embedding":"AACMvADQjD0AgCO8AIAkvQDg0L0A4CC9AMDoPABAFD0AwG+9AACxuwAgEz0AoIc9AAAhvABA17wAABU8AIBxPQAgN70AwHY9ACCVvQAgPz0A4Bk9AIDuvACgNz0AgBU8AMD/vAAAiLsAQO+8AECFPQCgCz0AALy7AMAtvQBAJ70AAJI7AAD0uwBQA74AAAI7AIDKPAAgK70AABG8AACiOwBA2z0AEI69AECpPACQnT0AMKc9AABjPQCgJT0AQJi9AABgPAAAgDkAgA88AGCrPQAAlDoAYC69AABAOgDALT0AIDm9AMDxPADgNL0AwNm8ADDFPQCgBL0AIEw9AIBjPADgR70AgGs8AECcvQBA8rwAACM8AECJvADAmjwAAIC7AMD9vACAWrwA4BI9AABEuwAgL70AIAM9AIBMvQAgTL0AIJ69AACJPAAAqjsAwNc8ACAVvQAgO70AADm9AACNOwBgCL0AgKu9AOA4vQDgST0AAHm9AMD9PAAAkTsAUP89AADxOwCAPr0AwCU9ACAAPQDAKz0AgJI8AAAdvQDAyjwAQHw9AOAwPQCwhT0AgBw9AICTPACgPD0AQCg9AMBXvQBAaj0AQGa9AAAeuwCAiLwAgH68AICNvABACr0AgM+8AMB+vQCA1LwAAAU8AAAxvQAgTT0AYAy9AEDgPABAOb0AAO87AADWvADgDz0AABq8AEDwPAAQ4b0AUOS9ANCcvQAAwDsAYG09AMA2vQCA6D0AAJC7AACVOwAA7DoAQDG9AOBjvQBAZT0AoLK9AEByPQCABb0AIE49AMAJPQAwvj0AQKo8AICYvQCQ070A4Aa9AACFPQCAvzwAALK7AADRvAAAk70AwIi8AAAdvQBAyrwAEIW9ACCTPQAgML0AwAO9ABCQvQAAnr0AgEe9AAB4vABgDT0A4J29AECBPQAALrsAQAC9AOAtPQBgEr0AwGc9ACA8vQBA37wAwMu8AADzPADACL0AYDs9AIBrPABAvjwAAGq8AEAZvQDgAj0AwIY8AEDnvACgpz0AwI28AEBTvQCgDz0AAOM7AAAovQBgIT0AQLW8AEBuPQDgDT0A4Hu9AIA+PQBQkb0AAOc8AIBLvAAAeLwAIAc9AACxuwBABD0A4Fw9AABbvQCAtTwAQOy8AAA4uwAAhT0AAGA7APCQPQDAyrwAkJA9AOAzPQAASjwA4D09AMC4PABACT0AALO8AMAGvQDA7zwAAKA8AADiPACAKDwAgGs9AEC/vABgUb0AANu7ACBHvQBAqzwAIBA9AKBAvQAwkj0AAAg7AMDQvABAhTwAgKQ8ACBOvQBAgb0AYCu9AIDAPAAgTj0AQIw8AABSOwAggL0AQMy8AIDuvAAQ5b0A8IE9AKCOvQAAXjsAQDY9AEAsvQDgH70AQPC8AADQOgAAKD0AYBI9AIDVPAAAPr0AgO48AOAgPQCgM70AQCs9AAApPAAAEL0AwAg9AEBnPQCATT0AgEU9AIBlvABABb0AAOI7AIABvADAQz0AAJW7AIACvQAAJb0AAEA9AABwOgCgp70AgFc8AJCkvQDAibwAgCq8AGB5vQAAGLsAAMC6AACZuwBA2DwA4BO9AABAOQCgMb0AgBi9ACChPQDgCb0AAKg7AID4PACALD0A4CQ9AOAYPQCAJzwAcJK9AJChPQAgAz0AAIQ8AMDwvABgij0AoEQ9AABZPQAAPbwAwEe9APCVvQCgKz0AgDO8AAAOvQBARj0AIBm9AMDHvADA9TwA0Ku9AADoPAAAsLkAAEm8AMCUPAAAuLsAAIG8AACVOwCAUjwAQKC8AMADPQCANb0AQLG8AKAvvQAgRr0AQNs8AADouwAAYjsA4Gs9AAB3vADA+7wAgCW8AMCGvACAVb0AQCU9AIA0PQAAQrsAAAi7AHDBvQAANDsAAHA8AICrvQCAB7wAgNk9AABzvAAAmLsAACA7AEC5PAAAQLsAAPm7AADrPAAAkz0AAEW8AIAfvQDA/rwA0BC+AFCNvQBgUj0AANS7AHChvQAAtbsAANG7AABYOwAAJTwAsII9ACBDvQBANT0AAE89ACBUPQBgp70AAKG7AECcPACQk70AgEe8AAAxPQDAr7wAgCQ8AMC4PADgqT0AoDw9AHCEPQCATrwAQHE9ACBGvQCAUrwAADm8AIDyPABAHz0AICI9AIDNvACgg70AAPI8AIBqvQBgEz0AQP+8AAChPAAAJDsAgDC9AACRuwBwz70AwBA9AECWvAAA4rwAgLC8AIBhvQAAj7wAQP88AMCiPAAAxrwAIIM9AFCivQAAvLsAoDc9AAAaPABAkDwAAFU8AMAIvQAAtLoA4Bw9AABxPQBAyzwAQI+8AMAAvQCA+LwA4DG9AIB8vAAAbjsAALA7AGA0vQAAyjwAEIG9AGBGPQCAqDwAgJ+9AMC2PAAADLsAIEq9AOCHPQBAIL0AgOY8AACYugDwkj0AgFE8AMCOPACQ0z0AAOw6AAAAPQCA2bwAAAi8AKAEPQCQuL0AAGY8APCSvQAQtz0AYBE9AMAAvQAAcDsAAC48AACOuwCgn70AgLY8AIAqPQAASLsAQJy9AMCVPADAKz0AoLY9AOBQvQAAqTwAAK88AADVvAAAZrwAAPM7AIBmPADAlbwAgHa8AIAsvQBgZb0AAMI8AABZvADA3rwAIEs9AABQvACADD0AwOq8ACBUPQBAZr0AgLy8AECjPACAajwAkJc9AABSuwDAyDw=","chunkHash":"0f795e7cdf2c708010b97b731eabac86d5b04b4398ce7510b51f1de4ed105f31"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None):\n        #...\n            axes[1, 1].set_title(\"Resized - Mask\")\n            axes[1, 1].axis('off')\n        else:\n            axes[1, 1].set_visible(False)\n        \n        # Overlay\n        if resized_mask_norm is not None:\n            axes[1, 2].imshow(resized_img_norm, cmap=self.cmap)\n            mask_overlay = np.ma.masked_where(resized_mask_norm < 0.5, resized_mask_norm)\n            axes[1, 2].imshow(mask_overlay, cmap='autumn', alpha=0.7, interpolation='none')\n            axes[1, 2].set_title(\"Resized - Overlay\")\n            axes[1, 2].axis('off')\n        else:\n            axes[1, 2].set_visible(False)\n            \n        # Set metadata in the figure title\n        metadata = data_item.get('metadata', {})\n        if title:\n            #...\n```","range":{"startLineNumber":536,"startColumn":0,"endLineNumber":554,"endColumn":0},"embedding":"AECbvADggT0AABG8AOAuvQDw4r0AQPC8AMCmPACA8DwAwIq9AAAKuwDgCz0AwIg9AAARvABgJb0AQJs8ADCJPQBAfL0AoIk9AJCbvQAgaD0AQDA9AADquwDAKj0AAEw8AIDGvAAAaTwAgNO8AOCjPQDgAz0AgIo8AKAZvQCgKb0AgFM8AACDuwCg6L0AAIs7AMDCPABgV70AAAe8AAAwOwDA1z0AIJG9AAB8PABAlj0AcJ49ACBQPQAACzwAQHu9AMCfPAAAoTsAAGY7AACpPQAAhbsAwPq8AIBTvACgQz0AoEy9AMDQPACACL0AAL28AOC/PQCA0LwAoEM9AMD2PABgYb0AgIQ8ANClvQAABr0AAPQ7AKAbvQBA0TwAgGI8AED5vAAAhLwAwJI8AABWuwDgV70A4FA9AGAfvQAAgr0AEKi9AICIPAAAVrsAYA49AOAnvQDAML0AwE69AADdOwAAIb0AAH+9AABRvQAAIT0AwIK9AIDTPAAAubsAUBM+AACwOQCgOb0AAD09AIDxPACAdj0AgEw8ACAJvQDAtzwAQCg9AKALPQCAiD0AwDs9AECgPADgLj0AQMo8AABtvQCgUz0AAGu9AABUvACAsLwAAEO8AICmvADA5bwAANS8AGCPvQDArbwAgF48AABwvQBgJz0AAN68AIBaPABgIr0AADg6AGARvQCAAj0AAFy7ACAHPQAQ470AEM+9ANCZvQAAgLsAYEE9AOBvvQAQ9D0AAPi7AIAgPAAAwLkAABO9AIBMvQCgUj0AYL+9ACCNPQCgG70AoEY9AADxPAAQoj0AgAQ9AJCIvQBgs70AIA+9ANCfPQCAhzwAAFe8AADMvAAAYr0AwPe8AMArvQAAfbwAAE69AJCJPQCAzbwAgO+8ALCEvQAwhL0AIEm9AACivACATz0AkK69ACCEPQCAR7wAgIO8AGBaPQCgJb0AMJw9AABLvQCA+LwAgMG8AOAFPQBgSL0AQNo8AAB7PABADz0AAJi7AED0vADABz0AAGM8AEAHvQAgnT0AgGm8AAAPvQAgFD0AAMI7AAAqvQAAWT0AwMK8AMCFPQAgSD0AIGS9AEAGPQAAnr0AwIo8AMCavAAAobwA4C89AAAauwCAqzwAYDA9AGBdvQAAhDwAAO+8AABwvABwgz0AAJy7ACBQPQBAqrwAwJY9AABAPQAAuzsAwB09AADaPAAA8jwAwIK8AABBvQDgED0AAL48AMDXPADAqjwAgIM9ACAevQBgb70AALO7AIBVvQAAsDwAoFU9AOArvQCAlz0AgEW8AEDevAAAMjsAANg8AOBZvQAQkb0AADS9AIDzPABgNz0AgEc8AICIPAAAfr0AIC69AIDnvABQ9r0AMJg9AEBPvQAA7LoAoEU9AEACvQDAIL0AgNm8AABgOgBA/DwAQNQ8AAD5PADgVr0AgAA9AADsPAAgFb0AgB09AACbPACAy7wAgBs9AIBoPQAgZj0AYGQ9AIA+vACAubwAAAE8AADwuQBgSD0AAGO8AMADvQCgWb0AABM9AACAOwBQob0AQLQ8AICzvQAAJ7wAAHu8AIBfvQAALjsAAOQ6AADougCATTwAICe9AADQOgDAQL0AoHe9AHCZPQAAGL0AgFg8AEDmPABgJj0AQOo8AMAAPQCAPDwAMJO9ADCTPQAAHTwAAFo7AMAWvQAgjT0AYCI9AOA0PQAAADgAYFO9AMBxvQCALT0AgDy8AABUvQAAwDwAIEq9ACASvQAA9TwAoGm9ACAhPQAA3rsAAKK8AADlPAAANDsAAJC5AAC7OwAARjwAQBy9AMDzPABgE70A4AO9AKBDvQCAHb0AgNA8AEDdvAAAQTwAIHs9AAAOuwBAHb0AAJm7AABdvAAgSr0AoEM9AMDkPAAA1rwAALW7AFC4vQAAGTwAAHU8AICivQAAULwAoN09AMDuvABA1bwAgCa8AACVPAAAhLsAAK+7AMATPQBAeD0AgKG8AADjvAAAurwAGBC+AMCAvQCAQz0AgMW8ACCdvQAAarwAAMA6AADZOwAAWDoAYG89AGBJvQCgFD0AwFQ9AKAaPQDQor0AAAC7AIAPPQBAi70AALO7AGBpPQAAW7wAAEg7AEDlPADQoj0AYDM9AGCHPQDAqbwAgGU9ACBHvQCAN7wAgHy8AADePABgAD0AQOE8AICevACQhb0AQNw8ABCKvQAgGD0AwMi8AADzOwAAaLsAYEm9AADBuwBwm70AoCc9AMCovADA7bwAANq7AACFvQAAfLwAQEU9AAA/PADAs7wAgIg9ACCDvQAANrsAgEk9AEDdPADAnTwAwJQ8AAAMvQAA9bsAoAo9AACIPQAAsTsAANa8AEDZvADAorwAgD+9AIC9vAAAszsAAJQ7AEAevQCAsTwAoHm9AEBuPQAA7TwAwKS9AEALPQAA4rsAoEa9AMCHPQDgPb0AQPQ8AACCuwBAhD0AgAA8AIAEPACA6D0AABC7AED9PADA5rwAADY7AKAkPQAAy70AAPw8AOA4vQDwzz0AgNQ8AADjvAAAzDsAALI7AADNuwAAm70AgJY8AOBKPQCAb7wAwJS9AACdPADAizwAYME9AKBFvQBApDwAAE08AADevACAgbwAAOo7AAD+PABAnrwAgHe8AABFvQCgcb0AAG48AMAKvQCA/7wAQBQ9AACwOgAA8jwAAKm8AABGPQBgP70AgCO8AIDZPABAtTwAwJA9AAAAOwAAkzw=","chunkHash":"2eef210573892e591fad2385be8c2db30bf29415efa4a9edea6faddf427dee32"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None):\n        #...\n            fig.suptitle(title, fontsize=16)\n        else:\n            sample_id = metadata.get('sample_id', 'Unknown')\n            class_name = metadata.get('class_name', 'Unknown')\n            original_shape = metadata.get('original_shape', 'Unknown')\n            fig.suptitle(f\"Sample: {sample_id}, Class: {class_name}\\nOriginal shape: {original_shape}\", fontsize=14)\n            \n        plt.tight_layout()\n        \n        # Save the figure if requested\n        if save_path:\n            plt.savefig(save_path, dpi=300, bbox_inches='tight')\n        elif show:\n            # Auto-generate a filename if save_path is not provided\n            if metadata:\n                sample_id = metadata.get('sample_id', 'unknown')\n                auto_save_path = os.path.join(self.output_dir, f\"{sample_id}_resize_comparison.png\")\n                plt.savefig(auto_save_path, dpi=300, bbox_inches='tight')\n        #...\n```","range":{"startLineNumber":554,"startColumn":0,"endLineNumber":572,"endColumn":0},"embedding":"AAD+uwBgLT0AAAA5AGAVvQBgur0AgP+8AIBZPAAA5DoAwKS9AAAgOgBAvDwAUKQ9AICyvADAS70AAGC5ADCVPQDAOb0AIDU9AMBTvQBgXz0A4EA9AKANvQCAcz0AgFI8ACAQvQAAizwAACG9ACCWPQDATz0AAJS6AOAXvQCgC70AgAI8AABeuwDABb4AAO48AABrPACAa70AgDK8AID4vAAQ1D0AUK29AOAbPQDwoj0AQKM9AIAhPQCAhTwAEIW9AACpPADAtzwAgAe8AECXPQAA9bsAYBK9AACCOwCgJT0AoFq9AABBPABAzbwAwMa8AJC3PQAAv7wAAH89AEDUPABwj70AgMw8AICTvQAAZbwAwJo8AED0vACgJD0AAIo7AAASvQDgBL0AAJw8AAAeuwAglr0AAEo9AMAivQAQor0AwGe9AMDOPAAAh7sAAKE8AIANvQAgI70AwIa9AABEOwDAlLwA4Ga9AIAAvQDgDT0AQI29AECuPAAArLsASAw+AABouwCAA70AADI9AKAWPQAgUz0AAO88ACAxvQAAljwAYBw9AIC1PAAQkD0AgCM9AAAwOgBAQz0AwMg8APCMvQBARz0AYDS9AEDLvAAA17wAACa7AMCrvACAnbwAQNW8AHCRvQCALbwAALg8AABDvQDAMj0AABK9AICaPABAA70AwOo8AAAAOQCgLD0AgBG8AIBDPQBwr70AIJm9AIDIvQCA7bwAQMo8ACApvQDQ4j0AAJ87AACKPAAArbsAgK+8AIDqvACgLT0A8Ly9AECaPQCgVL0AQB49AEClPADwqD0AgNY8AACnvQBQmL0AIB69AOBtPQCAJjwAgMy8AACAOAAgSb0AgAi8AEBpvQAAnrsAYD29ABCJPQBAobwAQDy9ANCfvQAARb0AANa8AIAtvACAnD0AIJ29AHCTPQAA+bsAgBO8AIDNPAAAzrwAwGc9AOAyvQCAC70AwNe8AOALPQAgBL0AANm7AABhPADAAj0AABo8AOANvQDA0TwAgAg8AMDsvABAaT0AgB29AOBcvQAgXD0AAKS7AKAYvQDAiD0AYFS9AKBuPQCAkTwAQDW9AAByPADA2b0AgMA8AEBRvQAAabwAgCc9AABpvAAAzTwAYEw9AACFvQDAlzwAALW8AAAcuwAwjz0AANy7AGA0PQDA9LwA0Ig9AEBAPQCABzwAQCE9ACAXPQBgEj0AgOG8AOBDvQDAsjwAANg8AADPPABAhTwAoHg9AAAwvQBgS70AABK8AECRvAAAazwA4Cc9AKBVvQCQoz0AAAS8AACQvADgHT0AAI48AEBsvQCgfL0AwO68AGAMPQDA8TwAADQ7AICnPABQp70AgPq8AICivACw8b0A4Ek9AOA1vQAAk7sAQNA8AEA4vQBAFr0AAKe7AAAvPAAgKD0A4BQ9AEAcPQBgaL0AAPc8AAD7PABgLL0AwJE8AADBOwAAPL0AwAY9AMBNPQBAfj0AYHs9AIB7vAAgO70AgFc8AADAOQDghz0AANA6AKAJvQCAOr0AwBA9AAD5uwCgbb0AQIs8AJCUvQAAl7wAwAe9AMBVvQAAiTsAwMw8AAAdPADAkDwAoAm9AIC5vACAfL0AwPS8AOC+PQAAIL0AgEw8AACYOwCAOj0AgPk8AOAqPQDAkDwAIG+9AECZPQCAyjwAAKg6AEATvQBghz0AAB49AGAuPQAAm7sAoBu9AMBpvQAgrz0AAHQ8ACBUvQDAIT0AAF69ACBXvQDAIj0AIBa9ACARPQAAyLwAABK8AEDBPABAxjwAAIA5AEC7PABAEj0AABm9ACA2PQBAP70A4AC9AAAmvQDAQr0AAOg8AAAkuwAA8jwAIJs9AAAiPAAgNb0AACy8AMC0vABgV70AoCc9AIASPQAAmbwAgIG8AFDivQAAXLsAADO8AHCmvQDAk7wAcPs9AOA1vQAAQ7wAAMI7AACvPAAA3LwAAFA8AIC8PAAAOT0AAEA5AIDhvAAgCL0AqAy+ANCSvQDgdz0AAB48AMCBvQAAWjwAgKC8AOB6PQDAiTwAYFE9AADavADgBT0AYE49AOASPQCgm70AAH28AMDePACQrL0AwPQ8AIDCPABAmbwAAAo8AADfPABQsz0AYCo9AKCQPQAAUbwAIDI9AEAnvQAAoLkAwLm8AECrPABgIz0AQPY8AACSuwDQgb0AIBk9ACCdvQAA5jwAIDO9AAC8ugCA1rwAQFG9AAASPADgnb0A4B49AMCmvADAPb0AgCO8AMBJvQAAz7wAgDM9ACABPQCA9rwA4J49ABCEvQAAOTwAAFs9AADfPACAVjwAwKI8AGBdvQCAEbwAAJY8AKB9PQAAsbsAwBa9AKAsvQAAKTwAANO8AICvvAAASDwAgF48AMCvvADAtzwAoIy9AMA9PQCAeDwAsLS9AIATPQAAUjwAgPi8AIAaPQBgVr0AYHE9AACwuQBwmT0AQBQ9AABoOwBA7z0AgIm8AACxOwDgUb0AAFC8AMDzPAAA3r0AALA7AAB8vQAwmD0AwP88AAA4vAAA0zsAAIK7AMC5vABgir0AQOs8AIAtPQCAprwAYFG9AEDxPAAAQDsAgKs9AEA/vQAAwLgAAII7AMDcvAAApbwAQKS8AEBDPQDAnbwAAI+8AADsOgCgCL0AAHc8AACHuwBAUr0AwBk9AIDHPACAlDwAAHQ7AKAOPQCgaL0AwL28AACZOwAARzwAIFk9AIBwvACAGz0=","chunkHash":"c7e78c4ba22dcc8a47a84fc9674601faef0aff2ef26d061b61ac83e8f135591f"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None):\n        #...\n        if show:\n            plt.show()\n        else:\n            plt.close(fig)\n            \n        return fig, axes \n    #...\n```","range":{"startLineNumber":573,"startColumn":0,"endLineNumber":578,"endColumn":24},"embedding":"AMD6vABgdj0AgBi8ACBbvQAQqL0AgA+9AIDtPACAgDwAIKy9AIAJvADAHz0AkJQ9AAB5vADAJ70AAAE8AKB5PQDARr0A4AQ9AMBnvQBwkj0AIBU9AAB3vADATD0AAC08AEA2vQCAlTwAQOa8ADC7PQBA7DwAAKS6AIAivQDALr0AgFg8AIBDvACoBb4AAGo8AABMPABA97wAAIC5AAAVvADw2j0A0LW9AIDtPABgZj0AgIw9AEBCPQAAlLoAIHa9AMC9PACAZzwAANS6AJCNPQCApjwAgAS8AABQuwBgYD0AUIK9AIDmPABA97wAYAe9ALDCPQCAPrwAYG49AMAXPQBAUL0AAMk7AIBlvQCAHb0AAMA7AICMvACAVTwAAHw7AMDhvAAArbwAAAM9AACgOwDgLb0A4GE9AMDAvACAi70AoI29AMD6PAAAVbwAgLs8AMCxvACAhr0AgES9AECtPACAlbwAYJy9AMD8vAAACj0AYFS9AAC2PAAAcLoA0CM+AADEOgAgWb0AAP08AGAHPQDAUD0AoAA9AOCSvQCgJz0AgIg9AEBRPQCAez0AICo9AACUuwDgUT0AIC89AOBJvQAgcz0AgFm9AAAZvQAAzLwAgCM8AKAivQDAgLwAgOu8AIDrvAAAGLwAAAU8AOA3vQDAXT0AAMW8AACougDA3bwAwO08AICQvACApzwAAIi8AKBsPQBgrr0AALG9ACCxvQCAWbwAgBs9AOAfvQDg9z0AANQ7AECvPACAH7wAwNW8AIBmvACggz0AkLK9AHCOPQDA1bwAALw8AMD5PADQoj0AwAw9AKCnvQBA0L0AANW8AIBgPQAA3jsAQI68AADVuwDgcr0AgCm8AEByvQDA+bwAgHK9AMCzPQDA7rwAIDi9AMBgvQBAY70A4DS9AADNuwCgVj0AIHu9AACMPQCAPbwAgBM8AGAjPQBA7LwAAJI9AAAhvQCAzbwAAOW8AEA5PQDAjLwAQOY8AIBoPACAHzwAgH68AKAmvQDA4TwAAEM8AKAjvQCQtz0AwMa8AGBCvQAABj0AAKu7AIAWvQBQkD0AIDa9ALCGPQAA7DsAgCy9AMDBPAAQwr0AQDQ9AAA6uwAA1LoAAPo8AIAsvACAgDwAoC49AGB9vQCAZzwAwNi8AECdPADQkD0AAIw6AEBJPQAABr0AIHs9AAA3PQAATjsAYCI9AKAdPQDgQD0AQAa9AIDTvADAMj0AgJM8AACFPAAAQzwAcIg9AMDKvADAVb0AgHG8AAB/vAAAxzsAAOc8AGASvQAgmT0AQJG8AECuvADAEj0AAJE8AGAPvQDgLb0AgB29AMAHPQBAFj0AAOI7AICYPAAwkL0AANa8AMCvvADQ9L0AsIM9AGBxvQAAXLsAANQ8AIAkvQDAsLwAwPu8AACguwDgMD0AoBo9AEAVPQBgdr0AgC48AIC6PACgPr0AIDg9AIBBvACAC70AgPY8AIBmPQAQhD0AwEg9AIAqPAAAD70AAOc7AAAuOwAgZj0AQIK8AADuvADAOL0AICA9AACNvADAWL0AACK7AIBivQAgBb0AALK8AOBMvQAATDsAgHQ8AAA0PAAASTwAwMq8AMC9vAAgPb0AoBS9AJCrPQDAGb0AgF08AAAAOwDgXz0AgOU8AABOPQCAerwAgJa9ANCMPQCA4zwAAKE7AIDTvABATj0AAFA9AGBCPQAAD7wA4BS9AKBFvQBAfz0AwI48AFCfvQAgJz0AAHi9AEDwvAAAHj0A4BS9AADkPADAgLwAQP+8AMA/PQAASzwAABi8AAC+OwAAtTwAIBm9AADcPACgO70AAFm8ACBYvQAAcb0AgNg8AACquwCAxTwAAJ49AECCvABAQr0AwM+8AMDvvADwqL0AANI8AIDxPAAAxbwAAL68ACDevQAANDwAAPw7ALCXvQAAhLwAENo9AIDSvAAA6bsAAMI8AADpOwBALL0AQNS8AKAAPQCwjT0AANW7AADAvACA7bwA0PS9AMB/vQCgTz0AANi7ANCWvQAA0bsAwNi8AECYPACAbzwA4Es9ACBovQBgBz0AIFw9AGAiPQCgYL0AABg6AGBBPQDgnr0AgJE8AEAPPQBArrwAgHa8AAC8PACAzj0AIEg9AABhPQBAgbwAoC89AIAAvQCAcjwAAEI7AEDPPACAFj0AwJ48AAAhvACQjL0AAOA8AGB7vQBA0TwAQDa9AACruwCgQr0AQJG9AAA8OwDAp70AQPo8AIAHvAAgBr0AAOS6AOA2vQCAXbwAAEw9AAAqPQBgBb0AMJs9ANCAvQAAWzwAgGc9AIBuPACA6zwAgMc8AMA1vQAAjTwAgK08AACMPQAA7zsA4AW9AEC/vAAAKzwAQOK8AADJvAAArTsAgA88AOAKvQCAIzwAIGK9AEB9PQAAdTwAkNC9AMDxPACAE7wAgCy9AGCPPQCAVL0AIDA9AED3PACgkD0AQP08AADzuwDg8T0AABe8AAAOPAAAm7wAAIA7AEAdPQCg4L0AAG08AOB8vQAgsT0AwMI8AIDSvABAwzwAABe8AADnOwAQvL0AgBI9ACAEPQAAYLkAYE29AICpPAAAuzwAMK09AOAEvQAA/DoAAJm7AMDRvAAAqrsAAKA5AGAgPQAAlLwAQPq8AIArPAAAfr0AABY9AABivADAbr0AQLo8AICiPAAABj0A4D29AMAPPQCwgb0AwMW8AAA1PACAtTwAQCs9AACYuwAA1Tw=","chunkHash":"c64711eaf39784167985f6eeb07f4bba27875333f0733e1d93fd9ff7a269ca1b"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n        def update(frame_idx):\n            # Get slice indices for this frame\n            orig_idx = orig_slice_indices[frame_idx]\n            resized_idx = resized_slice_indices[frame_idx]\n            \n            # Update original plots\n            orig_img_slice, orig_mask_slice = orig_get_slice(orig_idx)\n            orig_img_plot.set_array(orig_img_slice)\n            \n            if orig_mask_norm is not None and orig_mask_plot is not None:\n                orig_mask_plot.set_array(orig_mask_slice)\n            \n            if orig_mask_norm is not None and orig_overlay_img is not None and orig_overlay_mask is not None:\n                orig_overlay_img.set_array(orig_img_slice)\n                orig_masked_data = np.ma.masked_where(orig_mask_slice < 0.5, orig_mask_slice)\n                orig_overlay_mask.set_array(orig_masked_data)\n            \n            # Update resized plots\n            #...\n```","range":{"startLineNumber":731,"startColumn":0,"endLineNumber":748,"endColumn":0},"embedding":"AIBxvADghD0AwIy8AEBYvQAwyr0AgIa8AIA4PQCATjwAILm9AAAIvABgMz0AYHE9AIDNvAAA3rwAgDw8ADCKPQDAGr0AIIA9AKCnvQDgPz0AALk8AAClvAAALD0AgGy8AACBvAAAnLoAgGW8AMB8PQAgHT0AAEe8AKAqvQBgE70AgNQ8AIB6vABoCr4AAHg7AMCGvABgBb0AANm7AICWvAAw7j0AIJm9AADNOwBwgT0AQKA9AEAvPQCAJDwAwHe9AACEugBAoDwAAOW7AJC7PQAANbwAgH+8AACYugAAjT0AwA69AEChPACAMb0AoDK9ACCjPQCA6bwA4D09AOA5PQCAO70AAEC6AFCbvQCANrwAgK88AABxvABAtTwAABM8AIDKvACAnbwAQPA8AAByOwCADr0AQM88AKALvQCAHb0AQIe9AMDXPACAabwAgCg9AEDYvACAS70AACG9AABUPAAA7LwAwG29AGAOvQAgeT0AIJm9AAD2PAAAPrsACAI+AICoPADgDr0A4Fc9AOAgPQDAPj0AAHS7AEBLvQBAqjwAAB89AEA1PQBgPj0AIDE9AADZuwCgBD0AgBU9AAA8vQBgAj0AYJS9AOABvQAA6LoAABO8AICtvAAAODsAwM+8AGBcvQCALrwAAAA8AIAuvQAAUD0AwBG9AECyPABAorwAAL47AACOuwCACj0AgDy8AMD6PACw4b0AsNO9AACKvQAAQLwAIGQ9ACB7vQBw/T0AAEq7AEAdPQAA6DoAwPC8AEDrvAAAlj0AcJO9AEA7PQCAD7wAwBY9AADcPADwtz0AQOo8ACBtvQBgzb0AALa8ACBOPQAAnjsAgC48AACQOgCAk70AQPi8ACBRvQDA+bwAwFG9ACCmPQAAIL0AYAy9AECRvQBQpL0AgAu9AECMvACAwzwAkIW9AKCOPQCAF7wAAFC7AICFPACA2bwAYIk9AKA+vQDApLwAgHy9ACAiPQDAbb0AwAc9AAAQOgDA7jwAAKK8AEDNvADgET0AQO48AIDvvABQpD0AAJ+8ACB8vQDgTD0AAGa8AIBBvAAgPz0AAJW8AEAYPQCALT0AAIe9AIAcPQBAhb0AgDg9AAAkvAAAJLwAgEw9AABCOwCACT0AAFk9AEBBvQAAMjwAgDe9AIAMvABAhj0AANC7AIAwPQAAkrwAoJE9AMBzPQBArTwAABs9AEAEPQAATT0AAJE7AACJvABAPD0AAK88AAAuOwAAqjwAwGg9AMCpvACgcb0AAD47AJCBvQAAmDwAMIo9AICDvABgpT0AgBG8AICAvAAAhTwAwMI8AKBmvQBAir0AgOy8AOAwPQDgJj0AAMC4AIA5PAAghL0AICy9AICUvACgv70A0IY9AACUvQBgBz0AIF89AEAdvQBAOL0AgNG8AADAOABAMz0A4A09ACA8PQAAWr0AALo8ACAIPQBAzrwAoA09AAA6OwDgB70AQNY8AKAzPQCggj0AgLU9AADEugDAIb0AADu8AACOOwBAED0AACa7AKAFvQAgAL0AoFg9AADQuwCAor0AAFS7AFCuvQBAC70AAEK7AMAdvQAABTwAwMS8AICEvAAArDsAgFK8AAAoPACgX70AwMq8ACCbPQBAhLwAgDY8AICCPACAPz0AQPE8AHCFPQAAOLsAgIa9AABkPQAAYjsAAJS7AICivADAsT0AgEM9AOBWPQBA17wAQIu9AJCBvQAgGz0AwIQ8AKByvQCA0TwAgNu8AMAcvQAA8TwAcI+9AIDyPAAAxrsAQJq8AMC/PABAqjwAgFm8AABAuQAAjzsAAGa8AIDAPABAPb0AAEm9AEAnvQAgTL0AIA89AEDNvAAAAAAAYF09AIA6vACA6LwAAKe7AAC2vABAM70AgNQ8AKBBPQCAq7wAAB47AJCKvQCAKrwAQLk8ADDSvQBAl7wAqAI+AECevAAAibsAAIA7AADePAAAGDsAAOO7AIA4PQCwjD0AQIO8AEAQvQAAXrwAsAO+AICsvQDAdj0AgHW8AGB5vQAAMLsAgK28AACYPAAA1DwAoG49AABOvQDADD0AYC89AAAwPQAgsL0AAHo8AAAGPQDglb0AwMq8AEA5PQCAlrwAAIK8AOApPQBwuT0AwHQ9AACHPQAAbLwAYGA9AAAwvQCACrwAoA+9AMASPQDgED0AYCI9AAAHvAAgjb0AYCs9ALC4vQDgHT0AIAu9AADLPAAAn7wAgBK9AAAEuwBQvL0A4GI9AAD4ugBgBr0AAHy7AKBJvQDgFL0AABs9AIATPADAn7wAEJQ9AICkvQCABDwA0Ic9AMACPQCA/TwAwMM8AAAMvQAA6jsAABc8ACCMPQAAqLsAALS8AED6vAAA+bsAoCS9ACAqvQAATDwAgHo8AECuvADAjjwAYKK9AGBJPQDAjDwA4JW9AAAkPACARbwAoD29AMBKPQBgM70AwDM9AABWvACgez0AwMo8AADzuwBAzj0AADc8AIBZPAAA6LwAQLm8AIDePADAnr0AgDA9AABlvQCgcD0AQPs8AGAgvQCAqDwAAFA6AIADPADAob0AgF88AGAUPQAAqDsAAGK9AABxPABgAT0AMMo9AKBrvQAAv7sAgK48ACArvQDAxrwAAJ88AMC7PACAorwAgKa8ACBJvQCgob0AgFI8AACGvAAgAb0AoDI9AIAZPABA3TwAQKK8ACAWPQAQjb0AwBO9AMDFPACAOjwAAIU9AIAmvACAJj0=","chunkHash":"ebac90060103009889a2b2463ae340d62510b5ad8c26d70718264f685dc767db"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n        def update(frame_idx):\n            #...\n            resized_img_slice, resized_mask_slice = resized_get_slice(resized_idx)\n            resized_img_plot.set_array(resized_img_slice)\n            \n            if resized_mask_norm is not None and resized_mask_plot is not None:\n                resized_mask_plot.set_array(resized_mask_slice)\n            \n            if resized_mask_norm is not None and resized_overlay_img is not None and resized_overlay_mask is not None:\n                resized_overlay_img.set_array(resized_img_slice)\n                resized_masked_data = np.ma.masked_where(resized_mask_slice < 0.5, resized_mask_slice)\n                resized_overlay_mask.set_array(resized_masked_data)\n                \n            # Update title with slice numbers\n            #...\n```","range":{"startLineNumber":748,"startColumn":0,"endLineNumber":760,"endColumn":0},"embedding":"AMDGvABwhD0AQO28AOBVvQAQ070AgKa8ACArPQDAwDwAUKG9AABBvAAgSD0AYFc9AIDBvAAA67wAgIE8AHCZPQAAHL0AoI49AFCdvQAgXj0AAN88AIDevACgJD0AgB+8AAAIvAAAWDwAACi8AKCPPQCgHD0AAJa7AAAtvQCgLb0AAOE8AAAJvAAw+70AAGo7AABlvAAALr0AgC68AICFvAAw8D0AsJW9AICBPABwjj0A8Kw9AKBFPQAAVLsAgG29AACBOwAAaTwAgDC8AMDGPQAA6rsAgLG8AAChOwDAeT0AYCy9AABpPADgJr0AoAG9AMC7PQDAn7wAwEo9AABBPQAgRr0AAG47AHCkvQAA2LsAgH48AEC+vACAyDwAgB08AADHvAAA17sAAOM8AADwuQCAMb0AAIA8AICmvACAQr0AIJy9AECMPAAAGbwAACE9AEDSvAAgMb0AABy9AIBgPAAAzbwA4Gq9AMA0vQDgYj0AYKm9AADoPAAARrsA0Ao+AMDiPABACr0A4Cs9AEDcPADgNT0AALo7AAAwvQCAkzwAgOw8ACAmPQCAPT0AICE9AAC+uwDA6TwAAAQ9AIAlvQDA2TwAMKG9AIDuvACATrwAADo7AEDQvACAKbwAAMS8AGBuvQAALbwAADA6AMBSvQAgQD0AoAm9AECPPABA47wAAAA7AADtuwCgCj0AgIK8AID5PADw4b0AQNC9AHCgvQCAfbwAoFA9AMCDvQBgCD4AAE67AMD3PACAJTwAQP+8AEC2vAAAjT0AgKa9ACBQPQAAhLsAwPg8AIDIPACAtD0AQMg8AOB5vQDgzL0AgJG8AIB+PQCAHDwAANQ6AAAKvABwjL0AoBW9AOBAvQCAobwAQFC9AFCkPQAAEL0AwMi8ALCUvQDgpL0AYBq9AACivACgAj0AoIy9ACCZPQAA2DsAAKy7AADtPADAxbwAkI09AOAyvQAAkbwAAHe9AKApPQAgab0AgPk8AACsOwDAxzwAQJ68AADNvADA9TwAwNc8AEDTvABwpz0AgKu8AABhvQAgUz0AgFC8AIBBvADAVD0AwIu8AEA6PQAgDT0AQHi9AMAiPQAQhr0AwCg9AABYvAAAtrwAYCw9AIAgPABA3TwAwGE9AIBqvQAAvjsAQAu9AABIugDAdD0AANI7AIAoPQDAvrwAEJo9AKBjPQBApTwAgAc9AADhPAAgQj0AAHA7AECevABAUT0AwJo8AACtOwAA0zwAAEk9AAC+vABgX70AAOk7AABvvQCAbzwAQI89AICjvAAgpz0AgBK8AIB2vAAAMDwAQPE8AMAlvQCgf70AALq8AEA4PQAAFD0AAEo7AABMOwCQg70A4CS9AECCvAAgwr0A8Ic9AICAvQDAxDwAwHI9AMAWvQDAS70AAM+8AADruwDALz0AgCE9AIAmPQAgar0AAME8AEC+PADA8LwA4BU9AABtPADA7rwAQOE8AIBPPQCAbT0A4KQ9AAAZPAAgF70AgJS8AACHOwCAKT0AAPQ6AACyvABADr0AACc9AAD+uwBQsL0AADg7ACCrvQDgJb0AADQ7AAASvQBAmjwAAIq8AAB8vAAApzsAgDG8AAAUOwAgZ70AAMS8AICSPQBAu7wAgIg8AADQOwDgJj0AANk8AIBwPQAAsrsAYHe9AEBpPQAAzLsAANq7AEDSvAAQrT0AQCg9AKBjPQBAhbwAIF+9AEBYvQDgKD0AgEI8AGBuvQBgBT0AwLy8AMDfvABA7TwAsIa9AGATPQAAO7wAgJC8AICzPAAAYzwAwLa8AACROwCABTwAgOm8AOAOPQCgK70AYBq9AOA+vQAgRb0AAPs8AICXvAAAnjsA4GA9AIBlvADgML0AAJ47AMCYvAAAOb0AQJA8AMBKPQCA27wAgA68ACCNvQAAJ7wAgKU8ALDQvQBAh7wASAY+AMCcvABAr7wAAKA7AADpPAAA0DoAgEu8AEAnPQAAjz0AgLW8AEDVvADAm7wAIAC+ACCkvQAgXz0AQJK8AOCGvQCAPLwAQIm8AIBwPABgCz0AYEU9AMAwvQAAAj0AABo9AEBxPQCgsL0AADw8ACAKPQAglr0AQOW8AMAuPQBAz7wAACO8ACAyPQDQrj0AIHk9ABCMPQBAzrwAgH49AKAgvQAAvrsAYBa9AED8PABAHD0AgOg8AABuuwDAj70AQBs9ABC8vQBgBz0AwLS8AABIPACAZbwAQC29AAC0uwAAur0AoEs9AAAgugCgBL0AAEA5AMBBvQAAwLwAADo9AAAWPAAAa7wA4IY9ABCOvQAAWTwAIGs9ACAMPQBAHD0A4BI9AMAkvQAAgLkAACM8AMCSPQAA8LoAgHy8AID+vAAAFLwAYBa9AEA6vQCAPTwAgD48AEDHvAAAKDwAgJa9AMBJPQCA7DwAEKq9AAAkPACAhLwA4Em9AKBFPQCgQL0AwBE9AABbvAAgaz0AQOA8AABOvAAwxz0AAAk8AAB6OwAAIb0AAOG7AOAkPQCwtb0AQDc9ACBnvQDgjz0AwNs8AIAJvQCArDwAwJC8AACguwCQo70AQJc8AADqPAAAbDsAIHy9AIB3PADA/TwAcOA9ACBTvQAA57sAwLE8AKAsvQBAr7wAAJs8AOAIPQDAn7wAABK9AMAivQAAqL0AAH88AIDBvACgEb0AAB49AEDJPADgCz0AgMe8AAAsPQDgeb0AwNq8AEDnPAAAVjwAII09AAC0OwBgFD0=","chunkHash":"7441e544ecfc4c7f3e86ce79fee375f10c6b92a4570031ed023c15ddd5c73d3c"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n        def update(frame_idx):\n            #...\n            percentage = frame_idx / (len(orig_slice_indices) - 1) * 100 if len(orig_slice_indices) > 1 else 0\n            fig.suptitle(f\"{main_title} - Original Slice {orig_idx}/{orig_n_slices-1}, Resized Slice {resized_idx}/{resized_n_slices-1} (≈{percentage:.0f}% through volume)\")\n            \n            return orig_plots + resized_plots\n        #...\n```","range":{"startLineNumber":760,"startColumn":0,"endLineNumber":763,"endColumn":45},"embedding":"AACPvADAZj0AYD29AJCMvQBQpL0AgCm8AMDhPAAAjjsAMJS9AACyvAAgHj0AYH49AOAFvQDgDb0AQIg8ADCPPQAgE70A4Cg9ACCbvQCgTT0AQNg8AMAxvQCgNT0AAMi7AEAAvQAAwDsAgCe8AJCKPQCA/jwAAAu8AOBBvQBAHr0AgLE8AIDDvADw/L0AgH68AEDrvAAgIL0AABg8AADnvABIAT4AQGm9AADkugCgXj0A8Lk9AOAbPQAA0LkAwHO9AAAOOwCA3TwAAJe7ALCrPQAAH7wAwNW8AACAOQAAkD0AgFC9AMCZPACAXb0AgC29AMCoPQBA6LwAcJA9AOAkPQBAJ70AAFA8AJCmvQAAtTsAAP08AMDKvADAszwAgEc8AAD6vACAVLwAQLw8AAC+uwAAK70AAB89AIC/vABASL0AkI+9AIDzPABAibwAgBk9AABDvACAP70AIBu9AIBiPAAAgbwAsKG9AABivACgPD0AQKe9AAC7OwAAPLsAsP49AECXPADgCL0AoA49AIATPQAAOT0AwPA8AMBhvQAAOzwAQPM8AIAPPQDgRj0AQCI9AACQugCAijwAQEE9AMAIvQAAxzwAkJ+9AMDIvACAGbwAADI8AADwvAAAa7wAAMC6ACBlvQCALrwAAFI7AECHvADgCj0AQCa9AABwugCAgrwAQPQ8AAASuwDA5DwAoAC9AED+PACAz70AsJq9AGBpvQDA4LwAoCM9AEB5vQBwED4AAN67AMDTPACAFzwAQC+9AABQOgAwqD0AoK29AEAfPQAARLwAQBQ9AKACPQAgxT0AAHA7AKCEvQAg2b0AAJ+7AIA+PQAAIbwAANw7AADwOwBgob0AAKq8AMBzvQCAM70AIFm9AHCRPQCgCb0AABu9ACCnvQAgir0AAEW9AEDwvABA1zwA8JK9ACCHPQBAiLwAANi6AIBgPACAMrwAwLQ9AMA6vQAAADoAwFW9AMCiPABAFb0AQPk8AADquwAAADwAAPI7AIDNvACA2DwAgAU9AOAqvQAgnz0AoB29AKBtvQCANz0AgFq8AIAyvAAgcz0AgNa8AABFPQAAMDwAEIa9AIDZPACAT70AQAM9AMDEvACAUrwA4Ec9AAB/vADgGz0AEIc9AIBevQAAMjwAgPy8AAAgOQCgjj0AAGs8AEDwPADA9LwAAHM9AOBjPQDA6DwA4GI9AEBAPQBAdz0AAMI8AICOvADAWT0AALM8AACJuwCAdDwAwE09AIAKvQDAaL0AABA7AIDtvAAAhzwA4G49AADYvACAiz0AAB28AMCwvABARj0AwN88AKBKvQAAU70AgLO8AGArPQBAkDwAAEg6AIAXvAAQlr0AABq9AID3vAAQwr0AgFc9AMBjvQDA6zwA4HU9AKAhvQCAV70AAMK8AACWuwAAQj0AgCY9AEAWPQBgUr0AAN07AECGPACA/7wAACQ9AAArPAAADb0AICM9AIC5PQAQnD0AAGo9AAAdPABgEb0AAKO7AAAAPADAFD0AgIm8AIDOvABAJ70AYGU9AAAgPACwmb0AAJy6AKBwvQDAML0AAAW8AIAVvQDA1DwAgJy8AABQvAAAjrsAAFe8AABKPABAg70AgBO8AHDFPQCAJbwAgFo8AADGuwAgPT0AAKY8AMCGPQAAFrwAkJC9ANCIPQAAEDwAgAs8AACYuwDQsj0AgE09AAB4PQDA4LwAwHa9AAAevQCAMD0AgAs9AKBDvQCA5TwAADW8AABqvAAABz0AQD69AIAvPQAACLoAQMa8AEC+PAAAVDwAQK+8AICtPAAADjsAQBS9AOAcPQAgOb0AYDe9AMBsvQBAib0AwNc8AAC2uwAArzsAoEI9AACIvACgU70AANa7AMC1vABgeL0AgDE8AMBKPQCA/7wAAMs7AOC3vQAAnrwAACo7ALCzvQBA37wA8Ow9AIA2vAAABrwAQMI8AOA4PQAAtrsAAKG7AKAhPQDwkT0AAO47AEAevQDAt7wAkNS9APCcvQAAMT0AANQ6AAB/vQAA/rsAwAe9ACAAPQBA9TwAgDo9AIBFvQAAaDwAAOU8AEBYPQBwxb0AABg8AEDVPADwh70AgCY8AEBHPQDAvLwAwLO8AGAuPQAQyj0AYFk9ACA/PQAAbbwAIHk9AKAqvQAAHDsAgPy8ACA/PQDgJj0AQIc8AADeuwDAt7wAYCY9ABDcvQBAEz0AoEm9AEAMPQDAKb0AwP68AAB4OgAwrb0AIE89AIAmvADANb0AgDU8AKBYvQBAorwAgFc9AEDJPADAt7wAgIE9ABCBvQBAhTwAAJE9AMA4PQAAnTwAQKY8AAA5vQAAQzwAANc7AFCFPQDAg7wAAH+8AIC3vACArDwAwGW9AOA8vQAAVDsAgEk8AADxvADApTwAoKC9AMBJPQBA7DwAML29AMC5PAAAr7wAIAG9AAB2PQAATb0AwCs9AACXOwBgTz0A4FI9AMDqvADQnT0AAFo7AADMuwDA07wAQJu8AACmPADgyb0AgBQ9ALCCvQDgSj0AwKY8AAAivQCAcjwAgMC8AACgOwDQmL0AAK88AIC2PABAm7wAAIi9AADHPACA4zwAEMs9ACA3vQDAvrwAAAy7AEAGvQCAI7wAAF67AEAvPQBAnrwAQLS8AAClvABwqL0AAEY7AIAhvADAOL0AIIQ9AED4PACAQz0AAPq8AEBBPQAwir0AwP28AMCePAAAADoAAIo9AADFOwBA2zw=","chunkHash":"f82a108200271e09cac0e0cdc7f0c461dd61de86870783e9740c7689eada5a3f"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        \"\"\"\n        Create an animation that shows original and resized volumes side by side for comparison.\n        \n        Args:\n            data_item (dict): Data item from the dataloader with resized volume.\n            original_volume (np.ndarray): Original volume before resizing.\n            original_mask (np.ndarray): Original mask before resizing.\n            save_path (str, optional): Path to save the animation (as .gif).\n            show (bool): Whether to display the animation.\n            title (str, optional): Title for the animation.\n            axis (str): Axis to slice along ('x', 'y', or 'z').\n            frames (int): Number of frames to show (0 for all slices).\n            interval (int): Interval between frames in ms.\n            \n        Returns:\n            tuple: Figure, axes, and animation objects.\n        \"\"\"\n        # Extract resized data\n        #...\n```","range":{"startLineNumber":582,"startColumn":0,"endLineNumber":600,"endColumn":0},"embedding":"AMAGPQCgoD0AgPu8ACCJvQAAur0AYBO9AMArPQAAQDkA4I29AADLvACAYzwAYD49AACuuwDArr0AALu7AAClPQCATL0AQHw9AKBzvQBAEj0AgJA8AAAqvQAAhD0AAMS7AAD0vACgDr0AgMc8AEBhPQAAIj0AACA5AABIvADAKb0AgCI9AADwuwDQl70AQIg8AABLvAAAmDoAAIm7AAD6vACQ1T0AANy9AABWPADAYD0AANw9AIAJPABgJD0A4CC9AAC0uwAA/7sAwNc8AMDgPQBAibwAYDe9AEDqPADwgj0AIHC9AACjvABgGL0AAJS8ACAxPQAgPr0AgEo9AGAyPQAAPLsAAOq7AMCPvQAAjTsAgFQ8AACOvABA8jwAADI7AABBvABAsrwAABy7AIBsvABAYr0AAN08AGAxvQAABL0AoJm9AADIPAAAQbwAwAk9AGBmvQAABb0AgLa8AMCNPADAvrwA8LG9AABwvADAbj0AIK+9AECwPADA+jwAUM49AAA1PACAKbwAwIg9AMBpPQCAOz0AYEc9AKAcvQCAlzwAgDM9ACBePQDgij0AwP88AAAOOwCA/DwAwEY9AIA4vQDACT0AAK+9AADwvADADb0AAHG8AOAevQCgCb0AAHg7ACAlvQAA/LwAgAi8AIB1vACQiT0AwLO9AAD4OgBAI70AAB47AIBcPABggz0AAJg6AIAfPACg6b0A8LS9AHCmvQDgHL0AADs8AEBdvQDgDT4AAHS8AICHPACAszwAgBy9AAA4OgCQgD0AgOu8AMCIPACgOb0AAC48AABougAAyz0AgGY8AGCNvQBgpb0AADy8AACMugAAwLgAoEA9AIDHvAAwn70AAKa8AEDkvADQh70AwOS8AGCIPQDA2LwAgE28AAARvQBwgL0AQJs8AAC0OgBA6jwAIAu9AOCiPQCAv7wAACS8AMC3PAAA7zsAIGE9AIBWvQAAxLwAIGe9AACwOQCgRb0A4Hk9AABcPAAAgDgAANi7AGBUvQAAaLsAgFo8AIB1vQCgRD0AoFK9AEAbvQBAfz0AANi8AADlOwAgYz0AADo7AAASOwAAlLsAsJO9AKAGPQBAi70AAM87AIBavACAWrwAgNw8AAA6uwBgDj0AgJY8APCcvQAAkrsAoAe9AADXOwDgcT0AgFi8AFCPPQCgAr0AQM09AAAQPADAhrwAwLQ8AEAcPQCA6DwAALi7AOAxvQAACj0AIBi9AAA2PAAAwDsAIFc9AAAyvACQh70AAIA5AKA2vQCgAz0AYOU9AACfOwBAaz0AAOM7AIDCvADAujwAAG88AMAWvQDgfL0AAIK8AECfPABgcD0AAFe8ACA7PQCgEb0AgMq8AIBnvQAQjL0AYIg9ADCAvQDgOD0A8IQ9AAAQvQCAj7wAgA88AAAsOwCAaj0AYCI9AKBGPQBAFb0AwD49AIDSPADA9bwAwKc8AABWOwAANL0AAEs9AKCLPQAA6jwA4HY9AAD1uwDgG70AAD88AAA+OwCAbTwAAJ47AECVvAAAJbwAwL48AAAQugCAWr0AAI+7AMCkvQAAz7sAgA69AIDOvAAA+DsAoAq9AIAjPACAHjwAQLe8AACXuwCglL0AQJq8AKDIPQCAQbwAQOg8AAAavQCAGj0AYB49ABCyPQDAuTwAIA69AGAXPQAAFjwAACk8AACTuwCApz0AQLg8AIDoPACAj7wAgLi9AOBLvQBAQT0AACQ8AOBhvQCAZT0AQJq8AADQvACAeTwAQJK9AIAvPACAFrwAgAm8AACXuwDAuzwAAAG8AAC0ugAA+LwAALs7AADpPACA6LwAAGa8AKCFvQDgTb0AQNc8AAA8OwDATD0AIFY9AGAjvQAAcb0AAIy6AIBmvABAO70AgII8ACB6PQAAhrwAAFy8APCXvQAAgjsAAAM8AFDTvQCA57wAwAE+AEDQvABAwLwAAOA6AADqPADA3DwAQKM8AIDSPACQuz0AAB08AKCbvQAgL70AoPe9APCQvQBwhD0AAAe8AMB2vQAAgzwAgOS8AMDYPACAbjwAELk9AEAvvQAABz0AQBo9AECQPQBgd70AAEi7AIAyPABQyb0AANS7AKB3PQDAK70AAG08AMCpPQBAHj0AgOU8AIBfPQAAjLwAIAg9AADyvAAAK7wAgDu8AABYOgBAtzwAAFw8AICFPAAgUL0AYAA9AMCsvQAAULsAoCG9ACAMPQAAOjwA4Aq9AEAHPQCAv70AAGA7AADkOgBAe70AADU8ANCHvQAAoLsAcIQ9AICJPAAA8jsAwI09AGAkvQAAwjsA8Ik9AOBXPQAAIjwAgLU8AOACvQAArbwAAPw6AMCAPQCAibwAALm7AACuOwBgJz0AIAS9AMD/vABAs7wAABg8AADWvADAyjwAgLG9AEDyPADQkD0AsOG9AAD0OwDgI70A4CK9AACkPAAAQ70AAA89AIAzvABgNz0A4CU9AADQOQBA5z0A4Bw9AACmuwAAXLwAID29AIA6PABgrr0AgBE8AMCPvQAgID0AgEg9AOBEvQBgIj0AAIQ8AAAzvAAgdL0AwKk8AIAHPQCAirwAYH+9AIBzPACAGLwAoF49AGBDvQCAHbwAIBY9ABCPvQAAybsAwNA8AAARPQCAObwAgIO8AKAlvQDgIr0AAO07AAAJPAAA77wAQN48AIBzvACQjj0AgFC8AEBEPQBAm70AQPa8AMCZPADAybwA4Gc9AAB6PAAgbT0=","chunkHash":"43b0fd0d3dfbe08e1a87bac6f1250e1a8562b01dabb04b10e150269f9a64597e"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n        resized_volume = self._tensor_to_numpy(data_item['volume'])\n        resized_mask = self._tensor_to_numpy(data_item['mask'])\n        \n        # Normalize arrays\n        orig_volume_norm = self._normalize_array(original_volume)\n        orig_mask_norm = self._normalize_array(original_mask) if original_mask is not None else None\n        \n        resized_volume_norm = self._normalize_array(resized_volume)\n        resized_mask_norm = self._normalize_array(resized_mask) if resized_mask is not None else None\n        \n        # Determine slicing axis for original\n        if axis == 'z':\n            orig_n_slices = original_volume.shape[0]\n            orig_get_slice = lambda i: (orig_volume_norm[i], orig_mask_norm[i] if orig_mask_norm is not None else None)\n        elif axis == 'y':\n            orig_n_slices = original_volume.shape[1]\n            #...\n```","range":{"startLineNumber":600,"startColumn":0,"endLineNumber":616,"endColumn":0},"embedding":"AECavAAARz0AYBe9ACAtvQAgsr0AgJ28AIANPQBAnDwAMLm9AAB8vADAtDwAQBc9AAApvADAD70AgLw8ANCSPQAAOb0AgIY9ACCjvQAAJD0AAN88AID8vADgNz0AAFK8AADhvAAA0bsAAG67AOB6PQCAOT0AAAC8ACAJvQDAG70AgKM8AEDJvACgA74AACM8AABcvACAqrwAAFm8AECavABA4j0AYHu9AAC0uwAAjT0AEN49AAAUPQDAiDwAQGG9AABIOgAANDsAAJq8AFDIPQAAiDsAAEG8AAAqOwDgPj0AAEG9AADqOwAAab0AwBu9AKCNPQBA27wAQHo9AMAUPQAgL70AgHo8AICAvQAAV7wAwLc8AAC0uwDA5DwAAGa7AIAZvAAAXrwAoB89AAAjvACAML0AgHs8ACATvQAABr0AwH+9AECOPAAAwLgAoBU9AGACvQBARr0AAKy8AABkPADAxrwAAJu9ACAUvQAQhj0AwKq9AACFPAAArjwAYPo9AMAkPQAgRL0AAEM9AADZPABA9jwAwNs8AAAqvQBgJT0AgDw9AEAoPQBAXD0AQAM9AIA1PADAFD0A4Dw9AABevQAA6DwAsIm9AECrvABAnrwAAA+8AEDxvAAAdrwAgGG8AKA8vQCAlrwAAMQ7AGAivQCgUj0AQFm9AABQugBAFr0AAAg8AIA7PADAKj0AgBC8AIDbPAAA770AsJ+9ALDEvQAAr7wAQDI9AAAVvQBICz4AAJg6AEDePABA3jwAIAm9AGAEvQAAfz0AsIK9AECDPQCAmrwAAKA8AACuOwBArz0AQLQ8AECrvQBwx70AwJy8AECPPQAAyDwAgF08AEC/vADwiL0AQPu8AEBDvQBAhLwAUJW9AOCJPQAAPL0AgBy9AGCKvQAgu70AgEq9AADmuwBA+zwA8Ju9AMCjPQAAzDoAALq7AADbOwAAybwAEI89AEBovQCAhbwAAEq9AICkPACAR70AAFg9AACUOwBA2DwAABC8AEDZvAAAwzwAANk8AKALvQAArz0AwKW8AABSvQDgGT0AgGO8AMC8vACgMj0AgDm8AEA6PQCA/jwAoJC9AAC0PADAir0AQCg9AADbuwCA2bwAoDg9AIBGvADA9jwAMIg9AABdvQAACTwAAJu8AIBTvACAoT0AALK8AGAgPQBAzrwA4Kw9AOB6PQCAyjwAQPY8AIDFPADgXT0AgGC8AABwvADgAT0AgBI8AMCxPABAuTwA0IM9AAC2vADgb70AACy8AIAKvQAA2zwA4Gw9AABUvADgoD0AgCY8AICwvACAkjwA4Aw9AIAZvQAAQb0AgIq8AICjPADgBj0AAB47AADYugBgTL0AYDS9AMDgvAAQxr0AgEs9AKB+vQBA+zwAgEM9AGArvQCgO70AYBq9AIAevABASz0AYA49AEATPQBAZ70AQBc9AADYPAAgD70A4EU9AADkugDgVL0AAL88AOB5PQCQgT0AMI89AACKOwBAWb0AgAS8AIANvABAAj0AAKW7AMDovAAAHr0AwEc9AACIOgCQsr0AAJs7AICivQAAqLwAAIA6AEAZvQCAeDwAgKC8AAB0vAAAgDsAIAq9AAAUPACQi70AgAW8AKCkPQAAt7wAgGI8AAAeOwDgcT0A4Co9AFCDPQCAMDwAoD69AICGPQBAqDwAAPC5AEDnvADwoT0AgPE8ANCGPQAAt7wAkIK9AGBivQAALz0AAKI8ACAlvQBgET0AgNy8AAAEvQDA2zwAkKa9AIDKPACAZ7wAAOi6AADguQAAcTwAoAO9AACwOgAAhjsAoDq9AIDjPABAZr0AwNi8AKBwvQAgD70AwAs9AADguwAALjwAAG09AMCVvACAu7wAAMu7AMC3vABAb70AAPQ7AKBCPQAAprwAALa8AJCUvQCAj7wAABo8AECsvQDA87wAYA0+AACOuwCAS7wAgCM8AMD6PACAYDwAALC7AAB6PACAmz0AAKm8AEDnvABA4LwAQPS9AFC8vQDgez0AABC8AKB6vQAA1DoAgIq8AEDDPABA5zwAQGM9AEAyvQBApDwA4Ac9ANCIPQBggb0AAAI8AACKPACAfL0AwIa8AKAjPQAAGbwAAFC7AIDUPACAmz0AkII9AIBfPQDAurwAAIQ9AEAvvQCAtLwAAIC8AIAIPQBgIj0AABQ9AACAuQCgib0A4FE9ALC+vQAACT0A4De9AECrPACAzLwAACe9AAC9PACAz70AwDI9AICKvACgK70AAFS7AIA6vQBA8bwAQDc9AMCAPACAN7wAwHs9ACCDvQBAkjwA4FA9AIDHPACAuTwAAE48AIA2vQAAVDsAgLg8AACZPQCAsTwAwJO8AABGvACAi7wAQCO9AADzvAAAXDsAAHE8AIATvQCAATwAQKK9AKAzPQAgRD0AQMq9AECxPADAsbwAgEG9AGBEPQDgGb0A4Gw9AABSuwBgNz0AYCI9AACJuwDgsj0AgCw8AACvOwBA0rwAQK68AMCQPADgqb0AQMo8AMBqvQCAej0AQMA8AIAAvQAAqzwAALG7AIAMPAAgfL0AAFU8AGAdPQAAfbwAsLi9AABAPADANj0AUOA9AKB5vQAAbLsAAOo7AAD+vACAF7wAANs7AAAEPQCAo7wAgKG8AECnvABwvL0AwPY8AAAevACgHL0AgCg9AABoOwDAXz0AwNG8AGANPQDwhL0AwJO8AADnOwCAD7wAkJI9AACROwBAGT0=","chunkHash":"5cab8e3f1d158973b6047eead9df068938ae44349055c08f02a771ef923c6e09"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n            orig_get_slice = lambda i: (orig_volume_norm[:, i, :], orig_mask_norm[:, i, :] if orig_mask_norm is not None else None)\n        elif axis == 'x':\n            orig_n_slices = original_volume.shape[2]\n            orig_get_slice = lambda i: (orig_volume_norm[:, :, i], orig_mask_norm[:, :, i] if orig_mask_norm is not None else None)\n        else:\n            raise ValueError(f\"Invalid axis: {axis}. Must be 'x', 'y', or 'z'.\")\n            \n        # Determine slicing axis for resized\n        if axis == 'z':\n            resized_n_slices = resized_volume_norm.shape[0]\n            resized_get_slice = lambda i: (resized_volume_norm[i], resized_mask_norm[i] if resized_mask_norm is not None else None)\n        elif axis == 'y':\n            #...\n```","range":{"startLineNumber":616,"startColumn":0,"endLineNumber":628,"endColumn":0},"embedding":"AACnuwBgcD0AQPW8AOBIvQDAvb0AAD+8AACxPACARzwAMLq9AIBJvACAxDwAgCI9AMCevADAprwAALI7AICUPQBgKL0AoHg9ACClvQDAOT0AAOI8AECZvADAOT0AgCW8AGAYvQCALLwAALo7AMCIPQAAUz0AAEa8ACAJvQCAMr0AgLU8AMCqvAA4DL4AAOA6AICFvADAq7wAAEo7AACjvAAQ6D0AIH69AACYOgAQmD0A0N09AGBCPQAA8zsAMIS9AAAougBArTwAQKq8ACCgPQAAYLkAwL68AAAMuwBAPj0AgFu9AADMOgBgSb0AQCC9ANCfPQCgL70AAGc9AOAWPQAArLwAgBA8AOBvvQAAOLwAgK48AIAfvACgAT0AAEC5AADfuwCAWrwAwPw8AADwOQBA/bwAAM88AAD3vACA57wAgFa9AICdPACAVbwA4BE9AAALvQDAAb0AAMG7AECePACAoLwAsKy9AKAnvQCghj0AsJW9AIBDPAAAijwAYBA+AIDkPAAAQ70AACw9AMDYPAAAkTwAQI88AKAbvQDABT0AgCo9ACBfPQBgSj0AQA89AIAsPABAxDwAoEU9AOAzvQAgED0A8Iu9AMCqvAAAk7wAAMS8AOA8vQCApLwAAFo7AEAkvQCAQ7wAACA5AKANvQAgKz0AwEu9AAA7vABAyLwAAAQ8AAAOuwAAQT0AwJK8AIATPQDw470AULW9ADC9vQBA2LwA4EA9AEBJvQD4DD4AAAa8AGALPQBA/jwAACq9AIDbvACgwD0A4J29AMB5PQAgC70AoAI9AMCJPABAvz0AQM88AKCevQAA4r0AQKi8AGCMPQAAYTwAgPw8AMDCvADgkL0AwC69AOAevQAAm7wA0IW9APCNPQDAKr0AYAu9ADCTvQAQtr0AAC+9AAAWOwBgEj0A4Jm9AMCUPQAA/zsAACO8AIDWPADAlrwAAIY9AGBxvQAA2bwAgEG9AADOOwDAbr0AQDY9AAAwOwAArDwAAL07AIAHvQCAbjwAgO48AAAavQAQpj0AgIC8AKBwvQDgPj0AgH+8AIBdvACgWD0AAJm8ACBKPQCA9DwA8Ke9AECmPABgcb0AwDA9AAD8uwDAoLwAYFE9AABhvACAyjwAAHw9AKBgvQAAITwAQJq8AAD8uwAwlz0AACS8AKANPQDAAL0AQI09AICHPQDAgDwAwKs8AADcOwDwiz0AAAw7AMC6vABgIz0AAB08AIBBPACAGjwAAHc9AAC6vABAZr0AAA68ACAwvQAAezwAcJA9AIAZvADAgz0AgAU8AEC4vADA9DwAQN08AMAAvQBAT70AwIG8AEDRPACA+jwAAIA4AACQOgBgbb0AwCW9AIAEvQAA0L0AIFI9ADCBvQCAyDwAYEk9AGBPvQAgTb0AQKm8AICLvAAATj0AwNI8AOADPQDgb70AAPE8AECOPACAAL0AQBg9AAAgOQDgM70AwOs8ACCQPQAAiT0AAH49AACjOwCAP70AAGq7AADAOgBAJz0AANC7AGATvQBAH70AoCw9AAAougAgqL0AgB28AACdvQCA9bwAANC5AOAkvQAAKjsAgL68AIB5vAAAoDkAAOu8AACvOwAAXb0AAPA5AOCoPQAgBr0AACs8AACXuwBQjj0AwBw9ADCJPQAADDwAYFy9AGBfPQCAuDwAwLi8AIA2vADAnT0AQPY8AGCOPQBAjLwAwH29AABEvQAAHj0AADs8AAAHvQCgIT0AAOi8AABevACAsTwAUJO9AIDTPACAKLwAAEy8AAC5OwAAKDwAIAO9AIAOvAAAwDgAQPO8AID2PACgXr0AANK8AEBdvQDAQL0AgAo9AACWvACAXjwAADg9AACPvACgLb0AAF28AGAJvQDgVL0AAPA7AMBLPQBAsLwAwIK8AHCkvQAAr7wAAJI8AHCsvQDALr0AYP89AIAKvACAMLwAABg7AAAbPQAAKLsAAGC6AOACPQAQkz0AwLW8AADyvADgBb0AcMe9AGC7vQBAUj0AAN67AABTvQAABLsAAM68AIDLPAAA7TwAwHc9AIBBvQAAQTwAgPw8AGBrPQBQkL0AAGQ8AAB6OwAAfL0AAA67AMAlPQAAXLwAAEi7AIARPQAwlj0AQGU9ADCBPQAAvbwAQI09ACAfvQCAVrwAgEe8AACTPACgEz0AwLI8AABtvAAwk70AoE09ABDCvQCA3zwAoDq9AIDaPACAq7wAAMy8AADwugDQxr0AQG89AAD3uwAAJL0AAK27AMBDvQAA/rwAoFQ9AECIPACAMLwAIHU9AGCYvQCAfzwAoGc9AGA0PQAAbDwAABI8ACAlvQCASTwAAEk8ADCtPQAA4DoAgDC8AIAbvAAAVLsAwBO9AADovAAA3zsAgIw8ACADvQAAHjsAoLG9AIBFPQBART0AcLi9AADzOwAAlLwAIBq9AGAqPQAACL0AYEs9AAAfPACgFT0AwCY9AADSuwDwrj0AAEo8AIBYPAAgGL0AQM+8AAAxPABgm70AANA8AKBRvQDAnj0AAKA8AAAWvQDAszwAgCW8AICHvACQlr0AAKo8ACAdPQAAaLsAEKO9AIA7PACADD0AIOI9AEBbvQAAY7wAAKA7AOAFvQCAI7wAAFY7AGALPQDAnrwAwPy8AMCFvADArb0AgCA9AIATvADgBb0AQHI9AACsOwAgOT0AIAG9AGAePQDwnr0AAM+8AIBmPACAS7wAUIc9AIB0PADAJD0=","chunkHash":"29fbe231b36563a99c9e552d30b9ee0b76881198850ad761ea026029126c181a"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n            resized_n_slices = resized_volume_norm.shape[1]\n            resized_get_slice = lambda i: (resized_volume_norm[:, i, :], resized_mask_norm[:, i, :] if resized_mask_norm is not None else None)\n        elif axis == 'x':\n            resized_n_slices = resized_volume_norm.shape[2]\n            resized_get_slice = lambda i: (resized_volume_norm[:, :, i], resized_mask_norm[:, :, i] if resized_mask_norm is not None else None)\n        \n        # Calculate normalized slice positions for consistent comparison\n        if frames <= 0:\n            frames = min(orig_n_slices, resized_n_slices)\n            \n        # Create a larger figure with 2 rows (original and resized) and 3 columns (raw, mask, overlay)\n        fig, axes = plt.subplots(2, 3, figsize=(18, 10))\n        #...\n```","range":{"startLineNumber":628,"startColumn":0,"endLineNumber":640,"endColumn":0},"embedding":"AICSvABgWj0AQBW9AABSvQBAnb0AwNC8AIDlPAAAUzwAoLK9AACvuwDA7jwAADY9AMDdvABAGL0AgHM8ADCaPQCAK70AwFU9AJCTvQBATz0AIAE9AMDdvACgJD0AgKa8AMD8vAAA4rsAgHy8ADCGPQDAYz0AAEO8AIAUvQAAGb0AwIs8AIA5vABQ+L0AAAA8AECavADApbwAgCC8AIBLvADg5z0AMIq9AABZPACQgT0AkNg9AOAVPQAArjwAwHO9AADLOwCAsjwAADi6AFCuPQAAwLsAgIG8AAAOPABAej0AoEW9AIA6PAAgJb0AQA29AJC1PQAAIb0AYEc9AEDRPADgLL0AAEk8AMCkvQAAirwAQMM8AIChvAAAeTwAAAA5AECivACAXLwAoBE9AACHOwDA9bwAgOE8AADIvACgWr0AsIa9AACWPAAAILoAwEU9AOADvQDgRr0AgI68AMC7PAAA27wA0JS9AAD4vABAWT0AYI29AMDGPACABTwAEAA+AABSPADADr0AIF09AICrPACgBz0AYBE9AMAkvQCAYzwAgBc9AIBVPQCgdz0AQPQ8AADvOwAA+jwAoH49AIAqvQBAKj0AsJy9AKABvQAAg7wAAIW7AOAhvQAAorsAAK67ACAyvQCA8bwAgEc8ACANvQBAID0AQD+9AMCJPABACL0AAD08AAAHvACgIz0AAMK8AMAgPQAQ170AgNG9ADCSvQAAzLwAIE89AMByvQCwBD4AANC6AED3PACAJjwAoBi9AAD9vABAnT0A4Ly9AMBpPQDAKb0A4DI9AGAKPQBwqD0AIAE9AECTvQCw770AAOa8APCKPQBAjzwAgGk8AMC+vACAgr0A4Ce9AEBAvQBAubwA4Ge9ALCrPQBAF70AACu9AICPvQDws70AQD29AIBbvABANz0AUKS9AICgPQAANLwAwJa8AECXPACAorwAQIQ9AIA8vQCA/bwAAEC9AMCTPABgUr0A4A09AIB/PACAVjwAAEw8AID8vACAozwAQAY9AABUvQAAmD0AQJO8ACCYvQDASj0AgHm8AADGuwAgaj0AwJO8AMBJPQBAnTwAwI69AEDLPADQl70AwPE8AIAVvAAAgbwAgDo9AAC9uwDA5DwAAFc9AJCKvQAAJDwAoAW9AEC+vABwnj0AAJg7AKBQPQDA5bwAYIA9AABrPQCAXjwAQAE9AACbPACQgT0AAHS7AECVvADAID0AAPU7AABpPACAETwAAEc9AEDbvACAc70AgGq8AMAZvQCAWDwAoI09AADVvAAAgj0AAIY7AMCovABgOD0AAMM8AICCvQDAXr0AALi8AGARPQBA6DwAAJC6AACeOwAAWr0AABW9AMDivABAxL0AAAQ9ABCAvQCA3jwA4CY9AGAavQBgZr0AwKm8AIA4vABAOz0AwNw8AEAUPQBgeL0AwBM9AEAhPQCA7bwAgCM9AICoPAAAH70AQPI8ACCCPQBAYD0AIHk9AACwOwDgO70AAEy7AABbPACA/zwAAOi6AOABvQAA+LwAoCQ9AAAquwDwmr0AAIw6AECUvQAAY7wAAAo7AAAnvQAANTwAAKG8AIAevAAAnzsAgPq8AABguwAAVL0AANG8AFDBPQBAG70AgD08AAB2uwBAcj0AQMI8AKCEPQCAIDwAgFa9AGCCPQAAoDsAAIG7AABmuwDgoj0AgPc8ACBTPQBAqLwAwF+9AMCPvQDgUj0AAMk8AMD0vADAQD0AwO68AIC+vACAzjwAcIy9AADmPACAeLwAgIG8AAAAAAAAfTwAQL68AACAOAAAATwAwKq8AMAWPQAAbr0A4B29AKBvvQBgPL0AwAE9AIBZvAAAizwAYFg9AAA2vACAJr0AAIO7AMCGvABARL0AAMg8ACB6PQAAYLwAgIe8AGCmvQAAgDoAgC48AAC8vQCAe7wAMPI9AICXvAAAibwAAAq7AAAHPQAAwDkAAGq7AMAlPQAgnj0AAGa7AED4vAAAF70AoOW9ADDGvQCgWT0AACA5ALCPvQAALLwAAK+8AADTPACARD0AEI09AMAtvQAAuTwAwCA9ADCAPQDQsL0AgDM8AMCDPADgdr0AALE7AMBQPQBA5rwAgAS8AOBHPQCAoD0AgEI9AMB5PQBAxrwAUIA9AOAcvQBAgbwAgKW8AIDEPADA7zwAoCY9AMCsvAAgZL0AoCM9AMCfvQBAlDwA4EC9AMDPPAAAyLwAwOG8AAAaPACAwr0AQEo9AIAMPAAgL70AAI27AIBkvQCA3LwAIC09AICBPAAAZbwA4H89AABzvQCALDwAwHM9AOA9PQCAJjwAALi6AKAnvQAA3jsAgDo8ABCcPQAAhLoAAHa8AABBvAAAoTsAoDa9AGAavQAAoDsAAAM8AID/vACARDwAwJK9AEBYPQCAAz0AgKq9AAC3PAAAA7wA4Ee9AEBWPQBATr0AoGM9AADAOgAgKD0AoAw9AAAwuwCgxz0AgFw8AIB7PADAEL0AQKy8AMCPPAAws70AAPs8APCRvQBQkj0AAOo8AIA1vQAA3zwAgDK8AIAnvABgob0AQLM8AMASPQAAmzsAQHi9AIAEPACAGT0AgLQ9AMAwvQAASrwAACI7AOAKvQCABLwAAOI7AADDPACAlrwAQKm8AMD/vABgl70AgLo8AIC8vACA17wAAFI9AAAkOwAgQz0AgNq8AMA8PQBgoL0AgPG8AIBQPAAASrwAIIo9AAAdPAAAHT0=","chunkHash":"46ee3e57853891f84cda9e92273ed4d0bd5fc35b62ed62c044c7b6b738cd4013"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n        # Calculate slice indices for original and resized volumes\n        # We want to show comparable slices (e.g., 25%, 50%, 75% through each volume)\n        orig_step = max(1, orig_n_slices // frames)\n        orig_slice_indices = list(range(0, orig_n_slices, orig_step))[:frames]\n        \n        resized_step = max(1, resized_n_slices // frames)\n        resized_slice_indices = list(range(0, resized_n_slices, resized_step))[:frames]\n        \n        # Make sure we have the same number of frames for both\n        min_frames = min(len(orig_slice_indices), len(resized_slice_indices))\n        orig_slice_indices = orig_slice_indices[:min_frames]\n        resized_slice_indices = resized_slice_indices[:min_frames]\n        \n        # Initialize plots - original row (top)\n        # Original Raw\n        #...\n```","range":{"startLineNumber":641,"startColumn":0,"endLineNumber":656,"endColumn":0},"embedding":"AICyvADwiT0AgLK8ALCHvQAQqb0AQMu8AADtPACADTwAEK+9AICtvADgMD0A4C89AABVvACA+LwAYAY9AMBwPQCAGL0AAHk9ABCQvQAgTT0AYBE9AMBavQAAID0AABi8AADjvADAmLwAAJ27AOBaPQCALT0AAOS7AGBPvQCAGr0AQKM8AIA+vADQ/70AAA28AACpvACABL0AAJy7AIDjvACoCT4AQG69AACEugCAeT0A8L49AEDDPACAqjwAgIO9AIATPABAlDwAgAS8AIC9PQCAHLwAwAG9AADOOwCAdD0AQDi9AACcOwDgG70AgNu8AFCMPQBAA70AAGc9AGASPQBAJb0AAI47AJCMvQAAtLoAoBs9AACKvACAlDwAAIC7AICbvAAA87sAoBU9AABYvAAgLb0AgOg8AAAZvQBANL0AUIG9AMDsPAAAcDoAYEQ9AAANvQBANL0AwMC8AAB9PABAlLwA0L69AMDIvAAAZT0AMKi9AEAAPQCAgjwAuAE+AKALPQBAMb0AoC49AEDUPABA+jwAoBs9AIA/vQCAtTwAABQ9AMBDPQDAaD0AgBY9AAAuuwAAwDwAwHI9AOA2vQAA7DwA4LW9AMABvQAANLwAwM68AEDzvADA0bwAAE68AMBWvQAAbbwAAC47AIDMvABAPj0AoEu9AKAHPQDA9bwAQLY8AACyOwBgRz0AQLS8AMDrPAAAz70A8KS9AACLvQDAn7wA4Cg9ACBfvQBYCj4AgIW8AADTPACAjzwAQCe9AABougDgsD0AkJ29AIBcPQCAmbwAoAk9AGAUPQCgwj0AgPk8ALCcvQBQ0L0AAEq8AMBUPQCAIjwAAFw8AACRuwCgkL0AQOW8AKA0vQAAsrwAoHW9AHCYPQCgE70AAFS9AECmvQCglb0AQFK9AMCTvACgQz0A8Iq9AMCiPQAA2LsAgFG8AAA3PAAACrwAgIQ9AIBnvQCAV7wAAGe9AAD6PACAJr0AICo9AACiuwAAbzwAAOS6AOAbvQDAjTwAgKw8AGBMvQCQlD0AgOK8AHCNvQDAQD0AAES8AMC9vABgWD0AAL68AGBPPQAAoTwA4IC9AMDnPABQkb0AIAI9AACQOQAAzLsAgFI9AAD1uwCADD0AgGQ9AEBxvQDAjTwAgCO9AIB0vADQqT0AgFQ8AIAnPQCAs7wAIIA9AEBAPQDAuTwAYE49AMDpPAAAbT0AAIC6AABHvABACD0AAG48AACtOwDA1zwAwFI9AADTvAAAVL0AAIi7AABCvQDA7DwAgFA9AICqvAAwjz0AAKO7AACkvABAJD0AAK48AOBJvQAwg70AQLi8AMAnPQCAFT0AgAw8AADoOgBAV70AwOO8AIDOvABgub0AAEo9AMB8vQCAwjwAIFs9ACBevQAAP70AgKC8AAAGvABgcj0AwDI9AED0PACgT70AQMY8AEDNPACAhLwAIAQ9AADvOwCgN70AQJ08AOCMPQCAPT0AAHY9AACAOAAAKb0AAJE7AAA8uwBA6zwAAKw7AOADvQBAJr0A8IA9AADsOgBQrL0AADa7AKCIvQAArbwAACe8ACAQvQAAazwAAD68AAAxvAAA/TsAwMi8AAB9PADgXr0AAMI7AHCyPQAAsbwAQIg8AAAeOwCAaD0AwNw8AGCQPQAArDsAAF+9ACBpPQAA8DkAgEE8AABlvABQrD0AwMA8AKB2PQBAwrwAQGu9AOB4vQAARD0AQPk8AAAcvQCAHD0AAKS8AIBFvADAKD0A4IW9AEDHPAAA6bsAQLK8AIBvPAAA47sAQNG8AIATPAAAzDsAAPu8ACAcPQDgCL0AABa9AKB7vQAAer0AoBU9AAA4OwAAODwAoEE9AEDWvABASb0AAA68AED4vADAcr0AAEw8AGBMPQCAbrwAAHg7AFCevQAA6bwAgGU8AFC9vQDAA70AYAQ+AACcuwAA7LoAAA48AMAhPQAAQjsAgCi8AOAPPQAgsD0AAPC7AOAGvQAAw7wAsNi9AMCivQCAUT0AANg6AICFvQAArjsAgMa8AADXPACA5DwAAGQ9AAD3vAAAvzwAgO88ADCRPQBgqr0AACS7AAAMPACQkb0AAI27AOBOPQDAkrwAgGO8ACAiPQDQqT0A4FU9AGBKPQAALbwAoE09AGAXvQAAqbsAgPO8AMDNPAAAAz0AgP88AAARvAAARb0AYCw9AGDIvQAAEj0AQF29AADMPAAAGr0AgOq8AAByOwDwzL0A4Bc9AAAgOQDgIb0AABu8AIARvQDAhLwAYF49AIC7PAAA8rwAgIg9AKCFvQCASjwAYFw9AMAmPQBA7DwAgCo8AGAcvQAAjLoAACA7AECIPQAA/DoAgJO8AECfvACAKjwAoGm9AGAJvQAArLoAAPc7AECwvAAAszwAIKy9AIBMPQCA2DwAwMu9AACuOwBAzLwAgEe9AGB/PQCAOL0AQD89AAB8uwBAPT0AgCE9AEDFvABQwD0AgJg8AAAYOwBAy7wAAP68AMDWPADAu70AwPQ8AJCBvQCAXD0AgI88AEAxvQDAzTwAQIa8AABaOwDgjr0AwLE8AEAnPQCAKbwAsIK9AIBfPABgVD0AEMI9AIA1vQAAt7sAABc8AKADvQCAOrwAAMg7AECfPABAmrwAwMS8AGAFvQBAk70AAOA8AAC/vADA9bwAIF09AMCuPADART0AAHe8AGAePQAgjL0AYAO9AACLPAAAmLsAYK89AIAAPAAgJz0=","chunkHash":"8817a370bd5ee893a84dd762d6f744636a96d13edf79d668b7850af6ec59223e"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n        orig_img, _ = orig_get_slice(orig_slice_indices[0])\n        orig_img_plot = axes[0, 0].imshow(orig_img, cmap=self.cmap)\n        axes[0, 0].set_title(f\"Original ({original_volume.shape[0]}x{original_volume.shape[1]}x{original_volume.shape[2]}) - Raw\")\n        axes[0, 0].axis('off')\n        \n        # Original Mask\n        if orig_mask_norm is not None:\n            _, orig_mask_slice = orig_get_slice(orig_slice_indices[0])\n            orig_mask_plot = axes[0, 1].imshow(orig_mask_slice, cmap='binary')\n            axes[0, 1].set_title(\"Original - Mask\")\n            axes[0, 1].axis('off')\n        else:\n            axes[0, 1].set_visible(False)\n            #...\n```","range":{"startLineNumber":656,"startColumn":0,"endLineNumber":669,"endColumn":0},"embedding":"AAD8uwAAWj0AgPG8AMBtvQAg1r0AIA69AOAFPQCAkzwAwE69AACmvACgSz0A4Dg9AMCwvAAgEL0AAF48AHCBPQAAKL0AgHc9AECVvQCgMj0AgPw8AIChvABgHj0AAMA4AIDxvACAZrwAACa8AEBrPQBAEj0AgFo8ACB5vQAgKr0AQKs8AIC4vABICL4AADA7AAA8PAAA2bwAANa7AMCHvACg3j0AsLS9AAB+PAAwlT0AILw9AGA2PQAA6zwAYJO9AADsugAAZjsAgAE8AOCxPQAArDoAgJS8AAAAAADgOz0AQF29AMDKPADgjb0AAFG8AMCWPQDAx7wAYE09AADiPADgEr0AAAC6AMCMvQAA67sAgCI8AAC5uwAAaTwAAHA6AGAEvQAA97sAwNs8AADFuwBAP70AwBI9AEBRvQDgOL0AIJK9AEA0PQAAA7wAQAA9AECtvACANL0AgDG9AACYOwBA9rwAAI69ACASvQBgfz0AoH+9AMCOPADAizwACAk+AIAnPACAML0AYC09AEAgPQCgAD0AACg8AIBDvQDgBz0AID09ACAXPQDAfD0AoC49AIABvACAkzwAQDI9AIBCvQAgSz0A4GC9AADmvAAAqTsAAOC7AID9vAAAALwAwLG8AEBbvQAAN7wAALI7AMAovQDgOj0A4DS9AICzPABgBL0AQMA8AADCvACgOz0AgE+8AAD5PADQ370AsJq9ABCYvQAAPDwAAGY9AKCDvQAIBz4AgB28AACfPACAEzwAgBO9AIAAvQBQjz0AAJ+9ACBDPQAAQ7wAYDs9AEAVPQBgtD0AAA49AHCPvQAQ370AQPS8AEB6PQAAcLoAgBu8AIBMvADwh70AAPi8ACBEvQDA0bwAIIS9ACCmPQCgQr0AABO9AKCNvQAgqr0AgFe9AAC6vAAA7zwAUJe9AIB5PQAAgLgAgIW8AECWPAAAIb0AgJY9AIA/vQAAp7sAgPu8AGACPQBAPL0AYBo9AAA6uwCAqDwAALw6AEDlvADgED0AQPA8AOA4vQCgiT0AgHy8AGAsvQDAXT0AABG8AADtuwCAMT0AgO68ALCRPQAA/DwAYHS9ACAkPQCgWr0AAEM9AIBTvAAA7rwAgEw9AABGOwBAwTwAIIo9AEBcvQAApTwAgJK8AAAYuwCQlz0AAKU7AMBLPQCA/rwAoIU9AAB/PQCgKT0AYEM9AIDrPACAVD0AgAO8AADXvABAQj0AwNY8AAAcPAAAcrsAAGE9AADevACgKr0AAJ+7AGBHvQAALjwAAEA9AAAEvQCwij0AAEC6AICnvAAArzwAwAI9AIAWvQAAfb0AIES9AMDQPAAAQD0AgF48AAA4vACgar0AQPG8AADZvACgyb0AIFc9AJCmvQCA2jwAwEg9AIA/vQDgJ70AAK28AACxuwBgXT0AwPo8AAAEPQBAbL0AAOo8AMCsPAAADb0AgCY9AMClPADAK70AwAY9AGBdPQCgYj0AAHo9AAAVPAAAGL0AAO67AAArvAAAdz0AgGS8AOA0vQDAMb0AYDQ9AADuuwBQkb0AAFA6AACnvQCA/bwAAKS6AABJvQAAZjsAwIG8AABwuwAAHzwAgO+8AIA+PADggL0AAPy6AOCqPQCA0rwAAEk8AMCzPABgfT0AAA49AEAWPQAAUrwAMKu9AABrPQBAjDwAgKY8AEDCvACgoD0AcIQ9ACCKPQCAXLwAUIy9AGBuvQDADT0AAB88AOBHvQAALz0AQOq8AOAbvQBA/jwAUIm9AMDXPAAATDsAgLy8AABaPAAALTwAAJ68AAB8PAAAm7sAQDu9AICKPACgOr0AwLC8AGBIvQCAP70AwMg8AMCEvAAAJTwAAFU9AABUvACgDL0AAM67AIBzvAAAVL0AAJI8AMBaPQAAQLwA4Ae9AGChvQAADLwAAP48AICdvQCAwLwAgPU9AACTvAAAkTsAAC47AMAHPQAA2LsAAOU7AIAbPQBwjz0AgC68AMANvQDA3rwAIOS9AMC1vQCgTD0AAOe7AJCMvQAAuDoAAMS7AADPOwAA3DsA4HU9ACBXvQCA3jwAQBg9AOBaPQBwsb0AAMQ6AICcPABQmb0AAKK8AMAuPQAAxbwAgBs8AIASPQDwpT0AAFA9AMCDPQAADrwAoCA9AACIvQBAgLwAwIa8AAAVPQAgBz0A4Aw9AICxvABATb0AwDo9AGCzvQAAEj0AoBm9AIBkPADA0LwAQDy9AAC8ugCw3L0AAE89AACAuQAgJb0AAJW7ACAcvQAAEL0AQFQ9AECNPAAA07sAAIg9AFCDvQAAHjsAoEc9AADSPABgOD0AAPK7ACAgvQAAfrsAQNc8AGBjPQBAoTwAQNG8AACVvABAo7wAIFW9AIC8vACAWTwAAKc7AKACvQCAyDwA4Kq9AKBLPQCAsjwAsJu9AACSOwAA2LwAAD+9AEBiPQBAD70AYAU9AABIugCgaT0AwAw9AAAtPADw5j0AgCM8AABKPADA77wAAMS8AAABPQCAur0AALM8AMB4vQCwij0AAHU8AMAQvQAAcDoAAEI8AACYuwCApL0AgEU8AOAwPQAAL7wAwF+9AAC9OwAADT0AQNE9AKBcvQAAorsAALW7AKAMvQAAVLwAgAY8AACBPABAobwAgKa8AMDfvABQlL0AQLc8AAB2vACgCb0AIDY9AADnOwBAPT0AACO9AAA+PQBAib0AgHO8AEDhPAAA6LoAcJw9AACMOwCAGj0=","chunkHash":"75257645585ac5302d25a66e2a2190cf9572039ed213753ff4f9ecf2e6d76981"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n            orig_mask_plot = None\n        \n        # Original Overlay\n        if orig_mask_norm is not None:\n            orig_img_slice, orig_mask_slice = orig_get_slice(orig_slice_indices[0])\n            orig_overlay_img = axes[0, 2].imshow(orig_img_slice, cmap=self.cmap)\n            orig_masked_data = np.ma.masked_where(orig_mask_slice < 0.5, orig_mask_slice)\n            orig_overlay_mask = axes[0, 2].imshow(orig_masked_data, cmap='autumn', alpha=0.7, interpolation='none')\n            axes[0, 2].set_title(\"Original - Overlay\")\n            axes[0, 2].axis('off')\n        else:\n            axes[0, 2].set_visible(False)\n            orig_overlay_img = None\n            orig_overlay_mask = None\n        #...\n```","range":{"startLineNumber":669,"startColumn":0,"endLineNumber":683,"endColumn":0},"embedding":"AIA+vAAgWD0AgKq8AOBavQAQ6L0AAOa8AMA2PQAAczwAQIS9AACXvACAJz0AgGw9AECzvACAAL0AAGk8AECMPQBgL70AQGY9AMCMvQCgST0AAMI8AIAPvACA9TwAAIM7AAC3vAAAt7wAgGm8ADCAPQAgBj0AAOQ6ACAlvQCgML0AgOI8AMCWvABgB74AAME7AECgPAAgE70AAAe8AIByvADAwz0AwJy9AECQPACQlz0AkLE9ACBUPQBAszwA4IO9AADMugAABjwAAPA5AKCpPQAAbLsAADi8AIAJPAAAXD0A4AO9AOAMPQBAbr0AgAa9AOCoPQBAyLwA4Cs9ACAqPQAAKr0AABS8ABClvQAA87sAgIU8AACbvADAjjwAABA7AMD9vAAAS7wAAOw8AAB3PAAAH70AALM8AKAYvQDAML0AUJS9AOAEPQAAMrsAoDI9AACSvADANb0AACS9AICGPAAABb0AAHi9AIABvQAQgz0AcIm9AEDPPACARDwASA8+AMC5PABgOb0AgDE9AGAtPQDgDT0AAHG8AEAsvQDAzzwAwDY9AAAbPQAAOj0AwCM9AACKuwCAGT0AgBo9AAA3vQDgAT0AgGu9AMCkvAAAcLoAgNS8AAD5vACAJ7wAgNW8AKB0vQDAtbwAAGg8AADhvADgQD0AwNi8AICaPADAqbwAAAi6AGAKvQCgLD0AgGa8AEDtPAB4Ab4A4Nu9ANCIvQAAUDoAUJ09AAB/vQBg6D0AADG8AMCwPADAojwAwOS8ACApvQDApj0AwH+9AGAdPQCAVrwA4Ec9ACALPQBwoz0AwAg9AKCIvQBw3b0A4Aq9AKCQPQAAKDsAgCS8AAAqvABwib0AwAu9AGAuvQBgDr0AMI+9AACyPQCAS70AQBm9ALCXvQBgpb0AAEe9AAB9vACAqDwAcI29ADCQPQAAAAAAgHm8AMCzPADA07wAwIc9AKARvQCAjrwAwMa8AIAdPQDgSb0AoBs9AICNPADAwDwAgEC8AECivACA/DwAgJ88AMCuvABQmT0AAGC8ACBZvQAAQD0AgB68AACCvABgDD0AAGO8ACBhPQAAYz0AgIm9AAAwPQAARb0AYEU9AAB6uwDA3rwAwCg9AACSOwDApzwAAHA9AIA9vQCAezwAIDW9AAC7uwAQmj0AAOA7AEB3PQAAsbwAIJQ9AABcPQBgBz0AgEo9AID7PACgVD0AAGK7AGAEvQDgMj0AgJA8AMCCPAAAtjsAYHo9AACivACAE70AANY7AKBevQDAuDwA4E09AIDLvAAgnD0AADC6AECfvAAAdjwAQAI9AIAlvQBAhL0AIDi9AAAAPQCgRD0AAJU7AABuuwAgdb0AoAi9AEDIvABwxb0AAIY9AEC2vQAAVjwAwHY9AGAIvQBAIr0AwLa8AACIugAAJD0A4B49AEDcPAAwkb0AABQ9AAAtPQCACr0A4Cs9AADZOwBAG70AQPY8ACBdPQCgaj0A8J89AAAGOwAgML0AAIg7AACsuwAAIj0AwIC8AKAOvQCgCL0AIDw9AACKuwAArb0AALc7AIC6vQCAlrwAAPC5AAA1vQAAwDoAQLu8AAAAOgAAJjwAAL+8AAB9PADwgb0AgDq8AECXPQDAtLwAgA88AEDdPAAghD0AgPw8AOA9PQAA0rsAEKe9AEBvPQDAlTwAAOQ7AECHvAAAnT0AkIs9ADCAPQCAZbwAsIC9AOCUvQDAED0AANA7AGBAvQCgJj0AALS8AGAVvQBA/TwAsIm9AECYPAAA7LoAQKK8AACTPAAAWDoAgAO8AADUugAAMjsAAK+8AABEPABAR70AIBa9AABMvQDgGL0AwN88AMDwvAAAGjsAYDY9AICBvADA47wAAA+8AMDSvADgVb0AQPI8AEBkPQAA+bsAAIq8AACMvQAAj7sAoB09ABCivQDAsrwAYPI9AECwvAAAxzsAAEw7AECnPAAAcjsAAAQ7AEBCPQDwkT0AgFu8AKAOvQDA2LwAsOi9AACpvQDgPD0AgJq8AAB0vQAAmLoAAC28AADoOgAApTsAgHk9AOA3vQAACz0AwB49AGBaPQBgy70AADg8ACABPQBwqL0AgMm8AOA9PQAAerwAAHQ7AEAePQAwuj0AoGE9AHCHPQAAQbwAAAE9AKB9vQAAjrwAgEO8AMAAPQCgDz0AgPw8AACEuwAglr0AQGc9AGCbvQBAFD0A4Aa9AICGPAAAkLoAoC69AIACvAAAub0AQCE9AAB6uwAAm7wAAES8AEA9vQCgCL0AoEk9AABhPACAcrwA8J89APCzvQAAmjsAwHs9AMDVPADgQz0AAJQ6AECyvAAAzLoAQJ88AOB8PQAA4DoAQOe8AMDyvADAEr0AAEG9AEDUvADAizwAgBY8AMD1vADAsDwAwH+9AKAzPQAADD0AEI69AECnPADAnbwAoEC9AIBNPQDAIr0AwCQ9AADIuwCASj0AQLI8AIBkPACg1z0AAKM7AICbPADAn7wA4AC9AKAXPQCwkb0AQMw8AMB0vQDAnz0AQJo8AAAmvQAAozsAwMA8AAC0ugBAi70AADY8AEA+PQAASLoAoG29AIARPABAGT0AQM49AGBpvQAAnTsAAKi6AGA0vQAAHrsAgHk8AMDnPABAqrwAgAu8AMBpvQBQgb0AwJ88AIASvADAsrwA4DE9AADougCgJT0AgCy9AABXPQBger0AAMu8AAAIPQCANzwAgJ09AIB7vACgAD0=","chunkHash":"d9554cd48ceba5a30ed58ab077f7ce7e411bd11947179e56d1f7ce4f28314119"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n        # Initialize plots - resized row (bottom)\n        # Resized Raw\n        resized_img, _ = resized_get_slice(resized_slice_indices[0])\n        resized_img_plot = axes[1, 0].imshow(resized_img, cmap=self.cmap)\n        axes[1, 0].set_title(f\"Resized ({resized_volume.shape[0]}x{resized_volume.shape[1]}x{resized_volume.shape[2]}) - Raw\")\n        axes[1, 0].axis('off')\n        \n        # Resized Mask\n        if resized_mask_norm is not None:\n            _, resized_mask_slice = resized_get_slice(resized_slice_indices[0])\n            resized_mask_plot = axes[1, 1].imshow(resized_mask_slice, cmap='binary')\n            #...\n```","range":{"startLineNumber":684,"startColumn":0,"endLineNumber":695,"endColumn":0},"embedding":"AICKvADgjj0AgHq8AIBSvQBwvb0AIB69AEDxPACAWDwAIH69AMCdvABABz0A4FE9AICbvABAzbwAAIQ8AHCIPQAgK70AoJM9ADCpvQBATD0AwPI8AIDqvABAOD0AABO8AADFvACAMLwAQLe8AKB9PQAgMD0AACq7AOByvQCALb0AAAs8AAAgvAAIBr4AACg6AACTuwDA67wAAAA5AAAOvAAw+j0AwHi9AAD5OwDgmz0A8Lg9AOAlPQBAnDwAEIG9AABNPAAAcTwAANq7ALC/PQAAlLsAQBG9AAAEvACAWD0AwDu9AIAfPAAgeL0AwOW8AACcPQAAwrwAIGo9AMDTPACAEr0AAFw7AMCcvQAAzLsAAL87AADYuwCAtDwAgAe8AADgvACAKrwA4Ak9AAAqvABgJ70AANk8AOBVvQAALL0AQI+9AICtPAAALLwAQKw8AMDuvACgRr0AADO9AABAOgCAw7wA4JO9AKAHvQCAfj0A4J69AECuPAAAcjsAOAI+AMDyPABAAb0AQAQ9AED9PACgVT0AgGI8AKBGvQAAtTwAADE9AIAYPQDAVz0AwBw9AADwOQBA0DwAgEE9ACAivQDAHz0AgG69AICsvACAD7wAACi7AIC4vAAAILwAAMS8AKBkvQAAgrwAANS6AIBGvQDgMT0A4A+9AIDVPADgHL0AAAw8AACiuwBANz0AAOS7AKAIPQBQ270AIK29ALCWvQAAWLoAoFM9AABwvQB4AT4AAIm7AADrPAAARTwAAPS8AEDhvADgmT0AYKC9AGBoPQDAz7wAgCY9AEDePABg3D0AICE9APCUvQDg3b0AgLa8AKBTPQCAozwAABg6AICVvADgar0AgDS9AIBCvQAAtrwAYGO9AACiPQBAYb0AwCW9ABCavQBAm70AAFW9AECGvACACj0AMKa9ACCHPQAAt7sAwKe8AGALPQBgA70AUIA9ACA6vQCAnrwAQFW9AEC0PACASL0AwCA9AADDOwBAsTwAAAS8AMAsvQAAvDwAIAA9ACBPvQAAkT0AAGK7AOB+vQDAEj0AAGS7AAB0vACAQj0AAAa9ANCBPQDA6TwAgFm9AKAlPQBAfb0AoBQ9AIAIvAAAh7wAoFM9AAA6uwCABz0AwH09AOBevQAALjwAwPq8AAAFvACglz0AABE8AMBFPQCgC70AYI89AMBIPQAAejwA4EU9ACAIPQAAGD0AAIC4AIA6vACAVT0AgHg8AADAOwDAqTwAwGY9AID2vAAAar0AAC47AEB8vQBAszwAgIw9ACAQvQCAez0AAFg6AIBuvADAAD0AQOc8ACATvQAAsb0AwLi8AADkPABAFj0AAGA8AABsuwAAVb0AgBa9AACWvABwwL0AYG49AACHvQAAVDwAAEo9ACAYvQCgKb0AAOW8AACKuwCgNT0AwCI9AMD1PABQjL0AIBY9AMDvPAAgB70AwA89AACDPADgD70AAOo8AJCDPQDgST0AwGc9AAAWPADgK70AAE68AIAzPABAQD0AAOC7AMAAvQDACb0AYEg9AABwOgCgo70AAPC6ACCQvQBAG70AAIa7AOA6vQAAEjsAgF68AIBUvAAAyDsAALS8AIBgPACATL0AgMO8ACChPQAABb0AgEg8AAAuPADARj0AAEM9AGBWPQCAM7wAQI69AIB0PQCAljwAACy7AEC5vACApj0AQCY9AEBSPQAAobwAYJC9AICDvQAAPj0AALo7AIBQvQAAPD0AQO+8AIDDvAAA4DwAkJW9AMDXPAAAADgAwIy8AMC8PAAAcjwAwLO8AIBePAAAFDsAAAC9AKATPQAAN70AwNq8ACBFvQBAYb0AgO08AADQOQDApzwAgHo9AABBvACA/LwAALw6AMCNvADAU70AgIM8AOBYPQDAmrwAAAK8AKCpvQAAF7wAgMY8AEC5vQBAhbwAgO49AACGvAAAsbsAALc7AKAFPQAAgDoAAAy8AMDiPAAwoD0AgBS8AOAYvQDAo7wAEPG9ANC4vQDAOT0AAKG7AGCDvQAA7bsAwK28AAB+PAAANzwA4E89AOAbvQDAozwAoCY9AHCBPQBgqr0AAPw6AICePADQnb0AgLq8AMAEPQDAmrwAABw7AMD1PAAgkD0AIE89ACByPQAA4LwAwFE9ACAovQAAnLsAQMi8AADbPABA5zwAgKs8AACyvACAcL0AIEM9AJCkvQCAHT0A4Cq9AIA3PAAAmLwA4CK9AAAAOAAA4b0AoEo9AABTvAAAQr0AAFC7AEBFvQBAx7wAwD09AEDTPACAjbwAUIA9ACBtvQCAlDwAwHQ9AOAEPQAgLT0AQIs8AGAvvQAAcLoAwJg8AIBZPQAA2jwAgDq8AACXvAAAqbsAIA29AMAHvQCAEDwAALY7AEAKvQAAjzsAYJC9AKBQPQBA0TwAoLG9AADeOwDArbwAgC+9AMBePQDAHr0AwBg9AADQugCAeD0AACM9AACAuQCw1z0AAGA8AAAIPAAgCb0AgC28AGAMPQCQxb0AQNI8AHCKvQCQgj0A4AY9ACANvQBAhjwAgGU8AAD4ugAgsb0AAGM8AGAYPQAA2LoAMJK9AAADPAAALz0AIMs9ACBOvQAAMrsAAO87AGAYvQAAVLwAABs8AEC7PAAApLwAAOq8AIANvQDgob0AwIk8AAB9vABAEr0AgAw9AACSOwDAYT0AAMS8AMBgPQAAib0AAMe8AIDvPAAAfjwAYK09AADKOwBgOD0=","chunkHash":"289575599003c352136c0b80bd1ecba2055066156e80553048b45efc282e475f"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n            axes[1, 1].set_title(\"Resized - Mask\")\n            axes[1, 1].axis('off')\n        else:\n            axes[1, 1].set_visible(False)\n            resized_mask_plot = None\n        \n        # Resized Overlay\n        if resized_mask_norm is not None:\n            resized_img_slice, resized_mask_slice = resized_get_slice(resized_slice_indices[0])\n            resized_overlay_img = axes[1, 2].imshow(resized_img_slice, cmap=self.cmap)\n            resized_masked_data = np.ma.masked_where(resized_mask_slice < 0.5, resized_mask_slice)\n            resized_overlay_mask = axes[1, 2].imshow(resized_masked_data, cmap='autumn', alpha=0.7, interpolation='none')\n            #...\n```","range":{"startLineNumber":695,"startColumn":0,"endLineNumber":707,"endColumn":0},"embedding":"AECMvACgiz0AQL28AEA/vQDw4r0AALy8AADnPACA4TwAIIS9AIBavADgMj0AgGE9AACovADA9LwAAI48ALCNPQDgML0AEJI9AFChvQDAOT0AwPk8AIA1vACAGj0AABy7AIC6vAAAnbsAgH28AHCHPQAgGT0AAIg7AEA1vQBgK70AwJQ8AABjvADQ+70AAOw6AABGuwDALL0AAKm7AAAovABA3D0AIJ29AICTPABwlz0AULM9AIBcPQAAXzwAcI29AACEugAANzwAAL+7AFCpPQBAgrwAwMe8AACFuwDAdj0AwCe9AECoPAAAWb0AAAu9AACyPQAA0rwAgBE9AOBIPQDACb0AgCA8APCtvQCAeLwAANw7AIDOvABA2zwAgBc8AGALvQAADbwAwPQ8AAAkuwAgJb0AgNA8AEAfvQBgLb0A8Ju9AIB/PAAArLsAwAw9AMAPvQBAKL0AABu9AMCNPACgKb0AAIC9AGAavQCgbz0AsI29AMDpPAAA1rsAuBQ+AMCkPAAAIb0AAC89AMArPQCgaz0AAD67AIAvvQBAwTwAQBE9AMAsPQDgTz0AgBg9AACoOwBAMD0A4CE9AMAsvQBADz0AQHi9AECkvAAANbwAAMy7AIANvQAAg7wAQNe8AFCLvQBA0bwAAOg6AIBAvQDALj0AQNS8AIBbPADA9LwAALC5AIBwvACgAj0AAB68AADiPADQ+70AkNK9AJCNvQAAMbwA4Hw9AMCIvQCg/j0AANK7AIC1PAAATjwAgKu8AOA5vQBAkT0A0Ii9AKBXPQAAtrwAwC09AIDkPABwxD0AABo9AEB2vQBA8r0AoAC9AAB7PQCAUDwAAEA5AICbvADAir0AYBO9AKAHvQCA/bwAMIC9AECjPQBAL70AQOW8AACVvQBQnr0AwCm9AECwvABADD0AgKK9ABCFPQAAkDsAgIa8AEA5PQAA6LwAAH49ACAhvQAA1LwAACS9AEC+PADAOb0AwOc8AECGPABA8TwAgN68AOALvQDA8jwAwME8AAD9vACgpT0AAGS8AMBGvQBgMj0AACO8AAC1vADANz0AAKO8AMBzPQBAHz0AwHq9AOAjPQAgX70AgN08AAAOvADAvbwAoBU9AABgOgAA0jwAYGM9ACBTvQAA+zsAwPu8AACUOgAglT0AAAA7AKBiPQCA37wAoJM9AIBZPQAAVDwAYCs9AIDsPABgIj0AAIy6AADIvABAXT0AACw8AMCRPADArzwAIH09AMCcvAAgfr0AACg8AOBXvQAAsDwAQGo9AADJvAAwjT0AANi6AMDCvAAAMjwAQNw8AEAXvQDQnL0AwAe9AIAEPQAARD0AAO87AADWOwDgaL0AgCq9AICGvADAxb0A0JM9ACCNvQAAbDwAQH09AIAIvQDgE70AANW8AADkugAgJT0AIAc9AIDUPADgY70AoC09AOATPQCA/bwAACo9AACGPAAgDr0AgN08ADCBPQCgbT0AsI09AAAQugAAIb0AAOC7AADMOwAgBT0AALq7AEC+vADACb0AQDE9AAD4ugAgqL0AAPI7AJCnvQAACr0AgCa8AMAtvQAABjsAgJC8AIAIvAAAITwAgOK8AIA6PAAAYb0AgBi9ANCTPQAgAr0AAHk8AIBpPABgaz0AgB89AGBFPQAAirsAgIK9ABCAPQCATDwAAKy7AMDKvABAlz0A4C89AGBOPQAA5LwAAIC9AGB3vQCgMz0AAMy7AMBOvQBAMD0AAAq9AEDovAAAzDwAoJO9AKAQPQAAyLsAQMa8AMDAPAAAMDsAAKC7AABgOQAAwDgAAJy8AMDnPACgXr0A4A29AIBUvQBgRb0AAOo8AMDDvAAArjsAoFg9AACpuwAA/7wAAJ+7AICAvADAbb0AgIs8AIBQPQCAQbwAALQ6AOCUvQAAEjsAgMA8AEC4vQCAm7wAAOw9AIClvACAdbwAAA08AMCqPAAAAjsAAGA5AKAyPQBAoD0AQLW8AID4vADA/LwAsPm9ABCtvQCgNj0AQKS8AKCKvQAAM7wAAAq8AABCuwDAojwAIGA9AOAzvQDA8DwAgDQ9AECAPQDwrb0AgDE8AAAQPQAAnb0AgMC8AAA1PQAAX7wAAAa7AKASPQBQnj0AoF89AMB3PQBApLwAQGA9AIAlvQAAALoAAN+8AACvPACA9zwAQIw8AACLuwAAnb0AoF49AECcvQBABz0AgMu8AAAnPAAAmLsAAB29AADguwAQvL0AQCY9AADzuwAA+bwAACy8AIBuvQBAkLwAYFI9AIAIPACAJbwAQIY9AACUvQAANDwAAFw9AIDjPABgKj0AwMQ8AKALvQAA3LoAAM48AJCBPQAAdjsAgLe8AIDDvACAW7wAAO28AMAZvQAA9TsAANQ6AAADvQCAITwAAHS9AOBlPQDA0jwAMJu9AIC6PAAAULwAQFi9AMBePQAgMb0AwPc8AIALvAAAaT0AgL88AADYOwCQ3D0AACc8AICZPACAlrwAAF28AKAbPQDwor0AAA89AIB0vQDArD0AoBg9AAAZvQAAgDwAgHk8AAAwugDgp70AAHM8AKA2PQAAVDsAcJG9AECOPACgDT0AUNM9AMBHvQAA4TsAgIw8AKAzvQCAXbwAwJ88AADvPACAobwAQLO8ACBOvQBAn70AAEc8AECavADA8bwAAA89AAAQOgBALz0A4Au9AEBLPQBgcr0AQJ68AEAIPQAAoDwAoJA9AAAsuwCAqDw=","chunkHash":"6cc3314d050c9dcce77798e09ddff5989c3b198b2a4ba51b72ac63787e5e9a5f"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n            axes[1, 2].set_title(\"Resized - Overlay\")\n            axes[1, 2].axis('off')\n        else:\n            axes[1, 2].set_visible(False)\n            resized_overlay_img = None\n            resized_overlay_mask = None\n            \n        # Set metadata in the figure title\n        metadata = data_item.get('metadata', {})\n        if title:\n            main_title = title\n        else:\n            sample_id = metadata.get('sample_id', 'Unknown')\n            class_name = metadata.get('class_name', 'Unknown')\n            main_title = f\"Sample: {sample_id}, Class: {class_name}\"\n            \n        plt.tight_layout()\n        \n        # Create lists to store all plot objects that will be updated\n        #...\n```","range":{"startLineNumber":707,"startColumn":0,"endLineNumber":726,"endColumn":0},"embedding":"AABquwCgdz0AgLW8AOBwvQDg2L0AAO28AMDTPAAAAjsA8LO9AIDrvADA7jwAQIY9AIC4vABAc70AALA6ABCMPQAAd70AYEA9ACBsvQCgYD0AgPg8AMAIvQAAKj0AALw6AADQvAAAhrsAQPa8AECsPQCADj0AAKQ7AECevAAACr0AAPA8AIA/PAAw+L0AADI8AACsuwDgab0AAJS7AAAnvQAA4D0AAKK9AEDKPABwjT0AoLc9AIB2PQAAsLoAgAC9AMCMPAAAkTwAgEG8ANC3PQCALLwA4Ae9AAAmOwBgZT0AoG69AIAlPAAgH70AYAC9ADC2PQCAfLwAwGE9AMAfPQBAdb0AAHc8ALClvQCA0LwAgJ48AEAHvQAABj0AAC47AGADvQDAiLwAgKI8AIAovAAAV70AQOw8AAAgvQCwgr0A0Im9AADrPAAAijsAQCQ9AOATvQDgRL0AwFS9AAD3OwAAcrwAYH69AMAhvQCgZT0AsKy9AMDMPAAAxbsAmBE+AICNPABAE70AwAw9AOAnPQDwjD0AAJw7ABCAvQDAqzwAwCE9AADXPADARj0AoBc9AABoOwCA9zwAwKI8AKBWvQBA3DwA0Ji9AIAYvQAA6bwAANA6AIBMvAAApLwAwLG8APCCvQCAfLwAgFw8ACAmvQBAOT0AAAO9AABQOwCAi7wAAPQ7AABkuwDgJj0AgEG8AGAPPQAQ5r0AwM29ADCYvQBAqLwA4DY9AIBWvQDg6z0AAI87AMC2PAAAzDoAwAW9AEABvQCwmT0AEI69AMBdPQAAGb0AgAs9AKACPQAgyT0AwOk8APCRvQCwrL0AQNa8AGBTPQAAgzwAAFK7AACVuwAARL0AYEi9AMA5vQBA3LwAIDa9ANCCPQDAqbwAgOy8AKCWvQAgjr0A4Be9AEC8vACgIj0AsI69AOCiPQCAlrwAgDO8AMDvPACA4LwAAIQ9AMAgvQAgNr0AwES9AADSPACgOb0AwOM8AMCUPADA9jwAgBi8AAANvQBA1zwAwIw8AGAQvQBAbj0AwPm8AAB+vQBgGz0AABS8AEC/vADATj0AAN68AMBRPQCgID0A0Ia9AEC5PACwkr0AAMU8AEDYvAAAlLwAoFk9AAD4uwCApjwAwDo9AEBovQAAMzwAwCK9AAD1uwAQjD0AANQ7AGAcPQCgA70AYIs9ACBdPQAAvTsAYFs9AIDKPAAAtzwAAMA5AMAFvQBAST0AALw7AABaOwAAGD0A0IY9AIAnvQCgcL0AAEC7ACBcvQAAnDwAIHk9AEDfvADgkD0AAIS8AICvvACAVDwAoAw9AMAxvQCAjr0AANi8AMASPQDgIj0AAAO8AACjOwCgZL0AQAG9AAAEvQCgxr0AgFo9AEBtvQAAajsAAGw9AMDWvAAAKb0AAMq8AAD4OwAgSD0AAFc9AOAXPQCAaL0AwOE8AEDpPABAEb0AQKg8AADduwCgCr0AgCs9AGBWPQAghj0AUJ89AACpOwDgFL0AAJG7AAAxPADgLT0AAIa8AAAGvQDgPL0A4BU9AAAXPABgjb0AAK88ANCAvQAAwLwAgLm8AGBYvQAAqDsAALq7AADYOgCAjDwAYAq9AACiOwBgb70AQPW8ADCcPQCAp7wAgKM8AECAPACAUT0AgC89AEBKPQAAsTwA8Ia9AACWPQCAhDwAAOy7AACvvAAgkj0AgEU9AOBXPQCAjrwAAIG9AIB+vQBgUj0AAMM7AIBGvQCAAz0AwAO9AMDgvAAAAz0AgDa9AMD6PACAF7wAwIq8AGAOPQAA8TwAAHK7AABiuwCApTwAgOy8AAAqPQAgOb0AQO68AMCCvQAAPL0AgNg8AAC2uwAA2jsAQGc9AIA7vAAgQr0AADQ7AEAmvQAAbb0A4Cw9ACAlPQDA6rwAgIy8AKCzvQAAi7sAAGw8ALCtvQCAjLwAcOQ9AMAavQCAerwAAAg7AAA7PAAAiLwAALK7ACBAPQBgmD0AAJm8AAABvQCAx7wAcOS9AEClvQBAZD0AAAi8AJCOvQCABrwAQJK8AACOPADgBD0AQEo9AOANvQAAxTwAICc9AOBLPQBwsb0AgDs8AEAtPQDAk70AABG8AOAJPQAA9bsAAKG7AEAZPQBAqD0A4FQ9AMBRPQCA4LwA4GA9ACAevQAAULoAgMK8AECFPABAHT0AQAs9AIAJPACgc70AwCQ9ANC4vQDAyDwAwL28AACAOgAAiLwAADu9AECGvABgqL0AQGA9AIALvACgBr0AANA6ACBUvQDA2rwA4EY9AICQPAAA5LwAQKg9AICEvQAABjwA4Ig9AID5PAAAzTwAwI48AAAWvQAAhbsAAA88AMB0PQAANrwAgMW8AMCCvAAAjDoAgMm8AEASvQAAwLgAAAC5AMDQvAAAkjwAcI29AABCPQAAIT0AcLW9AMDtPAAAjLsAwOq8ACA6PQDAV70AADk9AACvOwCgUT0AwEQ9AADgugCQ0D0AAPi6AAA4ugBAp7wAAF67AMDMPACg7b0AQLk8AEBWvQDwqz0AQNY8ACAVvQAAczwAAK47AABiOwBwpr0AAJ48AIBPPQAAbLsAoGK9AIDZPAAAWDoAcK49AMBovQAAULoAgDg8AIA3vQDAoLwAAEA7AAAOPQAAl7wAwOW8AMBQvQAgrr0AgGs8AACfuwCAOL0AgCU9AAD2OwAAMz0AgDy8AKBHPQCQjr0AAJO8AEClPAAAuzwAoI49AADgOQDABT0=","chunkHash":"1dca455d47d65c70d9801845b0a16bba7af628edcacc4b904697ecc3da713316"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n        orig_plots = [p for p in [orig_img_plot, orig_mask_plot, orig_overlay_img, orig_overlay_mask] if p is not None]\n        resized_plots = [p for p in [resized_img_plot, resized_mask_plot, resized_overlay_img, resized_overlay_mask] if p is not None]\n        \n        # Update function for animation\n        def update(frame_idx):\n            #...\n        # Create animation\n        ani = animation.FuncAnimation(fig, update, frames=len(orig_slice_indices), \n                                      interval=interval, blit=False)\n        \n        # Save animation if requested\n        if save_path:\n            try:\n                # Ensure .gif extension\n                if not save_path.endswith('.gif'):\n                    save_path += '.gif'\n                ani.save(save_path, writer='pillow', fps=1000/interval)\n                #...\n```","range":{"startLineNumber":726,"startColumn":0,"endLineNumber":776,"endColumn":0},"embedding":"AACsOwDgZD0AwOO8AECWvQCAz70AQCy9AABCPQAAwDkAMJi9AMAbvQDADj0AEIU9ACADvQBgir0AgB28AOCtPQDgNb0A4E09AKByvQCgLz0AYBI9AIDJvAAA4TwAANw7AMC9vAAAVLwAgJO8AMBwPQDAwjwAALq7AOANvQCAE70AQP08AMASvQCw7b0AACU8AICovADAD70AADM8AGAfvQDA7z0AMMG9AADhOwDgTz0AsKM9AABQPQCANjwAgCG9AIA8vACAwzwAAKS6ADDqPQAAGDwAgNC8AAC5uwAAgz0AwDi9AIAjPABghb0AADK9AKCAPQBA7LwAAHI9AOADPQBAAL0AAAG8ADCnvQAAHzwAYAs9AMCzvAAA2TwAAJs7AAC9vAAAKbwAwOk8AIAJPACgGr0AAJ88AEAIvQCAR70AYI69AGAjPQAAkrwAAAE9AAACvQCAGb0AIDq9AAC5OwDA8LwAoJS9AAD7vABgez0A4MG9AIDFPAAA+TsA6Ag+AMDaPACAFLwAwB89AMBGPQCAXD0AAIE7AABbvQBAkzwAICE9AMAePQAAfD0AwII9AACduwCAATwAQA49AEBivQCAYTwAwEi9AMDpvAAADjsAAJw7AAC+vAAAsLoAwL28AGApvQAA3DoAAE88AGAFvQAgHz0A4Ca9AAC8OwAAnbwAQLQ8AECfvACgTz0AQJO8AKBGPQCw9r0AALy9AHCkvQCAALwAYCg9AKCMvQCAED4AALc7AKA0PQCALTwAgKq8AAAHvAAgqT0AoI29AADRPACARbwAwPU8AIDuPABA1j0AgAo9AMBGvQBAtb0AgKm8AMDWPAAAYjwAgO48AABEPAAghb0AgOi8AMBnvQCgML0A4GG9AICQPQCgIb0AoBu9AOCcvQCwjb0AYBa9ACAovQAAbzwAIGG9AHCDPQCAoLwAAE48AMC2PACAdbwAQKM9AGASvQCAEDwAAG29AEDNPADgDb0A4Bw9AABhPAAANLsAAGu8AABmvABA1DwAAN08AAAcvQAgeD0AAOq8AKBrvQAAFD0AQAu9AAATvACgUT0AgFG8ACAGPQCASDwAUIe9AMC0PACAcb0AwBM9AABYOgDAu7wAQOs8AACMugCAvDwAAFA9AIBfvQAA5LsAwFu9AACVOwDwgj0AALS7AIAcPQDABb0AQHQ9AIBOPQDAtDwAEIM9AEBKPQCgGD0AAPS7AMDavAAgKT0AAN87AACRuwAA5zsAgDw9AACsvAAAKb0AANi6AOAJvQAAXDwAEI89AIAzvACwpD0AALy8AACwuwCAqDwAwPc8AEBHvQBAaL0AgLe8AACVPACA+TwAAKO8AIAtPAAAZL0AwOe8AEBSvQCQmr0AgHQ9AHDEvQCACz0A0JI9AOAEvQDA47wAALK8AACzOwAAWz0AwPQ8AMBKPQAgZL0AgBY9AADCPADArLwAwLo8AADEOwDA1bwAYD89ALCKPQCwiD0AcIk9AACaPACAWr0AAMS7AMCTPACAqDwAAE67AIAlvQDgBr0A4Bw9AAC3OwCwmr0AAKw6AOCHvQBgAr0AAJm8AAAhvQAAqzwAQDq9AAAmuwAADTwAACa7AIALPACgmb0AgIG8ACC3PQCACrwAoBU9AACKuwDAdz0AwCk9AACQPQAAnbsAAHu9ACCWPQAAjbsAgC68AAAiuwAgoD0AYH49AOBhPQAAmrwAkI29AKB5vQCARz0AALY8ALCRvQDgCD0AgDK8AMAAvQCA2jwAADe9AEDWPAAAaLoAgGS8AED8PACA8jwAgIy8AAAUPACAAbwAAKe8AACQOwCAer0A4Bu9AGBuvQDAcL0AgOE8AAD6uwAAcTwAIIA9AAC+uwCA/7wAADY8AACBvACgYr0AwCk9AOBkPQAAyLwAADO8AMCFvQCAq7wAAKw8ADCqvQBAqrwAYAU+AECPvAAAn7wAQJs8AEClPAAAiLsAQLw8APCFPQBwuz0AAGk8AMALvQBAl7wAYOi9AICVvQDAHD0AAFi6AKCAvQCAArwAAKG8AMAUPQCAvDwAwFQ9AEBuvQAAiTwAYDU9AIA5PQBQt70AgIs8AMCDPACwpL0AAHm8AIAwPQCAlLwAAHA7AKBYPQCgnT0AoCE9AEBLPQCAtrwAYCg9ACBTvQCAcrwAIC69ACAJPQCAAT0AgNU8AIAGPABgSL0AIDM9AECtvQCA/DwAYBS9ACAPPQBA7LwAgDW9AAD3uwCQzr0AwFU9AIABvABAP70AAAa7AMAvvQDgTL0AQEA9AEDQPAAALbwAEIY9AICMvQAAMDwAQIo9AAANPQAA/jwAgA88AOAfvQCAsDwAADg8ABCSPQAAV7wAYAm9AMCevAAA2DsAQNi8AOA4vQAAoLsAABU8AABtvACAEDwAoK+9AIDmPABgCz0AsJ69AADvPAAAobwAQA29AMBGPQAAH70AwBA9AIA6vACAXj0AoFI9AADkugDgzT0AgHk8AAAYvABAybwAQJK8AECJPABAo70AoAE9ALCDvQAgNz0AANY8AIAqvQDAmDwAALg7AIAFvADgt70AADE8AIAMPQAAJDsA4G+9AAAnPAAA/zsAQKQ9AMACvQAAu7wAgNM8AGBDvQAATLsAANo7AADjPACAmbwAQPm8AOAbvQCwlr0AAEo7AAA4OwAgB70AoDM9AOARPQAART0AgO68AEAiPQAwmb0AgDi8AMDLPAAAmTsA4Go9AABDPACAFT0=","chunkHash":"a91c4aeb305359b16534284889eb39c1cda1b0029f0e347e4b5c69d05fe44602"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n                print(f\"Animation saved to {save_path}\")\n            except Exception as e:\n                print(f\"Failed to save animation: {e}\")\n        elif show:\n            # Auto-generate a filename if save_path is not provided\n            if metadata:\n                sample_id = metadata.get('sample_id', 'unknown')\n                auto_save_path = os.path.join(self.output_dir, f\"{sample_id}_resize_comparison_animation.gif\")\n                try:\n                    ani.save(auto_save_path, writer='pillow', fps=1000/interval)\n                    print(f\"Animation saved to {auto_save_path}\")\n                except Exception as e:\n                    print(f\"Failed to save animation: {e}\")\n                \n        if show:\n            plt.show()\n        else:\n            plt.close(fig)\n            \n        return fig, axes, ani \n```","range":{"startLineNumber":776,"startColumn":0,"endLineNumber":795,"endColumn":29},"embedding":"AAD6OwAAaj0AAFO8APCcvQBwz70AABq9AAAQPQAADLwAoEC9AIAsvQAA+TwAoFA9AEDpvADQp70AAGa8APC4PQAAQr0AAHM9AIAivQAA/zwAQD09AIBhvACgOz0AwIw8AAClvACgDL0AgCG9AKBhPQAAGT0AgHG8AIDgvAAgMr0AwJo8AOAQvQDQ+70AAIE8AAAQOgBgUL0AANC7AOByvQAw/z0A0NG9AOATPQBgrz0A0Mg9AGBUPQAAvTwA4Bu9AICGPACAHTwAAIg6AEDMPQCAMTwAYAO9AABQOgBgWj0A4BO9AABwOgCgZr0AYB+9AIBVPQAA+LwAABo9AAAgPQDAnrwAAJA6ANChvQAAODwAAA48AOAhvQDAmTwAAOA6AAC6vAAAerwAAAs8AIA5vABAK70AgOI8AAD7vABAZL0AkIS9AAATPQCAxbwAQOk8AMAlvQCA/LwA8I69AAAWPABAsbwAMJG9AAAevQCQgD0AMKm9AGASPQCAijwAIBM+AADRuwCAfrwAwF09AOAhPQAgMD0AgHQ8AOApvQCAozwAwMQ8AKAlPQAQkz0AIEo9AABauwAA2zwAoB89AMCMvQDAkDwAACC9AMCwvACApbwAAEY8AABYuwAAi7wAQJO8AMBNvQAA1DoAgCQ8AMBZvQCAKz0AADu9AAC/OwAAALwAQL48AAB8uwDgOz0AQIS8AEBMPQBw/L0AYLS9AKDQvQAAsLwAQNw8AGBIvQDIDj4AQJ88AKAIPQBAljwAwIe8AABnvAAQij0AgFG9ACA4PQCA/rwAgLY8AID1PADw0D0AwOc8AOCKvQAwpr0AgMK8AIBnPAAAcDwAAE47AADAuQCgZr0AoAS9AKAwvQDAFL0AIFu9AKCLPQDA1rwAoDW9AMCDvQBAer0AAMO8AGAIvQBABj0AgHq9AKCJPQCAsrwAgEM8AIB9PADgG70AcJs9AMBWvQAAPLsAAFi9AADjPAAgG70AgCc9AAANPQAARDwAACQ8AMCXvAAAlzsAQIM8AACqvAAAcj0AwP+8AIBCvQAgDD0AIFS9AAAGvAAAQT0AQOa8AKAHPQAAmzwAMJS9AIA1PAAgmr0AwJM8AID8vABABb0AgOk8AAAIvACA0TwAAF49AOCNvQAAIrsAAMe8AEDJPACAqj0AAF68AEDlPADARr0AgIY9AGAFPQAAlzsAQEc9AOApPQAAyTwAgKO8AMAOvQCAVj0AAEi6AIAfPAAA7zsA4Fk9AEDFvACgK70AAA08AIAFvACAkzwAgLk9AABAOwCQjz0AAGK7AAD0ugCArDwAAPU8AOBKvQCgVb0AQIS8AECgPADA+zwAAD68AID9PACAUL0AABu9AGA1vQCwtb0AUIA9APCKvQBAuTwAYDg9AGAivQDAqLwAgDG8AICxPABgaj0A4D89AGAEPQDgMr0AAFM9AACHPAAgDb0AQO88AIBHPABAGr0AcIc9AJCIPQAgXD0AIHI9AAAAPACgOL0AABA7AAATPAAAmDwAABq7AECovACgAr0AICY9AABoPADAkL0AACK7ADCcvQCgD70AQPq8ACBvvQAAPDwAwL68AICZPAAAMjwAgBi8AAAAuQDgo70AgN28ABC1PQDACb0AAAc9AMApvQBgTj0AgHY9APCYPQAAqTsAoES9AIB6PQCAlzwAAMq7AECKvACAkz0AgEc9ACCLPQBAorwAYGe9AEByvQDQgz0AgGU8AFCEvQCAZj0AADC8AEDUvACA9TwAAMK8AICJPADAjbwAAOO7AEDkPAAgPD0AAEe8AACFuwAAajwAgJa8AAC1OwBgZL0AAL68AACIvQBgSb0AQJ08AABsvAAAIT0AQJo9AIBKPADgIr0AgEI8AIB/vACQhb0AwOk8AEBnPQCAlLwAgNm8AHCDvQCAq7wAAJA6ACCfvQCATbwAcO89ACAuvQAA9bsAgDc8AAC2PADAnrwAADE9AGA7PQDwmD0AAC47AMC+vACAu7wA4Ny9AJCOvQAAZj0AAKC7AMBdvQAAjLsAwIq8AHCBPQDA0zwAYEc9AMA7vQCATTwAAEI9AKA+PQDwmL0AAEI8AEDhPACQ170AgHG8AADQPAAAzbwAQIo8AAAvPQBgbT0AQBk9AGAgPQBA2LwAYDA9AGAJvQCABTwAAHm8AIDnPAAArjwAAJs8AMDAPABAdr0AYCw9ABC+vQCA0jwAAKq8AAA8PABA77wAQD+9AIAFvAAQr70AYBw9AIBNvACgJL0AABy7AOA2vQCAM70A4Ho9AKANPQCAP7wAgKo9AECFvQCAHzwAwEE9AIC2PAAgVT0AAN08ACARvQAA+rsAAAs8ABCPPQAAULwAwC29AICZvAAAIDwAAIu7ACBcvQAA7DsAADI7AACQOQAAGrwA4IW9AMCmPAAA7jwA4Lu9AMCFPAAAxrsAAA+8AGAQPQBAH70A4EE9AIAiPABAyzwA4HI9AAAgOgDw6z0AAIg6AMAavQBA5rwAQMi8AIBHPABQ070AAH08AOBpvQDAKT0AAFc8AADBvABA0zwAAH67AMDtvADgrb0AANQ7AKARPQAAILwAQIG9AIAgPACAurwAgKU9AACrvAAAL7wAAJI8AMBnvQAAkDkAgLW8AKBEPQBAm7wAQEW9AMCqvABAsL0AgD48AAAUPACAS70AwCA9AEDnPABARz0AQJ+8AOAsPQCApb0AAFq7AIDAPAAA1DsAYB49AICLPADAHT0=","chunkHash":"e124fa62ae3ad457c9c3a9b20e9879e2ee3785485677f9bd22881271b7919cb6"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    \"\"\"\n    A class for visualizing nuclei data from the NucleiDataset.\n    Supports visualization of both 2D slices and 3D volumes.\n    \"\"\"\n    def __init__(self, output_dir=None, cmap='gray', mask_cmap='hot', alpha=0.7, figsize=(12, 10)):\n        #...\n    def _create_transparent_cmap(self, color):\n        #...\n    def _tensor_to_numpy(self, tensor):\n        #...\n    def _normalize_array(self, array):\n        #...\n    def visualize_slice(self, data_item, save_path=None, show=True, title=None):\n        #...\n    def visualize_volume(self, data_item, save_path=None, show=True, title=None, \n                         axis='z', frames=10, interval=200, colorbar=True):\n        #...\n    def visualize_batch(self, batch, max_samples=4, save_dir=None, show=True):\n        #...\n    def visualize_resize_comparison(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None):\n        #...\n```","range":{"startLineNumber":18,"startColumn":0,"endLineNumber":465,"endColumn":124},"embedding":"ACA8vQAABD0AABi8AGDOvQBAY70AANY7AAC/OwCALbwAICW9AADYuwBgiT0AgDA8AACZuwBgQb0AgCs8AKAVPQDAzbwAoFc9AADGuwDAfT0AIA89AAC2OwDAbj0AgCC9AECUvACA9zwAgKC8AHCsPQAAuDwAgCa8AABDvQAAe7wAYAa9AGAivQCgvr0AAC88AMClPAAALD0AgKO8AADQOQDQsD0AwFW9AIC0PACA6TwAADI7AABMOwCAFrwAQES9AEAKPQAAILoAAIO8AOChPQAACjsAAJE8AOAQvQDgdz0AwFa9AAChPAAA5LwAgNO8AEA9PQDA2DwAYE89ACAIPQCAWb0AwPA8AMCGvABgCr0AAOy6AADiuwDAkT0AwEK9AMAdvQCAibwAIEg9AMDuPACAuL0AAG08AGBOvQDALb0AIEe9AMA4PQBAIL0AQDk9AADUuwDAuL0A4F69AAAKuwAAtbwA8JO9AAABvADgTz0AQKO9AGAiPQBAtDwA4NU9AICFPADg370AYE49AIC4vAAAFLsAsKM9ACASvQCABj0AQDk9AMCQPAAAmTwAwIo8AHCIvQBABD0AgGs8AAB7vABwkT0AoH+9AKAfvQAAWb0A4BU9AEDcPACAJzwAALK8AIDQvADAkDwAgAc9AEDcvABAND0AgEW9AMD3PADA4zwAAJM7AABaPAAAJDwAoD69AECHPACgxL0A4LG9AIAwvQDgiL0AAPM7ABCJvQBwzz0AgK88AADXPACArj0AAK28AAAoPADAET0AMKK9AGCdPQAApbsAQB09AACluwBw2T0AwPI8APDXvQCQo70AAFQ8AAAsPQBggj0AAGM8AMDCvAAACrsAgL88AECDvQDAMb0AkIi9APCaPQCATb0AAEO8AABFvQBABr0AQIA8AACFPACADT0AAAQ8AICaPQAgLr0AAII8AICmPACAWr0AAPA5AADWuwBAnb0AgNK8AEDDvAAgmb0AwHI9AOAIPQDAgLwAAAi9AIBpPACAkzwAgNE8AEAFvQCwkz0AAMu8AEDsvAAAyjsAIG29AACAuwAABjsAYCS9AAAyPQAgQb0AgKu9AKBJPQDAf70AAH09AIDevADAtrwAgAE8AIBhvACAsDwAgAS8AADgPAAAsjsAgFS8AEALvQBwqT0AAPi7AMCqPABA+bwAgBw9AECYPAAgCT0AACq8AACAugAAyDsAQB69AAD4OgCAFbwAgB88AACTvACApTwAUKU9AMCGvQBgur0AAIo8AIBYvADAfT0AQKQ8AIAzPADATz0AgIW8AIBmPACgfT0AQJ48AGB2vQCgJr0AwM28AAAXPACgbz0AAJw8AABsOwBQi70AoBi9AMDaPADwur0AgAU8AICLvAAAMDsAYB49AAAPvQAAz7sA4BS9AADjuwCAGT0AAL07AMDEPABA8bwAwBg9AACKuwBAfL0AAM48AKBWvQBAE70A4DU9AACWuwBggT0AYL49AAAQPABgZr0AgDe8AMDXPABAez0AgKa8AAAkPABgLb0AgNo8AMAbvQCAlL0AIB09AABTvQBAhr0AAA28AIBuvAAACLwAgDs9AEDvPAAAwjsAgJK8AMACPQDAqbwAAIE8AJCMPQDA97wAgGc8AABYPQBAyDwAwJo9AAD1OwAAIbwAAGu9AMAdPQCADjwAgG68AACdvABghj0AYGY9AKCRPQBgFD0AQL+8AADEugBAkz0AgIs9AICivADgBz0AMJS9AAAYvAAAHrsA4My9AGAXPQBgML0AAGS7AAAyPQAAHrsAELS9ABCNPQAAh7sAgFm9AOBiPQCQpb0AwH69AIC0vQCgRb0AAB47AIBDPAAAWDoAML89AIBzPADgcL0AAEO9ACAuvQCQor0AYDE9AMDAPAAAjrwAwIG9AMCkvQAADjwAAMa7AADDvQDA87wAUJE9AACsOwAAmTsAALw6AAAKOwDAmzwAIC+9AMC9vABAMT0AAKC6AABDPADAg7wAMM+9AIAkvQBwzD0AABg6AEBavQDA5rwAAMC7AAAAOQAATD0AAEa7AAAwuwAANDsAAG88AMDcPACgRb0A4FU9AIDxPABgT70AAAg7AIAPPQAAQLsAQKI8AGAdvQAASDwAgH09AMBTPQBAkrwAAIU8AADNuwDA0LwAAC28AEDAPADQnz0AoDM9ACBbPQCACr0AgDK8AIDwvAAAezwAgBA8AACLuwBgKb0A8LS9AAAQugDQjL0AQKM9AIDwvACAS7wAAMm8ACBevQAAmDsAAIC5AIDSPAAAQLwAAJK8AIBRvACA3jwAUJ89AABlPABAUT0AADU8AABavQCAwzwAALA6AIB9PQAACT0AYCa9AICbvABgdb0AwOi8AMDZPAAA9bsAQKg8AJCLvQAAmjsAUPa9AAAhPABASj0AQM69AMBHPQAADTwAsK+9ADCrPQAAkLsAgGO8ACBbvQBQhj0AwP88AKAKvQCAdD0AgMW8AECkvABAwLwAQMa8ACCLPQCYAb4AoLg9AIDVvADgYj0AwJg8AGABvQAAzbsAYEO9AAADPAAATb0AAGE8AAAdPAAAjrwAIKC9AICbPADgAz0AIIY9AAAZvQAgHL0AYIs9AFCSvQCA0TwAQMM8AADRPACASLwAgJO8AADguQAQpb0AALe8AAAAuwAAcb0AwGM9AACXOwAQmD0AAPa8AECbvACAXr0AYB29AAD/uwAA4bsAAGg9AAD/uwAA1zs=","chunkHash":"1236db6f7738a9728ea9d4deb04118fc8c2a48e7b51a9051bf0fbd1c13860068"},{"text":"File: `scripts/visualize.py`\n```python\n#...\nclass NucleiVisualizer:\n    #...\n    def visualize_resize_comparison_animation(self, data_item, original_volume, original_mask, save_path=None, show=True, title=None,\n                                      axis='z', frames=10, interval=200):\n        #...\n```","range":{"startLineNumber":580,"startColumn":0,"endLineNumber":581,"endColumn":73},"embedding":"ACAIvQBAlT0AgJK8AIBdvQDgub0AgAq9AAAFPQBAmDwAUJG9AECIvABAvzwAQGY9AACevACAGr0AAI08AHCNPQBgRr0AADU9AOB1vQCAWj0AQNk8AAC8vADAHz0AAKu7AIDBvAAA5rsAgKu8ALCjPQBACT0AAHi8AOBjvQCgXL0AgOQ8AACCvABoAL4AgCU8AAAOvACAlbwAAKW7AKAUvQAw3D0A0MC9AEDlPACQgD0A8JM9AIAQPQCAJrwAQIm9AIB1PACAlzwAgNG8ADC6PQAAgzsAAHi7AACwOwCAUz0AQHO9AABaPABgUr0AoAe9AMC+PQAAU7wA4C89AOAuPQDAR70AAAk8ADCHvQBAwLwAAGE8AAAKuwCA+DwAAGQ7AECFvAAAAbwAgMY8AABcOwCAI70AgN48AEC/vACAIb0AQJq9AIDRPADAsrwAgHs8AEC3vABAS70AgJy8AAAuOwAAnrwAUIy9AIAPvQCAPz0A0Ii9AEDGPACADDwAeAw+AECTPADgTL0AwOw8ACAZPQCART0AwL08ALCTvQAAAj0AQFA9AEBgPQCgcD0AwMc8AABbvAAARz0A4AY9AAAbvQCA2jwAoJC9ACAPvQDA2bwAAMQ7ACAWvQAAhLwAQOa8AMAwvQAAfrsAAFq7AKA9vQCAfD0AgBW9AABBvAAADLwAAPc7AADjuwAAkDwAAM68AEAhPQDQxr0AMJy9ADCwvQAAtrwAQDQ9AGBBvQCoDT4AALU7AEDpPACASjwAgGO8AIBrvABgrD0AALO9AECBPQCAnLwAQKQ8AMDcPACQ1T0AANc8AHCgvQDQ3r0AgBa8AGAdPQCAJDwAQN28AACVOwBAf70AwPC8AKBEvQBAGb0AwH69AMCqPQCgI70AAN+8AKBivQAgbb0AwNO8AIBNvACAPD0AIG+9AGCfPQAAarsAAIo8AMAAPQAA97wAgIw9AADivACAmbwAoEy9AEAcPQCA0bwAYBQ9AIAiPAAAljwAAKO8AMA6vQBgMz0AwKk8AGASvQBQxD0AQNW8AKA5vQCgBT0AwKy8AMC8vADgbz0AIA69AKANPQCAKjwA8IW9AAB7PADgoL0AwFE9AAARvABAsbwAYD09AAAgvABAuDwAAFQ9AECAvQAAGLoAYAO9AAD+PADQoz0AAFg8AEDWPACA/bwAII09AMBHPQCAfDwAgAU9AEC7PACgNz0AAEK8AMCzvABgUT0AAHQ8AABOOwCAvDwAwG89AECZvAAAVr0AAFq7AEDIvACAkDwA4E89AEC3vACgmD0AgJq8AIB6vAAAnTwAgNc8AADBvAAgPL0AANC8AAAKPQAgOT0AAJa7AAAkuwDgd70AAJu8AADovADQ2L0A8Jk9AGCHvQCADT0AwGY9AKA+vQDAxbwAIAq9AIA+vABgVT0A4D49AGAJPQDAab0AgFY8AACHPACACr0AQEI9AMCEvAAgM70AQOg8AMCXPQAAhD0AQJM9AABOPABAPr0AAGg6AAC7OwAAUj0AgLa8AIDovABA4bwAADU9AAAWOwDAc70AgKC8AGB3vQBgT70AAF28AEBqvQAAkDkAAOa7AAA0OwAA1DsAgO28AADwugCAT70AgBK8APCZPQCA5LwAoAg9AACNuwBAPj0AoDs9ADCEPQAAebwAoDy9AKCFPQBA6zwAgGS8ACAFvQDwhz0AAFA9AABvPQAAmrwAwG+9AIBIvQAAVj0AgAE8AJCBvQAgFz0A4Be9AEC9vABA/TwAYGG9AICQPADAy7wAAN28AMDpPADAgzwAANq8AACoOwAAUTwAoEK9AEAQPQCgNL0AwO28AABgvQBgfL0AoBM9AADQuQCAZzwAQGg9AICrvADANb0AwJ68AMAOvQDwj70AAAo8AKA5PQBAEr0AAK28AHC+vQAASLwAAJA7ACC+vQCAf7wAcO49AMCxvAAAbbwAwL88AACmPACA8rwAwJe8AEDWPACQhT0AAH+8AEDYvAAAybwA8MC9ANCVvQDAND0AAIG7AFCGvQAArLsAgLW8AECmPACgAz0AgBU9AAA1vQAATjwAIAE9AEB8PQCQoL0AAJE7AKAyPQCAi70AwIi8ACAlPQBA4LwAAJy7AGB7PQDAwz0AYEw9AKB2PQDACr0AQEM9AKAQvQAAYjwAQKG8AECDPABAAz0AALg8AMCmPADAfr0A4D09AFC0vQBAvTwAYAm9AAAjvACgAL0AoHu9AACNuwCAxb0AoDI9AAAuOwAgD70AAEg6AKABvQCAa7wAAGM9AICmPAAAf7wAIJE9AGBPvQBADT0AgHI9ACA8PQAANz0AoA49AMA0vQAA9DsAAKg6ABCFPQCASTwAQKa8AIBkvACAOzwAAIW8AMATvQAAkDkAANA5AADEvAAAfDwAQJW9AIBYPQAgED0AwPm9AABSPACAf7wAYCS9AACRPQDAV70AQHg9AMDMPACAFz0A4FI9AMClvADg3z0AgCU8AADwuQDAo7wAAAo7AMC4PACAwL0AgCs9AEAzvQCwjj0AAOs8AADyvABA4DwAAAa7AAAoOwBwob0AwBI9AACHPAAAlDsAcIW9AMCQPABAqDwAEMk9AOBLvQAA+7sAgCY8ACA1vQAA5LoAABE8ACALPQAAnbwAYDO9AAC7uwCwjL0AgNU8AADEugBASL0AANo8AIClPADARD0AwCu9AKAJPQAAdL0AgMK8AADYPACALDwAoEU9AACBPAAABz0=","chunkHash":"13924313d53d00f4a8786301dcf8a16234faef93329e864a12511b47be2ffb90"},{"text":"File: `scripts/visualize.py`\n```python\nimport os\nimport sys\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LinearSegmentedColormap\nimport matplotlib.animation as animation\nfrom mpl_toolkits.axes_grid1 import make_axes_locatable\nimport torch\nfrom skimage.transform import resize\nfrom PIL import Image\n\n# Add parent directory to path to import config\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\nfrom dataloader.nuclei_dataloader import get_nuclei_dataloader\n\n\nclass NucleiVisualizer:\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":17,"endColumn":23},"embedding":"AEAOvQDARj0AAP48AMClvQBwiL0AAI29AAAwOwDA6LwAcMa9AAAhvQAArTwAIEY9AADJuwCgy70AQN08ANCGPQAAMb0AAGE9AGBfvQDgkT0AwG89AICFPACgMD0AANw6AMAOvQAAGzwAgMe8ABCuPQBA+jwAAAa8ACCOvQAAQLsAACy9AAAXvACg9L0AQLi8AIBXPACA3bwAAAY8AMDzvABAoz0AcLe9AEAWPQAAhj0AgOo8AMDPPACgfb0AoGu9ACCMPQAAnbsAIDQ9AAA9PQCASDwAQL48AICcvQAANDwAoDC9AAByOwBA0LwAgKu8AIA3PQCAaLwAYAs9AIDYPADA0bwAQJI8AMBzvQCgU70AwAY9AAC0vAAAarwAAEY7AED4vABgpL0AIF49AACQOgDgcr0AILM9AIAHvACgTL0A4BK9AACjPACAizwAAOC6AAASvADAfL0AkJK9AAACPAAAcLsAYG69AAAquwBAZj0AAFi9AEC/PAAAXDwAMAc+AAA0PAAQj70AcLg9AABAuwCAVTwAwCg9ACASvQDgPz0AoGE9AECDPQAAGT0AAPi6AIBDvQAgNz0AwA69AIBAPABAjz0AAFy8AAAfvADAx7wAgB89AADnuwCgRD0AQIS8AKAvvQAAlbsAAEI7AGABvQDAszwAwLo8AEAhvQBA5zwAgIk8AIAyvQAA67sAQHq9AOBVPQBgnb0AwHu9AAB8vQAgFb0AAAW9AABLvACAJT4AwLY8AMCxPACAfDwAAMg7AECKPACAXD0AIGe9AACwPQAAQDkAgBw9AID0PABgFj0AAMI7AMDGvACA0LwAoD29AACnvADgFT0AAEg7AIAHPAAAHrwAACC6AADVvACAYbwAIE+9AOCIPQBAqrwAwKK8ACB1vQAAN70AgN68AAA4vQBgJD0AADq9AODVPQBA2LwAAPy6AGAZPQAAHLwAABU8AKBbvQAAObwAgDO9AIBRvADAjb0AALM8ADCLPQAAHbwAACs8AADtOwAAZjsAICA9AAAsvQCQkz0AAJw6AABYugBAGj0AwJu8AMCTvACAkjwAQCg9AFCRPQBAND0AUJC9AIBrvABAS70AgKo8AADUOgDARD0AANg7AADDuwAA87sAgEY8AABtPAAAFjsAgEG9AACJOwBgkz0AAHg8AECRvAAAsLoAAEa8AIACPAAAB70AQBQ9AIA8PACAtzwAALi6AIB0PACwsT0AADa7AAB6vAAARLsAYHY9AAAjPAAQnb0AgDM8AMC6vAAAWLwAIIk9AACduwCgtj0AANu7AACAvAAAQLsAAOO7AAAIvQCAVLwAACa8AABcOwAAiTwAACY7AECSPABwhL0AABy9AACevACA870AAJ+8AMDjvACAC70AEJU9AMCsvADALL0AABC9AMCePACAKzwAQJG8AOAMPQBAp7wAALg6ADCIPQAAz7wAQA89AAB4ugDA37wAQK08AAA/vADgXD0A8LM9AABgugCgKL0AAMA5AAC0PADgNj0AwKi9AADEvADAGb0AAJ08AKAFvQAAjb0AAO27AADLOwBgVL0AwO28AIBVvAAAUrsAAHw7AEB1PQAgNz0AAEq7AMCcPACQhb0AgK68AIAEvAAADb0AIBs9AMCtPAAgmj0A4As9AABPPQAgH70AAJi8AAB2PQAA8LkAAOC5AEDHvABAMz0AgMs8ADCYPQCAmbwAkJu9AJCZvQAABjsAwKI8AJDlvQAASz0AgGy9AADfOwAAVTwAgBm8AAAGPQBAPb0AgBA9ACBlPQAAaDwAgGS9AAD+PACAlzwAgPW8AIB4PQCwsL0AIDm9AGBnvQBwyL0AoEQ9AAByOwAAs7sAwIA9AEATPQDgP70AQDe9AIAEvABgjr0A4Go9AMDYvACAELwAQGu9AEAZvQCA7rwAgEg8APC6vQAA+LsAgJ09AAD3uwAATjsAQLY8AECiPAAAwzwA4AO9ACBWPQBghT0AgEi8AADRvABAf70AsLK9AID8vAAghj0AAHa8AOBnvQAAgTsAIAs9AMCgPABgHj0AwCe9ACCGvQAAAAAAgMs8AIC3vACgFr0AwJ08AODlPQCAfr0AQIO8AKAYPQAA9jsAAKe7AAC9PACAMj0A4GU9AADgOwCA6zwAABI8AADQOgAADLsAQKE8AEA5PQCgkD0A4HI9AIAevAAAQ70AIAo9AJD/vQAAiLoAgKi8AADOOwDgZL0AwOe8AMDLvABgKb0A4NU9AACrOwDAmbwAAIQ6AMB0vQBAFr0AcIM9AGBhPQDAfr0AcIY9AICGvQAAuDoAAHQ8AAANPQDQtD0AQDM9AACdvABA5jwAwLk8AED+PAAA27sAwPC8AACfPAAA8DsAQL68AEAuvQCAB70AAMA4AIBHvADAM70AgFi9AMCmPQAApbsAwGy9AADrPADAhz0AQGG9AIA3PABggb0AgDU9AACgOgAQnj0A4Kk9AIDRvADgXT0AgPk8AACqOwBAFr0AgPi8AKCPPQBgir0AELQ9AAD8OwCAADwAIAg9AABQvQBAirwAANi7AKAAvQBgrL0AAIO8ACAvPQCAQDwAoCy9AACQugBAlzwAMPI9AMBuvQBA/jwAoB89AIDlvAAgWL0AgPY8AIBbPQCAgLwAUIi9AMD2vACg070AwM08AHCGvQCAZ70AABQ8AAC3PACA5jwAQJ+8AGBLPQBAVL0AAFu8AABpvADAyzwAgKM8AABkuwDQjT0=","chunkHash":"f881d748db38da01d2aaf6d0650b4e56b2d3229f5da8a8d941c6c6bbdc4014d6"}]},"file:///teamspace/studios/this_studio/scripts/visualize_mesh_comparison.py":{"hash":"6bd82322f2e542b76cce26402c77c5edb45190a0ef42cf791abc5ae7f239f609","entries":[{"text":"File: `scripts/visualize_mesh_comparison.py`\n```python\n#...\ndef visualize_comparison(sample_id, smooth_iterations=10, decimate_target=5000, num_points=1024,\n                        voxel_size=(1.0, 1.0, 1.0), save_html=False, show_mesh=True, show_pointcloud=True):\n    \"\"\"\n    Visualize a 3D mesh and point cloud comparison from a mask volume.\n    \n    Args:\n        sample_id (int): ID of the sample to visualize\n        smooth_iterations (int): Number of iterations for Taubin smoothing\n        decimate_target (int): Target number of faces after decimation\n        num_points (int): Number of points to sample from the mesh surface\n        voxel_size (tuple): Size of each voxel (dz, dy, dx)\n        save_html (bool): Whether to save the visualization as HTML file\n        show_mesh (bool): Whether to show the mesh visualization\n        show_pointcloud (bool): Whether to show the point cloud visualization\n    \"\"\"\n    # Format sample ID with leading zeros\n    sample_id_str = str(sample_id).zfill(4)\n    \n    # Find the sample directory\n    #...\n```","range":{"startLineNumber":16,"startColumn":0,"endLineNumber":33,"endColumn":0},"embedding":"AAA4vAAAsDwAAMa7AADsuwCQib0AYGy9AIAsvAAAoDkAIA09AIBCPAAAzLsAAAS9AICVPACQt70AwFO9AJCgPQAAHrwAAO87AABAPACAeTwAALC7AIAePQCgrz0AwOc8ANDJvQCgHT0AYF49AIBKPADQgz0AAH67AGBivQAgFb0A4Ge9AECIvAAAAb4AYD09AABevAAAJj0AoEC9AAB2OwBAdT0AgC28AGCQPQAA1DsAAEA9AADqOwCQqj0AgMm9AIB4PQDADD0AADQ7AJDHPQAQjb0AsM+9AIB2PAAAvLsAIF69AAAYOgBAiDwAAJi7ALCJPQCAtrwAgE+9AADwOgAAo7sAQL08AADoOgAAu7wAgIg8AGBhvQAA9bsAQHA9AAAPvAAAuLwAgIe8AEDfvABgJL0AAL+7AIAbvQCAbb0AAK+8AAAAuADAUT0AAKA6AMC0vQDAdL0A8I+9AIAdvQDAIL0AAJS7AAB6vABAojwAEIq9AAAgugDQsj0AgKA8ANCxvQAAPb0A4Co9AMDQPABA0DwAQNI8AKA0vQCAeTwAgJg9AACmPADQ8j0AgLw8AKA6vQCgLj0AYHY9AIABvQDA+jwAQIc8AEDRvAAAGLoAwEw9ACAkvQAAAb0AAEm8AHC1vQAASb0AgDc9AIAVPACALz0AAO28ANCPPQAger0AYCy9AEBFPQAAxzwAAIe7ACAHPQAwu70AACu8ACBxvQCAtzwAQKk8AAC4uwBgaz0AIIe9ACATPQAgBD0AQJI8AACNPAAAEDsAADu9AIAiPQAAHLwAoCw9AEAivQAA0TwAELo9AMCBvQDgXb0AgHS9AGBfPQAAzLwAAMK9AAAQvAAgKL0AQJq8AMCpPAAAmr0AADy8ACB6PQCAJzwAwIs8ACAyvQAgpr0AQLa8AACEvAAQwD0AAKu9ABC7PQCgAT0AgP88AACQvAAANjsAgAQ9AMD8vAAAwzwAQJc8AIDYPADgVL0AgFg8AECmPACwjz0AgBo8AKA0PQCAmTwAIE49AMA6vQDAvbwAgAu9AIAKvACAXD0AgE88AAC/vABA0DwAgEe8AIA3PAAA4bsAgG88AMALvQAAoTwAoAo9AAB+vACAHjwAADw9AAC+uwDAXz0AYGs9AJCZvQBAjL0AAOQ7AOBTvQCACTwAACu8ANCyPQAAPLwAIHE9AOBEPQAArDoAQCA9AMCQPACAEz0AgD+9AADxvADAvzwAQJs9AADLOwBAc70AAH89AIBkvAAAOLwAgP08AAC+uwAAMDwAQOU8AMD1vAAAaz0AgM68AACLvADAGT0AAJY7AGBlvQCgkb0A4EW9AEDHPADADD0AAK48AOADvQBgaL0AwKQ8AACwOgAgcb0AcJk9ACAKvQBgC70AwLI8AABguwCAmL0AAOY8AIAOvABgoT0AYAU9AKBVPQAA9rwAgBk9AKCHPQAAebwAAMY8AGA1PQBAor0AgA09AEAfPQAAYDwAoC89AGBuvQBAAb0AACo8AAD1OwAAGDoAQDE9AADauwAA6jsAwJs8AIANPACgRb0AYAC9AJCOvQBgaL0AgCi8AMAyvQCghT0AgN88AIBHvAAA87sAMMe9AIA3vAAAeL0AwNS8AGCFPQCAgjwAwKU8AMCLvAAAWzwAQDo9AAASPQBA5LwAAC+9AEC9vACABzwAwKo8AOCfvQBgnD0A4Fk9AADuuwDAKL0AAEW8AFCevQCAHTwAwJE8AMB4vQCgTT0AADq9AIBFvQCALbwA8KK9AADaPAAgFb0AAIA5AADVOwCAdjwA4Ag9AMD8PADAIj0AwNO8AAAAPgDA1r0AoHm9AODevQAgHb0AIA89AADuOwCgBD0AQKe8AOCOPQBgor0AAJg8AAAivACAC7wAAEC6AIAQPQAAfDsA4Fu9ABCevQAA5LsAwES9AIBrvACARTwAgIY9AABOvAAAiDsAoFQ9AABqvABANz0AABY7AMCzPADgZz0AQJ68AAC+vACgQL0A4MC9AIApvQBAXj0AAKo9AIAYvQCAXD0AAOE8AEAHvQBAXL0AgBq8AICyvADAjjwAgB88AGAAPQCAkL0AAHi7AIAXPQDQor0AgL48AECbPQBA+TwAwM08AIB0PQAgXz0AgMk8AOAKPQBATr0AQAQ9ACByvQAAJb0AwFm9ACBbPQAA3DwAABQ7AECxPABAYb0AAJY8ACDNvQDA77wAAJ+9AICpvACAn7wAgAq9AAAyOwDAsLwAgLy8AICyvACATbwAgDc8AAAsvAAAwDkA4G49AAAsPAAAwTwAwO09AAAOvABAwrwAAMc7AEC/vADwjz0AoEW9AFDYvQAAD70AAOs8AKAhPQCAjjwAYGy9AEDAvACAezwAALm8AMALvQDA7rwAACg8AMCQvACANzwAACy7AIBTvAAAwLwA4I69AJCOPQCgBT0AAGu9AIApPQDgZb0AgGM9AAC0vAAAErsAAAC8AACDvADAXz0AgNO8AIDRPAAAmj0AQNw8AADePACgZL0A4Dc9ANDVvQBAXD0AgKs8AGAovQAAL70AgJY8AADrvAAAmbwAYEY9AAB2OwAAGb0AsJW9ACBZPQAAkLsA8NQ9AIAuvQDA4DwAAOw6AGAhPQCwm70AAFg6AEBVPQCAWbwAgBE8AMC/vABAXL0AYAQ9AAABPQAAgLsAwLY8AAAjPABgKD0AoEw9AACcuwAAsbwAQP68AAA2OwAAyTsA4Dk9AAD9vAAAHDs=","chunkHash":"10b28a3a1579527e0767c2f7a4b4377c4f74732bf1104990c243353605c41aba"},{"text":"File: `scripts/visualize_mesh_comparison.py`\n```python\n#...\ndef visualize_comparison(sample_id, smooth_iterations=10, decimate_target=5000, num_points=1024,\n                        voxel_size=(1.0, 1.0, 1.0), save_html=False, show_mesh=True, show_pointcloud=True):\n    #...\n    sample_dir = os.path.join(config.DATA_ROOT, sample_id_str)\n    mask_dir = os.path.join(sample_dir, 'mask')\n    \n    if not os.path.exists(mask_dir):\n        print(f\"Mask directory not found for sample {sample_id}: {mask_dir}\")\n        return\n    \n    print(f\"Processing sample {sample_id} from {mask_dir}\")\n    \n    # Load the mask volume\n    mask_volume = load_mask_volume(mask_dir)\n    \n    # Create mesh\n    mesh = create_mesh_from_mask(\n        mask_volume, \n        threshold=0.5, \n        voxel_size=voxel_size,\n        smooth_iterations=smooth_iterations,\n        decimate_target=decimate_target\n    )\n    \n    # Sample point cloud from mesh\n    point_cloud_from_mesh = None\n    if show_pointcloud:\n        #...\n```","range":{"startLineNumber":33,"startColumn":0,"endLineNumber":57,"endColumn":0},"embedding":"AAA0uwBAqjwAgEW8AIBQvABwob0AQI68AECqvACADbwAAP07AACNPAAArjwAQKy8AADYugDwqb0AAAS9AGCrPQBArbwAAA89AADXuwDACj0AAGE8AADHPACgYD0AgNI8AIDlvQCAvzwAALU8AAD0OwBgdj0AAJQ7AEBJvQDA4bwAQHq9AAAougCoCr4AAAg9AMDcvAAAmLoAAMa8AIDxPACAuj0AgJe8AEByPQBAtjwAQPU8AAAzPADAyDwAeAS+AOBtPQDA0TwAAGa7ANCoPQCgGL0A8L29AEC/PAAAGDsAADK9AACXuwCAALwAAE67AHChPQAA/rsAgOO8AAAoPAAA5rsAAAA5AICYvAAAXbwAAKE7AFCFvQCAS7wAID89AACAOQCAxbwAAMG7AAD9vADADr0AABq7AECrvAAQmr0AANa8AAClPABgVD0AYAm9AJCRvQDAl70AYL+9AEDZvADAXr0AAMy8AAAnvAAgLz0AcLG9AAAwugCApz0AgM08ACBtvQBAUr0AABo9AOAPPQBANz0AAC48AADXvACAQzwAYJQ9AACEugBgvj0AAG08AID+vADgfj0AAJw9AOB6vQBAvjwAQMQ8AABIuwAAvbsAoDs9AGAGvQCA6bwAgGG8APC/vQDAV70AQP88ACAcvQBA+DwAwIu8AOCdPQDgIL0AAFy8AICgPAAAFzwAAE48AEA5PQCAu70AYAC9AIBVvQAAejwAgNU8AAAIvACgjj0AIAe9AOAkPQCAAT0AAFA9AAAcPACAETwAIH+9AIBPPQAAMbwAgOM8AABkuwDAijwAcLA9AGBgvQBgkb0A8IC9ACBePQAAXDwAYOW9AIAePABAFr0AABy9AMAePQCAbL0AABK8AIBSPQDAxrwAgCW8ACBtvQCgbb0AgHS8AABpvADQlT0AgL29AMDDPQAA5DwAwKQ8ACBPvQCAjLwAwPo8AAAkvQCA8zwAAJo8ACApPQBAS70AAIA5AIDXPAAQlj0AQLM8AIDKPAAA1DwAwEE9ACBdvQAAT7wAAJ47AAASvACAlD0AALc7AEALvQBA5jwAQN28AIAWPAAApzsAIAc9AKAMvQAABDwAADY7AICWvACAAjwAIEg9AAAwugCAjT0AcJ49ADCCvQBAXb0AwBC9AOAzvQCgDj0AAOC5ANCCPQCABrwAIHI9AMBGPQDADz0AwCY9AIAJPQAgOT0AYA+9AMDjvAAA9zwAQHM9AABwuwDAXb0AkIs9AECvvADAobwAoDk9AABAugAAKDoAwBM9AABRvQDgVj0AQJG8AEDFvADAiDwAAF47ACBzvQDAh70AgGu8AECdPABAlTwAYCU9AMDHvADgwb0AADo7AMDvvADAXr0AADw9AGBVvQCApLwAAAc9AACAugAAbL0AgBA8AAAAAADwgj0AoB09AIAQPQDgbr0AAO08AKB8PQBAn7wAQCk9AMAfPQBAhr0AAFE8AKAAPQBgbD0AQGA9AKAZvQAgFr0AAIe8AAAUOwAA8zwAQDE9AADoOgDAkbwAgDU8AADkOgAARb0AQCG9AIBevQDgIr0AgGu8AOBlvQDAZD0AAF08AACHPAAAqTsAcLa9AADvPAAAVr0AAEW8AIA1PQAAhLsAACA7AACIOwDAozwAACQ9AIAtPQBAFr0AAHK9AIDQPAAAiDsAAMA8AMAbvQAwmj0AQC09AACaPAAgKL0AAIw7AACzvQAA2LoAgFw8AECivQAAYT0AwAK9ACBKvQCAmjwAwAO9AOBgPQDAHb0AADQ8AIDlPAAANj0A4B09AAB3PACAhT0AgCm8AJC4PQBIAb4AgJm9AKCqvQAAV70AUIY9AABhPAAAiDwAQNo8AOAwPQAgTr0AwLM8AABYOgDAL70AAO47ACA2PQBAmTwAgEC9AGClvQAACLsAAKq8AIBhvABA0TwAwJk9AIBPvAAAhjwAAIQ9AIBxPACAFD0AgAY9AMCdPAAgHD0AAAA6AABHvQCA57wAMLG9AGCAvQBAHj0AQJQ9AIDJvAAAZT0AQDw9AABSOwBgFb0AwPm8AAByOwCArjwAAMK7AGA1PQCQyr0AANC6AMBvPQBAjr0AAOo8ALCNPQDAEj0AQGE9AABdPQAgiD0AgEI8AEA8PQBAw7wAQJo8ADCIvQAAqLwA4DC9AACcPQBAoTwAAFK8AMDmPABAOL0AQDQ9ANDevQAACLsAIMi9AMC4vAAANr0AACm9AACKOwBASb0AQO28AACHuwAAuLsAALA5AACCvAAAgDkAwK09AIBhPAAAeDsAgOc9AMCVvABADL0AQOG8AIDZPADwrD0AgFK9AJDevQAA4rwAgJI8AKBJPQDAx7wAANm8AAA5vQCAljwAAI07ALCSvQCAD70AAM27AADSOwBAlrwAAMa7AABqOwAAsLwAoB+9AOBTPQDgED0AYHm9AAChPABgCL0AQJM9AIArPAAAIzwAAPi7AIDkvACgfz0AgBW9AMCQPABAbT0AALA8AAADPAAAPL0AoAc9AOCzvQDQhz0AgGE8AEDXvABgLL0AYF09AMAcvQCAPLwAgGI9AIAEvACAn7wAAGK9AGArPQCAAbwA2AM+AMA7vQBgEz0AgLm8AKADPQAwxL0AgB+8AOBBPQCAirwAgIm8AEBOvQAgUb0A4DI9AIAOPACAPrwAgCA8AIA3PQAAtLoAgDg9AED/PAAAQbwAgCq9AIAHPADgBz0A4DM9AACTvABA5Dw=","chunkHash":"95afc5481919d471487cd7727009a2acc92602acbfc1d0ac674f88c3f7fdfbe6"},{"text":"File: `scripts/visualize_mesh_comparison.py`\n```python\n#...\ndef visualize_comparison(sample_id, smooth_iterations=10, decimate_target=5000, num_points=1024,\n                        voxel_size=(1.0, 1.0, 1.0), save_html=False, show_mesh=True, show_pointcloud=True):\n    #...\n        point_cloud_from_mesh = sample_points_from_mesh(\n            mesh, \n            n_points=num_points, \n            include_normals=True\n        )\n    \n    # Create visualization\n    if show_mesh or show_pointcloud:\n        # Determine number of subplots\n        if show_mesh and show_pointcloud:\n            fig = make_subplots(\n                rows=1, cols=2, \n                specs=[[{'type': 'surface'}, {'type': 'scatter3d'}]],\n                subplot_titles=(\"Triangle Mesh\", \"Point Cloud\")\n            )\n        else:\n            fig = make_subplots(\n                rows=1, cols=1, \n                specs=[[{'type': 'surface' if show_mesh else 'scatter3d'}]]\n            )\n        \n        # Add mesh visualization\n        if show_mesh:\n            #...\n```","range":{"startLineNumber":57,"startColumn":0,"endLineNumber":80,"endColumn":0},"embedding":"AMCDvAAAJjwAgAc8AIBevADwjb0AwI+8AMACvQDgEL0AAMI8AADMOwBAAD0AQLu8AIAivABQtL0AgPS8ALCgPQAALrwAAAs8AMCSvADAZj0AQIE8AMCbPAAgiD0AgFA8AIDpvQAgOT0AAC28AAACOwAAOz0AAHI7AGAqvQBAqrwA4E29AIBhPAD4Cr4AgDw9AIAWvQAA9DoAAJq8AED8PAAQtz0AAK27ACBuPQCATDwAQO48AADxOwBAhzwA4Lu9AKA2PQCgLj0AABK8AGCdPQDgBb0AILm9AADUugAALLsAQCG9AACxuwAAODsAwMy8ABCuPQAA/TsAwIu8AMCdPAAgHr0AgFO8AIC8vACAGrwAANk7ABCGvQDArrwAACM9AADePACAmbwAAHK7AAAoOgDgBb0AgHQ8AADkuwAgj70AAE28AAAjPABAbj0AAI87AOBwvQAAkr0AoLW9AEC6vADgTL0AwBS9AEDBvADgPD0AMNa9AACwuQBwuz0A4Bg9AMBDvQBgQL0AoB89AADcPAAADT0AABg7AKBpvQCAgTwAkJc9AMC3vABgtz0AQAA9AICWvACAjT0AgGc9AICyvAAAYTwAAOM8AACVuwAA7bsAQCI9ACASvQDApbwAwLq8AFCivQDAbb0AQJg9AEAtvQBAET0AAAg7AKBVPQBAvLwAgDO8AIDAPACAJjwAANG7AIDVPACgpb0AACC9AGA7vQAARjwAgGU8AAAMuwAAgT0AAJI7AGBbPQDAgTwAQBM9AAClPACgBz0AcJS9AEB4PQAAYjsAACM9AACaOwBA7jwAEMY9AOCBvQDgkL0AoF29AOCFPQAAhbsAkNO9AACvuwCAcLwAcIC9AACouwBgfb0AALu7AIAlPQCAab0AwNK8ACB/vQCAYr0AQOC8AKA3vQDAdz0AgI+9AKATPgAA7jsAwJg8APCmvQAAs7sAgOw8AIDRvABA0zwAAHI7AMDSPADgRL0AwJI8AIAPPQAAPj0AgOg8AMCAPACAozwAwG09AHCRvQCAIbwAQK48AMAUvQBAWj0AAGi6ACAevQCAgDwAALW8AAAqPAAAijsAAM08AIDTvAAALzwAAIA8AMCGvABAlDwAIHc9AIAgvADwpT0AIE09AAArvQBgYL0AAFq9AOAivQCAED0AAOi7ALCBPQBAnbwAwBo9AMCIPQAA9jwAQFk9AEAdPQCAJj0AwMe8AIAjPADAwTwAwF49AEDTvACgQb0AcIk9AIDmvAAA1LoAIFA9AAAAuACA3bwAwIM8AIA3vQAAGj0AwJO8AIADvABACj0AAPg6AJCfvQAggb0AwO+8AADcOgCAGLwAQBY9AOAAvQCwsb0AAHg6AEBtvQDgXr0AACE9AGAwvQAAerwAAGc8AADdOwAwhL0AAME8AIBnvADgjD0AQBU9AID5PADgZL0AAE88AAA5PQCgCr0AgMU8AGAYPQCgfb0AgCg8AACcPADAZz0AwFw9AIDuvADA/bwAAA+8AICTPACAGz0AwEg9AADYugAAsbsAwIg8AIAYPACAPb0AwEC9AAAivQDgI70AABY7AMCEvQAgeD0AgIg8AAClPAAAFLsAgJ69AADkPADAQ70AAGe8AEBjPQAAHrsAAL47AAAGPAAAeDwAAAI9AHCBPQDgM70AkKm9AMDDPACAjDwAwLa8AMBDvQAwrD0AoDw9AABqPACABb0AgCA8ACCgvQAAXjsAQA09AEDDvQBgGz0AoCu9AOBBvQAA6DsAgEy8AACDPQAAIL0AAIA8AOBtPQAgKj0AoAU9AACgPACgfz0AACq7AHDmPQDw870A8Iy9ALCovQBgR70AwGI9AEDHPAAAujwAoCI9AEBUPQAA/rwAQDE9AAB3vAAAJL0AQKY8AMBRPQAAkDsAgGy9AJDEvQAArTwAAAC5AMCNvADAsDwAoFo9AACguwCAojwA8Iw9AAAUPABgNj0AgJA8AEDyPABgAT0AwLc8AICDvQAAH7wAwHO9AABWvQDgDT0AIIo9AEDfvACAtjwAQL08AIDWPAAAiLwAAAm9AAAQugAAGzwAgDs8AECuPADQ4b0AwKQ8ALCCPQBQiL0AgMY8AABCPQBAVj0AAOI8AEAgPQAQkD0AAN87ACA4PQBA77wAAO47AKB7vQCAFb0AoCS9AFDGPQAAnTsAAGy7AACgPAAATrwAwAI9ANDbvQCAFrwAwKq9AAA2vQBASL0AwA+9AMDMvABADL0AABW8AAAQPAAArLoAgII8AADKuwAAozsAkNQ9AMCSPAAArLoAwPg9AIC4vADA7bwAgHC8AEAQPQBwlD0AgCW9ANDRvQAAKTwAQKc8ACA9PQDAubwAwPK8AEA2vQCApDwAwIw8AMCBvQAgIb0AACg6AIAoPAAARrsAQJu8AAC6OwAAo7wAoDO9AMA1PQAgBj0AQO28AECrPAAgQr0AALQ9AMCKPACAuDwAACE8AFCEvQDAcj0AALm8AAC8OgCgfT0AwBw9AACUOwBAjr0AwPc8AJDMvQAwgT0AAHS7ACAwvQAAJb0AwJE9AIALvQAAyLoA0IQ9AIAXvADgAb0AoE29AIASPQDgC70AwNg9AAAqvQAAPjwAIGO9AMAuPQDAz70AAJa8AIAJPQBAjrwAALm7AIBbvQAASr0AQO88AADYuwCAQLwAgKc8ACAXPQAAbLsAgGA9AEDpPACAy7wAoBC9AADkugDgFD0AAFU9AEC8vABAkDw=","chunkHash":"3cc9df5df41c1e0d4d483ef2c163590abda8ed6e04a0f1e455e4d87fce18917c"},{"text":"File: `scripts/visualize_mesh_comparison.py`\n```python\n#...\ndef visualize_comparison(sample_id, smooth_iterations=10, decimate_target=5000, num_points=1024,\n                        voxel_size=(1.0, 1.0, 1.0), save_html=False, show_mesh=True, show_pointcloud=True):\n    #...\n            # Extract vertices and faces from trimesh\n            vertices = np.array(mesh.vertices)\n            faces = np.array(mesh.faces)\n            \n            # Create mesh visualization\n            mesh_vis = go.Mesh3d(\n                x=vertices[:, 0],\n                y=vertices[:, 1],\n                z=vertices[:, 2],\n                i=faces[:, 0],\n                j=faces[:, 1],\n                k=faces[:, 2],\n                colorscale='Viridis',\n                opacity=0.8,\n                intensity=vertices[:, 0] + vertices[:, 1] + vertices[:, 2],\n                showscale=False\n            )\n            \n            fig.add_trace(mesh_vis, row=1, col=1)\n        \n        # Add point cloud visualization\n        if show_pointcloud:\n            if point_cloud_from_mesh is not None:\n                #...\n```","range":{"startLineNumber":80,"startColumn":0,"endLineNumber":103,"endColumn":0},"embedding":"AECyvAAAhzwAQNE8AABNvAAgMr0AAAy7AMCivAAAirwAgIM8AEAIPQCAETwAAEw7AMCIvAAwrr0AABa9AMBrPQAAPbwAAIS7AMDjvABgfz0AgBK8AMAJPQDgjD0AAKi6ACDnvQDAXT0AQJa8AAA8vADASz0AAFS7AOBFvQAAerwAwGm9AAC0vAAQ9r0AgCI9AEDjvACATDwAYBW9AMASPQCAxj0AAGS7AIAQPQAAUjwAgB68AIA+vACA1jwAoK29AEDsPADANT0AgBG8ACB4PQBAAL0AgIi9AEC6vACAkLwAYBG9AABMvAAAcrwAAM27AIB1PQAAwDoAgIm8AMD8PACA1rwAAHo8AEClvACAljwAoB09AHCOvQAAsbwAwA49AACJPACAurwAAIQ7AACXPACgD70AAKA5AADkOwAgeL0AgCC8AADYOgAAID0AAEK7AKByvQDQmL0AALO9AKAKvQAAdL0AwJq8AECEvADgAT0AIMS9AAC2OwBgwj0AALY8ACAbvQAATr0AYFI9AEAOPQBAojwAgM08AHCJvQAAGT0AoHY9AMC4vABgkz0AgFY8AMAEvQBAdj0AwCM9AMCQvAAAXjwAAH48AACzuwCAerwAgA49AADPuwDAJr0AQAm9AHChvQBAQ70AEJw9AEC+vACgPj0AAMO7ACCJPQCA3bwAgJy8AICrPAAA+jsAAD28AABDPQDgYL0AAKG8AAAdvQAA1LoAADg8AABuOwAgVD0AABi7AOBIPQDA+zwAwEo9AGAcPQAAkzwAoHO9ACCMPQCAarwAgJM8AIAgvAAAOzwAgLw9AFCAvQBgjL0AoIe9ALCEPQAAQDoAENO9AECevABA77wA4Bq9AAAguwDAVr0AAOA6AOAyPQBAbL0AwJy8AECGvQCger0AgOO8AOBovQCgYz0AsIq9ANgKPgAALjwAQKc8AIC0vQDAGr0AgAA9AKA7vQBAlzwAAIi7AAAQPQBgNr0AAD67AMANPQDgND0A4As9ACAzPQCAmjwAQKA9ACClvQCAjbwAYBY9AICgvACAXT0AAGY8AAB4vAAAizwAAFu8AAC8OwCAYjwAwNw8ACAwvQAApbsAQAE9AEDUvAAAFDwAQJk9AAAePACArj0A4Bw9AKAzvQAgh70AgAu9AIDgvADgAT0AACA6AFC4PQAAFrsAAH49AECYPQAAtjsAoDI9AAD6uwCgPD0AQPK8AIAvPABAHz0AgGc9AIALvAAQib0AwC89AECivAAAT7wAwGU9AECVvABgDb0AgMg8AGBHvQBAPz0A4AG9AIC/vACA2jwAAKm7AMCtvQDgf70AQLm8AADTPACARrwAgLk8AADPvACAl70AABS8AGBmvQAgeb0AYJc9AIAqvQCAHbwAwBU9AABSPADAjL0AQP88AMCGvAAAaT0AQL48AICOPADAJb0AQKA8AKAtPQCA4LwAQNo8AIDvPADQi70AgB48AIChPACgFD0A8JY9AMCTvABAzrwAAKm7AAARPQDAqzwAQAc9AICDPAAAzDwAQPk8AADQOwCggr0A4DO9AKA4vQBge70AgH48AKBfvQCgbj0AAKS7AAACPAAA+jsAYNS9AGBCPQAA87wAAPw6AIBlPQAAxLoAAOC6AIARPABA3zwAoGw9APCJPQBgWL0A0LG9AEChPAAAobsAAEC6AMAXvQCgvz0AgIg9AEDGPAAArrwAAMc7AKC6vQAAuDoAwJA8ADCuvQCAAT0AwCe9AMBZvQBAlzwAwC+9AEA1PQCAW70AgJs8AIA2PQDA+TwAgEs9AABUPACAlT0AAHA7AFDpPQDAvr0AkJS9AJCmvQAA/7wA4HQ9AABePQAApjwAAN47ACAVPQAA3bwAAEY9AIBovADA87wAwJA8AEBMPQAAvLsAwGu9AECmvQBAjjwAABs8AKB0vQAAgjwAoEQ9AAAVvAAAIzwAcKA9AIAFPABQrj0AACk8AIAfPACAxTwAgLM8AABQvQAAHrwA8JO9ADCEvQDAJT0AoIs9AIDKvADAET0AAN88AIAsPAAA+LsAABG9AAARvAAABzwAAOo7AADQPACAsL0AAIC5ACCCPQCAWb0AwKY8ACCBPQDgHz0AQJ48AKAEPQBgcT0AAOc7ACB4PQAArLwAALQ6ANCKvQCQib0AAMm8ALDDPQAAQLsAgIe8AICqPACAAb0AYDY9AIDZvQAAsbwA8LS9AMA5vQAgK70AAM68AAC0vAAgA70AgFi8AIAkvABAyzwAAOE7AICrvACAUrwAgMc9AAA1PABAjrwAcPU9AIDJvABgEL0AgNS8AMDhPABgpD0AYBy9ADDLvQAASLwAAO47AKBNPQAAzLwAICu9ACBKvQDA2jwAAB68AOBwvQAgd70AAJy7AIBfPACAarwAQOO8AMDbPADAiLwAYAa9AKBHPQBgKD0AICG9AMDwPACA7bwAwLk9AAARPQCARzwAgMi8AOCPvQCgVz0AAOa8AACluwBAWT0AQNE8AMAJPQAAf70AgFs8AOCgvQBAWT0AgLm8AIAdvQAAybwAQKY9AMDrvACAFjwAsJg9AIAZPACgJr0A4Ce9AIBLPQAASL0AsNU9AIBnvQAA/zsAwDi9AMBZPQCg3b0AAEG8AIC8PACAkrwAADi7AMAivQBAW70AwK88AABHvACAjrwAgNk8AEAZPQCACLwAYGM9AACqOwAAKzwAANW8AACoOgAA7TwAQIs9AMD+vAAABjs=","chunkHash":"6984e5a963e91ed93cedadd46adac004708f5173ae54ec68c978493728066ae6"},{"text":"File: `scripts/visualize_mesh_comparison.py`\n```python\n#...\ndef visualize_comparison(sample_id, smooth_iterations=10, decimate_target=5000, num_points=1024,\n                        voxel_size=(1.0, 1.0, 1.0), save_html=False, show_mesh=True, show_pointcloud=True):\n    #...\n                points = point_cloud_from_mesh[:, :3]  # First 3 columns are points\n                normals = point_cloud_from_mesh[:, 3:] if point_cloud_from_mesh.shape[1] > 3 else None\n                \n                # Create point cloud visualization\n                point_vis = go.Scatter3d(\n                    x=points[:, 0],\n                    y=points[:, 1],\n                    z=points[:, 2],\n                    mode='markers',\n                    marker=dict(\n                        size=3,\n                        color=points[:, 2],  # Color by z-coordinate\n                        colorscale='Viridis',\n                        opacity=0.8\n                    ),\n                    name=\"Point Cloud\"\n                )\n                \n                col_idx = 2 if show_mesh else 1\n                fig.add_trace(point_vis, row=1, col=col_idx)\n        #...\n```","range":{"startLineNumber":103,"startColumn":0,"endLineNumber":123,"endColumn":0},"embedding":"AAC4uwAAeDwAgBA8AIBVvACQi70AAHu8AEDqvADA+rwAQKA8AAB3PAAAnjwAAKi7AEDOvAAwnr0AgAO9AFCMPQAAIDoAABw8AABgugBARj0AAHq7AMDcPADAcT0AAHE8AED3vQCgdz0AAMA6AACYOgCgfj0AAHY7AMAIvQBAuLwAYHi9AADAOgB4FL4AQBg9AEAJvQAAijsAYB+9AIAjPQCwhz0AAKY7AOCCPQAADrsAQPw8AACHOwDA/DwAkLW9ACAFPQAglz0AAPm7AECkPQCAqrwAQLa9AIATvAAAhDoAwA+9AADAOAAAi7sAgJ+8AEDFPQAAbjsAQJC8AADdPAAAxLwAABe8AMCUvACALbwAgM48AGB+vQDAlLwAgFQ9AACCPACABrwAAEa8AAAguQAgGL0AAIW8AIB4vABAe70AAE28AIAJPACgEz0AANq8AKA2vQBgrb0AkIu9AICkvACgE70AQNG8AEDEvABAvzwAkLa9AAAWvADAsj0AYDo9AOAivQBgar0A4EI9AAAuPACAbTwAAAK7AGAXvQCABjwAoJI9AECbvADQoD0AAH08AECzvABgWz0AYF49AAA7vAAADLwAYBU9AACMuwAA9rsAAAY9ACAOvQCAp7wAIAW9AJCqvQCAE70A0I09AAC0vACgFT0AABK8AECZPQAACL0AgO+8AABYuwAAajwAgK68ACAYPQAQhr0A4Ey9AIAtvQCAXTwAAIc8AADEugCgPD0AgDY8AOAePQDAED0AwAI9AADnOwAAujwAELC9AHCePQAARLwAwB09AABlPAAAbzwAkKo9AEBwvQCAkL0AYFu9AICoPQAANjsA8Om9AIA4vABAjbwAAGe9AAAKvABwib0AwN68AIDxPACgb70AgIO8AOCOvQAQir0AwBO9AMBXvQBgdj0A4E69AKgAPgAAbjwAwO08ALClvQBAn7wAgHI8AIANvQAADj0AAMQ6AEDyPABgYr0AwMo8AOApPQCAQj0AwAM9AKBVPQBAjzwAoEg9ANCfvQCAFLwAgFE8AADWvADAWz0AABi7AEAVvQAAXzwAQNG8AIBYPAAAwzwAADw7AOAlvQAAyTwAwIs8AIAnvAAAMLsAgF49AAAouwAgsT0AAEA9AGBNvQDgmb0AQFS9AMDlvADAIj0AAAA4ANCXPQCAcrwAMIE9ABCkPQCgFz0AwEg9AIAKPACgHz0AIBa9AABEPAAAtzwAgIY9AMCKvAAgNr0AQHM9AEDVvAAASjsAYGY9AMCkvACA/bwAwNY8AGB4vQAAAj0AQKa8AAAHvACA3jwAAAo7AICMvQDgXr0AQKe8AIBkPAAAWrwAgOM8AED9vACgr70AgE+8AEBLvQBgXr0AQG89AKAdvQBA7bwAwPY8AACdOwBwnb0AAIY8AADJuwBgTz0AwK08AAAZPAAwn70AYA49AGBNPQCAtbwAwOI8AIDYPACAdr0AAMQ8AABgOQCgCD0AYE49AEA5vQCA7LwAgDq8AAAnPABATj0AwPs8AAAWOwAAwLoAwA49AABWPAAAbL0AgJm8AEBfvQBAO70AgMg8AECSvQBAbj0AAAY7AMDiPACADzwAUMS9AIClPABAYr0AAOq7AMCOPQAA6LoAgHU8AACFOwBAtDwAgCo9ACBtPQDAWL0A8Je9AEDbPACAmjwAwLy8AOAivQBgwT0AgCg9AMC3PABAt7wAACg8ALCxvQAAgDgAgOk8AGDWvQAA2jwAYBG9AOBjvQAAYDsAQIa8AABUPQAgRr0AQMQ8AIBhPQDgMT0AgK48AAAwPADAVz0AAFC8AFCuPQCg2b0AQLa9AFCnvQAgDb0AsI89AIAGPACA2jwAwOY8ACAqPQCARb0AgNw8AACROwCA2rwAgAg9AGB7PQAAlLsAgIW9AAC7vQAASzwAAFw8AICrvACAjzwAAFY9AMC0vADAsjwAYJg9AAAIOgDgaD0AAJc8AEDwPAAAHTwAwIc8AGBsvQDA+bwAcIm9AKA6vQDAIz0AgKQ9AAC1vABAFj0A4DE9AEC/PACAu7wAQLi8AACuuwAANDwAADg6AOAFPQDwyb0AgHI8AEBWPQBAgr0AANo8AMBXPQDAST0AIBo9AAApPQBQhj0AAOU7AKA3PQDAHb0AgBm8AMAivQAgUL0AAKu8AFCmPQAAmLoAAOe7AIAQPACAprwAIAU9AKC8vQAA67sAcLu9AMATvQCAxLwAAEC9AICdvAAAQL0AAKE7AABCOwAAMDsAAN47AIC3vAAAh7sAIM89AIB9PACABDwAiAU+AIBSvABAv7wAgO28AEC/PABQqj0AIC69ADDivQAAUbwAwIQ8AKB9PQAAnLwAACe9AKADvQAApzsAAIu7AKB7vQAAVb0AACA7AADlOwAA0DoAgCK8AAAwOgCAgbwAICi9AGAcPQBAzzwAIBW9AAADPQBALL0AQMo9AADXOwCAdzwAAB47ACB8vQBgiT0AoCi9AADCOwDgiz0AAC49AIBkPADAV70AoCo9ADCwvQCAbT0AAAm8AAAbvQBA8LwAQJI9AMAIvQAAmDoA4Hk9AADgOwCA3rwAACO9AEC7PAAAdLwAkOs9AEABvQAAcTwAgI+9AABQPQCQx70AwJy8AAARPQCAlbwAACg6AKBlvQAAT70AAPU8AIAPPAAAi7wAwMU8AIABPQCAJLwAQE49AACYPABA0LwAQA69AIAqPAAgEz0AQE89AAC+uwCgHz0=","chunkHash":"805c45878585790d8dbf74cf7aafb7d5ffe03f7d86d6906297a567f9085018d7"},{"text":"File: `scripts/visualize_mesh_comparison.py`\n```python\n#...\ndef visualize_comparison(sample_id, smooth_iterations=10, decimate_target=5000, num_points=1024,\n                        voxel_size=(1.0, 1.0, 1.0), save_html=False, show_mesh=True, show_pointcloud=True):\n    #...\n        # Update layout\n        fig.update_layout(\n            title=f\"Sample {sample_id} Visualization\",\n            scene=dict(\n                aspectmode='data'\n            ),\n            scene2=dict(\n                aspectmode='data'\n            ) if show_mesh and show_pointcloud else None,\n            margin=dict(l=0, r=0, b=0, t=30)\n        )\n        \n        # Save visualization if requested\n        if save_html:\n            os.makedirs(os.path.join(config.RESULTS_DIR, \"html_pointcloud\"), exist_ok=True)\n            output_path = os.path.join(config.RESULTS_DIR, \"html_pointcloud\", f\"sample_{sample_id_str}.html\")\n            fig.write_html(output_path)\n            print(f\"Visualization saved to {output_path}\")\n        \n        # Show interactive visualization\n        fig.show()\n    #...\n```","range":{"startLineNumber":124,"startColumn":0,"endLineNumber":145,"endColumn":0},"embedding":"AADCuwCAdDwAACA5AIDFvAAwoL0AgJy8AAAXvQCAFr0AABg8AIBePAAgET0AAGq7AMDOvACgwr0AQAi9ACCnPQAAtDoAAK08AAChvACgRT0AAB47AAA8uwBQmD0AIBc9ANDVvQAA7zwAAIy8AAB/PADAVT0AAEg6AIBAvQDAsbwAAFC9AACmOwAAH74A4C49AECrvACAVbwAgIu8AIDEPADQwz0AADq8AMCBPQDApDwAQMI8AECIPACAxjwAoLq9AKAxPQAgMT0AAOS6AOCWPQBgK70AQKS9AAAWPACALrwAAPe8AABSuwAAOjsAAHy7AICdPQAAfLsAACG8AMC9PACA+7wAAMS6AGAEvQAAnbsAAOs8AGBsvQAAqLoAoAk9AAALvAAAmLwAgCy8AACmuwCAFr0AgLE8AIAFvAAQsr0AAJe8AAB1PADAPD0AwOa8AKATvQBAmb0AALa9AECCvACA/7wAgNO8AEARvQDAIj0AwMi9AACsOgAwjT0AQCg9AIB1vQAARL0AwAY9AECjPAAAdz0AgEC8ACAavQAAbzwAgJo9AMCjvAAgoj0AAAU9AEDbvADgKj0AgGA9AOA4vQAAOrsAICc9AADSuwDA4LwAgO48AKAHvQAAgLwAICG9AOCXvQDAJr0AgFk9AEALvQCgIz0AAIi6AAA9PQDgDr0AABW8AMDGPAAAgzwAAKw6ACBZPQDgob0AYDK9AMAqvQAAkzwAAGE8AABdvACAVz0AAIY7AIAjPQCAXjwAAAM9AADOPAAgND0A8Ie9ABCGPQAAMDoAoAw9AMCtPACgAz0AYKc9AKCGvQDgU70AQFm9AIBvPQAAOLsAMNS9AAAAPAAAtbwAAD29AABJPADggL0AAEu8AMAMPQBAHr0AwL28AECOvQAQkb0AAA+9AMDyvADAiz0A4Fa9AMgAPgAAWjsAwPc8AAClvQCAeLwAAKE8ACA4vQCAfzwAAKw7AID3PACAe70AAKC6ACAlPQBgMD0AQN08AICePAAAiDwAIEw9ANCAvQAA27wAACQ7AECvvAAAXT0AAES8AOAJvQCA3zwAgNi8AACePAAAaDsAgHA8AKAQvQAA+TsAgAE8ACAOvQAAfzwAoFI9AADgugBQnT0AoH49AMAnvQAgCL0AIGS9AADGvAAAHT0AAHi6AEBAPQAACr0AoCU9AIBcPQAA9zwAoDY9AMDdPABAUz0AwAi9AAAevAAAsDwAEIU9AEC8vADgU70AwHg9AIBivAAA3TsAwFc9AADQuQBA4LwAAJA8AMBWvQCgMD0AAA+9AIC4vACA9jwAACS7AICLvQAwmb0AwN68AAC+OwDAgLwAwO88AMCjvAAA7b0AAMS6AOBHvQCAYL0AwFU9AMAWvQBgLb0A4BY9AACougAAcb0AgAo9AIAQvADAcj0AQBU9AIDePADwjL0AQN08AKAxPQCAObwAAIE8AMAGPQDAdb0AALg8AMCyPACAOT0AgEQ9AKAlvQCAKb0AgAC8AAAqPAAAWz0A4As9AACIugBAjbwAQNo8AAC5OwDgL70AoC69AEAivQDgKL0AgH28AHCtvQCAhT0AAM48AICzPAAAnTwAQKe9AMCvPABAYL0AgIC8AOBiPQAAwjsAgEU8AACEOwBA9zwAQCo9AGBvPQBARr0AcIm9AOAFPQCAOjwAALC8AEA+vQCwlD0AQGk9AEDBPAAA97wAgEI8AGCsvQCAgTwAwNQ8APDGvQAgBD0A4BK9AIBVvQAALjwAgHY8ACBqPQAAPb0AwKY8AMCFPQCAPj0A4AY9AIARPAAgfz0AANO7AJDEPQAYAL4AUJ+9ADCovQCQir0AYGM9AIC2PAAAmTwAICI9AIBUPQAgWL0AwJ08AAAvvACgLr0AwBY9AOAzPQAAlzsAAEa9AJDNvQCAX7wAAMm7AECfvAAA0TsAgJo9AECsvACApzwAAJk9AADVOwAA7DwAgPs8AICIPABA3TwAQNM8AGB+vQCAFLwAMKa9ACBmvQBgFz0AsKE9AAAHvADAKj0AAHc8AGAIPQCAyrwAgAK9AIBLPACAnjwAgFI8AACmPAAwy70AALC7AIBOPQBgYL0AoA89AEAhPQDgGz0AoDk9ACBlPQAQoz0AwIA8AIAUPQAgCL0AgMs8AMBzvQAAu7wAoBq9AOCVPQAAYjsAAJO8AAD7PADA/rwAoBg9ADDlvQCAN7wAoMW9AIDlvADAfr0AAPy8AMAQvQDA/LwAAIM7AACbuwAAVDsAgB88AADZuwAAvbsAMMA9AAD3PACAE7wA8Pw9AEDAvABAjLwAAPC7AMDgPAAQmz0AIDu9ALDHvQAAhbwAADg6AABRPQBAwrwAQP28AKBQvQBAkTwAAFQ8ADCQvQDABL0AgDi8AAC2OwCAdLwAgJm8AACKuwAgAb0AwGK9AMBQPQAAKj0A4AW9AEC9PAAgY70A8Lc9AABFPAAAVjwAAJg7ACB2vQBQlz0AQPS8AIAkvACwjj0AYAY9AACEOwCgcL0AgA89AEChvQBgUD0AAJa7AOANvQCAF70AIE09AKA5vQAAnLoAwGU9AADzuwCACr0AACq9AOAiPQCACL0AMPE9ACALvQAASTwAAEG9AEAPPQDwwL0AQPG8AKAlPQCAnbwAgEC8ACBLvQBgVL0AoA09AECRPADgAr0AgD88AAApPQCAIzwA8I09AAC4PABAprwAIFm9AADpOwCgAT0AYDU9AICxvACAAT0=","chunkHash":"afa1b506d8d98cad639e0be22ab72d591fc96cc63bb3f74582af340f37d4efe3"},{"text":"File: `scripts/visualize_mesh_comparison.py`\n```python\n#...\ndef visualize_comparison(sample_id, smooth_iterations=10, decimate_target=5000, num_points=1024,\n                        voxel_size=(1.0, 1.0, 1.0), save_html=False, show_mesh=True, show_pointcloud=True):\n    #...\n    return mesh, point_cloud_from_mesh\n#...\n```","range":{"startLineNumber":146,"startColumn":0,"endLineNumber":146,"endColumn":38},"embedding":"AABevAAA1TsAABS8AADquwDgeb0AAD+8AIAGvQAA+LwAgGo8AAAEPAAAnjwAAK28AMCgvABQxL0AQB+9AECtPQAAULwAAKQ6AIBivAAgIz0AADQ8AIBpPACglT0AAHM8AJDmvQCgOz0AAAy7AAAwPACAfj0AgEs8AOB4vQCgAr0AYCy9AACNOwCQD74AgC49AMAmvQDAlzwAwJm8AIDkPACQrz0AQJW8AMCVPQAAmDsAAJC7AAAguQAAnTwAANe9ACCDPQCgOz0AAMs7AICVPQAAy7wAQHe9AIBqPAAABjsAAAO9AADPuwAAgbwAgEa8APCJPQAArzsAwJG8AAD9OwCA2rwAAHK7AECjvACAwbwAgPI8AKCXvQCAUrwAoDI9AADBOwAAVLwAACS7AACRvACA6LwAQJM8AICGPADgjb0AACG9AEDKPAAgPz0AAPK8AIA1vQBgrb0AUIu9AADKvADANr0AwKC8AIDSvADA+TwAsMK9AABhvADAtj0A4DI9AKBLvQCgYL0AQPk8AIANPQBAGj0AAAo8AMBVvQAAaTwAoJY9AIBxvADA2D0AAJE7AIDYvAAQhD0AwHs9AEAGvQAAwDwAgMo8AIBavAAAkLwAwPM8AAD6vACAnLwAQPW8APCPvQBgHL0AgDU9AECfvABAJz0AAAk8AEBjPQBAk7wAgI28AMDlPAAAJrwAAH+8AGAaPQBQjL0AIAW9AEAzvQAARTwAAJ87AABkOwCAlj0AAKw6AKAPPQDAgTwAIGE9AMDUPADAsTwAEKy9AOBdPQAAJLwAAKU8AABBPAAAfTwAwLU9AECHvQCwrL0AYBi9AOBbPQCAH7wAEOK9AAA6PACAcLwAoCW9AAAdPABQkr0AAJI7AKA0PQDgQb0AAHK8AKA8vQCgSr0AQPO8AECBvABwjD0AMIW9AHDsPQAAmjwAIDQ9AGCpvQAAQbwAYAI9AIAFvAAgAj0AgE88AAA/PQDgHr0AACY8AAAxPQAgaT0AIAc9AMCnPADAizwAoIo9AKCNvQBAorwAgI08AECIvAAAOD0AAIq7ACAPvQBALT0AAH28AAAxPAAAoTsAgNs8AABFvQAAWDwAADw7AACkvAAAmDwA0IY9AAAvvABwpT0A4Es9AICGvQAAT70AUIK9AAB/vABAKD0AAB88AKB/PQBAh7wAoBg9ADCGPQDAuDwAwPg8AIA5PABAPT0AgIq8AIAivABgCz0AgJs9AAC5vADAbb0A4GM9AECbvAAAKLoAgFM9AIADvAAABb0AAC08AOB4vQDgEz0AgA29AAA5vACAFTwAAAo7ACBJvQBgP70AQOS8AABeuwAA5bsAIEY9AMDyvADAub0AAGY7AEApvQCge70A4Gw9ACAGvQCAo7wAQAk9AAAIPACANL0AADw8AABHvACQiD0AwPg8AKAAPQAwj70AgJ48AOA7PQCACrwAwNM8AEDnPABQlr0AQI08AEDDPACgVz0A4Hc9ACAPvQBAvLwAgAe8AAD4OwDAKz0AIAY9AAAYOwCACbwAgNs8AAAjPAAgSb0AwBm9AIAevQDgRL0AACe8ADCqvQAQjj0AwLI8AADDOwAAzDsAwLa9AIAMPQDANb0AAJ68AAA4PQAA6zsAAFQ8AICivAAgKz0AABU9AHCiPQBAV70AEJe9AMC1PAAA8DwAwMm8AEA9vQCwmz0A4Bc9AAAJPADACb0AIAA9AGC+vQAAYDoAAJU8AMDevQBAOz0AIEW9AOCAvQAAJTwAAIi7AIBBPQAACb0AAIE8AGB5PQAAVT0A4EQ9AADyOwBgez0AgDS8ABDJPQCg670A8JW9ALDivQBAJ70A4I09AMDYPABABj0AIAg9AKAyPQDATb0AQPc8AABTvADAXb0AwKg8ACBGPQAAdLsAAH29AMC5vQBAoTwAAIC4AMCsvACAtTwAoEs9AAAHvADArjwAUJY9AADQOQBgOT0AgEg8AIANPACACjwAgKE8AEBOvQAArrwAAF69AEDTvADA0zwAEJY9AECqvAAgIT0AwO88AADTPABAjrwAQE69AAA4OwAAaDwAALg6AIACPQDAx70AAO87ABCIPQDAT70AQOQ8AIBRPQCAEj0AQBg9AKCDPQAwiT0AAF67AAAjPQBAD70AABi6AMBCvQCAJb0AIDi9AHClPQCAQDwAwNC8AMDvPABAz7wAAOk8AHDIvQCANLwAoKW9AAAfvQCggr0A4Da9AICdvAAA97wAgGu8AACIugAAUDoAgJE8AECOvAAARjwAkMM9AIDbPAAAFDwAsAQ+AAByOwDArbwAAEq8AEC0PABAoD0AYAW9AADHvQAASDoAgMs8AIBsPQAAnrwAQKq8AEAhvQAAAT0AABm8AJCdvQBAQr0AAP47AAD9OwAA/7sAAIm8AACOPABA9LwAAFa9AIAXPQAABj0AACa9AEC7PABAZb0AUMo9AADMPAAAvjsAACS7AABJvQBwij0AgDS8AAAIugCwkj0A4EU9AAAgOgCgk70AgA49AHCzvQAgLz0AAAC4AID7vABgD70AQJI9ACA+vQCAA7wA4Ik9AEDZvADAv7wAIDe9AIAfPQBgAb0AsAM+AKAjvQCAAzwA4FS9AOAgPQDAtr0AgHK8AKAUPQBAj7wAAOC7AOA4vQAgGr0A4FU9AACwOgAAS7wAAKY7AEASPQAAALkAAEk9AMCvPACAxrwAYEi9AAAtPAAgNz0AwPc8AADAuQBAvzw=","chunkHash":"d48b9db16ebe6730ffa244a1e2df146bbc16d0f6d194bab8260f0c3d8881fad6"},{"text":"File: `scripts/visualize_mesh_comparison.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Visualize 3D nuclei samples as mesh and point cloud\")\n    parser.add_argument(\"--sample_id\", type=int, required=True, help=\"Sample ID to visualize\")\n    parser.add_argument(\"--smooth\", type=int, default=10, help=\"Number of smoothing iterations\")\n    parser.add_argument(\"--decimate\", type=int, default=5000, help=\"Target number of faces after decimation\")\n    parser.add_argument(\"--points\", type=int, default=1024, help=\"Number of points to sample from mesh\")\n    parser.add_argument(\"--save\", action=\"store_true\", help=\"Save visualization as HTML\")\n    parser.add_argument(\"--mesh_only\", action=\"store_true\", help=\"Show only mesh visualization\")\n    parser.add_argument(\"--point_only\", action=\"store_true\", help=\"Show only point cloud visualization\")\n    \n    args = parser.parse_args()\n    \n    # Determine what to show\n    show_mesh = not args.point_only\n    show_pointcloud = not args.mesh_only\n    \n    visualize_comparison(\n        sample_id=args.sample_id,\n        smooth_iterations=args.smooth,\n        #...\n```","range":{"startLineNumber":149,"startColumn":0,"endLineNumber":167,"endColumn":0},"embedding":"AGAovQCAdjwAoFA9AGAxvQCAtr0AwHW9AEC3vADAt7wAQO08AIAoPACAeDwAgKq8AAAzvABAn70AoF+9ACClPQDQgL0AANw7AIA1PABAUD0A4FI9AKApPQCArT0AgJg8AJDIvQBAzTwAgFm8AOAePQCgXT0AALG7AECUvQDA7bwAAAa9AIAcvAAQMr4AQNk8AIBWvAAAVTwAAIa8AID3PAAQtj0AABe9AGAtPQAA9jsAAIk7AAA1PAAArjwAMLG9ABCZPQAAuTsAQIm8AEClPQDAp7wAgAq9AECEvAAAnDsAQFm9AAAnvAAAu7wAYAC9ACC5PQCAOjwAADy8AEA4PQBgib0AAMK7AACiOwCAEL0AANw7AMCgvAAA5DoAAFA8AADMuwBgLb0AAEo7AAA+OwBAA70AANy6AED9vACAeb0AoC29AIDMPAAghT0AAMI7AAAIvQCwib0AYFq9AIBMvAAwhb0AACC9AACgvADgBT0AgKO9AECKPACwqT0AEJI9AMB/vQDgRL0A4Do9AMBhPQCA6TwAABs9AOCdvQCAojwAQGo9AAAWOwBgxT0A4Bc9AEDZvADAnD0AoHI9AIDGvACAET0AAKM8AIAlPAAAsbwAYFg9AMACvQCAhDwAAAy9AKBvvQAAObwAIHg9AIATvQAAYD0AALM8AHCOPQAAs7wAADq8AEAePQCA/zwAQBG9AGBgPQBAm70AgAy9AIBXvQCAYbwAAOQ7AACyvADQ0D0AAB+8AGAzPQDAvjwAAA89AMDAPACgBj0AoLK9ALCaPQBAyrwAsJs9AACsOwAgbj0AYJo9AFCZvQBAS70AAPW8ACB8PQAAcjsAsJa9AIBGvAAAerwAwLu8AECYvABAjL0AoAO9AKBrPQCgBb0AQDO9AAB8vQCAa70A4Ai9AGAIvQDAST0AoF+9AMDmPQAAyLsAwOw8AKAxvQAAjbwAYC49AICPvACAGDwAAJS8AAC4uwAAvLwA4AI9AGAgPQDAmjwAQLm8AIB0PACAJDwAMJE9AFCKvQAAsDoAALA5AOAPvQCwlT0AAI28AACuvAAAbj0AwLy8AACUPAAA/LsAgCw8AMC5vABAwbwAgO48AEAcvQAAIDoA4Jw9AIBTvADgND0AABc9AEAcvQBAHr0AwD29AIDIvAAgVT0AAOw7AOAsPQAAB7wAAIQ7AMB2PQDgJz0AAHw9AMCNPAAgTj0AABy7AACiuwDgQz0AoDA9AAA+uwAgWr0AoII9AAA4uwAA8rwAoBo9AIBcvAAAYLsAwJM8AMCIvABgUD0AgHm8AMCMvADAHj0AgJa8AKA5vQCAab0AAEe8AAB6uwAAAAAAwHM9AAB8vADQ7L0AgHS8AOA6vQCAnr0AgC49AGBOvQDAE70AAAo8AICbPADA87wAAIW8AECrvADwkT0AAF47AEC3PABQkb0AwI68AGAFPQAAwjsAQPI8AACTPACQlr0AYD09AECIvACwhT0AIH49AKA5vQBAj70AgE28AEA8PQCAvDwAwAY9AIASvAAANrsAAJo8AID1PABgL70AANG8AIDxvAAAtbwAgG48AKABvQCAFD0AYCA9AAADPQAAOjwAwGe9AADNPABgTr0AAIa7AEBiPQAALzwAAP47AACqvABA9zwAgNQ8AOB0PQDAf70AADC9AABDvACACDwAAMe7AHCLvQBASz0AQPM8AOAuPQBgG70AAII8APCovQCArTwAgBo8AOC5vQAgUj0AwJy8AKAdvQAgHL0AAKq8AGBdPQCAlr0AALo7AAC8PACAKD0AAIK7AOA0PQAATD0AAEu8ANDQPQBA1b0AwGy9AADqvQAA6rwAACg9AIASPQCAeTwAQJs9AOBaPQBgN70AgDU8AIDEvACwhL0AQJQ8ADCGPQCAk7wAMJS9ABCIvQBA8jwAAM68ACCJvQDA1DwAQKU8AADEvACAnTwAoGA9AABeuwAAKDwAgCa8AAA/PAAAUT0AQJo8AECbvAAAzrsAQEC9AJCNvQDA6DwA8KI9AMDqvACAOrwAAOC7AIBIPAAAc7wA4Ey9AADWvAAAgDsAQIk8AIAMPQAQ3b0AgLA8ACCwPQBwkL0AAC88AAAAPQCALjwAAHu8AACSPQBQmD0AAAk9AIBxPABgC70AYEo9ACBvvQAgar0AAHi7AKBUPQCAQjwAAK+7AAAKPABgL70AYBo9ADCCvQDArjwAkIK9AABXvQBgk70AwLW8AACpOwCAu7wAgHW8AKAmPQAAwDsAADc8AIAJvAAAqDsAoN09AMAxPQDA2bwAEOc9AAD4uwAgGr0AALw6AAANPABgwj0AAOY7ANCpvQAAzTsAwJY8AEAcPQAApbsAwBu9AGB6vQAAhTwAAHA6AOBxvQBA/LwAAKu8AACkugAAQrsAQJ28AAAuPACgYL0AgCq9AAA1PQBA8TwAAAA7AKCOPQCAJ7wAcLQ9ACBmPQCgBj0AgKM8AMBUvQBghz0AQM68AMDxPABAWT0AwHU9AEAQPQDgfb0AwFE9AKDPvQAApDwAAO07AMChvQAA8rwAgBQ9AMC+vAAAzLsAwN48AAD2PAAA/rsAIDO9AKBBPQAAXLwAwNc9AKBwvQAAaLoAwNG8AABlPABQlr0AAC28AKArPQCAjLwAANQ6AIDGvADgF70AABg7AAAJvQCAm7wAQOg8AABUPQAALj0AYEs9AADeOwDAT70AQI+8AECEPAAAfrwA4Eg9AEAtvQCAkzw=","chunkHash":"a7719427304667915396344d648d7835c8d2a752cfe675fc06e22238edb7e42e"},{"text":"File: `scripts/visualize_mesh_comparison.py`\n```python\n#...\ndef main():\n    #...\n        decimate_target=args.decimate,\n        num_points=args.points,\n        save_html=args.save,\n        show_mesh=show_mesh,\n        show_pointcloud=show_pointcloud\n    )\n#...\n```","range":{"startLineNumber":167,"startColumn":0,"endLineNumber":172,"endColumn":5},"embedding":"AIAJvQCAWj0AgNk8AMA4vQCQxb0AYCW9AAAgvADAkjwAANk8AAD2uwAAwLsAAO27AABhvABApr0AAEW9AABQPQAAUrwAgHU8AACSOwDAXj0AAEM9AEBtPQBAjj0AQNU8ANC/vQBAJj0AAE68AMAPPQCQgj0AAH48AMA4vQDAI70AACy9AABvPACoAL4AAEY8AGBTvQAAZjwAAA67AADPPABgzT0AgOq8AKBDPQCADLwAYAy9AACKuwAAJrsAQDq9ABC0PQCACTwAgH68AGBSPQAAoLkAgKK8AAA0uwAA5zsAMJa9AACFvAAAXLsAAOm8AJDDPQAATbwAAC29AGBiPQAgjL0AgJM8AADnOwBADb0AAE68AMACvQCAKL0AgBg9AACkugAAnjsAANY8AID3vACAKLwAAK08AEDmPADggr0A4BS9ACBiPQAgFT0AgAE8AAAGvQCwxL0AgFa9AEAOvQCAh70AICO9ACAJvQCAMz0AkIa9ACAzPQBgoD0AoHk9AOBvvQDAsrwA4Ao9AMDePADgdD0AAOS7AKCuvQAAsbsAIEw9AADtuwCA8z0AwBM9AIAwPACwxT0A4Bs9AAALvAAA0DwAgAU8AACYvABAtrwA8IA9AADPvACAYjwA4C+9ACCDvQDAmbwAgPE8AAD2vADACT0AoC09ACAGPQAgBr0AAGk8AAABPAAAYTwAgCO8AADaPAAgY70AQP+8AOBTvQAAjrwAQJs8AMDfvACQuD0AgKU8AIBePQAALjsAoEM9AAA0vAAApDwAgIe9ADC8PQAgAr0AoAA9AAA1PQCgEz0AcMM9ACByvQDwp70A4EO9AGB5PQCAG7wA4GS9AAD0uwAAzDwAQHi9AAB4PACgNr0AgPe8AGAcPQBA/7wAADk8ACAlvQDAwr0AoEi9AGAWvQCAVD0AUJC9AAD4PQAALLwAABi6ABCCvQAAr7wAwHI9AABvvABACj0AAEu8AAD8uwAAzDoAoA89AHCDPQCAdzwAAKC5AADgugAAnTwAkJ49AMACvQCABLwAQKQ8AMCmvACgfD0AAC+8AMCFvABQlz0AAMS6AAA2PAAAdTwAAI27AEDgvADAM70AQNI8AMD8vAAAJrwAcI09AIDEvAAgQz0AQEQ9APCEvQDAtbwAUJC9AIAOvQCALz0AwLq8AGBzPQAAFbwAQM88AMAAPQAA37wAQFk9AIDsPADgSD0AAIC5AGAOPQCAej0A4Ck9AICovADAwLwAAIA9AAA6OwAA/7wAwAg9AICYvACAXLwAAKE8AMCzvAAQhj0AAK28AMApvQDgDD0AADK8AICmvACATr0AkIW9AABuPACA6DwA4C49AIBDPABQ170AAGg7ADCGvQDQir0AgFs8AKAUvQAAgLgAALm7AIBMvAAA1LsAAPu7AAD5uwAQoz0AgJc8AMDyPABgXr0AgL68AAAMPQBAsDwAwI89AECCPQDQgb0AQME8AEBVPQCwnj0A4FQ9AIDxvACAeLwAANC6AOBHPQAAHD0AAKM8AABiOwAA4DkAYAU9AECaPAAAxrwAAIW8AIBbvABga70AQJ68AOA7vQBgWj0AgKs8AADAOgCAZrwAwAi9AECVPADA2bwAICO9ACA+PQAARLsAAJC8AECPvAAAMTwAAG88AGAkPQDAbr0AIDC9AEDSPAAAbjwAwKO8ALCAvQAAGD0AQDQ9AEACPQBA8bwA4AE9ALCsvQCAW7wAAOQ6AFCkvQAAbT0AgNi8AADTuwAgYb0AAHi6AEAIPQCgH70AAJ87AKCcPQDAcz0AgDw8AIBjvABgVD0AQKs8AICBPQDAtr0AgAy9AGDnvQDAD70AcIQ9AIC1PAAAVTwAIGE9AEAtPQAAc70AAG88AIB+vABA2r0AAGo8AMCsPACAj7wAQCG9ADCqvQBADD0AAAA8AOBLvQBgKD0AgLE8AGAevQAArDoAYJQ9AMChvACAi7wAAFi6AACwOgCAzDwAAEI8ACCfvQAAgbwAwPK8ANCSvQAANj0AQHI9AIBDvQAApLoAgDq8AADruwCABLwAIE+9AABavQBgEj0AwPg8AADKPADA7r0AAEQ8ADgBPgCgVL0AAFC8AIBwPABAjTwAANm7AICmPQDQlD0AAKA7AIBXvADA3rwAwLs8AABxvQAAgr0AAMC6AGCCPQAAvzsAADC7AMCUPAAAQDsAgOs8ANCKvQDAnzwA4Fy9AEBevQDAbr0AgMC8ACAovQCA77wAwCe9AEAZPQAArzsAADE9AAAAPAAAkTsAoPU9AGA1PQAA2DsAUBc+AADFvADA/LwAgNW8AIBCPQBQvD0AAEA6AICovQCAPrwAAF89AMBsPQAAeTwA4Bq9AECJvACADjwAgHy8AECNvQDAVr0AALI7AMAcPQCADrwAACO8AEDWPAAAC70AAIq9AICPPACAODwAALu8ACCaPQBAXb0AQKU9ANDFPQAApDwAgGU8ALCLvQDgVT0AANe8AABAvACgtT0AsIE9AEDqvAAAFL0AAB49AMCHvQDAvzwAADc8ACCAvQAAt7wAIAc9AABTvQAAYLkAQNM8AMCUPABApDwAIEW9AID6PAAAeL0A8Lk9ABCOvQAAALsAgAC9AAB6PAAgpr0AAJk8AAAgPQBAgrwAgBm8AID2vABAbr0AoAM9AIDGvACACL0AAPg6ACAUPQCAczwAQB49AKBGPQCA27wAAK67AABgugDAqzwAANg8AACivAAAA7w=","chunkHash":"8cb2156e384edc51c84e2564bb43792e0ac49435b668860cb18c5a6d47bb4687"},{"text":"File: `scripts/visualize_mesh_comparison.py`\n```python\nimport os\nimport sys\nimport argparse\nimport numpy as np\nimport plotly.graph_objects as go\nfrom plotly.subplots import make_subplots\nimport trimesh\n\n# Add parent directory to path\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\nfrom utils.mesh_utils import create_mesh_from_mask, sample_points_from_mesh\nfrom utils.pointcloud import load_mask_volume, create_pointcloud_from_mask\n\ndef visualize_comparison(sample_id, smooth_iterations=10, decimate_target=5000, num_points=1024,\n                        voxel_size=(1.0, 1.0, 1.0), save_html=False, show_mesh=True, show_pointcloud=True):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":176,"endColumn":0},"embedding":"AICWvAAA1jwAANy6AMDlvABAc70AwLe8AABEvAAA5bwAAHI8AMC3PAAAgDwAAEa7AAA0OwDAu70AACq8ACBfPQCA7bwAACk8AECVvAAAPj0AANI8AEA7PQAgfj0AAPQ6AGC1vQDAsDwAAKM8AADEPADgjz0AAPQ7AECJvQBAjLwAQEW9AMDXPAA4B74AAOg8AEC/vAAA6bwAwL+8AAC+PACA1j0AAP+8AOBQPQCAQzwAAN+7AIBGvACAADwA8Ne9ANCOPQAAozwAAMW7AKCFPQBAsbwAIIe9AIADvQCAsLwAYEy9AIACvACABDwAwKS8ANCOPQCAYbwAAPK7AICYPACAXLwAQI08AMDXvACAAr0AANY7AABGvQAAkrwAgDI9AACmuwBARr0AAKY8AAAOPABADb0AgD08AACAOADwk70AQM28ACAAPQDAZT0AANc7AGBdvQAAgb0AoL+9AMDTvACwjb0AAKe8AIA8PAAAGjsAgJ+9AEABPQCAsz0AAJ88AFCkvQDgbr0AcIE9AAAaPQBAHj0AADE8AHCxvQAgMz0AAEs9AADAOQCwxj0AQLM8AMCkvACgmj0AoB09AECcvACgOz0AAOC6AABGuwAApbwA4FM9AIBfvAAAG7wAgGC8AOCCvQAgUb0A4FY9AECuvADAFz0AAKC6AAAoPQDA9LwAAB+8AMC4PABAsDwAAHg6AIDpPAAwir0AoAi9AACAOgAAjbsAgGS8AABrvAAAsT0AwLW8AGABPQDAzDwAQEQ9AID2PAAAQTwAgCq9ACBJPQBABb0AYFI9AIDPPAAAUDwAQLg9ACBevQDAdb0AkI29AICCPQAA8TsAkNG9AADROwAAyzsAQJm8AIDRPAAgJ70AAKg7AMCnPQDAHb0AAKO8ACA6vQBgoL0A4C69AKBIvQAwkj0AwLK9ALD0PQAAdjsAAIS6AIAbvQDAlrwAwFY9AEAQvQAAeDwAAOO7AICJPACAA70AANE8AKAzPQDgPz0AwMQ8AOAhPQAAEj0AIHc9AOB4vQCAHbwAwEc9ACACvQDQkj0AAI88AMBFvQDgRz0AQLK8AAAVPQDgBT0AYAM9AMB8vQAAKjwAALM7AEBSvQAA0rsA4HM9AACAugBwkT0A4Cc9ACAUvQDgFr0AoEi9ACBBvQBAFz0AAKY8AGCGPQAANjsAQMA8AEBePQCAxTwA4GE9AEARPQAAdD0AgA69AABWPABgFz0A4EM9AEDjPADAhL0AgFY9AAB9vACA0LwAwNA8AAAuvACAT7wAoEA9AKAjvQAAgD0AQJe8AKAgvQAgRz0AwIW8AICIvQAgfL0AgNa8AABSOwCA0DwAACQ9AACsOgDQnr0AgI+8ACAyvQBQgr0AIBg9AKBWvQAAyrwAwJI8AAClOwCgQr0AAHg7AMDbvADgNz0AwLM8AGBsPQAAVb0AANW7AOBfPQBAkLwA4Dc9AMC2PABgnr0AwJU8AAB0PACgFD0A4Ew9AAD/uwBA37wAgDY8AAAPPACA6jwAAP08AAA+PAAAiLoAoA49AAA0OwDAQL0AgCu9ACBPvQCAnr0AAGq7AMAfvQCA/zwAAGA8AIBbPAAAhzwAILm9AABQPQCgVb0AALc7AID8PACANzwAoAa9AMCRPABALD0AYCk9AGCBPQAQhr0AwFG9AAAbPADAq7wAAL48AOAjvQAglT0AIBs9AACfOwBAEr0AAJM8ALDEvQCAL7wAgDI8AIC2vQAAmD0AQN28AIAtvQAABTwAIDG9AGAkPQBgtb0AQMw8ACB3PQDgKD0AQAs9AIAFPQAggz0AAKY7ACCkPQAAub0AgGu9AGCRvQCAP70AoDY9AMA5PQCA7TwAgHg8AGA3PQAA37wAAB47AABuuwBgg70AQJc8AAAnPAAA4DkAQHO9AACMvQAARjsAANQ7AKBGvQBAuTwAQDw9AABWuwBApjwAoGc9AABwPAAgOj0AgCm8AAAYPQBgRz0AAL27AEA8vQAAG70A0MG9AIBJvQBA0jwAIGU9AEDnvAAA7zwAAMA7AAAAOAAA0rsAAPm8AMDmvAAAEDoAANy6AADvPADQrb0AAMw7AFClPQAgRb0AgBM8ABCPPQAAxzwAAFi7AOBvPQDwnj0AAHA7AEDhPABA6rwAgCo8AOCOvQBAy7wAwPq8AHDHPQCgAT0AAMe7AACHOwAAW70AYD49AGDmvQAAarsAgMG9AABXvABgCr0AgLG8AIDLvAAgKb0AQBi9AABqPADA07wAQIo8AACEvAAAaLsAYMM9AIBhPABAxbwAQOg9AMCtvAAALb0AAOi8AMAQPQBgwz0AQLq8AJDSvQAA+bwAgHA9AMBCPQCAfLwAQLC8AEAtvQBA4DwAAOG7AACIvQBwiL0AAN07AIAHvADgBb0AAFW8AMAEPQDA8bwA4BG9AEA6PQAA6zwAwAi9AMD0PAAgRr0A4LI9ACAiPQBAnDwAAAQ7AKBPvQDgiD0AAHa7AIDbPAAAUD0AgG48AMAEPQAwiL0AoE49ACC8vQCAPj0AAD48AEBrvQCAybwAwDU9AEAHvQDAtbwAgLk8AACyOwAA6LwAYBK9AOBtPQAAp7wAyBE+ANCtvQCgBz0AIFa9AACfPADAy70AwKE8ACBVPQAAkrwAgFi8AAB3vQDATL0AQKg8AACWvABA6bwAAKM7AIA/PADAwbwAwN08AKAYPQAAHbwAQFG9AEDevACA/jwAgHc9AOBIvQCACjw=","chunkHash":"31cf2998467692af8c2f67464c179e8e36bf951a3862f248cd6cd013bc813a3b"}]},"file:///teamspace/studios/this_studio/summary.md":{"hash":"36a9e7f1c95b82ffb99743e0c5c4ce95d83c9a430aac59f84ef3cbfab6145068","entries":[]},"file:///teamspace/studios/this_studio/tiff_dataloader.py":{"hash":"056468350069e30c06e2debcfdf4f245fcd1d0c3bc35bf7f71607e46036fd212","entries":[{"text":"File: `tiff_dataloader.py`\n```python\n#...\nclass TiffVolumeDataset(Dataset):\n    \"\"\"Dataset for loading 3D volumes from sequences of TIFF files.\"\"\"\n    \n    def __init__(self, root_dir, input_dir=\"raw\", target_dir=\"mask\", transform=None, target_size=(104, 104, 104)):\n        \"\"\"\n        Initialize the dataset.\n        \n        Args:\n            root_dir (str): Directory containing sample folders\n            input_dir (str): Name of subdirectory containing raw TIFF slices\n            target_dir (str): Name of subdirectory containing mask TIFF slices\n            transform (callable, optional): Optional transform to apply to samples\n            target_size (tuple): Target size for all volumes (H, W, D)\n        \"\"\"\n        self.root_dir = root_dir\n        self.input_dir = input_dir\n        self.target_dir = target_dir\n        self.transform = transform\n        self.target_size = target_size\n        \n        # Check if root_dir is directly a sample directory or contains sample directories\n        if os.path.isdir(os.path.join(root_dir, input_dir)) and os.path.isdir(os.path.join(root_dir, target_dir)):\n            # Root directory is a sample directory\n            #...\n```","range":{"startLineNumber":12,"startColumn":0,"endLineNumber":31,"endColumn":0},"embedding":"AACYOgDApbwAwOg8APCHvQDASb0AoDS9AIBTPABAzDwAEJm9AACkOwAA6bwAgAw8AAATPQBwwL0AAMg8AHCZPQAAljsA4Aw9AGB0vQDAwTwAoC09AIDrvABA5zwAAF69AABauwDAjLwAgH88AAB6uwDAhz0A4Hq9AKCMvQDA/bwAIN29AACDOwDArLwAQAE9AACTPADgwT0AAFS7AGADvQCgXj0AQG+9AMDLPAAA1LoAgCE9AACxvQAAMbwAAKS7AAC1PACAOzwAgKm8AIArPQDAy7wAQHi9AAD0vAAA4zwAgD+9AMCBvAAAEDsAIE69AIAIPQCAarwAADK7AEBBvQBANj0AACI8AIA3PAAANDwAwFq9AEChvADASb0AAIm7AGAivQDA/rwAALs7AIDhvADAPL0AgEY9ALCFvQDAsL0AgDo9AIB8PAAgP70A4D89AKBJvQAQlr0AAIW9AADVuwDAkbwAQGa9AAD0ugCAojwAwHC9AIBxPQCAb7wA4Hm9AACbOwCAX70AYC09AAAyvAAAU7wAkIY9AAAzPQCATLwAYB89AICNvACAs7wAgOW8AIB7PAAAYDoAQCm9AACAuwAQ3T0AoJC9AIBhPAAAvLwAIAu9AOA9PQAggr0AoJ69AAC3vACACD0AALq8AIATPQAAuDsA4B69APCvPQCQtL0AwAu9AABXPADA9jwAAAy8AIAGPQCg2b0AwJM8ALCmvQAAXLwAAAo7AAD5vADAHD0AgEu9AAASOwCQ1z0AQPY8AACjuwAAhTwAgM68AJD2PQAAfjwAQBQ9ALChvQDgEj0AoD09AOBIvQCAKjwA4Fu9ACBivQDQrT0AYE89AIAGvQAgJL0AgGQ8AIBlPACAV7wAwLK8AIBvPQAAQLkAAGM8AAAXvQBwsL0AQDI9ACAlPQAAOz0AYFC9AMDNPABAHr0AYDy9ACDgPQAAGjwAcIO9AIAqPAAAOLsAgMq8AECgvAAAk7wAAMA8AACGOwAgBj0AgEo9ACATPQAAWrwAgAG8AIDBvAAA9DwAwA+9AOAKvQDA6TwAYEk9AOAjPQCAIDwAwKs8AIAYPQAAIL0AQEG9AAAiuwCAFL0A4Ky9AAA6OwBgcr0AQNi8AMD+PABgIL0AQIM8AECevACA17wAAIM8AIBWvQAAq7sAAJC6AACoPACAJD0AwE09AAAuOwCAbjwAAD28AAB8uwAgrL0AkK29AIAWvADAEb0AAMC5AFCWvQBQir0AgIO8AABKvQAAZ70AYC+9ACB2vQCA1TwA0Iw9AEDjPABA4TwAALm8AACJOwDgAz0AgL48AIA0vQDAU70AAJC7AMCwPACwvT0AADO8AECqPABA/bwAAIG7AEBEPQAAY70AAFc8ANgMvgCAez0AgHC8AAA+uwCQiL0AYEo9AMDqPACgJT0AQOM8AACTOwCA4TwAgHI9AMAsPQCAnTwAgOI8AMDGvAAAVL0AIIw9AABOOwBAIr0A4FA9AMDePAAAjLwAgM88AGA/vQDAmT0AgI88AACQuwCgS70AgJ48AICnvAAAgLoAgKM9AOBzvQDAnrwAAK87AECivAAASLoAgFG8AADWvAAgW70AIDy9AEDEvACgM70AAHq8AOAyPQCgLL0AANI8AACnPABAbb0AgAQ9AAAbPQAAMzwAYAo9AIA1PACAETwAgNc8AICZvAAARDwAAFo7AMBxPQAA5jsAsIO9AIBJvQBA7zwAQI49AEC0vAAAYLwAIHa9AADQPACA/bwAAMm9AAD3OwAAlbwAAPM7AEDivAAAoDwAUKC9AMBdPQAAg7wA4BW9ACAoPQDA370AAFO8AKA+vQAAITwAAMK8AAC7PQAAVzwAEJA9AADlPAAQj70AYBa9AIACPADA0LwAAKa7AOALvQAA0TsAAFC7ALDovQDAA70AsJG9AOAKvQDgTT0AIIk9AABEvAAgjr0AgOW8AIDJvABgST0AAFo7AICuPABgkz0AAL28AABYvADAvbwAIFu9AFCKvQDQ2T0AABs8AJCDvQCAtTwAQOw8AMDkvAAAIDoAQAA9AICxPAAAn7sAgFq8AIC0PADAnjwA4Eo9AKAoPQCA/LwAYBq9ANDhPQDgMD0AIAW9AIA4PACAazwA4HM9AEAUPQCAvTwAAIQ7AAA6uwAAYjsAgAA8AKDLPQDg9D0AQMI9AKBLPQBgbr0A4I29AKCxvQCAlTwAAPC8AIC/PABA+jwAAEa9AAC3uwBA2LwA8Ks9AGBNvQAAWT0AAM+8AMDqvACADbwAYE09AIAoPQAANrwAoCu9AAAAuADAPD0AYCs9AADcPABgGz0AwB+9AABbvQBAzTwA8IC9AGAPPQDgbz0AAEi7AIABvAAAmTwAYES9AMAAPQAAkDkAAKU8AAAgOwDglb0AIB69AABIugBAkTwAwIa8AADPOwDgtT0AUK69AAAkvAAAr70AQME8ADCBvQAAtDoAAD08AIDjPACARDwAoBu9AABlvQCAdTwAwLG8AKBavQDQx70AAK47AAAMOwBA9jwAgIY8AECuvAAAjL0AgNO8AABUOwCA4rwAACy9AAAcPQCAabwAsI29AIDQPACAvzwAgPk8AAA5vQBAlb0AAO49ACBSvQAAQrsAQKg8AADcugAApLsAAH+8AAAjPQAgrL0AYEk9AKAVPQBAzjwAsPg9AAA1vAAAaT0AQDo9AAC4vADger0AgF08AMDPvACA4TwAALq7AACOPACAszw=","chunkHash":"18c618b32f1eaeb9c2521b12c4ff01b442d87e0bbaa46e041210cf2282462972"},{"text":"File: `tiff_dataloader.py`\n```python\n#...\nclass TiffVolumeDataset(Dataset):\n    \"\"\"Dataset for loading 3D volumes from sequences of TIFF files.\"\"\"\n    \n    def __init__(self, root_dir, input_dir=\"raw\", target_dir=\"mask\", transform=None, target_size=(104, 104, 104)):\n        #...\n            self.sample_dirs = [root_dir]\n        else:\n            # Root directory contains multiple sample directories\n            self.sample_dirs = []\n            for item in os.listdir(root_dir):\n                item_path = os.path.join(root_dir, item)\n                if os.path.isdir(item_path):\n                    input_path = os.path.join(item_path, input_dir)\n                    target_path = os.path.join(item_path, target_dir)\n                    if os.path.isdir(input_path) and os.path.isdir(target_path):\n                        self.sample_dirs.append(item_path)\n        \n        print(f\"Found {len(self.sample_dirs)} sample directories\")\n    #...\n```","range":{"startLineNumber":31,"startColumn":0,"endLineNumber":43,"endColumn":66},"embedding":"AABNvACAt7wAwAQ9AFCSvQDgJ70AAEe9AICGPADgEj0AEJK9AIBCvACArrwAADC6AABRPQAA0L0AwKk8AGCjPQCA2zwAgOA8ACCHvQAAKz0AgEs9AIB8vADgKT0AYFe9AADYOwBgCb0AwIU8AACcOgCwlj0AAFi9AMCGvQCAFr0AkMq9AIByPACAXrwAQBY9AECHPABgwT0AANS6AMAzvQBglD0AgAW9AIC8PAAAFbwAoEg9AFCgvQAAILwAAFy7AIAfPQDApzwAgLG8AKB5PQBAgLwAIFu9AOAHvQBgFz0AwIS9AAAQvACABjwAQDu9AIAJPQDA2LwAgC88AMA1vQDAGj0AQM08AIB6PACAIjwAYFO9AMCgvABAQ70AALW7AEBLvQAA8bwAQJ48AIAHvQAAZL0AIB09ABCBvQDwt70AIGE9AMD4PABAab0AgDE9AKA+vQAwi70AMIK9AIBcvAAAaLwAwFC9AAA+uwDACz0A8IO9AFCPPQAAjLsAgEC9AADsOwBga70AABY9AIBevABAh7wAMII9AGA2PQCAbbwA4IU9AMCovABAhbwAQL68AMCkPAAA57sAgM68AIAgvABAxz0AIC29AKABPQBAwLwAAJO8AMA1PQAwgb0A4Fq9AAANvQDgLz0AAAG9AEDSPAAAujsAQK68AHC2PQAA1r0AwN68AAB+PADAIz0AAMC7AGApPQCwzL0AgFc8AMDBvQBAobwAgCo8AIDBvACAfT0AQDm9AACDOwCQxj0AoB09AMCoPAAAQLoAgLu8AODnPQBAtzwAICM9AICavQBAvDwAwK88AMAivQAAiLoAwH29AOAWvQCQoD0AYDs9AIATvQDgOL0AAMA6AIDdPAAANrsAwKW8AOBMPQDAhDwAAKs8ACAFvQAwnr0AgP88AADWPACAFz0AYDy9AICQPAAAIb0AgCG9AMDVPQAA3LoAIF29AAALvAAA4LkAwIq8AICjvAAAirsAAMi6AACAOQAgAD0A4FU9AOCGPQAAirsAAIc7AABnvABgKT0AoBW9AMAavQAA/DwAgEc9AMDnPAAAiTsAQKk8AGBrPQDAFb0AgB+9AABSuwDgJL0AAJS9AAChuwDghr0AgOe8AID6PACAkrwAALE8AADQvACABL0AAEu8AGA0vQCAmTwAAMi6AIDvPACAJz0AYGo9AADAugCAvDwAACS8AACtOwCQqL0AoL+9AAC1uwAgKr0AACA5AHCPvQDwrb0AAOG8AMA6vQCgdb0AoHm9AKBIvQCANjwAQHE9AGAGPQBABz0AAPC5AADcOgCAhjwAAIQ8AOAlvQAAJ70AAA+8AAD6PAAAsj0AAMo7AADEPADgGr0AgFk8ACBUPQAAbb0AQNA8AKgLvgDAbD0AAJS8AAC3OwDAW70A4Fk9AAC+PAAABz0AIDo9AADOuwAgCD0AQHw9AIC+PAAAcjwAgCk9AEDhvADQg70AQGM9AICKPAAAOL0AgA49AIBiPAAA5LsA4Eg9AKBRvQDwkT0AAL08AABlvADgJ70AgPQ8AICrvAAAmLsAULQ9AIB1vQDAn7wAANQ6AECnvACAeDwAgGC8AOAfvQDAR70AAD+9AGA1vQCAhb0AAP87AMAuPQBAPL0AgLY8AECzPAAAVb0AwMs8AADQPAAAzzsAgN48AICqPAAAOzwAgME8AADgvAAADrsAAAo7ACCOPQAA1bwAQEy9AIBOvQCA6DwAUIg9AADYvAAA+bsAQHu9AOAxPQCAyrwAQLG9AABmPACAcbwAAB08AADgvAAAHjsAcL69AOBcPQAA+rsAADq9AGAEPQAQw70AgBu8ACBWvQAAkLkAgDy8ALCuPQAAlDsAUK49AMD2PADAqb0AwNG8AIAEPACAD7wAAGo7AEC1vAAAxDoAwAK9AHDGvQDAM70AQF29AEAavQAAWD0AYJo9AADmuwDAZL0AgNe8AMDtvACAcD0AgJw8AADFOwBQtz0AAF68AABNvAAAU7wAAGe9AABkvQBwxT0AQK88AOBWvQCAjTwAQK08AIBsvAAABrwAYAE9AECTPAAAhzsAgHm8AIAaPAAAJTwA4E89AOBcPQDgI70AAOi8AHDTPQCA7DwAgM68AIBqPAAAMDwA4A09AEAtPQCA3jwAgF08AECMvABAjDwAADC6AEDHPQBw4T0AIMg9AICHPQCAcr0AwHi9AGCzvQCAgzwA4A69AEDYPAAAAj0A4Gq9AAA2OwCAObwAMLU9AOBlvQDgYD0AYC+9AABmvAAAcDoAwEQ9ACA/PQCAXbwAwEO9AIBFvADgMT0AQP08AABDPACghz0AYHu9AIB3vQDARj0AQHK9AOAsPQCgJT0AACO8AIC9vAAAuLoAAAq9AMBVPQCAQLwAgIg8AAByOwDgbr0AQDO9AADhOwBA9jwA4Dq9AAC8ugDglT0AYKm9AAB9vAAgnL0AAN48ABCXvQCAgzwAwKw8AIA9PAAAPrsAoBW9AHCZvQDA5zwAAH68AAArvQBArL0AQKM8AAAkuwBAjjwAAN47AICAvADQgr0AAJm7AACFOwCAB70AwCm9AIAgPQAAo7sAALi9AAABPQBAtzwAYAE9AADjvABAhr0AUMQ9AKAavQAAN7wAgGw8AIAcPACAB7wAAEO8AABIPQBwsL0AIGg9AKBDPQDAszwAAP09AACovABgJD0AIEQ9AIBpvADgbb0AgIM8AMC9vABgGT0AgAm8AMDpPACAszw=","chunkHash":"48a70c0562d31e39f4b8da42598625c403b20af7adce69dad6d18f3ec119eb3f"},{"text":"File: `tiff_dataloader.py`\n```python\n#...\nclass TiffVolumeDataset(Dataset):\n    \"\"\"Dataset for loading 3D volumes from sequences of TIFF files.\"\"\"\n    #...\n    def __len__(self):\n        return len(self.sample_dirs)\n    #...\n```","range":{"startLineNumber":45,"startColumn":4,"endLineNumber":46,"endColumn":36},"embedding":"AEDcvAAA3rwAAGU8AECivQDgDL0AoCi9AIBNPAAAIDsAYG+9AADjvAAAy7wAgB88AGAdPQDAlr0AwOE8ADCRPQAAEDwAgC88AKBsvQBwij0AoAQ9AACUuwAgKz0AwAC9AACaPAAAvrwAgKg8AEDzPABgYz0A4F+9ACCYvQAAM70AsJG9AKAlPQAAA70AAOA8AACQugDgpz0AgHs8AGBhvQAgLD0AICq9AAD7PACACLwAwGY9ACB7vQAAxLoAAOM7AMBDPQCArDwAwPW8AOAvPQCAxLwA0JC9AAD9vACgTj0A0IC9AAB2PAAARD0AEL69AAD9OwAAkLoAgHw8AOBfvQCALDwAAE89AADyPADAqzwA4AK9ACAavQBAoL0AAPS6AID0vAAAubwAYCk9AMD/vABwib0AcI49AMBbvQAQr70AYAs9AMBgPQBQgr0AsIE9AMDxvABwxr0AoDu9AADpuwCAMjwAoBG9AAB1vACA1DwAYGC9AHCSPQAAILoA4By9AEDiPACQkb0A4CE9AAB1vABARL0AgNg9AIDCPAAATjwAQGE9AAC1OwAAZ7wAACW9AIBhPAAA/DsAgE69AACfuwBg1T0AQJ+8AKALPQCAv7wAAFK8AOAwPQBQgr0AIBe9AMDqvADAeT0AgMq8AAB0PAAAuLsAgNG8ACAUPQAg2b0AgJ28AKAMPQDgTD0AwPG8AIB2PQAww70AwPY8ALDGvQAgPr0AALG7AIAavABgYD0AQAe9AACrPADwhj0AoBE9AEDYPAAA8TsAgMu8APDDPQDAXz0AQNc8AMCVvQAgRj0AABQ9AIADvQAAyLsAwEu9AIANvQAglT0A4GU9ACAsvQCwj70AAK87AACsPABA2TwAgHC8AOAcPQAA+jsAAGq7AIDcvAAAmL0AAGY9AMDEPACABD0AwF29AEDXPABABb0AACy7AHD8PQBAw7wAYJe9AEDJvAAADDwAwNy8AIByvAAABrwAgAS9AABaPADAzjwAUIY9AIB6PQAArDsAAOk8AAAYvADwjj0AAF29AKASvQAAsDkAwCA9AABOvACAcDwAAAC5AJCHPQDgML0AQLK8AADUOgBgUb0AgBu9AIBOvADwkb0AAPC8AEDBPADA7LwAAP87AICdvAAgPr0AAIw7AMCyvAAgLz0AAAA8AEDrPACgLz0AgHE9AABrvACAgzwAwJ68AAC1vACgRr0A4Ka9AADgOQBAsrwAQMo8AECtvQBgmb0AwDy9AMAOvQBAdL0AID29AOA0vQAAJrwAwOE8AIBEPQDQgz0AYDu9AECQPAAAWrwAgI88AIBCvAAATbwAgHk8AMDePAAgSD0AAPY7AACVPACgIL0AAES8AADKPAAAar0AAPg8AJAEvgBgLz0AgA28AACNvAAAbb0AQHs9AGACPQCATT0AcIs9AIBYvABAtTwAQH89AAB0PAAAFDwAwBI9AID+vADAJ70A4Dc9AABSPACgLr0AQFQ9AECkvAAAFLwA8II9AACqvQBQsz0AgKc8AIA1vQAgWr0AoCo9AACEvACAlrwA0MQ9AAAwvQBAyrwAAO27AEDwvADA/zwAgCe8AGApvQAARb0AYEC9AAB+vQCgQr0AAFQ8AACYPADQj70AAD89AMACvQBALL0AQNg8AMA4PQAA9DoAoAc9AIAWvADAIz0AgCo8AAAqvABAjLwAAMA4ABC5PQCAUb0A4Di9AIAgvQAAKDwA4Gc9AKAPvQAAWTwAQJm9AEAkPQDA3rwA4KO9AMCpvAAAQ7wAABQ7AADguwAAYLoAcMK9ACAMPQCA9DwAwDK9AABOPQBAo70AgIe8AOBWvQAA/DsAAKM7AOChPQCAmzwA4M89AAD/PABQsb0AAJy8AAD/uwAAHrsAAGq7AOAvvQAArDoAoBO9ABAGvgBgH70AYGi9AMD4vABgFj0AYJ89AMCVvADAUb0AAMK8AAAEvQBA+DwAgD48AIAoPADgXz0AALu7AADzuwBAkrwAAJa8AIBgvQBwwT0AwCs9AOBfvQAA4TsAANk7AACmuwAArDoAAPw6AABvPAAA4DsAIA69AAB6OwAAmDsA4Ak9AKAAPQAgAb0AQLO8ALDEPQDA5DwAoEG9AIBvPAAAgDkAwPg8AICGPAAArDwAgN08AAArvADgIT0AgCo8AHDBPQAw7z0AIKM9ALCJPQAgWb0AQB+9ADCvvQAAlLsA4C+9AECkvACAvTwAwGK9AMCGPAAAjDsA4Ks9AIBFvQCQjz0AAN28AAAAugBAzjwAgCQ9AABgPQCAVLwAoCe9AADauwDArjwAwLk8AADgOwDgaD0AwK28AICpvADQiD0AIEC9AOA+PQCA1zwAAIC8AABBvAAAfDsAADu9AIB6PQCAMr0AwKs8AIADvAAAprwAgCC8AADPuwAAvTsAcIq9AIACPADALD0AAC+9AMD3vAAQsb0AAN08AKCtvQDAxTwAAPA8AAAhvAAAODwAQHG9AEA2vQCAHT0AgDm8AECfvACwjb0AQFU9AADAOQAAoTwAgNA8AAB4ugCAFL0AAFK8AECAPAAAOL0AgCW9AACxPAAABLwAYNW9AMDtPAAACjwAIJs9AAA2OwDQg70AIJg9AICsvABgMr0AgHc8AICNPAAAGbwA4Bm9ACCVPQAAz70AoDM9AHCGPQAAaLwAYNQ9AMCqvACA7TwAAEU9ACAzvQAAZb0AAM87AADJvAAAOTwAYBW9AICVPADgSj0=","chunkHash":"2c831d2e6e1102526d978b1ec098a057b3d86dbeceed85c5f1b91898e540d26b"},{"text":"File: `tiff_dataloader.py`\n```python\n#...\nclass TiffVolumeDataset(Dataset):\n    \"\"\"Dataset for loading 3D volumes from sequences of TIFF files.\"\"\"\n    #...\n    def load_tiff_sequence(self, directory):\n        \"\"\"Load a sequence of TIFF files into a 3D volume.\"\"\"\n        tiff_files = sorted(glob.glob(os.path.join(directory, \"*.tif*\")))\n        if not tiff_files:\n            raise ValueError(f\"No TIFF files found in {directory}\")\n        \n        # Load all slices\n        slices = []\n        for tiff_file in tiff_files:\n            slice_data = tifffile.imread(tiff_file)\n            slices.append(slice_data)\n        \n        # Stack slices into volume\n        volume = np.stack(slices, axis=0)\n        \n        # Handle dimensions\n        if volume.ndim == 3:\n            # Add channel dimension if missing\n            volume = volume[np.newaxis, ...]\n        elif volume.ndim == 4:\n            # Rearrange dimensions (Z,C,Y,X) to (C,Z,Y,X)\n            volume = np.transpose(volume, (1, 0, 2, 3))\n        \n        return volume\n    #...\n```","range":{"startLineNumber":48,"startColumn":4,"endLineNumber":71,"endColumn":21},"embedding":"AADrvADAp7wAYAc9ABC1vQCAHL0AQEq9AAAUuwBA0jwAAIG9AMDmvACAW7wAAO+7AECaPAAAnL0AQJ08ALCgPQCAJTwAgEg8ANCHvQDwnz0AQKs8AICPvAAgCD0AQB69AMCSvAAAp7wA4Ck9AEC7PAAgVz0AIBm9AMBLvQDgKL0AwJu9AMCTPACgJL0AANE8AIDBvADgqz0AgDk8AIBCvQCgPj0AgFe8AABrPAAAHjsAoHM9AOBVvQAAJLwAAL07AMDYPACAcDwAANG8APCPPQAArLwAwCy9ACAzvQCgID0AsIi9AECJvAAAPzwAAFi9AMCRPABAjrwAAOM7AAAmvQCACTwAoA49AAAAOgDgID0AQAK9AMDQvABQjr0AAHQ7AADevAAA0bsAQAY9AMAXvQBAOr0AAF89ACB6vQCwz70AgCE9AACguwBgSr0A0Ic9AIACvQCAvb0AAA29AABaOwAAsLoA4DK9AAC4uwAAOD0A0LS9AOCpPQAAGbwAAEG9AABKPABgY70AsIA9AAAqvADAC70AQK89AEDZPACAWzwAQJs9AIAdvABgEL0AABa7AED/PAAAkTsAYG29AACWOwBQsj0AYAu9AIAdPAAArbsAALu7AIC7PADwi70A4C+9AAAJvQAgMT0AAFA6AICzPACAPjwAgPq8AEBDPQDA7b0AgBe9AMAQPQCgNj0AgCy8AGBXPQDAv70AALg7APC5vQDgRr0A4Ae9AAA4vACgcz0AQKS8AMCQPABgxj0AIAM9AECzPAAAlTwAgDe8APDJPQAgRD0AQNc8AABkvQAAED0A4C09AIBSvQAArLsAkI69AIDbvAAgmD0AoGo9AOAjvQAAlr0AgKQ8AABvPABAqjwAgIm8AIAVPQCALzwAAIo7AGARvQDwtL0AYF49AMCEPABAizwAwLe8AKAbPQCAOr0A4Au9ACCaPQCA1bwAQJK9AIAZvQAALjsAQDi9AMCsvACA17wAgAU8AAA+OwCAyDwAgE89AKCSPQAAqrsAAE08AIBkvABArz0AEKO9AEDtvAAA8DkAYJY9AED1PAAAlzsAACg8ACBWPQDALr0AYB69AECmPABAIb0AACW9AIC8vADAeL0AQOi8AACjPACAuLwAwJ48AAB8vADgUL0AgHW8AKAPvQAA9DwAALi7AMCuPABAnjwAsIo9AIAHvAAASjwAAHu8AADAvABgYr0AELe9AGALPQCAo7wAgHA8AOB3vQBQor0AAIS8AIAcvQDgUb0AAAO9AOBQvQAAgDoAYHM9APCcPQCQhz0AwMy8AACUPAAAdDsAAEM8AGABvQBgDL0AANo7AMDQPADAWz0AANc7AACyPABAOL0AAFW8AAC3PAAAg70AgK88AGABvgDAaD0AADu8AIApvAAwjL0AIGI9AAA3PADA8jwAwEo9AIDQvABAszwA4HY9AAC7uwAAvzwAAPM8AIBDvACgPL0AgHs9AAAmOwDgfr0AYD89AAAYPADAj7wAABs9AABvvQCghT0AQNw8AMCWvABgeL0AwKg8AACMuwDA/rwAIMQ9AAACvQCA+LwAgMI8AACNuwAAPT0AwJq8AADzvADgOL0AAOi8AABlvQCAdb0AwFY9AOAjPQBgS70AwCk9AIBPvAAA5bwA4AI9AMBSPQCAITwAwCs9AMC1PADAvDwAQJM8AMDavACAJrwAACO8AGC+PQDgAL0AgEa9AIAhvQAAQDwAYJc9ACBWvQAABLwAgKi9AMAmPQCAPrwAQL+9AAALvAAAA7wAgCW8AOA5vQAAVbwAgOm9AEDyPAAADT0AIAi9AGAaPQCQt70AABu8AHCLvQAA9jsAAL47ANDMPQAA+DwAcMo9AEDKPABAr70AIBK9AABPvAAArLwAAAI8AAB7vAAATrsA4Em9AODVvQBAW70AAEW9AKAtvQAAYzwAIGg9AACjuwAAOL0AwCa9AICEvACgeT0AAFy7AACXPABAgD0AANK7AMClvAAAlrsAAKm8AACSvQAQzD0AAEo9AMAqvQCAYjwAgAw8AAAUOwCAjDwAAIQ6AIAIPQCAJbwAADq8AADAuQAA+rsAgD09AKAZPQAgSb0AAC28AGDbPQCA3jwAoDC9AACxOwAANrwAwFY9AABJPACAmzwAQJI8AADuOwAACrwAgFg8AJC3PQAw/T0AQKk9AKBcPQBghL0AwCa9AOCxvQAAIDkAoFq9AADluwBAvjwA0Im9AMCCPAAAcDoAYNU9AABtvQBAgT0AgDu9AIA2vAAAADkAwBM9AEAbPQAA8bwAAJq8AAB4uwAABjwAgN48AAD7OwBgWT0AQPS8AMCrvAAAhz0A4JS9AOBMPQCAID0AQM28AMCevAAAArwAAFq9AECTPQCAn7wAALQ8AADSOwBAHb0AgJS8AADSuwCACT0AADK9AADguQAgHz0AwFK9AACvvABwpr0AADE9AFDNvQBA5zwAADI9AAB7vAAAiLoAIEO9ACBsvQCAxzwAAKC8AIAQvQBAqr0AAP88AIBIPACAmTwAAI07AMC6vACgRr0AQIC8AAACPABAu7wAwBy9AKA0PQDAiLwAoMW9AIA6PAAAOT0AgPo8AMDUvAAgl70AYKo9AICIvAAAMbwAQIc8AACAOwAAF7wAAF+8AMAZPQCAv70AAMc8AAAIPQAAlDoAQAA+AABmvABgGD0AABE9AIAKvQCgKL0AAEE8AADqvAAA4DwAAMg7AIAzPQAAzDw=","chunkHash":"935a08716104d25904f65634afafce8e406a02fdc4aa8dc897ead4b559b81f2d"},{"text":"File: `tiff_dataloader.py`\n```python\n#...\nclass TiffVolumeDataset(Dataset):\n    \"\"\"Dataset for loading 3D volumes from sequences of TIFF files.\"\"\"\n    #...\n    def resize_volume(self, volume, target_size):\n        \"\"\"Resize a volume to the target size.\"\"\"\n        # Get current size (excluding channel dimension)\n        c, d, h, w = volume.shape\n        \n        # Calculate zoom factors for each dimension\n        # We don't resize the channel dimension\n        factors = [1, target_size[2] / d, target_size[0] / h, target_size[1] / w]\n        \n        # Resize using scipy zoom\n        resized = np.zeros((c,) + target_size[::-1], dtype=volume.dtype)\n        \n        for i in range(c):\n            # Resize each channel separately\n            resized[i] = zoom(volume[i], factors[1:], order=1)\n            \n        return resized\n    #...\n```","range":{"startLineNumber":73,"startColumn":4,"endLineNumber":89,"endColumn":22},"embedding":"AADQugCAQrwAgCE9ACCsvQAgcb0AYCK9AADTuwCAHz0A0K29AMA5vQAAwbsAAFI8AACVOwBACL0AAMQ7ALCoPQAAZDwAgKo8AHCPvQBAiD0AQJU8AABYvACAAT0AgB+9AABovADAibwAoCs9AAA0PACgZz0AwCm9AKAivQAgSL0AELi9AAANPABgDr0AgBc8AMDfvAAAsj0AAB47AGA1vQDAYD0AgBu8AIBxPAAAcLwAAHc9AGAovQCARbwAACi6AID1PACgST0AoAS9AMA+PQCAP70AQIG9AMCnvADArjwAAGO9AECVvAAAgjsAoEO9AADxPABAmbwAgJI8AEBqvQAAcjsA4Fw9AACvOwDAIT0AoBC9AGBMvQAgeL0AAPG7AMCtvACAhbwAIAw9AGCBvQBATr0AgGM9AGAnvQBQpb0AoDE9AACDuwAgL70AIEg9AABdvQDghr0AwDy9AADrOwAALbwAgHu9AKAHvQAgQT0A8JK9AOBVPQAAursAQDa9AIAyPACAW70A4GU9AIBdvABA7LwAwJc9AIBsPAAAsLkAQJk9AIDEvADAG70AgMq8ACBIPQAAdzwAYDe9AIB9PABwwz0AwLW8AADoOwDgMb0AIBu9AMA+PQCAl70AIA29AAABvQAAaT0AgNi8AABuuwAAsjwAgOm8AMB9PQCQ3r0AwJi8AEDqPABAWj0AAGq8AKByPQBw5b0AgEQ8AMDjvQBAM70AgAy8AAAIugBgeD0AYBy9AACHPAAgvz0AAKE8AIAgPAAAPrwAgJe8AIDdPQCArTwAYAc9AABtvQAgPz0A4A49AEAyvQAADbwA8IK9AAC/vACglD0AkJI9AIDTvAAggr0AgPI8AIAdvAAAQDwAAFC8AMAkPQAAOzwAgGc8AIAovQDwp70A4FU9AECGPAAAwTsAgBi9AADvPADgOr0AgIu8ADC0PQAAGLwAYGq9AAD9vAAAdLsAgCC9AAAqvQAAsrsAAPm7AAB8uwCA0DwAwEA9AOA9PQCAorwAgCw8AAAMvAAgQz0AcIa9AMAMvQAAxjsAYHo9AADAugAA9jsAgNk8AEByPQDgLr0AQDS9AICMPADAPL0AoFC9AABwuwDgkL0AgHa8AIDHPACAh7wAgKQ8AAAGvQCANb0AwJa8AGAcvQCAFD0AgAa8AEACPQCALDwAMJ49AACkugBAoLwAgKu8AIAxvACAPb0AoMS9AABFPAAA9bwAAAC6AKBtvQAwqr0AANW8AADbvADQi70AADC9AECWvQAADjsAAAY9ACBtPQBgaj0AwKW8AADuOwAABDsAADE8AMCZvACA4rwAAAC5AGABPQDAlz0AAOQ6AADHPABAOr0AwLK8AIAEPQAAZ70AICA9AIAQvgCAhz0AAHC8AACavADAqb0AYHo9AGAqPQDgET0AwFQ9AOADvQDA9DwAYK89AED0PAAAsTwAAGE8AEC5vAAgT70AgHY9AACLOwCgZb0AgCA9AECvvADAlrwAIBA9AIB2vQBwlT0AIC89AIARvQAAUL0AQJw8AIAKPADgDr0AYLY9ACB5vQCgI70AABY8AMDSvADgKD0AAP+7AKATvQCAIL0AYBm9AEBdvQDAMr0AgIw8AIBaPACwib0A4DM9AIAIvAAAc7wAYBE9AEAxPQAA8TsAgDY9AOAQPQAApjwAAAU8AEDIvAAAmLsAAKe8AGBtPQBAJr0A4EK9AIA6vQCALDwAAIg9AADzvACA5rwA8JW9AKAAPQCAcLwAkLS9AIAAPACAFzwAAES7AOAnvQBAwbwAgKO9AIBmPACA2DwAQCC9AEDTPACA4b0AALC7AKBHvQAAPDsAgIo8AFDPPQAAJD0AsKc9AIDUPADAvr0AQIa8AABougCAtrwAADi6AMCyvACASLwAAJy8AHD4vQBARL0AYFe9AGA2vQCAhzwAwJY9AICFvADAXL0AgLi8AIBUvACggT0AgCa8AAAGOwCgnz0AgGe8AAAwugAAuLwAYAa9AFCivQDwwz0AoA89ACCTvQAApDwAgDE8AAC8OgAA4LoAwM48AIAHvABAp7wAgBm8AIAHPAAAlzsAYDk9AMADPQDgBr0AgBq8AFCePQCAFT0AYBK9AECDPADArLwAYF89AECiPADA2jwAwOY8AACAOQAAXLwAACA6ADDAPQDQ3D0AYKM9AGA6PQCger0AgEi9ANChvQCAWjwAIC69AAAsPADAHz0AAFC9AACZPACAM7wAINQ9AOBxvQCAXT0AQNe8AAACvQAATjsA0Ik9AID4PADAsbwAQMq8AADVOwBAnzwAwPs8AAAEPABgGD0AYDS9AABcvACAaj0A4Fq9AGBsPQBAqDwAwCa9AIDevAAAzrsA4Fi9AKB+PQBAprwAwM08AMCTPAAgQL0AAMO8AACoOgDAIj0AABW9AIAAvADgKT0A0Ju9AOAUvQBww70AYBk9AMC/vQBA+DwAgCI8AMDYPAAARrsAoHG9AKBYvQAgAj0AANi7AKCAvQBAkL0AQBM9AAC/PABgJT0AgGE8AABeuwDAL70AADg6AACGuwBA37wAwN28ACApPQBA3rwAALy9AECSPABA/jwAAP08AABJvABws70AEKE9AMClvAAAOTwAAAQ8AACmuwCAB7wAgDC8AIA6PQAwt70AwAI9AEACPQAAUDsAiAA+AADHvACAnTwAQDs9AEDLvACQiL0AwOA8AEDFvADA1jwAQMc8AEALPQAAODw=","chunkHash":"5d8e5a64abe014173b481b5a9d86b49dd5b33543e3f265a535f3e41811e4dc21"},{"text":"File: `tiff_dataloader.py`\n```python\n#...\nclass TiffVolumeDataset(Dataset):\n    \"\"\"Dataset for loading 3D volumes from sequences of TIFF files.\"\"\"\n    #...\n    def __getitem__(self, idx):\n        sample_dir = self.sample_dirs[idx]\n        \n        # Load input volume\n        input_path = os.path.join(sample_dir, self.input_dir)\n        try:\n            input_volume = self.load_tiff_sequence(input_path)\n            input_volume = self.resize_volume(input_volume, self.target_size)\n        except Exception as e:\n            print(f\"Error loading/resizing input from {input_path}: {str(e)}\")\n            # Create dummy data for error cases\n            input_volume = np.zeros((1,) + self.target_size[::-1], dtype=np.float32)\n        \n        # Load target volume\n        target_path = os.path.join(sample_dir, self.target_dir)\n        try:\n            target_volume = self.load_tiff_sequence(target_path)\n            target_volume = self.resize_volume(target_volume, self.target_size)\n        except Exception as e:\n            print(f\"Error loading/resizing target from {target_path}: {str(e)}\")\n            # Create dummy data for error cases\n            #...\n```","range":{"startLineNumber":92,"startColumn":0,"endLineNumber":112,"endColumn":0},"embedding":"AIA0vABA17wAgLY8ACCivQAAJr0AADi9AACYOwCACD0AYFm9AKANvQAAZrwAAE67AACJPABwjr0AgDU8APCpPQCACDwAQIU8ADCqvQDAdz0AwKQ8AACGvADAPj0A4CC9AACYuwBgCL0AAO08AAAJPADQiD0AgFG9AABMvQDAGr0AkL+9AECyPACArLwAAPw8AAB5vADgrz0AAKQ6AMBIvQBggz0AAHa8AACIPAAAFLsAQEM9AKBYvQAArbsAALG7AKAPPQCAIj0AoBm9AGBqPQDA+bwAIHq9AOAGvQDgFz0AQH69AIAzvADA+TwAIIG9AIBRPACAk7wAAG88AIBHvQAA3DsAQB89AADIPACACz0AAAO9AACtvACgZr0AQJa8AIAtvQBAyLwAICc9AOAcvQAga70AYDQ9AMBFvQDwwL0AYFU9AECdPADAbb0AQHM9AAAovQBgo70AwJm9AADAOAAAnrsAQFO9AMDZvADANz0AUJu9AKCQPQCARTwAgEC9AACmOwCgd70AEIM9AECBvADgAL0AILk9AGATPQAAoLsAgJk9AMAYvQCA4LwAgEK8AMD8PAAABDwAYAa9AAAYugBgpz0AQMS8AEDIPACAFb0AwP28AOBNPQAwkr0AoCm9AEAlvQCQiT0AgIi8AADcOwAAcTwAwCO9ACCHPQCg0L0AgMC8AIDzPACAPT0AwMu8AOAlPQDAvb0AAOc7AMDDvQBA9LwAANi6AAB3vACgXT0AQDa9AIARPACgwz0AQKs8AIB+PACANzwAgHO8AGDHPQAgMD0AgAA9AEBivQDgMj0AAAo9AGBMvQAAursAQJC9AOAkvQDgqj0AwHI9AKA8vQBAZb0AgGA8AACPOwBA4jwAgEK8AIBdPQAA0DsAACa7AAA6vQDwpL0AQF89AID2PACARjwAANW8AED/PACAYL0AwI+8AECmPQAAW7wA4IG9ACAAvQAAlbwAwNG8AECEvAAAe7wAgAG8AAC+OwDAxTwA4G49ACAjPQCAL7wAgMU8AACFuwDgQz0AIFy9AGAuvQCAajwAIHY9AABZPAAAhDoAQKM8AIBZPQBAJ70A4CS9AAChPADATb0AgHu9AAAwvAAwhL0AwNW8AMC2PAAAgrwAQIU8AICnvAAAHb0AgI+8AGB8vQBgMD0AAOi7AMDEPABAzjwAgKs9AIBEvADAsjwAAMG7AICevACAbL0AQKe9AIAkPABgAr0AAGS7AOCXvQDQn70AYBa9AIAAvQDgmL0AwGq9AMCBvQAA8DkAoDk9AIB/PQCgcD0AgLK8AADZOwAAg7sAgJI8ACAhvQCAxbwAgEY8AGAPPQAAcD0AANc7AACfPABALL0AgB+8AADyPAAAIr0AgOM8ABgYvgCAWj0AAGO8AADQuQDgeb0AQHg9AAD+PACAzDwAIIw9AECtvABgBz0AUI09AIAzPABAwTwAQLw8AMANvQDwgb0AQGg9AIBkPABgOr0A4DY9AACQuQCAZbwA4CI9AEBzvQDQmj0AIAs9AEDvvACgYL0AgMc8AAAXvABA0rwAkLc9AEAzvQDAobwAAIA6AACAugAA4jwAAMG7AAAUvQAgKr0AoD69ACBYvQDgWb0AwLc8AADnPACgdr0AwKQ8AADVOwBA6rwAIAg9AAApPQAAHTwAoCI9AACGPAAA+DwAgCg8AIDUvAAA0DsAAKY7AFCSPQCgK70AQGi9AKBcvQCAAD0AUKA9AEAMvQAAiLsAsIy9AAAJPQCAhbwAwKe9AAAivAAAxbsAAKQ7AEDYvAAAiLsAkMW9AIB5PADA6jwAwAC9AED2PACg2r0AAJ+7ACB8vQAAdjsAAO47AMC0PQAAnTwAgMs9AOAlPQAgyL0AAF+8AIASvAAAhrwAADw8AIDavAAARrwA4CG9AFD4vQBgWr0AYG29AMAdvQAgDj0AYIc9AIB9vAAgE70AYDG9AICfvACgQT0AAKw7AIAGPACQqT0AAAC4AMCGvAAAMLoAIBW9ANCWvQBw2D0AwNU8AIA5vQDA5DwAgBQ8AIA9PAAAYLsAAGg8AEDjPAAAgLoAwJq8AADLOwAAO7wAIG89ACAfPQBgJ70AgBG9AAC1PQAA+TwAAJu8AACeuwAAw7sAQDQ9AIDHPAAAyDwAAEk8AACeuwAAWjsAgB88AGDHPQCA6z0A0K09AOCPPQCAWr0AwC69AHCWvQAAoDsAQB69AMCGPADA3jwAYB+9AACfPAAAkjsAQNQ9AKB4vQCgHz0AYAS9AAD1vAAAoDoAQEE9AADnPACAH70AQAe9AECDvACAtzwAwPI8AAA8OwCAQz0AQCK9AMC4vABAlT0AoH+9AMBvPQBA4jwAAL+8AEALvQBAo7wAwFm9AKB0PQDA1bwAAOo8AADjOwDA+7wAAK68AABAOQBgJj0AADi9AAAUuwBAZj0A8Ie9AADfvADgx70AAA09ANCovQDA6TwAANk8AAB4ugAAAAAA4Ce9AFCIvQBA+TwAAFe8AEBHvQDgjr0AgJ48AAD0OgCAsDwAACC6AIBRvAAANb0AAIO7AICDPABA5rwAAOG8AIAIPQAAJbwAMNy9AAAlPABA9DwAYAY9AACzvABgnr0AQK89AAC3vACAWLwAAKQ7AADYugAAMbwAALC8AIA7PQBQnL0A4BU9AEA1PQAAzzsAoPk9AEDLvAAALTwA4Gw9AMC0vACgR70AwKY8AICxvAAA5DwAAAa7AEC5PACA9zw=","chunkHash":"556048b84b64da3070474cc9d02253dfc9d57bba4df7cca26d1b12526a9aa79a"},{"text":"File: `tiff_dataloader.py`\n```python\n#...\nclass TiffVolumeDataset(Dataset):\n    \"\"\"Dataset for loading 3D volumes from sequences of TIFF files.\"\"\"\n    #...\n    def __getitem__(self, idx):\n        #...\n            target_volume = np.zeros((1,) + self.target_size[::-1], dtype=np.float32)\n        \n        # Normalize to [0, 1] range\n        input_volume = input_volume.astype(np.float32)\n        if input_volume.max() > 0:\n            input_volume = input_volume / input_volume.max()\n            \n        target_volume = target_volume.astype(np.float32)\n        if target_volume.max() > 0:\n            target_volume = target_volume / target_volume.max()\n        \n        # Convert to PyTorch tensors\n        input_tensor = torch.from_numpy(input_volume)\n        target_tensor = torch.from_numpy(target_volume)\n        \n        if self.transform:\n            input_tensor, target_tensor = self.transform(input_tensor, target_tensor)\n        \n        return {'input': input_tensor, 'target': target_tensor}\n#...\n```","range":{"startLineNumber":112,"startColumn":0,"endLineNumber":130,"endColumn":63},"embedding":"AABVvABgQL0AQJo8ABDBvQDA47wA4A+9AACIuwBgRz0AQHu9ACApvQDAuLwAALY7AADAPACAhr0AQIw8ADCsPQAAmrsAQMQ8AMCpvQBgbz0AAD48AAAPvAAgQz0AYDW9AABhvADA07wAIEE9AAAgOgDgiz0AIDm9AEBQvQAgM70AMK+9AACwOwBAnrwAgHE8AICkvADw1z0AACI7AOANvQBgHj0AAKa7AIAUPAAAWrsAAPw8AABMvQAAsLsAAJy6AMDhPABgTD0AoBe9AOBpPQBAybwAwEq9AAA/vAAgGD0AwFa9AAApvAAAwjwAgDe9AABkPADAxLwAALo8AABVvQAA/TsAICE9AABwOwDgNj0AoBq9AEC9vABgQr0AAAO8AKAzvQBA97wAIA49AEDnvADATr0AoAo9AEAAvQCgp70AwEU9AABIPAAAcr0AoG09AIAEvQCAm70AoH69AIAyvAAAFrsAoGK9AAAkvQAgHT0AQKG9ANCbPQAALjwAYCW9AABqPABgd70AoEI9AADRvAAAa7wAIMc9AMATPQCANLwAUIo9AKAdvQCA+LwAQIi8AADlPACAcjwAYC+9AAAyOwAwwz0AQIa8AICkPAAgO70AwIW8AOBvPQCAe70AoCS9AMALvQDgQz0AAEi8AAAMPADAkTwAQBW9AJCNPQCAAL4AQPO8AEANPQDgSj0AwAS9AOBIPQCAwr0AAJM7AODfvQCAsLwAAHg7AEDUvAAgRj0AAHa9AADouwAgyz0AQM48AACoOwAAqDsAgGi8ADDPPQCADz0AACg9AABtvQAAczwAwOU8AMBAvQAAKLoAMJC9AICFvADgvj0AMIg9AKBFvQBAKL0AgDc8AIBIvAAAFTwAwJi8AHCEPQAAVLsAgDE8AEDtvADwy70A4EM9AAB5PAAAjLoAgLW8ACAqPQCAiL0AoBC9AFCfPQAASbwAMJa9AGAIvQCAqbwAQOK8AIDhvABAh7wAAFg6AIALPACAqzwAICo9AGBaPQBAkbwAALw8AIAAPABgRT0AgFa9AGATvQCA6jwAEI49AACEPAAAzDoAAEU8ANCxPQBgWb0AACG9AOAfPQCAJb0AsIe9AADwugCgd70AALm8AKANPQAAfbwAgAM8AADDvAAA2LwAQAe9AIBGvQAAaT0AQKS8AAD5PADAIT0A0KE9AAA0vAAAM7wAAIa8AIA8vABAQr0A4Li9AMC4PADADL0AQMG8AEBpvQDgpr0AIEe9AED3vACAr70AoBm9AAB7vQAAqjsAADQ9AEAzPQDAaz0AAK+8AIAzvAAAzLoAgGc8AIDjvAAAirsAAMO7AOBEPQCApz0AAFk8AABBPACA8rwAQJK8ACANPQBgR70AAKI8AFDyvQAAfz0AAC28AADlOwAgkr0AcIU9AMC0PACAzTwAgDE9AED9vABABz0AEJ09AEDiPAAAwjwAQCw9AEAIvQBgfr0AIBM9AIBSPAAAU70A4DE9AIAtvAAALrsAgCs9AABhvQDAiT0AgCg9AICTvADgcr0AgOw8AABzvAAAobwA8KQ9AKBjvQCAeLwAwIg8AIAJvABgPT0AgDS8ACAovQBACL0AgPC8AICIvQDwir0AAIk8AECgPAAAN70AQK88AABOPABAsrwAQP88AEAzPQAAZjsAgOg8AMC3PAAA8DwAAC88AADCvAAAQrsAAO+7AJCZPQCAoLwAIH29AOBmvQDAizwA0KQ9AADnvAAA87sAYJG9AGAlPQBAn7wAoLO9AAAwugAAMDoAwKw8AMCKvAAAarwAQLK9AAD9OwAAkjwAwCe9AOAKPQAwz70AAFW8AEBOvQAA9jsAgEk8AHC6PQAATTwAQMI9AMD0PACA1L0AAOq7AAACPADA77wAAMo7AGAyvQAA+7sAICC9ABDMvQDgML0AQDC9AKB3vQCA5jwAgKE9AAAtvAAgPL0AIG29AACgvABQlz0AAKk7AADbuwCwnD0AgH68AABYugAAhLoAYAu9ABCWvQCAwT0AYAM9AEBmvQBAsTwAgGo8AAA4ugCAMDwAAJ88AIBaPAAAT7wAAIa8AABgugAAZjwAoHU9AIAhPQAAK70AQDy9AJCfPQAA1DwAgLq8AIBsvADAkrwAgGM9AACsPABAzDwAgGs8AAAMvACAx7wAwJI8AEDaPQDQzj0AQMs9AKBYPQBgYb0AICu9AFCKvQAABjwAgA69AIBcPAAAUjwAIEy9AADCPAAAkLsA8NI9AEB/vQCAeT0AYCG9AADJvAAAUrwA4DY9AOA5PQDA9rwAgNi8AAAyuwAA5jsAAOk7AADUugBASj0AABO9AECIvADgdz0AgEa9AMCFPQDA2TwAwAO9AAA1vQCA/rwAwCO9AJCHPQCA17wAAGc8AIADPADA3bwAgBO9AABYugBgMT0AgBm9AABDvABAIj0AcL29AIDBvAAgsL0AQBQ9ABCOvQDA0zwAAP+7AACgOwAAK7wAYBS9AGBwvQAACD0AAFq8AIBcvQDQpL0AQMg8AECnPADAojwAAAo8AADAOgDAJr0AALe7AACKPADAprwAAAK9AEANPQAA0zsAgNS9AIBpPADAEj0AoAs9AABwvACAm70AEJk9AACfvACAjrwAAIM8AADoOgAA9rsAAJa7AEAiPQDwv70AYEA9AKAQPQAArbsAUPg9AIDMvACA5zwAwEI9AADsOgDA+rwAAMk8AACbvACAfjwAAJC5AEDOPABA6Tw=","chunkHash":"9cffe57feeaf347ce8f6e2460e9f9bd2cc5c6d10674428dc95b5f32613ac3c5a"},{"text":"File: `tiff_dataloader.py`\n```python\n#...\nclass TiffVolumeDataset(Dataset):\n    \"\"\"Dataset for loading 3D volumes from sequences of TIFF files.\"\"\"\n    \n    def __init__(self, root_dir, input_dir=\"raw\", target_dir=\"mask\", transform=None, target_size=(104, 104, 104)):\n        #...\n    def __len__(self):\n        #...\n    def load_tiff_sequence(self, directory):\n        \"\"\"Load a sequence of TIFF files into a 3D volume.\"\"\"\n        #...\n    def resize_volume(self, volume, target_size):\n        \"\"\"Resize a volume to the target size.\"\"\"\n        #...\n    def __getitem__(self, idx):\n        #...\n```","range":{"startLineNumber":11,"startColumn":0,"endLineNumber":91,"endColumn":31},"embedding":"AMDHvAAAdrsAQB09ADCOvQCAGr0AIDy9AAACPAAAKj0A8KG9AIB8vACAOLwAAEA8AMAiPQCwuL0AAIi7AHCKPQCA2zwAQJE8AFCUvQBgZj0AYCI9AADLuwAgJT0AwHy9AAAhPADAIb0AAMo8AECQPADAiz0AwFS9AECDvQDgJb0A4Kq9AAD6OwAAX7wAAJs7AEC5PABQyT0AQMM8AOBGvQCgYT0A4Ga9AMDRPAAAALgAYFA9AHChvQAALLwAAEI7AIBdPQCAuzwAAEi8AKArPQAALbwAwHi9AOAcvQBgWj0AAJC9AAB9vAAAUDwAIC69AIDrPABgBr0AALU7AIBivQBgAz0AQMA8AIA5PACATTwAwPO8AEDlvABQir0AgB68AIALvQCA+rwAQI08AOAIvQCgCr0AYFQ9AGBgvQCgpr0AoDI9AGAEPQAglL0AAF09AKAnvQAQub0AIFO9AECvvAAARLsAgKS9AMCYvADAAD0AQFK9AKCePQCArLwAwDK9AECdPAAQiL0AwNk8AMCkvACAirwAkI49AOAzPQAAsLwAAG89AACAOQCAPrwAYCG9AGAyPQAAMDsAABm9AACtvAAQ3D0AYGO9AAC2PACApbwAAKG7AIBEPABQjr0AAFG9AIAYvQCACD0AwN+8AACIPAAAWjsAQOy8AOC5PQDgub0AQCu9AAAcPABgSD0AwKG8ACA9PQAg1b0AAIg8APDAvQBA7LwAACE8AECxvAAAeT0AoEi9AIBJPACwsD0AwMg8AECZPAAAiDsAAD+8APDePQAgJz0AgFU8AOCIvQBA1zwAgE48AOAWvQAARrsAQFa9AMC8vACAuz0AwDE9AADHvADgQb0AAI87AIBqPAAAPrsAAKq8ABCGPQDA3zwAANC7AMCovACAtb0AgBM9AICaPAAAxTwAICa9AIAZPADgCL0AQD+9ABDhPQBAv7wAQGm9AACxOwAAhDoAAAO9AMC2vAAAXbwAAOi6AAAQuwDgEz0AYDU9AGBzPQAArLsAQKU8AED/vABgZD0AgEm9AADqvAAAnjwAoEo9AKAQPQAAazwAwAk9AIA8PQDAr7wAYC+9AAB0OwBAX70AgHS9AICLPAAgfL0AAOu8ACAYPQDAAr0AIA09AEDivADgBL0AAJe8AMAZvQAAUzwAAEG8AKArPQAgRz0AQHU9AABVPAAAwDoAAFO8AACTOwCgqL0AING9AADuOwCgS70AQMQ8AECAvQAgj70AAFm8AMAovQBwtL0AYEe9AEBAvQBAtjwAgGg9AMBwPQBAHT0AgGW8AAAwvAAAPDsAwLc8AIAQvQCAMb0AAMy7AIA1PQCAtz0AAIm7AMABPQAAw7wAAOE7AGAmPQBAfL0AAN47AOAAvgBAfj0AAB+8AABsOwBwhL0AIHw9AKAIPQCA5DwAAA09AIAuvADAyDwAoIA9AAD7PACANjwAQEU9AEC2vABgib0AAFE9AMAJPQBAGL0AwE09AAD6OwAA/DoAgHg9AKAovQAgmD0AAII8AIBtvABAj70AYAM9AEDLvACANrwAEI49AMCGvQAA9bwAAAg6AAAjvADAFD0AANe7AABBvQAAUb0AQAW9AOAwvQBgbr0AAGY7AADyPADgSL0AgOQ8AABiPACgRL0AwJo8AAAsPQDAlrwA4AY9ACAEPQAALzwAANM8AMCPvAAA2LsAAIg7AACePQAAa7wAIGm9AKBBvQCAwjwAIDM9AIAuvAAA5LsAoKS9ACBuPQAAIr0AQMS9AMCaPACA17wAAFA7AAD7vAAAtDsA8Ja9AIAaPQAAxDoAIAa9AEAAPQCwx70AABg7AAAsvQAAHTwAgCG8AICXPQCAzDwAIJg9AAArPADgqr0AAA69AIDSPABAiLwAgE+8AADAvAAALzwAwBG9ANDPvQBgWr0A4FS9AGBAvQDgBz0AwKQ9AIB+vADgir0AgGi8AAC7vADgJT0AAPA7AACgOwAQlz0AAOO7AAAPvAAA5LwAYHC9AIA7vQDgtz0AQAk9AECAvQDA/DwAgPw8AACTvAAArrsAYAo9AAD1uwAA0rsAAFQ7AACHPADAnzwAwDY9AIBVPQAAH70AIAy9ACDPPQDAJz0AwA+9AEDEPAAAVjsAYCY9ACA/PQCA3DwAQJE8AIBDvACAFzwAAIe7AGDRPQCwAT4AoLU9AAAgPQBgcb0AAGi9AMCuvQBAizwAgIS8AIA0PACAJDwAYGu9AIBDvADAl7wAILM9AOBXvQCgST0AwJi8AABGvAAA1DoAoFY9AIBjPQAAnTsAgJW8AAAeuwCAxjwAgJ48AIB7PAAgTT0AQDi9AABcvQAgFD0AgCG9AOAJPQDgJD0AwJq8AIBzvAAADDwAwA69AIAxPQCAAbwAAKk8AACOOwDgW70AQCe9AADqOwDA0zwAwGm9AADkuwBgdj0AQKa9AABEvABgib0AwCQ9AOCovQAAajsAAII7AECxPAAAQ7wAYDm9ABCVvQBAqzwAgBO8AIDYvABQm70AACY9AADEOwBA8TwAwLw8AABKvAAAhb0AQJW8AAB0OwBgFb0AgN68AMCoPAAArLoAkMC9AADAPAAAijwAoBE9AMDkvABAjb0AQMQ9AEAfvQCAD7wAAOQ8AADePAAAxrsAgCy8AICAPQBgwL0AAEQ9AIAhPQAAwjsA4PI9AAADvAAANz0AwAo9AIDWvACAeL0AwPA8AMAovQCgCT0AAIO7AIA8PQCAjjw=","chunkHash":"0b680a3a751f4f59fef2ad3467b442c71f8536ebb7805d4423b6a68447c46ef5"},{"text":"File: `tiff_dataloader.py`\n```python\n#...\ndef get_tiff_dataloader(root_dir, batch_size=4, shuffle=True, num_workers=0, \n                        input_dir=\"raw\", target_dir=\"mask\", transform=None, target_size=(104, 104, 104)):\n    \"\"\"\n    Create a DataLoader for loading TIFF volume data.\n    \n    Args:\n        root_dir (str): Directory containing sample folders\n        batch_size (int): Batch size for DataLoader\n        shuffle (bool): Whether to shuffle the dataset\n        num_workers (int): Number of worker processes for DataLoader\n        input_dir (str): Name of subdirectory containing raw TIFF slices\n        target_dir (str): Name of subdirectory containing mask TIFF slices\n        transform (callable, optional): Optional transform to apply to samples\n        target_size (tuple): Target size for all volumes (H, W, D)\n        \n    Returns:\n        DataLoader: PyTorch DataLoader for the dataset\n    \"\"\"\n    dataset = TiffVolumeDataset(\n        root_dir=root_dir,\n        input_dir=input_dir,\n        target_dir=target_dir,\n        transform=transform,\n        target_size=target_size\n    )\n    #...\n```","range":{"startLineNumber":135,"startColumn":0,"endLineNumber":158,"endColumn":0},"embedding":"AMCdPADgKL0AgAM8AKBvvQAgE70AQIa9AAB9PABAbz0AQL69AIAzvADAo7wA4Kc9AIDsPACArL0AALM7AICMPAAA5DsAAFu8AEBpvQAA8jwAQMg8AACnuwCA/DwA4CO9AEClvACACr0AABo8AAAqPADAET0AIH+9AECQvQCgCr0AAEK9AAARvAAAaDsAALC7AIBkPQDA5T0AwKy8AMC6vABgQT0AQMi9AIAZPQAA/DwAgEo9ACDHvQAAcDwAAAw7AKBKPQAAl7wAAOI7AGB/PQBwk70AwLW9AAA6uwCAZTwAIBm9AAC8ugAA+zwAoA29AOALPQCgTb0AQNs8AGAYvQBANj0AAIK7AID3vAAAILkAAHu9AMCkvAAAYrwAAGG8AIC5vADAYL0AAAA9AIBQvADgYr0AwDE9AFCdvQCAQr0A4Bw9AIAJPQCARLwAwBg9AAD2vAAQsr0AAG+9AGBZvQCAFDwAoLC9AIB3PACAsTwAwOC8AKBQPQCAArwAwD+9AMDgPADA+rwAwCs9AACmvAAAjLoAYE89AKAJPQAAGb0A4DA9AEDTvAAAy7wAAAa7AAAAOgDgNT0AAKS9AMCIvAAQpj0AwDS9AADCPABAmb0AAGo9AIAYvACAY70AwFm9AKAnvQAAkzwAAAC9AEDGPAAAK7wAgGi8ABD9PQBIB74AADy8AECSPACgjD0AAJC6AEDhPABA6L0AwOA8AODvvQAAGjsAgKs8AIDEvABgVj0AMIe9AIAivAAQ1T0AwFM9AAASvAAAr7wAQJW8AFChPQAAp7sA4BY9ADDPvQAAqLoAAAg9ABCDvQAA5DsAAJS9ACAnvQDwpj0AAMA8AEAtvQAAnLsAYCg9AACFPAAAWzwAAAi8AMB7PQDA3zwAAKA7AMAVvQCAv70AIE49AKASvQAgRT0AYBa9AABFPAAA07wAYHS9ABCHPQAATT0AAJi9AIAVvQDAljwAAHI8ACByvQBAG70AQNe8AACUPADABD0AAGk8AAADPQBAnbwAoAA9AEAYvQCQgD0AQN28AAB4OwBQlz0AwDI9AOCsPQDgFz0AAE88AMA3PQCAj7wA4Du9AEC5PADAhrwAQBC9AACfPACAMbwAgH68AKBYPQAgCL0AgMc8AADvvABA8rwAAHC6AMAgvQCA+TwAgCA8AKAkPQDAZD0A4Jk9AADmvADAgTwAABC9AEDKPACAab0AQNm9AIAgvQBAsLwAIF+9AIAevQDAmL0AwAC9AADNuwAQvL0AQAe9ACAXvQCAkTwAIGQ9AACpOwAAAj0AAHg8AABfvQAASbwAAGA7AACyvAAAdLwAAGy8AECQPAAgAD4AIHW9AADzuwBAbL0AAHg6AGAhPQAARL0AAPO7AGAyvQBAsz0AAFk8AACvuwCwlb0A4Ns9AKBIPQBA6zwAAKc7AAD0PADgJj0AAIU9AGBXPQCAATwAwAE9AAAFvAAA9rwAALy6AOA5PQCAyLwAoAE9AMCNPAAAHbwAgIs8AKAvvQBAez0AALc8AIB6vACAGL0AACA5AAA2vQCACz0AgC49AICnvQAA8rwAwIk8AAAuvAAAvTsAAEA5AAD0uwAAwLoAgMy8AEBfvQBAVr0AAFI8AAB+PAAAxbsAAIW8AIAmvACAlr0AAFg8AMCvPABAjLwAwKw8AOABPQCACT0AMIg9AAByPADAlDwAgEA8AEDgPAAAHrsAQFK9ACCqvQAgDz0AwCI9AMATvQDgGT0AgBK9AADwuwAwkr0AAJm9AIAEPAAAaLsAgCM8AICcvAAAb7wAIBO9AMBpPQDAN70AAH08AAAgPQCQtL0AwOI8AABTvQCA/7wAQBg9AFCUPQAAUT0AQAE9AAAgOgCA87wAQBG9AAD8PAAAjzsAgAW8AMAJvQBA0zwAYBO9AADDvQDAjrwAACa9APCMvQAAHj0AQK89AAAPvADAJr0AoDQ9AABBPACAWj0A4AQ9AGAOvQCwtz0AgDI8AADNOwBAIr0A4Ly9AMAjvQDQwj0AwC09AIAwvADAYz0AQBo9AAB4uwAAzbsAIBU9AIBJvACgIz0AIAU9AIAsPACApjwAAEc8AGA/PQCAgr0AoFq9AFCePQAAiDsAAIW8AAC1vAAA1DsAgOI8AOA5PQAAfrsAAEM9AABYuwAAAAAAAAg6ADDPPQBwnT0AQKo9AKBfPQCAq7wAIEu9AKCsvQCAjDwAwIU8AABlPAAAGjsA4HS9AABHPABgpr0AoMs9AMCxvQAA+DwAAAy7AIAAvADAl7wAIAk9ACCbPQCAmzwAgIm8AAAmPAAAyDoAAEI7AHCOPQAAtTwAgMy8AJCPvQAAo7sAYBO9APCHPQAAUDoAQMU8AAA8OwAAoTwAANU7AIBIvAAA+TsAAIW7AIDGPABAIr0AMI29AABXPACA3DwAgBo8AICuPADAXz0A8Ku9AKB0vQDwob0AACs9AAC5vQBgNz0AwMW8AADgOQCAVbwAAGA6AMCHvAAAabwAQFC9AMCQPAAAHrsAAOc8AABYOwAAFjwAAPA5AABiuwDgZr0AgGS8AAD1OwAA4rwAIFC9AACAvACAEDwAsNu9AACsuwAAJzwAoGg9AADiOwCgK70AQMg9AGBtvQAA4LwAACA9AIBpPQAAfLsAIAK9AAA3PAAwkr0AQHE9AIDtPAAAcDwAAAk9AIBjvQCgBz0AoCI9AECOvADgeb0AANQ7AICYvABA3DwAgI+8AADVPADQgD0=","chunkHash":"c58c3878e10f289c2535590ffa8c5af5c4e06cf211aac37d483650ab5722f90d"},{"text":"File: `tiff_dataloader.py`\n```python\n#...\ndef get_tiff_dataloader(root_dir, batch_size=4, shuffle=True, num_workers=0, \n                        input_dir=\"raw\", target_dir=\"mask\", transform=None, target_size=(104, 104, 104)):\n    #...\n    dataloader = DataLoader(\n        dataset=dataset,\n        batch_size=batch_size,\n        shuffle=shuffle,\n        num_workers=num_workers,\n        pin_memory=True\n    )\n    \n    return dataloader \n```","range":{"startLineNumber":159,"startColumn":0,"endLineNumber":167,"endColumn":21},"embedding":"AABEvAAAH70AoKE9AIDNvACgEb0AIFK9AIAdPABgUT0AUMy9AOAAvQAAwLsA4LU9AGA/PQBw4r0AAMS8AIBevAAgKj0AgEi8AGBqvQDwij0A4E89AAAaPACAEj0A4CK9AICFPABADL0AgDy9AACEvABAaz0AoBW9APDgvQCALb0A4Cy9AIBIvAAArLoAYDO9AOA3PQBwwT0AAPg6ACBPvQBAWD0AUO+9AAATPADgKz0AgHA8AJC4vQAAnLoA4C29AOA+PQAAUjsAQKQ8AMBDPQDAL70AAPO7AIDXvABALz0AgFy8AIAVvAAAezwAYE+9AOAFPQCAr7wAAHM8AKAWvQAAXjwAAJS8AICHvQCAaDwAoDe9AIBSvQCAerwAAIa8AADMOgBgbb0AQIo8AAC/uwDAJb0AUKo9AICGvQBA67wAgDo9ACCpPQCAhrwAgGI8AIDYvACA/r0A0Ii9AACGvQDAq7wA4EC9AACFPAAABD0A4BS9AEBYPQCAc7wAIC+9AAAPPQAgd70AACc8AICJvACAcDwAAJC5AIDYPADAs7wAALI8AAB0uwBAiLwAQNe8AAAyuwDgmz0AYLa9AABPvACgdD0AwK28AABePQBAxrwAEJA9AEDHPAAgXb0AQOm8AMC9vAAAkDkAgA69AAAAugBgA70AAB67ANDgPQBw2b0AAMs8AACAOQDAQD0AwJG8AAAJPQBwx70AIFE9ABADvgCAOj0AgEU9ACAvvQAACT0AQJq8AAAkuwBgCj0AQP48AIAQvQAASrwAgDm9AGCTPQCAdzwA4B49AIChvQBAjbwAoB89AADwuQAgKb0AQKG9AOAJvQDQgD0AAPA6AICLvABAnbwAwNO8AECTPABAwTwAgF08AICcPQBgAD0AwOa8AADtvABQhL0AAGc9AOANvQBA/TwAACO9AIAsvADAvrwAQCG9AJCEPQAAkLwA4La9AKAevQAAejwAAFs8AGCMvQDgBb0AgI29AICmPACAIj0AgGC8AKBCPQDA6jwAYI09AECRvAAAOLwAoD49AAAGvQCQhD0AAMO7AKBvPQAAET0AAGc8ADCRPQAA/LsAgEU8AIC5vAAAJL0AYDC9AABrvABAOr0AwAy9AEAwPQCAyrwAoFU9AACRvABAB70AwBm9AMDGvAAgPz0AAEu8AMAlPQBQgz0A4Gs9AADXuwAAWj0AQDe9AIAwPQAggL0A4NG9AADrvADgA70AAHY7ACB9vQCAObwAAC28AICXPACAoL0AIDq9APC+vQAAkLsAwMU8AIAJvAAAnTwAoE49AAByuwCArbwAACo7AACUuwCALb0AABq8AIAgPADgrz0AgFS9AAAivAAwkr0AgES8AIAcPQAgHr0AAIc7AIA/vQDgLz0AgBI8AABpvADgmb0A4I49AOBePQAAqLsAQOc8AEDSPAAASDwAwPI8AGA3PQAAtzwAICk9AIAYPACgGr0AACs8AADhPACASrwAwMY8AEC+PABAk7wAgF08AOAjvQBgcj0AgIe8AIAAvQAgJ70AAGY8AEDVvADAtDwAgEo8ALCevQBA9bwAAKy7AIBsvACApbwAAGC7AICQvACAFDwAICq9AMBFvQAQqr0AABA7AECwPADA/rwAoGq9AAAiuwDgMb0AwCE9AACBOwDwgb0AQNG8AEAqPQCgOj0A4A49AEA0PQAAajwAABg7AICsPADArLwAQLm8ABCrvQAACjwAQFc9ANCevQBAtjwAgEy9AABIvADAEb0AYAS9AMDtPAAAKbwAwI48AEDhPADAp7wAAKs7AIBDPAAAK7wAAEE8AICnPABA1r0AgEs8AIBpvQBgUL0AABY8AOA5PQDQgj0AYDc9AADpOwBgDr0AAHA6AAB/PQAAWLsAAJ47ACAjvQAAPDsAAKe8AMC8vQCAA7wAwDW9AAAtvQBgOz0AwMg9AICcPADAKL0AoIA9AIAcvADANj0AwGQ9AECYvAAgwz0AQDs9AIBNvQDAvL0AYIa9ACAQvQAQtD0AQIA9AIARvQAAXj0AsII9AAAlvAAAArsAgBw8AADBuwDArjwA4AI9AIAgvACATLwAAOg6AKBaPQAgWr0AwOG8AEA+PQBAqLwAAEu8AIBgvADAvjwAACy7AEBwPQDApDwAQOE8AAAwvACAILwAQIG8AGDYPQAgJz0AIDc9AKB2PQAgO70AgOy8APDNvQDgQz0AQIk8AIBTvAAATjsAoKG9AABgOwAA2L0A8Oc9AIDovABAPj0AAA68AABTvAAArLwAgI09AJCDPQCAFTwAgJM8AID8vAAAGzwAgCu8AABMPQAgbD0AgCK8ACAjvQAAjjsAAPS6AAAzPQAAK7wAANW7AAAkOwDApjwAgB08AIBmvQAALT0AwNG8AAD0OgBgY70AwKe9AMDxPAAA5DoAQKo8AMCGPADATj0AsLm9AICNvABQkL0AkMA9AOB5vQAgVz0AgKO8AMC5vAAAYDkAgJw8AEDBvABA9LwAYA69AKAbPQAA9zwAADw9AGAdPQAAJDsAQNG8AAB1vABAXL0AAF88AADoOwAALb0AwHO9AACLPAAAAjsAoOW9AMCYvAAgGb0AAOQ9AABBPQAAwLoAsMw9AEBvvQCgOr0AIFk9AEA+PQCAJrwAAM28AAAGuwBAUL0AoAw9AIDJPACADjwAQCA9AMCTvQDAnDwAwBQ9AMDXvAAwmL0AAFw7AEDOvABA8TwAAOG8AAA5PQBgTz0=","chunkHash":"2d26051892b9cf44d7b339279f742e43a1fd30f370fc37da6f5ffcda462fc0fb"},{"text":"File: `tiff_dataloader.py`\n```python\nimport os\nimport glob\nimport numpy as np\nimport torch\nfrom torch.utils.data import Dataset, DataLoader\nimport tifffile\nfrom scipy.ndimage import zoom\n\nclass TiffVolumeDataset(Dataset):\n    \"\"\"Dataset for loading 3D volumes from sequences of TIFF files.\"\"\"\n    #...\ndef get_tiff_dataloader(root_dir, batch_size=4, shuffle=True, num_workers=0, \n                        input_dir=\"raw\", target_dir=\"mask\", transform=None, target_size=(104, 104, 104)):\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":134,"endColumn":105},"embedding":"AIBOvAAAC7wAoDQ9ACB/vQBAvLwAAJ29AADBPAAAEz0AAKy9AOAYvQAAATwAoGo9AMCGPACgsb0AAPk7AIBKPQAAXbwAAIE8AGBovQCgYz0AAIQ9AIC0PACAXDwAQEa9AEDfvACAorwAALA7AGABPQDgkz0AQBy9AOCtvQCgGr0AwJm9AABYPACARr0AAP67AAAwPABAwz0AAJa7AMAYvQDgPT0AAIu9AMCiPACATDwAYEQ9ACDMvQCAgLwAAEe8AEBiPQAAVDwAAKw7AAC1PACgQb0AIFC9AICzvAAAljwAAAa9AABYuwAgEj0AABm9AMCbPACAIb0AwPs8AGAJvQAAPDwAAOo8AMDMvAAA/zsAwJe8AEAzvQDgiL0AwK08AAC+uwCAU70AIFQ9AMBKvQAAXr0A4Kk9AADTvADgj70AQIo9AEBaPQDABb0AoBs9AOAbvQDAsL0AQKq9AKBJvQBA2LwAoB29AMAhvQDAsDwAwDG9AMBYPQAAgTwAgPa8AEAVPQAgkr0AoF09AECKvADgMb0AYIY9AIB/PQAAubsAwIM9AACaOwCA9bwAoJC9AACUPAAA6zwAYJq9AADMugAAjT0AQPq8AGArPQBgCr0AAKY8AIDBPABA37wAQKe8AIAZvQCAAj0A4EW9AED7PAAArrwAQJ+8ACB+PQBAmL0AABY8AABbvADggT0AQBm9AOCcPQDQ770A4CI9ACCtvQBAAL0AAI08AMDNvACgtz0AgJW9AAAMPADgtj0AAIA5AIDQPABgRL0AQBu9ALDgPQDAkTwAwAE9AKCevQAA8DoAAFM8AAAPvQAADbwAAHG9AEDhvAAArT0AgE49AIAavQCASb0AQIk8AAAbPABAHz0AgAC8AEC+PQAAeLoAAMi7AICpvAAgjL0AAEs9AIAgvAAAxDwAQPm8AAD8OgDAhrwAQFG9APDpPQAAb7wAwJ29AACsvACAWLwAAOK7AAAtvQCgG70AIG+9AAB4ugCgET0AAJ48AGDMPQAAwrwAYCI9AAAAuQCgdj0AQPK8AED+vAAgBD0AgFE9AMDjPADgGz0AYDU9AICiPQAANjwAQL+8AADCOwBgWb0AwKa8AEC5vACAmr0AQM+8AMAKPQCAa7wAwJo8AAC1vACADr0AAAm9AIDvvAAgMT0AAMM7AIA5PQBgej0A4HY9AIBVvAAAOLoA4AC9AAA4vAAATb0AILe9AIAfPAAAlrwAQIk8AKA9vQCAf70AgAm9AADouwAA/7wAIJC9AKBkvQAA+LsA4Ds9AEALPQCgVz0AQIo8AICcvAAgFb0AgA68AABAvAAAU7wAwEm9AAAmPACAkz0AQCK9AADQOwCgYL0AQNu8AID5PADAR70AAHA8AADMvQCghD0AQKe8AECKvADAVb0AwLE9AED2PABghz0AQLk8AID4PACAGD0AAG89AAA4PQAACDoAYB09AMCyvADgV70AwF89AECNPAAA47wAYC09AECfvAAAFjwAIIw9AEBCvQAAWT0AYCm9AAAfvQBgJb0AoAo9AICZvAAAi7wAYAY9AMCovQBAA70AANo7AEC4vAAAIjsAAKC7AEDwvABgB70AAMS8AKCTvQCgO70AwOY8AABUOwCgs70AAP47AIDBvABAA70AgJI8AMC/PADAN70AQKM8AGBNPQDAsjwAAOs8AACjuwAAuLsAAKO8ACChPQAA27wAALu8AGCBvQAAwLsAAIY9AMAzvQCA5zwA4Eu9AEDfPADgI70AIJK9AAB7PACANrwAwDE9AAD7uwAAWLoAYE+9AABUPAAAWzwAgNm8AABSOwDw9r0AAJq8AGCEvQAAirsAwJY8AMCWPQBgWj0AIJ49AIAKPQCAmr0AwNG8AMDWPABAgrwAQBk9AABGvQAASrsAQBS9APDZvQBAybwAIDe9AMBfvQDAVz0AwH49AIBEvACgWr0AAFC6AIAIvQAggT0AAIA7AIB/vACAsD0AgBS8AABjvAAAT70AwKu9AMBMvQCgkz0AwAY9AIBWvACA1DwAwD89AADCuwAA3DoAAGg6AGA1vQCAT7wAwIc8AECkvAAAFjwAwNU8AIA5PQAAu7wAAOi8ANDZPQCAQzwAYC+9AKASPQCAMLwAALA8AMAlPQBAqDwAAFQ8AAD+OwAA8LsAAGi7AOCePQBAuj0AIM49AIDMPADAor0AwBW9AKCVvQAAFjwAgKy8AICCPAAA0TwAoE29AABmPAAgnr0AsN49AEDrvACABD0AgBa9AGA9vQBA2bwA4C89AMCLPQBgPr0AAMq7AGAIvQAArzwAAMu8AABKvACghz0AgM28AGAbvQDA2jwAAK67AECCPQAADzwAgLS8AAApPAAAZjsAQOG8AADQOgAApDoAAJO7AAA+uwBAmLwAoIq9AIDiPAAAoTsAAIy8AAAeOwAAAj0AYK69AADavAAgv70AgG89ACCtvQAAnTwAAC28AEDEPAAAXrwAADe8AABjvAAAa7wAQEK9AOAwPQAAADkAIHA9AIAPPQAAajwAAIA5AAAcvACgcL0AgFC8AIAovACA0LwAAL+8AGAMPQAAQLoAkPu9AADeOwAAnDwAAIA9AACcOwAgZ70A4J89AMDlvADAJr0AAOU8AICRPAAAHbwAQMC8AMDtPACgzb0AID09AKBFPQAAyTsAYI49AKACvQAAJrsAgH48AADqvABAjL0AgAm8AOA8vQCARzwAQMC8AIApPQDgdz0=","chunkHash":"133774c144e57ded2bfcc1c661e93f00405e73933073f554abff750b279bb77c"}]},"file:///teamspace/studios/this_studio/test_with_deepgcn.py":{"hash":"1428d73c7ecfb3ebaeeb6e2f268bcf69e5269a1ae3fec8debd3d1f00046a13c2","entries":[{"text":"File: `test_with_deepgcn.py`\n```python\n#...\ndef main():\n    #...\n            class BasicConv(nn.Module):\n                def __init__(self, in_channels, out_channels, activation='relu', norm=None):\n                    super().__init__()\n                    self.conv = nn.Conv2d(in_channels, out_channels, kernel_size=1, bias=False)\n                    self.norm = nn.BatchNorm2d(out_channels) if norm == 'batch' else None\n                    self.activation = getattr(F, activation) if activation else None\n                \n                def forward(self, x):\n                    x = self.conv(x)\n                    if self.norm:\n                        x = self.norm(x)\n                    if self.activation:\n                        x = self.activation(x)\n                    return x\n            #...\n```","range":{"startLineNumber":95,"startColumn":12,"endLineNumber":108,"endColumn":28},"embedding":"AIBvvADAqL0AIBg9AID3vACAo7wAwL+8AADzOwBwjz0AIDG9AMCbPADAuTwAoDA9AOAxvQCASTwAgLw8AECbPAAgjb0AYF09AAARPADAozwAAIm8AOA5PQDALz0AgIu8AICAvAAgj70AAIk7AGAWPQBAbz0AgGa9AACxPAAAQDoAkPC9AMCbvABgqr0AgAI9AABauwCAAD0AAKW8AEB6PQBgOT0AQPe9AIDjvAAgFT0AIBo9ACAnvQAAS7wAQO08AACYOwAgVT0AoJ+9AIAdvAAA3jsA4AQ9AGCdvQCAhD0AAOA6AMD3vADAk7wAwII8AACJuwDgX70AAAy7AADnvAAAUbwAwKy8AIAlPABA4zwAAOo8AMD+PABAkr0AABC6AIAEPQCAXL0AAHi6AEDyPAAAGj0AgKk8AABRPAAApLwAoBU9AAC0OwAATbwAAF+8AIDovACAo70A4NO9AGBIvQBgDj0AANs7AABGPQCAabwAgHK9AJCgPQAA0DoAAB09ADDJPQDgGL0AwLg8AIBcvABAxzwAYK49AECCvABAiT0AAAC5AIBIPAAAPTwAAJI7AACmuwAAKz0AoCI9AKBJvQBgHT0AgIg8AMAQPQBgdr0AABk9AGAGvQAA6rwAgF28AMBnvQBA37wAgGO8ACC0vQBAgrwAgLe8AKCJPQAACbwAADa9AOBZvQBAhLwAAHM8AICLvADAq7wAAL+8AABSOwCArr0AILs9AMCWvAAA9DsAgDC8AACOvABAkDwAQOm8AKBIvQBYAD4AELy9AGAMPQDA5rwAAFQ9AAA0PACASD0AYAu9AMBwvQCgR70AYBG9AECSvQAgPT0AMII9ADCKvQBA9jwAAOs8AIA3PACAhz0AAP47AIBdPQBgC70AAKS6ACBKvQAAazwA4FM9AIBHPACAM7wAIEo9ACA3PQBA3rwAgJC9ADDYvQDwk70AAKu9AEClvQAAXT0AYF29AIDMvADAVr0AADw7ABDWPQCgAr0AAAC6AADQugAAkzsAoE89ACDFPQAA5DwAoB09AOBkvQBwyT0AgCm9AICvPACArrwAoGW9AAC6PABgDL0AAEy8AOBdPQAArb0AAMi7AMCFvACQ6L0AAJE7AABTPAAACL0A8Is9AADQugBghb0AAOs8AADRuwDARr0AAMi8ANCyPQCAJTwAABQ8AEAdPQAAkzwAAGu9AADeOwCgLb0A0JW9AAD0PACAT70AAPo8AMCovABAaL0AgCq9AABIuwBgfL0AADw9AMDBvAAAILwAwCI9AIA9vQDA0jwAACQ9AAAouwAAFT0AAIa8AADAvADAyrwAwCU9AICKPACApzwA4JQ9AEDOPADgir0AAGU8AABkvQDgUj0A0JG9AACPvQBgBL0AANi6AADCPABA/7wAoH+9AACePADA4rwAoGu9AADmuwAAkLoAALK7AIDJPABAXr0AwLs9AAAouwCAZrwAAOS6AACmvACAnzwAwAg9APCPvQCACr0AgJA8AED8PABgsD0AAFk8AMCBPABgW70AYAG9AEAFvQAwlb0AgEY8AGAXvQAAo7sAAEg6AICxvAAAoDoAQEC9AJDjPQDA/TwAUMK9AKAvPQCgIj0AACM8AGB+PQBAYL0AgP88AABAuQCAiT0A8IY9AID8PADQhL0A4Bk9AEB7PQAAujwAAIC6AAA3vAAAxLoAAK88AMCgPAAAuLoAIAW9AOA2vQBAIz0AAHu8AADNuwAAFzwAUJc9AACbOwAAU7wAgI68AAAcOwAgEb0AYBw9AOATvQCgNL0AAPQ7AIAovQDgHT0AoBg9AADOOwCgH70AgNo8ACA6PQAAVz0AkIQ9AHDaPQDAeT0AgFu8ADAOPgBA9zwAADU8AACEvAAAwzsAAEY8ALDHPQBQyb0AwAC9AED9vAAAOT0AYAs9AEBFvQBgaL0AcJM9AIBYvACAz7wAgEQ8AIC0vACAaL0AgBg9ADC6PQAAcLoAoAE9AIC8vADAnLwAIHK9ACCFvQDAhj0AwDk9AECmvAAAXjsAQNg8AIARvACAKTwA4F69AACAOACAvrwAAEw8AMCKvABAHr0AQEc9AOArPQBw/70AAJ27AABmOwAAXLsAAIq7AGBDPQCAbbwAAMk8AAAWPQAAq7wAAIa8AAD0ugAgUr0AADA9AGB3PQCAmD0AYH89AEAPvQAAErwAQI88AADxuwAAuLwAQHq9AIAqvACA4bwAoDy9AAAgPQAANzwAYHE9AKBoPQCAPT0A4Gq9AMC5vAAADDwAwEs9AADjPACA+7wAgOU8AICnvACADDwAAN87AABKvQCgfT0AAFu8AMAZPQAA4DoAAFo9AAABPABAOr0AAKS6AADGPABAu70A4C29AIDjvABAgbwAAFG8AGAHvQAAp7sAgK+8AACcOgAw2L0AAAW8AIDNvAAAuDoAQDu9AEDtPQCgxD0AQKM8AEDtvACggz0AwO68AACcvQAgCT0AwN08AIBrPADggT0AgAQ8AAAWPQAA/DoAAM47AABWOwAAKLoAAHC8AAAfvQBAKL0AIAk9AMCSPQCAaLwAAAe8AGCFPQCAOrwAgHS8AIDkvACAnDwAwN49AGBlvQBwgr0AQM+8AOAJPQAAfL0AAIC4AMD9vACAX7wAQPs8ACBevQDA27wAgH28AICRPACApjwAgAY8AAAyvACAyTwAADg6AABuPQCAPbwAQAA9AACuvAAAULoAAMA4AAClvABwgz0=","chunkHash":"a9d0b090f7bdd5b3fc2db9826728f501aab71df363afe6a003f00d3314ba6051"},{"text":"File: `test_with_deepgcn.py`\n```python\n#...\ndef main():\n    #...\n            class SimpleDeepGCN(nn.Module):\n                def __init__(self, in_channels=6, channels=64, out_channels=64):\n                    super().__init__()\n                    self.input_conv = BasicConv(in_channels, channels, 'relu', 'batch')\n                    self.feature_conv = BasicConv(channels, channels, 'relu', 'batch')\n                    self.output_conv = BasicConv(channels, out_channels, None, None)\n                \n                def forward(self, points, features):\n                    # Simple forward pass just to test tensor shapes\n                    x = self.input_conv(features)\n                    x = self.feature_conv(x)\n                    x = self.output_conv(x)\n                    return x, x\n            #...\n```","range":{"startLineNumber":110,"startColumn":12,"endLineNumber":122,"endColumn":31},"embedding":"AICvvACQmL0AQPY8AJCLvQCApbwAAJK9AIBlPAAAPj0AQEG9AKAFPQCgWz0AgHE8AEDEvABAs7wAAGE8AAANPADgWr0AIDU9AEAZPQAgbj0AAKI7AGCcPQDgiT0AAMU7AIBKPADgqL0AACq7AMDMPAAwkz0AAKK7ANCXPQAAqDsAAPq9AMCMvACAZL0AgEk8AEDnvADAhz0AADC9AECJPQAgdT0AoNC9AIBtvQAA+7wAAA08AIAxvQAAwrwAgAk8AIAtPQDgAT0AgJ69AIAZPQCATbwAQOE8APCdvQBgTz0AANU8AECgvABAyrwAYBk9AAAuvAAAy70AAPy6AIAKvACAabwAoC29AOADPQCgMj0AANi7AADIugAAdb0AAMQ6AOABPQDgg70AgK48AAC/PACADTwAANg7AAChvADAPb0AgNA8AAAYPACAj7wAAIw6AOAuvQAgfL0AQKu9ANCFvQAAOjwAAI87AOBIPQAABjsAYGC9AKA3PQAAODwAAJ08AMCJPQDAFb0AQM48AAAmOwDACD0AQIM9AIBzvQAAqT0AAIw7AADGvADAlTwAwL88AIBXvABAMz0AwOg8AIBDvABA6zwAQB49AEAVPQAgO70AAIk8AKAyvQCAqDwAALS6AMC6vAAgIr0AgEi8ABC1vQDA9rwAALC8AGB0PQBAL70AoCS9AIDPvACAbbwAABY7AABAvAAAyrsAAA+9AMD4vACAhL0AsIg9AAC+vACAErwAgIk8AABBPABA1TwAAMu8AMAEvQDAsz0AENa9AEA5PQAAK70A4FA9AAC2uwCA3TwAAIS7AMCHvQAgU70AkJC9AAB+vQCgBj0AwPI8AMChvQBAUD0AgDY8AID6PADwtj0AABC6AOAxPQDAcb0AANi6AMArvQDgNr0AAPA6AAB+vACAWLwAEJ09AED+PADAAr0AIKy9AEAUvgBgML0A8MS9AECwvQCgUD0AgIO9AACtvAAAfb0AwIQ9AOCZPQCAFbwAAHA6AIBOPAAAGL0AYKM9AKCHPQAA3TsAwJQ8ABC3vQAAnz0AQNa8AABQuwBANL0AAEW9AIAKPQCgLb0AgGW8AOAAPQBwqr0AAOQ7AAAuOwCoAb4AAO48AADIOgCAAb0AoAo9AGAXvQAgob0AgDA8AOAQvQBABr0AAJi8AKBdPQBAzzwAwDU9AAC3OwAAfrsAgBG8AECJPAAAq7wAUIu9AEA7PQDARb0AgFo8AIBavACA7LwAwDC9AAByuwBAdr0AgF49AKAkvQDgCb0AQPQ8AOA8vQCAcjwAgD28AAAzvAAAsDwAAB69AACavAAA3LsAwLk8AABLPAAAnLoA8II9AEDFPABAmb0AQJ48AOAgvQCAtDwA4Eq9AGAlvQBgVL0AgNg8AMCcPAAADr0A4Jm9AACAuwCA0LwAAH+8AICGPAAAtDoAoAC9AEACPQBA0bwAYKQ9AIDvvADgFb0AgJg8AEAHvQDAqjwAgMU8ALCIvQAgFb0AAJo7AEAKPQDggT0AAAa7AAChOwCAXb0AgOK8AADsuwAAR70AwDc9AMClvAAAyjsAICg9AEC2vADgUr0AgGC9ANDlPQDAMj0A+AO+AIAKPQAAjDsAwOg8AADvPABgaL0AYDU9AICBvADA5jwAsLI9AAD4PAAAjL0AQIc8ABCIPQAAFrwAADK7AADAOgAAjTsAIA09ACBePQAA/rwAQKi8AEBgvQBgDj0AAHy8AIByvAAgLT0AALE9AABdvAAAATwA4AW9AIDEvABAgrwAAOY7AADAuABgHL0AALw6ACB1vQBANT0AgDg8AKANPQAgOr0AYFc9AID2PAAAJzwAQD89AND4PQDA4TwAAOw7ABAQPgDAhTwAAK88AGArvQAAujsAALk8ACDQPQAwkL0AoGW9AACzuwCA/jwAgNI8AKBwvQAAyLsA4F09AIBzvACA+bwAQIa8AEDuvABADr0AgD28ACBoPQAACDoAoDc9AEACvQDAybwAABi9AOAYvQBgnj0A4Cc9AAAXvQCAJLwAABs8AADZuwBAljwAwIS9AIBSvAAASLsAYCk9AMC+vABALr0AIAg9AACJvACw3r0AADi8AIAwPAAASTwAABY7ALCYPQAA2TsAIB09AID9PABA8bwAYDu9ACAHvQBgZ70A4DE9ABCWPQBgsz0AYEM9AEAIvQAA+zsAwKg8AACGOwAAnDoA4FG9AABcuwDA+7wAoGS9AEChPAAAo7sAkIU9AEDFPABAsTwAgLe8AADDOwAAAAAAsIg9AEDQPAAAgLkAwH89AIBzPAAAeLwAgBS8AIALvQAA2TwAgEq8AADnPACgAb0AQP88AIDfvACAU7wAALC6AECIvABgpr0A4GS9AAAkuwCAJr0AAAQ7AMAUvQAAs7wAQOq8AIA/PABQ1L0AAAq7AEANvQDAE70A4CG9ALD6PQAgqT0AgNY8AADRvACgDD0AYEC9AFCvvQAgoT0AIDw9AECxPACgdD0AAAo8AEAYPQAA0LkAwIg8AKAavQDA3rwAgKi8AACyuwCAkrwAgBo9ALCkPQAgAT0AQPG8AEDdPAAALLsAAGq7AAAJvABAPj0AcPs9AIBDvQCgYb0AgLC8ACAEPQAQsL0AAEK7AAByOwAATbwAABg9AECGvQCAHrwAQMC8AMAtPQAAiDsA4As9AAD4OwCgLj0AACE8AMBDPQDAn7wAwNA8AICDvAAAADwAAIe7ABClvQCQkD0=","chunkHash":"bbce6bbe01367767dfa5163c388720e3390803ee9d9880ba8128eefb0ba8f0c0"},{"text":"File: `test_with_deepgcn.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Test mesh dataloader with DeepGCN\")\n    parser.add_argument(\"--root_dir\", type=str, default=\"data\", help=\"Root directory for data\")\n    parser.add_argument(\"--class_csv\", type=str, default=\"chromatin_classes_and_samples.csv\", help=\"CSV with class info\")\n    parser.add_argument(\"--batch_size\", type=int, default=2, help=\"Batch size\")\n    parser.add_argument(\"--num_points\", type=int, default=1024, help=\"Number of points per mesh\")\n    args = parser.parse_args()\n    \n    # Create a dataloader\n    dataloader = get_mesh_dataloader_v2(\n        root_dir=args.root_dir,\n        class_csv_path=args.class_csv,\n        batch_size=args.batch_size,\n        return_type='pointcloud',\n        num_points=args.num_points,\n        debug=True\n    )\n    \n    print(f\"Dataset size: {len(dataloader.dataset)}\")\n    \n    # Try to import DeepGCN directly\n    try:\n        # Try to import the model directly from the path\n        #...\n```","range":{"startLineNumber":14,"startColumn":0,"endLineNumber":36,"endColumn":0},"embedding":"AAByuwAAqzsAcOE9AABqvQBAx7wAQKa8AIBBvQCAKDwAAGm9AECbPABAEz0AAKo8AABAvAAgRb0AAOg7AOABPQBger0AQPQ8AACEuwCAXT0AMJI9AGCSPQAAHD0AAKk7AIDmvABgdr0AAGM8ACBaPQAgXz0AICm9AGAcPQAAz7sAANq9AAAAOgDQxL0AADa7AADCPAAwiz0AYBa9AICJPACgXj0A+A++AAAnPACAjD0AwLI8AKBYvQAAuLsAAGO8ACBFPQAAn7wAQCW9AHCIPQAAprwAAIO8AEBTvQDgKD0AAOg6AABWvAAA+LoAQIy8AABqOwDgDr0AoBa9AID6PAAAuLsAoGa9AEDBPAAAKTwAoEu9AGAKvQCgFL0AAJA7AADQuQCoA74AALq8AGA+vQCAjLwAoAM9AKBlvQDgcb0AgAM8AOBxPQAAEDsAgP68AAAjvQCAar0AMLW9AGAGvQAALrsAoAK9AFCPPQAAILoAYBa9AOB/PQCANj0AgIg8AAC5PAAAmb0A4Dc9AMDCPADAuTwAYF89AACYvAAAXT0AAO27AACzvAAA6jsAAMs8AACouwCAdjwAgNK8AADtuwDgKj0AwLW8AIDDPACAR70AYEY9AOBFvQBAEr0AAGg7AOBZvQCAdLwAAME8AJDWvQCAA70AgGs8AMBvPQDADb0AAFK9AEDDvAAAsTsAQLG8AICePACwpb0AoCC9ACA8vQDwxr0AQMs8AAD8vADAyjwAAPu8AICcPAAAkjsAAMY7AIBkvQCAfD0AEI+9AJClPQBwnL0AAF49AIBWvAAApT0AAPy6AEBZvQAA4DsAYFK9AAAqvQDA1jwAAPM8AEA6vQBAxzwAQPQ8AAACPQCAZTwAAGA8AABuPQCgn70AALi6AECXvAAAprwAgHE8AIAWvACARrwAgE+8AACoOwAAPLwAcMm9AAAtvAAANr0AIMi9AIBPvQBAwjwA4CW9AAC/vADA/rwAwMA8AKBOPQDAED0AALq8AGAKPQAAXrwAcJM9AOBfPQAAbL0AADA8AGAzvQDoBj4AAMg7AKABPQAAybwAAGC8AMA8PQCAMLwAAGy8AADEOgBAT70AACe8AABgOQAApb0AAEi7AABHvABArzwAoBy9AAC+vACQjb0AAJE8AADCvAAAILsAgDw8AAB/PQDgbj0A4A49AADAugBA6bwAACI7AMDNvAAASDsAQH+9AIAIPQAAwTsAANA8AIA+vAAAb7wAAD28AIDlPAAgZb0AgLk8AKA6vQCAgrwAcIc9AOBFvQBgAD0AAAM9AAB+vADA7DwAgHu8AMDsvAAAlb0AAI48AMDjPADAmTwAgBY9AEA2PQDwvb0AANC8AMAovQAATb0AAKi7AEBKvQCAFb0AADK8AIDtPAAA0LwAAAe8AMCLPABABr0AAPy6AEBOvQDAKr0A8I69AKA3PQDgIL0AIJ49AACBuwAQm70AoFw9ABCJvQDAmDwA4Ho9AED+vADAOL0AAP07AOApPQDAdD0AABe8AEDOPABgTb0AgCa8AIA2vACAHb0AAFM8AGBcvQCAuDwAAFS7AAD/uwCAWb0AACa9AMDrPQAASjwAsMu9AIB5PAAAFLwAwKc8AAB8PABAs7wAQKC8AIAPvADAWj0AIDg9AAAuPQAg7L0AwLc8AIBKPQDApzwAgBc8AABgOQAAxTsAYA49ABCDPQCApDwAAAu8AIA/vACAXjwAgPw8AEByvQCAej0AoC89AECnvAAAr7sAAGA6ACACPQAATjwAwO08AIBVPAAAKD0AoDs9AAByuwCgED0AQFI9AGAkPQDAeb0AQBo9AIDrPABgUj0AAOA5AADTPQBA0TwAoF89AKDgPQCgl70AABA6AADXvAAAW7wAgAg9AOC1PQAAe7wA0JG9AIAivQAgsj0AAKC7AAApvQBAzTwAgBU9AACvvAAAwDkAQK08AICQvQAAOz0AQN08AMA2PQDAhzwAIFs9AEA0vQAAs7wAwIG9AMBOvQAQnT0AAKA9AKA0vQAA4jwAQBg9AIAqPACAE70AEI29AICPvACATbwAABE9AABFvAAgAb0AAAM9AGBnPQDw070AgOC8AIBCPAAAPbwAAK08ANDEPQAA6LwAIIA9ACAQPQCA3LwAoGe9ACAmvQDAV70AYKk9AECKPQCghj0A4HY9AECuvACgD70AgN88AAA9vADA/jwAwAe9AOAovQDASb0AQK+9AECfPABAmrwAoHk9AOAWPQCAhDwAgFW9AADMvACAfbwAIOc9AFCsPQAAU7wAAMU8AABMOwBgOb0AAGe8AAA4PADAfj0AABo7AACQugBAqrwA4Fk9AICLPADA/bwAACE8ACAHvQDA0bwAQIY8AIBbvADA3rwAgCy8AACNOwBA3bwAgHm9AEBWPQAAxr0AAFy8AIALvQAASrwAAD+9AFCNPQAALz0AsIg9AMBgvQAAOj0AIDe9AODQvQCA5jwAAKy6AIC7PADwyz0AQME8AACRPQBAB70AAAQ7AEAJvQDgcr0AQCi9AMCDvACAeL0AAL88AEA/PQAAXbwAgBW9AICzPAAAizwAICK9AIBOPAAgcz0AsAU+AIBgvQAgDL0AwIk8AECAPAAQib0AYCU9AHChPQAAX7wAgI88AECRvAAA0LwAYBu9AIAIPACAWDwAAE48AECavABASD0AAJc8AAAGPAAAZr0AACW8AIAAvAAAUjwAAA+8AOAZvQBQtz0=","chunkHash":"9335a533bad178e11741f737847c32e52954039d6fde8a7077501684a2a9e8dc"},{"text":"File: `test_with_deepgcn.py`\n```python\n#...\ndef main():\n    #...\n        sys.path.insert(0, os.path.abspath(\".\"))\n        from MorphoFeatures.morphofeatures.shape.network.deepgcn import DeepGCN\n        print(\"Successfully imported DeepGCN from MorphoFeatures!\")\n        \n        # Create the model\n        model = DeepGCN(\n            in_channels=6,      # 3D coordinates + normals\n            channels=64,        # Hidden dimension\n            out_channels=64,    # Output dimension\n            k=12,               # Number of nearest neighbors\n            norm='batch',       # Normalization type\n            act='relu'          # Activation function\n        )\n        \n        # Set to evaluation mode\n        model.eval()\n        \n        # Get a batch\n        for batch in dataloader:\n            print(\"\\nBatch shapes:\")\n            for key, value in batch.items():\n                if isinstance(value, torch.Tensor):\n                    print(f\"  {key}: {value.shape}\")\n                elif isinstance(value, dict):\n                    print(f\"  {key}: (dict)\")\n            \n            # Get the points and features\n            points = batch['points']\n            #...\n```","range":{"startLineNumber":36,"startColumn":0,"endLineNumber":64,"endColumn":0},"embedding":"AADPOwBA87wAAGQ9APCTvQAADrwAIDK9AADivACgkD0AoGq9AGAQPQDgfT0AQLs8AIDBvACA3rwAAMY8AOAMPQDgMb0AcJI9AADRPAAgFj0AYFk9AJCZPQDA+TwAAJ27AAD/OwCQh70AAMy6AABsPQCghT0AwMe8AOAZPQAAarsAKAy+AAB4vAAgvL0AACW8AEDWvACgfT0AwFC9AKAiPQAgSz0AwPW9AACwOQDgVj0AYA89AOAHvQCAGz0AAOG7AAAXPQAApDwAAHa9AGCIPQAAvDsAwN68AID8vACgQD0AgDc9AKAyvQCgOb0AADO8AIBMvAAwnb0AAHa7AABEOwCAtrwAoCu9AIBhvAAAwLgAAME7AAADvADgVr0AAIw8AIALvAAApb0AwLi8ACAFvQAgCr0AoGM9AKAxvQDgA70AACI7AAA0PAAAgDwAgEu8AGAsvQDgcL0AsNm9AIA/vQDAiTwAwFW9AMBjPQCA+jwAoBW9AABzPQDAyjwA4CY9AIAiPADQnr0AoEs9AADwOQAgCz0AgCY9AAD3vADQgD0AAAK7AADHvACA8TwAQIs8AACpOwCAeD0AgGe8AACKvADA+TwAQIC8AMChPACAbr0AkKE9ANCFvQCAnjwAADY7APCEvQAABLwAAGy8AJDpvQCAw7wAANw6AEBpPQCAYbwA4E29AEDKvAAADLwAAJi8AKADPQBAeb0AYEq9ACBwvQAAmb0AgC89AECZvACAvTwAgF48AACxOwAA0DkAANG7ALCLvQDAiD0AsJK9AFCcPQBQqL0AcIM9AIAgPADAZz0AAA88AEC4vABAHb0AQHa9ALCsvQAgPT0AQLo8AMDrvAAgCj0AQKw8AACxuwCQnj0AAJM8AMC+PQCQv70AYBQ9AOAEvQBgg70AgEc8AACoOwCgEb0AALA6AIApPABAMb0AEL69AFCRvQAAOL0AMNG9AACHvQAAZT0A4EW9AIBnPACgb70AAFA7ACAtPQCAwDwAAEY8AABQPACA8LwAEIs9AABDPQBgJr0AgH08ACBwvQBQvz0AAJo8AACMOgAAOLwAAKC8AMBZPQAAU7wAwJq8AGAbPQDAi70AgBa8AACAOwCQ4b0AgNs8AAB8uwDAiDwAwMk8AAC9uwAgLL0AYBs9ACA4vQCAGbwAAOQ6AMAMPQDAaj0AAIy7AMDqPAAAYLwAgE08AMCXvACA67wAwJC9AEDyPAAgBL0AgFc8AABKuwAAiDwAgHS8AAB6PAAAVr0AwII9AOAcvQAANrsAgHY9ACAovQBgDz0AAJm8AAC4OgDA/TwAgJe8AOA4vQBARr0AABA6AMAbPQAAijsAwCo9AKAVPQAwo70AAAE8AABIugDAFb0AAB69AEBVvQBgZ70AAAY8AACIOwDgjb0AwPW8AADAOAAACr0AAPm8AAD9vACAubwA4E+9AOAuPQCgM70AcLc9AAAAvAAAZ70AwOc8ACBTvQAAAD0AUIA9ANCmvQAAubwAgEA8AOCJPQAA8TwAwPe8AACfOwBgl70AACy7AKA5vQAAZb0AkI49AIC8vAAA4TwAACK8AEDFvAAwoL0AALm7AODuPQCADT0AkLi9AACLuwCAWjwAQNM8AAA6OwDQsL0AoC89AADcuwBAnDwAwJA9AECpPAAgbb0AgIS8AHCWPQAAMjsAAI+7AICrvABA3zwAgJw8AAAJPQAA3bsAIGy9AGAQvQAAnDsAAHQ7AECzvACgVD0AgGk9AMDOvAAAKLoAANk7AMA/PQCADrwAAO07AID+PACAeDwAIGA9AKAjvQCgLz0AwOg8AIAnPQAQs70AQNg8AMBsPQCAB7wAgDs8ADCsPQAgHj0AALs8ALDAPQCArbwAgGc8AKAfvQBgBz0AIHo9AGCQPQBgJr0AwCC9AIBRvADwqj0AQKA8AKAqvQAAXTwAIEw9AADMOwBAw7wAAM47AOB0vQAA1zsAAA48ALCZPQBA6rwAoCw9ADCVvQCAsbwAwGa9AAA7vQBgdj0AgJQ9AABCOwDACD0AwCw9AAADvACAbzwAgIS9AMCQvADA0bwAIBs9AGA+vQDAA70AwEU9ACAyPQDQ3b0AAGG8AAAKvACgKD0AYBU9ACCtPQAAx7wAQHE9ACBgPQDgkb0A4J29AMCMvADAlbwAsMY9AOCJPQDAOj0AwIA9AIArvQAgED0AQMo8AIB2vQBAhzwAIJa9AEAovQDAEb0A8J+9AAAlPQBArzwAYFw9AEDyPAAAGTwAgPS8AMCWvADgHb0AUII9AMD/PAAAZrwAIDg9AACguQAA+7wAgK68AIAPvADAnTwAIEg9AABUOwCgDb0AIEY9AAAguwBgIb0AAPi6AMDxvAAgTr0AoAC9AIDBvAAArrsAgOW8AAByuwAA4rsA4DC9AMDTPADAwr0AIBe9AABYvQAAMrsAgOm8ANC1PQAgcz0AIGw9AECJvQCgKT0AoGC9AGCjvQCArzwAQOi8AOA3PQBA/TwAAME7AKAxPQDApbwAgCo9AAAMuwAAXL0AALi6AAAuvADAYL0AAHU8AOAoPQAAcrwAAEK9ACAjPQAAzTsAgDi9AECHPACAjjwAUAA+AKAjvQDAgrwAAG+8AIAHPQAAZ70AAHg8AKBCPQBAgLwAgDU9AMA/vQBAG70AgNi8AEChPACAMTwAACw8AEABvQDgBD0AgE28AIBiPADgR70AgKM8AIBaPAAAs7wAACC8AACYvABQqz0=","chunkHash":"6f0dc4cec9d752d2eb14b54ef27dde520bb015ec6798a7eaf6770de1097fa430"},{"text":"File: `test_with_deepgcn.py`\n```python\n#...\ndef main():\n    #...\n            features = batch['features']\n            \n            print(f\"\\nRunning forward pass through DeepGCN:\")\n            print(f\"  Input points shape: {points.shape}\")\n            print(f\"  Input features shape: {features.shape}\")\n            \n            # Run a forward pass\n            try:\n                with torch.no_grad():\n                    out, h = model(points, features)\n                print(f\"  Output shapes: out={out.shape}, h={h.shape}\")\n                print(\"\\n✅ Successfully ran DeepGCN forward pass!\")\n            except Exception as e:\n                print(f\"\\n❌ Error running DeepGCN forward pass: {e}\")\n                import traceback\n                traceback.print_exc()\n            \n            # Only process the first batch\n            break\n        \n    except ImportError as e:\n        print(f\"Could not import DeepGCN: {e}\")\n        print(\"\\nTrying alternative approach by copying DeepGCN code...\")\n        \n        # If we can't import directly, try to implement the model here\n        try:\n            # Define a simplified version of DeepGCN for testing\n            import torch\n            #...\n```","range":{"startLineNumber":64,"startColumn":0,"endLineNumber":92,"endColumn":0},"embedding":"AIB0vABgfr0A4I49AICtvQAAYLwAUJ69AIDfvADAYT0AIFq9AICmPACQkj0AgCQ8AABgvQCAS7wAwOI8AMDoPABAXL0AYEk9ACAUPQDgXz0AACQ9ANCgPQAgGT0AAOw7AACmuwAAar0AAD+8AEAOPQAgdD0AAPA5AOCTPQAAIDsAeBO+AIC8vACAgb0AQIs8AICkvAAgVz0AAEe9AKCUPQAAaT0AEOS9AEDQvABA1zwAAII8AAAfvACAIDwAALo7AABpPQBA9jwAQIW9AMARPQAASrsAgFQ8AABuvQCgBD0AgLw8AADWuwAAnLsAgI48AAAevADQqb0AgPW8AABuuwDAzrwAoAS9AIDQPAAA6jwA4FC9AACkugCwmr0AAAq7AACYOgCwo70AANC5AGAivQAAhDsAoFA9AACAOQCAPb0AoA89AADKOwAASLoAQOI8AAC+vAAQlr0AUMW9ACBtvQBAiTwAQC69ABCbPQAA9zsAoCu9AKBrPQAA9jwAYH09AMCpPAAAV70AIEM9AAC4ugDQgj0AgFo9AAApvQDAej0AAPq7AMCgvAAA7bsAAPg8AABcuwBgiT0AABu8AICcvAAAtTwAAPw6AAByOwBgIb0AIG09AOAsvQAAwDoAAOA5AEAJvQAAqLwAAMW8AODWvQAgAr0AwI+8AFC9PQAAXbwA8Je9AMDpvADAkLwAAK68AAAHvACANTwAACO8AOBOvQCwj70A4JA9AADSvAAAE7wAAKA7AMDGPADAC70AgMi8AMDwvAAw0D0A4Mm9AOAVPQDARr0A0ME9AICTPACAVD0AAK47AKCFvQCAzLwAwGi9AMAovQDAKD0AgNo8AABAvQAAYDoAANs7AACLOwDQiT0AAMi6AMD/PADAE70AAAI8AMAkvQBggr0AADs8AMA8vQCAxbwAYHY9AKAaPQCAo7wAsOy9ACDJvQAAhrwA8K69AIB9vQDAtzwAwDW9AABUuwAwir0AYBY9AABGPQCAbzwAAP27AAD1PADAxLwAUJA9AIAgPQCgMr0AgJw8ALCQvQBQyD0AALu8AABYuwAAgLgAQFG9ACBrPQAAAr0AAJw6AHCAPQCQpr0AwNA8AADAPACg9r0AAPs8AABvvACAWDwAAAs8AEDAvACA3rwAwLo8AEDTvACAE7wAABi8ACBxPQBA0TwAwK08AMCivAAAnLoA4DE9AAADPAAAOLwA0J29ACBgPQBA/7wAAEO8AADyOwAAIbwAACK9AMAgPQBAf70A4I49AKBUvQCABrwAwI88AGApvQDA2TwAAKa7AMAdvQCgEz0AYA29AACcvACgN70AgBe8AKBSPQAAhjwAgG08AIAkPQCwkL0A4Cs9AAC3vACAe7wAQCi9AAAlvACwjb0AAJU7AIBVPABgW70AQOe8AOAFvQAAeDoAAH88AACnuwAAdrsAwCG9ACAiPQAADDsAMJA9AABHvABgC70AQAE9AOAtvQAAFj0AYDk9ADDFvQBAFb0AgJg8AKA8PQDAxDwAAOC7AABSOwDAjr0AAIa8AABVvADAVb0AAPo8AAA1PAAADTwAQBQ9AABOPAAALr0AgH28ALD0PQAgJz0AoMu9AMC2vABAjjwAwJ88AEDdPADAXr0AALc7AIB3vAAAp7sAULE9AIBfPQDgkb0AwKk8AKCkPQAAA70AAPY8AEAZvQAAhjsAAK67ACBUPQAAdrwAAFG8AOCDvQAAWLoAgLg8AIBlvAAQiD0A8Io9AABGOwCABTwAAN07AEClPAAATbwAAPs7AAAAAAAA8rsAoG49AEAsvQCgmT0AIFg9AABRPQAQpr0AgMs8AEAJPQAA1zsAAJY8AADHPQAA4DwAAMI8AIDdPQAAU7wAAOE8AMCOvADAxjwA4H49ADC6PQBwob0AgGq9AMCHvADgdj0AQK88AEBhvQCAdzwAYEQ9AACvuwAAfbwAAHy7AOBAvQBA/LwAgOA8AJCVPQAAizsAQBQ9AJCKvQBAEb0AIGS9AMAnvQDgQz0AYFg9AIDbvAAA2LsAAMu7AAAEuwBA9DwAQHK9AAC0vACAWDwAIGo9AOAovQAgSL0AwKs8AIATPQAQ3r0AQJq8AAAAvABAlTwAwMs8AICMPQDA0rwAIFs9AECfPADAML0AoGK9AICvvACgJr0A4IY9AIDJPQDwhz0A8Iw9AEBCvQDAjDwAgLk8AADDuwCAATwA4Dq9AABQuwDAWb0AwA29AEDHPAAAXLsA4Hc9AOAAPQAAk7sAwAG9AAA4ugDgC70AoEM9AMA0PQBAnbwAIFQ9AADzOwCgZL0AQBC9AICEvABA8DwAACQ8AEClPABgTL0AADQ9AACKOwDA8rwAANY7AMCrvABA1bwAANq7AKAdvQAADr0A4Fi9AMCRvAAAHL0A4BG9AEABPQBA670AABy8ACBdvQAALjsAAEK8ANDmPQCAaT0A4DY9AOApvQCgLD0AYGK9AIDivQBQij0AANC5AKBcPQCgrz0AoA89AIAPPQCAhDwAABE8AACHuwAAWL0AQOC8AACIOgBgBL0AQJc8AFCYPQBgGr0AAP68AADePABALz0AQJe8AIAcPABAmT0AUM09AIAHvQAAK70AgHS8AOAOPQDQoL0AAOW7AABAugCASLwAQFY9ACBIvQDA9rwAQNO8AEC9PAAAbjwAAPC6AAAsuwCAhTwAAHi6AMC7PABgfL0AQOw8AICIPAAAVDwAAL47ACBtvQAA5Dw=","chunkHash":"965ab5995dd711ca84053ef3caf3981f6dc349a11f6dc80814be0ec894ba85b8"},{"text":"File: `test_with_deepgcn.py`\n```python\n#...\ndef main():\n    #...\n            import torch.nn as nn\n            import torch.nn.functional as F\n            \n            class BasicConv(nn.Module):\n                #...\n            class SimpleDeepGCN(nn.Module):\n                #...\n            print(\"Created a simplified DeepGCN model for testing\")\n            \n            # Create the model\n            model = SimpleDeepGCN(\n                in_channels=6,\n                channels=64,\n                out_channels=64\n            )\n            \n            # Get a batch\n            for batch in dataloader:\n                print(\"\\nBatch shapes:\")\n                for key, value in batch.items():\n                    if isinstance(value, torch.Tensor):\n                        print(f\"  {key}: {value.shape}\")\n                    elif isinstance(value, dict):\n                        print(f\"  {key}: (dict)\")\n                \n                # Get the points and features\n                points = batch['points']\n                features = batch['features']\n                \n                print(f\"\\nRunning forward pass through simplified DeepGCN:\")\n                print(f\"  Input points shape: {points.shape}\")\n                print(f\"  Input features shape: {features.shape}\")\n                \n                # Run a forward pass\n                #...\n```","range":{"startLineNumber":92,"startColumn":0,"endLineNumber":151,"endColumn":0},"embedding":"AIDyvACwpr0AYGs9ADCjvQAgcb0A4Gu9AGAyvQAARz0AwDK9AICNPADgOj0AwOM8ACA8vQCACb0AIEw9AICXPACwoL0AwHM9AOBIPQCAXj0AAHA8ACCJPQDAoj0AAMG7AAC1vAAwj70AgI+8AABwOwBAWD0AgB29AABEPQAAtbsAiA6+AECMvABwnb0AQKI8AECRPABgdT0AgBe9AGBQPQBAEj0AgLW9AADfOwAAGjwAwA89AABmvQCACbwAgFA8AACjPAAAYzwAUJK9ACA7PQDAkDwAACg6AOBhvQCAXD0AgNY8AIDLvAAADLsAAPs8AABvvABwnr0AAGO8AABmPAAAB70AQHW9AABDPADA5DwAwNS8AMD+PABAY70AAAe8AADtOwCAwr0AAE67AECCvAAAYLsAgP48AIByvAAA7LwAwEM9AEBhPQAAKjwAACK8AICnvAAgOr0AwOy9ACAxvQAAzTwAQJW8AFCPPQAAbrsAcIK9AKCiPQAA6zwAAKU8AIDRPADAW70AgPg8AADYOgBgKT0A4FU9AACzvACAXT0AAAw7AAAmOwCAwzwAAN87AAD7vADgZz0AgAs9AAC4OgDgYj0AQAM9AAAAOgBgNb0AYCI9AKAVvQAAd7wAQIe8AOBZvQCAJr0AAMK7AKCvvQAgBb0AQKO8AICcPQBAJ70AQOq8AADzvAAAirsAAAK8AAB+PAAgAL0AAJy8AIBSvACgsL0AoH49AIAbvQAA/DoAAHu8AAC/uwDAuDwAgH+8AMAXvQDgvj0AUM69AIAvPQDAp70AwJ89AADMuwDgFz0AAFG8AMCMvQDAibwAQDW9ACCevQAABz0AgG08AJCQvQCATT0AgD89AIBJPACQnj0AAMS6AAC6PABgcL0AAHQ7AGBdvQBA3rwAwM08AAAHvACABDwAYCE9AAD4OgDAnLwAIAa+ABDpvQBA4rwAgMu9ACCbvQBgQj0AAB+9AABkvABwlb0AAFg8AEA9PQAAN7wAgPO8AAAIOwDAFb0AAIc9ACCAPQAAJLwAwII8AIAnvQDgsj0AQOu8AMAgPQAAljsAgNy8AIBpPQCgLb0AgMa8AGAxPQBgOL0AAOk8AIDGPABAxL0A4DE9AIAaPAAAvTsAYAE9AADsuwBAhL0AgF48AOAwvQCA+bwAQKK8AOCNPQAALD0AgNo8AABAuwAAEDoAQKm8AAADPABAAb0AwH+9AEBHPQCAzrwAALA5AIAWvQAgI70AgLi8AIB/PABAQL0AICo9AKAJvQDAsLwAwGU9ACBVvQCAfDwAAAW8AIAUvQDgMj0AgOy8AGAHvQDgJ70AAP08ACAWPQBQgz0AgDo8AAD1OwDQi70AgKY8AGApvQAAuLsAgCm9AKAZvQBgJr0AgLm8AIC/PABAybwAgAy9AAD1uwAApLsAAJ+8AMC5vAAAbLwAYE69AAAEPQBgNb0AMKI9AABIuwCgAL0AAEs8AOAMvQBA5jwAgGE9AHDBvQAAubwAAPO7AIBdPQCAYj0AAKq8AICNPABAYL0AIC+9AADxvADAfb0AQM88AEAyvQAApTsAAM07AACHPABgAb0AQIe8ANDUPQDQgD0AMNO9AACtPACAfjwAAPK7ACAcPQCgYL0AgII8AICFvAAgDD0AoFs9AECbPAAggr0AYCQ9AICCPQCA0LwAwNw8AIBDPAAAyLoAQOA8AED2PAAAYrsAwAO9AIBcvQAAejwAAKy6AIDjvAAQhj0A8I49AIATPAAAT7wAgE28AABguwDA+7wAgN88AIBzvAAA6rsAQCI9AICMvQAAcj0AoAM9AJCAPQCQjb0AwJk8AIC3PAAAg7sAYCg9AKDrPQDA2TwAABY7ADDpPQAA1zsAgEU8AADkvACALLwA4DI9AGDQPQDwhL0AgKa8AAAIvQAgsT0AgAs8AOBhvQAAtjsAQE09AIDqvAAA/bsAAHa7AEA+vQCAxrwAgGy8ACBJPQCAPDwA4BE9AMCrvAAAmLwAMIO9AOBsvQDQqT0AIB49AICkvAAAQLkAgKY8AID4vAAAaDoAQNu8AIAGvAAAPrwAwLA8AAAEvQBgN70AgFM9AMADPQCQ1L0AYAW9AAC2OwAAmTsA4AE9AJCxPQAAkbsAgGs9AABEPACAOLwAAOO8AEAJvQAQmr0AIC49AJCpPQCQgz0AwDo9AAB0vAAgRT0A4DA9AIBGvAAAXDsAIFC9AIC/vACAUr0A4BK9AADePAAAQ7wAkJY9AIDiPAAAcLsAICS9AAA+vABAPr0AAFw9AED9PABAhLwAQAk9AACTvADAjbwAgEG8AIC4vADwkT0AAMM7AICFPADAxLwAgC08AAACOwDA9bwAgIU8AAA0PAAwir0AwP28AMA6vQAAIDsAAPu8AICSvAAgDb0AYBK9AECBPADA5r0AAGy7AEBLvQCADr0A4HK9AGDaPQAwjz0AgEc9AOBXvQAwmD0AgGS9AODDvQDgRD0AgGs8AMAIPQBwrj0AAO07ACA3PQAAkDkAgHM8AIAmvACAdb0AgMy8AACCvAAAEb0AgC48ACCsPQAASjsAAM28AICsPAAAOzwAAOy7AADkOgBgKD0AmB0+AEB9vQBAbb0AwI+8AMDiPACQkL0AgAC8AIDBPAAAYLwAIB89AFCQvQCgEb0AAE+8AEDGPAAARLsAAGg8AICWPADgJj0AgLY8AGBZPQDAEb0AgBg8AABWPACA3LwAACC7ACB3vQAQoj0=","chunkHash":"0bff4a23c40df339d4d8ee105ef8b0c60bf7239cf8c845fa6881f33d67665448"},{"text":"File: `test_with_deepgcn.py`\n```python\n#...\ndef main():\n    #...\n                try:\n                    with torch.no_grad():\n                        out, h = model(points, features)\n                    print(f\"  Output shapes: out={out.shape}, h={h.shape}\")\n                    print(\"\\n✅ Successfully ran simplified DeepGCN forward pass!\")\n                except Exception as e:\n                    print(f\"\\n❌ Error running simplified DeepGCN forward pass: {e}\")\n                    import traceback\n                    traceback.print_exc()\n                \n                # Only process the first batch\n                break\n                \n        except Exception as e:\n            print(f\"Could not create simplified DeepGCN: {e}\")\n#...\n```","range":{"startLineNumber":151,"startColumn":0,"endLineNumber":165,"endColumn":62},"embedding":"AIAOvACQhb0AAEc9AGCYvQBA8bwAYGC9AACNvACAdT0AQOO8AADhOwDQiD0AgFI8AMAfvQAAPLwAADQ7AIBGPQAge70AoFg9AMBGPQAgXD0AgLU8AMDDPQAgSj0AQM88AIAQvADA1rwAAIi7AABePADAjz0AQJI8AOB8PQAAfrsAACq+AED2vADgm70AAC09AIDIvACQjT0AwE29AMCoPQDgaz0AULS9AKAwvQAA2bsAwGY9AEDXPAAAcjsAgBo8AOB0PQCAODwAIGC9AKBOPQBArjwAgDk8ADCmvQAApzwAoBk9AABSvAAAtrsAANU7ACAEPQAwqb0AAOW8AACKOwDAibwAgGG9AADMPADAhTwAgEC9AADuuwBQi70AAKg6AMChPACggr0AgFC8AMDDvACAMjwA4Eg9AADAuADAEL0AICw9AIBnPACArzwAgEQ8AACWvADgNL0AkLu9AIBqvQAAaLsAIEm9AGCEPQAAELsAgLi8AID2PAAA5DwAoFs9AABEOwAA/LwAYBI9AADIOgDAYz0AIEY9AACHvABAUD0AgAa8AAAYvABAgrwAADC6AECZvAAQoz0AgBo8AECMvADA3zwAIEc9AACpvABAar0AwDM9AMC4vAAAMDsAAGY7AIAzvQAABb0AQNq8ADCyvQDAB70AwLo8AGDyPQCA4bwAgDy9AEDBvACAqrwAgFm8AIAvPACAK7wAgMC8AKAbvQCAWr0AIGo9AIDwvABAgDwAgAw8AMCePACAh7wAAP28AEC/vADwoj0AQMa9AICQPQDwlr0AYJg9AABGPADgTD0AAEw7ACCSvQBgAr0A0JK9AGBVvQDgTD0AAHg7AEBqvQCARDwAwH89AAAyOwCAjj0AAHy7AACJPAAgYr0AgHg8AAAfvQDAXL0AAMC5AIA7vQAA3bwA4Cs9AIAAPQDAprwAgOa9AHDSvQCgar0AMKW9ABCJvQAAST0AAAi9AIALvACwib0AgOE8AIAtPQAANDwAwNS8AADmPADgE70AwKU9AMD7PADA9LwAgBI9AEAXvQBQqD0A4AC9AAD2uwAAFrsAACm9AKAJPQBAmrwAAI27AMBQPQDgRr0AAJg7AAA5PADAwr0AAL08AABPvAAArTsAANA5AIAcvADA3rwAQKw8AICpvACAu7wAACG8AGCKPQCA6jwAALU8AACKuwAAgDkAgFs8AABwPACAOLwAwHW9AOA+PQAAersAAEK7AECFPADgJL0AYBC9AEAJPQBQhr0A0K89AAB4vQAAibwAAAo8AEBHvQCABTwAgBi8AFCIvQBAqDwAQDq9AAA0uwBAwrwAAJ67AGA+PQCAPT0AAEK8AMCxPABQmb0AAP88AABlvAAAprwA4CC9AACFOwCAdL0AAN07AAA3vADA47wAABu9ACAavQDAzDwAgEk8AABiuwAAHjsAwAq9AAAqPQAAhLwAcIU9AMCsvACAHr0AgKg8AIC3vACA3jwA4D09ACDivQAAjbwAAMA7AGA4PQCgKj0AAHA8AADcPADAWb0AAOM8AACgOQDAd70A4Bs9AAAZvACAfDwA4CQ9AIA5PACAEr0AAJa8ALDfPQDAhDwAMOm9AABSOwDAozwAAMw6AACVuwBgU70AgHo8AACsvAAADTwA4Jo9AEC8PQDwlL0AAEg8AHDCPQAA6LwA4BA9AEDGvAAAobsAAP87ALCVPQAAeDoAABC7AJCfvQCALDwAAEY7AIB2vABQpj0AIG09AICVvACASDwAwK08AAAkvACAs7wAQAo9AMCaPACARDwAYEs9AGBwvQCAjD0A8Ik9AOBaPQBgl70AgKg8AECqPADAu7wA4AU9AJDIPQAAhDwAwL88AED9PQAAJTwAQCU9AFCAvQAAmzsAAME8AADDPQDAu7wA4G+9ACA/vQBgbj0AYDI9AEBGvQAAODoAgK08AADWvACAcbwAgEg8ACAfvQCASrwAAMc8AECjPQCADDwAgNI8ACAGvQCAO7wAAFe9AECrvABAOD0AoDM9AADrOwDA77wAgB28AIA0PAAA1LoA4DC9AMAZvQAAuLoAYI89AEAVvQCAfb0AAHI7AOA6PQBw3b0AADW9AADRuwBANz0AgKo8AMBUPQBAkbwA4GI9AECmPABABr0AQHS9AICcvAAQhr0AUKg9ADDCPQDgGj0AgFg9AIDcvAAAqTsA4Ds9AACxuwCArzwA8KS9AID7vACwrL0AAJe7AAAPPQCAz7wAAFo9AIBqPAAA7jsAYAq9AABkvACgQ70AgCA9AADVPACAO7wA8Ig9AAB+OwBgJr0AgEW8AMBAvQBAPD0AQPg8AOAEPQDgKr0AAMg8AAAWPACAY70AAIC4AMAUvQCgP70AgH+8AICjvACA8LwAACO9AAB9vAAga70AoCS9AEDrPACgyr0AAGK7AIBJvQCAxbwAQPW8APACPgAAdj0AwLQ8AAC6uwBAJj0AoGu9AID+vQBgcz0AANS7AMAmPQDwvT0AAO08AAC0OwAAizsAAJw8AABovADQhr0AANq8AMC3PABAjbwAAGA8AGBbPQAAELoAYCW9AIBEvADA0zwAANa8AACAPAAQjT0AYPE9AIBevQBALr0AYCC9AAB1PQAQj70AwNi8AMCEPABAhrwAgGg9AGBGvQCgE70AAKs7AACHPAAAwDsAAI67AEDMPADA+TwAAMe7AMA5PQCAMb0AwIk8AACgPAAAxjsAACO8AIB7vQDgQz0=","chunkHash":"4abe9e886d4206f994ab21f9a0df5834be125577e9c0ac85ff37859955a5c2b0"},{"text":"File: `test_with_deepgcn.py`\n```python\nimport os\nimport sys\nimport torch\nimport numpy as np\nimport argparse\nfrom tqdm import tqdm\n\n# Add MorphoFeatures to the path so we can import from it\nsys.path.append(os.path.abspath(\"MorphoFeatures\"))\n\nfrom dataloader.mesh_dataloader import get_mesh_dataloader_v2\nfrom dataloader.morphofeatures_adapter import adapt_mesh_dataloader_for_morphofeatures\n\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":169,"endColumn":0},"embedding":"ACAyPQAAZDsAGAA+AICHvQDAobwAYBy9AADCvADAHj0AQAO9AABKPABgLD0AgGg8AAAdPAAAbL0AQKI8AECCPQBATL0AAL08AIDOPADwgD0AgEo9AACuPQAA9DoAQJu8AABWOwAQrb0AANs7AJCaPQAQoD0AoBG9AEAYPQAA3zsAcKO9AEAsPQBAlb0AgG+8AAC9OwBgWT0AAM68AIBcPADANj0A+Aq+AIAtPABAgzwAgMs8AOBHvQBAqjwAgIy8AIBjPQAAyzsAgC+9AIDIPADAF70AAPI8AGAAvQCApzwAAGC5AIDKvAAApbsAQI+8AOAFvQAAhr0AABS7AMCDvAAAyTsAABG8AMD1vACACrwAAIm8AAC5uwDgUb0AIBs9AACaOwDAwL0A4As9AMDKvACAWbwAwJU9ACAHvQDANL0AALi7AGBAPQAArDsAAHC8AIBKvQDgb70AkPi9AEC6vABAu7wAsI69AEAtPQCARjwAoDW9AGAvPQDAED0AIBk9AAAgPAAQj70AAE49AAAQuwAAHT0AICA9AKACvQBwsz0A4BI9AICOvADAQT0AANS8AMD1PACQlD0AwMu8AAA4ugCANj0AACO8AEBfPQAA47sAwLk9AIAYvQDgPj0AAMc8ADCIvQAAsDkAABY7ACC4vQAA4bwAAG48AAAvPQCgMb0AUKa9AABmuwDA6bwAoAi9AIAiPQCgN70AwJC8AEA9vQAgwr0AgBg8AACluwBAyD0AwAy9AIASPAAAUjwAQNw8AKBQvQBADT0AgE69AJC6PQBgkr0A0Ks9AAANPAAA0DwAgH48AMCwvADAtzwAYEC9AFCIvQCgID0AAMs7AABquwBAGT0AAL87AIBEvADATz0AYFM9AJCwPQBwoL0AAM87ACBovQBgIr0AgAs9AMDZvACABbwAAGW8AEAMPQCAIL0AgDC9AIC0vABgTL0AYIa9AEBJvQCgQD0AQOu8AABePACAOr0AAJq8AIBaPQDAtzwAAJk8AMBPPQAATjwAAJc9AOBPPQAgCL0AICU9AEAsvQAw9D0AAIC5AABoOwBA0bwAAEM8AGByPQBgOD0AABu9AABZPAAgZr0AwPK8AACFvAAQtr0AAF68AACrPADAKj0AQMM8AGAnPQBAG70AgGo8AIDWvAAAOLsAwLQ8AEBZPQAQnz0AgC08AED7PABAvLwAgBs8AAByvAAAmrwAoJW9AAD3OwAAeDoAADo7AAAOPABA0LwAgA28AADUPADARL0AgNU8ACAyvQCAfbwAYIs9AADGvABA4zwAALQ7AMCpvADAszwAAFW8ACAfvQCAqb0AAIo7AACDPAAAXDwA4Ac9ABCfPQBQ0L0AAGa8AACYuwDANL0AALe8AMC0vAAASLwAQLc8AACwuwBgYr0AgGC8AIBpPQAgNL0AQAy9AIC7vACA3TwAgGW8AIDBPACAQbwA0JE9AADoOgDw4r0AQDw9AGCBvQAAdrsAIFg9AMCtvACAaLwAAOc8AGAePQBA5zwAICy9AADAOADADb0AQMM8ACA3vQDAab0AgJe8AICOvAAAeTwAANa7AIA+vAAgMb0AgGW8AKDSPQBA7jwAsNS9AECTPAAAHTwAkIM9ACAPvQDAOb0AABi6AIAZPABgET0AwOw8AIAWPACQl70AAA+8AKByPQAAYrsAgIs8AABnvAAgWz0AAI07AECvPQAAfrwAsIS9AGBlvQCAGzwAANQ7AEApvQAgBT0AYGk9AIBXvAAAgLoAgEG8AADCPABALL0AULo9AGALPQAABzwAoEY9AOAPPQBwhj0AoFI9AMCWPADgub0AwLc8AAAZPAAACrsAIDc9AACuPQAAMD0AAKW7AFC6PQAAB7wAAJ87AADAOADA9zwAwNA8AECNPACAV7wAABC9AMDbvACggj0AAFc8AGAUvQBArDwAQCY9AABWPAAAkTsAADU8AKAEvQBAYz0AAJq8AMCHPQCAoLwAgPc8AAByvQDAfb0A8JS9AACEPAAAMDwA4GI9AEC/PABgDD0AIEo9AADhuwBAoLwAAFK9AIACvQBA7rwAwE89AAAtvQAABb0AoAI9ABCCPQDwpb0AANa7AGB6PQAAkLwAAEI9AFDQPQAA9DsAQEo9AOBKPQAAjbwAoJm9AACyvADAtbwAQKU9AEC1PQBQjT0AANU9AAA0vQAAJr0A4EU9AOBpvQAA/DsAQDq9AABguQAA1LwAAJq9AEDcPAAAsDsAoFk9AAAwOgAA9TsAgMS8AACqvADAPb0A4JM9AEAWPQCAy7wAAK08AEC8vACA07wAMKm9AAASvACAXT0AgP88AACxOwAAE70A4KM9AIDmPADAYb0AQOm8AECXvACAUrwAABC6AKATvQBgCr0AgDC8AAAQPAAAQrsAgLy9AIAOPQAw5r0AgDq8ABCAvQAAZD0AYCK9AICPPQDA8TwAQDY9AEAJvQCQhD0AMKC9APCYvQCAsTwAgOc8AICTPABgZD0AACo7AFCDPQBAh7wAAGk9AACEugBQjb0AgCU8AABwvADgSr0AAOQ6AACYPACAxrwAwPC8AOBzPQCAFT0AEIe9AMAtPQDANT0A8Cs+AABrvQCAbTwAAIQ7ACAUPQCAYL0A4Ag9AKBrPQBAgbwAAIY7AADkugDA8rwAgA69AMCovACARDwAgDG8AAD0ugCAWDwAAIC6AAAvPQDgY70AwNQ8AECdvABA7DwAwKK8AIB8vABwgj0=","chunkHash":"fff119b3ce83525d2b936291bd20022a86907c7095f2d8b59ce2008762f01d41"}]},"file:///teamspace/studios/this_studio/train_all_models.sh":{"hash":"bee8de077934abe4108074dd13f68d8105e1c9634415df21efa551daf9fc16a5","entries":[{"text":"File: `train_all_models.sh`\n```shell\n#!/bin/bash\n# Script to train all MorphoFeatures models sequentially\n\n# Default values\nBATCH_SIZE=2\nEPOCHS=50\n\n# Parse command line arguments\nwhile [[ $# -gt 0 ]]; do\n  case $1 in\n    --batch-size)\n      BATCH_SIZE=\"$2\"\n      shift 2\n      ;;\n    --epochs)\n      EPOCHS=\"$2\"\n      shift 2\n      ;;\n    *)\n      echo \"Unknown option: $1\"\n      echo \"Usage: $0 [--batch-size N] [--epochs N]\"\n      exit 1\n      ;;\n  esac\ndone\n\necho \"Starting MorphoFeatures model training pipeline...\"\necho \"Using batch size: $BATCH_SIZE, epochs: $EPOCHS\"\n\n# Function to modify config file with new batch size and epochs\nupdate_config() {\n    local config_file=$1\n    local tmp_file=\"${config_file}.tmp\"\n    \n    # Update batch size in loader section\n    sed \"s/batch_size: [0-9]*/batch_size: $BATCH_SIZE/g\" \"$config_file\" > \"$tmp_file\"\n...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":36,"endColumn":0},"embedding":"AAAFPQCAbjwAMMA9AADnvQBwkL0AQIq8AAC0OwDApz0AwM69AIBOvACAM7wAgGY8AICnvAAAAb0AAAc8AGB2PQAAHbwAULA9AIDYvACwsT0AoCE9AEAUvQBgBD0AAGG8AAA4OwDArrwAAI+8AAAXPQDAcD0AoD29AEDSPACA1bwAkNu9AMDsvABAUr0AQK68AACqOwAApjwAwJq8AADCOwDgJT0AsJu9AACNuwDgED0AACA8AMB7vQDAEj0AIAi9AAC3OwAgKj0AgMY8AOBfPQCAC70A4BO9AKBvPQDgH70AQGM9AABVvQCgR70AAMy6ACAqPQBA4r0A4IA9AAB/PADAjT0AAP47AICTvQDgK70AQAA9AMCwPACAzrwAQIm9AOACvQAgMz0AgGE8AMDevABAvr0AIHs9AEDkvACA5LwAgLs8AOAnPQAAmbwAgII8AADCuwAAabwAAH+9AECXPABgF70AoJ29AIAaPABA3zwAELq9AIA+PQAwpT0AQJq8AGAjPQBA070A4Cw9AOBfvQAgnz0AAMY8AIBJPACAOjwAgDe8ACBtvQCAJjwAAD47AACauwDAcj0AQM68AEDxvACA9jwAgN29AECGPADgBb0AAAk9AGAOPQCgC70AwLE8AMBjPQDAkz0AcIe9AABZvQAAarsAAMO8AAB4vAAAIzwA0IW9AKB4vQAA7LsAABw8AIBrPAAAH70AQP+8AGADvgCAtbwAAG08AADIvACgyT0AgBO8ACAhPQAA5LwAwOc8ADCbvQAAsrsAQJm8AMCIPABgTL0AwAU9APCGvQAAOjwA0Iw9AOCJPQBgBD0AACe9AEAxvQAASD0AYF69AAC3PADA0bwAQLM8AMBFvQBgOz0AQGO9AGBkPQAwgL0AgMw8AMCJvQCw370AIJg9AECtvACgJz0A+BK+AKA4vQCAgLwAEJK9AMC3vQDATr0AAMU7AGA4vQAgnj0AsNm9AGAlPQAAILwAgAK9AACxuwDAyjwAgJQ8AADVPAAAhbwAAPU8AIBzPABA9DwAQPA8ACAnvQBgUj0AgJ28AADlOwDgST0AAMK7ACA2PQBA7jwA8Iu9AEDmvACgrb0AgE48AOAXvQCAtLwAwPg8AMDAPAAAcj0AgCi9AADQOQAAQL0AAMq7AMAYvQCgSL0AgJC8AEASvQBgSD0AMIu9AACAPQCQqj0AIDs9AACFuwCAMjwAEIu9AIBBPQCAxrwAgD08AACdOwCAIjwAwCs9AADMOgCAKb0AgPO8AIAjvQDA3rwAAIa7AAD0vACgWj0AwAW9AGAlvQBAqzwAgBU8AECTvADgk70AQIw8AIB8PADgTr0AAKQ8AAD6OwAgQr0AAEO8AIDjPACAIDwAgEK8AOB5vQAAnzsAAEy7AEBvPQBgUb0AsNQ9AAApPAAALjsAIAC9AACRvACAKD0AAOm7AIBmPABgSD0AAPQ6AEAUvQBgD70AAEi6AECpvABghD0AAKU7AACiPABANb0AwD69AMAzPQAAjDwAAHo8AMCQvAAAIbwAgJQ8AMCiPABADL0AAHU8AACZPACAQrwAQLi8AACruwCAJbwAAMq8AAAMPQAA/TwAgBm9AACNOwCAF70AIC09AKBNvQCADzwAAMI7AICYvAAAyLwAQIM9AAAhPABAY70AoC29AAAcvQDAJ70AwPs8AGDNvQDA/bwAAOE8AEDHPQAA8TsAUJW9AIBcvQAAjLwAANc7AAAmOwDQoT0AQM68AAC0PAAA37sAICw9AIALPADgar0AQDK9AIA2PABAgDwAAIG7AIDLvAAA5DwAYGU9AEBkPQBAs70AwIm9AECEvQCAW7wAAKW8AAA7PAAAxbwAACE8AAAovQCA+zwAoHW9AIDMPACAEr0AAOe7AIDKPADAprwAwIe8AABAOwAArLoAAGY7AAD/vACwrz0AYBM9AECWPAAAdD0AADs8AABzPABAuDwAAPc7AIB+PACgAz0AgAa8ACA2vQAAsrwA4Eu9AOBevQDAsjwAgCi8AIBYPAAAcT0AwEg9AIAyvQCAjzwAQNO8AKA1vQDgIb0AQPG8AAA4uwAAXTwAgCu8AADKPAAQoD0AsJU9AMDEPACwlj0A8IE9AMB9PQDAFD0AgE08AEAdPQBAhbwAgIq8AECevAAAHz0AAJ27AOCDPQDAMz0A4Ds9AAAwuwDgPz0AwHk9ANCHvQDgCj0AwKi8AADAuACAMjwAALe8AID6PABgKb0A8IE9AAB3vAAQkr0AQJG8AMCOvACg870AoEc9AAAyPAAA4LsAAGI7AABAOQAgNr0AwPq8AADKPAAAKT0AYCI9APClvQCAtTwAgB68AEDvPACA27wAADk8AAA5vACA5TwAAKM8AICtvQAApTwAUNW9AJCGPQDACb0AAI+9AADauwDA0rwAwDy9ACAKPQAgWj0AgM88AOBIPQCAA7wAmBI+AIB5PAAQ2j0AAB89AACmuwBAlbwAAFy8AAC/PACAZ7wAgPY8AADoOgBgEr0AwAY9AICSvQCgX70AAHI7AAAnPACAa70AIE+9AAC0PACgGL0AgGC8AEDaPAAALrwAAAW9AAAaPQAAJLwAAP09AKBpvQCAdjwAAK87ALClPQAAcDoAYFo9AMBpvQAANLwAAEA7AACYvQCgH70AADk8AACcOwCAG7wAoDi9AIDCvAAAr7wAoH89AEALvQBAx7wAQKu8AAAUvADgsr0AoEe9AEA+vQDAkbw=","chunkHash":"e89c740a06d28d6c71dd7c37999e07b7b38db151fd66fc59049ff629a3824890"},{"text":"File: `train_all_models.sh`\n```shell\n...\n    # Update epochs in training section\n    sed -i \"s/epochs: [0-9]*/epochs: $EPOCHS/g\" \"$tmp_file\"\n    \n    # Replace original file\n    mv \"$tmp_file\" \"$config_file\"\n    echo \"Updated config file $config_file with batch size $BATCH_SIZE and epochs $EPOCHS\"\n}\n\n# Update all config files\nupdate_config \"configs/shape_config.yaml\"\nupdate_config \"configs/lowres_texture_config.yaml\"\nupdate_config \"configs/highres_texture_config.yaml\"\n\n# Train the shape model\necho \"Training Shape Model...\"\npython train_morphofeatures_models.py --model shape --config configs/shape_config.yaml\nif [ $? -ne 0 ]; then\n    echo \"Shape model training failed!\"\n    exit 1\nfi\necho \"Shape model training completed successfully.\"\n\n# Train the low-resolution texture model\necho \"Training Low-Resolution Texture Model...\"\npython train_morphofeatures_models.py --model lowres --config configs/lowres_texture_config.yaml\nif [ $? -ne 0 ]; then\n    echo \"Low-resolution texture model training failed!\"\n...\n```","range":{"startLineNumber":37,"startColumn":0,"endLineNumber":64,"endColumn":0},"embedding":"AABOuwCAbzwAwL49ADCdvQBgEL0AgN08AOAePQCgTj0AIKK9AIAnvACAvrwA4EE9AIDEvACAs7wAAMS8AAC8PQAAArwAsIA9AOAfvQDAUz0AYG89ACBovQDgOT0AwJ+8AADHuwCgdj0AAF88AMABPQBAtjwAgI68AACNOwAAvrwA4Le9AMBJvQDA1bwAAIe8AIAzvQAAYDsAgIY8AKBPvQDwnD0AAAK9AAAHPACA+DwAAIk8AOAqvQBAYr0AgIC8AIBLvABgIz0AoDs9ANCfPQAAY7wA4Ky9AIAGPQAgTb0AYC49AKANvQAAYLkAAJG8AKBuPQAgor0AgGg9AKBAvQCALj0AAAu9AAA2vQDgUb0AgIM8AAAkOwAANLsAgCm9AABEPAAAXbwAcIY9AABmOwBgbL0AcI49AABzPAAA+DoAAMA7AADgOgAALbwAQF49AABcOwBAtbwAEJy9AABKPADgEr0AAP28AACcvACA9jwAYAS9AABKPQAgMz0AgH29AEBLPQCgcb0AgE48AEDavACAcz0AANI8AAC4uwCAiTwAQNO8AEAKvQDAkLwAAAI9AEC4vACgMj0A4HW9AMClvQBAIT0AQJu9AABqPADA57wAQAK9AABgugCAuLwAAMA4ACACPQAATT0AQOC8AMAvvQBADT0AgBy9AACauwBAsjwAUK69AAAvvQAAzDoA4A09AADbOwBAXb0AAHG8AADDvQAAcDoAQDE9AIAAvQAAjD0AwNS8AECXPQDgr70AgN88ABCrvQAAhDoAIFi9AECWvACAG70AAA67AFCRvQBgBz0AwOg8AOBDPQBgGz0AQEm9AAARvADgEz0AwDS9AIBevACA2bwAQL08AABsvADgaD0A0I29AAADvAAAMr0AADI8AMCXvQDw/b0A4J09AACwuQAAvTwAyA2+AEA0vQAAMDsAIJ69AMA4vQDgG70AABQ7AKCLvQDAKz0AQO29ACB7PQBgC70AAFC9AIAxPACgST0AADy9ACAhPQAALb0AgBq8AOAOPQCAzDwAgJ08AEAcvQCQgT0AAHC8ACAAPQDAPj0AoA89AMBrPQCAJTwA8Im9ABCOvQCgbr0AwP08ACAsvQDA8bwAALk7AAAiuwDA1TwAQK+8AAAYvQBAJb0AADi6AICZvABAaL0AoCO9AACiuwAAxDoAABy9AGC3PQAguz0A4Ck9AAAcuwAAYjsAQI29AIDEPAAAWDsAADs8AIAdvAAA4DkAAFc9AIDePADgnr0AAMO8ACCBvQAAT7wAQOE8AOBavQAghT0AgOy8ACAPvQCQkj0AgEg8AACyPADg6b0AYC89AACQuQCARL0AAKk8AABavACQmL0AAJm7AADDPACAnLwAUMu9AEA9vQAA4bsAgEo8AKCBPQAgXb0AoGM9AIDvvADQoz0AgPa8AADMOwCAODwAMIe9AIBQPAAAjD0AgGU8AMCovAAAujsAAIe7AABoOwDAyT0AQOI8AABUPACAy7wA4E+9AMCjPABASD0AAOw8AAB+PADgLL0AQNs8ACASPQCgbL0AQIg8AAA4ugBQmb0AAEo7AICmPAAAgbsAQFC9AICpPAAAYrwAwES9AMCCvAAAK70AgBi9AAAwOwBAKj0AAGA6AECxPAAAGL0AYIk9AAAQOgBgCb0AAAS8AIC6vABA2rwAgFA9AMDtvQCgar0AwNo8ADCdPQBAlLwAgB+9AKCbvQAA7rwAAEa7ACAFvQBAgz0AQJ+8AAB1PADAtrwAgOE8AADzvAAAzbwAgKk8AACvvAAgKD0AgOs8AOA0vQAALz0AADI9AEBrPQAQgb0AEKe9AGBIvQAAKLoAgAG9AABGuwCAZLwAABk9AABwvQBggD0AgH88AAB8vACABb0AABa9AADHOwAAG7wAIDK9AAAWOwCAAzwAgAs8AKCpvQDAXT0AoGs9AACyPABgKD0AYDk9AACAuQBArjwAALQ8AAD/OwDgUT0AgFW8AOCWvQAANDwA4JC9AEAavQCAUD0AgA48AIDAvACQmT0AAFU9AICMvAAARD0AgGk8AACEvQCABr0AwIC9AOAcvQCA4zwAgPa8AKASPQAAzTwAAKg8AICIPABg0D0AICM9AEAqPQCAjz0AgEQ8AOBJPQAAKzwAAOu8AAAivQCAnTwAgEw8AKDGPQAwsj0AYDA9AAC8OgDgWD0AkI09AMByvQCACD0AoDO9AMCiPAAAO7wAAB09AGAdPQCAXr0AACs8AABevQAgOb0AAEa7AABHvQAwo70AgEI9AMCZPAAA/rwAgAs8AMDivADA2LwAAHo7AACsugCA4jwAIBw9AKBMvQCAebwAYF29AMCuPABAubwAQLA8AABeOwDgCj0AAM87AOCAvQCAcbwAcKe9AICXPQDADL0AgMG8AIC1PAAAk7wAYAi9AEDvPACAcTwAAAA7ALCNPQAAh7wAMBk+AACVOwDQCj4AIGU9AIADvACAojwAANk7AADQugCABDwAwO08AIAqvADArL0AgBq8AIAJvACABb0AAO68AEDoPABgUL0AgJC9AABFvABA+jwAwJM8AACZPAAAt7wAwF69AOA5PQDARj0AQMY9AOCIvQBAhTwAABI9ADC6PQAAxDoAEKQ9AABHvACASLwAAIO7AICQvQCAGb0AAIq8AICDPAAAkLkAICS9AABOOwAA4DsAQJc9ACA8vQBAAr0AALG7AABkOwAAOb0AAKk8AABqvACAuTw=","chunkHash":"74999a033f6f1c10adef38659300d12520c27fbc5dc2c2117f529f75dd1ca2ce"},{"text":"File: `train_all_models.sh`\n```shell\n...\n    exit 1\nfi\necho \"Low-resolution texture model training completed successfully.\"\n\n# Train the high-resolution texture model\necho \"Training High-Resolution Texture Model...\"\npython train_morphofeatures_models.py --model highres --config configs/highres_texture_config.yaml\nif [ $? -ne 0 ]; then\n    echo \"High-resolution texture model training failed!\"\n    exit 1\nfi\necho \"High-resolution texture model training completed successfully.\"\n\necho \"All models trained successfully!\" \n```","range":{"startLineNumber":64,"startColumn":0,"endLineNumber":78,"endColumn":0},"embedding":"AIAbPAAA+zsAwMQ9AEC3vQDAEL0AQIa8AIBwPACAUj0AoD29ACAmvQCAYbwAQG89AOAAvQAAKrwAAOK8ACBRPQCAEb0AwJY9AAAFvADA7TwAoMA9AACCvQAAhjsAYGa9AADpPADAVz0AQIK8AADUuwAAtDwAAGI7AMCCPACA97wAgCK9AOBgvQAgSL0AwKq8AAAXvAAAZTwAAK07AKB8vQCgnD0AAIk7AACxuwDgND0AgAg8AMBpvQCA27wAAKi7AOBHvQDA1zwAAGy7AFDKPQCA5bwAAGi9AEAyvQBgVb0AAJg8AMDmvAAQlr0AgFG9AIBRPQAAR70AYHM9AOAfvQCASD0AwNW8AOAkvQBglL0AADU8AIAbPABA3rwAoDG9AADkuwDAkzwAcII9AACOvACAIr0AYC89AMCOvAAAjjwAAAQ7AACQOwBAqrwAALM7AAAYvADARL0A4Iq9AEDjPACAg7wA4Ai9AEChvACAmD0AAHS7AAD2PAAAdDwAsJW9AACAOwBgCr0AgJC8AIBBvQAAJz0AQLc8AECBPAAA1LoAAOq8AOAbvQDAgLwAAHu8AIAtvAAgiz0AwOC8ABCKvQAwgj0AICG9AACjuwDACr0AAL+7AECZvABAC70AQI48AAA2PABwmz0AoGK9ACCdvQCA8zwAAJ47AAAQuwCAc7wAYHa9AABQvADAjzwAgDM9AICRvAAAQL0AIAq9ALCvvQBAHr0AANi7AAAkvADwvz0AAJy8AOA8PQCgiL0AgBw9AOBHvQBAlzwAAKa7AMCRvACgOr0AAKe7AGBuvQCgUT0AYCg9AIBRvADABD0AoHu9AGBwPQCAXD0AQC+9AIBevACAy7wAAOw8AIAKPABAaT0AgN+9AEDovACgF70AIEA9AEBmvQDAqr0AoEw9AIBxPQBAjbwAACO+AKASvQAAOLwAwP28AIB6vADARL0AwLy8AGBYvQCALD0A4KS9AECiPABAtrwAQFS9AABuuwBAMj0A8Ie9AIDAPADgiL0AgHM8AECBPADgGT0AAGw9AIBhvABgMz0AwEk9AIDKvABAOD0AgBM8AIB/PQBAzjwAAO+8AOCMvQCAG70AAG68AACXvAAgVb0AgCK8AIATPABAET0AADa8AAD3vACAxLwAAKS6AIBePAAAirwAQIE8AIAdvAAAU7wAgBO9AEB5PQDwkz0AwEc9AAAgOQCAeDwAEJ69AAA1PQAA3bsAQJg8AIAkPAAAQz0AwHw9AADkPABAtb0AgA88ACASvQAAMDoAgFO8AKCHvQAAtjwAQIc8AIBsvADQnT0AACC6AABWOwCg3L0A4Co9AECtvABAX70AQKg8AAD6vAAgk70AADY7AAAHPQAgQ70AoJy9AGCHvQAgAr0AgAU8AEBHPQCAur0AIB49AAC9uwDAqD0AgOO8AMDNPABAGb0AAI68AABZvACAsLwAgHI9AAAnvQCAOLwAgJg8AIB8PAAgMz0AwAs9AGBFPQCAUbwAALC8AACGPQCAfT0AgI08AADcOgDgUb0AAPs8AIAJvABgW70AQDk9AACRuwAgSr0AgJS8AEAMvQDAkTwAQDG9AADOOwAAWDwAwHq9AABEOwCA8LwAgJS8AAD4ugAACDoAAAU9AEDaPACgPr0AwGo9AACSPABgjr0AgHS8AABquwAA0LwAAOo8AEDhvQBAH70AgIM8AIBRPQAAZDwAgMi8AEC3vQAA4LoAAHa7AIAQvQBA8z0AQBi9AADAOADgQ70AwKE8AAAYPACAUrwAAKO8AIBnPAAAUrsAoCE9ANC/vQAgST0AQOw8AMD8PABAAb0AQIO9AMDevQAAPT0AwJc8AAAkPACAkTwAYDI9AAAxvQBA9jwAAFo7ACAevQAAmDoAQN+8AOAEvQAAeDsAwMK8AAClPAAAxzwAQMI8AGB8vQAAqT0AgPs8AEDVPABA2zwAIH89AGBgvQAAsTwAgPY8AIDEPADA8zwAAOC5AMBWvQAgEz0AgK69AABQuwAgQD0AAFI8AADOuwBQmT0AAFc9AAAgOQDgkD0AgGy8APCLvQAgGb0AAKw7APCTvQAA8TsAAOK7AGByPQAAIDoAwPg8AOBjPQBg3T0AgE89AIAfPAAQyj0AYAc9AEAQPQAAKb0AQEq9AEC7vADABj0AMIQ9ACC9PQDA+TwAAIu8AACYvABA5jwAwFk9ADCAvQAAbjwAwKS9AACkuwDALL0AgCY8AOBtPQAAM70AADK7ACAqvQAAsLsAIB69ACBQvQAQg70AwLA9AADZPAAAq7wAwN88AACcOwAAV7wAALQ8AIBkPAAAkjsAAHM9AID2vAAAwLoAYDO9AAByPADAe70AwF89AKAVvQDgBz0AwMa8APCTvQCA8rwA0NW9AID/PACAu7wAAC68AID2vAAACr0AkK29AMCiPAAAwDkAQMo8AGCePQAASLoAUM49AAAlPQAQ2D0AAG89AADHOwAATjwAANy7AABLPQBAJT0A8Ic9AGAzPQBg370AgB29AMBHvQAAybsAQCW9AICQPQBQmb0AwLG8AECEvADA/bwAwKS8ACAAPQBACb0A0Ju9AMAQPQAALDsAgN09AMDSvQAASjsAoBi9AMDuPQBAFz0AIFE9AAAAOACAT7wAYAS9ABCGvQAAbjsAACA7AIBhPADAvrwAwIO8AADEvABAsDwAgDc9AIALvQDAHL0AAC08AAAAAAAAhL0AgEW8AKA0vQDABj0=","chunkHash":"84a4f10a452fd4702153a0cca838b58c732a032ccfddbb9c1fda30674225b715"}]},"file:///teamspace/studios/this_studio/train_morphofeatures_models.py":{"hash":"26aa3bafcdd2b0bfaea1962c6088c1df45c0ebe2c0c80bc5ff5860f928c428aa","entries":[{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    def __init__(self, config):\n        super().__init__(config)\n        # … your existing init …\n        self.step = 0                     # ← make sure this is here\n        self.use_wandb = config.get(\"use_wandb\", False)\n    #...\n```","range":{"startLineNumber":32,"startColumn":4,"endLineNumber":36,"endColumn":55},"embedding":"AICMPABABj0AwPY8AABWvAAAObwAwKC8AGAxPQAw/D0AQHu9AGAMPQBADL0AACm8AACEPADAzrwAALe7AIDiPAAgPz0A8IM9AIDQvADglj0AYFo9AECvPACABjwAgMm8AAD4ugDAsDwAACK8AACwOQAAoLoAgJE8AIDWPACAULwAMIu9AECfvAAAhDsAAKq8AIBnPABQqz0AABw7AACougAAATwA8Pe9AADePADggT0AAEg8AIBNvACgCj0AwLM9ANCDvQBA7jwAwJo8APCgPQDgJL0AAAK8AEDavAAAErwAAIA7AGAdvQBAVL0AAOo8AABMPADgW70AQAY9AABdvAAgNz0AAMY7AGCbvQDAq7wAgHK8ACAUPQBAjjwAgAC9AMAPvQAAvzsAQA49AAAXvQDgb70AeCc+AIBnvAAAszwAQIq8ACAlvQDAmzwAAJC8AOA6vQAA1bwAgP68AMCfvABAozwAIMm9AMAvPQBgLr0AQBu9AGA4PQCATTwAwIs8AEBfPQCgXL0AwCw9AGBmvQAgJz0AgMw8AAC0vABgUT0AgFo8AICevQBA8bwAgFg8AICjvADwDz4AULC9AOA4vQBgnj0AwCS9AACwvABgj70AQAs9AMBYPQCAjDwAAIS6AACEOwAARTwAgH68ACBEvQDgWT0AADA6AABzvQAADjsAMMS9ANCmvQAAUr0AACo7AGAjPQAA5LsAgDC8AEgRvgBgcr0AIIk9AIBmPACAHD0AAI+7ACBaPQAAj7wAQDc9AMBjvQDAnjwAgJe8ACASPQAAUr0AQB09AAAxvQBAaD0AAPY8AMAhPQAgIL0AAMA4AGA2vQAAczwAAI08AIAmvAAAZ7wA4BE9AKAsvQAAIz0AgHs8AAAMvACA7LwAwJQ8AKBXvQDQxr0AYLg9AIAzPAAAkLwAAF69AIBmvACAC7wAoAW9AIA4vQCgVr0AgMW8AAAOuwAAzzwA4Lm9AGB2PQDAqbwAwIY8AABIuwBAqDwAwFA9AIArPADA4LwAAL27AIBjPQCgCr0AAHI9AMAgvQAQiT0AAGC9AABkPACA1rwAwDW9AADEOgAAtLoAAKm8AICuvADQqb0AQO48AADSuwAgWr0AgJA8AIAivACgL70AgFk8ACAAvQDAz7wAADY7AMCFPAAAjbwAAPw6AAAUPQBAYz0AAH28ACDmPQCgNT0AAEw7AIABvQAAGrsAYJu9APCGvQCgUj0AwLO8AIDFvABgOz0AgKW8AIABPQDgtr0AQMy8AMCqvADgbT0AAOk7AHCJvQCAMTwAAEY7AAAkvQDgNz0AABw9AEAgvQCAJL0A4IQ9AACKPAAwkz0AwEk9AECWvADAmLwAgM+8AMDNPACA7bwAQGS9AOBEvQBgiL0A8Kw9AMAZvQCAIDwAQHw9AIAtvQBAhLwAAOC8ACABvQBgfj0AAKu7AAAkvABA1zwAgD88AAC1vAAAgrsAYHK9AECtPADgez0AICA9AAAMvQCAZ7wAAE47AMAUPQCAfrwAAAi8AIAuPACAQrwAABG8ACARvQAggL0AAPg7AADaOwAA57wAAIi6AIAuvAAAtzsAAAU8AACMOgAgFj0AUJa9AADBOwAANbwAAF08AID6PACAN7wAAHE8AEAUPQAwn70AMIs9AMDKvADA9LwAwAm9AMDTPACAHLwAgJS8AMCwvQAAYTwAQJ49AGCkPQDgFL0AgK29AAAGvQDA07wAsIa9ACAHPQAAADkAQLa8AADcOgAAY7wAwAC9AMDMPABQor0AYCi9AMDQvAAAELwAALM8AEBlPQDAfT0AoFM9AEC9PQBwAr4AgDS9AACHvACAlTwAwOa8AIBbPQDAsLwAIAI9AMCnvQAAQrwAADY7ACA1vQAAYTwAgAG8AABlvACgQr0AABi6AEDFvABAPj0AgBS8AMCBvQCAMT0AAOM7AABOPADgMr0AQA09AIAWPAAA1zwAAF88AEDUvACAbr0AADk8AICjvQCAebwAAF68ACCVvQDAhz0AwFs9AABwugDAFD0AcLQ9ACCvvQAAhD0AgPA8AADpuwDAUb0AIBI9ACANPQBga70AgK48AECePAAAtDsAAFc8AMDRPADgNz0AoC09AMDyPQAAAj0AgPE8AMC8PADQtL0AQNi8AECqvAAAJjsAAAo8AMA+PQCAbD0AgF08AOAUvQDAij0AUKc9AECdvQCASjwAAD+9AGBQvQBgAL0AoJC9ABCQvQCALTwAAPk8AAAjvACQkb0AAHo7AABtvQCA/rwAQOE8ACAmvQDAmbwAIEe9AIDwvABAID0AACw7ACAoPQAADrwAIJc9AIBuvQDgZb0AAHi9AICvPQDAqbwAgD08AADQvACAFz0AAJS6AICFvACAPjwAIA69AGCPPQBgRr0AYJ69AMDoPAAABLsAwLS8AADXuwBQ+T0AgOe8AKAkPQCA4LwA4Kc9AAArPADAxD0AAAo7AAC/vAAAgLsAcKu9AIAGPAAAsbsAgCO8AOAGPQAAlL0AALk7AICUvADARz0AADQ8AKAHPQAA2bwAALC8AIAvPQAQmz0AoCA9AGBwPQAArj0AwBO9AED7PAAAUrsAwM09AOA0vQCwkb0AwN08AMDcvADAsbwAgMo8AGAwPQCAeLwAAKE7AOCwvQCAMzwAwKw8AECHvABAyrwAoBA9AIAwvQCAGDwAgOg8AEAlvQCA9DwAAG47AGAJPQCA1rwAwMs8AEC4vQAACjw=","chunkHash":"f120f672febcd98dd555f55831e04847925380562461b6ee538a2dcede84db55"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    #...\n    def train_epoch(self):\n        self.model.train()\n        total_loss = 0.0\n\n        for batch_idx, batch in enumerate(tqdm(self.train_loader, desc=f\"Training epoch {self.epoch}\")):\n            # unpack\n            if isinstance(batch, dict):\n                points = batch[\"points\"].to(self.device)\n                features = batch.get(\"features\")\n                if features is not None:\n                    features = features.to(self.device)\n            else:\n                points, features = batch[0].to(self.device), None\n\n            # forward\n            out, h = self.model(points, features) if features is not None else self.model(points)\n\n            # build labels\n            N = out.size(0)\n            if N % 2 == 0:\n                labels = torch.arange(N // 2).repeat_interleave(2).to(self.device)\n            else:\n                labels = torch.arange(N).to(self.device)\n\n            # loss + backward\n            loss = self.criterion(out, labels)\n            if torch.isnan(loss).item():\n                continue\n            #...\n```","range":{"startLineNumber":39,"startColumn":0,"endLineNumber":66,"endColumn":0},"embedding":"AEBEPQAAfTwAEIk9AACevACAyjwAQIW8AMDWPACg/j0AwIG9AGBnPQAA47wAwL68AIBgvACAkrwAAPA5AACwuQDAQD0AQLQ8AIAaPADQvT0AgK48AAC0OgAA2zwAAAe8AAAWuwBAHz0AAFG8AECYPADA1jwAAMe7AEA0PQAAuDoAELi9AEAbvQCAxjwAACK8AACMPADA1D0AwP68AACoOwAACzwAMPW9AIBWvACwgD0AgB88AAAWvQDQjD0AoFo9ACBNvQDgXj0AAHA7AJC9PQBAG70AgHY8AED8vACAaDwAAOC7AID8vABAAb0AALy6AAAMuwAgir0AADA9AACgvAAgFT0AQL68AHCPvQAAMTwAQJq8AAA4PQAA9jwA4B+9AABwOgAA57sAQPU8ANCDvQAQr70AEB4+AICvPACANDwAAB88AOAvvQCA6DwAANI8AOAkvQBAF70AcIS9AABYuwAAnrsA4PW9AOAXPQAABrsAoBi9AIAYPQDQkT0AAIs8AKBwPQBA3bwAYCs9AJCNvQAA6DwAwP48AAC0uwCAWD0AQIC8AMDUvQBAOL0AgJk8AADzOwDQ0j0AwBm9ACAVvQBAej0A4CO9AADiOwAgkL0A4HY9AEArPQCAabwAAC88AAA/PADA0TwAgPa8AEBSvQAA+zwAwIS8AICLvAAAgLwAYNa9AOAzvQDAfr0AAI48AIABPACgHr0AQJu8AIgZvgCA0rwAAG09AMCgvAAAizwAgCO8AADtPAAA37wAAJc9AADlvAAA9DsAgH+8AAALPQCA87wAoHg9AAAPvAAAajwAQKA8AADTPAAgEb0AwOq8AIB+vQDAsjwAANw7AADcugAAnLwAQCc9AADRvAAAaD0AAHk8AAAlvABgIb0AAIa8AGCGvQDAEr4AcLU9ACAcvQDA1LwAYIy9AECpvAAAcLoAQBC9AGCKvQDAer0AAK28AIDyvAAApzwAsNW9AABuPQAAb7wAgLy8AACgOgDgCj0AYBY9AAD6PAAgNr0AAHg8AEDePABAS70AwLU8AKA9vQDAbT0AACW8AIAgPAAAILkAgAI8AIDUPAAAlDwAwHa9AABeOwCAq70AACg7AICsvABQgr0AQIw8AACPvAAA2zwAQKo8AKAXvQAATrsAgG08AABAvACAczwAAH28AGBTPQBghT0AwL68AODNPQDgVj0AgEK8AOA3vQCAJDwAIMG9AOAXvQBAmDwAgHG8AOAdvQCADD0AANq7ABCAPQCAn70AALm7AFCXvQAA8jwAADy7ACByvQBA7DwAALW7ANCXvQCAOj0AgO88AMAivQBgCr0AYFA9AAC1OwAAQj0AAKY8AEDZvAAA+LwAAG28AEAtPQDAorwAACO9AKCUvQAgGb0A0Iw9AADIOgCArbwAMJo9AAAaPAAAdLsAQA69AAAfvQAAEj0AANI7AIBavAAAGLwAQNC8AIBjPAAgCr0AoHK9AAAjPABAcz0AAIU9AIDFvQAACrsAAEs8AEBhPQBgKL0AAIo7AIC7vAAA0zwAAHS7AMD1vADAK70AAI88AABYPABAqrwAwKu8AAD/uwDAzLwAgIA8AMDNPACAvjwAYMG9AADzvAAAbbwAALU7AACFPACgIb0AgGI8AADnPABAV70AMJo9AGACvQBA6rwAAGK9AAAIPQCAiTwAAGA6AOB6vQAAkLsAoDU9APDUPQCAjL0AQJu9AKCQvQAgBL0AwNi8AACUOwAAljsAQBi9AECFvABACr0AgPm8AIB9PAAAXL0AQKi8AABQOwCA2rwA4E09AIBiPADQyj0AAGY9ANCuPQCYCb4AMIe9AAAYvQAAjTwAgDu8AGBqPQCAKLwAACk9AMCSvQBA9rwAgLi8AKA2vQCAfD0AABy8AAAQOwBAXL0AAH28AMAivQCAbzwAANC7AKCBvQCAxjwA4Cw9AAAXPACAGb0AQLM8AABcOwDgSD0AYBo9AIAwvACA17wAAEA5ADCAvQBAqrwAAKG8ACB9vQDgkD0AMKI9AAD3OwBgTj0AkKw9AIBQvQAAfj0AIAU9AABgugDADL0AIBo9AAAYOgDgSL0AwBM9AACXPAAA2bsAwJM8AKAFPQBgGD0AgF08AOCNPQAAUT0AAMO7AFCtPQAAmb0AAAq8AABpvABgFr0AwOQ8ACBTPQDgnD0AAD68AIAwvQDAmj0A8KY9ABCNvQAAVzwAsIi9AEArvQDAJL0AwF29AMAcvQAAqbwAABo9AEAnvQDgmL0AwN48AIAFvQAwib0AgPE8AACcvAAArLsAwEG9AIAyvQCACjwAACg7AAANPAAACrsAIE09ACAyvQCgKr0AIIy9AEAOPQCAZbwAAAA4AAA6vQAASD0AAKE7AABmvAAAED0AoAy9AJDAPQAAVzwAYKm9AED9PABgHj0AAKQ7AADMvACAdD0A4Ee9AEB4PQBAA70AYLY9AAAQOgCwsT0AAIs7AABkOwCAd7wAEK29AIBuPAAA97sAwPu8AGAtPQBwlb0AAJA7AADgOgBgZz0AAOC7AABlPAAAFbwAACw7AIAoPQCQgj0AgDo8AADsPABAKz0AAEa9AMDsPADAurwA8K49AMDsvADggb0AwA49AACWuwAAwbsAwIE8AMDuPACAZrwAgOS8ALCVvQAAhLsAAAA9AACfuwDAxbwAgCY9AOAEvQAA0jwAoEo9AIAdvQAA8DoAgFA8AOBKPQAAILoAgNU8AEBZvQAA77s=","chunkHash":"2d4f2d9e25dbb2823b8472549ec70864529265d0b5fc3159948c0c7f2486ed50"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    #...\n    def train_epoch(self):\n        #...\n            self.optimizer.zero_grad()\n            loss.backward()\n            self.optimizer.step()\n\n            total_loss += loss.item()\n\n            # —— CORRECTED LOGGING —— \n            if self.use_wandb:\n                wandb.log(\n                    {\n                        \"train/loss\": loss.item(),\n                        \"train/epoch\": self.epoch\n                    },\n                    step=self.step\n                )\n\n            self.step += 1\n\n        avg_loss = total_loss / len(self.train_loader)\n        logger.info(f\"Epoch {self.epoch} → avg train loss: {avg_loss:.6f}\")\n\n        if self.use_wandb:\n            wandb.log(\n                {\n                    \"train/avg_loss\": avg_loss,\n                    \"train/epoch\": self.epoch\n                },\n                step=self.step\n            )\n\n        return avg_loss\n    #...\n```","range":{"startLineNumber":66,"startColumn":0,"endLineNumber":96,"endColumn":23},"embedding":"AEAlPQAA9zwAAOk8AADNvAAAjTsAANG7AACIPAAQAT4AQBO9AKBjPQAAyLwAwJy8AIDCvABgOb0AAOC6AIACPQAgWz0AwDo9AACNvABAmz0AwOc8AIAAvADA9zwAgCe8AAAtPAAgED0AANK8AAAQuwCAtzwAALc7AIDQPAAAsLkAII69AAB7vACAGDwAgAe9AICdPABgnz0AgCg8AAAFvABA8jwAEOK9AAARPADAZD0AQOY8AIDKvAAwkz0AgGE9AEDgvADACz0AABO8ADCnPQCA+bwAAIa7AMCavAAAIz0AgLg8AID1vADA17wAgAQ8AABCPADwib0A4Cw9AEDovAAA5DwAgDi8AFC+vQAATzwAAPy7AGALPQBAtTwAgDu9AAAPvAAA6DsAgGg8AEBQvQBQjb0AUB4+AMCQPADAizwAAIm8AMCjvACAlzwAQJQ8AADOuwAALb0AoG+9AACUuwDAoLwAsNi9AICuPADAnrwAAKq8ACANPQCgOz0AwNQ8AAAuPQAgLL0AIIA9ALCfvQAAUT0AAF08AACVOwAA4TwAAHm8AJDOvQCA87wAgJS8AIBpPAAAwz0AYEa9AADivABAPz0AYEW9AMCLPACQhr0AgOM8AIB/PQAAVjwAAMY7AIAVPAAA6zwAQPq8ACB5vQBgWz0AACg6AACGvAAAADkAkKe9ALCfvQDgJr0AAHg8AECHPAAAY70AgIO8ANAWvgCAF7wAQIc9AACguQCAST0AALW7AACLPQCA2LwAQDA9AABqvQDAxjwAALw6AID4PABgWr0AwGY9AICavACA+DwAANg8AMAFPQBgA70AAFu8AEASvQDAoTwAAFo8AIBYvAAA+rwAoEs9AIArvACwjz0AQPY8AAAivABAfL0AAKS6AKCQvQBQHr4AkMs9AEAMvQCAGLwAUKu9AACcvADAirwAYBm9AMCgvQDgML0AAEg6AEAYvQAAJDwAsLK9ALCYPQDAirwAAKQ6AADDOwAAGz0AYDU9AMDVPABA0bwAgMs8AMAMPQDA17wAAMQ8AIA9vQAAVT0AgFK8AIB4PAAAhjsA8Ie9AIAQPQBAyjwAYIS9AADYOwDgfL0AgFM8AMC2vADgEr0AQNU8AECLvAAApTsAgMY8AIDXvAAAfLsAgLI8AMCLvAAAGD0AALi6AOBVPQAgTD0AwLS8ALDlPQBgeT0AgDs8AAAKvQCA+DwAILu9AOBcvQAAlzsAwKC8AGAEvQDgET0AgKg8AKCXPQDAyL0AAPi7AGACvQBAszwAgDE8AIBxvQCAnjwAAKi8AKBjvQAAezwAIE89AEBRvQAAEr0AwHk9AOAAPQBgWD0AgK88AMC/vAAAvLwAgD28AABKPAAAYrwAwDK9AOAmvQBgJL0AwNE9AEDBvAAA6bwAoJA9AACxuwDgBr0AQN28AACnvACABz0AgGm8AICxvADAsjwAgI68AMCTPACAk7wAwC+9AIA9PABgaT0AIBI9AODVvQAAqjsAgGw8AGCOPQCACTwAgAw8AAASuwCAkzwAgDY8AEDIvACAJr0AAN27AECBvADAgbwAgDu8AIBCvAAAH70A4Bc9AAAGvAAAHD0AEM+9AECevACgCL0AAKW8AABdPQDAQL0AgC08AEDJPADwi70AQEY9AGA8vQDgGb0AwE29AAAIPQAACDwAAPi6AACAvQBAmTwAQHM9AIC1PQAAgb0AUKC9ANCsvQDAh7wAYFi9AABOuwCAsTwAQOC8AIB8vAAArDsAoAO9AIDHPAAAQr0AIDm9AEDXvAAA17sAgEY9AIBVPAAgsD0A4Hw9AECjPQB4Eb4A4Hi9AICevAAAVLwAAGg6AKAyPQAADzwAoF09AOCtvQAAfLwAgAW8AOAXvQCgMz0AAO48AAC+OwAgSr0AALC7AGAAvQBAMz0AAEy8AIB6vQCAnDwAQIk8AIArPACAobwAADM8AICNPADgJT0AIFg9AACovADgKr0AgL08APDMvQAANbwAAKW7ACBxvQDAjD0AgHc9AADIOgDAUz0A8IA9ACB7vQAgQD0AANI8AICfPADgJL0AYEE9AIBsPABgab0AQOQ8AAAgugCALjwAAMI8AIAXPADwhj0AAN48AFDSPQAAYD0AAHU8AMCePQCgvr0AQJO8AMCCvACADb0A4Cw9ACAUPQDAVj0AgBq8AADhvABQuj0AMMA9ACCDvQAAmjwAkLS9AADYvADgZL0AgHC9AED9vAAAz7sAgIE8AACZvADgWb0AAAs8AOApvQBAg70AwKk8AECjvADAB70A4FS9ACBlvQDA3TwAAAC8AOAiPQBA7bwAwHo9AEBhvQBAEr0AgA+9AIBiPQAAxrwAAGA5AEBRvQBgDz0AAAc8AAAAuwBA9jwAAPq8AMDIPQAAC7wAQJS9AMBWPQAAMjwAAES8AMCrvAAwmj0AoEi9AMBYPQDgF70AMKQ9AACUOgBAuT0AgHk8AAC+vADAEL0AcKO9AIAYPACA3bwAABq9AICBPAAAgb0AAEM8AMCvvABA9DwAALC5AMC5PAAAwLoAgFS8AMAKPQCwnz0AADK7AED8PACAFz0AYG29AAAougDAnbwAgI49AMC6vABwmr0AANo7AABLvAAAYDoAQJk8AEDHPAAAY7wAgPe8ACCwvQAAWrwAwKM8AEAFPQAAqbwAACs9AKA3vQCAEbwA4GA9AMAKvQDA7rwAQMC8AKB3PQAATrwAAHC6AJCYvQAA/Ts=","chunkHash":"ab584adb40ec5f46e56e5a55e23d655f5564703ae3b6f66fca1640a7f6794769"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    #...\n    def validate_epoch(self):\n        # only run validation on the prescribed schedule\n        if self.epoch % self.config[\"training\"][\"validate_every\"] != 0:\n            return\n\n        self.model.eval()\n        total_loss = 0.0\n\n        with torch.no_grad():\n            for batch_idx, batch in enumerate(tqdm(self.val_loader, desc=\"Validation\")):\n                if isinstance(batch, dict):\n                    points = batch[\"points\"].to(self.device)\n                    features = batch.get(\"features\")\n                    if features is not None:\n                        features = features.to(self.device)\n                else:\n                    points, features = batch[0].to(self.device), None\n\n                out, h = self.model(points, features) if features is not None else self.model(points)\n\n                N = out.size(0)\n                if N % 2 == 0:\n                    labels = torch.arange(N // 2).repeat_interleave(2).to(self.device)\n                else:\n                    labels = torch.arange(N).to(self.device)\n\n                loss = self.criterion(out, labels)\n                #...\n```","range":{"startLineNumber":100,"startColumn":0,"endLineNumber":126,"endColumn":0},"embedding":"AMBQPQDA/TwAsJM9AEAvvQDA+jwAgJw8AAAVPQDA0T0A4CW9AFCGPQAAKrsAgMW8AACsvACAQzwAgDu8AECyPAAgNT0AgBI9AEDEvACQ1D0AwPc8AIC8PACAJT0AAFS8AIAIPADApDwAALQ7AAAnPABAVz0AAAm8ACAPPQAArLoA0NS9AIAOvQAAeLsAACW8AEABPQBQ3z0AgJ28AAAFPAAA2TsA0Py9AAAuvAAwoz0AAO07AMDKvAAAcj0AYEQ9ALCLvQAAKj0AAEq8AMC3PQBAh7wAANQ7AID1vAAA7zsAgLe8AID7vAAA7rwAAI08AABivAAQgL0AwCQ9AABoOwBgBD0AgIy8ACBFvQBArbwAANy7AABBPQBA+DwAADC9AEDhPAAA9bsAwBQ9AMA9vQCgfr0A8EI+AAATPQCABTwAgAg8AKBTvQBA6jwAALQ8ACBBvQAApLwAcMS9AIBxPAAAmrsAQNW9ACA1PQCAsTwAgPu8AOBbPQCAlT0AgDI8AMBhPQBgGr0AQDs9AGCCvQCAhTwAgMU8AIAavACAiD0AAG+8AGChvQBAGb0AACU9AEC8vACwpj0AwFi9AAAuvQDAND0AwCe9AIAsPAAAl70AIB89AAAmPQAAnzsAAEU8AICAPAAAtLoAAEC8AHCDvQCA9TwAAOu7AAChuwAAoDoAsNO9AOCKvQCAqb0AgHY8AOAuPQCAM70AAHy8AMgUvgCgIb0AQDs9AOAQvQAAxDwAQBy9AIBLPQAAx7wAsJc9AABQuwAAE7wAQO68AGAFPQCA5rwAALo9AADuuwDAFD0AgOE8AOAsPQBAF70AgB+8ACB3vQAgIj0AgDA8AABWuwAAtrwAIG49AMDTvAAgLT0AANw7AAD5uwBAi7wAAAy7AHCBvQCg/b0A4NE9AICEvAAAeLwA4Jy9AACZuwAAhjsAYD29AGBqvQDARL0A4By9AMAJvQBADT0AcMy9ACAmPQBA1LwAIBG9AADpuwCApjwAwME8AADSOwCAurwAgBg8ACAoPQCAULwAoC49AABmvQBAZD0AAKA6AIBUPAAACjsAAA28AMDPPAAACLsAQGO9AAAHPQDQob0AANe7AEBFvQBAhr0AALS6AADauwDADz0A4AI9AGAPvQDArjwAAAs8AABquwAApLwAAFi6AGAsPQAgZz0AwOG8AMDLPQCAID0AgBa8AIDrvABAIT0AkJ29AGASvQBApTwAgOe8AAD6vABA8zwAAAi7AFCVPQCgrr0AAPa7AGA9vQDAQD0AAEC5AMBBvQCgeD0AwOK8ALCsvQBAIT0AQJg8AEBUvQBA+LwAgBg9AGARPQBASj0AAAg7AEDqvAAAO70AAM28ACALPQCARrwAwI+9AFCAvQBAKb0A4D89AAA5PADA7bwAYII9AIBJPAAA0rsAwA+9AEBxvQAgGD0AAJC6AABKvAAAyzsAYAe9AAAAugAAiLsAgIu9AIDqPADgnT0AQBA9AFC+vQAAtbwAAOk7AABJPQDAG70AAMQ7AABWuwDgPD0AANQ6AEC5vABgCb0AQPs8AACevACAk7wAgIW8AABuOwAAIrwAQIY8AMArPQCALzwAsLS9AED1vACAfTwAwMG8AECEPAAgP70AgPU8AGALPQDA+bwAIE89AICPvACAU7wAIFC9AIBjPAAAhjwAAGi7AGDBvQCAZbwAADg9ABDKPQCAjr0AcKq9AMB7vQCgPL0AAFK7AAASOwAAXTwAwPO8AACFvACgA70AAIC8AABQOgDwk70AAKS7AABeOwBA47wAAFQ9AAAmPADQpj0AQOo8AIC9PQAg4L0AAKu9AMCCvACAhTwAAIO7AKBlPQCA2LwAIEM9AEAxvQBAmLwAgHy8ACAOvQDAxzwAQLO8AIBHvAAAYr0AgGW8AABcuwAALrsAAKK8AAA2vQCAAj0AwFE9AMCSPADAF70AwL48AADcugBA8DwAgM88AICzvAAADL0AgA68AIBYvQAA9bsAABG9ACAjvQCQgD0A8J89AEDMPAAA9DwAkLI9AMAVvQBgmz0A4DA9AACcugDAxbwAgMk8AMCSvAAANL0AIBM9AIBXPAAAybsAAIC7AIBBPACgZj0AAJE7ACBiPQDAKz0AAFQ8AFCkPQDgqb0AAJw6AEBXvQAA7DoAoAU9ALCTPQCgOD0AAIY7AEAfvQCAqT0AoKE9ANCmvQCAfzwAUKq9AEDDvABgAL0AgEG9AIAWvQBA0LwAoDA9AGBnvQCArr0AQMw8AIAtvQCAab0AgDM8AABHPAAAzLoAcIa9AOAivQAANLsAAFC6AACfOwCAHLwAoDQ9AIA1vQDA0rwA8K+9AKAtPQCAvLwAAFo8AAAXvQCgCT0AAIE7AMDfvADAJT0AwCW9AICoPQAAbTwAgJu9AIDMPADAnzwAwIA8AIBPvQDAbT0AgJW9AEChPQCAWbwAIOI9AMCnPAAQlT0AAGK7AADeuwAA1LoAQE29AADnPAAAwLkAgGW8AOAUPQAAkL0AAB47AAAsOwBgmz0AgFk8AECfPACAabwAwLG8AECRPADgbT0AAIi7AACgOwAAsTwA4Aq9AMD6PAAA9DsAMPI9AEACvQDwib0AAOk7AABuPACANzwAQOM8AIADPAAAirwAoDW9AOCdvQAA27sAwPE8AECgvADA97wAQAU9AAAcuwBA8zwAQAU9AAAWvQAAgbsAAHK7AADbPAAA9zsAgOY8AJCSvQAAnzs=","chunkHash":"55247dd1bf3525e27ca459e6a7e0d7ed2659b29d7695a3a659a4ebc0725581f2"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    #...\n    def validate_epoch(self):\n        #...\n                total_loss += loss.item()\n\n        avg_loss = total_loss / len(self.val_loader)\n        logger.info(f\"Epoch {self.epoch} → avg validation loss: {avg_loss:.6f}\")\n\n        if self.use_wandb:\n            wandb.log(\n                {\n                    \"val/loss\": avg_loss,\n                    \"val/epoch\": self.epoch\n                },\n                step=self.step\n            )\n\n        # checkpoint best\n        if self.best_val_loss is None or avg_loss < self.best_val_loss:\n            self.best_val_loss = avg_loss\n            self.checkpoint(True)\n            logger.info(f\"New best validation loss: {avg_loss:.6f}\")\n\n        return avg_loss\n    #...\n```","range":{"startLineNumber":126,"startColumn":0,"endLineNumber":146,"endColumn":23},"embedding":"AOAsPQCgQT0A4Ec9AECbvACASTwAAFC7AAD/PAAw8D0AAAO9AKBgPQCAMrwAQL28AIAxvQDAyrwAgFK8AIB/PQCggj0AkI49AGB9vQCQuT0AoAk9AIAwPACAFD0AAD67AIBOPQAA1jsAAFq8AIBdvAAA9DwAAIG8AEAGPQAAcLsAIJi9AAAuOwAAg7sAgOC8AIAdPQDguz0AAHg6AIAGvABAAz0AMN+9AACvPACwoT0AAPY8AEDxvAAwsj0A4HA9AIBdvQAAHz0AAMC7ACDCPQAAMrwAgA+8AAA3vABA2zwAgGo8AEABvQBAyLwAAPy7AACyvAAQg70AQGk9AAAcvACAPj0AwIG8ABCXvQAAJbwAAPg6AMDIPACgAT0A4Bm9AABJPACASzwAwK08ACBIvQBga70AUCM+AAAhPQAAfjsAgKG8AEBCvQCAUDwAAGY8AAAavACAsLwA8JO9AABkPAAAdbwA0LC9AID7PACADDwAAM27ACAhPQAAXT0AwOs8AMAUPQAARb0AgF49AMCmvQBgIT0AAA49AACHOwAAND0AgLO8AACbvQAAqbwAAOK7AECAvACwrT0AEI69AMD6vAAAdDwAYBi9AIBLPADwxb0AgFo8AACHPQBA6TwAgAg8AMAEPQCAaTwAAK+7AECSvQDAOz0AAJY7AKAovQAA4jsAELK9ADC3vQCAd70AQIw8AEA6PQAAS70AgEu8ADgcvgCArrwAwGc9AABovACgTj0AIA29ANCYPQDAorwAwC89AKAYvQAAFjwAAAg7AGAePQAAYr0AwIc9AADHuwAAcT0AAI08AAAWPQBAer0AAME7AID1vABABD0AAJY7ACAOvQCA/rwA4F49AADMvADAKT0AIBc9AADsOgAAQ70AAEY7AABvvQD4Br4AgOo9AADXuwAApbsA8NG9AIA9vACAmLwAwMi8AGBPvQAACr0AACC8AOA4vQBAlzwAQMK9AABwPQBAHr0AQJW8AIAtPACAszwAAMA8AAANPAAAhbsAAAC5AIBvPQDAqLwAADU9AOBBvQBgZz0AgGY8AAAuPAAAwTsAIGK9AAD6PACAkDwAoIa9AECCPADAl70AAL27AIA0vQBASb0AwIE8AAABvAAAJD0AIAw9AKAMvQBApzwAwC49AADJuwCAJj0AABo8ACBAPQDAhD0AAFK8ACDgPQCAFT0AAIW7AMAavQCgcD0A8LO9AKAuvQCAC7wAAM67ACAXvQDAwjwAAO08AJCXPQCAz70AAEq8AIAKvADAEz0AwLA8AEBKvQAAET0AAFe8AKBOvQCAtTwAYDE9AFCRvQBA6bwAYIQ9AKAAPQBggT0AwJI8AAC7uwDgNb0AALA6AIDNPAAAiLsA8I29AKBmvQAAurwAQI09AACYugBAE70A8Ik9AAACOwAgFb0A4BS9AMBJvQBgTD0AgFG8AMCmvACA4jwAQJ28AIC1PAAAFjwAIDS9AIDQPADgej0AAOw8ADCCvQAAersAAIM7AKBRPQAAyLsAgH08AADqOwAgRT0AAKa7AECsvACA7LwAAFS7AECVvABA0LwAADC8AAAsuwAAprsAAOE8AEDHPACgFj0AILC9AADDvABgBL0AoB29AOBuPQDAhb0AwPg8AECyPAAgNb0AgKU8AMA9vQCAmLwAYCi9AABePACA0TwAwKG8AOCmvQAAODwAIIw9AGC3PQBAYr0AkIu9AABHvQDAE70AgMm8AAAyOwBAgDwAIA+9AEAGvQAAv7sAAFK7AIBRPADAZb0AwMe8AADxvAAgBb0AYCo9AACIOwCwrT0AYAE9AMCaPQAw+b0AgJm9AECYvAAAgDoAAAA5AABjPQAAMDoA4Is9ACBlvQCATbwAgNe8AGADvQBApDwAAK27AAA0vACALr0AAJC6AAAsvAAA2jwAwPG8AAA9vQAAUzwAwPw8AECoPACA37wAAIs7AAD0ugCAgzwA4Bs9AAAYvQCgVb0AQK88AADEvQAAXjsAgCy8AEBmvQDARj0A8JU9AIAmPAAgJT0AYLw9AAABvQDAbD0AQEE9AABTPACAC70AgOY8AIB5PAAgKb0AIBw9AADgOQAANjwAgFc8AABHPACQpD0AgLs8AJCmPQDASj0AAFI8ADCvPQDgsb0AALi6AKBQvQAAw7sAACg9AMCLPQAA7TwAACg6AIDvvADgrD0AQKg9AMCBvQAAFzwAALC9AAADvAAAAL0AwHK9AMDhvAAA47sAgK88AOAavQDAlr0AgFc8AIBnvQAATr0AAMc7AMCHPAAAtbwAgIG9AOAWvQAATTwAAMq7AECzPAAgKL0AAHE9AIBkvQBAybwAABC9AKA3PQCAE70AQK48AMBIvQAA0DwAAJC5AACVvADAGj0AYAq9AMCdPQAAwDgAMJG9AKARPQDAnTwAgD68ACAJvQDAcj0AcIy9AHCHPQDAmLwAkNA9AECOPABgrj0AAOG7AMCbvACAOLwAAJW9AECyPAAANbwAgNe8AIDfPADAo70AABg6AACvvADAFz0AQNY8AGAgPQAATbwAQJa8AEDLPACQjj0AAB+8AACwuQCA4DwA4Ge9AADKuwAAhbsAgJY9AIC+vAAwjr0AgEe8AAD0OgBAhzwAgNc8AIDnPACAZ7wAIAG9AJCwvQAA6LsAYBo9AIBwPADgJb0AIAE9AADCvAAAJjsAoFo9AEDMvADACL0AAD68AMBJPQAAfjsAwL88ABCuvQAARLs=","chunkHash":"c56d73ca701efe4bd9ff1e2325eecf6dd280c3318d867bf280efd5d1a0c56245"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    #...\n    def train(self):\n        \"\"\"Train the model for all epochs\"\"\"\n        for epoch_num in tqdm(range(self.config['training']['epochs']), desc='Epochs'):\n            self.epoch = epoch_num\n            self.train_epoch()\n            self.validate_epoch()\n            self.scheduler.step()\n            self.checkpoint(False)\n    #...\n```","range":{"startLineNumber":148,"startColumn":4,"endLineNumber":155,"endColumn":34},"embedding":"ACBRPQCA/DwAQMM8AKA+vQAAeTwAAGo8AMBEPQBgFz4AIEq9AMAgPQDAEr0AABW8AACxuwAgNL0AgBw8AACxPAAgJj0AwEo9AICnvACQoj0AAMk8AACrOwBgUD0AAHS7AABsPABApDwAAHs8AICnPABABD0AAEC7AMAFPQAAGLoA0NG9AICIvACABT0AYAe9AACJPACglz0AQP68AAA8PADAxzwAYMq9AIAAPABAYj0AAGC6AEARvQAAAj0AYCY9AOAzvQCgiD0AALM7AFCQPQDA4rwAAIC8AAByOwAAPjwAAOO7AGBVvQDAOr0AAIS7AABcPABQgb0AgJ88AACUuwAwhj0AAAw8ANCavQAAgbwAALC5AEDzPAAgEz0A4Jy9AIA4vAAAGTwAwDA9ACAEvQBgbL0AyBo+AAC0ugDAkbwAAMI7AEDrvABArzwAQIY8AACWvABA/7wAQL68AAByPACAJrwA4O+9AICzPAAAFrwAYFG9AKBNPQAQgj0AAH88ACCFPQDgc70AwH89AKAYvQAAKz0AwC09AGACvQCQlD0AIC+9AABBvQDAHb0AAAS8AADsOgDQmj0AYDS9AEClvACAsz0AQEK9AOAHvQAwor0AwJ48AGA1PQAAxTwAADI8AIAsPQAAvTwA4BO9AAAQvQDAAD0AgOa8AEDfvAAAUTwAQNi9ACA5vQCAk70AABi7AADWPAAAW70AAMA4AEASvgDA97wAgN88AAByvACgGD0AgOi8AIAUPQBA8LwA0JM9AIDLvAAAKLoAoDO9AIBVPADAA70AwAw9AIDhvAAA+TwAAJo8AKA6PQAA07wAgFU8AABevQAAozsAAJI7AABOvACgFr0AQKE9AGAnvQCALT0AQE89AACkuwAgYr0AAMu8AMAvvQAwFb4AUMU9AIAavAAAi7sAEJG9AACwOwAAZLsAYCS9AKA/vQBgLr0AQJE8AABougAAlzsA8Nu9AIBnPQAAnrsAAHi6ACALPQCADz0AgPY8AOBfPQDAhrwAQAW9AIAPPQBABL0AgFU9AIALvQAAJT0AoAe9AAAavAAAmbsAQN28AMAxPQAAozsAYHm9AAAWOwBgr70AAN47AMDmvAAQhr0AQBw9AABgPACAmjwAgEe8AACcvAAAfbwAgGO8AECivAAAF7wAAKA6AEAGPQDQgT0AgJa8AKD1PQCgpD0AQOM8AOAgvQCAUTwA0Lq9AEBWvQBgCz0A4A+9AAAovQBAizwAgAW8ABCePQAQp70AAGE8AOAwvQCAYDwAwI68AACKvQBgNT0A4Di9AACOvQCAdDwAgBM8AIBVvQCAQL0AADo9AADpPAAACT0AgB49AECrvADgSL0AAH67AAAXPQCA+LwA4Bu9ABCevQAAdrsA4Js9AAA+PAAATb0AYGI9AACCOwCAL7wA4Bm9AIAsvQAARj0AgCy8AADgOgAA9DoAACI8AACHuwBAhLwAwN68AABgOgAQnj0AADs9AOCgvQAAnLoAAJu8AECNPQCAKLwAgEk8AABoOwAASzwAAKC5AAC5vABAGr0AAJQ7AAAEuwBgCr0AAFg8AABKvABA+bwAoCU9AEAYPQCAITwAEOC9AECLvAAAl7sAACA6AADROwDATb0AwLg8AAA6PADAfb0A4K09AADwvACA5bwAYBa9AACzuwAABTwAgDE8AKClvQCAljwAYD49AIDQPQCAVb0AAOy9AIAVvQDAKb0AAL27AIClPAAARjwAwCa9AICgPACAxLwAgGG8AAA6PAAgJb0AwKm8AAAMvAAAMjsA4Ko9AAAqPACwjz0AYHg9APCiPQA4Ab4AgGK9AGAzvQCA2TwAAIa8AGAPPQAAb70AQL08AFCKvQAAobwAAKG7AKACvQAAHTwAAFi7AABCvAAwlb0AgIi8AMDgvAAAgzwAwK68AOAuvQAAMTwAQPQ8AIAPvACAM7wAAEo8AAD5uwAwiz0AgIE8AAA7PABALb0AIDu9AKAzvQCgFr0AAM67AEAqvQCAgz0AADk9AADeOwAgHT0AQKo9AAANvQDQ4D0AQLw8AIBfvACA8rwAAJG8AABsvAAAyLwAgFk8AIDePACAYTwAAOY8AICUPABwpz0AAAs9AADPPQAgMT0AADM8ANCmPQBQp70AAAY7AADAuAAAvLoAgAU9AIBLPQCAsj0AAJ07ACBOvQAQpD0AIKo9AOCfvQAAULoAADi9AID4vAAAAr0A4Ii9AABOvQCAPr0AgCA8AKA/vQAAwr0AADs8AKAlvQAwjL0AAMA5AADKOwCA2LwAgI29AICevABAqzwAwIe8AABFPACAjrwAAIU9AOAvvQAAYrsAoKC9AOAWPQDArLwAALK7AGAavQBgbj0AwIg8AAAIugAgBT0AoBG9AOCWPQCAjrwAABe9AMANPQAAyTwAgHu8AADWuwAghT0AQOC8AOBfPQAAu7wAANk9AIAdPADwtD0AABM8AGAbvQAAjrsAIFO9AMCCPAAA0TsAgL28AMCuPAAQpL0AAJc8AACivAAgSj0AgAo8AAD6PADAHL0AYAC9AGB5PQBAMD0AwOI8AAAAugBgAz0AwCG9AEBRPQAAr7wAEJ49AAAbvQCgd70AYD09AABeOwAAIDkAAHU9AABmuwCAErwAgJu8ANC/vQDA1bwAANk7AMCdvAAgCr0AAE47AEATvQAA4TwAQCM9AKCXvQAANDwAAJ+7AOAmPQCAFbwAALg7AKB6vQAAJbw=","chunkHash":"5c28369f71d9ec1f759d9d44abd72e3e740ef5a088747a3b11c3d58c4cc51dfa"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    #...\n    def run(self):\n        \"\"\"Main training function (called by fit)\"\"\"\n        # Check if wandb should be used\n        use_wandb = self.config.get('use_wandb', True)\n        self.use_wandb = use_wandb\n        \n        if use_wandb:\n            try:\n                import wandb\n                with wandb.init(project=self.config.get('wandb_project', 'MorphoFeatures')):\n                    self.validate_epoch()\n                    self.train()\n            except (ImportError, AttributeError) as e:\n                logger.warning(f\"Unable to use wandb for logging: {e}\")\n                logger.warning(\"Continuing without wandb logging...\")\n                self.use_wandb = False\n                self.validate_epoch()\n                self.train()\n        else:\n            logger.info(\"Wandb logging disabled in config. Using console output only.\")\n            self.validate_epoch()\n            self.train()\n    #...\n```","range":{"startLineNumber":157,"startColumn":4,"endLineNumber":178,"endColumn":24},"embedding":"AMAuPQAwmD0AkLg9ALCcvQAAULwAgJ+8AACkPADg9T0AQEO9AIAXPQDAurwAAAg6AIDovACgSr0AAJK7AEDQPACA+jwAsKc9AMCUvAAgOD0AYGw9AADQOQDAOj0AQLm8AMCnPACAgrwAgI28AICtPADA8DwAgAC9ACAcPQAACLoA0Jq9AAAyvQCAp7wAAC29AADZOwDAoz0AAAO8AACQuQCAdjwAIA2+AAAQvAAwiD0AALw8AADfvABgUD0AMLw9AIBrvAAgPz0AYHa9AICFPQAAr7sAgFu8AED4PAAA7TwAAIk7AABlvQBApbwAAHQ8AEBvPQDAt7wAIBM9AEBXvQAAxTwA4CA9AGAfvQAAbjwAACi6AMDiPACgNj0AAGO9AECFvACAgTwAABi8AKBkvQCgQb0A8M49AMDVvAAACb0AAMc8AAApvQCA9jwAwMo8AIDfvACgFL0A4Hm9AIDwvABA/DwAEAy+AAAVPACAHrwA4Di9ADCpPQDA0jwAgFk8AIDtPADgML0AAGs8AABtvQBAPz0AgNw8AADXOwAADzwAAL28AFCQvQCgV70AAGU8AABPvACAuT0AgKC9AABGOwBwiT0AQOu8AADMugCANb0AQHs9AGB5PQCAgzwAAIy8AABsOwDgCD0AwEm9AGBMvQAAgrsAADA9AED8vAAA3DwAcIS9AADXvABA+7wAQIk8AACvOwAAwDgAoDW9ABDNvQCgl70AgCg9AABnvABAdD0AABo7AKASPQCA27wAgMg8AADAuwCAIz0AACa8AOAsPQAAurwAoDM9AAB4OgCASD0AAPg8AMCTPAAARjsAAK+8AIDZvADADz0AQNk8ACAVPQAA0LwAQOQ8AIBRvACAgD0AwOW8ACBMvQBAB70AAC67AKBnvQBgqr0AAL09AACtuwAAD7wAQBy9AICmPAAA07wAAHu9ADCKvQDgaL0AAOc7AGA8vQBA6zwA4AS+AECRPQCgAL0AIAI9AMCNvADAizwAQJM8AABpPQBA7rwAANc8AIB2PQAAf7wAgIE8AADCuwAwlj0AoB69AADwPACgMD0AgNa8AIDPPADAgDwAYGW9AAAmOwCwnL0AAFg6AMDHvABgb70AICg9AIClvAAAQLwAQBw9AMAMvQCA87wAgCy8AAC4uwDAqLwA4Cw9ADCwPQDAWT0AoBa9ALCnPQAAuDwAwAk9AMC/vAAAWDwAYB29AEDRvADAvDwAABI7ACA3vQAAAD0AAFg6AABDPQBAjb0AAEy8AIAkvQCwhD0AAAi6AEBpvQAgJT0AgB48AACevQAA9jwAwKg8AMAjvQBgN70AoG09AEDiPACglT0AgJw8AECavAAgMb0AQKW8AAAxPQCAmjwAEKy9AMA1vQDgPb0AQI48AMC2vAAAsDkAICA9AIBEvQCAK70AgHS9AMA1vQCAzzwAwP68AEDrvACAvjwAAHI8AMDfPABAwTwAAPS7AEDLPAAAwj0AAMg8ACC7vQAAwLgAoBM9ACCCPQCA/LwAgCU8AMCdPADA6LwAAIK8AOAIvQAAXrwAAH+8AADAPABAvrwAALg6AMCPvAAAWrsA4CU9AEAkPQAgFz0AwCq9AABRvADgGD0AwLk8AAAgOQCACjwAAK48AADZPADgab0AMIo9AADFvABAMr0AQI68AAD4uwCABz0AAKQ7AKDUvQAA/zsAgDg9ABDBPQCgYb0A4Dq9AMBdvQDgDb0AoCC9AEBBPQCAjzwAQM+8AABFPACgbb0AgCy8AIAJPQBgJb0AIH29AEBAvQCATzwAwKM9AADVPABQkD0AwGk9AJDqPQDwC74AYIu9AFCFvQDAaD0A4BC9AKBxPQAAgTsAgD09ACB9vQAA2LoAAKC5AADyvAAAijwAAHi6AADQvAAAu70AwKq8AMCqvACAEDwAwLK8AGCPvQBA5jwAQDA9AACbvADgAr0AQB09AADHvADAcj0AgE88AABWuwAAJbwAgG08ACCovQCAHL0AAHK9AACavQBAhD0AAAU9AIA1vAAgLD0AYF89AOAhvQCATD0AALO7AIA5vAAApLoAwMo8AACuOwAgnL0AQMg8AKBOPQAAaLoAAMy6AADiuwAgOj0AAFo7AFDiPQDAPz0AQD89AED9PABAkb0AwFq9AEBFvQBA0bwAwIk8AOBPPQDARD0AwMK8AGCHvQDQmj0AUJ89ABCZvQCATzwA4JC9AMCBvAAAXrsAoEG9AADdvACAnzwAQEk9AIDRPACAtb0AAIE7AADouwCAfb0A0JY9AID8PAAAUr0AIDm9AMABvQAAQj0AwKo8AMDHPAAAIT0AADM8AFDTvQBgEL0AwI68AICMPACAPbwAgIi8AAArvABgCz0AgKI8AIBsvAAAMT0AwBm9ANCHPQCwqb0A4GG9AMCYPABAw7wAAFi7AIAkvACAhj0AAAe8AGB/PQAA4DsAkM89AMCGPQBw3D0AAHa7AACyvADAs7wAAIa9AOBIPQBAlDwAQJS8AEDEPAAgeb0AAFa8AMC8vADAMj0AAJI8AACPOwAAsLwAoIW9AADIugCgAT0AAKm8AIBZPQAQhj0AQGe9AAASuwCAB7wAIFs9AFCpvQBgiL0AADA8AIAAvAAApDoAwIY8AABQPQAAU7wAgPS8AADAvQCAT7wAQMe8AAByvABgI70AAGc9AIAwPACAUzwAAM+7AADsugAAJDsAgD48AMDTPACAXbwAALY7AGDIvQAAnrs=","chunkHash":"981df9eb627f210e702b1553e332bba72f5a881f6d3be45e2b486242eb4e2ea1"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    #...\n    def fit(self):\n        \"\"\"Wrapper method to match the expected API in train_morphofeatures_models.py\"\"\"\n        logger.info(\"Starting model training via fit()...\")\n        self.run()\n#...\n```","range":{"startLineNumber":180,"startColumn":4,"endLineNumber":183,"endColumn":18},"embedding":"AAD0OgBAwzwAgOC8AMDuvAAAyjsAgMy8AABcPADg1T0AAMW8AADMPAAgYr0AQKK8AAADvACAWLwAQOe8AACuPABQhD0AwMo8AIBzvABAgz0AIBQ9AADxvADAoTwAgA+9AIDmPAAA4bsAwHC9AECgPABAo7wAAK+7AKA7PQAA3rsAYGO9AIAhvQAAPz0AwN68AECCPADw9D0AAA08AICJPADgCD0AoPW9AACoOwBwrj0AAFC8AIBVvABgLD0AIHI9AED/vACA+TwAwOq8AJCLPQAAubwA4DO9AABaPAAAQDsAABa7AIAjvQBA37wA4EQ9AACDvAAgEb0AgAu8AABpvQAAtTsAAKw7AGAbvQAAwTsAgAm8AICQPABAOz0AALw7AIBrvAAARTwAQJe8AAB1vQAArbwAqCY+AMDEPAAA6bsAgC08AACdvAAA1zsAANE7AAAFvQBgE70AICe9AIAGvAAAWjwA8AW+AOAbPQAAT7wAgDW9ACBaPQCQoj0AgMw8AAB4uwBARr0AoC89AMC1vAAAIT0AACg8AABguQCAGT0AABY8AOBTvQCAGL0AgBG9AICcvACw3z0AAM+8AMAEvQDgij0AAMK8AIDrvADAurwAoA09AEBBPQDAML0AAKo8AIAjvAAAuTsAgCC8AEB2vQCgJz0AgCW8AOA4vQCAM70AkNe9AGAyvQAwjb0AQJs8AAD4uwAAuLoAALW8ABATvgAgSL0AgIY8AAAoPACAlDwAAM47AIAwPACAGLwAwAo9AIAQvAAA8zsAAB69AADWuwCAyrwAYGQ9AIBsvABgaz0AgJI8ACBmPQBAj70AgEo8AAAIOgAA9TsAABI8AAAFvADAMb0A4FE9AICPvQDQwj0AAPI7AAAqvQAAcLoAgM28ACB0vQDQor0AwL49AAClOwAAzjsAAKq8AMBfvQAAPL0AAAM8AGCfvQDguL0AIE09ACAkvQAA+zsAgI+9AOAePQAAXjwAABC7AADaOwAACj0AQAI9AICxPAAAIL0AgAk9AIDtPADAiLwAAOS7AACjvABgJT0A4Dq9AEAVPQDgIT0AIGC9AAArPADACT0AQMa8AAATPACAM70AgJ08AACAPAAggb0AAMs7AMCVvACAVTwAAJo8AABQvAAAlTwAgOu8AAAeuwDAybwAABA8APDQPQBA0TwAAOk7APAFPgDACD0AICS9AMAkvQAAFjwAQJa9ANCmvQAARbwAAAI8AACOPAAAsDsAAGW8AACEPQBgnL0AACC9AAAOvQCArjwAANa8ABCnvQCQmj0AAKg6AFCZvQDA3zwAAPg8AMCrvAAANb0AUIc9AIAZPQCAVT0AAPQ7AADoOgCAxLwAAFS8AEA8PQAAarsAAAi6AIC/vQBgOr0AwCE9AAC5vAAAiLoAwJ49AAB4vAAAT70AYBG9AABeOwDgbD0AACw8AADiPADAnzwAANI7AADeuwDA2rwAQDa9AMCcPABw1z0AYA89AGC4vQCA1rwAwL28AKCRPQDAhbwAAPg8AICFvAAATbwAgAa9ACBFvQCA/LwAAB29AMCmPAAAtrsAAOy7AEDrvAAAXDsAsK09AAB1vADgRT0AsJm9AACTOwAAMLwAgHK8AOAoPQCANb0AIFq9AAAquwDgzb0AoCc9AAC1vABgVr0AQJu8AIC/vAAAXTwAADs8AHDQvQAAvDoAwBk9AGCfPQCA3rwAsLa9ABCBvQAgE70AwO+8AIAvPAAgDD0AwGW9AICvvACAprwAgLG8AOBBPQBgDr0AwC69AKAUvQAArLoA4Lc9AADCOwCwhD0AwI49AEDUPQCgAr4AUIK9AMBCvQDgbD0AQJO8AMDAPAAASbwAoC89AJC2vQAA/LoAAJW7ACALvQAgIj0AwOI8AABMuwCgAr0AgEK8AMBEvQAAWDwAAEy7AJCFvQAACj0AgHQ8AAD0OgAgB70AQAA9AMBHPQDAgzwAAIg8AACPuwBAK70AwNo8ACB1vQCADbwAgHK9AMAEvQAgTT0AwGY9AACFuwAgGD0A4HM9AABRvQAgnT0AAOU8AAC/OwAAMLwAgFq8AACsugDgMb0AsIs9AAAlPACAqTwAALU8AADkugBAkT0AACQ9AJDmPQAA6DwAQMA8AAB8PQAg470AoCC9AECLvAAAvDsAgAM8AAAQPQCgfz0AwMW8AABivQDQtD0AAJ49AJDLvQAAejwAYGm9AJCAvQDgOb0AYCu9AABBvQAATjsAAHi6AADTuwDAxb0AgII8ACAZvQAAXr0AwL08AIAcPQCAw7wA0La9AIAfvQAAtzwAAIa7AIBAPQAABr0AAEE9AEBqvQAAALgA4BS9AEBTPQCAdjwAwOS8AKBVvQCA0DwAAME8AMCpvAAgIT0AQIG8AIAjPQBAB70AYC69AAAkuwAgDb0AwKO8AADwugCg1T0AwKK8ADCoPQAAcrsAMOQ9AMCrPABAyD0AABA8AMC9vACAdLwAEIu9AMDtPABAAD0AACC5AIANPQBgkb0AABC6ACB2vQDgdD0AAAM9AIAOPACAHbwAgKM8AEAHPQCAgzwAAL+8AIC4PACAfz0AABi9AAAiOwCgMb0AwJU9AABtvQAAnb0AwIM8AAB0OwAgAj0AwPM8AIBEPACAOrwAACM8AMCkvQAAnjsAgAw9AIAPvQCA2rwAAMI8AKBbvQAAATwAgIg8AIDrvAAAYTwAAIg7AIADPAAAMrwAABI7APCfvQAArLs=","chunkHash":"0a8bcca7c7d53d9b651eb0fdbc07d6c67944169c7f63ea5d2cbf393143e2ea8f"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    def __init__(self, config):\n        #...\n    def train_epoch(self):\n        #...\n    def validate_epoch(self):\n        #...\n    def train(self):\n        \"\"\"Train the model for all epochs\"\"\"\n        #...\n    def run(self):\n        \"\"\"Main training function (called by fit)\"\"\"\n        #...\n    def fit(self):\n        \"\"\"Wrapper method to match the expected API in train_morphofeatures_models.py\"\"\"\n        #...\n```","range":{"startLineNumber":32,"startColumn":0,"endLineNumber":181,"endColumn":88},"embedding":"AEA8PQAA8DwAoBE9AKA6vQAAATwAAI87AIA3PQAQ+D0AYDe9AKAnPQAAvrwAgEK8AABEuwDA/bwAgKe8AEDpPAAALz0AwHk9AIAKvQDwrD0AIBo9AADFOwBgSj0AQJK8AIAsPAAALDwAgAc8AMCyPABAozwAQIa8ACAZPQAAhbsAwMG9AIBKvADAoDwAgJ28AAAcPACwqj0AAJW7AICWPABAqjwAsOK9AABAOgDAbT0AgAi8AICkvADAFD0AIHg9AMAovQCAgD0AwJ28AMCIPQAAiLsAQJ28AIAVvAAAjTsAALO7AABcvQDAdr0AgKc8AIBZPAAgZr0AAHg8AAARvQDgfz0AQNY8AIBLvQCAl7wAAHi6AMAtPQCAEz0A4HS9AADzuwAAALsA4CI9ACB0vQBgL70AyDE+AACluwCA9bwAABw7AEDTvAAgCT0AgD88AMC0vABgL70AYB29AADCuwAA0zsAYOi9AMDcPAAADrwA4G+9AABkPQBgdj0AgGA8AMCDPQAgi70AoDE9AABVvQCgQD0AQDU9AEDovAAwgj0A4Am9AEBvvQDALL0AAOC5AAA6uwAAyT0A4Fe9AEDkvAAAwj0AgD+9ACAMvQCgb70AAIk8ACBkPQCANDwAwIg8AIC/PABA0zwAQKu8AGA0vQAgAz0AAMU7AKBYvQAAVTwAwPm9AOCEvQCgg70AACc8AABaPABgBr0AAIG8APgEvgAAG70A4EE9AAAPvAAAvzwAwM28AOADPQDArbwAgGQ9AABzvAAA3DsAwDi9AIB8PABAH70AQDM9AIC7vAAgTD0AwO08AOA7PQBA+bwAgDK8AGAHvQAAXDwAgCo8AABAOQCAwLwAgG89ACBxvQDATT0AgPs8AICyvADAu7wAAM28ACA2vQCg670A4ME9AAAJvAAAV7wAAHa9AACBvACAZbwA4CW9ACA3vQAAUr0AAJM8AAAGvAAAnzwA8OK9AOBYPQBAhbwAAJu7AADzPACAtTwA4A09AAAvPQAAsbwAAEu8AADiPADA+rwAwD09AOAvvQDgQD0AYBq9AAAwugAACjwAwLW8AOBEPQCA3TwAIAO9AACduwAwv70AAE08AEDJvADgZr0AYCg9AABQugAA6DoAgBg8AAASvQBAmLwAQP28AMCmvABAsbwAgBY8AMBDPQDAUT0AQK28AJDxPQBgIj0AAGk8AMDuvAAAq7sA0Ju9AIAtvQDA2DwAwOe8AAAPvQDAjTwAAPe7AEB1PQDQwr0AAOK7AOAevQBgCj0AAHA6ACCXvQCADT0AQCS9AOCavQBgFz0AgKA8ACBmvQBADb0A4Fg9AOAiPQDAPD0AgPA8AMCFvACAOL0AAFe8AGBAPQAAzLsAAHq9AOC2vQAAiLwAYFE9AADKOwDAEb0A8Ig9AACpvACAf7wAQDm9AMD9vACAJD0AwOy8AIAhPABAlTwAALU7AIBNvACAIrwAoCa9AAD4ugDgxz0AQEM9AKBuvQAAXrsAwIi8AMCAPQAAQ7wAAGo8AIBaPAAAIzwAgD+8AMDUvADgKr0AAHS7AMCgPABA5bwAAFc8AAA+OwCAT7wAYAk9AIAYPQCAPzwAgKu9AAAEOwAAlzsAAKS7AACMOwBgAb0AANC6AIA8PABgY70AMJs9AMDXvAAA2rwAYB+9AADkOgCABbwAAAo8AICdvQAAjTwAgCg9AJC1PQAgWL0AsLy9AOAzvQAACL0AAL68AAAFPQDAwTwAIA+9AIAwPABAMb0AACO8AMDaPACAgb0A4B69AEDgvACArDwAUJE9AEDYPADAgD0AwEs9AJDDPQBYAb4A8Ii9AKBRvQAgOz0AgJa8AIBjPQCgCr0AwBQ9AMCPvQAAsLsAAP27AAAdvQAASbwAANc7AIBQvADgkr0AgIS8AMCavADAljwAgC68AABUvQDA8TwAQM88AIBhvADA17wAADQ8AACIOwBALT0AAAA4AIAEvADAH70AAIm8AKCDvQCAvrwA4Am9AMBSvQCghD0A4Dc9AAB4OgBgAj0AAKk9AKB8vQAwuD0AAJ08AIASvABALr0AAIm7AAAJvADgBL0A4Bg9ACAHPQAAWTwAQI08AAAyPAAwuz0AQLQ8AHD8PQDgNj0AQNM8ACB2PQAQlb0AAJa7AEDIvAAAIzwAwM88AAA8PQDArj0AAN27ACBxvQDwlz0AALs9AAC7vQAAXjsAYHi9AKA7vQCAzbwAwHW9AGBTvQDAsLwAAGw8AAA/vACQ3L0AAF47AKBBvQCgUL0AAKg8AACyPABACL0AQKu9AICEvABAwTwAwJq8AIC6PAAAYLkAwHs9ACBDvQAAZbwAEIq9ACADPQCAR7wAAHO8AICcvACQjT0AgA48AABzvABAlTwAwOm8AACPPQAgQr0AYD29AMDzPACAljwAYAO9AICcvABguT0AAAi8AGBRPQAAnDoA0AI+AMDHPADgpD0AgA88AACDvACAn7wAYFy9AECEPAAAojsAgHu8AIDTPACwir0AAMc7AACdvAAgVD0AYBI9AED2PADA2bwAgES9AEBGPQBAUT0AwBI9AIA2PAAgfz0A4GK9AEDkPADApLwAoK89AECAvQAgfb0AwDY9AIBPvAAA+LoA4Hg9AACBPAAA+7sAgE+8ANDYvQCAF7wAgBS8AMDpvADgE70AgDc8AIAavQAArzwAAIE8AEBjvQBAAj0AgBS8AABMPAAA6LwAwLA8ACCPvQAA4Lk=","chunkHash":"b535a6bdedb84413bc0013bc30f296641a44e3393a84378c0b1af2621ef32a7f"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#!/usr/bin/env python\nimport os\nimport sys\nimport torch\nimport yaml\nimport argparse\nimport logging\nimport time\nimport traceback\nfrom tqdm import tqdm\nimport numpy as np\nimport pandas as pd\nimport wandb\nwandb.login(key=\"9de783cdb1f22a4b8f97f7e05e4e057f668e0cfe\")\n\nlogger = logging.getLogger(__name__)\n\n# Add MorphoFeatures to the path\nsys.path.append(os.path.abspath(\"MorphoFeatures\"))\nlogger.info(\"Added MorphoFeatures to the path\")\n\n\nfrom MorphoFeatures.morphofeatures.shape.train_shape_model import ShapeTrainer\nlogger.info(\"Successfully imported ShapeTrainer\")\n\n\n# Import custom dataloaders\nfrom dataloader.morphofeatures_adapter import get_morphofeatures_mesh_dataloader\nlogger.info(\"Successfully imported mesh dataloader\")\n    \n\nclass CustomShapeTrainer(ShapeTrainer):\n    #...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":189,"endColumn":7},"embedding":"AMCzPACgZj0AoDE9AIClvQAAMLsAALi8AMC9PAAAlj0AIB69AECfPAAAsbwAAOy6AAAAuwDA8bwAAKk7AEAIPQAgRT0AkIw9AMBUvQDgbj0AQLA9AEDaPACA6LwAgFO8AAAKPQAA2LoAAKe8AIAePQCAMjwAAIe8AACrPAAAxLsAsIy9AAAwvAAAxLoA8JS9AAB+PACAkj0AQNQ8AADmvACAjzwAgNq9AABoPADgij0AgD88ACA1vQCA9zwAwJo9AEDyvAAAtjwAQPA8AGCyPQBgQr0AQCa9AACuOwAAFLsAAAA5AGAGvQAASr0AYBu9AMCWPADATb0AAJE8AIBSvACACz0AAIy8AIBuvQDgbL0AgN68AADoPABA0DwA4DG9AACauwDAGr0AIHY9AACQvQBQgr0AAAI+AECrvAAAcDwAgIq8AAC4OgAA0jwAAE68ADCKvQAAsrwAgIi9AMAnPQAAOjwAINe9AMCCPAAASDwAwMW8AGAMPQCgcD0AAP67AACWOwDAMr0AwM88AOBovQAADT0AAOo7AIC+vACASj0AoAU9AHCAvQAAUrsAYEO9AMC6vACQuT0AQHW9AIAqvADQ6D0AwBK9AIAbPACQrL0A4FI9AACjPAAA9zwAwN08AABIOgCAJT0AgLC8AJCPvQBA0DwAAMy8AEBCvQAAtDwAQLW9AIBxvQAAJjwAAPG7AIDiPACAlLwAwBW9AGD5vQDwi70AANy7AICyPABQtj0AAIE7AEALPQCAvrwAAKI8AEACvQAAQLwAAKG8AADWOwAAAb0AgA09AAA2vQDA6TwAgHc9AIAYPACAOT0AwBu9AMDbvABARD0AADc8AACdPACAZrwA4D49AACEvADQgz0AAJO8AAB2uwBwyb0AAGw8AGBDvQAwpL0AYKo9AAAuOwAAIDsAIKO9AACRvABAvLwAAEC9AAAovQAgNr0AAI27ACAhvQAANTwAUJe9ACAcPQBgEr0AQBS9AACeOwCggz0AwCo9AABmPQDAzbwAwB09AAAoOgAACzwAAM08AECCvACAXj0AAAi7AIB3PAAAJjwAANu8ACAyPQCA6TwAgFe9AMBVvQDAhL0AAIg8AIAbPACA2LwAAJg8AMCovAAAzzsAwMs8AIANvACAe7wAAC47ACBmvQAAPzwA4DY9AEDqPAAAUT0AAP27ALDLPQCArDwAgJo8AMCbvAAA6rwA4My9AMCvvACgFj0AAC08AEBOvQBgQj0AgDs8AEC1PQAwsb0AAI+8AEANvQAA5DwA4D09AIDavABA6DwAAAY7AMDVvACwhD0AAHA8AEAivQDg2b0AQEE9AMD8PACgST0AQLw8AMDYvABAqbwAAKW7AAD2OwCAor0AoJC9AKBovQAAWr0AkIc9AABSuwAAcDsAYFU9AMAGvQBAobwAYDC9AADtuwDA/jwAgKW8AMClPAAAiLsAQDg9AECOvACgeb0AQMG8AAAKOwDAJT0AwE89AAC/vAAAkzsAgFE8ACBRPQAA4LoAQD69AAB0uwAAhDoAQIa8AMAsvQCgKb0AQIa8AIAHPAAA9rwAQEe9AABTPAAA/LsAwCU9AIDaPAAArTwAsJS9AAC+uwCAfTwAAOm7AIAEvAAAKrsAgCu8ACBXPQDgir0AAHo9AAAFvQCgbr0AIE29AADpOwAAprwAAKG7ACAovQBAgjwA4DI9AKCIPQCAa7wA4Fu9AIC1vQDgIb0AQGe9AIAWPADAWT0AAOO7AMCUPADAbr0AwAa9AIDRPACgk70AgC88AAB5vADArrwAwAE9AAAYugCgvD0AgHM9ANDQPQAA6r0A8JG9AKBivQAAjTwAQNK8AIC8PAAAhDwAIJM9AAClvQAAQLwAAC48AACOuwDgLz0AAF47AJCMvQCAGb0AAIG8AEC1vADgZT0AAHI7AKCLvQBA4DwAYAA9AEDFPACAnrwAAGY9AECKvAAgdj0AQCI9AIAtvACAHbwAAKi7ACCevQAAuTsAgDm9AOA4vQDAeT0AgJM9AACXuwDAaz0AEOM9AECJvADwoz0AAOo8AIAcvQBQnL0AAOc8AIArvQBASr0AAFc9AIBwPQCAZTwAAAAAALCbPQAAmD0AQBE9AFDdPQBgRT0AALw8AEDqPADwu70AAL27AEAkvQAA+DoAwO48APC1PQBAaz0AAPo7AAAjvQDwjD0AkMY9ALDAvQCAYrwAoBq9AABDvQBA57wAwFa9AABbvAAApbsAoA89AIBmvABAb70AAOO7AACdvACgU70AAGc9AKA/PQDASb0AQCS9AADguQAAULwA4AO9AADbPAAArTwAUKY9AECWvQAAUrwAIA29AHCePQAAe7wAAFC8AEAyvQBASD0AAOs8AAA8uwCABrwAAIu8ACCoPQAAT7wAwHi9AIACPQAAFjsA4EC9AKAbvQAAjj0AgDy8AAAaPQDAzLwAwIo9AAAYOwDQ7z0AgEw8AIDAvACAQr0AgF29AIAfPQAAQLwAQC29AABLPQDwk70AQEo9AMAfvQAAmLwAAKW7AIACPADQkb0AgEm8AICHPADAnzwAgMu8AGCNPQDAHT0AsJu9AADfPAAAIbwAkMM9ACBavQBgMr0AAL48AACkOwAAHbwAYFA9AIASPQCARbwAQKe8APCevQAAcrsAAEu8AAD8ugCA/LwAQI68AAALvQBAi7wA4A89AMC+vABAEb0AgCG8AIBkPADgMb0AoEc9AIB8vQCA0Dw=","chunkHash":"258b6d79441bbecd7806ca89f4f99caec5da390192f1c77ef6cbef44375c3621"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\n# Custom 3D UNet implementation using PyTorch\nclass ConvBlock(torch.nn.Module):\n    #...\nclass DownBlock(torch.nn.Module):\n    #...\nclass UpBlock(torch.nn.Module):\n    #...\nclass UNet3D(torch.nn.Module):\n    #...\ndef train_shape_model(config_path):\n    \"\"\"Train the shape model using the given configuration\"\"\"\n    #...\ndef train_texture_model(config_path, model_type='lowres'):\n    \"\"\"Train the texture model using the given configuration\"\"\"\n    #...\ndef main():\n    \"\"\"Main entry point\"\"\"\n    #...\nif __name__ == '__main__':\n    try:\n        main()\n    except Exception as e:\n        logger.error(f\"Uncaught exception: {str(e)}\")\n        logger.error(traceback.format_exc())\n        sys.exit(1)\n```","range":{"startLineNumber":481,"startColumn":0,"endLineNumber":655,"endColumn":0},"embedding":"AIC7PADARb0AwFQ9AOClvQAAlDoAADG9AIAwPABAYz0A4BC9AADVOwDga70AwME8AED0PAAAkzwAgKo8AEDtPAAAYDkAQFI9AIDYPACAETwAcII9AACSOwCQgz0AAOU7AEDrvABwkT0AsIY9AGAyPQAA6LoAAFK7AIAAPQBAirwAoKS9AIB6vQAAYrsAgCc8AADUvAAAgT0AgM+8AED+PACgPj0AUJ69AIAkvABgQz0AgPW8AKBTvQAAXr0AYDU9AMDFPABA2zwAAGO8AEATPQCADLwAgJE8AHCCvQAAWDoAAPI7ACAWvQCA9rwAAIA7AEDePAAgTb0AgLw8AKAFvQCAXDwAACS8AOCkvQCAhbwAAGC9AAC0PAAA6bwAgDO9AIBHPADA1LwAgHc9AABiOwDgeb0AyBY+AADGvACAHbwAgEo9AIAuvABAjzwAAE68AIACPAAQk70AwOe8AIAjvQBAzjwAAPq8AABlPACgEr0A4Ce9AEAHPQDAxjwAgJw8AIAlPQBgP70AgJw9AMAYvQAAQDoAoEE9AAAfvQCAITwAQLa8ACAjvQAAarwAAMi7AMCXvADQlD0AIEi9AMCfvAAgSz0AACs8AMD1PAAgsr0AALk8AABOOwAAnLwAgBi8AMC0PADgFT0AALi6AADQOQCASj0AAPC6AAACPQDgAj0AQO29ACAWPQAAGbwAQEE9AECPPADgYL0AAB28AFC5vQCAlr0AgAQ9AACTvAAAF7wAgKS8AABjvADgY70AgE88AECkvQAAmz0AYIq9AMANPQBA07wAQAo9AODAvQAAvDsAwH09AIAmvAAA37wAsKu9AID1vADQkz0AACM9AGBbvQAAgDoAADo9AEDkvADgQT0AAN27AMAuPQBgSr0AgME8AKAivQDA3b0AoHs9AED/PADA1rwA4E69AGAKPQBAorwA4M69AADAuwAALjsAAGw7AIANPABAPD0AcKu9AEDYvACAAL0AwNc8AACZPABAnjwAAA08AGASPQAAKr0AQLo8AACouwAAwLgAoKc9AAC6PAAgpD0AgMm8AIBSPQAAjDwAgIe8AACAPQBAs7wAgEK9AEAnPQAgtb0AAL87AADBvADgKL0AAHg9ACAjvQAASrsAgEo8AECmvACgnL0AgDa9AACSvAAAAb0AgJA8AMAoPQCQhj0A4CK9ALCCPQCASz0AwCw9AIAUvQDA2LwAkJ29AMDePAAADjsAQM28AIDkvACABLwAAFK7AAD3uwBAjb0AAKC6APCFvQDAHz0AABE9AIATvQDAkDwAUIK9AABUOwCAqD0AAJ27AADAOgCgfL0AADC6AAAFPQDAlDwAQJY8AEB8vQCgKb0AAMQ7AKApPQAA+zsAYA+9AMAbvQAwhL0AkJA9ACBqPQAAjb0AcIM9AEBovQAArjsAIE69AAAXvACA/bwAIAu9AOBUPQBgW70AAIw6AABPPACA9bwAwK88AEC1vABwlD0AIIE9AABeuwCAXLwAwLS8AICmPQCAKDwAgBW8AADaPABgDr0AAEE8AKBFvQAgDL0AwFY9AICNvADAmL0AAMw8AECBPACABTwAgMy8AIDRPAAAPLwAICS9AADnPAAAfrwAwL+8AACfOwDABz0AAOo8AECEPACAbrwA8JE9AADnvACAM70AALS6AMDKvACAwrwAAMA4AOCOvQCARzwAIB29ANCBPQCAmjwA4C29AABmvQCgCL0AAPg6AAC6PADglz0AgIS8AIBGPQDwur0AQB+9AMDNvAAQkL0AQP48ADChvQAgGz0AgGi8ACAWvQDgcj0AACC6AKBIPQAgwb0AgJu9ACBdvQCAezwAgKS8AACaPAAAiLoAwHo9AEDePAAAAz0AYFU9AIC5vACA8LwAgOW8AIAlPACgCr0AIGC9AAArPQAAgTsAgEO8AFCrvQAAuDwAgLY8AEDHvAAAUrwAgPg8AADFvABgRD0AcIK9AGBFvQBA5LwAAAA5AOC1vQDAyDwAgJq9AIASvACA2DwAYJs9AAA1vACAIjwAML49AMCIvQAAjD0AgPC8AKBNvQBgl70AQNI8AIDCvAAASLsAAHY8AMDvPACA2bwAQBY9AAARPACA+z0AoAM9AHDKPQDA/LwA4A09ACAmPQBA5LwAAK27AAD2uwAAU70AAOQ7ABDZPQDw1T0AwJm8AOBOvQCAPT0A0IY9ANDkvQAgE70A4Em9AIArvQDgK70AoGW9AIBVvAAAjrsAgD09AMD4PACgXr0AQNa8AADvvAAAX70AAMA7AAA/PQBgLb0AwOk8AAABvQDAUz0AAKq7AADAvACAJz0AgAY9AMCbvAAAz7wAAKS8AIBCPAAAKLsAAAm8AADIugAAKLwAgHs8AADQuwBgDr0AMLC9AGDSPQDAGL0AAP28AAAQugBgiL0AAL67AADfOwDAdz0AANS8ABDjPQCAwjwAMKI9AKBcPQDA0j0AAKW7AADxuwAAv7wA4DO9AACAOACAn7wAgKg8AEABPQBgab0AgCM9AABguQCAHT0AAHA6AKBQPQAgD70AACm8AMAQPQCgJj0AgDI9AEABPQCwoD0A4Li9AABbPACAhLwAQNI9AACcvQCgRb0AAKg8APDUPQCgSb0AIAw9AIDYPAAAF7wAACQ8AGDQvQCAWr0AQLq8AAB4OgBASr0AsJ49AIDBvAAgQj0AACA5AIDKvAAgPb0AADA6AMCYPACgbb0AwMw8AICAPABAcj0=","chunkHash":"08575b5e78d2325aaa12388b2b811ff658bd2218896380fa7ed0ba5aa8b2089e"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    def __init__(self, config, model_type='lowres'):\n        logger.info(f\"Initializing {model_type} TextureModelTrainer\")\n        # Using PyTorch's native libraries instead of neurofire\n        self.config = config\n        self.model_type = model_type\n        self.device = torch.device(config.get('device', 'cpu'))\n        logger.info(f\"Using device: {self.device}\")\n        print(self.device)\n        self.project_dir = config.get('project_directory', f'experiments/{model_type}_texture_model')\n        os.makedirs(os.path.join(self.project_dir, 'Weights'), exist_ok=True)\n        os.makedirs(os.path.join(self.project_dir, 'Logs'), exist_ok=True)\n        logger.info(f\"Created project directory: {self.project_dir}\")\n        \n        # Start a new wandb run for this training\n        self.wandb_run = wandb.init(\n            entity=config.get('wandb_entity', None),\n            project=config.get('wandb_project', 'MorphoFeatures'),\n            #...\n```","range":{"startLineNumber":191,"startColumn":0,"endLineNumber":207,"endColumn":0},"embedding":"AAAauwCgTT0AQBI9APDJvQDA8bwAABW9AICxPABQnD0AYES9AIBaPADAYr0AAO67AIByPABAh7wAQBo9AAAIuwBggz0AoH89AOAlvQAARzwAUIU9AEC8vABgbb0AAA69AEBoPQDAuDwAAJK7AAAvPQCARzwAALc7AIDNPAAAB7wAYCi9AID8vAAAG7wAoEC9AMC6PAAwnD0AwKs8AADeuwAAeDoAkMK9AMCFvADAeD0AgKA8AADxuwAAuLsAUNo9AIDBvAAAhjsAgAe8AKCAPQAAerwAoA69AABgOwCAXbwAAE47AMDxvACAu70AgAu8ACAiPQCgL70AAO88AAATvABAJT0AgOa8AEB9vQCgBb0AAEi9AIBUPQCAJzwA8KG9AACwOQAAUbwAgCE9AMCNvABQpb0AIHk9AACBvQAAmjwAgEC8AADCuwAAr7sAAOs7AGCQvQAA3LsAQPq8ACAePQAAOj0AMNK9ACApPQAgBD0AQFe9AIANPABQhz0A8Ka9AAD4OwAANr0AgKE8ACAfvQAAaDoA4Hs9AABuuwCgOT0AACA7AOB8vQAgc70AYFC9AIBMvAAw2j0AAFS9AIC5vABg5j0AgDC8AMDTPACAwL0AwJA8AABGPACAkzwAACY7AIA3vADgWz0AAAA6APCUvQCAuTwAQIw8AIA3vAAAqrsAgCK9AGAbvQAAjDwAAAY9AAAeOwDA27wAII69AEDmvQCAfb0AACC5AKAQPQDAbT0AADK8AADqPABAsrwAAP08AID+vAAAYjsAgG28AIAcPABgDb0A4Bk9AICCvQAAMrsAgHg9AACIOwAAqDwAADS9AKAQvQBwjD0AAKA5AEDhvADAgLwAQJA8AAAdvADAOT0AACm9ACAGPQDQyr0AUIQ9AMA+vQCAbbwAAHc9AGBIPQAA67sA0JS9AIBOPACAaL0AQN28AIBWvQBgEr0AAIm8AABouwAA87sA4Gi9ACCIPQDA0rwAAPO8AIBFvAAAqDsAAKK7AMAbPQDAD70AgBE9AMAqPQDAGT0AIKE9AACAOQAAID0AwNs8AABAOwAA9DoAYA69AEBzPQAA1bsAYDu9AIB5vAAgBb0A4AQ9AIDMPAAAlbwAgIY9AMD/vAAA6jwAAIk7ACBcvQCAGb0AQJ28AGACvQAAxzsAwA49AABjPABgVj0AgPa8AGCWPQDgaj0A4Hg9AADkuwDAjrwA4K29AADYOwCAEzwAANi7AACFvAAgZz0AAHQ7AKDAPQBQxL0AALA5AIAuvQDQnD0AABs8AABEvQAAqzsAgMu8AMCLvACAmD0AgI68AIB5vQDgsL0AoGM9AADDOwAAZTwAQH09AIBivABgM70AYD49ACAJPQCgKb0AgDi9ACA9vQCgdr0AQLk9AADQPAAA4LsAAPc8AICavABgJb0AQHC9AADtvAAAgrsAAD68AAAQvAAAErsAICE9AGAxvQAgUL0AADA7AAAePQAAWzwAwPA8AAD0PACACTwAwBW9ACAEPQBABb0AQAm9AEDFPABwgb0AICe9AABuvQDgab0AgBG8AIDlvAAgkb0AgJ69AAAmvACAMTwAACE8AACluwDA0DwAgIe8AIBkPAAA7rsAIA29AIB9vACANDwAgIY8ACCePQBAc70AUJQ9AEAivQAgfr0AAA+9AACkOwBA/bwAICE9AACbvADA7DwA4CI9ABClPQAAtTwAMIS9AIDjvQAA7bwAYCm9ACArPQCAyDwAAKg7AICsPACA/LwAwJC8AABkPACA57wAAMY7AEDKvAAAPbwAwGo9AADQOwAQrz0AwIg9AAD8PAAwvb0AYIC9AHCMvQBQlD0AgII8AEBwPQDAEb0AIGE9AKAxvQAAUDsAAMc8AOAwvQBAyjwAQAK9AMB0vQAA7rwAAFi7AAAEOwDAnzwAABU8AFC1vQDgVj0AwHU9AEC1PAAAAb0AgHg9AAB9vABArj0AYHQ9AMAOvQBAhrwAANI8AMClvQCA6jwAwFm9AAAMuwAgTz0AYFA9ACA3vQAAbjwAIJA9AED3PACgwD0AAPg6AKB0vQBgnr0AQCU9AOAwvQDglb0AgJQ8AMBTPQCAP7wAgCm8ACBQPQDwsT0AsK89AMB1PQDgFj0AQBQ9AACjOwAA070AAIC7AHCRvQAATbwAwN88AICoPQDAxDwAgNA8AOBCvQBgYD0AMIo9ABClvQAAjrsAgKq8AOBQvQDABr0AIAC9AMCNPAAA1rsAgCw9AIC6vABAAr0AgI88AAByuwAAgbwAgEw9AMAvPQCAWbwAIA+9AGAOPQBgBD0AAMe7AIB7vACAWDwAYBQ9AIA8vQAAFzwA4A+9AMCFPQAgAb0AQBs9AIAvvQCgCz0AQK48AAACOwBAuTwAAOy8AABaPQCAnrwA0I+9AAB+PACAAz0AgJu8AAAovACApj0AQJA8AICtPQCARjwAYD49AMChPAAg9j0AAOi7AAAzvACQhb0AYJu9AGAOPQBA0jwAQLY8AIC5PADwwb0AoBs9AAAIvABAnjwAACa8AEBZPQCgWL0AAIe7ACAuPQDA5TwAANA5AMAzPQAAJz0AkIy9AIDMPAAAcrsA4O09ADCavQBAu7wAwCA9AOAZPQAAqbsAAFU8AHCMPQAAPbwAQJK8AIDgvQAA9zsAgA08AACkOwAA+rwAACI8AECqvAAAqrsAkJQ9AABPPAAAL70AACM8AABTPQDwzr0AgBY9AACCvQAgFj0=","chunkHash":"bcb45b86c323841510ee89a3268f96e0b1fa970c97a16075c1ddc9466c7ea163"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    def __init__(self, config, model_type='lowres'):\n        #...\n            config={\n                'model_type': model_type,\n                'learning_rate': config.get('training_optimizer_kwargs', {}).get('optimizer_kwargs', {}).get('lr', None),\n                'architecture': config.get('model_name', 'UNet3D'),\n                'dataset': config.get('data_config', {}).get('root_dir', ''),\n                'epochs': config.get('num_epochs', 1),\n                'batch_size': config.get('loader_config', {}).get('batch_size', 4),\n                'box_size': config.get('data_config', {}).get('box_size', None),\n            }\n        )\n        logger.info(\"Started wandb run for training\")\n        \n        # Try to import the custom dataloader adapter\n        from dataloader.lowres_texture_adapter import get_morphofeatures_texture_dataloader\n        self.get_morphofeatures_texture_dataloader = get_morphofeatures_texture_dataloader\n        #...\n```","range":{"startLineNumber":207,"startColumn":0,"endLineNumber":222,"endColumn":0},"embedding":"AACLOwCAXj0AwHk9AEDLvQDA/7wAgBG9AMDHPAAQnz0AwGC9AGAFPQAAV70AQOW8AACiOwAAMLsAYCs9AADsOwAQhD0AYI09AAAavQBA4DwAAI49AADxvAAAar0AQCC9AKDCPQAAnDoAAJY8AOBYPQAAIzwAwIK8AICdPAAAgbsAYHe9AADevABArjwAgE69AIB3PADAuD0AgBw8AIAIvQAAOjwAoJi9AIA1vADARj0AgIQ8AADquwAAFjsAILs9AECSvACAzjwAAFq8AMBqPQCAlLwAoC29AAAAOgCAD7wAALA6AIAUvQBAnr0AwKC8AKAKPQBAKr0AQIY8AIBtvAAgJD0AQKK8AAB7vQAAOr0AUMS9AOBrPQAA8LoAkKG9AAAGuwCAd7wAYDo9AACfvADAdb0A8M49AKCjvQDA+jwAAHC8AAB0uwCAGbwAAMy7APCMvQAACrwAQMa8AMAyPQDANz0AIKi9AACdPAAAHj0AgAm9AECnPADQkz0AgIq9AAAmPAAQg70A4BY9AMAzvQDAmrwAgOw8AACeOwBAPz0AAIY8ANCxvQAAFL0AIDW9AACUuwBgxj0AwHe9AAAQvACgoD0AgLW8AGADPQBA4L0AACa7AACaOwAA6LoAgE68AMDovAAATT0AAAg6AKCbvQAAyjwAAJa7AIBCvAAACDoAoGa9AADPvACAejwAAFQ7AABcOwAAb7wAYIi9AFgCvgAAS70AAGG8AIAqPQBAgD0AgLm8AEAOPQCAD70AIB09AIAFvQAAgTwAAIO8AAACPABAnbwAAEs9ACCDvQAA+zsAQJ09AIAtvAAADjwAoH29AOAXvQDARz0AAMo7AAAXvAAAOrsAACc8AADKOwCALD0AAPy8AIDyPADgqL0AIEY9AECCvQCAAbwAoL09AAD/PAAAAjsAAMG9AACnPAAwgb0AgKi8AEARvQBgIL0AADA6AIASvAAARLsAAGK9AABBPQAASLwAwC+9AECzvAAASDsAgJu8AMAUPQCAKr0AQAI9AKAqPQAAhjwAcJc9AACMuwCgJz0AgIQ8AID2PAAACDwAQKO8AKBKPQCAELwAoBO9AAB+vAAAA70AAGo8AKAdPQCAobwAYGE9AAD1vACA2TwAALw6AEBGvQCAGr0AAJw6AKAKvQAALbwAIBI9ACAVPQBgPj0AwL+8AFCPPQDgWj0AgCw9AMDAvABA9LwAEJ+9AACEuwCAOzwAAJm7AOAnvQBgWj0AALO7ANC8PQBw0r0AAIa8AKBsvQDAXz0AAEQ8ACAkvQAANjwAwOm8AMCwvACAkz0AAC+8AGBmvQCAq70AAHg9AABgOgAAqzsAoBg9AOAlvQBAiL0AQKQ8AIBSPQCAMr0AwBC9ACClvQDgj70AQHw9AABHPAAAr7sAAMU8AACQvACAeLwAgEu9AMA1vQBArzwAgLO8AAASvAAAfrsAQPg8AEA6vQCABL0AANI7AMCaPAAAbDwA4Ak9AGACPQAAELwAAPq8ABCGPQAAmbsAQBi9AABkOwCAIr0AQB+9AABavQBgWb0AAGe8AEAWvQDgbb0AYFq9AAAgOwAAnzsAAFa7AAAtPACA6zwAYFm9AIAYPAAAU7wAAJO8AAC8OgAAM7wAALY7AHCWPQBgVb0AcKQ9AEDcvABAjr0AICi9AADJuwAA9LsAgBA9AABSvABAHD0AYA09ACCBPQAAKLoAAJa9AADGvQAA9rwAoBu9AGAhPQAAnDsAwAu9AADOOwBgaL0AQMy8AADAOgAA9LwAQMu8AEACvQCA0rwAsIk9AIB4PADAwz0AII49ACAcPQDQnr0AQC29AAB/vQDAIz0AwMM8AGCVPQAAnbsAQIs9AKBkvQCAWDwAANs8AEBovQDATD0AgL68AGCEvQCAvLwAAK27AAD0ugAAxDwAAAg6AOCdvQDAQz0AAC09AIAUPACAOL0AQF89AEDYvADQmT0AcIE9AIDlvABAhrwAwCc9AJDPvQDA9TwAgIO8AADivACAfD0AgGA9AKAuvQDgOD0AUMQ9AMA2PQAw1D0AgGi8AAAhvQDwlL0AAAC6AOBOvQCgbL0AgH88ACAuPQCAFrwAAOS7AMB8PQBgxT0AkJY9ABCaPQCAqTwAwAI9AACZOwCw2b0AgBm8ACBsvQCAVbwAAJE7AAB+PQDAxDwAANi6AADluwDgYD0AEI89AGDgvQAA0bsAgE29AOB6vQBAlrwAgD29AAD7uwAA/TsAAGA9AICQvAAA3rwAAF08AGAjvQAA+jsAIHM9AMDTPABAh7wAoHe9ACAuPQCAnDwAgGY8AADTuwCApzwAAPQ8AKA0vQAAJDwAQNi8APCWPQCAJb0AoCE9AED4vAAAwLgAwNI8AABTPADAxDwAgEq8ANCRPQDAyrwAgH+9AAASPABAJz0AQLW8AACqvAAgsD0AgDI8AEBwPQDAiDwA8IM9AICBPAAQrD0AAEG8AADOuwCQgb0AoI29AMCzPADAxDwAACg7AKA5PQBA3r0AgMU8AADiOwAgFz0AAFK7AKAvPQDgI70AAOy7AMDvPAAADDsAAIe7AGBnPQDgKz0AwJK9AAAKOwCAELwA0OE9AACIvQBATr0AgPo8AECgPAAAYLsAQI48AABpPQCAObwA4Ay9ACDAvQAA8LsAAOS7AADvOwAA9bwAAHu8AEBGvQAAALgAoJg9AACnuwDgRL0AAAg8AGAWPQBwrL0AgEM9AOCHvQDA2Dw=","chunkHash":"04c0ad64d57c2cafef56076d00cd8e48ba0ee0926a879e6fde4ec7c28d81cdd6"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    def __init__(self, config, model_type='lowres'):\n        #...\n        self.has_texture_dataloader = True\n        logger.info(\"Successfully imported texture dataloader\")\n            \n        # Setup the texture model\n        self.setup_model()\n        \n        # Setup dataloaders\n        self.setup_dataloaders()\n    #...\n```","range":{"startLineNumber":222,"startColumn":0,"endLineNumber":229,"endColumn":32},"embedding":"AADQOwAgkz0A4DA9AHDOvQBAubwAAOC8AAATPQCQkT0AYBi9AICPPABAOL0AgLS8AIBvPACAUjwAgMI8AAD2uwCgYz0AwH89AIANvQDA8DwAEK89AIBfvAAgc70AoAa9AJCxPQAAFjwAgEg8AIA5PQCAxLwAQKi8AABjPAAAbLwAYFe9AMAOvQAA7DwAgGS9AEDoPACwxT0AwIA8AAD0vAAAnjwAEIq9AAAsvABAMz0AQKQ8AAAkOwAA/TsAcKI9AIDevACAVTwAQM28AOAqPQAADrsAgAi9AACLuwAAKbwAACy8AKATvQDgnr0AQAW9AGAXPQBAY70AAPU7AADYugBgGz0AQIy8AFCKvQBwjL0AAJW9AKA7PQAAvDoAAKy9AACMOwAAI7wA4Fg9AED3vAAAZr0AsNE9ACB0vQBAEz0AgC68AIAHPAAAhbsAQKy8AGCFvQBAzrwAAHa8AKAPPQCAcT0AkLG9AEAiPQDAFj0AoBC9AACkPADgqz0AgHi9AICfPABAgb0AwJY8AMAivQAAFrwAQCU9AADluwCgWz0AAKC5AGCAvQAgQL0AQDa9AAAoOgCQxT0A4EC9AMCjvABA9T0AAKi7AICmPADgw70AQIe8AAD5uwAA87sAALw6AMAovQDgSD0AQIO8ANCOvQDAmDwAAOy7AIDzvAAA17sAsI+9ACAHvQAAwzwAAEg6AADDuwCAGrwAoGq9AODvvQDgY70AQMy8AOBZPQAgTD0AgBS9AMDiPAAgQL0AgEo9AECDvAAAIrwAQNC8AABCuwAAYDkAIBI9AIBvvQAAdjsAsIU9AACIugCATzwAoH+9AAAWvQDA/TwAABg7AIDPvACAdbwAQL08AEDDPABgFT0AAO28AEDxPAAAnb0AAPk8AOBGvQAAmbwA0II9AEAAPQCAQrwAcOK9AAAbvAAgfL0AAAS8ACADvQBAfL0AAAI7AAC/uwAA8bsA4Hi9AADLPAAACLsAgJe9AMC+vACAJzwAACK8AGBnPQAgBb0AAMY8AAC3PAAAjzwAYGM9AACYugDAMT0AANE8AAChPAAAkzsAgE68AFCAPQAAfbwAgPK8AAAdvQDgDr0AgGE8AEA1PQDgHL0AgFc9ACAHvQDAizwAAJK8ACAwvQBACL0AgGu8AAC1vAAApTsAAOM8AADuPADgMj0AIBG9AHC2PQDgVz0AYAQ9AMDFvABA1bwAAJ+9AABkOwAAmDoAAHw7AIA4vQBgbz0AQJa8AMDtPQCg5r0AwLS8ACBJvQBgeD0AgIE8ACBkvQAAlzwA4BK9AABGuwAgbz0AgHC8AMBavQBAk70A0Js9AIApPADAtzwAgDo9AAASvQCAhL0AAJQ8AMAyPQBgUL0AYE69AKDBvQBgdr0AsJg9AAAfPAAA0rwAgL88AICgvAAA8LkAwCO9AMAhvQAAlrsAwAq9AADtuwAAZrwAgBI9AEAXvQDgVr0AACm8AAC3PABA4zwAAAI9AEAKPQCAebwAwMy8AOBtPQAAgjsAgNm8AACMugBAA70AAAu9AMA+vQCgVb0AAOu7AMAPvQAwgL0AYG29AADAOQAAQDwAADy7AAByOwDAkTwA4E69AECuPAAAeDsAAAy9AEC0vADAwbwAAKQ6AEB2PQBAgb0AkJQ9AID2vADge70A4Dy9AIA8vACAFbwAwLk8AECEvACA9DwAgAg9AMBwPQAA0LoAwF+9APCzvQAgAb0AIFu9AEAGPQCArjwAQBO9AIAaPACAbL0AAHK7AACtOwCA67wA4AC9AADeuwBA7bwAAJM9AAC0OwBAzj0AAHo9AADkPAAwmb0AYC69AKCfvQBgUz0AgFI8AEBMPQCAuLwAMJE9AIBlvQAAnDoAgHs8AOBbvQDgND0AwJa8AFCxvQAAnrwAwIe8AIAFvACAbjwAACw8ANCJvQAAMT0AwOc8AAA6PACgC70AQHw9AEAyvQDwgj0AwGQ9AEDfvAAA8LwAQOo8AKCSvQDAJD0AgH28AEDgvABwjz0AYEY9AGA9vQCAND0AoLU9AEAVPQCQ5D0AACC8AEBFvQAgnb0AAAw8AMBjvQCgQb0AgBQ9AOAqPQBA07wAAJa7AGCLPQAwoz0AgI49AFCnPQBAOT0AgNo8AAA+OwCgzb0AAFi7AABAvQAAITwAAKQ7ABCNPQAAFDwAAIA4AIApvADAhj0AcLQ9AKDLvQAA6LoAoAK9ABCbvQBAu7wA4DC9AAD3OwAAD7wAAO48AACUuwAAybwAAD88AIBFvQCAVDwA4HI9AMABPQCAt7wAIJ+9AOAJPQAAnjwAAIS6AAD8OwBAszwAAFM9AADkvADA1DwAgPe8AOCXPQBALL0AgP08AEDUvAAALD0AgHc8AIARPACAMDwAAJa8ANCDPQAAvbwAAAy9AMCoPADgdD0AwDC9AICRvABQqj0AAO08AKBkPQAAPDsA8J89AMC2PABQtj0AACg8AAA4OwBgXL0AQIu9AEDOPABgDz0AAIQ6ACBDPQBgxL0AQOE8AAAguQCgJT0AQIK8AOBLPQAATr0AAOC7AICUPAAA3rsAAKi6AOB6PQDA0jwAEJ69AADwOwAAn7sA8Po9AEBvvQBgHL0AQPM8AICNPAAAfjsAAGU8AABpPQAAPLwAQP+8AKC8vQCAkjwAgBm8AIDwPAAABL0AgLm8APCJvQCAQTwAsJY9AABLvADA7rwAAIE7AMDDPACwr70AAFU9AKBhvQCgaT0=","chunkHash":"0d47f975d9ee9885386063d0471c60d888168c3741e61d07902118863ae7c27d"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def setup_model(self):\n        \"\"\"Set up the texture model, criterion, optimizer, and trainer\"\"\"\n        logger.info(\"Setting up model\")\n        model_kwargs = self.config.get('model_kwargs', {})\n        logger.debug(f\"Model kwargs: {model_kwargs}\")\n        \n        # Create a custom UNet3D model instead of using neurofire\n        self.model = UNet3D(**model_kwargs).to(self.device)\n        logger.info(f\"Created UNet3D model: {self.model}\")\n        \n        # Compile the criterion\n        criterion_name = self.config.get('loss', 'MSELoss')\n        criterion_kwargs = self.config.get('loss_kwargs', {})\n        logger.debug(f\"Criterion: {criterion_name}, kwargs: {criterion_kwargs}\")\n        \n        if isinstance(criterion_name, str):\n            self.criterion = getattr(torch.nn, criterion_name)(**criterion_kwargs)\n        else:\n            self.criterion = None\n        #...\n```","range":{"startLineNumber":235,"startColumn":0,"endLineNumber":252,"endColumn":0},"embedding":"AADPuwAA1jwAwKI8ANDJvQAACLwAQMC8AID4PACgsD0AQPy8AMCUPAAgUr0AIEq9AACROwAAFbwAYDg9AMCevACA+TwAoHc9AAAYOgCASjwAIHk9AMCivAAgR70AQBe9ABCmPQBAuzwAAP27ACAVPQAA1TwAwNe8AIDhPAAAhLoAcI+9ACBYvQAALjwAABC9AADcOgCwoj0AALO7AIBdvAAA3TsAcI29AECBvADgVT0AAAy7AIAhvADAkjwAAK49AABmvACA1DwAwN+8AHClPQCAkrwAQCu9AABpvACAwbwAAEK7AACouwAgvb0AAF67AACcPACAeL0AwIc8AABQuwAAEj0AwFK9AKA/vQCgKb0AUJK9AMBmPQAAYTwA4Lq9AGAGPQCAnbwAQHU9AACTuwDgpL0A0Kw9AAArvQAArjwAAEu8ACA2vQAAfTwA4Da9ALCgvQAAAL0A8IW9AIABPQDA7TwAQOG9AIA0PQCArDwAQES9AMCPPADgoT0AAJO9AICqPAAA97wAQBQ9AMBYvQAAAbwAgB49AAAsuwCgNj0AACo8ACBCvQDgob0AwLe8AAAOOwAwwD0AADm9AABLvAAAyT0AAFA8AADQOQCA370AAOc7AACKuwCAWLwAAD+8AMDEvADA7TwAANI8AIB+vQCAUT0AgAG8AAAwOwAAMDsAoGq9AAAQuwCgCD0AgKU8AACLvAAgHL0AoHW9ANDOvQDgFb0AAPm8AADzPABAcz0AgCO8AEDrPACADL0AwAI9AIArvQCAPbwAQOC8AIDEvAAgAL0AwOI8AEA8vQAAzDoAQIA9AICSvADAhDwAACC9ACBavQDgKD0AAI07AIDuvAAAVrwAIDg9AACwuwCgTj0AQI68AECgPAAwyL0AYHI9AABjvQAAXrsAEJc9AIApPQCAHrwAEIu9AIACPQDgXr0AAAo8AEC2vACQhL0AADo8AADvuwAAsbsAwFe9AGBfPQDAkbwAYAG9AAClOwAAHLwAgMu8AABfPACAu7wAQMU8AIAlPACAHz0AwJc9AACGuwAAJD0AADw8AAAgOQAAAjwAALq8AOBzPQAAlLoAwGa9AAC9OwAwg70AwK88AIAPPAAAG7wAsJY9AIAWvQAAGD0AAOI7ACBCvQAgLL0AAFS8AICUvAAAoDkAABk9AIAUPQAAaT0AALC5AKBiPQDAEz0AgFI9AADHvACAybwAwJC9AADcOwCAFbwAAPS7AICTvABAjDwAAJA5AJCHPQBQz70AAE28AMCNvQCgWT0AAOs7AOAfvQAAszwAoCW9AAA0vABgsD0AALG8AKBcvQAwhL0AIDY9AAD3PAAA1jsA4AY9AIAAvAAAJr0AYCg9ACAMPQCAA70AoGS9ALCivQDAq70AIIc9AEBOPQAALLsAAHS7AIA2vAAAjDoAQIe9AOBcvQAAqLsAAGC7AAC4ugBAhLwAAHw8AEBIvQAAOb0AAIQ8AED9PAAAoTwAQFs9AAAguwBgDL0AACa8ACC9PQAgJ70AgK28AAA1PADA1LwAQPS8AOBGvQDwh70AANa7AOBfvQCwlr0AADe9AABjPACAFDwAAL+7AECHPADAkTwAgAO9AICrPAAAYDkAgFe9AADdOwAAuLwAABs8APClPQAwgL0AoKQ9AMAyvQCAYr0AAMy7AIDmPACgQr0AoEM9AIBsvABAKz0AABg8AECkPQDAxzwA0Ja9AMDZvQDAjrwAAA28AADUPADAgjwAgOm8AAA3PQAAcL0AAOG7AABgOwBAPr0AAPm7AIB5vAAA7LsAgGQ9AECCPABQ4j0AcJY9AAACPABwwr0AMIK9ADC8vQAgNj0AAMA5AIA1PQDAKL0A4Jc9AIDUvAAAvTsA4AA9AMBJvQAAAT0AABS7AJCHvQAAVb0AgAq9AACjPACAeTwAgE48APC2vQCATj0AAEU9AADMugCAprwAwCo9AIBHvQDAtz0AwBA9AIDTvAAAOb0AgGk8AJCKvQAALD0AIGK9AEC1vAAgKz0AIGM9AAArvQCAvTwAIJo9AAAuPQBAPj0AALK7AEAlvQBAg70A4A09ANCUvQCgSb0AAMQ8AEAoPQDAB70AABo7AOBKPQCAxD0AwKs9ADChPQAgVT0AwBg9AIDqPAAQ270AgAc8AKAzvQBA87wAAIA8ANC4PQCgFT0AgKg8AEAivQCAiz0AAIk9ACCTvQAAtbsAgO28ACB/vQCA5rwAAKS8AAAaPAAAO7wAAD89AACFuwDAHb0AQOs8AACxvAAAJ7wAAPM8AID5PACAqLwAQCm9AMCVPABAiDwAgHQ8AIB5vABA5jwAYBY9AADPuwAApzsAgPq8AGBAPQDAlbwAYCM9AMBDvQCAPjwAgME8AACEOwDgJz0AAOa8ACByPQCAWrwAANW8AEDkPADAijwAAFa8AAAkPADQ0z0AgFo8AJC5PQCAIT0AQFI9AMBLPQDwwD0AQAc9AADDuwBAX70AoIG9AABDPABAxTwAABY9AEApPQDQtL0AQAI9AID3vACAGT0AwNC8ACBLPQDAjb0AgFc8AKAiPQBgBz0AwNu8AMBwPQCAnTwA4Eu9AADpPACAN7wAUOo9AKBIvQDA07wAIAU9AOAcPQDAvjwAAEU8ACAfPQAAMLwAoA69AFD9vQAA+DwAAJU8AIBNvAAA4DkAACk8AICsvAAAW7wAYLo9AIApPACgUr0AQO+8AKAwPQCg170AcIg9AIA/vQAgbj0=","chunkHash":"6786362158306fb9ff710e1f17f884ab7a6f87d018b0a20a3fed61cf9988ef9f"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def setup_model(self):\n        \"\"\"Set up the texture model, criterion, optimizer, and trainer\"\"\"\n        #...\n        logger.info(f\"Created criterion: {self.criterion}\")\n        \n        # Build optimizer\n        optimizer_config = self.config.get('training_optimizer_kwargs', {})\n        optimizer_method = optimizer_config.pop('optimizer', 'Adam')\n        optimizer_kwargs = optimizer_config.pop('optimizer_kwargs', {}) if 'optimizer_kwargs' in optimizer_config else {}\n        logger.debug(f\"Optimizer: {optimizer_method}, kwargs: {optimizer_kwargs}\")\n        \n        self.optimizer = getattr(torch.optim, optimizer_method)(\n            self.model.parameters(), \n            **optimizer_kwargs\n        )\n        logger.info(f\"Created optimizer: {self.optimizer}\")\n        \n        # Setup scheduler for learning rate\n        self.scheduler = torch.optim.lr_scheduler.ReduceLROnPlateau(\n            self.optimizer, \n            mode='min',\n            factor=0.98,\n            patience=100,\n            verbose=True\n        )\n        #...\n```","range":{"startLineNumber":252,"startColumn":0,"endLineNumber":274,"endColumn":0},"embedding":"AADAuQDALj0AgFw8AIDNvQDAmrwAAOS7AABePQAwiT0AgLq8AMCtPABARL0AACe9AABquwAAuLsAAGc9AADIOgDARD0A4Ic9AMCFvADAyjwAIH89AADkvAAwhr0AQBG9AHDPPQAATjsAAM07AAADPQCA1jwAwLi8AICoPAAAnLoAoKS9AGB/vQAAyDwA4Fe9AAAaOwAQqz0AQLc8AICJvACAdTwAQES9AACqvABgdz0AgJ88AIBqvACAwDwAMJ09AIDovACApjwAoAu9ANCIPQCAmbwAoBO9AADTuwAgHr0AAKK7AIBNvABAmb0AgHW8AAACPQCgTr0AAFY8AIAJvABgIT0AwLi8AKA/vQBATb0AAKe9ACBaPQAAxLoAUMi9AIDDPAAASLsAIFg9AAC8vAAAdb0AcNc9AGAqvQDgBD0AgAe8AEDtvAAApDwAALS8AJCUvQCAXbwAIDy9AEA6PQAgLj0AIMW9AOAKPQDARD0AoA69AMCgPABQzD0AgGq9AIAnPACgB70AgMo8AOBYvQAAlLoAQOs8AIA4PAAAcj0AAEI8AEB4vQDgbb0AAOe7AABQOgDQwT0AwFq9AAAAPACwqD0AAC+8AADYOgCg4r0AAE67AACkOgCAS7wAgHW8AIDTvACgEj0AALI7AKCVvQCgFz0AAAA5AAAmvABA2rwAgG+9AACavADAuDwAgJM8AIBfvAAAqbwAgJO9AKDfvQDgBb0AAAK9AKAvPQCATz0AwNG8AMDsPADgCL0A4GM9AMCtvAAA27sAQMu8AICTvACA17wAIGA9AKAnvQAA5DsAUIM9AICQvACAhDwAYGu9AABGvQCA1zwAADg6AACdvAAAnLwAgA89AADwOwCATD0AAJu8AIBfPADww70A4Dg9ABCJvQCAg7wAkKY9AEC8PAAAr7wAMLq9AEChPAAAbb0AABC6AADhvACAjL0AgAs8AAC9vAAAKLoAIGy9AAAvPQAA6TsAAB29AAAJPACA9bwAAJG8AEAHPQDAe70AABA8AMDFPAAgIT0AIEc9AICWvABgKD0AgAA9AADJOwAAsDkAgGu8AEB2PQAAtDoAAE69AIA+vAAgZL0AAOc8AOAJPQCAZrwAAIc9AIAvvQCAEjwAAAU8AOA2vQBA1bwAgDG8AMAPvQAApTsAgEc8AIDiPABAJz0AADI7AICDPQAAQD0A4DE9AIDDvABA17wAUIW9AIB3PAAAELoAgCa8AID3vADArDwAALC8ABC0PQBg4r0AAMG8ACBwvQDgKj0AABa8AKAlvQAASzwAQNO8ACAHvQBwwz0AANG8ACBTvQCAkr0A4CI9AIArPAAAbDwAgOk8AKAqvQDAQb0AQPw8AEA+PQDAsLwA4G29ACCnvQBAer0A8IA9AIC4PACApbwAAB67AIBIvACAszwAAIq9AMBbvQAAwrsAgFa8AACjuwCA6rwAAPM8AGArvQAAurwAAJS8AMC2PACAMzwAQBg9AAAUOwDgBr0AgIK8AMC/PQDA+LwAgNy8AAAeOwAAILkAwOy8AGAZvQBgMb0AAM67ACBLvQDgeL0A4G69AAAuuwCA7zwAwNy8AACmOwCA3zwAgCG9AEDlPAAA8DoAgOK8AIBRPADA4LwAAA48ADCoPQDQkb0AAJw9AECsvAAAYL0AQMe8AMCPPAAgCb0AgEo9AADovACgPj0AQA49AEBtPQCAvjwA8KG9AEADvgDA0rwAQJa8AGAgPQAAKjsAQNG8AMCWPADgar0AgMC8AAAcOwCgar0AAOi8AAARvAAA7rsA4KQ9AIAWPABQ6j0AEKY9AMDHPABQqr0AQF69ACC3vQAgET0AgEe8AEB2PQCA4LwAQG89AIAEvQAA4DwAgM48ACBrvQDASj0AADe8ACCjvQBAIb0AYBy9AICjPAAAcDsAgIM8ABCkvQDgHD0AwAY9AACguwDAI70AYGY9AAABvQBgtD0AgFY9AAB1vABA37wAAOE8ACCcvQBA0jwAAPK8AKAnvQBAcD0AIHA9AAAXvQDAsTwAgJI9AIA/PQBgoD0AAMU7AABhvACgp70AAH08AIB/vQAgQr0AwNo8AADyPADAzLwAAJG7AGB8PQBQvz0AELE9AGBfPQDgej0AQAE9AMC/PACwvL0AgFo8AGAvvQAAgbsAAOA6ALCRPQCANTwAgCs8AAD2vADwjD0AwKI9ANChvQAANDwAwP28AMB0vQCA3LwAwAq9AACmOwCAGbwAYFc9AABdvAAADb0AAI08AMBJvQAAWjwAAAE9AICYPABAqLwAYIy9AOAKPQDAAT0AQNY8AACnOwCAzTwAYAw9AMCJvAAAOjsAIBu9ABCZPQCAsbwAALo8AIAKvQAAnTwAALc7AAACPABgCz0AwIO8AKAcPQAASbwAQLO8AACBPACAXT0AAPe8AIBuPABQwT0AAFM8APCKPQCA6TwAIJU9AIAKPQBQrz0AAMI8AACDOwCgfL0AoHK9AAAkuwCADD0AADY8AGAKPQCgwr0AQAE9AMC4vACgSz0AAOW8AEBSPQCgMb0AgBW8AICBPACAcDwAQP68AFCxPQCAEzwAIHW9AMDXPAAAfrwAANI9AMBdvQBgML0AgCM8AICwPAAAqDwAAHc8AMDOPAAAMrwAgPO8AADwvQBAvDwAAA08AACvOwCAPbwAAA28AEDsvACAdLwAkNo9AADhOwBgM70AwKK8AGAYPQAAx70AkJo9ACCKvQDAGD0=","chunkHash":"46d62c377cb5d3bf779fe808747a47e03ec994417bab52b7f70376a8806ca93b"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def setup_model(self):\n        \"\"\"Set up the texture model, criterion, optimizer, and trainer\"\"\"\n        #...\n        logger.info(\"Created learning rate scheduler\")\n        \n        # Best validation score tracking\n        self.best_val_loss = float('inf')\n        self.val_loss_momentum = 0\n        self.smoothness = self.config.get('smoothness', 0.95)\n        logger.info(\"Model setup complete\")\n    #...\n```","range":{"startLineNumber":274,"startColumn":0,"endLineNumber":280,"endColumn":43},"embedding":"AIAdPACAjz0AQJ88AGDBvQCAG7wAwLu8AIBwPQBAjD0AgOq8AADhPAAgAL0AwBO9AICFvAAA+bsAIBk9AIAoPACASj0AIIc9AICkvAAAvDwAIHw9AAAAvQBwjr0AYBK9AADyPQCAGbwAQMg8AKABPQCARTwAAHS8AAAeOwAAALkAYJO9ACBKvQAApjwAQFu9AAAJPAAg6T0AgAY8AMCWvAAA2jsA4IW9AICTvADgTz0AgFI8AMCUvABAujwAcJE9AEDBvACAujwAQO+8APCCPQAANbwA4Fq9AAA6OwBA6bwAgBq8AMDOvABAor0AYAO9AIDIPAAgUr0AAGo8AICDvABAXD0AgJ68AEBfvQDgfr0AAIm9ACAcPQAAiDsA4MC9AEDQPAAADLsA4FM9AEAFvQDAOb0AgO49AKBbvQDAozwAAKq7AEDlvACAPDwAgOG8AACJvQAAh7wAgC29AIAnPQBgCD0AULa9AEDyPABgJz0AABG9AIDiPADAtD0AQE69AIBnPADAW70AAOk8AEBJvQAAqLsAAIs8AAC8OwBAaT0AAN47AABmvQCgTb0AQKC8AAC6OwBgqD0AwGa9AACAOQAAsj0AQJ28AIA4PABw4b0AAHW8AAAAvAAAo7sAgIi8AMDovABAPz0AANm7AGCAvQCAJT0AANK7AMCEvAAAg7sAwHu9AIDevABAszwAALQ7AABiuwCAk7wAgH29ALDKvQDgDr0AwK28AAAyPQCAVj0AANy8AKA6PQAA87wA4FQ9AAD4vAAA67sAQAG9AACgvACAxLwAYFc9AKAevQDAvjwAkIc9AADIugAAXjsAoGK9ACBOvQCAED0AABC8AEDVvACAZ7wAICc9AGAVPQDAHD0AgCC8AAAePACwy70AYEE9AIBuvQDACL0A0Jc9AIB6PAAAAbwAcNS9AAAkuwCgOr0AgC88AMAavQAgab0AAG88AAB5vACAJzwAYFS9AMAnPQBAjzwA4B29AAB8uwAAlbsAAN28AGAkPQCgO70AABQ7AGAaPQCA7zwAQD09AACwugBA6TwA4D09AADOOwCAQTwAgOq8ACAlPQAA2DoAoDu9AIDvvACAO70AALQ8AEC2PABADL0A8LI9AKANvQBAtzwAgEc8AGAhvQDA1bwAgDG8AIDqvAAAtjsAQIU8AIDcPACgHj0AgIy8AACsPQCALj0AgNU8AAAavQCA0rwAgIK9AIBsPAAAu7wAABY7AID3vABAoDwAAGe8ABDFPQDA370AAHG8AKArvQBgST0AAPg6AIDnvACAozwAgCO9AMCpvADgsD0AgDu8AEB8vQDAfr0AAGM9AMDOPADAmjwAAOU8AEAFvQAgIL0AYCA9AMADPQCA9LwAQGe9AFCkvQBAY70AwH09AIBaPADAwbwAQJ88AACGvAAAQjwAgJm9AOBTvQAAI7wAIAK9AABYvACA17wAQAg9ACADvQDA17wAAOi6AAAhPAAAtTwAQBY9AABzPADAu7wAwLK8AIDYPQAA3rsAwAu9AAANPACAUbwAAJa8AKBMvQDAO70AAEe8AMAavQCAcL0A4Gq9AACVuwAAIT0AwJS8AADiOwAAuzwAwCW9AMAXPQCAFzwAQBa9AADTOwDgO70AAHE8AMBsPQBgnr0AEKE9AMCwvAAAkL0AQNq8AIAZPAAAdLwAIAQ9AIC7vAAA/zwAAOA8AECQPQCAWTwA0I69AIDfvQCAp7wAwDm9AEASPQAAcDwAoEW9AADhOwCAgb0AAC47AAAWPACQg70AYAi9AADAugCAvLwAEKQ9AIAFvACw8D0AAIQ9AADyPAAAvb0AYHm9AGCovQCA6jwAABg6AGBePQDA2rwAIGs9AKANvQDAkDwAACQ7AIBzvQDAYT0AAHe8AICkvQBAK70AoBy9AADCOwAARDsAANg7ABCFvQDAzTwAQAM9AABsuwDAkLwAoHU9AOAxvQBAij0AQDU9AIABvABA7bwAQPM8AHCwvQCA1jwAwIm8AGBCvQAgaz0AoF89AIAmvQCA1zwAcKw9AEAgPQCQqT0AALQ7AIB6vACAob0AAFE8AJCNvQBgDb0AAKc8AAD4PACA0LwAgDq8AMCJPQCAxz0AYLc9ALCWPQAQgT0AwM08AACqPADw2r0AALs7AAAqvQAA+zsAALY7AKCSPQCANjwAAPc7AICVvACgnj0AAME9AJC7vQAAjjsAoAu9APCRvQBAqrwAgBm9AAB4uwAA9bsAQEY9AADTuwAA3rwAAKM8AAB7vQAAxDwAQBU9AMCsPACAZ7wAwI+9AEDkPACAmDwAwLM8AAAGOwAAqzwAwEA9AIB8vACAkTwA4AK9ALCIPQAA+rwAgKQ8AED5vACAGT0AACw8AIAmPAAAlzwAgIm8AMBLPQBA0bwAgPi8AICHPAAAaT0AoB+9AAABPAAQyD0AgHI8ABCXPQAATjwAYJI9AGA1PQBgqz0AAKM8AACoOgBgab0AQIS9AICJPABgDT0AgCM8AKAIPQBAvb0AoAs9AICJvADAID0AALW8AOAZPQAgMb0AgDO8AAAYOgAAGzwAANQ6ANCXPQAAczwAAH69AECkPABAg7wA4Po9ACBsvQDgVb0AgIE8AECRPABAsDwAAD08AIAKPQCAI7wAoDS9ANDXvQBAqjwAAB67AACVPAAAerwAgCy8AEAtvQAAgLoAcKM9AIBVvAAA57wAgIC8AACdPADQx70AgIk9AGB4vQAgRT0=","chunkHash":"2a7090d56af95807b2a540add3d7425db6cdb281f7601406660d02ca2fb6c14b"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def setup_dataloaders(self):\n        \"\"\"Setup custom texture dataloaders for training and validation\"\"\"\n        logger.info(f\"Setting up {self.model_type} texture dataloaders\")\n        try:\n            # Get dataset config\n            data_config = self.config.get('data_config', {})\n            \n            # Get parameters from config\n            use_tiff = data_config.get('use_tiff', False)\n            root_dir = data_config.get('root_dir', '/teamspace/studios/this_studio')\n            class_csv_path = data_config.get('class_csv_path', None)\n            is_cytoplasm = data_config.get('is_cytoplasm', False)\n            box_size = data_config.get('box_size', (104, 104, 104))\n            input_dir = data_config.get('input_dir', 'raw')\n            target_dir = data_config.get('target_dir', 'mask')\n            \n            # Get loader configs\n            #...\n```","range":{"startLineNumber":285,"startColumn":0,"endLineNumber":300,"endColumn":0},"embedding":"AECNPADgdT0AQD49AJC1vQCAI70AgPK8AMAyPQDgSz0AIBa9AMDfPAAgRr0AAAq9AICAPACAcbwAwAQ9AACCuwBgkT0AIF09AICKvQBA0zwAAJo9AACPuwBgLb0AQBS9AIDHPQAAQbwAAIA4AABDPQBArjwAgCu9AIAIvACASrwA4Ju9AAAAvQAA8jwAEI29AIBtPAAg7j0AALy6AECNvABA8zwAoG29AECzvADQij0AAIk7AIBMvAAAFzwA0Jc9AIBQvACALTwAAJS8AOB4PQDAyrwAIEG9AIBqvACADTwAAGi8AAD4vADwh70AwNq8AMCMPACAOL0AAOM8AIDsvADAVj0AgHW8AFCAvQDAVr0AIJy9AFCiPQAAcTwA4Ly9AAAWPAAANLwAYBg9ACBMvQAAVr0AUOk9AOAbvQCAcDwAACo7AABKOwAAyLoAoBG9AOCDvQCAJbwAoBO9AIDyPABgMj0AgJ+9AGAaPQBAET0AoDi9AIA4PQDQmj0AoCK9AACUPADQg70AgEI9AMADvQCAZ7wAAII8AIAsvABgCz0AQA89AJC6vQCAMb0AAEy7AADOOwDAhD0AIKq9AACAuwDgxz0AANW7AMD4PAAw8r0AAGS7AADKOwAAFDsAQKO8AECGvABgIj0AQJQ8AECmvQBAmjwAAFW8AECFvAAA3rwAoGm9AAAyvQAAjDsAAIK7AACDOwBAG70AoIG9AMD7vQBAJb0AACO8AEDiPABQiz0AgEy9AMAcPQAgG70AwD49AACsuwAA3rsAoAu9AAB+OwAAibwAQDk9AFCVvQAAHTwAwEw9AMDovAAAczwAEIm9AIBavQAA+DwAABM8AEC6vAAATrsAwMg8AECAPACAEz0AgAe9AIBaPACgHr0AgKI8AGCBvQDA6LwAgMU9AABGPAAA67wA4K69AACPuwDgj70AAG28AAAWvABQhL0AADq8AED9vACAfrwA8Ie9AMCGPAAAUbwAQC29AMCGvAAAOLsAgAS8AABtPQAApLwAADg8AGAVPQBACT0AQCs9AAA7vADgMD0AQNA8AGALPQAAUrsAAAa8AKCNPQAAh7wAQJ68AEC1vADgZ70AgGQ8AIAOPQBgD70AIEM9AICRvAAA8TsAQLy8AEDcvADgTb0AABQ7AIAgvQAA8jsAwJo8AICmPACgWT0AgFU8AJCGPQDAWT0AwAI9AMCIvAAAuLwAgJi9AICUPAAAELoAAEy7AMA7vQCA1zwAgHe8AKC0PQCQ4L0A4B+9ADCLvQDAHz0AQMc8ACBJvQCA3TwAgMy8AMDqvABgWT0AgGa8AKBPvQDgVb0AQEY9AAChuwAAyTwAYEU9AAAMvQCQuL0AgMM8ACADPQBATb0AIDm9ABDMvQBASL0AQHM9AECDPACA57wAQNo8AADtOwAAADoA4Bu9AOBCvQDAuTwAAE68AADiuwCALLwAIBE9AADuvAAgCL0AAN+7AMCvPABAtDwAwA09AADqPAAgGL0AgH28AIBuPQAAlbsAwAm9AADjuwAAQLsAwC69AFCHvQCAF70AAPa7AGAmvQDAS70AoGC9AACJOwAA1zsAADW9AADRPACAjTwAIIy9AIAZvAAAVrwAwK+8AAAQPAAAXrwAAJI7ALCFPQDAM70AMIs9AGAIvQCAQ70AAOy8AAAyvAAAWDsAAAA9AMCuvACAHD0AoBY9AICdPQAAILoAQIq9AOCivQDA1bwAALG8AIAhPQAA0rsAwJO8AAAWOwAAdb0AACC8AABwuwBgNL0AQKK8AIAXvACA0bwA4EM9AABYugCwqj0AoHU9AEDmPABQpb0AADu9APCBvQDgBj0AQL48ACBEPQCAWLwAIMk9AIBNvQAA8DsAAMc7AGAYvQBA7zwAgPS8AACjvQAAC70AQLK8AABAvACAPDwAAIA6AFCLvQBgjz0AYAc9AIAkvADgQL0AgEI9AICXvADw1z0AQG49AAAavQDAkrwAwJU8AECYvQDACz0AABm9AIAkvQAwrj0AEJY9AAAkvQBgJT0AkMM9AIA5PQCg3j0AACc8AADDvADAL70AAJg7AMA0vQCAC70A4AM9AICWPACATLwAADe8AGCRPQBghT0AoI89AOCZPQDAGD0AYBQ9AEAjPQCQnr0AgOY8AMCUvQAAvrsAAIQ8AGBePQAA2jsAAAK7AADQuwBgbD0AYKQ9ADDRvQAAuzsAgDe9AOB/vQCAS7wAQAy9AADAOgDA5bwAMIU9AECdvAAAyrwAwJc8ANCTvQAA8DkAYG49AKAwPQAAh7wAYJG9ACAFPQAAPjwAQNk8AABUuwCA3DwAwL08AKBuvQDAEz0AYGO9AOB/PQCAXrwAgKE8AIC/vACASDwAACM8AIAqPACA7TwAAKe8ANCXPQBAxrwAYBW9AADROwBAvjwAQBy9AIBbPAAwzD0AgEU8ACBCPQDAizwAAIM9AABlPACgzj0AwJc8AAATvADwnL0A4E29AAB/PABArDwAAGg7AMBhPQBQz70AAHk8AADcOwDgLT0AgK68AKAZPQDAhb0AAK28AECFPAAAVDsAwIO8AKCfPQAgET0AgKK9AIAQvAAAPzwA0P49ACBxvQDASL0A4As9AABxPAAAEDwAQMg8AABtPQCAWLwA4GS9ADDhvQCAPzwAADC7AABGuwCACbwAAAY7AGBjvQAAhbsAgJ89AADEugCA5bwAwPS8ACAqPQBQsL0AwEI9AACBvQCAOD0=","chunkHash":"72363a7b81662d2b7bc0ab5577eda9a8279685b14d93b17b9cfd68a12d978bb0"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def setup_dataloaders(self):\n        \"\"\"Setup custom texture dataloaders for training and validation\"\"\"\n        #...\n            train_loader_config = self.config.get('loader_config', {})\n            val_loader_config = self.config.get('val_loader_config', {})\n            \n            logger.info(f\"Reading CSV: {class_csv_path}\")\n            \n            # Decide dataloader logic based on model_type\n            if self.model_type == 'lowres':\n                # Directory-based sample discovery for lowres\n                sample_ids = []\n                for class_name in os.listdir(root_dir):\n                    class_path = os.path.join(root_dir, class_name)\n                    if not os.path.isdir(class_path):\n                        continue\n                    for sample_id in os.listdir(class_path):\n                        sample_path = os.path.join(class_path, sample_id)\n                        if os.path.isdir(sample_path):\n                            raw_dir = os.path.join(sample_path, input_dir)\n                            mask_dir = os.path.join(sample_path, target_dir)\n                            #...\n```","range":{"startLineNumber":300,"startColumn":0,"endLineNumber":318,"endColumn":0},"embedding":"AEDfPADggj0AAP08ABCyvQAAwbwAALq8AOANPQAgJD0AwC+9AKAoPQCgQb0AgOy8AECEPAAAODsAgO08AADZuwDwqz0AgG49AGBRvQCAsTwAYKo9AAAavABALb0AYAi9AEDMPQAA2rsAAJI7AMCBPQAAVjwAAFO9AMCKPAAA8rsA0JO9AEDivABAAj0AUIa9AICJPACw0T0AAFg6AIDUvACA2zwAQGO9AMC7vABQkT0AQK88AABAOgBAhjwA8IY9AADIvACALTwAAM+8AGBTPQBAnrwAoF69AACRuwAANjsAQLK8AOAXvQBAgb0AwMq8AAB4uwDgaL0AAHw8AEDVvAAARj0AgHC8AOCAvQAAgr0AcJS9AICfPQBAjzwAML29AECtPAAAZLwAQDw9AGApvQAgVr0AMN49AABbvQAAozwAACY7AAByOwAAQjsAgBW9AEB3vQCAYbwAwM28AMAVPQAgWD0AgKe9AOAgPQDAHj0AADK9ACAcPQCwpT0AwC69AACRPACggb0AYEw9AMDrvAAAArwAgEQ8AACPOwDAnDwAwAc9AGC+vQDAHr0AAEA7AIANPAAgjz0A8Im9AECwvAAw3D0AgIO8AMAvPQAA170AAGS8AADvOwAAArwAAMC7AIAMvQDgNT0AAEU8ALCJvQAAnDwAQIS8AICWvACAD7wAIFm9AGASvQCAjDwAALi6AAAougDA9bwAwIq9AIDqvQCALL0AQLy8AOAZPQBwiT0AYAS9ACADPQBgDb0AQGc9AAAEvAAAmbsAwPG8AIA1vADAqLwAIDY9APCevQAA8DoAwFU9AMDXvABAizwAoHi9AGB1vQDA1jwAAOw7AIDQvAAA47sAQKU8AMDgPAAAOT0AAC29AADIOwCgWb0AAN88AHCQvQAA4rwAALc9AMCZPADAnrwAUMe9AIBpvADAi70AABi7AADGvABAh70AgDi8AMDSvAAASrwAIHm9AABRPAAAfLwAAGy9AMCPvADAgzwAAJO8AGBjPQCA9rwAQJo8AMAPPQAAmTwA4EY9AAAwugCgLD0AQB49AID1PAAABrsAAAK8ACCPPQCAU7wAANS8AABYvABgH70AgCw8AKABPQBAjrwAoDc9AEDVvACAcDwAgDu8AABrvADgNL0AALY7AGACvQAAzjsAACs8AMD+PABgWj0AAD+8AHCQPQCgiD0AgAc9AEDXvACAo7wA4KW9AIBjPAAAULwAgIA8ACApvQAgMz0AAIy8ANDRPQBgxb0AoDW9AOB8vQAA9zwAALU8ADCKvQAAnzwAgMS8AMCfvADgWj0AgHq8AMBuvQBAVb0AYHs9AAB2uwAAezwAQC89AEDlvABgvr0AwL48AOAXPQCgYr0AwEK9AKDdvQBgWr0AAFY9AECoPAAAgrwAYAA9AABrPAAAmrsAoBK9AOA0vQCAXzwAQIK8AADouwBAu7wAAAQ9AECmvAAgIb0AALG7AID6PABAkzwAYAE9AACBPACA3bwAgBq8AMB5PQAADLsAwCW9AAC9OwAA8bsAIAG9AGB5vQAgQL0AgEy8ACBRvQCgY70AEJe9AABAuwAALDwAwDi9AADpPABA7zwAoJy9AABcuwAAN7wAwIu8AAAfPAAAPrwAAIo7AOCDPQBAOr0AoHw9AMAXvQAgNr0AACe9AABCuwAAs7sAQMk8AOASvQCgHz0AwMo8AGCWPQAAY7wA4HO9AECZvQCgDL0AQNy8AMAOPQAAADsAAH68AABmuwBAf70AAJS6AAA6OwCgOr0AwIG8AACUuwBgFb0A4Dc9AAD2OwDgrT0AIGc9AIDHPACQlr0AwDS9AMBVvQDAEj0AQMg8AMAyPQAAp7wAEM49AEA2vQCAVzwAAKc7AMAxvQCA2TwAANS8ADCpvQCA7LwAwIm8AAA+vADApDwAAMw7ACBtvQBAiz0AgOw8AIAlvADAKb0AgBs9AACwvAAQwD0AcIw9AEDxvADAnrwAQL08ABCevQAALT0AQPu8AMAEvQCQmj0AAIQ9AEDyvACAUz0AoKk9AMBoPQCQ3z0AgB48AIDOvACAS70AABi6AIBGvQAAJr0AwPM8AIB3PADA07wAAJ07ACCVPQAgjz0AkJM9ANCJPQCgFD0AwC09AAAoPQAwpb0AAAA9AMCRvQAAOLsAAF88AKBHPQAAmzsAALA6AIAbvABAiD0A0Ks9AKDCvQAABzwAYCe9ACCWvQCAGLwAYCe9AADwOwBAj7wAwGI9AICsvAAA9LwAAJC6ABCRvQAAYjsA4GQ9AEArPQAAXrwAEJe9AEDcPAAAzDoAAJ48AADtuwCAsDwAALA8AOB9vQBgGz0AYES9AKCDPQDgHb0AAOM8AIA+vACAejwAAHg8AIBMPABAuDwAAKS8AMCiPQCAm7wAAPy8AACyOwAA7DwA4B29AIATPAAw1D0AAJY8AMBPPQAAZzwAoG49AIA1PABwzj0AwKo8AADkOgDwrr0AgCG9AAClPACAOzwAAJC6AIBvPQBAvr0AQLY8AIAoPAAgCD0AAHy8AADYPACgd70AgB+8AACcugAABrsAAGa7AHCUPQBArDwAoLG9AAASuwDAqTwAgOo9AGBUvQCA0LwAwP08AABdPAAANLsAAGc8APCTPQCALbwAoG+9ANDTvQAArjwAAKm7AAC0OgAA4LsAAES8AMCDvQAA8LkAkJc9AAAUuwDALb0AgAm9AKA0PQCw170AYFc9AKB0vQDAZz0=","chunkHash":"1cf0c28511bffa3516d798459fae735673c94f75c7a970abd21e2c3c3027dfec"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def setup_dataloaders(self):\n        \"\"\"Setup custom texture dataloaders for training and validation\"\"\"\n        #...\n                            if os.path.exists(raw_dir) and os.path.exists(mask_dir):\n                                sample_ids.append(sample_path)\n            else:\n                # CSV-based sample discovery for highres\n                sample_ids = []\n                if class_csv_path and os.path.exists(class_csv_path):\n                    df = pd.read_csv(class_csv_path, dtype={'sample_id': str})\n                    if 'sample_id' in df.columns:\n                        csv_samples = [str(id) for id in df['sample_id'].unique()]\n                        for sample_id in csv_samples:\n                            sample_path = os.path.join(root_dir, sample_id)\n                            raw_dir = os.path.join(sample_path, input_dir)\n                            mask_dir = os.path.join(sample_path, target_dir)\n                            if os.path.exists(raw_dir) and os.path.exists(mask_dir):\n                                sample_ids.append(sample_path)\n                    else:\n                        #...\n```","range":{"startLineNumber":318,"startColumn":0,"endLineNumber":334,"endColumn":0},"embedding":"AED6PACAYz0AgO48APCjvQCAfrwAYCW9AGAEPQAAXj0AQCq9AGAIPQAALL0AwP68AAD5PACAabwAgKw8AADDuwBgnz0AoG89ACBWvQAAjjwA0Kk9AAAVvABANr0AoAu9AKDEPQAAOrwAANS6AIAzPQBgAj0AACy9AABAOgCAObwAUJa9AEDbvACAzDwAgGu9AIDVPAAA0j0AgA+8AIDWvABgNj0AgHe9AIC3vADQkD0AAGg8AACmuwCA3DwA4Fo9AAB3vAAAcDwAADq8AEBqPQDAz7wAoF29AIAEvAAA8TsAgI68AMASvQDAjr0AgBq8AAAYOwDgcb0AgE88AEDzvABwgD0AwJK8AAB8vQCghL0AIKK9AKCYPQDAlDwAwMi9AIBwPAAASLwAQBY9AAApvQCAb70AwNE9AFCHvQCA3TwAAMw6AAAAugAA2TsAQFu9ANCEvQCASLwAQDq9AMDrPABgRj0AgJi9AABIPQCgHD0AoEi9AEDjPADQnD0AAPW8AIAdPACAYL0AADM9AAD3vAAAmDoAALw7AACwOwBAmTwAwNA8AOC4vQCA/7wAAAg6AADMugDghD0AQFy9AIDavAAwxD0AACW8AEBCPQBgu70AAB+8AADQuQAAGLsAAOC7AAAmvQBgRD0AAD08AOCRvQCACTwAwJ68AACwuwAAxbwA4GC9AMDIvACAKTwAAM87AACQugBAEr0AwIW9AEDuvQAA3bwAAGO8AAAKPQBQkz0AAA+9AIC+PAAgFb0AAIE9AAAjvAAA07sAoCe9AAAKvADArLwAoEM9APCjvQAAULoAIGU9AAC3vAAAEzwA4JK9AIBevQAA7DwAAEO8AIBZvACAP7wAAIo8AMDSPAAgZz0AgBi9AABeOwCAXb0AAOk8ANCQvQDgCb0AgLg9AECFPAAABrwAgMu9AIBUvAAgWL0AAAi6AACTuwBQnb0AgBW8ACAFvQAA9rsAYHK9AEDNPACALrwAgHW9AIB5vAAAmjwAQLG8AHCKPQAAWbwAQIg8AOAnPQCAoDwAgDs9AAAZvAAgNT0AgBg9AOAhPQCAQbwAwLy8AMCIPQAAXbwAAFu8AICEvAAAJr0AgFg8AADQPACA47wAADI9AMCsvACAZDwAAAS8AIAFvQAgP70AgAI8ACAEvQAAtjsAgGw8AIDaPACgLj0AABi6ACCLPQDQhz0AQBM9AECevABA37wAkJO9AACdOwAApLsAALg7AKAZvQDAFD0AgKK8AOC4PQAQs70A4D29ABCOvQBA8DwAABo8ANCavQBAqDwAQKa8AMCKvABgaj0AAEm8AAAuvQAgbL0AIIg9AAAUvACATDwAQC89AKAYvQDwrL0AwLk8AOBMPQBgar0AwEe9ABDmvQDAQr0AQII9AMDVPAAAa7wAQNE8AMCdPAAAAAAAIEu9AMCvvADAoDwAAJK7AADkOgDAj7wAQPU8AMC+vABAAb0AAPC5AMAaPQCAvTwAICk9AACMPABA47wAgGW8ABCTPQAAhLwAABS9AACHuwAAsDsAYBO9AMCrvQDARr0AABG8AOBOvQAAWb0A8Jq9AADkugAArDsAABy9AEDjPABAwTwAAKK9AAACOwAAjrwAgGy8AECPPADAg7wAABA7AGCbPQCAS70AQJk9AEAuvQBgFr0AIC+9AAA8OwAAwDgAIBk9ACAlvQCgOT0AQPI8APCDPQAAoLsA0IO9AGCfvQBgAL0A4Aa9AAAKPQAAMzwAAEG8AIBDvAAgVb0AAJa8AABCOwDAHb0AQIq8AABIvABA7bwAwDc9AMCtPABgmz0AYFc9AIC8PAAwsL0AQFa9AOBdvQCAxDwAQLE8AKA1PQCAUrwAgMI9AKA6vQCAZTwAAPy6AOAovQAADz0AQM68AKChvQDgBr0AgKS8AABTvAAAdzwAALw6AGCFvQBQoD0AwP88AABavAAANr0AwBg9AIBqvACQxj0AMI09AEDMvABAi7wAgIA8ANCHvQCABj0AYEK9ACAGvQAgpT0AYIk9AID8vAAgMT0AcKc9AOBMPQCwvD0AgIQ8AIA6vAAgTL0AAB28AGAuvQBgKr0AALk8AEChPACA47wAAAQ8ADCnPQAQhz0A8Ik9AMCRPQCgQz0AwOo8AEBVPQDgx70AYBg9ACCWvQAAvrsAAHk8AMBaPQAAIjsAAKA5AACmuwDwiT0AcJk9AIDCvQAA6zsAABu9ADCOvQCAKbwAID+9AAAoOwAA0LwAYEI9AEDivACAwLwAAFG8AOCLvQAAGLsA4EU9AOAaPQAAaLsAcJC9AAAbPQAAojsAgKI8AABouwDAljwAABQ8AOCIvQBgBT0A4DK9AGBePQAAzrwAwBQ9AMD4vAAAoDoAAFA8AABkOwDAgzwAQMm8ADCFPQAAM7wAYAW9AIA3PACAqTwA4B69AIAbPADA6z0AAL87AOAYPQBAxDwAoCM9AIBXPADAxz0AwK48AACNOwAQoL0AwDm9AAC/PAAAMjwAAAo7AECAPQCgu70AgFw8AAAuOwAAJj0AgNO8AEDrPACgjL0AAJq7AAASPAAA8LoAAGC7AFCWPQDgAD0AsK+9AACuOwDA0jwAMAc+AGCAvQAAs7wAIB09AECCPAAAmbsAgEg8ALCNPQCAOLwAQGy9AMDEvQCgDz0AALI7AIAtPAAAzLoAAEK7AGBOvQAAuTsAUKQ9AABkOwCA8LwAABC9AMBOPQBgvr0AYIM9ANCNvQAgWD0=","chunkHash":"3ddfb294fec1acd49df96e10df89663cf477b25c36e2d65ffb439ec4a79b0ec4"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def setup_dataloaders(self):\n        \"\"\"Setup custom texture dataloaders for training and validation\"\"\"\n        #...\n                        logger.error(\"CSV does not contain 'sample_id' column\")\n                else:\n                    logger.error(\"CSV file not found: {}\".format(class_csv_path))\n\n            if not sample_ids:\n                logger.error(\"No valid sample directories found for {}\".format(self.model_type))\n                raise ValueError(\"No valid sample directories found\")\n\n            # Split samples for training and validation\n            train_size = int(len(sample_ids) * 0.8)  # 80% for training, 20% for validation\n            train_ids = sample_ids[:train_size]\n            val_ids = sample_ids[train_size:] if train_size < len(sample_ids) else sample_ids\n\n            logger.info(f\"Using {len(train_ids)} samples for training and {len(val_ids)} for validation\")\n\n            # Create the dataloaders\n            logger.info(f\"Creating training dataloader\")\n            #...\n```","range":{"startLineNumber":334,"startColumn":0,"endLineNumber":351,"endColumn":0},"embedding":"AMDxPAAgXj0AwA89ACCfvQBAobwAoDa9AED3PADgFD0AIBa9AAATPQAASr0AwBG9AACwPAAAzrsA4Bs9AADluwAwmD0AAHU9AOBHvQDAtzwAsJc9AIAMvADAML0AwPK8ACDKPQCAabwAgBE8AKCCPQDAojwAgEm9AABtPAAAXLwAcI69AMDMvACAjTwAIIi9AICyPABA2D0AgAs8AABlvADAyzwAgEi9AABWuwBwnT0AgAU9AABauwCAijwAMIE9AIACvQAA1zsAAKC8AABmPQAAZbwA4E29AIA0PAAAmDsAgOe8AID5vACAdL0AIBu9AAAAOgBgSL0AgKo8AIBcvABgST0AAKG8AOBuvQDwnb0AQJq9ALCTPQBAnzwAkLC9AIC5PAAAprsAQFI9AMA+vQDQk70AoOY9AOBdvQDAuTwAAJQ6AAAIugAAnDsAgPe8ACB5vQAAHjsA4Ae9AKBLPQDAeD0AsKq9ACAOPQBgID0A4CW9AMDYPADwsz0AYAG9AACGPAAgYb0AQEs9AID+vAAAjrsAwPI8AACwuQBAGT0AgOs8ANC+vQBgAr0AgBa8AIAJPADgdD0AII29AEC4vACAzz0AwM+8AOAjPQDw3b0AAPe8AADwugAA37sAQIi8AIAyvQCA/zwAAJ48ADCqvQAAWjwAAMC8AMDJvAAA37sAQGq9AICPvAAAoTwAAMC5AACwOQDA2rwAsLC9AGD0vQAgM70AAMe8AMA9PQBAmj0AgOS8ACAdPQBAA70AoDk9AACQuwAA5LoAgCa9AADzuwAA0LwAgAE9AMCNvQAA0LkA4EE9AGAAvQCAZzwAYHi9AEA6vQAA7zwAgAg8AIB5vACAObwAAHM8AMDRPAAgJD0AIC29AACSOwCAUb0AAMM8AFCUvQBAvbwAcLA9AACmOwCAnbwAUMe9AIA7vAAQjr0AAPQ6AICpvADATL0AgAC8ACAdvQAAKbwAAH+9AEDvPAAAYrwAgGq9AECDvAAATDwAAOS7AOBIPQAA/LwAAEY7AOAlPQCA4DwAAAU9AAB+vADgJT0AwBQ9AMAKPQAAv7sAgGm8ALCKPQBA1bwAgJ28AMCsvACgQr0AwIM8AEDXPABAz7wAoAc9ACAXvQAAxjsAgEO8AMDTvAAAHL0AAJQ7AKA3vQAAJjwAAKI8AMDMPADAZj0AACS8AACXPQDAYD0AwL88AKALvQCAY7wAcJy9AABWuwAA37sAAMg7AEA3vQAgLD0AQLa8ANC9PQCAyr0AYD+9ACBivQDAojwAwKg8AECXvQBA0TwAoA29AMDYvABASj0AgFe8AKBHvQDgWr0AYHs9AAA8OwAAhTwAAFc9AIDBvADQqr0AQLY8AMAtPQDgQ70AYBe9AADPvQDgT70AYE49AICNPADAxrwAgAs9AIAHPAAAtrsAAD69AGAqvQCAWzwAgEG8AADPuwBA27wAQL88ACAFvQBAFL0AACy8AADePACAvjwA4EA9AAB7PAAAu7wAQIq8AIB2PQAAoLkAAAe9AAC0ugAAeLoAgBa9AOCavQCAar0AABi8AEArvQDAdr0A8J29AIABvAAArDwAQAi9AGAHPQCAyDwAkJO9AABiuwAAiDoAQNO8AACBPAAAjrwAAOC6ACBpPQDQhL0AwJA9ACAkvQDgEr0AAPO8AABfvAAAoLkAYBw9AEAOvQDgPj0AwM88AHCTPQAAqbsAIGa9AMCxvQAAmbwAgPW8AID2PAAAcjsAAEW8AAB4OwCAOr0AAMg6AAAiuwCgR70AwMe8AAAGOwDAsbwAgDA9AABAPABgwD0AQFA9AOAVPQCAmr0AgBO9ACBavQDgBj0AgHM8AABWPQAApLwAkL09AGA+vQCANDwAgBq8AEAHvQDAEj0AwMC8AMCpvQCA6rwAgLe8AAAVvADAkTwAACg7AGBuvQCwhj0AwOU8AECFvACA8bwA4Co9AEAEvQDgqD0AgJA9AAD0vAAAy7wAwJ88AGCSvQDgDj0AgMG8AOAHvQDQmD0AkI89AEC5vABgBD0AoLE9AEBgPQAQ0D0AAMM7AICRvADARr0AAHg6AMA8vQDA47wAwNA8AAAYPABAg7wAAJo7ALCZPQCggz0AUIU9AICQPQAgPD0AICY9AIAJPQDAnr0AoAY9AECIvQAA27sAgKE8AGBmPQAAeLsAAI87AACCuwAgiT0AAJE9ACCzvQAAnrsA4Fe9AECRvQAAhbsAQE+9AICcPABAnbwAgEA9AEC0vACAmrwAAOU7AOCNvQAANLsAoFw9AMAzPQCAdLwAgJ+9ACAvPQAAhLoAQIc8AADguwCAtzwAAGE8AEBpvQCARj0AoDK9AKCMPQAA8rwAwKI8AEDYvABA2jwAgIc8AIBxPADA2zwAAKW8AKCgPQAAFDwAANK8AAC0PACAAj0AQDO9AADAOABAyj0AAKA8AIAoPQAARjwAQGA9AAAkPACw0T0AwLw8AAB0OwBwl70A4Eu9AMC+PACAYjwAAGI8AKCCPQDAzb0AQL48AADQOgDgAD0AgCK8AMAnPQDQlL0AAPi6AADbOwAA1TsAABg6APCYPQCA/DwAILy9AIAjPACANzwAoAg+AABlvQAA2bwAABM9AAD9OwAA0DkAQL08ACBtPQCAI7wAwHa9AODSvQAAmzwAAIg6AACFPADAkLwAABi8AACAvQAA3DsA8Ko9AAAsvAAgTr0AQP28AAAyPQCQy70AMJM9ADCPvQAANj0=","chunkHash":"591d253da841e1629b423def3af65f90f8d073b41f205e0f8200d35485e81654"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def setup_dataloaders(self):\n        \"\"\"Setup custom texture dataloaders for training and validation\"\"\"\n        #...\n            self.train_loader = self.get_morphofeatures_texture_dataloader(\n                root_dir=root_dir,\n                sample_ids=train_ids,\n                batch_size=train_loader_config.get('batch_size', 4),\n                shuffle=train_loader_config.get('shuffle', True),\n                num_workers=train_loader_config.get('num_workers', 0),\n                is_cytoplasm=is_cytoplasm,\n                box_size=box_size,\n                use_tiff=use_tiff,\n                input_dir=input_dir,\n                target_dir=target_dir\n            )\n\n            logger.info(f\"Creating validation dataloader\")\n            self.val_loader = self.get_morphofeatures_texture_dataloader(\n                root_dir=root_dir,\n                sample_ids=val_ids,\n                batch_size=val_loader_config.get('batch_size', 4),\n                shuffle=val_loader_config.get('shuffle', False),\n                #...\n```","range":{"startLineNumber":351,"startColumn":0,"endLineNumber":370,"endColumn":0},"embedding":"AADcPABgaD0AQA89ACCWvQCAnrwAQBC9AKAcPQDgOj0AQBK9AIDjPACgCb0AgLq8AACAPABAt7wAQLs8AABKvAAgnD0A4Ho9AIBevQAA/zwAEIs9AAALvAAAAL0AYAm9AKDAPQCAj7wAALg6AMBhPQAA6TwAAEW9AACtOwCAGLwA0I29AMANvQAApjwAAIG9AADPPABA7j0AACg6AADLuwAAxDwA4G29AADMuwAAjz0AwIE8AAC5uwAAcjwAQJE9AEDrvAAA8TsAwIi8AMBrPQAAv7wAgAa9AAD4OgAAbzwAQMS8AEArvQCgd70AALy8AAD0OwDgR70AAN08AEC/vACgYj0AQKS8AACJvQDghb0AgJa9ADCtPQAALDwAgMu9AMClPAAAursAgCU9AKA6vQCgYr0A0O49AGAyvQAAzTwAgBo8AAAUOwAApzsAgBa9ALCPvQAA77sAQAW9ACAqPQBAUj0AgKG9AGAJPQDAKj0AYDW9AKATPQAQkD0AgP28AACpPAAAfL0AwDg9AIDvvACAZ7wAAI48AACvOwCAHT0AYBI9AMC9vQCgIL0AANW7AAC0OgAAnj0A0Iy9AICuvAAQtz0AQIW8AGAZPQDw5r0AgCi8AIAiPAAAdLsAwIe8AIC3vACA/DwAAJ48AOCYvQAAWjwAwIi8AECivAAA8bsAIHC9AMAavQAAnzwAAJS7AAD7OwBAu7wAIJy9AIDqvQAgTL0AAL+7AGAbPQAwhD0A4BC9AADbPABA77wAoGI9AAAAugAAODsAAL28AACQuwCAQLwAAC49ABCovQAAcDsAwFw9AEATvQAASDwA4HK9AKAuvQCgIj0AgDo8AADUuwAAtbsAAEc8AECVPABAET0AwCi9AECQPADgP70AwMU8AJCHvQDgDr0A4Ms9AECBPABA17wAQMm9AADOuwAwiL0AAHa7AICHvACgX70AQIe8AEDivAAAo7sAIGi9AAC2PABAgbwAoDi9AEChvAAAtDoAACa8AGBfPQCgGL0AQKc8AEAmPQCA2zwAwBw9AABgvABgMD0AQBs9AIAMPQAAzbsAAMu7AGBpPQCAgbwAgIe8AMCEvADAUr0AAPg7AGAbPQDA5LwAwB49AADLvACAVTwAAIi8AICUvAAAFb0AAIC6AMANvQAAxzsAgHo8AECfPABAXj0AAGw7APCpPQAAZD0AANI8AICZvACAl7wA4LW9AAByuwAA1LsAAEY7AEA8vQDgHj0AgAS8ACCzPQAw170AYC69ACBGvQAAJj0AQJY8AABMvQAA8jwAQP68AIAevQAgPD0AgFS8AGBgvQCgPb0AIHo9AAAuvABAkTwAgPg8AOAFvQAQpb0AgIo8AOAZPQDANr0A4Eq9ALDHvQBAUb0AoFs9AMCXPABA4bwAQEM9AABwPAAAN7wAIDO9AKAnvQBAlzwAAFS8AIBhvACA97wAgNQ8AEDRvAAAv7wAAO+7AEDgPADAkzwAQCw9AEDtPADA6bwAgBK8ANCCPQAApbsAIE29AADjuwAAFLwA4Di9AKCOvQBgK70AgF+8AMBCvQDgZL0AQJS9AADgOwAAojwAQAq9AMAgPQCAxTwAMJq9AABXvAAAQLwAAJy8AABIPAAAoLwAAIC7AGB1PQCgTr0AoIY9AKAWvQBgPL0AoC29AIAMvACAMDwAAPM8AOADvQDAHz0AYAE9APCZPQAA5LsAEIq9AOCOvQDACL0AQJS8AED0PAAAwTsAgB68AADKuwAwmL0AABE8AAAAOADgar0AgEu8AIBWvAAA3rwAgF49AAAougAwmD0A8IE9AMDCPABwp70A4BW9AIBavQAA8zwAYAw9AGA7PQAAkrsAgNM9AMBOvQAASjwAADw7ACAHvQCA4TwAgMy8AEC7vQAA/rwAQJq8AADBuwCAMTwAADq7AGB8vQCggD0AAAs9AACBOwCALL0AACA9AACkvACAzT0AkIo9AMAkvQBA3rwAQMM8AHCYvQDAFT0AoAO9AIAFvQBgmT0AwIg9AAARvQAAFj0AEMo9AABEPQCA1T0AAKA8AICuvACgW70AALG7ACBavQCgKr0A4AA9AMCEPADAgLwAABG8AJCaPQAwlT0AIJY9AFCKPQAARj0AACA9AKA/PQCQnL0AgA49ABCVvQAAdrsAwN08ACBWPQAAmDoAAOm7AADsugAAkT0A4JA9AAC5vQAA4DkAoD29AAB6vQCAabwAwBK9AADMOwDAqLwAoFA9AEDivABAmLwAAI88AJCavQCASTwA4Fs9AAAhPQAAV7wAUJ+9AEC6PACAVLwAQJs8AAAdPAAAtTwAQL08AIB2vQBANz0AoBm9ACB/PQDAO70AQKI8AIDQvACAETwAgFU8AADcOwAgFz0AgKu8AGCbPQCAFbwAgPu8AADEOgBgQj0AYDW9AACYuwBg0D0AADc8AMA9PQBA6zwAAHA9AAA3PABg2D0AAGo7AADDuwCAnr0AwB69AIDvPAAAjTwAAMg7AACBPQDw0b0AQLQ8AAD5OwBA7DwAgF68AID1PADAib0AgGm8AAAMPAAA5DoAALa7AJCKPQBALT0AUMW9AIBJvAAA2zsA2AA+AOBpvQBAQL0AgBg9AABMPAAAeDwAQK08AOCAPQAAPbwAIHe9AMDVvQAAgTwAACC5AADeOwDAibwAAIa7AGB7vQCAFLwA8IE9AAAoOgAAMr0AAOS8AKAuPQDAuL0AQGw9AGCCvQBgEz0=","chunkHash":"a9beb53632fa0d3f5a80f4cb93fb76e2eefe1cc5427ef03f03631cdb8ae0688b"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def setup_dataloaders(self):\n        \"\"\"Setup custom texture dataloaders for training and validation\"\"\"\n        #...\n                num_workers=val_loader_config.get('num_workers', 0),\n                is_cytoplasm=is_cytoplasm,\n                box_size=box_size,\n                use_tiff=use_tiff,\n                input_dir=input_dir,\n                target_dir=target_dir\n            )\n\n            logger.info(f\"Created dataloader with {len(self.train_loader.dataset)} training samples and {len(self.val_loader.dataset)} validation samples\")\n        except Exception as e:\n            logger.error(f\"Error in setup_dataloaders: {str(e)}\")\n            logger.error(traceback.format_exc())\n            raise\n    #...\n```","range":{"startLineNumber":370,"startColumn":0,"endLineNumber":382,"endColumn":17},"embedding":"AADIPACgcj0AYCA9AMCivQCA1LwAACG9AMASPQBAWj0AoAu9AACVPADgEr0AQIe8AICOPADAoLwAAMc8AECAvACQlz0AAIA9AABmvQCA8DwAUIY9AADOuwCA/7wAAP28AHDNPQAAoLoAAKA6AICEPQDArzwAgDe9AACSOwAAQbwAwHq9AID9vABAlTwAMIm9AACvPAAw+z0AAFA7AAAAvABAsjwAgGy9AACCuwCgnT0AQJQ8AADGuwAApTsAcKY9AEC1vACAADwAAH28AABjPQDA6bwAgDC9AADQOgAAxjsAwMS8AAACvQBgaL0AAPC8AAAfPAAAS70AAG08AIDdvABASz0AYAO9AMB6vQAQjL0AAK29AFCyPQAAJzwAQNa9AICUPAAANjsAYDg9AGA6vQCgd70A0Oc9AKAXvQCA7TwAALA5AACKOwCAPjwAoA69AECKvQCAdLwAQNe8AMDaPADgdT0AwKK9AMD6PACAJj0AQPS8AEAXPQBQoT0AANy8AAC3PABgUL0AQCQ9AEDWvAAA1bsAAKI8AABougDgBD0AwN08AICvvQBAJL0AANW7AAAmuwDApz0AoJG9AIAYvAAAuz0AAGa8AOAxPQCg670AAHC8AIBKPAAA4LkAAIW8AECdvACACz0AACU8AICivQAAqTsAAIq8AMDdvAAAULwAgGG9AIDhvADAoTwAAP+7AADAOwDAo7wAYJ69AADxvQDATr0AgEi8AEAePQBAZz0AwOe8AOAOPQAA9bwAoFo9AIAHvAAAxLoAAAW9AIAmvAAAVLsAACg9APCVvQAAOjsAIHE9AOADvQCASDwAEIa9AKABvQDgEj0AADc8AABAvAAAbLsAAIA8AIBPPADgFz0AgN68AMCHPAAgUL0AQIk8ABCOvQAAAr0AAMM9AECNPADA97wAoMK9AIAOvACgjL0AAOI7AMClvABwg70AABC8AED/vAAAo7sAQGK9AAAkPACAX7wAoFG9AIBBvAAA+LsAgG68AKBVPQCAEL0AgGA8AKAePQAA7TwAADQ9AACRvACgKz0AoCg9AIAKPQAAFrsAAKu7ADCYPQDA87wAALC8AABfvABAdb0AgEY8AID8PACA3rwAwCo9AMDYvAAAlzsAgMW8AMAIvQDgG70AgFi8AED9vAAALTwAAJA8AEC2PADgcj0AACA8AHCdPQAgZD0AoAE9AACXvAAAobwAULO9AACwOgAAkLoAANw6ACBMvQDATj0AAJu8AJDDPQAQ170AIAm9AABcvQCALT0AgL88AABkvQCAzDwAgPK8ACAXvQDgZD0AQKa8AABFvQCgL70AwHM9AIB5vAAAbzwAgP48AGAkvQCQob0AAI08AOBAPQBgNL0AwES9AKDAvQDAPr0AwG09AAAtPADAx7wAADc9AABQPAAAsLsAgCG9AOAuvQAAuTwAwLS8AACruwCA/7wAAN88AMDtvABAlbwAQIq8AADrPAAAozwAADI9AAC3PADA/bwAAD+8AMBkPQAA0LsAgDm9AAAnvAAAEbwAADa9ALCGvQBgL70AAPS7AMA9vQCgb70AAIG9AAC3OwAAbDwA4Bm9AED7PABAvjwAYJ69AIBWvACANbwAwLi8AAD3OwBAurwAAOe7AOBqPQAALr0AcIQ9AAAZvQCgUb0AICG9AADIuwAABjsAQPw8ACAVvQDgHj0AgBM9AFCdPQAA6bsA4Gi9APCavQCAAb0AAOS8AIAGPQBAgDwAgDC8AADkugDQjr0AANy6AACvuwCAO70AwIe8AABouwAAxrwA4Dc9AAD0OgAQrj0AAJI9AADdPADgm70AgA29AMBmvQAAvjwAAPs8AKBBPQAAp7sAQMw9AOAyvQAAGDwAAHY7AEApvQDA0jwAYAC9ANC0vQDgHb0AQJe8AIA4vACAazwAgBI8AKBzvQDwgD0AoBs9AIAmvABgN70AgDM9AMCdvACgyT0A8Ig9AAAzvQDA27wAwJg8AICMvQCALz0AgP28AGAOvQCQpj0A8I09AAD1vAAgHD0AUL89AKA2PQAA7D0AgGg8AEDQvADQgb0AABA6AAAtvQAgDb0AAKM8AEC4PADAobwAAIq7AICePQBQmD0AQIE9ADCMPQBAWT0AQAo9AKAhPQAwk70AYBk9ACByvQAA0rsAALM8AKBTPQAAIDkAAJI7AAAouwAglz0AsJc9AJCwvQAAZrsAIDi9AACDvQAAfrwAoBC9AADPOwDA9LwAQEA9AEDHvADAo7wAAIY8AIBnvQCAUTwAAEE9AMARPQBAnbwAAKG9AKADPQAAKLoAAD48AACAOgAA3jwAQOk8AABUvQDgEz0AwDO9AMCIPQCA9rwAgC08AMDvvACACTwAAAg8AABnPABABD0AAHa8AMCYPQCAXbwAAOW8AIBoPADgPT0AAEa9AACkOgCQ2z0AwJQ8AAAsPQBgAD0AoFw9AMCJPADA3T0AADE8AICIvADQlb0AwCe9AICfPAAApzsAgDI8AECBPQCwvr0AwLs8AAA6PACA5TwAgMm8AKArPQCAhb0AAGG8AIB4PAAACjsAAAq8ACCePQCgBj0AoLa9AACkuwAAsDoAwPA9AGA4vQDgG70AYCk9AAA9PABAsjwAQIA8ABCJPQAAMrwAIHC9ABDhvQAAazwAAAA7AABiPAAASbwAAN67APCevQAAC7wAgGk9AACEugCAFr0AwPS8AMAtPQBQv70AoGI9AFCFvQBAMj0=","chunkHash":"02750af5da3aee64ffe9d3f35a72bf275126f1859f60db979553219b7ad9ab69"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def train(self):\n        \"\"\"Train the model\"\"\"\n        logger.info(\"Starting training\")\n        try:\n            num_epochs = self.config.get('num_epochs', 50)\n            logger.info(f\"Training for {num_epochs} epochs\")\n            for epoch in range(num_epochs):\n                logger.info(f\"Epoch {epoch+1}/{num_epochs}\")\n                # Training loop\n                self.model.train()\n                train_loss = 0.0\n                for i, batch in enumerate(tqdm(self.train_loader, desc=f\"Training epoch {epoch+1}\")):\n                    inputs, targets = batch\n                    logger.debug(f\"Batch {i+1} - input shape: {inputs.shape}, target shape: {targets.shape}\")\n                    inputs = inputs.to(self.device)\n                    targets = targets.to(self.device)\n                    # Zero the parameter gradients\n                    self.optimizer.zero_grad()\n                    # Forward pass\n                    outputs = self.model(inputs)\n                    loss = self.criterion(outputs, targets)\n                    #...\n```","range":{"startLineNumber":386,"startColumn":0,"endLineNumber":405,"endColumn":0},"embedding":"AMC6PADAiD0AoBo9AFDHvQDAmLwAgAe8AMDuPADgwj0AQB69AID+PAAgWb0AIBi9AACWuwAAOjsAQN48AADwuQAgZT0AAEg9AACPuwBApTwAgFI9AOAcvQAAb70AwNq8AODCPQAAiTwAAAE8AMDaPAAArDwAgLy8AMDVPAAA1LsA8J+9AEB5vQAA9jwAoAa9AIApPACA2D0AAAY7AACovACAMjwAwBi9AKAbvQCgWz0AgK08AAB7vAAAOjwAQK09AABxvADAwTwAgE28AIB7PQAA2LsAgPy8AIB0vAAAxrwAgC+8AMAuvQAgkr0AAF+8AMCUPAAAb70AAMM7AACCuwAAyDwAANS8ACCJvQCAP70AQKu9AADsPAAAtbsAQM+9AABSPABAw7wA4EY9AGATvQDAk70AcLc9AABYvQBgFT0AgFS8AMCvvACAL7wAgBa8ACCvvQAAIrwAgP28AAAbPQCAUj0AULO9ACArPQAAZD0AAMS8AIBMPADwyD0AAGG9AAARPADgH70AgDA8AKBevQAAmbwAoDk9AICAvABAST0AAMc7AGCUvQDgW70AAF28AACSuwDA0j0AAAC9AADcOgDguT0AQJ28AIDNPABAzL0AABO8AAAEOwCAV7wAAE28AOAVvQBAOz0AAKe7ADCavQAABTwAgG68AABWuwAgBL0AsIm9AADAOgBAozwAgBg8AID6vACArbwAkIW9ANACvgCAQ70AwMC8AMA5PQCgCD0AQMS8AAAnPACgHr0AIGA9AIALvAAAHjsAgNK8AIBBPAAAHbwAYEA9AIA+vQCACLwAQHg9AAC+uwAAGDwAoG69AIA/vQCABj0AALC6AECRvACA6bwAQIk8AACkOgDANz0AoBK9AICePABQlr0AACQ9AOB+vQCAmLwA4JE9AADyPABAlrwAINq9AADquwBAaL0AAJg6ACBPvQCAmb0AAKy7AECTvAAASLwA4HG9ACApPQAAhLoAgHq9AAApvACASzwAAIu8AEBPPQCASr0AwK08AMAOPQAAUrsAQFw9AAAOOwAgRj0AQAE9AED5PAAAiDoAAOM7ACCQPQAAcLsAgG+9AIB0vADgEr0AwLg8AKAGPQBgOb0AwE49AMASvQDA8zwAALQ6AOCKvQCgAr0AANa7AKAmvQAAOLsAgC08AGAtPQCgJz0AAEC8AGCXPQCgjj0AQAg9AACUvADAmrwAEKe9AAACPABAgTwAABE8ACAZvQDAFz0AgFK8ADDtPQBg370AwJG8AEBNvQAALT0AgC68AABlvQAAgjwAgKG8AICdvABQkz0AANe8AAAwvQDApb0AMIY9AIB1PACAKjwAgEM9AAAcvQCAZr0AoBg9AOBNPQAgOL0AQBm9AADKvQCAFb0AkKM9AICNPAAA8rwAAAA5AABCPADA6jwA4FS9AGA8vQAAA7wAAKS7AIAkvADA/rwAoAg9AEDVvAAgCr0AgEq8AIC8PACA1TwAwHE9AADcOwAA77sAAMe8AFCcPQAA1rwAwKq8AADOuwAAeLwAACe9AMB5vQAAN70AAPA7AKAkvQAQk70AwIy9AADAuwAAFDsAgJG8AIBVPACAmDwAAGe9AAAAvAAANzwAACO9AADWuwDAvLwAAG48ACCdPQDgZL0A4J49AIAmvQAAM70A4CC9AICTPAAA6bsAwBk9AIBcvABAsTwAgEU9APCBPQAAr7sAQEe9ACDlvQAgL70AYCC9AEDLPAAAfDsAQKW8AABiOwCQi70AgMW8AIAYPAAAYrwAAB69AACEuwCAa7wAcJE9AABiuwBgzT0AsKM9AACyPACgqb0AIFW9AOCsvQCgJT0AQJ88AAB9PQCACb0A4HQ9AKAKvQAAtDoAgMo8AKBBvQAwij0AQJO8AOBvvQBA9bwAwP28AAC/OwAA2zsAgE08AGCgvQCAKD0AIAg9AACAuACgBL0A4G09AADwvACwvD0AAHg9AMDQvABgAb0AAJ88AOCMvQDgCj0AoAy9ACAJvQCQlD0AgGo9AKAjvQCABT0AYKA9AOBgPQAQwj0AAMk7AADhvAAwob0AAP87ACB0vQAgIr0AgJs8AAD/PADA4LwAAKc8AMBoPQAQoz0AMJ49AIBgPQCAVz0AQI08AEDlPACA7L0AADY7AMA5vQCAmbwAAJC5AKB5PQAAPDwAANi6AACgvADAgD0AoKc9AEDIvQAApDsAQOS8AGCbvQDA/rwAICO9AABTPAAABbwAwCQ9AICwvADACL0AwBk9AOBCvQAARjwAAFU9AAAuPAAAaLsAEJG9AEAwPQCAMzwAAD88AAAYvAAA+jsAwAw9AED8vAAAzDwAIDy9AAB8PQCAQr0AANs8AGAOvQCAMjwAgEM8AADeOwDgQT0AAO67AABoPQAAjrsAIFC9AACSOwAwkT0AQMS8AAAmuwBQij0AgMs8AACIPQDAtzwAQII9AIATPACQrD0AAEC5AADzOwCAQ70AMJq9AECGPACAYzwAAK48AOAePQAgv70AQKI8AAAKuwCASz0AIEO9AKBCPQDgK70AACA6AIC7PAAAXTwAAPq7AECBPQAA4TsAoIC9AEDVPAAAvLsAoM09ADCKvQBgDr0AgPA8AIDQPADA0DwAAE08ACAyPQCAPLwAAO28ABCyvQBA0zwAAGY7AAC3PABADr0AADQ7AIDrvACAmTwAUMU9AACJuwDA9bwAwJ88AIBDPQCgnL0AQE49ACBLvQAA6js=","chunkHash":"a60e899c57a00ff697932723e812d77039f04e1a308d16b4207016d22708bba6"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def train(self):\n        \"\"\"Train the model\"\"\"\n        #...\n                    # Backward pass and optimize\n                    loss.backward()\n                    self.optimizer.step()\n                    train_loss += loss.item()\n                    # Log batch loss to wandb\n                    self.wandb_run.log({\"batch_train_loss\": loss.item(), \"epoch\": epoch+1, \"batch\": i+1})\n                    # Validate every 100 iterations\n                    if (i+1) % 100 == 0:\n                        logger.info(f\"Validating at iteration {i+1}\")\n                        self.validate()\n                # Calculate average training loss\n                avg_train_loss = train_loss / len(self.train_loader)\n                logger.info(f\"Training Loss: {avg_train_loss:.4f}\")\n                # Log epoch train loss to wandb\n                self.wandb_run.log({\"epoch_train_loss\": avg_train_loss, \"epoch\": epoch+1})\n                # Validate at the end of each epoch\n                val_loss = self.validate()\n                #...\n```","range":{"startLineNumber":405,"startColumn":0,"endLineNumber":422,"endColumn":0},"embedding":"AAAwPACgjT0AQNA8ADDIvQCgFr0AAMi8ACAMPQAwkz0AQNG8AEAYPQDgE70AwOu8AIAcvAAAvDoAwN88AACyPAAQlj0A0Io9AEDIvAAA2TsAgDA9AIAEvQCAcb0AQMW8AKDKPQDAlzwAABI8AAC8PACAvDwAAFO8AECiPACAG7wAAIa9AOBmvQCAcDwAICe9AIAMPABQqT0AgIk8AMC0vABAHD0AwLG8AEDFvACgYj0AQCA9AACPOwCAojwAwKo9AIBvvAAgIj0AgJy8APCEPQAA/LoAADm9AEC7vABAibwAANi7AKAevQBglb0AANS7AICWPABQh70AAGw7AACWvACAjjwAQL28ACCFvQAgeL0A4Ja9AMANPQAAI7wAUNW9AIBGPAAA4DsAAEw9AIAHvQAAUb0AQJU9AOBUvQAgGT0AgMe8AIBsvACACrwAgIi8ADCOvQCAK7wAgLu8ACAtPQDAMz0AYLe9AEAiPQDgcD0AQOG8AMCFPADQvj0AQFi9AADUugCAGL0AwNw8AIB6vQAALbwAIDo9AABkuwCANT0AAEg6AGCIvQBgNr0AAHO8AABQOgDgzz0AQDu9AADROwAAmT0AALu8AED5PACA4b0AgKm8AAAZPAAAwDgAABi8AMADvQBASz0AAKC7AAC0vQAAIzwAAFa8AADAuAAAQLwAIDy9AACeuwAA9jwAABU8AICsvACARrwAYJW9AEgGvgAA5bwAAK68ACB8PQDgNT0AoAG9AAAEPQBAT70AACA9AIBSvAAARzwAYAS9AADOOwAAc7wAIGA9AAA7vQAAhrsAQHc9AIBovACAbTwA0IS9AAC9vABA9TwAAKi6AACZuwDA0bwAQKY8AICJPADAZz0AgI28AAAnPACgpb0AQDA9AACcvQAAdbwA4J49AEC5PAAA17sAoNm9AADFOwAAX70AABY7AABavQBAar0AgA08AEDdvAAAxrsA4He9AKAxPQAAjTsAwG+9AAAguQAA4zsAwNK8AIBRPQCASb0AQJM8AEAJPQDArDwAQGY9AADQuwBgKj0AIA89AICtPAAAGbwAQKK8AGCXPQCAJ7wAQFy9AAALvACAprwAQL48AKBAPQAgAL0AAHc9AMAsvQBgFT0AAAA5AEBqvQCAz7wAAIy6AADgvAAAVzwAgBI8ACAmPQAgCj0AQIu8ALCRPQBAjT0AQFk9AAAEvAAA6bsA0JK9AIBgPAAAoLoAAIC6AOARvQBAMD0AAE+8AKDjPQBA8r0AwIG8AAD9vABgBT0AAF68AEBHvQAA1jsAoAW9AABqvADggT0AQNO8AABmvQAQlr0AIHo9AACmuwCABTwAwLs8AOARvQAAb70A4C89AIAbPQAA/LwA4A+9ANC0vQBgLr0AcKE9AECxPABA4LwAAM07AACFuwAAjDwA4DC9AIARvQAA6rsAAOe8AABsvABAjrwAIAg9ACAHvQCA4bwAAOi6AOAEPQCA0DwAIC09AAAyOwAAVbwAABW9ACCqPQCA6LwAAOy7AACXOwBAvbwAQBW9AMBUvQAASb0AgAM8AGBIvQAAjb0AEIS9AECUvACAXzwAwJC8AACOOwAgIj0AYIm9AABiOwCAS7wAwEy9AAAGPACAkbwAAKQ8AGC0PQBwj70AkKQ9AEATvQDAH70AYCy9AADaOwBAxbwAoCI9AADIvAAgVT0AQEI9AMBqPQAAkDsAwC+9ADDnvQDgHr0AQBS9AADmPAAAgDgAgJG8AAAFPABgQ70AwNK8AABQOwCAz7wAwCi9AAANvQCAbLwAIGw9AADFuwBwsT0AwKo9AAAtPABQob0AQHG9AGCXvQBgOj0AwLQ8AMB4PQCA8bwAUIo9AAA6vQAAdzwAAN88AABGvQCgTD0AAIm8AMBVvQBAAb0AwIa8AADwOwCAaTwAgBA8AECkvQAAPz0AYBA9AACSOwCgQL0AoHo9AADnvABwtj0AEIM9AIDSvAAA77wAQP48AGC6vQAgHj0AAO+8AACTvAAglz0AgFc9AIA+vQAAyDwAoJg9AACBPQBQwD0AAAO8AID1vADQob0AAJQ8ACBCvQCgSL0AAKM8AACAPACAAr0AwJ08ACBUPQAwzz0A4Ic9AHCDPQBAdT0AQKs8AGAGPQBA/b0AAJM7AMCBvQCA37wAAHS7AOCRPQAAgDoAAIO7AADeuwBQsD0AsI89APCfvQAAlDsAwCe9AOB0vQBAsLwAAOS8AAAgPAAA+7sAoCM9AADtuwAAn7wAAHM8AACGvQAAZjwAQBU9AMDrPACAIrwA4JO9AIBEPQBAhzwAAGo8AACduwAAVrsAQNo8AKAMvQBgFT0AQOe8ANCNPQDASb0AwPw8AEAlvQAACjsAgGk8AIBfPAAAIT0AwIq8AKBlPQAAg7wAACa9AMCKPABAaj0AwA29AAB4uwCApz0AwOc8AABjPQAADTwAgHU9AAAaPABQuz0AABo7AACxOwAATL0AwJ29AADsPACAODwAwMg8AKAKPQDwsb0AgAI9AAB8vADAQT0AgA69ANCBPQBAMr0AgGW8AGAFPQAAlzsAAAa8AMCCPQCATzwA4JG9AIAgPAAAODwA0ME9AJCBvQBgIL0AAIM8AIDYPADAiDwAAA08AIAwPQCAPbwAwAm9ANDYvQCAnzwAAJS6AIDEPACAC70AAJy6AIDVvAAAyTsA0Ng9AAAgvACAHb0AAJA7AABSPQCQu70A4GU9AKBmvQBAlDw=","chunkHash":"9624b8ec3cca11f605027fe544da05e8929193b6a26ad14ff667ef8d45d71ad6"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def train(self):\n        \"\"\"Train the model\"\"\"\n        #...\n                # Log validation loss to wandb\n                self.wandb_run.log({\"epoch_val_loss\": val_loss, \"epoch\": epoch+1})\n                # Update learning rate\n                self.scheduler.step(val_loss)\n                # Save model if validation loss improved\n                if val_loss < self.best_val_loss:\n                    logger.info(f\"Validation loss improved from {self.best_val_loss:.4f} to {val_loss:.4f}\")\n                    self.best_val_loss = val_loss\n                    \n                    # Save model\n                    model_path = os.path.join(self.project_dir, 'Weights', f'best_model_epoch_{epoch+1}.pt')\n                    torch.save(self.model.state_dict(), model_path)\n                    logger.info(f\"Model saved to {model_path}\")\n            # Finish the wandb run after training\n            self.wandb_run.finish()\n        except Exception as e:\n            logger.error(f\"Error during training: {str(e)}\")\n            #...\n```","range":{"startLineNumber":422,"startColumn":0,"endLineNumber":439,"endColumn":0},"embedding":"AAAAOgCAkD0AIBQ9APDMvQBgCb0AgNS8AMD4PACQrz0AYBi9AIAdPQDgPL0AQJO8AIBHvAAA6LsAgPE8AIAXPQCglT0AkKc9AOAsvQAAQrsAwEI9AAAdvQBAU70AwLi8ANCxPQAA2DsAANS7AMDXPABA5DwAAEq7AMDmPAAANbwAQIO9AKBTvQAAkTsAIEO9AIB2PACAtT0AAL48AIClvADABj0AIEC9AICKvACQgj0AAAw9AADcOgAAiDoAoMs9AECIvACgGz0AAC67AJCNPQCAU7wAQHu9AACgOgAAEbwAAIG7AID4vADAkb0AAMC8AIAQPAAAEb0AAPw7AAB5vAAgFj0AwKy8AIBtvQDgOb0AUJG9AADLPAAAWLoA8M+9AADgOwCAXTwAQEE9AADvvABQk70AEJ09AIBhvQAA2TwAwA69AMCivAAAyrsAADK8AJCAvQAAnrsAgO28AMAoPQCgUD0AEK69AKAIPQCghT0AAMq8AACBPAAAnj0AIEG9AICAvAAAHb0AQM48AABfvQAAILoAIB89AACougAALD0AAAY8AMCfvQAABr0AAPa8AAAsuwCgyz0AkIW9AABKvAAAlD0AgKG8ACANPQBA8b0AgIy8AIAOPAAApzsAAG+8AEC/vACAbT0AgD68AAC+vQCAPjwAAA48AICBvAAA9LoAwBO9AIBzvABAqDwAgEw8AAByuwDA0LwAUJO9ABD1vQCAK70AwIK8ACBiPQBgeT0AQMC8AGAaPQBA97wAYDQ9AIDBvACANDwAgCe8AICwPADgAb0AgEQ9AMBZvQAAkDwA8Is9AAC8ugCAizwA4HC9AMD+vABALD0AAFa7AMCmvADAw7wAAJw8AABcPAAAWT0AwLS8AIBtPACgur0AgG09ACCEvQBAqrwAUKk9AOAMPQAAlbsAoMa9AABNPABAcL0AAEe8ACB4vQBgYL0AAD68AICyvAAACbwAoFy9AKAhPQAAVLsAQDu9AADQOQAAKDoAgI68AIAuPQAgNr0AgMs8AMBQPQDA2zwA4IE9AAAVPAAA5TwAwAM9AEDZPAAAG7wAwA69AKCOPQAAjrwAQHC9AACjuwAArrwAQMY8AKArPQCABr0AIIs9AOAbvQAAFT0AADk8AKBovQAA47wAAE68AADyvADAgzwAgLE8AIDsPAAgIz0AgKm8AFCMPQAAdT0AYGY9AICAvAAAWLwA4Km9AIAZPAAA9zsAAHC7AAANvQDAVz0AgCi8AEDiPQCw2L0AAKK8AGAAvQCAGz0AgDi8AMBbvQAAKTwAwMG8AAAgvAAgkj0AAEu8AIBPvQDArr0AgHA9AABWOwAANzwAgP88AAAWvQBgdL0AwA09AMAOPQDAF70A4Bq9AMCMvQDAQr0AYKg9AICOPAAAwLoAAIQ8AAB/vACAF7wAEIK9AMAgvQAAkLoAgFO8AMCDvAAAfLwAQDQ9AMAcvQBA1bwAAOe7AIALPQCAgTwAQNU8AAB+OwAAKLsAIAe9AGBaPQAA6rwAwKm8AECfPACA7LwAgBa9AEBPvQAAJr0AAIQ7AIAnvQCwoL0AAI29AABxvADAoTwAAOA6AAABPACgHj0AgCu9AACMOwAAA7wA4Ee9AIBrPAAAirwAQLw8AICtPQCQo70AsJs9AMAOvQBgPL0AACi9AAB8uwAAfbwAwK08AEAbvQAAED0AAIE9AGB3PQAAHTwAABS9ADDcvQBgKb0AwEy9AAADPQCAHjwAwIy8AIBQPADATb0AgGa8AACFOwAAnrwAwMC8AIDFvACARrwAgE49AACsuwBwzj0AMJE9AECDPACgtb0AoHW9AICOvQAAIj0AAEA5AACUPQBAuLwA0I89AEBkvQAAMTwAgOc8AIAIvQBgYz0AYCG9AEBxvQDgKL0AAIu8AAAAOQAA0TwAAOC5AHCxvQDAHT0AICA9AIB/PAAANr0AIHk9AIC7vABQrj0AgIk9AGAlvQBACb0AgPI8AEC3vQBAJj0AwAm9AIA7vAAAdz0AoHY9AGA3vQDA3jwAkI89AIB7PQBQrD0AAEg6AKAkvQCwoL0AwM08AAAHvQAgLb0AAGk8AAAbPQCAsLwAAAY8AMA9PQBAwD0A4J09ACBgPQCgNz0AgKg8AICsPADgB74AABA7AICLvQCAqrwAALc7AJCgPQAA9zsAAIW7AMCDvACgkz0AsIo9AHC2vQAAiDsA4BG9AGBUvQBA07wAYBq9AAAOOwAAGrsAoA89AADXvAAAsbwAgJg8AGBivQCAbTwAgBo9AADtPAAAwLoAYHO9AEAmPQBAyTwAADI8AADFuwAAZjsAACg9AOAyvQBAyjwAwNm8AACPPQAARL0AQAo9AGArvQAAsrsAgGY8AAB1PABA/jwAAEG8ABCFPQAA1bsAoHO9AMC/PACgHT0AQCG9AADougDwgz0AwLg8AFCMPQAAaDwAgGo9AACougBwzD0AAIa7AIAxvACAUL0AEJi9AMC3PACAaTwAwK88AEDdPABQzr0AQBs9AAAUuwDA2zwAgAW9AJCBPQBAJr0AANc7AECPPAAAFzwAgCe8AAB/PQAAjjwAQJm9AADXOwAAxzsAELU9AEBxvQCgQb0AgKM8AIAQPQAAODoAAAk8AOBDPQAARLwAANC8ALDpvQAAITwAgD28AECmPACgFr0AAJq7AEC4vACABzwAIK09AAAVvADgTb0AAB47AOA+PQAgub0AAE49ACBhvQAAMDs=","chunkHash":"e13ad55758fc57a4f83d1c60168e577860a02cf0618ca539235c5ec5a7e54d72"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def train(self):\n        \"\"\"Train the model\"\"\"\n        #...\n            logger.error(traceback.format_exc())\n            # Ensure wandb run is finished on error\n            self.wandb_run.finish()\n            raise\n    #...\n```","range":{"startLineNumber":439,"startColumn":0,"endLineNumber":442,"endColumn":17},"embedding":"AADoOgDAoz0AQLQ8AHDNvQDAA70AAB+9ACA8PQDQyT0AoEe9AADzPAAgNr0AAAO8AIAJvAAAnrsAANs7AEC7PAAAjj0A4J89AMAmvQAAoDsAwG89AACvvADAe70AgKa8AJC8PQCASzwAADA8AIClPAAA4LsAAA67AMCbPAAAKbwAgC+9AABivQDA0TwAQFC9AICuPABAvz0AgG08AIDRvAAA4TsA4HG9AIC9vAAANz0AQBU9AACdOwAAcjsAsME9AACmvADAFj0AAFK7ABCMPQAAqLwAYH69AABLvAAA0bwAAIe7AIASvQAQnr0AwPq8AOAPPQBgT70AgBA8AICBvACArDwAgDK8AOBevQBAhb0A4Hy9AADLPAAA2LsAUMW9AACQuQCAVTwAYFQ9AID9vADgUL0AYI49ADCHvQAAHD0AAO28AICXvAAADLwAgIi8AGB9vQAAibwAAAu8AIDnPADAUD0AAMi9ACAdPQBgZj0AgD+8AACbPAAwkD0AgD29AABYuwCgOL0AAB08AGBgvQAAzbsAwAc9AABNvACgSj0AAOA5AOB5vQDgDL0AwBS9AEC5vAAw1z0AMIe9AICVvADAxj0AQP+8AEAiPQCwzb0AgKK8AAAgOwAACLoAAPg6ACADvQBAZD0AAAi9AACxvQBAizwAAEo7AICcvAAAKLsA4CW9AIAVvACAQTwAAJ27AAAjvAAA2bsAkIy9ANgBvgBAVr0AACC8AJCLPQDAcz0AAG28AMAxPQBAQr0AAPU8AIC2vAAAvDsAgMu8AABlPACAPLwAgBk9AMA2vQCAljwAoI09AADTOwCAWDwAwB+9AMALvQBgNT0AgCK8AECovABAGL0AYAY9AABNPAAAQT0AwMC8AACYOwBArb0AYDk9ACA3vQBA4bwAQHk9AOAEPQAACTwAgOe9AIAqvABAVL0AAFS7AABVvQBggr0AAEY7AADAuQCARLwAYHS9AGAlPQAAoTsAYEi9AACuuwBAkTwAwPC8AGAZPQAAJ70AwLo8AOAxPQCAxjwAgHA9AADYOwCAAD0AgII8AIBZPAAAVTwAQPG8AKB7PQAAnLsAwBy9AMDzvACA2bwAQLQ8AGBZPQCAKb0AYIU9AGATvQDA5jwAAMk7AMB2vQAALL0AgFO8AEDtvACALTwAANQ8ACAOPQAALz0AAPO8AJCvPQDAaj0AYCA9AIBSvAAAqLwA0LK9AAAIOwAAODsAALQ7AKAGvQAAfD0AgGS8AODhPQCQzr0AgNq8AAD8vADgMT0AAIA4AKBTvQCAvTwAYC69AADkuwAgXT0AwN+8AGBAvQBQp70A8KU9AACiuwAAuzsAALE8AOAnvQCAVL0AYAw9AIA7PQAALb0AgC29APCBvQBASL0AwL09AEDLPAAAxbwAwLE8AIDcvAAAMrsAYEK9AGAavQAAjjsAYAK9AIC6vAAAi7sAoCw9AOA6vQBAHr0AAHi7AMCAPADAiDwAYAo9AIBfPAAAlrsAwNC8AIB+PQCAPLwAQO68AMCBPACAJr0AoC29AABmvQCAEL0AAMI7AMCzvAAgpL0AwDa9AADUugCAIjwAgIU8AAACOwCgDz0AIGW9AADIOgAAGjsAICC9AABUOwCAzrwAAAA8AGB7PQAgzL0AILs9AEAgvQCgdL0AIAq9AADFuwCAgLwAwOM8AMDnvACA5TwAgEY9AIB+PQAAxzsAADS9ABDOvQCgJL0AAHe9ACAHPQDAsDwAABK9AAB/PADAXr0AwKa8AADwOgAA0LwAgBu9AEDQvADAh7wAsJM9AIADPADQxD0AAJM9AEDCPABwq70AYEy9AMB6vQDAQT0AAGC5AABPPQCA7LwAoFk9AKBnvQAAoDkAwLY8AAAxvQCgZT0AIAS9AFCYvQBA+rwAgAK8AADquwCAsjwAAI67ALCZvQDgBT0AACU9AACbOwAAH70A8Ic9ACAVvQAwkD0A4Cg9AECrvABANL0AAK88AMCtvQAABj0AwIm8AMDAvABQgz0AQGA9AOBkvQAgJT0AIIM9ACBHPQCwqT0AACu8AABivQBAm70AQKE8AEAjvQAAPr0AwNc8AMDaPAAASLwAAMC6AKB+PQCwtz0AQH89AMCaPQDgeD0AgHo8AABTPADw+r0AALi7AIBavQAAGjsAAAI8APCQPQAAaTwAgI68AMC7vABgij0A8Ic9ACCtvQAA6LoAwM+8APCZvQDAqLwA4CO9AACjuwAA8LoAAAw9AIBJvADAjbwAAHs8AMBEvQCAdjwAIEQ9AIDwPAAAI7wAMI+9AOB7PQCA0DwAAGQ7AACguwCAfzwAgGM9ACAXvQCAgTwAoB+9AACxPQAASL0AwOQ8AMAQvQBAnDwAQJQ8AADMOwCAZTwAADe8AKBqPQBAnrwAoDK9AIDePAAgET0AYES9AABcvADwoD0AIAQ9AMB3PQAATTwA4EQ9AABsPAAA2j0AANE7AAARvADA5rwAkLS9ACADPQCAjjwAgGU8AMBKPQAgx70AgC09AACouwBAFD0AQBO9AECBPQBgJL0AAFG8AECEPAAAgrsAALY7AKBOPQAA0zwAsIu9AAB1PAAALrsAAPM9AFCDvQCAO70AANA8AECPPAAANDwAgLw8AIAFPQAAIbwAQAa9AODCvQCAxDwAACe8AEAQPQAAEL0AgHa8ACAsvQAAMTwAwJI9AICHvACA2rwAANQ6AEAVPQDAn70AYGY9ACBuvQCAnzw=","chunkHash":"6de2cda3d4ec8529649d456776236f6e35d0e5f411f58d1309c708cb12ff47c8"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def validate(self):\n        \"\"\"Validate the model\"\"\"\n        logger.info(\"Validating model\")\n        try:\n            self.model.eval()\n            val_loss = 0.0\n            \n            with torch.no_grad():\n                for i, batch in enumerate(tqdm(self.val_loader, desc=\"Validation\")):\n                    inputs, targets = batch\n                    logger.debug(f\"Validation batch {i+1} - input shape: {inputs.shape}, target shape: {targets.shape}\")\n                    \n                    inputs = inputs.to(self.device)\n                    targets = targets.to(self.device)\n                    \n                    # Forward pass\n                    outputs = self.model(inputs)\n                    loss = self.criterion(outputs, targets)\n                    \n                    val_loss += loss.item()\n            \n            # Calculate average validation loss\n            avg_val_loss = val_loss / len(self.val_loader)\n            \n            # Update the momentum-based validation loss for learning rate scheduling\n            if self.val_loss_momentum == 0:\n                self.val_loss_momentum = avg_val_loss\n            else:\n                #...\n```","range":{"startLineNumber":446,"startColumn":0,"endLineNumber":472,"endColumn":0},"embedding":"AIC+PABQjz0AgAs9ADC5vQBArLwAADY7AMC0PABwiD0AQNO8AEAjPQBA2rwAAI28AIC/vABA8zwAwIs8AACBOwBASj0A8II9AEChvABgAD0AwGU9AAAougAAE70AoA69ALD2PQAACDwAAE47AIB6PAAgJD0AQJW8AICmPAAAzLsAULC9ACBVvQAAGjwA4Au9AACDOwDQ4T0AgAg8AADFvADAgDwAgBi9AKAVvQBwnz0AQJA8AADRuwCA4jwAUI89AOAdvQAAnzsAgAG9ACCOPQAA8jsAgLi8AIATvACAhbwAAIC8AEAqvQAAf70AgAm8AADsuwCAZb0AAIu7AAAyOwAA5jwAAAe9AMBJvQCAm70AUIi9AGAbPQAAs7sA8Li9AIDUPAAAKLwAwA89AGAUvQDA/7wAANs9AMDivAAAAD0AACC8AECwvAAAgDoAADC8AAClvQAAaDoAIGS9ACArPQBAJj0AkLG9AEA6PQDgoT0AgMS8AEADPQAAyj0A4I+9AABHPACASL0AAD88AGB1vQDApbwAIFs9AAD8ugAgZT0AgBU8AIBrvQDgJL0AAK68AADFvADgvD0A4Dy9AACnOwBQmD0AAJ28AAC0PADQw70AwIm8AAAcvAAAQrwAAKm7AMD0vABAOj0AAA88AIDFvQAAuDsAAIW8AADguQCAmLwAgIu9AAAhvAAARjwAAFE8AAAkuwAA6LsAYFS9AOD5vQBAKr0AAMu8AAAgPQCgJD0AYCq9AAB0PADAOb0AQHU9AACxuwCACb0AAN68AMCNPAAAI7wAkIU9AAALvQAAVTwAIFA9AADfuwAAULsAgIy9AGANvQDANj0AgBs8AICDvACA1rwAgI88AADlOwAAHz0AABW9AIB6PAAgmr0AgBM9AABlvQAAtrwAsLE9AIAKPQCAa7wA0Pe9AADQuwCAd70AAJA5AMBPvQDgf70AAIS8AIDfvAAAjLoAoGK9AIDbPAAAMrsAYGK9AACHuwAAqjsAAOa8AEAfPQBgTr0AANU8AEDmPACAhTwAIHU9AMCjvADgHz0A4Hg9AADXPAAAkrsAQMK8ACBnPQCAlbwAQGm9AAC9uwCgH70AgC88AEC/PACgUr0A4DY9AMDKvABgPD0AAGQ7AKCAvQAAgLoAAF88AABjvACABrwAABk8AOAfPQCA+zwAABi6ADCzPQBAVT0AYBU9AABKuwAADzwAsJm9AECwPAAAlLoAAPw6AOAgvQAgJz0AgGi8AIDpPQDw9L0AQJ+8AEDkvADAOD0AAAa7AMAnvQDABD0AQMm8AID0vAAwkj0AgFW8AIBjvQCAj70AkIA9AEC8PABAkjwAwPE8AGAEvQCAb70AoAc9AKAoPQAgPL0AIFu9AJC0vQBgLL0AoGM9AGACPQBgFb0AAOG7AABEPADAqzwAwCK9AGBjvQDAnbwAgLG8AIAUvACAoLwAgIY8ACAHvQDAzbwAACq7AAA0PQCAGT0AYEE9AAAEuwAA3bsAAO+8AICUPQAAlrwAAIu8AIASPAAAvDsAIBe9AKCIvQDgQL0AADY8AEBOvQAgfL0AgJW9AACSuwAATDwAQKy8AAAQPADAqDwAYGC9AAAuuwBA4TwA8Iu9AACBOwAgH70AwM08AKCaPQCA9rwAwGs9AMDrvABAMb0AABO9AACHOwAANrwAQAw9AOAlvQAAgzwAIEw9AJCZPQAA3jsAoF29AGDQvQCAMr0AANO8AECMPACAczwAwNG8AAABPACghL0AAKC8AABwuwAAx7wAgJG8AEDAvAAA1bwAcIQ9AMCuvABwvT0AIIU9AAAJPQAQp70AQKm9AEBqvQBgZD0AgFU8AOBhPQDgIr0AIGs9AIDkvAAAvTsAgKM8AMBUvQBgcj0AYBi9AFCPvQDAvLwAgOe8AMCuPAAAkjsAAEa8AJCJvQAgRD0AgBc9AABQOwCgGr0AIGg9AOABvQCgpj0AYFE9AIAavQCAFb0AgPU8APCDvQCgPT0A4D+9AED8vACggD0AoHQ9AADqvAAAlzwAML09ABCHPQCQzz0AgHw8AMC2vADgmL0AgDo8AECGvQDgL70A4Ak9AACOPAAgG70AgAW8AOA5PQBQzj0A8JE9AABHPQAAeT0AwOk8AOAaPQDQ5L0AAMc7AFC2vQAAwDoAQI88ANC0PQAAhrsAAAA8AADXvAAAlj0A4Js9AICyvQAANjsAgCy9AEBdvQCAAr0AAC68AMCOPAAA2DsAoBw9AKAivQBAy7wAgMw8AGBlvQAARDsAgMI8AIAsPQCAP7wAkJ+9AECzPAAAPrsAgF88AMDFvAAABrsAgN48AAD/vABA7DwAgDy9AAB0PQBgYr0AgJc8AKAuvQAAHDwAAFS7AADjOwCgRD0AQK68AEBbPQAAADwAAEy9AAAIOwBggj0AIAe9AICkvADgcT0AANE7ABCVPQBAGj0AwIo9AAC0PACAmz0AAIw6AACeOwBgRL0AQEe9AADJPABAyzwAAK48AMAxPQBQxr0AgKU8AACQvACgND0AgN+8AOBAPQBgW70AAKQ7AIBMPAAAQTwAQOC8AAAsPQCAMLwAoIK9AACpPAAALDwA0PQ9ANCdvQBAAL0AADg8AKAyPQDgCj0AAKo7AMD3PAAASLwAIAK9AGDEvQAA1TwAAG08AMDQPACAB70AAMC5AIA+vACAzDwAMLk9AACIugAgDb0AAKU8AED4PADQmr0A4Fc9AEB5vQDAhjw=","chunkHash":"ea64c41c135d8089a9e3bf90f9dc52250fedf635126f695bf8beba8b1ccd3745"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    #...\n    def validate(self):\n        \"\"\"Validate the model\"\"\"\n        #...\n                self.val_loss_momentum = self.smoothness * self.val_loss_momentum + (1 - self.smoothness) * avg_val_loss\n            \n            logger.info(f\"Validation Loss: {avg_val_loss:.4f}\")\n            return avg_val_loss\n        except Exception as e:\n            logger.error(f\"Error during validation: {str(e)}\")\n            logger.error(traceback.format_exc())\n            raise\n#...\n```","range":{"startLineNumber":472,"startColumn":0,"endLineNumber":479,"endColumn":17},"embedding":"AECuPABQuz0AAIE8AACovQCA77wAgHm8AIAaPQDAgD0AAJq8AOAqPQBAjrwAgJW8AIDNvACA5zwAgE+8AAA4PADAdj0AMJ89AGBYvQBAxDwAYIc9AACNOwDAGr0AAAW9ADDfPQAAhrsAwJk8AIBFPADA5DwAgIG8AICcPAAA97sA8IG9AKBIvQAAwjsAwDa9AACpPAAA8T0AgFU8AEDrvABAtjwAYCm9AECvvADgdj0AgP08AACPOwDgID0AwJw9AADAvAAApTwAQOK8AOCJPQAAcDwAwHG9AADtuwCAH7wAgJK8AOAnvQDAmr0AQKS8AACcugCgfb0AwJq8AACYugDA9TwAQNi8AMBZvQDQqr0AAGu9AGAJPQAAybsAIL+9AID3PADAkDwAgPM8AOAAvQCAvLwAMMU9AMAQvQCA4TwAAGG8AABJvAAAWjsAAKK8APCWvQAAkzsAQFm9AGAoPQDgIj0AsKi9AEAcPQCwmD0AQI+8AIDAPADwuj0AgH29AABwOgAgfb0AgHU8AKCFvQAArbwAwFk9AAAhvACAdT0AAMA5ACAEvQBgIL0AwAe9AEDovABAtz0A4DG9AAAYvAAwpz0AgJu8AAAbPQBwu70AYDO9AADyuwCAE7wAAJe7AEAJvQAgEz0AwI28AIC9vQAAVDwAAAA6AIAdvAAAHDsAAH69AADHvACAfjwAgCA8AIAtPACAFzwAoEK9AFDmvQCgTb0AgAG9AMBnPQDASD0AoCa9AGAfPQCgKL0A4Do9AAAWvAAA87wAgK28AIA4PAAAzLoAIHA9AEDYvACAXTwAoGk9AADxOwAAjbwA4EK9AECqvABgPz0AAKy7AIDIvABAtLwAQCI9AIDSPABAEj0AQJu8AADBPACAo70AgMY8AKA4vQAAzLwAIJY9AIDMPAAANbwAcAG+AACYuwBAWL0AAGg8AGBOvQDAhL0AAOq7AMDVvAAA1LoAQEe9AADSPACAOzwAQIG9AAAWOwAAJDsAANK8AIBBPQBAB70AgC88AIDPPAAA5jwAoIY9AICUvAAgBz0AgGI9AIDNPAAAIjwAYCC9AACTPQAAH7wAwPS8AIBkvADAFr0AgIA8AKAEPQDASL0AoG09AMC/vADgUT0AAJC6ACBivQAAKrwAAA47AABcOwAATjwAAMo8AGAuPQAAqzwAgIy8AHDNPQBgZT0AIB49AECavACArzwAAJ69AIB4PAAAdLwAADw8AKAevQCAOj0AAAi8APDtPQBA8r0AQIW8AACXuwAgZj0AgGo8AADovABABj0AwAa9AAB1vACAXj0AAPW7AKByvQAge70AcJA9AEDDPADArDwAwJ08ACAEvQDAX70AwNw8AMAyPQDgO70A0Ie9AODPvQCAM70AoHk9AIAZPQDARr0AABA7AICNvAAAxrsA4Cq9AMBDvQCAhrwAgBu9AACKvAAAyrsAgHI8AMAdvQDADb0AAGA6AAD2PABACT0AYDA9AIByPAAAeLsAQPC8ABCFPQAA8bsAwMS8AACAPAAAh7sAIAW9ABCCvQDgTL0AAAy7ACBPvQBwjr0AAD29AIBUvACAiDwAAIW7AAAQugDA0zwAIIm9AAB4OwAAojwAIGi9AACgOgCAa70AgKI8AACAPQDgPb0AwHU9AOADvQDgO70AAAS9AIAAvAAAd7wAQK88AOAZvQDA1zwAwD89AHCEPQAAuDsAwEW9AIC6vQDAM70AoEC9AIBuPABAqzwAICS9AAD2OwDQg70AAOy6AABCvACA9LwAwNq8AKAUvQCAdrwAYHc9AMCwvACQvj0A4H09AMCLPACwnr0AcJi9AGBcvQAAbz0AgGo8AAA8PQAgCr0AUIM9AAD/vAAAXDsAwK88AEBGvQBgND0AAPC8ACCmvQAAu7sAgAG9AAArPACAETwAAF68AOBNvQCgHT0AgNY8AADYOgBA1LwAoGw9AGAPvQCAhT0A4AI9AEDVvADAYL0AgAI9AOCavQAAVz0AwL68AAD1vAAgRj0AQCo9AOAavQBA3DwAkLk9AEBxPQBQyz0AACA7AIABvQDQqL0AABw8ACBfvQBA5LwAoCY9AACSPACA1bwAgHm8AEBjPQCA6z0AAIc9AKCGPQAwhj0AwLo8AMD6PADA7r0AAH48AGCSvQBAxzwAAFA8AAC8PQAAaLsAABy7AAD7vADAsT0AgLA9AJC5vQAAQLoAQFS9AABvvQDA17wAgB28AAAIPAAAz7sAgLc8AICDvACA4LwAgB88AOBcvQCABTwAQMY8AOA/PQAAdrwAwI+9AAAQPQAACzwAAIA4AIBsvAAAaLoAQDI9AEDmvAAADj0AoCK9AKCGPQAger0AQKE8AGAvvQAAbzwAgD08AIAYPABAzDwAgEq8AGBpPQDAl7wAwCO9AIAnPAAgST0AYFe9AMDqvADglT0AQIA8AOCNPQAA2TwA0Js9AID4PABQqj0AAGo8AABTPACgEr0A8IS9AED7PADAhTwAwNw8AGBLPQAQw70AQNg8AICUvABAZz0AgBu8ABCSPQAgfr0AQMK8AAD+OwAAIDoAgJe8AGAePQAAfjsAAG+9AADOOwAASrsAEP09AFCavQDA9bwAAMw6AOAaPQAgDT0AAM07AMD/PACAQLwAQPa8AFDDvQBgCz0AACg7AEDvPAAgDL0AgEq8AKAAvQBAhTwAwKw9AABivAAgGb0AACw7AEClPABgqL0AwEg9AOBgvQDAHj0=","chunkHash":"a8e313be4e864f954680d2e0ca4d63cca5fb6e6804573076741a2a4eaf7e3454"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass TextureModelTrainer:\n    \"\"\"\n    Trainer for texture models (both low-res and high-res)\n    \"\"\"\n    def __init__(self, config, model_type='lowres'):\n        #...\n    def setup_model(self):\n        \"\"\"Set up the texture model, criterion, optimizer, and trainer\"\"\"\n        #...\n    def setup_dataloaders(self):\n        \"\"\"Setup custom texture dataloaders for training and validation\"\"\"\n        #...\n    def train(self):\n        \"\"\"Train the model\"\"\"\n        #...\n    def validate(self):\n        \"\"\"Validate the model\"\"\"\n        #...\n```","range":{"startLineNumber":190,"startColumn":0,"endLineNumber":445,"endColumn":32},"embedding":"AACmOwBgnD0AQP88AMDEvQDAi7wAwMi8AIBiPQCwij0A4Bi9AMC0PADAGb0AQAG9AACAuAAA8TsAALk8AACQOQDAcz0AkII9AID+vADA8zwAgI09AEDBvAAwhL0AYAW9ABDAPQAABjsAQIo8AEBtPQAA1DsAwM+8AAAbPAAA/LoAYGu9AEBCvQCA6jwAAFG9AMDUPADg2z0AgLg8AIBpvAAAVzwAMJu9AACavABASD0AwJI8AECTvACAijwAcLs9AKAWvQAA8DkAQMG8AIBZPQAA5DoAIA+9AAAIOgCALrwAQJm8AMDKvAAgn70AgPa8AEDUPAAgR70AABQ8AACnuwBANz0AgBa8AABOvQBwg70AwI29ACBZPQAAwDkA0LO9AABrPAAACbwA8Ig9AKAMvQDgQL0A0Pc9AAB4vQCA8TwAgAa8AIA3vADAizwAQKi8AMBsvQCgAb0AgJO8AMA6PQCAHD0AoK29AED3PACgHT0AAA69AKAVPQCArz0AwD+9AAD5PADgYL0AAH88AMBDvQAAsLkAYCQ9AABquwDgcj0AAAE8ACBNvQAAWb0AwJW8AAAwOwCgrz0AIDq9AAAHvAAQ6z0AAFa8AAByuwAg170AAAC8AIAAvAAAp7sAAOG7AMCsvAAgPz0AgBW8AECFvQCAMj0AALw6AEAEvQAA6DoAcJK9AAAivQDAoTwAAD88AABGuwCAp7wAoG69AHDivQBgLr0AQLS8AEApPQDgeT0AQA69AOA8PQCABb0AIBE9AIDSvAAA2DoAgOK8AEC5vACAk7wAoDA9AOA8vQAAZjwAYI89AACyuwAAQDoAoHG9AIBBvQAgHD0AAEA5AAALvQAAobsAwM48AICBPABADz0AgG68AADsPABAl70AoBs9AAA/vQCABb0AwIY9AMDyPACAfLwAQMS9AADjuwDgU70AAJq7AEDOvACAab0AAEQ7AAA2vAAAYLoAIGm9AIBsPAAAlrsAgF69AABwuwAAyzsAgH68AGAxPQAAz7wAQKY8AGAQPQDA9TwAAFc9AABPvACAJz0AQOM8AAA/PAAA8DsAAAa7ACAWPQAAuDoAgPC8AOAtvQAAXL0AQIM8AGAAPQCADb0AwHg9AEBBvQAAoTsAAC67AIDDvABAlbwAALq8AIALvQAAirsAQNQ8AEDMPAAATz0AgDG8AACePQCAPD0AoAc9AID8vADgAb0AoJ29AIBOPACAfbwAAO07ACAQvQAAGT0AgBG8ALDIPQAQ4r0AwKa8AOBZvQCgZD0AADA8AIA0vQDAkDwAABi9AIDnvAAwoD0AAI+8AMByvQDghL0AwEg9AECIPAAAUDwAACU9AMARvQDgUr0AoAY9AOAwPQBgEb0A4GO9ABDBvQBAdL0AwGY9AADKPACAqrwAwNE8AICfvAAAIDwAoEW9ACBOvQAAarsAICq9AIBIvADAuLwAYA49AIDlvADA+7wAAIi7AIC8PABAoTwAQPY8AADAPACAZLwAQLe8AHCZPQAACDsAIA+9AAAAPABAsLwAANy8AKBbvQBgWL0AADa8AAAVvQAghb0AAIC9AABGuwDA2DwAQLe8AADKOwAAqjwAYEy9AAD7PADAnDwAQOu8AACHvACgD70AADg6AMBePQDwgr0AUIo9AGAgvQAwir0AoBq9AADAuwAAx7wAgAo9AABzvAAA4jwAAPA8ADCKPQAAADoAgGe9AJCrvQCA7bwAAB29AAAdPQAAxDwAwCS9AIAUPADgj70AAEC7AADIugAQgb0AAMm8AAC+uwCAwbwA0Kk9AAB4ugBg3j0AIGA9AADsPACQo70AwGS9APCLvQDAGT0AALE7AKApPQCAzbwAQIg9AEApvQAAlTwAgHk8ACBlvQDgFT0AgMC8AIC0vQAgDb0AANq8AACVOwAAGDsAAAQ8AGCBvQAgCj0AYCU9AAAGvAAA6LwAoIU9AKARvQCQmD0AoDI9AIDpvADAzLwAgO48ABChvQDA9zwAAI68AKBAvQDAXz0AgH09AOAwvQAA7DwAkLM9AGAaPQBgvD0AAJM8AADlvADgjL0AQKA8ADCCvQAgLL0AQOI8AKArPQBAl7wAQJK8AACVPQBAxD0AcKA9AGCvPQCggT0AQMU8AADkOwBws70AANE7AIA8vQCArzwAgCs8AOCePQDA1DwAAB67AACdvACQgT0AULI9ACDNvQAAMrsAQA29AGCXvQCAurwAICS9AIANvAAAnrwAYBo9AIAWvAAADL0AgDY8AHCJvQDAjTwA4DY9AMADPQAAI7wA8KG9AEDrPADAlTwAABQ8AACwugAAwTwAIDg9AEC0vABAozwAoBS9AHCLPQDACL0AQJ88AIAhvADgEj0AwKc8AAAfPADAgjwAQLG8AGBfPQDA57wAQNm8AIB8PAAwkz0AoEy9AABIugDAxj0AgMc8ADCRPQCAnTwAMLI9AMADPQAgtD0AgIY8AAAUPACgb70AoHy9AECzPACA3TwAAIk8AMAVPQDwyL0AAA49AADsugDAIj0AAOC6AEA6PQCAa70AwMe8AMCaPAAA4DsAAK07APCCPQAAazwAoKS9AADkOgAA+rsAgAU+AMB4vQCAGr0AgPc8AAAiOwAA/DsAwKk8AABBPQCAD7wAgEG9AEDfvQAAajwAAGi7AAByPACAnbwAAEm8AIBOvQAABrsAYKQ9AABkvAAAv7wAgAC8AIC3PACA1L0AMJE9ACCHvQCgbz0=","chunkHash":"80d9cfef3146cd545ab7ff5e1380944f438c4dd8445fbc9277f12cbc3a1e7029"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass ConvBlock(torch.nn.Module):\n    def __init__(self, in_channels, out_channels):\n        super(ConvBlock, self).__init__()\n        self.conv1 = torch.nn.Conv3d(in_channels, out_channels, kernel_size=3, padding=1)\n        self.bn1 = torch.nn.BatchNorm3d(out_channels)\n        self.conv2 = torch.nn.Conv3d(out_channels, out_channels, kernel_size=3, padding=1)\n        self.bn2 = torch.nn.BatchNorm3d(out_channels)\n        self.relu = torch.nn.ReLU(inplace=True)\n    \n    def forward(self, x):\n        x = self.relu(self.bn1(self.conv1(x)))\n        x = self.relu(self.bn2(self.conv2(x)))\n        return x\n#...\n```","range":{"startLineNumber":482,"startColumn":0,"endLineNumber":494,"endColumn":16},"embedding":"AIAaPQBAkb0AgDE8AMBfvQAAv7sAgK69AAAQPAAA2rsAgLu8AAByOwAAxDoAAIC6AIBsvACAvzwAgJM8AAAvvABAsjwAQEM9AKBbPQAAej0AoE+9AEDuPADA5TwAALa8AIBivACAazwAgKO8AACXPABABD0AAIS6AAASOwAAJrwA4JK9APCFvQBAw7wAANg7AADxuwCAsTwAANs7ABDUPQDA2TwAcLy9AOAvvQAAXDwAAJA7AIA0vQCAIL0AAKk8AADcOgAgcz0AgPG8AIDHvAAAwDgAAFK8AIBcPACAHj0AIBw9AECKvACAdL0AAMy7AAB1vADwoL0AYCM9ABCQvQAA4rsAAD+8AODkvQCAf7wAALM7AAC1vACA/LwAgJW8AEDDvADADz0AQLs8AICQPADgRr0AEOs9AAABPADA9zwA8NY9AADmPAAAkbsAgFk8AID0vADAmLwAQMe8AADZOwAAP7wA4Hi9AICOPACAJTwA4Dy9ACAHPQCA6DwAYCE9AABAOwDAfr0AoEQ9AOBCvQAAuTwA4CM9AACcPABgLz0AAGo7AIAivQAA0TwAoEG9AABIvACgkD0AwNA8AIA/vABAXD0AALy6AOAHPQDgpr0AwPQ8AABevAAAx70AAE88AABKvADA2jwA4LK9AKAsvQAAnDsAwLq8AOAWPQBgHL0AkI29AMCvPACAFTwAYBM9AACIPAAArrwAwGW9AKDcvQDgJb0A4KE9AIAlPADA0DwAAM87AECOPADA1bwAwNa8ADDSvQAALjsAAC29AACdOwAA27wAAO88AABHvAAAjDwAIGg9AAA9vABgF70AIDO9AABFvQDw2T0AACM8AEA8vQAAYLkAgI68AMDGvACAdD0AIGe9AAAnPQDApr0AALA6ABCSvQBoBr4AwKk9AAAfPAAAo7wA4Fe9AABSPACAjbwA4I69AOgDvgAAGrwAADA6AACivABwhj0AIBK9AAC/PABgHT0AAGC6AABRPAAAhzwAwA09AABSPACAiTwAACA9AECWvACAmj0AUJ49AADSvACAdT0AANa8AIC7PAAAQzwAYDq9AECEPQCArr0AwOu8APCWPQCAv70AQKu8AADMugAgZb0AQIo8AACxOwBgDz0AgMA8AEClvACAQ70AwM68AACzvACAZzwAQK+8AEBBPQBQoD0AAEu9AHCZPQCgcz0AAAC8AEDFvAAAOLwAMLC9AADouwCgWL0AABq7AMCPvABAxDwAALi8AAAYugBAIr0AAIA6AMAhvQAAvzsAALS6AACzvADAAj0AgBq9AABgOQDwhz0AwLI8AIBFvABApbwAgBc8AGAUPQBwlz0AQF09AEA0vQBA67wAYAQ9AIBEvAAAgDwAYCa9AJC8vQAgX70AIHM9AKCnPQBAxL0AICY9AEDHvAAAjLwA8LO9ACBRPQDAzbwAACI7AMBqPQBAqLwAIAM9AACCvABAdr0AAO68AABDvAAgLj0AsJ49AIA5vACADT0AAIS6AMBlPQAAvTsAQOm8AABovADAxbwAgJ88AKB4vQDgbr0AgPI8AMCVPACAdL0AABq7AMAHvQCgCz0AAGq7AAAaPACAQD0AgAC8AIBaPQDADr0AgLQ8AMCxPACgOr0AQEs9AAClvAAARLsAoLA9AIAxvQAgS70AQCi9AAD6uwCAIzwAoBa9ACABvQBwgT0AwJO8AIBoPQCAp7wAYMm9AACzvQAABjsAoCq9AEAUPQBwnj0AAJy6ACBFPQBgDr0AgCe9AACTuwBwmb0AQIc8ANCevQDAWb0AANy8ABC8vQBAqT0AYGq9AIDqPADA7b0AoDW9AAA+PAAAursAAGC6ALCqPQAA7DwAIB89AECUvAAABz0AYAW9AECjvAAAfDwAYDS9AIBMPABgTb0AAGe8AMBWPQAAPjwAQNU8AGCHvQDwiD0AQNY8AABgOQAA5zwAgH88AAA/vAAAQLsAoCK9AAAqPABA3bwAAGu8ABCNvQDgYb0AgJC8AGAevQDAGD0AAP08AADhvAAAgzwAIGQ9AKCHvQBgmD0AwPq8AFCNvQAAY70AwC89AMC0vADAwrwAAHI9AMDQvAAAnbsAYHQ9AIA3PABAXj0AACo8AICJPQAA2DsAgBa8ANCKPQBgDL0AwIa8AACYugDAFL0AoAI9AAC9PQCgcj0AANi8AABEPQDALz0A4GU9AMDTvQCADrwAEKa9AKACvQCQlL0A4Dm9AMBBPQCgGr0AoMk9AID8PACACbwAABm8AAAAOABwnL0AANC5AEDtPAAAjLwAQPk8AACDOwCAGD0AAFC8AABBvACATTwAACI8AAC4uwAgIj0AAKA6AKBPPQAgEL0AAMG7AAAAOADAhDwAwKk8AMAuvQCA9bwAYHG9AEASPQAAQLwA0La9AAClPADAvbwAAKm8AABiPADAUz0AIJ+9AIB5PQDAEj0AAEq7AMDtPAAQkj0AQJQ8AADtPAAAL7wAAFi9AADyuwAA/DsAAAu8ACAEPQCA4rwA4G09AADcuwCAfzwAcKg9AIBIPACAGL0AwN48ACBbPQAAmLsAwBw9AGBNPQCQvj0AwHa9AAChuwAAbrsAYO49AICRvQAgd70AAMU7AFCmPQBgP70AAE48AED+vAAA/bsAACw8ABDlvQDg4b0AgBy8AOA3PQAAlLwAIHc9AICrPADAxDwAADO9AEAMvQAAdLwAAEa7AIChPAAAQr0A4De9AMDKvAAgBz0=","chunkHash":"c518831ffc9351982574c7ba33429bf8d186b5e09af35fb5a94aa5f5bf5a3c25"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass DownBlock(torch.nn.Module):\n    def __init__(self, in_channels, out_channels):\n        super(DownBlock, self).__init__()\n        self.maxpool = torch.nn.MaxPool3d(kernel_size=2, stride=2)\n        self.conv_block = ConvBlock(in_channels, out_channels)\n    \n    def forward(self, x):\n        x = self.maxpool(x)\n        x = self.conv_block(x)\n        return x\n\nclass UpBlock(torch.nn.Module):\n    def __init__(self, in_channels, out_channels):\n        super(UpBlock, self).__init__()\n        self.upconv = torch.nn.ConvTranspose3d(in_channels, out_channels, kernel_size=2, stride=2)\n        self.conv_block = ConvBlock(in_channels, out_channels)\n    \n    def forward(self, x, skip):\n        x = self.upconv(x)\n        x = torch.cat([x, skip], dim=1)\n        x = self.conv_block(x)\n        return x\n#...\n```","range":{"startLineNumber":496,"startColumn":0,"endLineNumber":517,"endColumn":16},"embedding":"ACAmPQCQnL0AAGw8ADCdvQDAhjwA8Ia9ACATPQBAlzwAgOe8AEATPQAAX7wAQIS8AECavACAUTwAAFc8AADougAgCT0AIA49AOBcPQDAUj0AgCW9AAAgOgAACD0AgIW8AIAivACAXTwAADK8AADHPAAAyjwAgEY9AADjPAAABrwAgIK9AMDSvAAAEjwAQKq8AEDAvADgAD0AAKC6AOCTPQCwrD0AYPO9AMCCvQAASLwAIAy9AMCFvAAAzrsAAEC7AMAvPQDAZD0AAAQ7AMCMvADAv7wAAFg6AABsPABA2jwAAKU7AIAkvQAAHb0AANK7AAA+vACwnb0AAEQ9ACAXvQAA5DoAAFY7AGAXvgBAyrwAgCs8AADAuwCARbwAQJi8AAAQOgDgGD0AAOE8AAAeOwAgfb0AEOo9AAClPADA/TwAgL09AEBaPQAA0rsAwJM8AADUOgDA0bwAADa8AMDEPADAmrwAAJG9AMDMPAAAADoAANa8AICZPAAAYj0AIEg9AABcPAAAHL0A4JA9AOA8vQAA5zwAAFY8AECivACAtjwAgE08ACC2vQAA3DsAAMC4AADAuwCAzT0AgAw8AEAnvQAAeDwAADu8AIDsPABAn70AgKk8AECgvACgP70AAPI8AIDWvACAKTwAICy9AKAavQCAEzwAAFC8AAC3PAAARb0AgOe9AABiPACAnzwA4DM9AABeuwAAVLwAQDG9AOC8vQBgGb0AYL49AIBvvADA0DwAAOk8AABovADgOb0AAAC8AICnvQAAojwA4FO9AABIugAAl70AgDM9AIA0vAAAKjwAEKI9AAAqvADQgr0A4F69AAA9vADAyT0AAOU8AGAYvQCAZr0AANW8AADfvABArj0AUKy9AADxOwDAtb0AAKY7AOB0vQA4D74AsJI9AADhOwAAkbsAIGu9AMCAPABAF70AgLm9AGDnvQAAaDoAAFy8AEDMvABQmT0AQBG9AEDIPADAGD0AAEO8AADwugBAlzwAAEQ8AEDQPAAAdrwA0L89AOATvQDAWz0AoJA9AAC8uwDwkT0AgCe8AEADPQAAjTwAYGO9AEBzPQDQhr0AAFi7AGBLPQBApr0AAIe8AABIOgAAtr0AAD48AAAmuwCgaz0AACA7AIA6vADgMr0AQBq9AAAfvAAAwjwAAPE7AADrPADAlz0AwE29ACCqPQDAZj0AgGy8ACAAvQAACrwAULy9AACEuwAAbLwAALC7AAAvvACgJT0AYBq9AIBFvACAK70AAH28ACA5vQDA2DwAYAq9AADguwAAhDsAgAy9AIDDvABwmT0AQMM8AADquwBAAL0AAJC5AGA1PQCAPT0AYCU9AOA8vQCAqrwAAOY8AADcOgBAEj0AYEW9AMCjvQCAQ70AYK49AHCDPQBApr0AYIU9AIBpvACAmrwAsIa9AIDdPABAar0AAJ48AOBAPQAAQLkAQLg8AEAGvQAAbr0AgDK8AABzPADAcD0A0Jw9AAAjvQCA8TwAAB+8AMAcPQAALrsAgDS9AMCqvABA0bwAQMc8ACAKvQDAYr0AIAk9AAC3PADAbL0AwOC8AMCwvAAAsjsAAMY7AACqPADAIz0AQCW9AGBePQCAhb0AwMg8AACUuwAAqrsAYBY9AACUuwAAxjsAwHk9AEAkvQBgFL0AQF69AABmOwAAQjsAQBu9AOB3vQCAkz0AANq8AECcPQCATL0AINy9ADCZvQAA77sAwJK8AEAGPQCgsj0AwNU8AADtPACAirwAgGy9AABquwAgLr0AAOg7AGBGvQBgA70AALw6AJCwvQBwqD0A4Hq9AOBiPQCoBb4AoDK9AAAtPAAAlDsAAI47AFCBPQCAQzwAgD09AADAvADABz0AAPu7AADruwAgaD0AwO68AIDePADgJ70AAHK8AADwPACAbTwAAC88AEB1vQDgjD0AAGY8AABougCAFT0AYAE9AAApvACAtjwAQPW8AECBPABgA70AAKC6ADCZvQAAFL0AgAm9AECWvADAvzwAAAo9AACNuwAALTwAgPQ8AADxvAAQnj0AgOm8AOBZvQBgVL0AcIo9ACARvQBAobwAoBI9AMAtvQAAyjsAgKI9AIAhPAAAWT0AQKs8ALCNPQAAgbsAAJO8AGCqPQCAYr0AwGC9AACDuwDAHr0AABs9AGDRPQAgIz0AwLG8AABEuwDA5TwAQNQ8AIDUvQAAsDsA8I29AADAuQBA7rwAAE69AACbPAAA1LwAkJk9AED/PADA7rwAgEe8AICMPABAVL0AAJS6AGAePQDAhrwAwMI8AIATvQBgZT0AQAS9AMC9PAAA4bsAAPw8AOBQvQBAnDwAQKA8AOBiPQAAHrwAgEg8AAAougDA6rwAwPk8AMDhvACgUb0AYI+9AGBlPQCAuLwAgJC9AAAgPQCAUbwAIA+9AAAiPABgMz0A8Ki9AAB5PQBA5zwAwCI9AACGvABgjz0AACk8AAAquwAAVLsAADa9AADYuwAA4DoAAKQ6AACJPQCgQL0AAIk9AIAyPAAAKT0AoJA9AEDrPABACr0AsIY9AOAHPQDAvTwAQOA8AMDNPACQmT0AIJy9AAAavQDAoLwAoNM9ACBTvQCgFL0AAFi6AECEPQCAmL0AAOC5AACRuwCAP7wAAGC5ADDWvQAQ4r0AgMc8AEDSPAAAqrsAIAo9AAC1OwAA8DwAACA6AADfuwDgWL0AgG48AMCMPACA1LwAwPS8AADAOgAgOD0=","chunkHash":"99439ec1544ebe3687df258dc6f86f5356dd05d7d34603314aca473790a45abc"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass UNet3D(torch.nn.Module):\n    def __init__(self, in_channels=1, out_channels=1, f_maps=[32, 64, 128, 256], final_sigmoid=True):\n        super(UNet3D, self).__init__()\n        \n        self.in_channels = in_channels\n        self.out_channels = out_channels\n        self.f_maps = f_maps\n        self.final_sigmoid = final_sigmoid\n        \n        # Initial convolution block\n        self.inc = ConvBlock(in_channels, f_maps[0])\n        \n        # Down path\n        self.down1 = DownBlock(f_maps[0], f_maps[1])\n        self.down2 = DownBlock(f_maps[1], f_maps[2])\n        self.down3 = DownBlock(f_maps[2], f_maps[3])\n        \n        # Up path\n        self.up1 = UpBlock(f_maps[3], f_maps[2])\n        self.up2 = UpBlock(f_maps[2], f_maps[1])\n        self.up3 = UpBlock(f_maps[1], f_maps[0])\n        #...\n```","range":{"startLineNumber":521,"startColumn":0,"endLineNumber":540,"endColumn":0},"embedding":"AAAHvACAi70AAF89ACC8vQAAvrsA8KC9AIAbPABgpj0A4Dq9ACAGPQDgBL0AQFa9AGAyvQBAoLwAwJY8AOABvQAAlzwAwP08AKA8PQCAoTwAAMs7AIAovABAAT0AwMi8AAByOwAA2zsAAHy7AMDcPAAA5LsAALY7AADGPAAAkbwAMJ+9AABVvABgGr0AgMk8AAA+uwAggz0AAH+9AOAZPQCAJz0AkLq9AACevABAt7wAoEK9AKA+vQAAEr0AQJI8AKAePQAgaD0AADC9AEAlPQDAxLwAgJA8AADQvAAAezwAoBI9AEAIvQBgYb0AgDe8AADcuwBgob0AwAM9AAD8vAAA8DoAAJc7AADyvQAAhTsAkI69AAAAugDA4LwAAFG8AADnuwCABDwAADc9AABYPAAAtb0A6AA+AMCRvACAXzwA4GU9AABvPAAAuLoAwK+8AECkvACgmb0AQPe8AMAtvQAAH70AgOS8AABHPAAACbwAMLq9AABBPQDAyTwAwCk9AMAfPQCgMb0AgEg9AMB3vQCAZzwAAPw8AMDdvAAA3rsAADA6AEBovQAAOrwAAEO8AECrPACwmz0AQK+8AEBNvQCAKT0AAIi7ACCIPQDgML0AgH08AABNPADA/bwAAJu7AACKvACAQbwAAJE8AABsuwBgcj0AgH88AAAIPQCAWTwAcJu9AIAdPQAAMDwA4CM9AIA7PABANb0AIC29AHDQvQAgXL0A4CQ9AMC0vAAASDwAgHK8AADSvACAR7wAAAAAAACdvQAACD0AwFa9AGDBPQDAiLwAgG88AMB2vQCAZbwAwKU9AKAdvQBgOr0AQCi9AMARvQAQqT0AICM9AADrvACA37wAAEm8AAB8vADAJD0AwOu8AGAIPQDgyb0AgB08AABdvQBQ4r0AQJQ9AIBCvACAhDwAgGa8AGBpPQBAH70AYKO9AIBvvQCAdrwAYAe9AADsOgAgaz0AADm9AIAfPAAA4bsAwPY8AKAcPQAgEz0AAK48AMDDPACAHLwAEJc9AIDaPACAjjwAQKo9AADfOwBgYj0AYGC9AACuOwDgJz0AQD69AMCLPQCgHb0AwAa9AABhPQDgq70AwJi8AAAfPACAMb0AIF09AICGPABg0z0AQPY8AAATvADAor0AgFC8AMCpvADA+jwAYBs9AIC5PACwkz0AAP67AFCTPQDAND0AIDo9AADUugDAorwAoKe9AKBBvQAAGrwAAH08AIA/vAAA87sAAFq7ABCGvQCAP70AgIA8ALCovQCASzwAAPc7AACvvABAgbwAAJ69AIAKPADAaz0AoAs9AIAlvAAAcDsAADw7ADCGPQBgXz0AIB89AAD4uwAAwLwAQII8AAC9PAAARTwAADy7AGAsvQCAf70AkJ89ACAZPQBgor0AoFY9AIBMPAAAJbwAYHS9AAB5PAAAjrsAQMc8AIAOPQBgYL0AgGk8AMC6vAAwsb0AABY9AABwugBAjT0AIIw9AOBRvQCAcrwAACC7ADCTPQAAHDwAAOW8AABwOgAAlzsAAPQ8ADCKvQBgZr0A4IA9AADSOwCgEr0AQJa8AACnuwAALrwAgBw8AADOOwAA2TsAAO07ACAcPQBAlb0AAD68AAANPAAAtbwAoFs9AIBbPACAnLwAgNw9AOBQvQCAK7wAgFO8AAC8uwBAtrwAAAA6AIAWvQAA9TwAQM+8AMC8PQBAszwAwJ29AKByvQAAAAAAwKM8AMC5PABAaz0AAMC7AAAuPQAgJL0AIA+9AABmvABA3bwAgEE8AMB6vQCAIzwAgJu8AEBhvQDQsT0AAMa8AABKuwAAzr0AYKe9AADNvACA67wAAHW8AKBaPQAAoDkAgE09AAD2PABgAj0AAAA5AEDavABgHz0AwAG9ACACPQAAr7wAQKe8AGBfPQBAwjwAAJ27AKA0vQAAcj0AYCs9AABOOwAAbjsAAPc7AIDRvAAART0AoKG9AIC5vAAAfr0AAH+8AJCpvQAAuTwAgDi9AED8vAAAYLsAYJ09AMCsvABgAT0AAJE9AECfvAAA8jwAkJK9AEAsvQCwir0AsIE9AIAJvQDA/LwAgMo8AIDHvADA2LwAgOI8AACkOwDQoD0AACA8AGCUPQBAAr0AQIA8AECMPQBAVL0AABC9AAAKuwCQj70AAIG7AMDAPQAgtD0AgOy8AADluwCgIz0AAFw7APDlvQAAbrsA0La9AIAbvQBgZr0A4Ii9AAARvABA27wA4Hk9AADmOwDAIr0AABI8AABmPADgWb0AgBq9AMBYPQAAFLsAAO48ACAWvQCAeD0AAKK8AAAevQCAET0AwNY8AGAIvQDAwTwAwAK9AIApPAAAjzwAwDA9AAAOOwDgOb0AgE08AACEvAAgI70AMLq9AJD8PQBAnbwAwKq9AICSvADwm70AgA+8AADMOgCAjD0A0JO9ALCkPQCAGT0AgKw8AGAIPQCQiT0AAK+7AAD8uwAAejsAAJG9AADQOgCAlLwAAOg6ADCYPQCAOb0AAOg8AADUvAAAzTwAgIw9ACBcPQAAxLwAAFA9AAD2PADA5jwAwIs8AMAnPQCgWz0AIHq9AACkvACAhbwA8NA9AOB0vQCAOL0AALa7APDpPQDgYL0AABC7AEAFPQAAQ7wAwPq8ADCpvQAwoL0AAKa8AICAvAAA7LsAgKs9AMCdvACACj0AAP28AAB6uwAAPr0AANu7AAA0PQBAL70AAAK9AMCNvADgXT0=","chunkHash":"1f23942749c6245f9ad618a15e24f393f627d10fb7c90cbd19c5367913dc4cbf"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass UNet3D(torch.nn.Module):\n    def __init__(self, in_channels=1, out_channels=1, f_maps=[32, 64, 128, 256], final_sigmoid=True):\n        #...\n        # Final convolution\n        self.outc = torch.nn.Conv3d(f_maps[0], out_channels, kernel_size=1)\n        \n        # Final activation\n        self.sigmoid = torch.nn.Sigmoid()\n    #...\n```","range":{"startLineNumber":541,"startColumn":0,"endLineNumber":545,"endColumn":41},"embedding":"AAB+uwAAR70AAO08AEDXvQAAQjsAgLq9AACzOwBwwD0AAC69AACMPABA3rwAwLG8AGAivQAATrwAAJq7AIAJvQBApDwAwP88AGApPQCAZzwAAGa7AABOPAAAlzwAwNu8AAAnvAAA9jsAwIe8AEDQPAAAUDoAAAm8AMCiPABAAb0AYKe9AIBYvADgNL0AgNg8AIADPADwoj0A4Ge9AAC+PAAgAj0AgMu9AIAvvACALrwAQL68AMAyvQBAGL0AAHw8AECyPABAOj0AQBu9AIC5PACABjwAAE88AAA1vACAiTwAAD09AAAMuwBgfr0AgFW8AABOvACAnb0AIBI9AEDIvAAAdzwAACa7ANDJvQAAGrsAoGW9AAAKuwCgKb0AwMy8AIAhvADAuzwAAEs9AICYPAAgsb0AuA0+AMCDvAAAmjwAwGQ9AIBlPAAAyLsAgDS8AMCevADQvb0AwOm8AGAzvQBA/7wAQKW8AAAYuwAA/rsAQLG9AOAtPQAACDwAQBg9ACApPQCghL0AAKc8AGAvvQAARzwAoFY9AECnvAAAtDoAAMY7ACAVvQAAIDwAABe9AMCmPABQ0D0AAI68AEByvQDAjD0AAAC5AGA/PQBgR70AAMS6AAB8PADAobwAALA5AABbvAAAGbwAAEg6AACAvABQhj0AQNc8AADJPADA9jwA4Hq9AMDjPAAAtjsAwOU8AMDsPAAgS70AQCO9AGDqvQBAFr0AgO48AEC7vAAAQjwAgBK8AAAtvQAARDsAAJM7AHCHvQAAyjwAoIq9AEC7PQAAFLsAACs8AGBVvQDAmLwAIKA9AADdvADgIL0AgPa8AKAJvQCQoz0AwAU9ACAovQAARbwAACA5AABuvABA2DwAAMW7ACApPQAgvL0AgA88AGBCvQCg6L0AcIg9AACiuwCA0jwAgEW8ACAmPQAgFL0A8I+9ACBDvQDAmLwAANa8AABZPADgfD0AoEy9AACrPAAAUjsAwOQ8AEBKPQAAnTwAIC09AECAPACAobwAoFk9AEAEPQDAszwA8Jk9AADHOwDgND0AoIG9AADEOgCgQz0AQGO9AHCSPQAgGr0AgK68AOAmPQDApb0AADG8AECJPAAATL0AQDQ9AMDkPADwyT0AADM9AABNvAAQnL0AAMO7AAAJvQAAmDwAQCc9AICUPAAAnj0AgHa8ABCkPQDA9TwAoCo9AACAugAAKbwA4J29ACBDvQAALrsAALQ8AECYvAAAbrwAALW7AJCHvQDgRb0AwP88ALCSvQBAgTwAAGA6AAB+vAAAHbwAgNi9AIASPACAKD0AwE09AAAcuwBAnjwAAN47AFCbPQAAZD0A4G89AADCuwDAzLwAALQ7AIAhPAAAyDoAAPQ6AEANvQAAir0A4Gs9AEC8PAAQnL0AwDA9AABJPAAAsbsAEKG9AAC7PADAlTwAwK88AKAYPQAgdb0AAMs8AIBpvABgsb0A4BI9AAAcuwBAnj0AYIo9AOBOvQAAJLwAAA28AMBNPQAA9LoAAKK8AAAaOwAAkDkAIAM9AIB5vQBAd70AsIc9AADgugDgQb0AACa8AACMugAA9zsAAFA8AIARvAAAhLsAwJg8AIBhPQCgTL0AgK+8AAB0OwBAVr0AAII9AICFvACA4rwAoPA9ACBIvQAAkLwAgBK8AADpOwDAx7wAAAC6AIAsvQAAlTsAgDq8AAC7PQCA0TwAgE69AMBbvQAARjsAAGK7AECoPAAAlz0AAG68AEA1PQBA0LwAQIG8AIDLvACgBL0AAIo7AGA9vQAAXTwAAAC8AOAHvQAQtD0AgF28AAA/vADQtb0A0KS9AKAivQCAb7wAQLG8AOAxPQAAUzwAgCI9AAALPQCAaDwAgCy8AOAxvQCAmDwAgBy9AICAPAAAY7wAAOa7AEAMPQDgBj0AAMi6ACAkvQDAWz0AAFE9AACEugAAELwAgJM8AKAlvQDA/TwAMKG9AIDIvADAQb0AoAq9AICUvQAAvTwA4DW9AECIvAAA7LsAUK09AMCFvACAWTwAQJU9AIB7vAAgFD0AIHu9AIBQvQBwmL0AQHU9AED7vABAq7wAwB89AIDcvAAA4LwAAIY8AIBaPADgsj0AgEo8ADCjPQDAmbwAADo8AOCMPQBwmb0AgAq9AAAIuwDgL70AAEY7AFCtPQAg3j0AoAG9AAAKuwAAbT0AAMA8ABDZvQBAhLwAwLy9AIB6vQDglb0AoJW9AAAougAABr0AAFA9AAArPACAmLwAAAM8AICVPACAXr0A4Bq9AACWPQCAEDwAgIE8AIAyvAAAQz0AwAu9AOBavQCA9zwAIDQ9AMC5vACAKj0AwM68AADqPABAmTwAAOA8AIBPPACAeLwAgCw8AIDAvAAgBL0AMLa9AJDmPQAA0LsAYLO9AMC2vACAvL0AgKC8AAAhvACQtz0AAIS9ANCRPQDA1jwAwLw8AOCLPQBgnD0AQNC8AAB+uwAAtLoAAKC9AIARPAAAhbsAAJI7ABCJPQCATL0AQA89AIAovQAA0zwAsJk9AAB7PQBgG70AoIE9AECsPACAyDwAAMQ7AAAQPQBASD0AMJC9AABKOwCAcLwAoPI9AGA9vQDAaL0AAAW8ADDlPQDgMb0AgEu8AMCxPACAGLwAAPa8AKCLvQAgjr0AgMi8AACOuwAAYbwAULU9AADYvACgTT0AwFG9AAAfvAAAcrwAAIW7AGACPQBgZL0AQAu9AIDfvAAAcz0=","chunkHash":"2296fb26362d7d47980a3de6ffac601d37b3c8dbd2bb3ebc9c53e17180f12b5b"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass UNet3D(torch.nn.Module):\n    #...\n    def forward(self, x):\n        # Down path\n        x1 = self.inc(x)\n        x2 = self.down1(x1)\n        x3 = self.down2(x2)\n        x4 = self.down3(x3)\n        \n        # Up path\n        x = self.up1(x4, x3)\n        x = self.up2(x, x2)\n        x = self.up3(x, x1)\n        \n        # Final convolution\n        x = self.outc(x)\n        \n        # Apply sigmoid if required\n        if self.final_sigmoid:\n            x = self.sigmoid(x)\n        \n        return x\n#...\n```","range":{"startLineNumber":547,"startColumn":4,"endLineNumber":566,"endColumn":16},"embedding":"AAAwPACgnr0AIBQ9AODXvQAAGTwAQJW9AIB8PACg5z0AANG8AID5PADgYr0AoEC9AAClvAAA57sAAIm8AKA6vQCAmzwAYEQ9AIBqPADgNj0AAGC6AADouwDgDD0AwJu8AAAkOwAgQz0AgFI8AMDyPAAANDwAgD88AADePAAAy7wAcJi9AACAuwAA2bwAYBQ9AIAivACgXz0AACW9AEDWPADAlD0AYOa9AOAPvQBAGL0AwFm9AKBTvQCAL70AAKC6ACCfPQDghD0AgAa8AADVOwAAKjsAIBs9AEDtvAAAErsAwA89AIDvvAAwib0AAFO8AAC8OgDgx70AAAo9AECrvACABz0AAGU8AJC1vQAAhLsAwFi9AACDuwAA7LoAwNC8AIA+PAAAMzwAgPU8AEDzPADggL0A8N89AIAZPAAALTwA4I89AIBqvACAk7wAABi8AADzuwCA0r0AwAy9AKBsvQAAFr0AAKK8AAAAOwAAVLwAoHS9AOApPQBA0TwAADU9AADDPACAHL0A4IQ9AMCCvQAAIDsAQOE8AACTuwCApLwAAJQ6AGBTvQCAcrwAQDu9AEDUPADAeT0AwPG8AIBjvQBAKz0AQI08ACCgPQBgMb0AAOo8AACNOwCAAr0AgFS8AAB4PADAljwAAPW7AAD4vABAVD0AABc8AKAWPQAAVTwAcIe9AKApPQAADTwAgNQ8AAAzPABgV70AwAa9ADDpvQDADb0AQKM8AMBBvQBgIT0AgDK8AOAnvQAAWb0AAAk8AMCavQBAOj0AIAy9AKDCPQDAiLwAAOE8AKAkvQAApjsAsJs9AICivACgXL0AwD+9AKArvQDQ6D0AgBY9AIDsvACgIr0AQN+8AMCRvABAzjwAAB+9ACAiPQCwnL0AAJA8AMA8vQBwCL4AwP48AAC8ugBALj0AwKq8AEBdPQCAG70AAGK9AIBIvQAACbwAALu8AADnOwAAbT0AAGy9AAAwvAAAZDsAQCc9AAAoOgDgTT0AQIa8AKBBPQCAozwAIK89AABdPACgDD0AwDg9AEDAPABAWj0AwE69AACHPACgND0AYCu9AACuPQAA9bwA4Cm9AKCUPQDQlr0AwKG8AABHPACAPb0AAP48AAB7PACgbj0AACA6AABwuwBghr0AQIu8AABiOwCgGT0AYBw9AMBDPQBgiz0AAJY7AJCRPQCAtjwAwIA9AADluwCAb7wAsJa9AKCAvQCAQbwAAEG8AABgugAAjLoAABK8AKAJvQDglL0AgIE8AJC7vQAAVzwAQLs8AMCyvACALrwAoLS9AECSPAAgfD0AAPk8AADRuwAAVzwAADS8AICEPQDABj0AQFY9AAAAOAAALbwAwKs8AIDkPAAAO7wAAJW7AIDVvABwmL0AoMw9AGAWPQBAPL0A4Ck9AMDCPABAkrwAAF+9AAAfvACAX7wA4BM9AAA4PQBAHL0AAKg8AACqvACQ6r0AICU9AADcugDwtT0A4G49ACBwvQAATrsAgIe8AFDFPQAAmDsAgKG8AECmvAAAkbsAABw9AIBMvQCAj70AQEk9AAC4ugAA6bwAoBG9AAC+uwAAGLoAAEE8AAAEOwAA4LoAYAW9AOBAPQCgKr0AQMO8AADQOwCAAr0AoDc9AAC9OwCAJL0AMNo9AAB/vAAAA70AwOm8AAA+OwDADb0AgF28AMDTvACACD0AQK+8AICzPQAA7zsAIKq9AGBPvQAA0DsAALS6AICtPAAAJD0AgGq8ANCXPQDgDr0AwIW8AIBVvABA1bwAAP47AJCIvQAAwDgAANy7AIAZvQBAnj0AAHu8AAAwuwDQ/b0AwK29AIBpvAAA2bwAACK8AECMPAAAEjwAwD89AACWPACAvjwAgFs8AMAtvQAAFj0AQJS8AGApPQCAGLwA4EK9AOBgPQDAQj0AAOm7AEB0vQAAMj0AwDQ9AAD3uwCAI7wAgLo8AIDJvADA2DwAIDW9AIBPvADgV70AAJG7ALCnvQAA6DsAAAO9AEABvQDAHL0AoHg9AABcvACAKj0AAFA9AIAevQCAJzwAwK29AADAvABgVL0AgEs9AMDSvACAE70AgGM8AID4vABgV70A4Dc9AABUuwDAij0AAL+7AECGPQBgCb0AQL08ALCHPQCwpb0AAEK9AACyvACwwb0AAJe7ADCyPQDAZD0AQNm8AGAGvQBQiD0AgES8AFCSvQAA0rsAMN+9AECLvABgWL0AAO28AAAZvAAA4jsAsIw9AIASPAAAGrsAwOg8AADtPADAQL0AgMi8AOAHPQCAH7wAAEU8AICavADAZD0AAIC8AMBLvQAAwzwAQLg8AKA1vQDAPz0AQLm8AIAGPQAAujsAQHM9AACVvAAQgL0AANQ8AABauwDwjb0AkLC9ACDyPQDgI70AAI+9AIBEvACgLr0AAOU7AEC0PACQhz0AQJW9AKB9PQAAvTwAgMA8AEB5PQAQgz0AALC6AAAAugBAhbwA4JO9AACrPADAg7wAAFm8AACuPQAAJb0AIAw9AAAovQAAHz0AQPA8AEDoPAAAALoAgEs9AAA6PADAFz0AgJc8ACAJPQCgLz0AgKS9AIBCvQDA1LwAMME9ADChvQDAJL0AAAU8AMDWPQAA+bwAACu8AIBLPACAPLwAAO27AHCcvQAAn70AACq7AACFuwAA1rsAgGI9AACgOgDAozwAgJy8AACUOgDAgr0AAGw8AECEPQAgCb0AAN68AAAOuwBARz0=","chunkHash":"f7ca43ef46435cb52783af1e09a9bb7ea50cb340df36cfb87e34ca155e92e85d"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\nclass UNet3D(torch.nn.Module):\n    def __init__(self, in_channels=1, out_channels=1, f_maps=[32, 64, 128, 256], final_sigmoid=True):\n        #...\n    def forward(self, x):\n        #...\n```","range":{"startLineNumber":520,"startColumn":0,"endLineNumber":547,"endColumn":25},"embedding":"AABougAgW70AgC48ADDdvQAAlTwAELW9AAA6OwAQwT0A4DS9AAAuPABAobwAAOy8AEAWvQAAt7wAQI68AIDAvAAADTwAwL08AIAXPQBAqjwAAEC5AECEPACAXjwAgLm8AAC8vADApzwAAMy7AID3PAAARjwAANy6AABaPABgFr0AAIC9AABJvAAgJ70AoBM9AIACPABgmT0A4Fm9AEC5PADA9TwAgNe9AAC2uwAAKrwAQOi8AKAovQBgVL0AAHi6AAC/PADgbT0AgAS9AECIPAAALLsAgLA8AACeuwCAdTwAQDM9AAC8ugBAeb0AAIC6AAAlvADgub0AIBc9AIDlvACAszwAAAc8AICyvQAAQDoAQGK9AABsuwBgAb0AQLm8AABYugBAwzwAYDE9AABdPACAqb0AGBY+AIBDvACAujwA4EU9AADTPACAWrwAAKm7AECtvAAgxr0AAEW8ACBgvQBA6rwAANS7AAB8vAAAT7wAcJa9AMAcPQAAuLoAoDE9AMAqPQCQir0AQMs8ACBkvQAAcjsA4F89AMChvAAAMrsAwJY8AMAJvQAAijwAgP+8AAC1PADwyD0AgFu8AEBWvQCgez0AANO7AOArPQBAQL0AAHC6AICwPABA5bwAAI08AAAxvAAA8DoAANq7AIBgvAAAcz0AQJM8AACJPACAnjwAAHm9AMARPQAAoDsAAK08AAD7PAAAS70AQCO9AMDsvQAAtbwAQNg8AMAHvQBAvzwAAOe7AKA1vQAAKDoAANE7AICUvQBAoTwAgJG9ABDNPQAAhbsAAIs7AGA/vQAA8DkA4KU9AIDdvADgSL0A4Bm9AOAgvQBAqT0AgMU8AMAZvQCAebwAADK7AACkOwBA0zwAgIq8AAD1PADws70AgAQ8AOA8vQCw+r0AoGQ9AABougBA6DwAAO27AIApPQAAC70AAHq9AAB5vQAAubwAQKa8AABaPADAdT0AQFe9AECMPACABTwAgBk9AOAzPQAAbTwAICE9AMDbPACAIrwAYJk9AAAMPQAAIz0AwIA9AAAIvACAOD0AwIi9AACYuwAgbz0AwIS9ACCUPQDgOb0AAI28AIAfPQAwxL0AQJK8AAAgPADwgb0AICk9AAC9PAAQpz0AIBY9AMDovAAwh70AALq7AACvvACAMzwAoAQ9AICSPACAlT0AACa7AKCxPQAAAT0AwAE9AABIuwAA7LoAEJu9AABKvQDAgbwAwNY8AIChvAAAXrwAgFW8ALCCvQAAML0AQIA8ADCPvQCAGTwAAIM8AEDGvACA0LwAQNS9AABOuwCgBz0AQEA9AADmuwCA9jwAAMU7ALCfPQAgJD0AoF89AIA1vABA1rwAgCo8AIAxPAAAibsAAMU7AAAuvQDwgr0AgGI9AECjPADwk70AoCM9AAAKOwAAUrsAgJW9AADePACAADwAQKc8AKBAPQDAWb0AgII8AIC+vAAwyL0A4C49AAAhPADwmj0AQJ09AGAtvQAACDsAAOa7AAB2PQCAKLwAwLW8AAAevAAAkTsAgKo8AABwvQAAbb0AYGY9AABbPABgUb0AACG8AADiuwAAIjwAgAg8AABAugAAkrsAANS6AOB6PQDARb0AAIS8AAA0uwDAZr0AQIE9AMCNvAAA0rwA8Pk9AKA0vQCAjrwAAI68AAAsOwBAAL0AgF28AEDTvAAA+TsAAPg6AMCuPQAApjwAwH69AIBVvQAAh7sAAGi8AAAdPACgez0AAEi6AIBCPQBA5LwAAJy8AEAJvQBArLwAALg6AOA/vQDAujwAgB+8AIDXvAAgrj0AgEK8AECPvABAur0AwKm9AIAcvQBAlbwAgIK8AID0PAAAGLoAIBM9AIAHPQAASDwAQMO8ACApvQAgCj0AgB29AECSPAAA07wAgB68AAD8PADAzDwAABq7ACBMvQDAXD0AoCM9AADouwAAxLoAANM7AMDSvABABD0AcLi9AEDDvABAT70AYCe9AOClvQAAbTwAAN68AABAvAAAJ7wAUKM9AABuvADAqDwAIJU9AECivADAOD0AAI29AKBdvQCgjb0AoHA9AOAPvQCgCr0AAOc8ACAIvQDAmrwAAEQ8AAAgPABwmz0AAIY8ABC1PQAAd7wAAEU8AGCcPQDwyL0AwK+8AAAAuADgML0AALG7APCzPQAAqT0AwCe9AIA5vAAgVT0AAOM7AGDcvQAAwLwAsLO9AEBMvQDwj70AQJC9AAAOvADA7bwAoGg9AIBkPACAS7wAAJU7AEAIPQDga70AQOu8ACBvPQAAp7sAQLc8AACKuwDAPz0AwDO9AABbvQCAtzwAQOg8ACAkvQBgYj0AgNO8AKAOPQCApTwAQMk8AIAuPACAWrwAAEo7AAAOvQCAPL0AsJ69ADDqPQAAfLsAoM+9AECLvADAx70AQPq8AICcvADgyT0AgIS9AJCiPQCAjTwAAGY8AFCjPQCQhT0AwMa8AAC8uwCAF7wAUIu9AAD4OgAAjDoAAJ07AHCHPQAAH70AgP88AMAgvQAA6jwAwIw9ACATPQBgBb0AwFA9AACCPABA/DwAAMQ7AOANPQAAOj0AwJi9AACauwCAsLwAmAU+AKBBvQDAN70AAJm7AGDgPQAgO70AALS6AMDHPACABbwAwM+8AFCPvQDAkL0AgIm8AAAdPACAX7wAwJg9AICMvABAXT0AEIK9AIAqvAAAzbsAAOA6AEAuPQCAc70AoDm9AIAovACwgT0=","chunkHash":"f17bee8e2dca651fc6318b08270fe4c0baba131f23d4a0e818719167cdbb180d"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\ndef train_shape_model(config_path):\n    \"\"\"Train the shape model using the given configuration\"\"\"\n    logger.info(f\"Training shape model with config: {config_path}\")\n    try:\n        # Load configuration\n        with open(config_path, 'r') as f:\n            config = yaml.safe_load(f)\n        logger.debug(f\"Loaded config: {config}\")\n        \n        # Create the trainer\n        trainer = CustomShapeTrainer(config)\n        \n        # Train the model\n        trainer.run()\n    except Exception as e:\n        logger.error(f\"Error in train_shape_model: {str(e)}\")\n        logger.error(traceback.format_exc())\n        raise\n#...\n```","range":{"startLineNumber":568,"startColumn":0,"endLineNumber":585,"endColumn":13},"embedding":"AKCfPQCgaD0AQCg9APDAvQAA6bsAgL68AADGPADAnT0AQAi9AIBMPADADb0AALK8AAAOOwCADrwAQM28AADVPADABz0A4Ik9AEDyvADAID0AMIE9AADivAAAxzwAgLc8AAC0ugCgFD0AADQ8AAB4ugCAmjwAwCS9AIDTPABAirwAkIC9AICrvACAx7wAAL28AIA1PACAnTwAACi7AECMPAAAezwAQGK9AACGuwAwsz0AYBY9AAD1vAAA8DkAwJI9AADcvADAoDwAAKI7AKBHPQAA2jwAANU7AADEvABA1zwAgKo8AAD0vABAW70AwKc8AKBKPQAA7L0AANi6AIADvAAA6jwAgF48AOCYvQAA17sAwP28AABsPACAcjwAIIi9AADnuwAAWrsAAHw9AOCLvQCAR70AODU+AMDUvADA4bwAgE+8AID/vABgNj0AQCe9ACA1vQDAQL0AwM68AECKvAAAoTwAQJ+9AIB2PQAA6LoAYC69AAC3PABgBT0AgHQ8AIAPPQCAhr0AAFw9ACBTvQDA9jwAICs9AEDAvABgUz0AwIK8AAD6vACAWLwAAIq8AAB4OwAAyj0A4E29AAAMvADQpD0AADW8AGAqvQAgFr0AgF28AMCxPAAA0LkAgC88AMDYPACAhzwAAHu9ACBmvQDALD0AYBA9AOBBvQCAAT0AoBC+ACA7vQCAPLwA4Bc9AMBoPQBgDL0AAJs7AKgJvgDAQL0AQPU8AIDVPABA/TwAAPK8AIDoPADAo7wAAMI7AIBuvQDAqzwAAKi8AAArPAAgir0AgIM9ACASvQBAmDwAoCA9AAA0PQAAwrwA4DS9AAA/vQAAOLoAAL87AMBRvQAAO7wAwH49AKBgvQBgdD0AgKU8AIAyPADAfr0AgA48AADWvABw670AYGg9AAA1vACAkLwA4Ga9AIAPvQAAJrsAAG68AMA1vQCAlrwAALw8AAB2vQAAXDwAsNm9AMATPQAAUrwAAJ+7AIBOPACAYzwA4KU9AOBPPQBgPb0AACi8AADdPACQjb0AAAE9AACwuwBQhz0AgCO9AGAbPQCAATwAwLS8AMDBPAAAQDwA4E69AGBkvQDwlb0AwDk9AACbOwAgJ70AoBE9AACYvACAX7wA4AQ9AIAevAAA1bwAAGC8AIBcvAAAB70AQMM8AIA9PACA0zwAICG9ABC8PQDAZj0AwPs8AAAZvAAAXjsA4KG9AACuOwAAkDwAQKG8AIAsvQAAMTwAgKU8AOCdPQCwor0AAL87AGAlvQCA+TwAAGA9AIB6vQAAmDoAgJ+8AACJuwCAez0AAJg7AEAYvQCAl70AQF49AKA6PQBgCz0AICA9AIAzPADASr0AAPw6AACmPACAT70AQKG9AGCMvQCgiL0AoNo9AIB2PADAH70AoC89AIBvvQAAs7wAYFG9AEDsvAAAwrsAwHW9ACAKPQCAmrwAgFc8AIAUPACAI70AAAa8AIBJvQCgtj0AgB49AAAIugCAHDwAID+9AOA1PQBAmLwAADU8AEC+PABAnbwAwL+8ACAkvQBgWb0AQO48AKAAPQBgab0AACo7AAAqOwCARzwAwMW8AOA4PQCAHTwAwI28AAANPABAkzwAAMm7AIDhvAAAY7wAIBY9AADiPABgM70AwIw9AMAjvQCAUL0AgJG8AOAjPQAATrsAAOS7AKAsvQAAZjsAgAA9AKB1PQBAxbwAsMa9AMAxvQAAbrsAwCS9AAD4OgAQhz0AgDG9AMCMPACgEb0AgFE8AIBYPABAab0AQOK8AAAKuwAgfj0AgGA8AADPvACAuz0A4G49AHC3PQDg/L0AgPq8AGBrvQDAFz0AQKe8AEBKPQCAkLwAwAY9AACYvAAAxrwAAN87AIBlvACAebwAAK07AIA6vABAGr0AYD29AACwuQAAIDoAAJ28AGBcvQAA17sAAP+7AICdPACAUrwAgIc8AAArPACA/zwAgEq8AGA1vQCAIbwAwLW8AMCsvQCAhLwA4GS9AICSvQAAcj0AgFo8AMDhPACgeD0AgAE+AECkvQBwiT0AwKM8AGAavQAAgr0AAAi8AIBePACADrwAAKs7AEBSPQAA0rsAwKk8AACKOwCwhD0AoHQ9AFD+PQCA+DwAgDQ8AACoPACgVr0AQL68AIAMPABART0AQI08AIB/PQDArj0AAIm8ALDPvQDA0TwAEBQ+AGgDvgAAYjsAgFG9AACKvQDAJr0AIGC9AACCuwDAnbwAgNY8AAAdPADQnL0AAKq8ACAEvQAAGL0AoCQ9AABEuwCAv7wAAAm8AIBCvQAA4TsAALu8AGAfPQDAzTwAIFs9ACA6vQAAlLoAMIe9AGA3PQAANL0AwN+8AABSuwAgkT0AAIc8AIBCvABAuDwAAOe8AECZPQCA+bwAQIe8AEChPAAAubwAwBC9AADwugBQwj0AAHC6AAB+OwDAE70AQBk+AEDUPACwvj0AYFA9AIB+PADgCL0AEKW9AEDzPAAARjwAQN+8AACgPADgVb0AAAM8AADivAAAXD0AAH68AKCDPQCAwbwAgMS8AACgOwDAhT0AAMw8AOAVPQDQnj0AAL47AMCSPAAAmzwAgF89AGBDvQCgDL0AgMU8ACA0PQDAmbwAwPc8AADMPAAA+bsAgMs8ADDgvQCAbLwAAO28AAAUuwCAc70AQN28AACNOwCgED0AgF88AAB6vQAAO7wAAL88AADQOQBAp7wAAFC6AADbvAAAKz0=","chunkHash":"77f51e43b24c0d0bca1c3ac23a3efa4314b201c59c0d98e6514a39695f5d7ba1"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\ndef train_texture_model(config_path, model_type='lowres'):\n    \"\"\"Train the texture model using the given configuration\"\"\"\n    logger.info(f\"Training {model_type} texture model with config: {config_path}\")\n    try:\n        # Check if config file exists\n        if not os.path.exists(config_path):\n            logger.error(f\"Config file not found: {config_path}\")\n            raise FileNotFoundError(f\"Config file not found: {config_path}\")\n        \n        # Load configuration\n        with open(config_path, 'r') as f:\n            config = yaml.safe_load(f)\n        logger.debug(f\"Loaded config: {config}\")\n        \n        # Create the trainer\n        trainer = TextureModelTrainer(config, model_type)\n        \n        # Ensure experiment directory exists\n        project_dir = config.get('project_directory', f'experiments/{model_type}_texture_model')\n        os.makedirs(project_dir, exist_ok=True)\n        \n        # Save the configuration to the experiment directory\n        with open(os.path.join(project_dir, 'config.yaml'), 'w') as f:\n            yaml.dump(config, f)\n        \n        # Train the model\n        #...\n```","range":{"startLineNumber":589,"startColumn":0,"endLineNumber":613,"endColumn":0},"embedding":"AOAqPQCwjT0AwC89AGAPvgCgb70AwM+8AOAgPQAAAD0A4EG9AADJOwCAbb0AAKu7AAAxPAAA6DsAgAK8AAA0PACAAT0AgCc9AACIuwAAQjsAoH89AMANvQBggb0AALi6AEAYPQAAPzwAQKk8AICzPAAAwrsAAJW8AIBAPABAl7wAEIC9AMBHvQCAa7wAgFm8AKAIPQBgYT0AwJY8AECLvAAAirsAgCW9AIDRvACAkD0A4DI9AIA+vAAAm7wA0NQ9AAAovAAAijsAAOy6AIAoPAAAzTwAAKy8AECTvAAAXjwAAEY7AAAOvQBgub0AAAQ8AIDhPACAs70AwJY8AECpvACgBj0AAK27ACBLvQAAoDoAUIC9AADZPADAibwAkMO9AADYuwCAXrwA4D09AMAvvQCAYL0AgKw9AHCmvQCAGLwAAL87AIBsvACALrwAwLG8AGANvQDAPL0AABi7AAAdPAAAEj0AQH29AKAtPQDgWD0AICe9AIAfPQBgYj0AQLu8AAC2PADQlb0AgMo8AAA6vAAAELoA4Jk9AAD8OgAAQT0AAOi7AEClvABAPr0AQPO8AACAuACQpj0AgFO8AIB9vADwxT0AwMA8AAANPACgk70AoHe9AADuuwAApDoAgN28AICxvADgeD0AYGi9AOCavQCADzwAAOs8AIBevAAAZjsAwK+9AIDYvABA/TwAgBg9AGACPQCAJbwAwHu9AODrvQAA9LwAAKY7ACA8PQAgUj0AgIG9AAA0OwAAY70AgI48AKAtvQBAqzwAACW8AAAoOgDAAb0AoD09AOB/vQAA4DkAAKw9AMDQPAAAhLwAIMG9AGA8vQBAYz0AwIi8AMBHvQAAOjsAgIu8AADUuwCA6zwAALm8AMBTPQDAa70AICs9AADHvAAAdr0AIH89AEC7PACAc7wAMIa9AAD4OwCgJr0AAFa8AKASvQBAmbwAAEw8AOAuvQBAvDwAAEu9AACKPAAAM7wAAHK9AEC0PAAAkDsAQNE8AAAiPQAggr0AgK68AOAQPQCAQ7wAcK09AMCrPADQiT0AAPw7ACAQPQAAvDoAgCU8ACBjPQAALDsAAF+8AGBdvQAACrsAgNU8AABQPABAfb0AIJA9ACAEvQAAA7wAQKE8AIB9vAAAEL0AAOW8ACACvQDgN70AQOk8AAArPACA/jwAAHy9AKB/PQCAfT0AsI09AADxuwAgHL0AoJe9AAD9PAAAuzsAwMO8AIBCvQAAyDwAADK7ALAGPgCwuL0AgHG8AOB4vQAgTz0A4E49AMCzvQAApbsAQEW9AAAUPADwiT0AgHe8AOAyvQAwvL0AQPQ8AICTPACAJTwAUIo9AIDOvACwo70A4CM9AIAKPACALr0AYDK9APC0vQAggb0AANo9AOBLPQDATr0AAJy6AIAXvQCAPDwAQCC9AOBhvQDApbwAYIi9AIAUvABAkbwA4CA9AIBIvAAwmL0AIAQ9AMCTvAAALz0AwN48AKCdPQAA0DoA8Iq9AKACPQCAArwAAIi8AAAuPACASr0AgFW9AKAGvQAgZb0AgGs8AADiuwCQqr0AwES9AIC7vACgOz0A4JK9AICkPAAAgTsAAIS7AABePAAAKLsAQLO8AKAPvQAAOrsAQBo9AABbPQAAX70AcIY9AMDivAAgN70AwBy9AIAfPAAAKLwAYHI9AAA+OwBANT0AAPU7AAAxPQAAlrsAAKu9AADSvQAADzwAAHC8AMC0PABAyDwAABK9AIAPPABgL70AAHw7AADnuwCAUb0AwJi8AIBRvADAKD0AAIk9AACevAAw1D0AkIo9AMA6PQAAm70A4Am9AMC6vQAgXD0AwII8AGBOPQAAmLwAgHE9AAAuuwAARDwAwFA9AKAovQAA/jsAgHa8AIAevQBAprwAoDW9AGATPQDAtbwAAL47AOBfvQDgHj0AAMQ6AEAMPQCgYr0AoDQ9AIBPvAAAlD0AwKY8AGAovQAAz7sAAJg7AFCbvQCAxjwAIHK9AACivACAcD0AIB49AACsvADgWD0AQL49AAByOwBQwz0AAGq7AKBvvQAAYL0AAI47AGARvQCABrwAAKM7AOBEPQBA27wAQI+8AGAuPQBwoz0AYOg9AOC5PQAwhD0AwP88AMD8vADAZb0AgGu8AACyvABA/DwAALy7AAB9PQCA4TwAAD68AKBLvQAAGj0AQNw9ACDhvQAAuDoAcJG9APCivQAAsrsAQOO8AADgPAAgGr0AAG08AACwOgBAl7wAgHG8ACBSvQAAxrsAcJE9AACyPAAAQrsAAPe7AIBYPACAejwAAGA5AACgOgCA5zwAANc7AKBbvQCAszwAICa9AOAYPQAAfL0AABg6AIB2PADAJT0AANk7AMCkPADA8jwAQNG8AKBzPQBA/7wA4Bu9AEArvQBAgzwA4DK9AAABvAAA3T0AYAI9AMAwPQBA9LwAUNM9AMDOPADQuz0AgK88AEBrPQBAF70AgIy9AEAlPQDALz0AAMi7AEDWPAAQqr0AgCA8AACgPABgZz0AwBK9AABKPQBAKb0AwOO8AMCPvACAHzwAgPI8AOBaPQDgNT0AgBi9AACBuwDA+TwAcK09AJCDvQCAfrwAANm7AIBzPQAAJDsAgEc8AMD9PAAA77sAAMQ7AKDVvQAAs7wAwJy8AIAkPABAcL0AwL68AABsOwAAyzwAAEk9AECkvACA9LwAwE89AAAwugBAnr0AQLc8AMDIvADAjz0=","chunkHash":"2b6974b07059a9310cb3569140fb585c58852d0e93706fba9900406bb35c4ce4"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\ndef train_texture_model(config_path, model_type='lowres'):\n    \"\"\"Train the texture model using the given configuration\"\"\"\n    #...\n        trainer.train()\n    except Exception as e:\n        logger.error(f\"Error in train_texture_model: {str(e)}\")\n        logger.error(traceback.format_exc())\n        raise\n#...\n```","range":{"startLineNumber":613,"startColumn":0,"endLineNumber":617,"endColumn":13},"embedding":"AED1PABgcD0AoC09AID6vQCgfL0AYD29AMDmPABgKj0AQFW9AIBQvABAfr0AABU8AABdPAAABjwAADg6AABPPABA8TwAACs9AACHuwCAZjwAQHo9AEDfvAAAWb0AALm7AEAUPQCAGD0AYBM9AAClPAAAqLsAAAC7AADjuwBAwLwAAD69AKCPvQAAkDoAAJa8AIC4PAAQiz0AQJM8AECDvAAAwLgAgDq9AACivABQhj0AIBo9AABiuwBArbwAgMg9AACwvAAAfrsAAEg7AAD7uwCA0DwAAIW8AMCovAAAADsAAEg6AGAkvQBAmL0AALA7AEDuPABgsb0AAJW7AGAXvQAA2zwAAKW7AGA6vQAgBr0AcJS9AACjPABgD70AcKu9AIBevAAAALwAgFs9AAD1vADgTL0AMM09AHCTvQAAELwAAEA8AAA8OwCALLwAAEu8AEDivACAS70AALw6AMCkPADAFj0AAIm9AKApPQCA5DwAQAq9AIDbPAAAFj0AAO+7AMDyPACQkr0AgGc8AABguwAAk7wAoHY9AAAjPADAYD0AAAC5AACBvAAACb0A4C29AIANvACg0D0AwLy8AAC3vACwhT0AQK48AAAIOgDQgr0AYIm9AADjuwAAqLsAgBC8AOAGvQBgeT0AkIK9ANCFvQCAvjwAICM9AIBmvAAArLoAkMq9AIASvQCAizwAAKU8AMD1PAAA3LoA4Ea9AFDtvQCAmLwAAFg8ACBvPQBgYD0A4F+9AAA5PADAfL0AQKk8AABRvQCA2DwA4AG9AAB4OgAA9rwAIFE9APCFvQCAKDwAgLA9AADIPADA4rwA4K69AMDjvABgWz0AgMW8ACA9vQAAGbwAgBi8AIAMvABAqTwAANi6AKAsPQAgNr0AoD09AACGvADQjb0AwDE9AMACPQAAzbsAMKW9AAASPABAIL0AgKS8AMABvQCABbwAgAI8AIArvQCA5DwAYBy9AECIPAAAzrsAAHq9AECIPAAAmDoAgGo8AIAJPQAgSr0AwN+8AKAXPQCAL7wAEJ09AIBmPABgdT0AAIW7AEAGPQAAzzsAgHs8AABEPQAA4LkAAEC5AOBtvQAAkrwAwIY8AMD7PAAgj70A0JQ9AAAivQCAYLwAADw8AAAbvADA9LwAQNO8AICjvABgPb0AwMA8AAC0OgBAwTwAEI29ADCOPQCAbj0AgFk9AADhuwAA+rwA8IO9AIC4PAAAQLoAAEe8AAAevQCAHD0AADy8AKD2PQBwrr0AACi6AIBhvQDAQj0AAP08AACpvQAAojsA8IK9AAB5PABAUT0AAFy8AMDOvADwur0A4Bw9AACFPAAAWTwAgFo9AGASvQAAp70AIBk9AIDnPAAgQr0AAAG9AIDAvQDglr0AkLo9AKAMPQCAW70AAKC5AGBIvQAApDoAIAS9AFCDvQBA07wA8Ku9AACRvADAiLwAoBM9AACIOgCwlL0AQPM8AADtvAAgRT0AAM88AOCmPQAAvLoAMKa9AAAlPQAAcrsAAOO8AIAUPAAAdL0AYDW9AOAMvQAggb0AQIA8AIBSvAAg2b0AQBa9AMC0vAAA/TwAgGG9AABguQAAJrsAwJa8AIDAPAAAVDsAgCu9AMBMvQAAg7wAwAU9ACAoPQBQg70AEJU9AADxvABAiL0AADO9AAAIOwCAcLwAQC49AIAgvAAAIj0AAHq7AABLPQAArLsAAG69ACDIvQAAvLoAAPW8AMCfPABASj0A4EK9AACUOgAACr0AAMA4AAANvAAAM70AwAq9AAD0ugAADD0AsJQ9AACHvADgyT0AIIc9AMDlPAAAmr0AwAy9AJDDvQBAVD0AwAM9AIAoPQAAjrwAIIE9AACougAAIzwAoGw9AADvvAAAZDwAAES8AIAsvQCALLwAAN68AMDtPADAsLwAACg6ACBHvQCACT0AACY7AIA+PACAYb0AIEM9AAACvQDAWj0AACw7AMAmvQDAh7wAAIW7AFC+vQCAyDwAQFu9AIBBvABgYD0AgLg8AADNvAAgDz0A0LQ9AACAOgDQzT0AAKG7AIBfvQBwgr0AADY8AGAovQCALbwAAAg6ACBXPQBAurwAQLS8AOA1PQCQoj0A8Ow9ABDNPQDQiz0AANU8AACivABgeb0AwLW8AACrvABAUT0AAHi6AEBdPQDA2TwAABW8AKA6vQDADT0AcMs9ABgCvgAAy7sAgJi9ADC0vQCAfrwAQOq8AAC0PADgEr0AgIU8AIBBPAAA2rsAAIu8ACBYvQAAKDoAoJA9AACePAAAHDsAgIG8AEC8PACAujwAgIG8AAAJPAAA6TwAACg8AAAivQBA9jwAAPy8AAArPQCge70AAJM7AIBqPACAMj0AAHo7AADBOwCAuzwAgAe8APCdPQCAj7wAgB69AAB2vADgAT0AoIa9AEDKvABg7z0AQBA9AMBfPQAAKL0AgNE9AADtPABw1D0AgAg8AEA3PQBA/bwAEJu9AIC4PADgMT0AAPC5AAAEPQBws70AgIA8AIDNPADAZj0AgNW8ABCGPQBgBr0AAO67AMCgvAAAfrsAABE9ACBSPQBAUz0AoDG9AIAnvAAAwTwAsPo9AIBfvQDAxbwAAOu7ACBwPQAAmLsAABI8AECFPACACbwAAEC5AAC/vQAgJ70AAH68AADaPAAAib0AgNi8AABWuwCgHD0AQC49AIC0vAAAQbwAQHY9AADwuQAgl70AgCs8AACPvACgnz0=","chunkHash":"0478ea663b4222f04351a8f0d213657ec8d8c6ef29951d1c08709596c1e325a9"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\ndef main():\n    \"\"\"Main entry point\"\"\"\n    try:\n        logger.info(\"Starting MorphoFeatures model training\")\n        \n        parser = argparse.ArgumentParser(description='Train MorphoFeatures models')\n        parser.add_argument('--model', type=str, required=True, choices=['shape', 'lowres', 'highres'],\n                            help='Type of model to train: shape, lowres (texture), or highres (texture)')\n        parser.add_argument('--config', type=str, required=True,\n                            help='Path to the configuration file')\n        \n        args = parser.parse_args()\n        logger.info(f\"Parsed arguments: model={args.model}, config={args.config}\")\n        \n        if args.model == 'shape':\n            train_shape_model(args.config)\n        elif args.model == 'lowres':\n            train_texture_model(args.config, model_type='lowres')\n        elif args.model == 'highres':\n            train_texture_model(args.config, model_type='highres')\n        else:\n            logger.error(f\"Unknown model type: {args.model}\")\n            raise ValueError(f\"Unknown model type: {args.model}\")\n    except Exception as e:\n        #...\n```","range":{"startLineNumber":621,"startColumn":0,"endLineNumber":643,"endColumn":0},"embedding":"AABuPQCAPT0AUL89AJDCvQAAX70AACC9AMCUPACAoz0AIB29AEB1PQAAADgAwDC9AIARvAAAfbwAQJ+8AAAWuwCAa7wAcLU9AMCwPACQkj0AcM49AEDEPAAAHb0AAJ87AOBOPQBAirwAAJu8AEAePQBAgDwAgBu9AKBlPQAAjbwAkMy9AIABvAAA1LwA4Ce9AABIvADAujwAQMS8AAAHvAAAxTwAELi9AIAqPADA+zwAACi8ACApvQAAJD0AYBU9AMCaPADA9DwAsIe9AABevAAAijsAgPi8AACIOwAAgzsAAEI8AKBVvQAAhb0AgH28AKCnPQBAY70AANQ8AAClvACAITwAADk9AOBsvQAAxrsAAGG8AMAaPQAAvzwAwHi9AECXvAAABjwAAA28AGAxvQCAF70AoOU9AEBRvQCAF70AgOI8AAB8PADAljwAANY8AABDvQDgB70AgCO8AAAeuwDA07wAgAW+AADAOADAvTwAAEW9AAB5PQAAyD0AgI48AADMPABAsb0AAA49AFCBvQDA5zwAgMw8AECzvACA/DwAgJA8AIBjvQAA4DsAAII7AIBsvAAguz0AoES9AIAZvADgmz0AoCS9AADJPAAADb0AAP07AMDFPABA0DwAAKi7AADCvADAgz0AEKO9AEDZvACAc7wAwA49AAAuuwAAvLoAEIy9AABVPACAkDwAACY7AACjPADAmTwAoFK9AFChvQDA6LwA4FA9AAAavACgjz0AAGg8AABuvADgJ70AAAAAAOAavQBAiTwAQF+9ABCTPQCgDr0AwNY8AIAdvAAAADoAMNc9AADcugBA4zwAoGO9AABSvABgAD0AgGI8AOAMPQAAODwAAFw7AAAovABABT0A4BK9AACqvABw170AADw8AIAkvQDwnr0AAD88AABSPAAAhbsAAGq9AEAVPQAgUr0AoCq9AEB2vQBA4rwAAIG8AMDgvAAALTwAUMO9AKBgPQCANTwAgE48AAAoOgCA1jwAgKa8ACA2PQDAYr0AIHM9AMDLPACAsbwAQCw9AIBlPABgWD0AQJQ8AMALPQDgPT0AAJW7AACoPQAgQz0AoEy9AADwvAAAkb0AwL88AAAGPABwlL0A4EQ9AACLuwBAk7wAIFw9AIBrvACAOr0AQIE8AMANvQAAZrwAICI9AKAvPQAgIz0AoG29ANChPQAAQT0AQLw9AIDqvACAEjwAwDm9AICaPAAA7DoAADu8AIBRvACgPT0AAEc8AIAVPQAwnr0AANo7AJCHvQAQgD0AQEc9AED0vACAdDwAABq9AIA+vAAA3zwAwJo8AOAIvQDgm70AACc9AMA1PQCAFz0AwL48AACaOwBAXb0AABa7AICePACAbrwAQNO8ALCIvQAgZL0AwCc9AMC9PAAgEL0AAMQ8AIDUvAAgJL0AYKa9AMCgvAAgXr0AIJm9AAC2OwAA1LsAwPc8AABqPABgfb0AQK48AIAoPAAANT0AYHM9AABPvQCAJj0AgDW8AODSPQAAz7sAAIK8AIAxPACAHbwAAOm7AMAWvQBArbwAAIs7AMCsPACgIr0AgPy8AACJuwAA2LoAwOU8AGABPQCAYTwA4Eu9AEBBPQAAy7sAAMg7AMAdvQCAFzwAwJ08AADGuwAgFr0AMKA9AIAUvQDA1rwAoKe9AADPPACAv7wAIAs9AEA7vQDATz0AAP48AADXPABAqrwAUKK9AJDAvQAAljsAQIG8AMDAPAAgTT0AAAA6AMCkPAAwzr0AgDy8AEA5PQAgc70AwFu9AAAwPABA6DwAwJE8AIAMvQCQlD0A8LM9AICvPQAABL4AIGe9AICyvQCg0z0AQP+8AHCUPQAAxzwAwMM8AECmvAAAWTwAAIS7AABQvAAA9LoAwIY8AEBUvQCgJL0AAAO8AKAWPQBAgjwAALC6APCTvQCAbDwAAOW8AABjvACAx7wAwLc8AAANvQCAyTwAgIO8AEC4PAAA6zwAgFK8AHCrvQAAaL0AAE+8AEBIvQCAHTwAAAo9AIBmvADA4zwAgHg9AACNuwAAOT0A4E+9AGAHvQAAeb0AgBY8AMAFvQAAT70AoIY9AAB1PQBAWr0AABM9ACA9PQAgGj0AwLI8AKCjPQBgZz0AgDk9AACEOwCgf70AYAm9AACHvADAoDwAgPo8AACvPADA1TwAAN67AIByvQBAbz0AMMI9ALDXvQBALD0AQJa8AOB1vQAAF7wAwP68AICOPAAgDT0AgFU9APCXPQCAX70AwMO8AABFPAAAyb0AQGk9ACBDPQDANL0A4B09AMC5vABABz0AgAe8AABGuwDAJj0AQJI8AFDhvQAAwrsAwOW8AKATPQCAkLwAAIy7AAC3OwCA5DwAYBo9AACVOwDA0bwAUIq9AMBcPQAghr0AQE+9AABmuwAA8LwAAGS7AOAAvQBAYz0AwA49AKDdPQCA8bwA0Po9AMBxPQAwvz0AAEI8AICdvAAAm7sA8O69AACLOwBAnbwAgAQ8AIAIPABgXr0AAAK8AEAuvQCAT7wAAKi6AAAZvQCgdL0AwKi8AMD1PAAAnzsAgIe8AFCUPQDA/jwAIIa9AAAJPADAD70AsKI9ADDBvQDA5bwAQAS9AAAMPADA6LwAQIM8AIC3PACADrwAgOS8AJDZvQCgEb0AQKi8AADbvABAy7wAAKu8AMDpPACgRD0A4BQ9AADDuwAAMr0AgNw8AICgPABA8LwAAKO8AHCKvQCAgDw=","chunkHash":"1d421b1390baa955233d5aa1fa912317e58c7eb477fef2469dbed171fad4c076"},{"text":"File: `train_morphofeatures_models.py`\n```python\n#...\ndef main():\n    \"\"\"Main entry point\"\"\"\n    #...\n        logger.error(f\"Error in main: {str(e)}\")\n        logger.error(traceback.format_exc())\n        raise\n#...\n```","range":{"startLineNumber":643,"startColumn":0,"endLineNumber":645,"endColumn":13},"embedding":"AEAzPQCA5DwA4FY9ABCqvQBgKL0AMJC9AEDHPADQqD0AQFq9AMAyPQAA+LsAwCG9AIBlPACAKL0AwPy8AADmOwAAKrsA4IY9AABqOwBAVD0AEMI9AEDrPACgAL0AAKg7AACbPQAASbwAQCu9AAAQPQAA2LsAwPe8AKBTPQCAdbwAgIq9AICVPAAAH7wA4Ca9AAD3uwAA3LoAAES8AMDDvAAAGTwAIOC9AIDoPABgFz0AQM+8AMAuvQDgFD0AQJU8AOA/PQCATzwAACS9AOBtvQAApTwAQCy9AABkuwDAmzwAAAa8AADkvADQmL0AAOa7AAB6PQCAOb0AAIS6AABBvAAAmjwAAAo9AEBcvQDgJr0AgEG8AACePACADTwAwD69AID0vACAaTwAAJg7ACBgvQBgGL0AUPU9AMC9vABAYL0AQOM8AMCZPAAADjsAQAY9ACAEvQDgNr0AAPO8AAAeuwCA5bwAoOC9AABYuwCAeTwAwEW9AMBxPQCg4D0AoFQ9AMAFPQAQ170AgPg8AKAdvQAAQT0AANc8AADYugCgFj0AIBQ9AEDAvABAdz0AAB+9AIAmvADAsj0AgGC9AADKOwBAAT0AgDe9AABYOgCANLwAIDU9AACqOwCAFjwAAKq7AIBOvADgfj0AsL29AKAavQDA47wAQEU9AADpuwAAr7sAYLK9AEDiPAAA/LoAALM7AMDdPACA0DwAIC+9AJCUvQBApbwAoIk9AAAmPADQrj0AQMc8AIDFvABgaL0AAOI7AEC5vACAQTwAkJq9ADDCPQCA2LwAwII8ACAiPQAAzTsA0KY9AIDFPAAA4LoAYA29AADoOgDgDj0AwMc8AMDzPACARLwAAK87AMCWvACgMz0AwAy9ACAuvQAgoL0AAMe7AIDivACg0L0AwKI8AIBZPAAAsDsAsIK9AMACPQDAUL0AwEi9ACB6vQCARr0AAMg7AACEvAAADDwAsJq9ACAjPQCACz0AAEM8AMC0PACABrwAQMS8AMAOPQCgHb0AYJw9AACxPACAIrwAgGg9AICLPADgTT0AAGi6AMA6PQBAfT0AwPe8AICgPQAAsLkA4H69AMC8vADAh70AAGg6AEClPABgpL0AACU9AADcuwCAPLwA4Cc9AAAoOgBAwbwAgAY8AADIugAAzzwAoB49ACBOPQBAVz0AQPy8AIDRPQAASTwAUMI9AAAivQCASDwAgC29AADpuwAAjTsAgE48AACXvACAHD0AAPS6AID5PACgf70AAJS6AOBTvQBgez0AgOA8AAAxvQBAwjwAYHK9AACuOwAAjjwAQMo8AABcvACgI70AAHk8AHCSPQDALz0AAHo8AMDqPACgXr0AwJo8AMDePAAAhDsAoD+9AIAPvQAgNr0AYDs9AECsvAAwgb0AgMc8AADEvACgB70AoIi9AMCYPADgM70AMJq9AIDyPADAx7wAgDY9AAAFPABwpr0AAD48AIDSPADAUz0AEIE9AMAOvQAAFT0AgEI8AFDYPQCgCL0AgPi8AIA1PAAAhLsAgAE8ACBKvQBA2bwAABY8AOAuPQDACb0AgMi8AIAivABAtbwAcJQ9AADMugAAYLoAwJe8AJCQPQBAr7wAQO+8AECtvAAAMb0AIBw9AEACvQAAPL0AAJ09AIDyvABAJr0AALm9AMADPQCAaLwAQLA8AABevQDgaD0AYEQ9AKAMPQDAibwAQEq9ABCxvQAAXTwAQCa9AICOPABwvj0AAD68AADtPAAAo70AAD28AOBTPQAgSb0AQFW9AAAiPAAAUz0AAA88ACADvQBwrj0AMJY9AKDnPQBw9r0AoE+9AGCcvQBQmT0AwPG8ACBhPQCgCz0AgJM8AIA9vAAASrwAAN+8AEAevQAAzDoAwNI8AOBGvQDgQ70AAJs7AIA2PACAnjwAAE67AMCfvQAAUTwAwI28AAAYvQAA/rsAwAw9AOAEvQCAnbwAgCO9AOBhPQAA8zwAoBi9AGCGvQBwkb0AABk8AABfvQCABTwAoCs9AABSvAAA/jwAwFQ9AIBWvAAAFj0AQEy9AEAkvQCALr0AQOI8AAADvACgJb0A4Fw9AOCGPQDADb0A4Do9AOAvPQDA2TwAACS8APDHPQBgSj0A4DY9AAAwPAAAWL0AIGy9AACaPAAAZTwAIDE9AKAQPQDAvjwAAKE7AGBqvQDAhD0AQG89AHCxvQBA+jwAwKS8AMCOvQCgLb0AgCi9AACjOwBAizwAoHQ9AGB7PQAAOL0AgMK8ACBMPQDwkr0AwGg9AABfPQCAMr0AoDs9AACpvABgET0AoD29AADYOgAAiTwAwCU9ANCmvQAA/jsAAJy7AAAUPQAACTwAAOC8AACEOgAgWT0AALo8AIBSvABgNL0AoHC9ACAWPQAAWr0AgDG9AABQPQCgS70AwKW8AABZvQBgTT0AAIC5AKDnPQBgRr0AgLo9AFCRPQBwrj0AgJ08AOBGvQDAxjwAILy9AICavAAAGbwAAO27AMCwPAAAZr0AAOC5AMB3vQAAi7sAAAE8AIBbvADgCr0AAJi7AEBHPQCAurwAgOO8AFCCPQAgiT0AQEO9AIAPvABA47wAoMw9ALCRvQAA+rwAQLG8AAApPACgJL0AALA8AEAoPQCADrwAgHq9AIDTvQDAJ70AAHy7AIADvADAkbwAADy7AIBkPQCgND0AwNI8AADguwCgTb0AIE89AABiPAAAELwAYDO9ANCRvQAA5Ts=","chunkHash":"294d3db22dfd19e61b861debeb88976b406927268e96a928634e65ddbda1b2e0"}]},"file:///teamspace/studios/this_studio/train_texture_with_morphofeatures.py":{"hash":"98d2adb45c14f1b83fa6bbd1dc67ba24d86fff4a06577bfff83b31d879b561e4","entries":[{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\nclass CustomTextureLoader:\n    #...\n    def __init__(self, configuration_file, texture_type='coarse'):\n        \"\"\"\n        Initialize the loader with a configuration file.\n        \n        Args:\n            configuration_file (str): Path to the configuration file\n            texture_type (str): Either 'coarse' for lowres or 'fine' for highres\n        \"\"\"\n        with open(configuration_file, 'r') as f:\n            self.config = yaml.safe_load(f)\n        \n        self.texture_type = texture_type\n        print(f\"Initializing texture loader for {texture_type} texture analysis\")\n        \n        # Determine which loader to use based on texture type\n        if texture_type == 'coarse':\n            self.loader_func = get_lowres_contrastive_loaders\n            self.target_size = (64, 64)\n        else:  # 'fine'\n            self.loader_func = get_highres_contrastive_loaders\n            self.target_size = (224, 224)\n    #...\n```","range":{"startLineNumber":30,"startColumn":4,"endLineNumber":50,"endColumn":41},"embedding":"AHCWPQCgMj0AwCs9AHC0vQAgHb0A8Iu9AFCKPQCgDL0AQLC8AABKPABQkL0AADA7AMDbPABAobwAAJA7AADduwAA8LsAAF08AADQuQAALLsA8K49AAAkvQCger0AAKK7AEClPQAwqL0AoG89AHCoPQDA7LwAACC9AIChPACA2LwAgCO9AKApvQAAUb0AgDa9ACA0PQDQuz0AwPs8AFCKvQAAC7wAoNC9AAC+uwCAWD0AADs9AOB9vQCAhrwAkP89AEBpvQAAhDsAgES9AADHvACAy7wAYDm9AIDLvADAsrwAwJ88AIDFvAAwsb0AwLA8AABRvAAAVLsAgMw8AIBrvAAAmDwAAFY7AICzvAAAu7wAADa8AAB5PQAAhDwAUIW9AIAtvQAgj70AgPA8AMADvQAgj70A8N89ACB2vQAALbwAAM87AEC8PAAAHr0AwPO8AIDivAAAN70AgFI8AAB/vABgOD0AgGm9AMANPQBA8DwAIAG9AIBwPQBgAD0AYDe9AECJPAAAiL0AwA09AAD9uwAAkrwAsIQ9AACeOwAARjwAMIQ9ADCEvQCAOr0AAA28AMDfPADAOT0AQMC8AADEuwCg5D0AANI7AIDyPABAUL0AgEi9AIBAPQAAUr0AAO68AAALvQAA0LkAACa8AABUvQAAeLoAIIG9AABCvAAATzwAQNm9AMAvvQBgAT0AQLk8AGAmPQAgdb0AIBm9APC2vQAA87wAgK+8ACBAPQBASz0AYCe9AGAtvQCAgDwAAFg7AMALvQDgZT0AANy8AACeOwAAIrwAgEA8AABtvQAAPTwAwJg9AMBGvQBgMT0AQKu9AMCevQDApjwAAIQ8AMCBvABA4rwAwBa9AMD4PAAAYTwAAG48AICWPACAFb0AALU7ADCQvQBAcb0A4H09AIB2vAAgDb0AwHC9AIBjPAAAz7wAgKG8ACA8vQAAkLkAoDW9AICyPAAAprsAgJy8AIAoPADAobwAwNm8AADWOwBAqzwAYFE9AACpPADAn70AAFk8AAA6uwAAU7wAoJk9AADwugBAmj0AgC68AMA8PQAADjwA0IO9AEAZPQCAHjwAYEI9AEANvQBgFb0AgIc8AOAEPQCgT70AAKo8AEAjvQBA37wAgFY8AED+PADAMb0AAEg7AMCUPACAiLwAwLe8AACUPACAjD0AAEm8AABaPQAA4jsAAG08AIAivABgFr0AkK+9AACTOwAA+DoAACc8AEDWvACAdTwAgKy8ALCDPQCAD70AQMK8AGABvQDgVD0AQFE9AAB2vQAA8TsAkJy9AADDvADA0DwAgHa8AJCJvQBAPb0AQJA8AIA0vADAPz0AQEk9AECRvAAAmr0AgB+8ACAMPQAAVrwAQL68AACyvQBAjr0AIHY9AIBoPAAAFr0AgMY8AEDqPADAuLwA4Du9AIBtvAAA8DkAQMM8AIDoPADAb70AAIC6AIBGvADA87wAQMo8AABXvAAA4LkAwLE8AMDePQCgB70AwFi9AAB5PQBA5jwAkIS9AIB0vABQ9L0AgKW8ACATvQCAaL0AACq8APCDvQAAmrsAICe9AOAQvQDAWT0AoGq9ACACPQAA/bsAgIW8AMCIPACA67wAwJk8AAAXvACATDwAAEA9AIAKPACgXL0AkKQ9AACBPABAXb0AgGi9AACouwAAjzwAQJE8AABouwBgfz0AIA89AMANPQCAK7wA4Gq9AMAOvQDglD0AAFi8AIBYPACgXD0AgJS8AIAxvACAW70AgIG8AABxvABQmL0AQNY8AICsvAAAA70AgHM9AEDkPABgZz0AUKM9AMCAPABQ570AQPO8AAAnvQBgEj0AYCI9AIB5PQAA8LwA8KI9AAAAuQCAKzwAQMI8AKAqvQAAozsAgLk8APCVvQBAEr0AAAA4AABrvACADb0AACg6AGBtvQBA8DwAAAg7AIBMPACAsb0AQJg8AAB5PAAQnD0AAJs8AMCsvACAS70AQBE9AADVvACAVbwAoEe9AMANvQCgfT0AYA49AAAwvADAOj0AIK09AIBwPABQzj0AAEA7AACIOwDgIb0AwMA8AADKuwCAV7wAAGg7AEAePQBgUb0A4B29ALCoPQAggD0A0LA9AOADPQAAIj0AkKo9AIBXvAAA+rwAAJQ8AGBJPQAA+LoAAIg7AICOPQCA+TwAQNO8AIBTvADggT0A0Io9AGDSvQAAwLsA8KK9APC6vQBAnbwAgJ28AICJvAAgPL0AcKk9AACMPAAANjwAwIW8AOB8vQAAWT0AcIs9AIBIPABAC70AAH47AADIOgCAHDwAAFu8AGBEPQBgMT0AAEw7AOArvQBgGL0AAIg6AKCHPQBgOb0AwBa9AGAbPQAgET0AQJe8AACJOwAgJj0AgJ68AMA6PQBAq70AwK28AKAIvQCgCj0AgDK8AAAYugAg5T0AYAs9ADCFvQDgH70AoKA9AMCxvAAQgz0AAEI7AMC/PABwhL0AYDK9AIBBPQDA8jwAQNO8AICwPABg2L0AwMK8AEDTPABAEj0AABS9AECiPACAybwAgAK9AKAKvQCARLwAIAM9ACA/PQAA/DwAADg7AOBBvQCAxzwAuAM+ACCOvQDAiLwAQL48AICFPAAArrwAAPY7AMCePQCAAbwA8JC9ABDUvQBAnLwAACa8AICtvABAqbwAAIC6AOCMvQBAED0AwLM8AAC2OwAALrwAADg8AAAqvAAAdr0AABE8AIDrvACICz4=","chunkHash":"55ec3193e1aa103e6f0ff4244a7c55e8c6af1500dc27d396e51408aaf2b22d23"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\nclass CustomTextureLoader:\n    #...\n    def get_train_loaders(self):\n        \"\"\"\n        Get train and validation dataloaders.\n        \n        Returns:\n            tuple: (train_loader, val_loader)\n        \"\"\"\n        data_config = self.config['data_config']\n        \n        loaders = self.loader_func(\n            root_dir=data_config['root_dir'],\n            batch_size=self.config['loader_config'].get('batch_size', 8),\n            shuffle=self.config['loader_config'].get('shuffle', True),\n            num_workers=self.config['loader_config'].get('num_workers', 4),\n            class_csv_path=data_config.get('class_csv_path'),\n            target_size=self.target_size,\n            z_window_size=5,  # Default, adjust based on your data\n            pin_memory=self.config['loader_config'].get('pin_memory', True),\n            debug=True  # Set to False for production\n        )\n        \n        train_loader = loaders['train'] \n        val_loader = loaders['val']\n        \n        return train_loader, val_loader\n    #...\n```","range":{"startLineNumber":52,"startColumn":4,"endLineNumber":76,"endColumn":39},"embedding":"AMBWPQAgMD0AQG89AHCtvQCgVr0AQJi8AACxPACAXDwAoDm9AOBOvQBgEL0AAHs8AADXPAAAgr0AAP68AIAivADgmT0AQMs8AOCLvQDAYj0AEI49AIBJPAAA+TsAoFy9ABCrPQDAmb0AgIO8AIBOPQAAmTwAQLW8AMC6vADA+rwAwFa9AECEPAAAQLkA4BC9AADHPACQzD0AAMA6AEDZvADASj0A4Cm9AICQvAAAkj0AwAY9ALCIvQCA07wAcIs9AABYuwAAGbwAAEm8AIDDPAAgRr0AYB+9AACwugDA4TwAwKy8AGBDvQCAw7wAoD69AIBcvABAq7wAQO48AAAguwDwjT0A4A29AEAdvQDAJb0AwA+9AAA0PQAA+TwAwEG9AIAmPQAANrwAoCU9AAA0vQAAI7wAoNY9AEBUvQCAvbwAgFo8AEBWPQBgFb0AQO+8AECMvQDwpb0AgEE8AAClOwAgfT0AIEy9AMCjPACAejwAgCm9AGDrPQAAhDwAwLU8AIA4PACge70AgL48AAC1vADA5bwAAPO7AACdOwAAfTwAgDQ9AGBuvQAApTwAAPO7AADMuwAgIz0AsOK9ALCKvQBwnT0AQKs8AKBDPQBgZL0AgAG9AID7vAAAt7wAAHK8AGAkvQAAqbsAgAi8ANCKvQCAojwAQJE8AOACvQAwmL0AIJm9AABkvQBgDT0AANi8AIAxPQBAT70A4HC9AKAAvgAAL7wAQJO8AICFPACguz0AYHW9AABYugBAAr0AwOE8AIAKvQAAnTsAAPQ8AAA2OwAARrsAwLk8AEB8vQAAqLwAgCY9AEAGvQBA0LwAIIy9AMDFvACgRD0AwLA8AIAOvACAHbwAoCm9AACDOwAAPD0AAFC6AOAzPQAgDL0AgLy8AADJvABwr70AwKs9AAC1uwAgI70A4Fu9AAAUuwAgRb0AAKO7AABavADAi7wAgKO9AIC1vAAA0DsAgAK8AAAUvQCAsrwAACC9AACZPACAcTwAAC67AOBrPQCACLwAQPs8AEAZPQBA8zwAAAC8AECTvADgcj0AAPo8AJCKPQDgOL0AwBW9AJCoPQCwkD0AgEw8AACiuwBACb0AgLI8AADOvACgG70AAGS7AACjPAAAJDwAAKa7AECHPQAA9bsAwAY9AMCKvAAgET0AAI27AIANvADAbj0AAAk9AAAaPQAgJT0AwOk8AAD6OwDA37wAQKm9AACcOgAACrsAADQ8AKAEvQCAiTwAAAo7AODDPQBAzL0AQBm9AEDbvABA4TwAgOg8AICsvADA7TwAgG29AMAPvQCAKTwAAMC8AKB7vQBAk7wAAIo8AACSOwDgbz0AAIG7AIDEvABQwr0AwIq8AIAePAAA6rsAgGG9ALCVvQAgNL0AcIA9AOBhPQDwhb0AoKM9AIDuPAAgFb0AAOA6AIC5vQBAn7wAAD47AIBPvABAFL0AQFQ9AMCYvABQwL0AAK87AMDGPAAAGTwAQPg8AICuPAAAGbwAANG7AIAyPACAWjwA4AO9AEDuvAAA1rsAAIC4AEBkvQCALTwAQL+8AACKvQAA3bwAwEu9AMCyvAAAND0AwN28AAB3PQCAGjwA4HK9AIALvQBgOb0AQBc9AABeuwAA1bsAANO7AADvOwCAdzwAgAo8AGAkvQAAcL0AgAu9AMDlvACALz0AAFa8AECsvAAAWz0AAPM7ACC2PQCAQL0AgAu9AABevADAgz0AwL08AMCtvADgDj0AcJW9AGAFvQDwxL0AgFc8AOANPQAgjL0AAFC7AAAJvADgJL0AQE09AACKvABgFz0AwPo8AMCUPABwkr0AwKS8AEAqvQAAQb0AwJ49AAACOwAAErwAoLk9AEDEvAAAcrsAgDM8AIDwvAAAmrwAABA8AMCzvQBAkrwAAPm7AADoPADAwjwAAK67AICNvAAAcjwAgKw8AIBivABAH70AAFI8AABtvABQxT0AwCw9AFCSvQCAwjwAAEC8ACAzvQAAKLoAAIG8ACBFvQCgJj0A8I09AAAuPAAAvz0AINY9AMDwPABg0z0AADC8AIBaPACAX7wAABM8AGBAvQAA1rsAQLY8AAAMPQBAWL0AAIe8AMDRPAAgAT0AgLw9AECfPQDADz0AAKc8AGAwPQCAPr0AAKg8AMAOvQAAjDoAYCs9AJDCPQAAFLwAgFW8ACBcPQCAfT0AsMQ9AGBPvQAA4rsAEOe9AMDmvAAA67sAAKQ6AFCNPQBgIL0AIKE9AAA2PADAGj0AgGe8ACBtvQAARjwAcLo9ADCIPQCAIzwAgPW8AADOvACAD70AgAs9AEDNPAAgBT0AoAo9AIBuvQBAWD0AQJ68AMBxPQAQsr0AwK08AAA4OgAA77sAAAY7AIC9PACgJz0AAFa7AMCZPQCAF7wAwBq9AMCkPACwgj0A4Eu9AACmvAAAFD0AgNy8AED5vADAsbwA0KU9AADwuwCgyD0AAMw6AKAavQAQg70AAJi6AAD0ugDgWT0AIGi9AGDBPQBAib0AgNo8AECLPACAf7wAAJM8AMC6PADAWL0AIFe9AADFvAAgEb0AgDO8AEBxPQAAELoAUOC9ANCYvQDA3zwAYBE+AACNvABA87wAQL48AABAuwCA7bwAIBo9AEA2PQAAObwAEI69AIB5vQAgcL0AgDw8AEDZvAAAErwAgDM8AICrvQBAhzwAwFQ9AADvPAAgsb0AAFK9AIA/PABA37wAgOY8AABavAAgzD0=","chunkHash":"8f404fa7fee6b39c7d44d1405380ffe432af9e58ac8aaf108e3a44efd0863109"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\nclass CustomTextureLoader:\n    #...\n    def get_predict_loaders(self):\n        \"\"\"\n        Get a dataloader for prediction.\n        \n        Returns:\n            DataLoader: Prediction dataloader\n        \"\"\"\n        data_config = self.config['data_config']\n        \n        # Create a single dataset for prediction (no contrastive pairs)\n        if self.texture_type == 'coarse':\n            from dataloader.lowres_image_dataloader import get_lowres_image_dataloader\n            \n            pred_loader = get_lowres_image_dataloader(\n                root_dir=data_config['root_dir'],\n                batch_size=self.config['pred_loader_config'].get('batch_size', 1),\n                shuffle=False,\n                num_workers=self.config['pred_loader_config'].get('num_workers', 0),\n                class_csv_path=data_config.get('class_csv_path'),\n                target_size=self.target_size,\n                pin_memory=self.config['pred_loader_config'].get('pin_memory', False)\n            )\n        else:\n            from dataloader.highres_image_dataloader import get_highres_image_dataloader\n            \n            pred_loader = get_highres_image_dataloader(\n                #...\n```","range":{"startLineNumber":79,"startColumn":0,"endLineNumber":104,"endColumn":0},"embedding":"ANDZPQAArDoAAJo8AGARvQDgEb0AABi8AOBCPQAAfDsAYIm9AJCDvQDgqr0AQLG8AMADPQDwq70AABK8AAAIvAAAPj0AgL48AGC0vQDA+TwAQII8AMCQvAAAFjsAELK9AACUPQCQl70AAFM8ABC2PQBAiLwAgOq8AADhvABA7bwAIEe9AEDnvAAAMrsAAJa9AACUOwAA+T0AIDq9AADeuwBAuTwAsM+9AACzOwDADj0AAHs8ACAJvQCApjwAwKM8AAC4OwDASz0AwHS9AIAFvABQkr0AAGC6AACguwAAPTwAAIS8AEDmvAAA37sAAHm8AIBavACAsLwAwA49AIDcvADAfD0AQPi8AAAKvQAAYzwAQPO8AIC2PACAjzwAYI+9AID3PACANL0AQJG8AOBOvQAAmjsA8LE9ACBpvQCA6LwAQLY8ACCJPQDA7bwAQCi9AABCvQAQtr0AoCE9AADCvADAxjwAQF+9AIDEPADA1DwAwCm9AFCfPQDABD0AAKo8AAAAOQAgmr0AAHw9AIBIPACAq7wAAB47AACBPACACb0AwCA9AACtvQAAML0AQLW8AAAguQBQuT0AkJ69AAArvQDAyzwAQBM9AMBPPQAgjb0AoAo9AADBuwAAPrsAwCs9AOAtvQAAKzwAwIe8AMCmvACA7TwAACA6AAChvAAgbr0AIEa9AMBjvQAAHLsAgLu8AIC7PAAgeL0AoHC9AHDfvQAAELsAAKS7AADAPABwrD0AUIC9AAD+vACAdLwAwGI9AHCbvQDA3TwAAKg7AABCuwCAQbwAYCg9AICNvQAANDwAADQ8AID/vADgOz0AgFO9AOBAvQAApzsAAC29AMDVvAAAKDoAYBu9AGAePQBAjT0A4B09AABhPQCQq70AQLo8AAASvQDALr0A0Kg9AOBdPQAAGrwAID29AABQOgBAJL0AgAW9AMD2vACAITwAsMW9AECuvADgBj0AAKQ6AMCEvAAAXjsAQCK9AIBqvABA3DwAgAA8AABXPACAWLwAwPk8AECxPABAwDwAAHK8AAChuwDAjD0AIBE9AOA6PQBAyrwAACu9ABDQPQDgAT0AAHy7AADruwCAaTwAADe8AACYugCgPL0AAEo8AACEOwBAMr0AwMk8AGBPPQAgYr0AADi6AMBQvQCgLT0AAIc7AIBhPACALT0AgAQ8AEDuPAAQgT0AwLy8AIDcvAAAODsA4E69AKBIvQDA7TwAQJ68AIBmvQCgAj0AIDK9AOBpPQCgb70AAP27AOAQvQAgHj0AABo7AAAevACgDT0AgMy8AAB4uwAAqzsAAFa8AEBjvQBgCr0AwBE9AICKPACwkT0AQIK8AACIvAAQq70AwJW8AIBevAAA67wAgAu8AOBgvQAAJr0AwC09AAApPQAgTr0AcIc9AOA3PQDAXr0AgBe8AEB/vQAAQjsAgGQ8AABGPACAQL0AwAU9AIBMvAAgsL0AAK48AAB+vAAAR7wAgHI8ACA4PQDA4rwAgKm8AMDrPAAArDwAQM+8AAAEOwAwi70AAPG7AIC+vQAApDwAQIO8AFDZvQCAPL0AYBa9AMCRPACAID0AIAa9AMAuPQAAfDsA4Du9AEC6vABgpr0AAGc9AADmvAAAwrsAALu7AICsPAAAyDwAwIY8AKArvQCwuL0AgIe8AEAQvQDADT0AwJC8AADLuwDgcD0AQPa8AGCWPQDgKL0A8LW9AACUuwDgTT0AgMU8AKArvQDgNj0AANW8AAA4uwBgp70AAJ27AIAcPQDA2rwAgNU8AIBVvABQnr0AAKI7AEDJPADAGT0AQLY8AKBOPQDArL0AgBc8AAASvQAAU70AQCA9AABMPAAAszsAYKo9AAD2uwAA9jsAgIM8AIAwvABgBD0AANQ6AIB0vQDAjTwAwMW8AADQOwCARDwAwLG8AGADvQDApjwAQL08AIAJvABQjr0AwAQ9AADXvACAmT0AKAA+ACB7vQBAm7wAAN47ADCAvQCARL0AAJg6AGBfvQCAIT0A8L49AACXvACA2z0AgJ09AKA3PQAwmD0AALO7AMC3PAAAfjsAYBu9AOA7vQDgDL0AAPu7AIBbPQDgXb0AAIu8AIAxPQAAa7wAgOE9AGAhPQAAIrsAwL48AECNPQAgk70AAGK7AACPuwBAmbwAQNs8ADCRPQAAK7wAAJi8APDMPQAAvTwAIM49ALDMvQCAKDwAcK+9AECGvABA4DwAwBM9AADfOwBAWL0AwMA9AADEugCASDwAYCW9AIAPvQAA/jsAoIU9ACCNPQCAFLwAAKG8AEAgvQDgAL0A4A89AKA3PQDADT0AAEK7AOA+vQBArTwAAJ+7AMAUPQAgYr0AoDY9AAAEOwCA4LwAAO27AAAePQCAALwAQKy8AADsPADgVr0AoFW9AIArvAAAbj0AQN68AIB8PAAgHD0AQDq9AABDvQAAB7wAQIY9AIAtvABAvj0AAC67AMBNvQCw1b0AwDq9AAChuwBwoj0A4C69ACAuPQCwlL0AQEw9AID9PAAAajsAgK48AIDKPADAgrwAAPM7AECBvAAgW70AQJo8AOBoPQCArjwAYKq9ABCbvQAAU7wAEN09AAC2OwCgJr0AADw9AIDAvABAm7wAgCc8ABCSPQAAOrwAQJC9AKCSvQAACb0AgI88AACzvABAHz0AAJs7AICJvQBgDL0AYFc9AICnPADA9LwAIAW9AAAsPAAApLwAgIu8AAC9vAB4CD4=","chunkHash":"2f22f26dc70fa65caf6089d68624290dbcf6997c277d3637f3ad4343f2bb8e95"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\nclass CustomTextureLoader:\n    #...\n    def get_predict_loaders(self):\n        #...\n                root_dir=data_config['root_dir'],\n                batch_size=self.config['pred_loader_config'].get('batch_size', 1),\n                shuffle=False,\n                num_workers=self.config['pred_loader_config'].get('num_workers', 0),\n                class_csv_path=data_config.get('class_csv_path'),\n                target_size=self.target_size,\n                pin_memory=self.config['pred_loader_config'].get('pin_memory', False)\n            )\n        \n        return pred_loader\n#...\n```","range":{"startLineNumber":104,"startColumn":0,"endLineNumber":113,"endColumn":26},"embedding":"AGCaPQCApjwAoGI9AMABvQCgQr0A4DK9AKBaPQCAdzwAwJ29AGAjvQBAQr0AAGo7ACACPQCggr0AQPO8AIAAPABgbz0AAKA6AMBYvQBA0TwA4E49AIBdvAAAAAAAQK+9AOAsPQAggb0AAKO7AMAXPQAgHj0AgIm8AKAdvQCgHb0AYF29AKAdvQDAtbwAAEW9AABgugBQ3z0AAFa8AAChvABgPD0A4Ku9AABzvABAkj0AAAK8ACBZvQBAsrwAgEs9AMANPQCggz0AQLe8AIBbPADQhr0AAJE7AMAEvQCAJrwAAHu8AACvvABAOL0AADK8AABWPABA+bwAAOg8AMB+vQAAbj0AAMK8AIA3vQCA37wAADq9AMD6PADAlrwAwKW9AECovADAC70AgFs8AKBbvQCgD70AgO89AMBPvQAAIb0AAHQ8AMBMPQAA0bwAYD+9AGA0vQDwpr0AgB+8AECrvAAA3jsAgCO9AEDWPABABD0A4Eu9AKCMPQAAmDsAABA9AMAIPQBAv70AoFA9AICovAAAuTsAANg7AAAivAAACrwAoAM9APCIvQCAd7wA4BK9AACIPADgzj0AYH29AEBevQDgYz0AgBk9ABCdPQAQjb0AAFM8AACeOwCALLwAAKU8AMBhvQBA0zwAwPm8AMBAvQBA8jwAALK7AAAlPADgm70AoHq9ALCevQCApLwAgEu8ACBVPQCAJL0AYAy9AHAPvgAAIDsAAHI9AEAnPQDAez0AACS9AEC2vABgDb0AoFE9AICUvQDAjjwAwO+8AIB3PAAAvLoAAA09ACCCvQAAijsAgFI8AAAnPADA97wAQCq9AOAHvQCgQT0AwBW9AEABvQAAz7sAICa9AEAFPQDgfD0AQBs9ACBePQDAl7wAgEo8AGBYvQAglr0A8KI9AIDvvACAvLwAAFm9AACwuwAA/bwAAC68AMD1vACAOrwAwFy9AIDEvADgPj0AAK87AAANPAAAdDwAYGO9AAC1OwAAuDwAAKs7AKAfPQCAOrwAANC5AEBHPQAAbTwAwIE9AADWvAAQnT0AgPo8AICWPACA8LwAAGq9APDgPQAA4DwAYDc9AIB0vACAmbwAwJA8AAAXvACgd70AwCU9AIAuPAAACbwAQOI8AMABPQDAo7wAwLS8AADYvAAgSj0AALa7AACFOwBAdj0AADA6AABBPQAAQD0AgHO8AECDvACAVrwAELC9AEDLvAAA1jwAAIO7AEAEvQCACj0AgJ28AMCVPQBQk70AoBC9ACAxvQBA/jwAwJ48AIAwvQAALT0AgO+8AMAdvQAAijwAAFC8AEAavQCAO70AQPE8AADjOwDgcz0AAMA6AEAMvQAwvL0AAJi6AIBfvACAIb0AAI68ADCPvQCgFL0AsKw9AABOPQDgf70AgGQ9AAAyPQCgH70AANq7AABCvQCA0DwAoAW9AMCWPAAArbwAAFA9AAAYvQDAxL0AYAo9AIAOvABAkzwAAAg9AEBjPQAAubwAwPO8AMDUPAAATrwAgD29AAByOwAgRL0AAKm8AIBsvQDAw7wAgMm8ACCIvQCATb0AQAu9AECdvADApzwAgC69AADTPABAl7wAgCG9AECNvACQjb0AwDU9AMC0vACADLwAAAQ8AMDYvAAAl7wA4Ds9AAB0vQBAlr0AgGO9AABivADgDD0AAPE7AAA+PADwgT0AAHK8ABCZPQAAKb0AIE29AIBTvQDgSj0AgBi8AAC8uwCALj0AgCm9AADOuwAgJr0AwN48AEAjPQDgUb0A4BE9AIA2vABArLwA4BE9AEDVPABAbT0AQLw8AIDwPABAEr4AAIq7AICGvABAE70AgEw9AEC1PACAbLwAAME9AABNvAAA97sAAIA8AADjuwAAGbwAQKA8ACB3vQCgKr0AIA+9AIAQvAAA/TsAgDS8AMD7vADAST0AAJk8AAD8ugDgKr0AALg8AEDbvADQtT0AwMQ9AOAkvQAA27wAQJk8AECOvQAgIr0AwOq8AGBdvQAgSj0AkLA9AICNvAAgvT0AAMs9AABAuwCwiz0AgCa8AECcvACgEb0AgFc8AIC2vADAlrwAACg6ABCEPQBAL70AgOq8AMBoPQAAxzwA4Nc9AOBnPQBA7zwAwCo9AMBxPQDAg70AAP87AADVuwAAmrsAwM08APDBPQAgBj0AAB67AGAoPQBQnT0AQKc9AJCuvQCAwzwAgJu9AAAGvQAAiLsAAPW8AIB6vAAAb70AcKw9AIDyPABAkzwAYEm9AEA7vQCALDwAAC89ACBlPQAAgLsAgAO9AACVvABAo7wAAMQ7AMA/PQDAIT0AgH48ACCMvQAASjsAQJC8AGCDPQBQhr0AALu7AMCEPAAAYDkAAHu8AADaOwAAALkAAPC7AIAUPQCAdrwAAJi9AIA7vABAvzwAoGa9AAA8vABgsz0AgLS8AIDevAAAe7wAYJQ9AADuOwDw6D0AgO88AIAwvQBAvb0AQHi9AABGOwDgTz0AADu9AJCIPQAwh70AYDk9AEAQPQAAiTsAALO7AIC2PADA27wAoC29AABuuwCAZb0AwPI8AGB7PQBgVD0AAJK9AEBOvQAA6rsAuDQ+AACuOwBAdb0AQOQ8AADpOwAAmLsAgBE8AMCFPQAAVbwAwEi9AECBvQAwgb0AAOU7AIBNPAAAZDwAAJc8AEBevQAA7bsAgPA8AIBKPADAB70AgNO8AACOOwBAwrwAANc7AIB5PAAQmT0=","chunkHash":"2af1368149437f9e5d02feb0291a8f69b7e851b3fad1560ced5c4565feb74b8c"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\nclass CustomTextureLoader:\n    \"\"\"\n    A custom loader class that adapts our dataloaders to work with MorphoFeatures texture training.\n    This mimics the CellLoaders class from MorphoFeatures.\n    \"\"\"\n    def __init__(self, configuration_file, texture_type='coarse'):\n        #...\n    def get_train_loaders(self):\n        #...\n    def get_predict_loaders(self):\n        #...\n```","range":{"startLineNumber":26,"startColumn":0,"endLineNumber":78,"endColumn":34},"embedding":"AJCuPQCwgz0AwGA9ACBzvQBgCr0AMJW9AEBQPQAAbjsAQPe8AAAGOwAADL0AYCy9AEDmPACAvrwAgNy8AAA4OgAwgz0AALA7AAAavQCgQD0AYJI9AADDOwCAj7wAACO9AMDdPACguL0AAJY7AICrPQDAt7wAgL+8AMDQPABA5LwAQOS8AAAeuwAA/bsAYE+9AABMPADIBj4AAIk7ACAjvQBgGj0AsK29AAAAAABghD0AAMy7AKAJvQAAozsAcLQ9AECzvADAJj0AgK+8AAAPPADAHr0AgEK9AMC6vAAAAj0AwLS8AACcvAAwgb0AQMW8AEAEvQBA3LwAwCI9AEBZvQAAKT0AALQ8AEClvQCANr0AwPa8AACLPQBAjTwAoGe9AAC8vAAAGr0AANS7ABCuvQCA27wAMO49ACA0vQAgAr0AgHE8AABiPQCAQL0AgP28AADivADAbb0AAAw7AAAYuwAAjTwA8Ju9AOAAPQAAbTwAUIO9AGBFPQDAlLwAgKA8AIAqPAAAmr0AwGg9AAAwvABA5TwA4Bo9AMDvvAAATjwA0I09AHCQvQBgDL0AAKi8AAAaPABwlD0A4He9ACA8vQAg0D0AgAI9AOAXPQDAmL0AgH+8AKAmPQAATbwAAPk7AMApvQAAnzwAgLe8AIBuvQDA7zwAgNe8AIArPADAybwAMLy9AEByvQCAV7wAAIC8AED5PACArrwA4FC9ANgAvgCgT70AgLU8AOADPQCQiD0AwJO8AAC0vAAAHTwAgBk9AKAJvQCgMD0AgKu8AICePAAAtLsAAEY8ABCpvQAAuDoAALc8AABsOwDAxrwA4A+9AACnvACgTz0AAHG8AMCKvAAAsDkAAFu8AACtuwAAMj0AwNc8AECYPAAArrwAAHK7AKBavQAwlL0A8JM9AIAavAAAJr0AwNO8AECxvABAVb0AwMs8AMBKvQBgDb0AwFK9AACquwAAQrsAQI28AECqPABga70AgJe9AMAIvQDAOD0AoFQ9AIAXPQBA5LwAgOM8AIBMPAAAk7sAABC6AABAOwAAdj0AALS7AAAkPQCAvLwA4CW9AOB4PQBAZz0AAOM7AAAnPACgOL0AAPA7AEDJPABAer0AgLw8AMCFvAAA4TwAQJE8AJCHPQBAx7wAgEm8AICivACAbzwAgEG8AEDKPADASj0AAII7AKBEPQAAyDsAwLe8AKAHvQBAc70A4MO9AOA6vQAAGrsAwJs8AAB/vQAAGT0AwJe8AAAkPQDAi70AoE+9AEByvQCA7zwAYDM9AHCIvQDAQD0AgDq9AIAFvQCA6bwAQJG8ACBkvQAgGr0AIFA9AIAXvABAHj0AQDc9AAAyuwDguL0AAEA7AOANPQAABrsAQDA9AEC3vQBARr0AMKI9AOAhPQDgJb0AUIc9AAAPPQAgQL0AAHS7AAAZvQAgLT0AAGE8AADguwDAl7wAAJ88AIAOvQBwlr0AADI8AECTvAAA9TsAQPY8AAA/PQDA37wAwMa8AKBhPQAAdzwA0KG9AAAivABgK70AAKG8AFCovQCAO70AwCi9AKA1vQBArbwAoGi9AEC3vABAyzwAADm9AOBOPQAABzwA4GO9AAABvQCgY70AwOE8ACAVvQAAADwAQLc8AICvvADADr0AgFE9ACAwvQDgZL0AIKC9AICpvACA/zwAAJY7AABUuwAAjT0AAKk8ACC4PQCAVrwA4Fm9AACZuwBAED0AgPO8AAD+OwAAwDkAQDu9AAAsOwAAI7wAgC48AMDPPABQtr0AIDI9ACBHvQBA6LwAgKQ9AADYPABAcj0AwJ09AIBOPADA670AACA7AADnvAAAM7wA4Gk9AIAEvACAQrwA0Lw9AMB4vQBAjrwAgLG8AABIOwAAwzwAgBU8AICmvQCA/rwAgNW8AABeuwAgDT0AAGg6AMDRvAAAPz0AgDs8AIAIvADAa70AAEg7AACsugDghD0AoF89ACBcvQCQmr0AwNc8AECuvAAAZ7wAAC+9AACmuwBA7jwA4IY9AADUOgCAYz0A0NM9AKAiPQBgnT0AgEc8AACeuwDAhLwAANs7AMBHvQDgD70AAJo8AOAmPQAAobwAAMC6ADCaPQCARzwAkMA9AEC3PQAA9zsAgFY9ACBKPQBANb0AgGI8AAAAuQDgHj0AACC7AIDRPAAAGz0AAIk7AIAtPAAApj0AIHg9ADDcvQDAkDwAIJe9AOB1vQAAJDsAQIG9AABCuwAA4bwAwHA9AEAdPQBAgLwAQJm8ANCCvQBACj0AYIU9AADNOwBAsrwAACe9AAAeuwAA3LoAwJM8AEAUPQAAcjwAAIM7AEBlvQBAobwAALK7ANCNPQBA+7wAgGC9AABsuwBgBT0AADw8AAA+PQAAIrsAgBq8AAA/PQAAHb0AQIa9AGAHvQBAIj0AkIi9AACIOgCAxT0AgAi8ACBLvQBArLwAgHM9AICXvQBw5z0AANm7AACUuwBQur0A8IK9AACwOQCAfT0AgB69AOCMPQDAyb0AgFc9AEDRPAAACjwAQOY8AEC6PAAAML0AgLO8AABUOwCApbwAoGY9AGBxPQAAjT0AwIy9AEAWvQAADb0A8Bs+AOA3vQDAIL0AAJc8AAA/PAAAIjsAAIk8AAAKPQAAL7wAoGu9ADC8vQAAq7wAgB28AACWvABA+7wAAEo7ADCHvQAAebwAQDE9AICLvAAAdrwAgC68AIASvAAgNL0AAN+7AACvuwAwqD0=","chunkHash":"912f453d2501fe97ee51ef4935f656a13f914d825f14e9735fc1df8e29da20fc"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\ndef training(project_directory, texture_type, config_file, devices, from_checkpoint=False):\n    \"\"\"\n    Run texture model training using our custom dataloaders.\n    \n    Args:\n        project_directory (str): Directory to save results\n        texture_type (str): 'coarse' or 'fine'\n        config_file (str): Path to configuration file\n        devices (str): Device IDs (e.g., \"0\" for first GPU)\n        from_checkpoint (bool): Whether to resume from checkpoint\n    \"\"\"\n    import time\n    import os\n    import logging\n    import torch\n    \n    # Set up logging\n    logging.basicConfig(format='[+][%(asctime)-15s][%(name)s %(levelname)s] %(message)s',\n                        level=logging.INFO)\n    logger = logging.getLogger(__name__)\n    \n    logger.info(f\"Loading config from {config_file}\")\n    \n    # Set device\n    logger.info(f\"Using devices {devices}\")\n    os.environ[\"CUDA_VISIBLE_DEVICES\"] = devices\n    \n    # Load the trainer\n    if from_checkpoint:\n        try:\n            from inferno.trainers.basic import Trainer\n            #...\n```","range":{"startLineNumber":117,"startColumn":0,"endLineNumber":147,"endColumn":0},"embedding":"ACBOPQAAQj0AgCQ9AMCpvQAAHr0A4Bi9ACBXPQAA5LsAgG29AACkuwAgHr0AwCo9ACAmPQBQxb0AgH88AACAuwCA9DwAAHA8AMCYvACAVj0A0II9AABZvABAGb0AgOC8AAD0uwAA2rwAgOw8AGA4PQDAMj0AAIy7AACCvABAFL0AoD+9AMCvvACAx7wAgN28AEAlPQBw1z0AQLK8AMAfvQCAAD0AIKu9AIBkPADQxT0AgMA8AABYvAAAGjsAQGs9AAAqPABgTz0AgDq8AIDpPACgOb0AIE+9AKBBPQCALDwAQJa8AED9vAAgRr0AAHy9AABEPAAAab0AAJM9AKCEvQAgGT0AgLG8AIBnvQAAsDkAYAK9AKBQPQAAsTsAcJm9AIBiPABAkLwAQMg8APCnvQCwib0AUNI9AMCNvACAF7wAAM47AACgOgAARrsAAPW8AMCdvADQob0AgIm8AAAguQAAuTwAEKG9AEAPPQAAaD0AwDG9AMBOPQAAqDsAgIi8AABPPACgnr0AwEo9AMCFPAAA3DsAsII9AAClPACAljwAAKm7AKBavQDAk7wAACC7AACJOwAASjwAoFu9AAAyOwAQgT0AAI08AEBzPQDQuL0AAEo7AIADvAAAwrsAcI69AIAovABwoT0AANu7AECYvQCAozwAIAE9AGAZvQAAV7wAAJe9AEBdvQCACTwAAGm8AOAhPQBAkrwAQIa9ADC+vQDwgr0AAFK7AECNPAAAZD0AwJi9AACcugAAm7wAkKw9AOBKvQAAEz0AABq9AIABvAAAsDsAABq7AAB3vQBA7bwAIJI9AAC3vACABTwAwP+8AMBBvQBgqD0AwBu9AACLvABA3zwAgKK8AMDnPACA9DwAAHi6AIDAPADgKb0AIBw9AIDrvABAO70AULg9AIAgPQCAtrwAYEC9AMDaPABgmL0AgDs8AOAvvQDAMb0AIJ29ANCavQCADzwAgPS8AEAIPQCAbb0AYCO9AMCtPABA8TwAAPC5AOCiPQAgVb0AACm8AEB9PQAAtDwAAAs8AAAsvAAgqz0AIA09AKArPQAAE70AgPq8AAB+PQAAAjwAgAu8ACAFvQAAfrsAAHC8AAACuwAgGr0AgAS8AAAKvQCAIbwAAAA5AAB6uwCgCb0AALQ6AMDCvACARr0AILE9AACtPABQmz0AQJq8AAAEuwAA4jsAUIc9AIARvQAANb0AEJS9AAASPQBgMT0AYGu9ADCOvQBASz0AAPe7APDKPQAggL0AwKG8AGCGvQBAZT0AYEk9AHCbvQBgOz0AwIq8AOBYvQBgLT0AwMI8AACgvAAgVr0AAPw7AMCRPAAAFrwAoEs9AIAnvABgnb0AQL88AMCZPAAgNb0AQBC9AICLvQDAT70AkJs9AEAGPQCgdb0AgP48AIBFPACATrwAQM68AMBwvQAACDoAID29AIBvPAAAdLwAwD09AABkvAAAUr0AABC7AAD2PACAHDwAwBA9AOAvPQDAjDwA4DO9AIDyPADgBD0AIJ+9AIC+vAAAbrwAQH29AGBRvQCAD7wAwL68AGBQvQBA7rwAgGq9AIBMvABAyjwAIGy9AAABPQCAkjwAgLS8AACAuwBAuLwAwIg8AMAOvQAAwzwAAJO7ACAQPQCAE70AAJE9AIB6vADAibwAoBi9AID1PACAEz0AYEw9AECVvADQgT0AAIU7ABCIPQAAgDgAgJC9AKCLvQAAZjsAAPk7AADiOwBgXT0AAHa7AIAaPQCAX70AAKA6AMAuPQCAmL0AgPE8AIAGPADAxzwAwIU9AEAHvQDAID0AwHc9AAAAOwBw0b0AAOC7ABChvQCAgTwAwHA9AMAFPQAAKLoAYDg9AKADvQAAsLsAAO27AECXvAAAYTwAIFq9ACBmvQDABL0AQFe9AIBfPAAAfDsAgEC8AKBdvQBAiz0AMI09AAAGuwBAKL0AAEA8AKAavQAQ6D0AwGA9AACgvACAGTwAAD08AKAavQAAdLsA4C69AMCBPACAnj0A4JI9AAB6vADAGT0AgCo9AEAXPQDg3j0AAGa7ACAbvQAAa7wAAEI9AAB0vQAASLwAQBC9ABCDPQCgDr0AgAW8ACBnPQDA3DwAoGc9APCAPQCgnT0AwFU9AAAAPQBA0LwAwKK8ADCIvQBAt7wAIFM9ALClPQBAQj0AAL+7AADAOgBggD0AwCA9APDhvQAAbLsAgLu9AIAlvQAgP70AIHu9AEDBPACgNr0AAEA7AED6vAAAz7sAoAS9AKCMvQCA7LwAIJ89AABRPAAAxrwAgFq8AADiuwAAg7wAgIc8ACAYPQDQpz0AAKO7AICXvQCASL0AYDG9AEBMPQDArrwAAKi7AAAEvACA3DwAAHk8AIBwPADAMz0AAM+7AECrPQAAw7wAQM68AKAAvQCADbwAwOG8AIC+PACgZD0AgHW8AIDoPAAA07sAoGI9AABtvACw1z0AAFE8AIDbvADgZL0AAHO8AEAoPQDgij0AAGk8ACApPQCg8r0AAJK7AACSOwCAZDwAQMS8AABgugAAbr0AgNK8AIDQvADgC70AAIM8AGB2PQAA3jwAQH+9AACDvABAsjwAcBo+AICYvQAArjwAAEC5AMBePQCAhTwAAKY7ACCxPQAA/bsAkIe9AGDPvQAAI7wAAM47AABUPACAFrwAgMA8AEAQvQBAm7wAYJE9AIAcPQAAw7wAAP28AAAjPABATL0AAOA6AEAUvQDwxT0=","chunkHash":"ce28136036986f564e1775b5a83640598c95d7c62a84c4b22d5f1a0285775e21"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\ndef training(project_directory, texture_type, config_file, devices, from_checkpoint=False):\n    #...\n            trainer = Trainer().load(from_directory=project_directory,\n                                    filename='Weights/checkpoint.pytorch')\n        except ImportError:\n            logger.error(\"Could not import Trainer from inferno. Make sure it's installed.\")\n            return\n        except Exception as e:\n            logger.error(f\"Error loading checkpoint: {e}\")\n            return\n    else:\n        # Load config and set up training\n        with open(config_file, 'r') as f:\n            config = yaml.safe_load(f)\n        \n        try:\n            # Import necessary libraries\n            import torch.nn as nn\n            import neurofire.models as models\n            from inferno.trainers.basic import Trainer\n            \n            # Set up the trainer\n            trainer = set_up_training(project_directory, config)\n        except ImportError:\n            logger.error(\"Could not import required libraries (inferno, neurofire).\")\n            return\n        except Exception as e:\n            logger.error(f\"Error setting up training: {e}\")\n            return\n    \n    # Load our custom dataloaders\n    #...\n```","range":{"startLineNumber":147,"startColumn":0,"endLineNumber":176,"endColumn":0},"embedding":"AADZPABA0zwAgBA9AJDyvQBAozwAYIC9AIB1PQAAZTwAgIC9AABAuwAA/rsAoEg9ACAWPQAwpb0AgEC8AAA3PAAASrsAAN88AIDNvACgPj0AUJE9AAAGvADgBL0AYA69AABYuwDAvLwAAL07AIDxPADgQD0AAJ08AAC2PADA+7wAgES9AAC6vAAAGLwAgPu8AIA4PACwnz0AAHK8AKALvQCAVT0AIM69AAAYuwDgvj0AANG7AIC7vAAAkbwA4JE9AIC5PADwoz0AoAO9AACiuwCAkrwAgIa8AKAxPQDA8TwA4CG9AACmvAAgxr0AwGa9AAAbPQBgYL0AYH49AKArvQAA7DsAgKy8AMCKvQAALLwAgAq8AIDEPACALLwAAPi8AABCuwDgAb0AAGU8AEAHvQAQkb0AUK89ACA5vQDApbwAAHg8AACLPABAlbwAQOa8AKAcvQAAdL0AQFa9AAB6OwBAorwAsNm9AACvPADgRj0A0IK9AMAmPQAARTwAoC+9AAD8uwDwn70A4Hg9AECWvABAvTwA4HM9AADTuwBALz0AAM47AGA8vQDAm7wAQDu9AIDYPADAMj0AAEa9AOAKvQAwkz0AIDY9AKCoPQBAYb0AsIM9ACAovQAALTwAYAW9AIDYvACALT0AEIe9AACbvQAAPjsAgC08AABcuwAAEDwAcIu9ALCOvQDAtzwAABk8AAAZPQAgE70A4Gm9AOCtvQBAQr0AwIs8AACXPADAHT0AMJa9AEAFPQCAOL0AAHA9ACCQvQAAeDwAgAW8AAD6uwAA3zwAAGA6ACAmvQAALrwAwE89AMCIPAAAW7wAACi9AOBHvQDg3j0AwKG8AMDSvAAAxLwAQGK9AIBJPAAA3TwAgEi8AMATPQAA97wAgJ08AADOvAAAtrwAQEI9AED3PAAAqTsAAGS8AOAUPQDwhr0AAKU7AOA4vQDAirwAgFG9AEBPvQCALT0AgLa8AAD6PAAA3rwAID69AABOPACAizwAwPA8APDKPQAAVL0AAOQ6AECKPQCA0zwAgAI9AACcvAAAsD0AALA6AADauwAAtrwAQFG9AIB4PQAAOzwAgFa8AMD7vACAIL0AQJo8AAACvACAVb0AgBo8AACZvAAAJjwAwMo8AID7PABA5LwAADQ7AAAIugDAp7wAAH49AACEPACAYD0AwOe8ACAHPQBABz0AEIM9AEAdvQCAmrwAcKu9AMCpPADgBT0AoDa9AIAEvQCghj0AgBc8AOC6PQDAfL0AgAC9AIB8vQAAcD0A4IU9AEA0vQCgUT0AAGA5AICtvADABj0AAGw8ACBKvQAwi70AALo7AADhPACAH7wAUJY9AMB4PQDAWr0AQBA9AAA4ugBAZL0AgGm9ACCqvQAgJr0AIOI9AIAxPQCgeb0A4CE9AABYuwAAbbwAgEq8AADPvABAn7wAABS9AMCDPAAAxTwAYD89AAD7OwDAwL0AgGI8ACAUPQAAFz0AAP88ACAkPQAAdrsAIDK9AADkuwAAGLsAwFG9AABJPAAAs7wAoJG9AMDkvACAPb0AgMS8AACnvACAQr0AYAq9AACzuwAA27sAwPC8AAAXPAAAhDwAAD88AACLPAAANL0AAHC6AMCmvACALLwAgEI9AMAqPQCAGb0AgJ09AKARvQAAW7wAADO9AOBUPQAAZzwAQDw9AICJvABwnD0AANW7AFC0PQAAt7wAoKS9AGBnvQCALjwAgJo8AACAugBATT0AAHI7AEDtPACAAb0AgH08AKAKPQAwib0AoFI9AAC4uwAAATwAgHg9AABZvQBQgj0AwOg8AADnuwDQyL0A4GK9AACZvQCgOT0AwEY9AGAhPQAAWDoAgEU9AOAUvQAAXLsAQIa8AMCoPAAAzbsAIBO9AEBAvQBAyrwAIHW9AIB6PAAA4DkAABC7ABCivQAgZD0AQHk9AADnPABALb0AQKQ8AECRvAAw1D0AoC09AECGvAAAGjwAAMU7AMC2vADAE70AUIG9AEACPQDAdT0A8Ig9AAALvADgND0AYD49AACZOwBgxj0AgLe8AIB+vQDA3LwAEJg9AOApvQBAgbwAAA08AFCNPQAAHL0AgHS8ACCCPQBA2jwA8I49AAA2PQAQmD0AwBU9AMCtPACAH70AwOO8AIAnvQCgOL0AQEY9ABDYPQCgfT0AQJw8AEAJvQDgDz0AYGU9ALgLvgCAGrwAcJ69AAAMvQBgfL0AAPO8AECIPADgRb0AALE7AAD7uwAAHLsAgCy9AOAMvQAgDL0AwJw9AMBAPQCAzrwAAL47AADgvAAAeDoAALK8AEC5PAAg2T0AgG88ACB5vQCA27wAQN+8AAA1PQAAlrsAgL28AECnvACgbj0AAL88AADzuwBArzwAgAC8ABCTPQAAcDsAQES9AGArvQBA4rwAACi6AIDoPAAgfj0AACu8AMBGPQCABzwA8Io9AABkPADQ0j0AgMg8AMDuvABARb0AwMK8AIDbPAAAgT0AAEA8AKAlPQCg/r0AAFa7AAB4vAAgCz0AgDm8AECVPAAQib0AAIK8AACguQAA2bsAQKY8AEB4PQAAbDwA8Jm9AACfuwAALjwAkAU+AEBhvQAAoLkAgBE8AGCKPQAAhrwAAOc7AJCLPQCARLwAkJa9AODUvQCAJ7wAgPe8AAA6OwCA+LwAwBI9AIDVvACAxbwAIJA9AIBCPQDAH70AAJE7AABQuwAgZr0AAP87AECSvAAQuD0=","chunkHash":"f7bbcb0b5d4de7499d2afe1c051323a3ad9f574069f98c4448babc390b87e376"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\ndef training(project_directory, texture_type, config_file, devices, from_checkpoint=False):\n    #...\n    logger.info(f\"Loading training and validation data loader from {config_file}\")\n    loader = CustomTextureLoader(config_file, texture_type=texture_type)\n    train_loader, validation_loader = loader.get_train_loaders()\n    \n    # Set max number of epochs\n    with open(config_file, 'r') as f:\n        config = yaml.safe_load(f)\n    trainer.set_max_num_epochs(config.get('num_epochs', 10))\n    \n    # Bind loaders to trainer\n    logger.info(\"Binding loaders to trainer\")\n    trainer.bind_loader('train', train_loader).bind_loader('validate', validation_loader)\n    \n    # GPU setup\n    if isinstance(trainer.model, torch.nn.DataParallel):\n        trainer.model = trainer.model.module\n    trainer.cuda([0])  # Use first GPU\n    \n    # Set optimization level if using AMP\n    trainer.apex_opt_level = config.get('opt_level', \"O1\")\n    trainer.mixed_precision = config.get('mixed_precision', \"False\")\n    #...\n```","range":{"startLineNumber":176,"startColumn":0,"endLineNumber":197,"endColumn":0},"embedding":"AOAbPQAgST0AsIk9AKC6vQBA87wAIFO9AECdPQAAAjsAoBS9AAD9uwAAGrsAQM08AIBuPADwpr0AwM68AACKPAAAkDwAALM8AAASuwDA7zwAIFg9AEAHvQDAP70AIAq9AAAgugBAar0AALc8AIA1PQAgAT0AAJw7AACauwCgC70AYD69AAAmvADgDb0AAOu8AACePADQhz0AACw7AGAmvQAgRj0AYMe9AADZOwCwpj0AgGI8ACArvQBADL0AkJc9AIAMPABwpz0AAPW8AECEPACA0rwAAGi8AMAGPQBA4jwAoDm9AIDovACghb0AQBq9AMAjPQCgHL0AQIA9AOAQvQDAmzwAABg7ANCFvQAA4LkAgOO8AGAbPQAATrwA4H69AACsOwDAjrwAAH08AABpvQAgm70A0MM9AKA9vQBgPL0AgCE8AIAvvADAtrwAAAu9AGA6vQCAVb0AQJ28AIDCPACAiLwAwIi9AMDSPADgfz0AoEW9AMCKPQCAJjwAAMG7AACVuwAguL0AoBc9AABdvACAnDwA4F49AID7vAAgPD0AgCQ8ACAyvQCAaLwAgEa8AIAYPQDA3TwAIH69AIBzvAAQoT0AANU8AIC3PQBAYr0AADI8AEAXvQAAkDsAYBi9AMCCvACgTj0AQG+9AKC8vQAAEDwAAJA8AACSOwBgIr0AQJa9AEB8vQAADTwAAIQ7ALChPQBAIL0A4EW9AED6vQCA+rwAgF48AECGPABASz0AYJW9AADmOwCA2LwAkK49AECJvQCAQDwAQDy9AEC2PAAAPDsAQOI8AKATvQAAWrwAMIc9AACuOwDAmLwAADq9AGBRvQD4Bz4AYAG9AIDjvACAjLwAIIS9AOAgPQDADz0AALi6AEAGPQAAGL0AwN08AGARvQBgPr0AsIw9AIBPvAAAfrwAwAa9AIDIPADger0AQIK8AKAzvQDAkLwAoGW9AMAVvQBA0DwAoAC9AADxPADA7LwAoGa9AIDiPABgTD0AABI8ACCdPQDA7LwAANW8AMCdPQBAzDwAAEQ9AEDDvACArz0AAOc8AABGuwAAVr0A4D29AMB/PQBAxTwAAGg7AMAbvQAACL0AAO47AAD0ugAwjL0AQLA8AAA0vADAhjwAwP08AKAmPQDAxrwAgCy8AMCxvABAzrwAwGk9AECJPACAOz0AwPa8ACBNPQCAvTwAIGY9AEDxvAAAcLwA0K69AOBPPQCAejwAYDK9AKARvQBA1zwAAMM7ALDlPQCgmr0AQPK8AKApvQAATD0AoGw9AAAcvQAAMj0AwKi8AKAevQCACD0AAIQ8AOCIvQCQs70AwLQ8AKAfPQAAKDoAIJA9AECHvACgW70A4Dg9AADZuwBgV70AgHG9AGByvQAAMr0A4Nk9ACAcPQCQj70A4Bc9ACAOPQBAljwAAMK8AECIvQCAzLwAAGW9AAAsOwAAKDwAUI89AADIuwCwob0AwPw8AIDOPAAA/TwAgDg8AAB5PQAAzTwAYGC9AMDkPAAAgDsAAOG8AACJOwAANrwAIEa9AADKvAAAIL0AAAI8AIBmvABAFL0AoDi9AABmPADACD0A4By9AIBSPAAAUDwAALy7AACpOwDgFr0AAHS7AEAUvQAAmbsA4EU9AIC6PACAT70AgEc9AEAIvQAAQbwAEJS9ACAmPQAAXDwAICc9AABouwDQmT0AADQ8APCCPQBgBb0AwHS9AEBrvQBACT0AAII7AAD1OwAgKj0AQOS8AIBrPACAFbwAgKc8AEAzPQBgsr0AwIA8AAAIvABAujwAEJ89AAC0vACAVT0AQN88AADYugCQ6r0AAOS8AFCMvQCAVzwAQEE9AOBSPQAA3jsAgEg9AABXvAAAjTsAgLu8AAD3uwCAIrwAwJW8AMA3vQAAbL0AoEO9AMDZPADAmLwAAMA6ACAbvQDgYD0AYEI9AMCNPAAAcL0AgNA8AADsvACwzj0AACM9AECOvAAAQDoAQKE8AOAAvQCAIb0A4EO9AABOvADgQj0AEJc9AACOOwAA8TwAQHg9AIAwPAAQrD0AAA+8AGBXvQBAwbwA4Ec9AEDMvAAAdrsAACu8ACB/PQBAmrwAQL+8AIBNPQBAQz0AcLk9ACCEPQCQtj0AwCg9AAAgPACAUb0AQMu8AADnvAAANLwA4DM9AGDSPQDAPT0AAOw6AAB3vABgCz0AsLE9ANgXvgAApLoA8Li9AABPvADALb0AUIq9AMCiPADgcr0AAOM7AABgOQDAzzwA4EW9AGAFvQCALLwAIKA9AMA2PQAAxLoAAB68AAAIvAAAKbwAwNC8AIBePQCAkD0AAN87AGC4vQAA9rwAACK9AOBZPQCAOLwAAEa8AAAWOwAAKT0AgBw8AAB2vADAgDwAAHg7APCAPQCAPbwAQBO9AIAlvQAAMLoAQN+8AABVPACgOT0AgH28AKBCPQAAJjwAwGg9AACAPAAA3z0AgAM8AMAQvQCAUb0AwNG8AACgPACwgj0AALg6AKAGPQAA/L0AAAQ7AADwOQBgNT0AAAA7AMCyPAAgKr0AAL68AICMvACAITwAgDI9ANCCPQCAkDwAIH+9AACquwAA+zsAYAg+ACByvQAABzwAgBC8AICwPQAAcjsAgFo8AJCHPQAAOrwAAHi9AODCvQAAcL0AgO68AADJOwDA+bwAACY9AMDDvAAAtLwAQEw9AMD6PAAA5LwAAEY8AEDOvACgHL0AAJC5AMC1vACgXD0=","chunkHash":"34ad88b9d83dd8e2f771a4e97014ff95206c44043b116b1c2f16e313bd587b18"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\ndef training(project_directory, texture_type, config_file, devices, from_checkpoint=False):\n    #...\n    # Multi-GPU setup if needed\n    if len(devices.split(',')) > 1:\n        trainer.model = nn.DataParallel(trainer.model)\n    \n    # Use dill for pickle since it handles more types\n    trainer.pickle_module = 'dill'\n    \n    # Start training\n    logger.info(\"Starting training!\")\n    start = time.time()\n    trainer.fit()\n    end = time.time()\n    time_diff = end - start\n    logger.info(f\"Training took {time_diff // 3600} hours {time_diff % 3600 // 60} minutes\")\n#...\n```","range":{"startLineNumber":198,"startColumn":0,"endLineNumber":211,"endColumn":92},"embedding":"ACAJPQBA7zwA4IY9AKCrvQAA4bwA4Eu9ABCdPQDAqDwAQHG9AACFuwCAG7wA4C49ACAJPQCwor0AgKq8AIC6PACATLwAAKU8AADrPACA1DwAYF49AADFvACAOb0AwDm9AABAPADACr0AYB09AIDrPADAwTwAABi6AABaPADAGb0AYFS9AGALvQAApbwAgK88AABMPACwqj0AwJ68AIC5vAAgUz0AYKO9AAC6vABgOz0AAOc7AOAqvQAAYb0AkIk9AMArPQBgwD0AgFm8AADaPADgGL0AAMu8AMAoPQAAxDsAQEO9AACqvACAhr0AIEW9ANCEPQCgZb0AEI09AKBQvQAAmzsAANi6AMBnvQAAOjsA4Ai9AACUOwBgD70AwBK9AAD0OgAAprwAwJQ8AEAGvQAgtb0A8J49ACAfvQAgMb0AACU8AIAOvACAKr0AAHS7AIAFvQDAbb0AwL28AAB0uwCAFrwAwIC9AEABPQBQgj0AIAa9ACAdPQAAzLsAgKq8AABAOwBQpr0AAGA8AAC0uwCALbwAcIs9AGANvQBgTD0AAFg6AKBWvQCAmbwAAMa7AAB7PACAZj0AwBS9AABMvAAAbj0AgAw9ALDJPQCgNr0AwLA8AECXvACAPjwAQCi9AIADvQBAcz0AwI+9AAC1vQCAPjwAgEo8AAAquwAAT70AoCa9ACACvQAAJrsAwKi8AMBaPQDAnrwAgDi9AODXvQCgG70AAOs7AACtOwCAGz0AcI+9AICuPACA0LwAcMk9AABxvQDAOT0AUIe9AAArPAAA5rsAgKA8ACAdvQBA77wAgI49AIACPAAAj7sA4Bi9AIBrvQDw9z0AQFm9AEDwvACAL7wAIHu9AECPPAAAMD0AAM67AKA+PQDAJr0AQD09AEAKvQCgFb0A4Fg9AADQuQAAOjsAgO68AKBJPQCAeb0AAB88AHCPvQCgAL0AwI29AGAxvQCgGz0AACi9AGALPQCAL7wAAFC9AIAqPACA9DwAwIo8AGCpPQCgAb0AQMy8ABCRPQBgMz0AABw9AECVvADQoD0AgHW8AACBvABAv7wAgB29ACCAPQAAYrsAAGe8AEAZvQDgaL0AAG88AACFuwCwqL0AgMU8AACbuwAA9DwAgOM8AIBNPACA/LwAIAe9AACxvADgSb0AYIQ9AICTPABARz0AABi9AACOPACAbT0A4Gw9ACBFvQDA+LwA0JK9AAA1PQAAHrsAQGK9AMAmvQCAFz0AAHg8APDWPQAQm70AAPm8AEBuvQDgLz0AoEg9AMAgvQCAMD0AACy8ACAgvQAgFD0AgBE8AIBlvQDgm70AQPI8AID7PACgCL0AIIo9AICtvABgW70AoBc9AOAJPQAQrr0AwGi9AOASvQAAsbwAYNg9ACAdPQBAvb0AwLg8AKADPQCANz0AQPi8AOBmvQBAAb0AoCO9AABeOwAA6LoAoIE9AIA5vADAo70AQOk8AMCAPABgDz0AACA8AAAsPQAAKjwAYEa9ACBDPQAAeLsAwMy8AACougAAULsAAHe9AMBCvQBAKL0AAB47AMCQvABA5rwAQI28AAAVPAAAyDoAgOS8AADPOwAADzwAgEm8AAD8OgCgTr0AAMk7AEA1vQAAk7wAADs9AADOOwDAhb0AUII9AECzvAAA4rsA8LG9AEAAPQAAzDsAQB09AABvvABghT0AAJI7AFCPPQBA5bwAoDW9AGChvQBAqDwAgC88AAD0ugDgXT0AgFS8AAB5PADA07wAAK47AADbPACArb0AgJE8AACxvACAhjwAQDM9AMDIvACAID0AAPs8AAAZvADw/b0AQPu8ADC0vQAAFj0AQGM9AOAsPQBAiTwAwFk9AIAuvABAlzwAwMu8AADAOwCAoTwAgLy8AIAEvQAAO70AQDm9AMDwPAAAn7wAAII7AMAlvQBgYz0AwFg9AIDWPACAHr0AgLg8AEA6vQAw6D0AQOA8AAAoPAAASDsAQN48AOARvQCASrwAYEi9AICRPAAgPD0A8K09AMCavACAFz0AgPA8AIBePABAtT0AALy8AHCPvQBA+bwAAHA9AKAMvQCAJ70AgLi8AKBzPQCANb0AgBc8AMA3PQAAoDwA0JA9ALCEPQDQlj0AQPQ8AADFOwAAP70AYDG9AADJvAAAy7wAQFI9AID5PQAAVT0AgJQ8AAARvACAGD0AoJ09AHgZvgAAjDsAQJi9AAAYOwAgaL0AMK69AADrPADgYb0AAGC7AABouwDA4DwAQEy9AIAQvQBA5rwAsKQ9AIBwPAAAMLoAAMU7AACeOwAABjsAgIC8AOCNPQCQlD0AgCk8AMCTvQBAD70AAO28AGAbPQAAWDoAACe8AADhuwAAHT0AgGE8AICzvACAkTwAAAA8AJCUPQAA2bsAYFO9AIAqvQAAlTsAABs8ACAMPQDAkz0AAFC6ABCPPQCA+jwAYHs9AECXPACQ9D0AAKW7AAD3vABA/7wAACu9AIAJPACgez0AAF88AIBaPACQAL4AAAS8AEC8PABgKT0AAJO8AOAGPQBAz7wAQIe8AABbvAAACLwAYBc9AOCRPQCAtjwAIIq9AMC5PAAAFzwAcOQ9ACCHvQAAQLkAgCq8AACKPQBAlDwAACi7AMB2PQAAS7wAkIu9AACnvQBARr0AoBq9AMDJPACAibwAIDs9AECGvACAprwAABw9AID+PAAAgbsAABy8AMAFvQDgM70AgC08AAAWuwAgXz0=","chunkHash":"bd91583c92bcc2e8a9eae9ff87c2e9c252caa622ae37c0e5acdb60c456fdf1dc"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Train texture model with custom dataloaders\")\n    parser.add_argument('--project_dir', type=str, required=True, help=\"Project directory for results\")\n    parser.add_argument('--texture_type', type=str, choices=['coarse', 'fine'], default='coarse',\n                        help=\"Type of texture analysis (coarse or fine)\")\n    parser.add_argument('--config', type=str, required=True, help=\"Path to config file\")\n    parser.add_argument('--devices', type=str, default='0', help=\"GPU device indices\")\n    parser.add_argument('--from_checkpoint', type=int, default=0, help=\"Resume from checkpoint (0/1)\")\n    args = parser.parse_args()\n    \n    # Create the project directory if it doesn't exist\n    os.makedirs(args.project_dir, exist_ok=True)\n    \n    # Start training\n    training(args.project_dir, args.texture_type, args.config, args.devices, bool(args.from_checkpoint))\n#...\n```","range":{"startLineNumber":214,"startColumn":0,"endLineNumber":228,"endColumn":104},"embedding":"ACAXPQBAaj0AIGU9AECgvQCAe70A4D29AIADPQCAcLwAoC29AADjOwAgJL0AgIw8AOAMPQAQlb0AwIe8AABgOwAAlDwAALo7AADQuwAAAz0A0II9AIB6vACgEr0AYEu9AADfOwAAjr0AQNo8AGAoPQBAFD0AACo8AAB4vAAgIb0AQGG9ACANvQDAXL0A4Ce9AIANPACwpz0AgIW8AMBHvQBAfz0AwJ+9AACIugBQuD0AAE67AEBBvQAAMDsAQC89AEDrPABAZD0AAP68AACoOgDAIb0AQBG9AABdPACAyDwAgEa9AMAfvQDgbb0A4DW9AICIPADA/bwAgG09AOAnvQAAJLwAADY7AGBvvQCAgbwAIEy9ABCCPQAAoTsA4H69AADGvADAn7wAAPg6AICxvQBAob0AYMQ9AKBkvQBgLr0AAO47AABLPADAu7wAQOu8AEDbvADwlr0AgFc8AAC5uwDAkrwAkIe9AAChOwDATD0AwPC8AOB4PQCATDwAAGk8AIAUvADwxr0AICI9AAC+uwCAbjwAoEc9AADUuwBgUj0AIAk9AEAtvQAAEDoAAOc7AGA1PQBAcT0AYEC9AMDavABAST0AAK87AIDWPQDgjL0AAFa7AICTvAAAhTsAQAq9AAAWvABQqz0AgN+8ABCCvQAAiDoAYAE9AADgOgAgLL0AgJu9AIDlvAAA5TsAAJM7ADCDPQCA9rwAcJK9AJDwvQCA37wAQL08AABwPADAiz0AoHG9AADKOwAAnLoA4KA9AOA3vQCAJj0AQPK8AGBOPQAAoLsAoAA9AEAGvQAAgDoAoHc9AIAmvAAAfTwAQMW8AACwvADArj0AAOK8AMBEvQAACTwAALa8AGApPQCgbj0AgCi8AMDOPADgYL0AoDQ9AAD9vADAZb0AYGU9AABAugAgGb0AwEW9AAAnPQAgQL0AAEQ8AEB+vQCA5LwAkIK9ACA5vQAABLwAAGy7AMC4PAAAaDoAwCy9AADbPACA3jwAgBM8ALCUPQAAyrwAAJq7AJCDPQCANDwAQOo8AADUugCAsD0AgOY8AIDLPAAAsDoAgC29ACDBPQAAqTwAACA5AABlvQAA77wAANk7AAAPvABger0AAJE7AICCvAAA0LsAAJw6AIDwPACAfrwAwOi8AEDBvACAVbwA4Js9AAAXPAAQhj0AAPu7AMDpPACAezwA4GA9AIAMvQAAObwAMLq9AMDbPADAuTwAAPS8AMAavQDA6jwAQIQ8ANDZPQDAaL0AAPS6AEB6vQDASz0AgHA9ABCUvQDAojwAAAe8AAA7vQDAEj0AAM47AADyvADgjL0AgO48AEC6PAAAQDoA4KE9AIC0vACgir0AALY8AADauwBwg70AANy8ANDIvQBgUb0AoME9AADyPACAdb0AwPU8AEDHPADAtLwAIAy9AIALvQCARLwAIFC9AIAEPAAAaLsAoCE9AAAgugCAj70AQDI9AAB8PABA1jwAIE89AID9PAAAqzsAgFe9AEBvPQBAsjwAYE69AAB8OwAArLwAgDy9AABUvQBA+rwAgFc8AMAcvQDAmLwAwFm9AAATvAAABjwAwPe8AACNPADAizwAQM68AEDOPADA47wA4Ag9AIBLvQAA4DoAQOo8AACRPACAYL0AIKE9AMCgvACAMbwAwHi9AECgPAAA7DoAABU9AMC+vAAAjD0AAMk8ABCTPQAAADkAoHW9AKDDvQAgWD0AAL28AADwOQAASj0AAPW7AECwPABQg70AALo8AEDiPABAj70AwNo8AAAQuwBAwjwAoB89AMDMvABgej0A4EU9AAAiPAAg+70AwAG9AFCpvQAA1zwAwLI8AEA6PQBA3TwAoGw9AMAwvQAAFrwAAIQ6AACougAAljwAgNu8AIBSvQDAOL0AYHW9AACsOwAAsbwAAMS7AEB7vQBQgD0AwM08AIB9PACAvrwAgHA8AEBevQAg0T0AoCU9AIAIvAAAATwAAE88AOCvvQBARL0AwPu8AECdvABAUj0AsKc9AGAQvQCAyDwAAEs9AAB+OwCAjT0AgNK8AMCxvACQgr0AgG89AACkuwAgFr0AAAK7AHCZPQDgAb0AAO27ANCCPQCAjzwAEKU9AOCtPQAQgj0AIA09AACjPACA4bwAAEa8AED9vACA6rwAABs9AADjPQDA1DwAgAO8AECwPABwgz0AIEA9APgHvgCAHzwAMLq9AMBgvQBgZ70AoFG9AABQPADARb0AgF88AACQOgBA8TwAwDe9AKA2vQBAi7wA8Lk9AACbPAAAS7wAABg7AMCWPACACzwAAOw6AOA0PQBAQz0AAK+7AJDbvQAAS7wAgOa8AEAuPQDA7bwAAIe8AACQOgAArjwAwLU8AAA8vAAA3zsAADg8ACCvPQDA0LwA4E+9AIDAvAAAHzwAwPe8AADyOwCQlD0AAGg8AIAsPQAA2bsAoF49AABSPADw6T0AADE8AMDpvABA37wAgI29AED7PABgcj0AQIo8AOAUPQCAxL0AgCC8AACcOwAALzwAAP27AACBOwCgNL0AgG+8AADrvAAACb0AAH08AMCcPQBA3TwAAEm9AACEvAAAMbwA0Cg+AKCyvQAAULoAgKy8AEBTPQAAxbwAANU7ANCTPQCAKLwAAES9AHC6vQBAXb0AABy7AAAtPAAA0DkAYEw9AAAkOwBA9zwAwG09AGAQPQAAurwAAPi6AADFPACQhr0AgIE8AIAevQAQhD0=","chunkHash":"efcd72aa54caaa4f62dfe6721e186ff90f4e76cf47882070d023654c3f10dd4a"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\nimport os\nimport sys\nimport argparse\nimport yaml\nimport torch.nn as nn\n\n# Add MorphoFeatures to the path\nsys.path.append(os.path.abspath(\"MorphoFeatures\"))\n\n# We'll try to import from MorphoFeatures, but we'll use compatibility wrappers\ntry:\n    # Import necessary components from MorphoFeatures\n    from MorphoFeatures.morphofeatures.texture.train import compile_criterion, set_up_training\n    from MorphoFeatures.morphofeatures.texture.cell_loader import collate_contrastive\nexcept ImportError as e:\n    print(f\"Warning: Could not import from MorphoFeatures texture module: {e}\")\n    print(\"Make sure MorphoFeatures is properly installed.\")\n    sys.exit(1)\n\n# Import our custom dataloaders\nfrom dataloader.highres_contrastive_dataloader import get_highres_contrastive_loaders\nfrom dataloader.lowres_contrastive_dataloader import get_lowres_contrastive_loaders\nfrom dataloader.contrastive_transforms import collate_contrastive\n\n\nclass CustomTextureLoader:\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":25,"endColumn":26},"embedding":"AEBfPQBgKj0AgEc9AACQvQCAGrwAIHO9AKB6PQCgFr0AAFa9AICSvABgEr0AgCG8AAC3PADADL0AgGW8AMC+PAAgHD0A4EQ9AABGuwDAxzwAMIM9AAA3vACgGr0AoDe9AGAEPQDgqr0AgJc8AEDkPAAAQTwAgHa8AIAzPABACb0A4Fy9AADYvABA5LwAAHm9AACeuwAAvj0AAOQ7AEBHvQDART0AwJm9AACYvAAALj0AAAo7AFCpvQCAmrwAAAI9AAAcPAAAID0AgCE8AADUOgDAA70AICG9ACAYvQBAorwAYBW9AACGPACAmL0AgCi9AAAauwCgbb0AAC08AEA2vQAArzwAgJI8AGAhvQAge70AAP28AEAaPQCATjwAoCe9AIAvvADgYL0AYAA9AGBsvQCAK70A2Ac+AMCZvADAL70AAKo8AMC0PAAgLr0AAPa8ANCGvQBAWr0AMIu9AADrOwAAZrwAQJS9AAAUPQAwlT0AYEK9AIDHPACAOTwAICE9AACgugCwjL0AQDg9AEDNvACAMTwAIA89AAAYvQAgMz0A8LA9AEBKvQAAFrsAYA+9AADguwDwsD0AYEa9AIBPvACQlj0AgPk8AMCMPQCgcr0AAPc7AADmOwAAoLwAALO7AGAEvQAAajwAgAO9ACCAvQAAhTwAgMq8AACguwBAo7wAQJ+9AKAzvQDAKj0AgI68AIApPQAAXrwAkIu9ADDgvQBA7bwAAIe7AKAMPQCwsj0AANW8AAACuwAAdrwAgNo8AIAfvQBgDD0AoFC9AOAXPQAAtLwAMIU9AIC4vACAZ7wA4DU9AADVuwBArTwAQJ+9AIDgvAAgsj0AAAW8AAC3vABABL0AgOy8AABrPABwjz0AgK08AICQPAAAt70AIAg9AIBQvQBAdr0AoDU9AAC3vACgNb0AAFC9AACEOwBAx7wAAAS8AEAhvQCAd7wAANQ6AMDDvACgDz0AgGG8AAAAOADAl7wAYIy9AAA+PABgYj0AYAQ9AIBPPQCAKL0AwOY8AABfPAAATzwAAOE8AIBkvADg2D0AgCw8AIAtPAAAq7wAoGO9AIDWPQBAXD0AAAQ7ACBRvQCAYr0AgIw8AAAYugDglr0AgGQ8AIDbvACgIj0AIEE9ANCrPQBA37wAgHm8AID0vADgEz0AwPk8AAC9uwAgZj0AwL68AICBPQAAdDsAAAI9AGApvQAgAL0A0N29AIAOPABA0TwAAGo7AMDEvABAJz0AAFQ7ACCPPQCwl70AQBO9AKBUvQAArzwAIGk9ACAbvQAAfDwAQBG9AADEvABA6jwAgG+8AIArvQDQs70AANI8AMCXvAAAljwAQGU9AABAugDgYL0AACg7AAC+uwCga70AwKW8AJCLvQAAfrwAIIE9AFCAPQBgGb0AYAM9AIAWPQBAqrwA8IO9AMCEvADAszwAAJU7AIC3PACAMLwAgI09AIBtvQCw0b0AgLI8AADjuwCATzwA4HQ9ACCBPQAA1rwAAAk8AEA9PQAAhjwAEJK9AAD7uwAgGr0AQLO8AOAYvQCAQ70AgGm8AGBOvQCAp7wAgAy9AACnvAAAv7sAgKm8AIArPQAATDwAgCm9AIAUvQCASrwAQEw9ACBFvQAAs7sAAFw8AAD0ugAgEb0AYEo9AABXvACAEb0AACu9AAALPACADrwAAMU8AACtuwBQoj0AAKi6AECvPQAAnTsAAOa8ABDAvQBASj0AAIw7AADOvACAGz0AgD29AEA+PQCghb0AAGo7AABGPAAwyb0AAKo9AIBdvADAkbwAYBg9AACUOgAA0j0A4D89AIBYPACA/r0AoD29AMCqvACAYTwAwMk8AIDEPABAtDwA8J89AAC4uwAAh7wAAHw7AMDCPAAASTwA4A09ACByvQBArrwAYDy9AAA+PACA9zwAIAE9AECwvABA6zwAAP88AMDAPABgPr0AQC09AABMuwDAtD0AYGs9AMDyvAAgDb0AAOy7AKAtvQAA3rwA0Ia9AADAOQAA7jwAkJc9AABgugAwij0AEKk9AAB9PADgaz0AAHG8ACA1vQAgZL0AQBk9AKBFvQDAgbwAgPM8ACCTPQAATrwAAKi8AACyPQAgAT0A0MM9ANCUPQBAej0AoCY9AOAHPQDA5bwAALk7AICpvADAkzwAwLQ8ANDlPQBgJz0AABY9AABovADwoz0A0Jc9ABDYvQAAtTsAcIy9AIDcvAAgBb0AAO+8AACruwCAU70AQF49AIBoPAAA1jwAAAe9AEAYvQCAQbwAsIg9AEBFPQBAcr0AAGo7AIAFPACgML0AAEO8AIC6PABgMz0AAJo8AKCdvQAAiDsAQPU8AMCaPQCgEb0A4EW9AACFvABgPD0AwI88AAD9uwAA2bwAAJE7AICCPQDAi7wAIBm9ACAAvQAAVLsAIG+9AIAAvACQyT0AgFs8AAA0OwCgYL0AQE89AIACvADA+j0AAL88AAC4OgBAQ70AQPy8AMD+PAAAFD0AAPm8AMCRPQDQgr0AAEc9AAA+OwCAFrwAAGw7AIBgPADAbb0AAL28AKAPvQAAqbwAQMW8APCwPQCghD0A4B+9AECBvAAAaLsAuDE+AGBivQAgT70AAHK8AEAoPQAAerwAwJs8AABHPACAaLwAIEq9ACCAvQBgNb0AQPu8AABgugCArbwAALW8AGBlvQCAOLwAoAc9AEDCPADgmb0AwJI8AEDivABAOL0AAKC6AIAavACATz0=","chunkHash":"8e0226ad0267ce296592e39af922c6613c314ee2b446ebceda781e5c61ce9bf7"},{"text":"File: `train_texture_with_morphofeatures.py`\n```python\n#...\ndef training(project_directory, texture_type, config_file, devices, from_checkpoint=False):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":116,"startColumn":0,"endLineNumber":233,"endColumn":0},"embedding":"AID8PADgQD0AgHQ9AOC4vQAgJ70AYHO9ACCnPQCADjwAgEO9AIAIPABAobwAgAk9AECAPQCAnb0AwAK9AADxPACAUbwAAL27AMDKPAAANDwA0Ik9AIDOvACAPL0AIB69AEC9vABA0rwAQKQ8AMAkPQAgGz0AwK48AABmOwDAT70AABK9AMCZvACA9bwAAIS6AAD4OgDgoD0AAKA6AEAXvQCAHT0AoJ69AAAwPABgbz0AgGO8AACnvABARL0A0IU9AEASPQCQkD0AQM+8AIClvAAANDsAoCC9AMAUPQAAtTsA4Fm9AAAWvQAAjb0AgBS9AEBKPQBgIL0AIIU9AABevQAA6LsAAPU7AGBZvQAAFLwAgPS8AAChPADA2rwAID69AECFvAAAOTwAgBo8ACBMvQCQgL0AsMg9AMDevADARL0AAHQ7AADAuQBgGb0AgBq8AABWvQAAhL0AgHm8AAC9uwAAyrsAgGa9AACwOgCwjz0AoDe9AABxPQAAcrwAAPw7AABaOwBQ3L0AgIU8AACqOwAAcbwA0Ig9AIDvvADAMz0AwIA8ACA7vQAAaDwAgAK9AIDYPAAAST0AYEm9AEDxvADwqz0AAOI8ALDmPQAAQb0AgBg9AIBGvQCAPzwAIBK9AEDFvABgjD0AEK+9AJCIvQAApzsAQDE9AAAauwCgGL0AoJW9AGAevQAACjwAAII7AEBnPQCAa7wA4CO9ACDXvQBgEb0A4Ao9AIBzPACAYT0AwGe9AADPuwBA8rwA8LQ9AICOvQDA4zwAACu9AGAMPQAAxzsAgJQ8AACTvABAtrwAII49AAA6PADgFr0AAGC9AIDMvADg8T0AgCe9AMCCvAAAZDsAgIS9AOAwPQDA8DwAQJu8AAC8PABgWb0A4Gw9AACJvADAEr0AAAA9AACJPAAAJjsAwPO8AMDSPAAAcb0AgDO8AOBXvQAA/7wAwGW9AECrvAAgNz0A4Aq9AMCePAAATTwAAH69AMAzPQCAtjwAAKu7AJC9PQAA3LwAgFC8APCsPQDAiTwAwOU8AAC1vABAqD0AAHc8AAClOwDA57wAwPS8ACBHPQAAwDgAADo7AGCXvQBAL70AAIA6AACjuwAgzr0AQL08AACCvAAAFLsAoBE9AMDJPABAzbwA4A29AAAUuwDAEb0AgFQ9AABeOwAAGz0AwIO9ACBLPQCA3zwAwFQ9AOAbvQAgCb0AAJ+9AKBAPQAAC7wAALO8AKAsvQDADj0AAGA5ABDaPQBgjL0AgIG8AAA+vQAgjj0A4EI9AEBhvQCgQD0AAFq8AKAivQBgHj0AgLg8AAAZvQBQib0AQNw8AOAbPQAADrwAUKs9AADbuwDgYr0AAFA9AMCuPABgSr0AwBy9AKAkvQAAJb0AQMM9AED9PACAlb0AgD08AAA8uwCAoDwAwOC8AED9vACAu7wAQG69AACJOwCA3zwAYHk9AIATPACgfL0AwNo8AECDPAAgKz0AAIq7APClPQAApjwAID29AECyPAAArDwAYAm9AMCjPACAXLwAYE29AOBdvQBA3bwAANO7AEDLvACAc70AgAC9AACsugBgAz0AwOG8AAC3uwAAkzsAAGw7AIDuPABAT70AAGi6AABYvQCAW7wAID09AIAyPACAXr0AsKU9AAC6vABgFr0AwLm9AOBnPQAABDwAQMw8AMD9vAAASj0AgGM8AOBTPQAA9rwAYDO9ALCivQBAGT0AQJm8AADPuwCgMD0AQK28AADZOwAA4rwAABg8AEDbPABgjL0AAHY8AADQuQCABD0AwEE9AACQuwDwhz0AADI7AIBgPABw770AAOG8AKDGvQAA6DwAQE49AECXPAAAAT0AABQ9AICqvAAANLwAgDG8AAAOvABAz7wA4DO9AOAnvQCAML0AIFK9AICvPADAgrwAAAA7AJCGvQBgIz0AoCc9AAA+PACAHb0AoBU9AIBMvQBgnj0AgJU8AABoOwAANbwAgDQ8AOARvQBARL0AwEG9AACBOwDgPj0AkJI9AIC6vADAxDwAwOg8AAC6uwCAqT0AAOi8AOCAvQDA47wAoC09AECqvACAoLwAgA28AOCWPQCAcrwAAOO7AAAdPQCAojwAkKM9ABCQPQCgzz0AAKc8AADROwAgQb0A4Ei9AACVvAAAizsAwPM8AED+PQDgHT0AwI28AMDxvABANT0AgI09AKAUvgAAEjwAMJq9AACuvAAAVb0AILO9AAAoOgDAFr0AALC8AABsPADAozwAgDO9AGAMvQAAcLsA0LQ9AABPPAAA3DsAAK07AABcOwDAqTwAgNG8AIA+PQCAez0AgBU8AIC7vQCArrwAACS9AKBKPQAAbLsAABu8AIAdPADAPD0AAFS7AADHvACAFrwAAOC7ACBuPQAgCr0AgEC9ACBFvQCAMbwA4BK9AABiuwDwkD0AwK48AJCSPQAAUbwAsIY9AKALPQCQ4z0AAOQ7AIBdvABAgrwAgNK8AIBwPADQpT0AACY8AICWPACQEL4AgEI8AMCZPACgOD0AgGm8AOAQPQCgBr0AQPq8AADmvACA6bwA4Ec9AOCgPQDAGz0AwD29AMCKPACAArwAeBw+AICEvQAAlDsAAPm7AECLPQCAGzwAAJM7AOB3PQAAKrwAwHa9AKCyvQDgPr0AQLq8AIATPADA17wAQLE8AAATPACACrwAgGc9AEA8PQAAEDsAgCc8AEDqvADA5rwAAGi8AABiuwCA3jw=","chunkHash":"1e6cb2bd3313c227d7b3e08afd058d4e47cdb50663af6de326eed9a37ffd3b29"}]},"file:///teamspace/studios/this_studio/train_tiff_model.py":{"hash":"a9f2e9a44fc8227296e5f972eb387cf561463f020751a54a441a17e2c8dc2a41","entries":[{"text":"File: `train_tiff_model.py`\n```python\n#...\nclass UNet3D(nn.Module):\n    \"\"\"A simplified 3D UNet model.\"\"\"\n    def __init__(self, in_channels=1, out_channels=1, f_maps=[32, 64, 128, 256], final_sigmoid=True):\n        super(UNet3D, self).__init__()\n        \n        # Encoder (downsampling path)\n        self.enc1 = self._make_encoder_block(in_channels, f_maps[0])\n        self.pool1 = nn.MaxPool3d(kernel_size=2, stride=2)\n        \n        self.enc2 = self._make_encoder_block(f_maps[0], f_maps[1])\n        self.pool2 = nn.MaxPool3d(kernel_size=2, stride=2)\n        \n        self.enc3 = self._make_encoder_block(f_maps[1], f_maps[2])\n        self.pool3 = nn.MaxPool3d(kernel_size=2, stride=2)\n        \n        # Bridge\n        self.bridge = self._make_encoder_block(f_maps[2], f_maps[3])\n        \n        # Decoder (upsampling path)\n        #...\n```","range":{"startLineNumber":16,"startColumn":0,"endLineNumber":32,"endColumn":0},"embedding":"ACAzvQAASL0AQEM9AMClvQCAQ7wAQLC8AEAcPQCwhj0AAOm8AMD8PACgRr0AAKG7AAARvAAAYDkAgDE8AIAGvQDAwjwAAAg7AIApPQAAALoAAEw8AAA5vADgnD0AwLi8AGAUPQCACDwAIAA9AACVvADgML0AAJM8AICKvAAgBb0AgNa9ALCBvQDA4rwAgD48AAAAvABgjj0AYMu9AADDOwAAVD0AYFG9AIAivQAAuDoAgDA8AOARvQDAJr0AoFg9AIAlPAAAYz0AoDW9ACBpPQAAibwAAGM9APCavQCAsTwAADg6AICjvAAAwLwAQOG8AICfPACgCL0AABC6AADXPAAAhzsAgFg8AGASvQAgET0AUKS9AABWuwBgXL0AYDe9AAC9PAAADDsAgB49AAAwPQCgc70AcIw9AAACuwCANLwAwCY9AIBLPAAAdjwAgEe8AAC4OwAAvL0AgF29AACsvAAABDwAgDc8AMCiPAAAuLwAwLO9AMB7PQAAqzwAAGC7AABuuwAA5bwAAFw9ABCNvQAAeLsA4IA9AIDrvAAgFb0AgEG8ACAgvQAAibwAAIw7AAAQOgCAiz0AwKS8AADgOQBgnD0AQKo8AMDFPACgEL0AQK+8ACBDPQAAb7wAgNq8AMDaPABA1bwAAI08AMDHPAAAKD0AAGg8ANDAPQAAh7sAABm9AIAIPQCAWjwAIDU9AICpPABwib0AAOS6AJDdvQCQ0r0AAHg7AKB1vQAA6DoAwJu8AIDsvAAA3jsAAOA5AAAeuwAwmz0AgHm9ACDfPQAAzLsAAKa7AFCBvQCALzwAYDM9ABCVvQAgnL0AgF+9AICSvABgNz0A0Lo9ADCHvQCAg7wAIHE9AABlPACgdj0AgK+8AEDbPAAAg70AAKK7AICqvACgqr0AsKQ9AACcugAAOTwAALC5AGBwPQDAAr0AwIW9AMBTvQBA5rwAAAS9AIB7vACgJj0A4I29AICMvABA2LwAAO87AOBRPQDAozwAAPQ6ACB5PQAwj70AgM09AGAoPQAASLoAYCI9AGAePQDAXD0AoJG9ACCLPQAASD0AoBi9AMBgPQBAd70AQJe9AGCCPQAgHr0AgA+9AADbuwBAV70AgJM9AMDjPABAoTwAQFE9AOA5vQBgpb0AQKA8AAD5uwCAgTwA4Cc9ACAZPQCAGz0AIDw9AACXPADAOD0AABA6AADpOwDAIb0AIHe9AIAdvACAiTwAgLE8AICWvADgXL0AACc8ACALvQAA5rwAAKE7ALCPvQAA87sAAIc7AABpPADgLD0AsKS9AGAQPQAA+jwAAB67AEDCPABAkbwAgAW8AOChPQAgYT0AAJE9AMBgvQAAFr0AAJC8AOB7PQAAkLkAAPw7AAD7vACAXbwAgHg8AIBDPACAZrwAwMs8AAAoPACA+zwAAFC6AECLPABA0DwAgGg8ACBUPQBwpL0AAPW8AMAnvQCgBb0AwEo9AIBwPAAAoLkAIDw9ACBIvQAgQr0AAB28AACXPQAAqT0AQKe8AAAQPACAhzwAAC89AIBQvAAAZr0AEK09AIBDvQDgSb0AABA6AABTPAAA4LwAYEy9AIBjPADAD70AQIO8AAC4OgAAVLsA4DK9AAD8PADgE70AIAg9AIASvACAujwAQOI9AIBRvAAA3LwAIDo9AIC+vAAAZrwAgJA8AACROwCABbwAoCG9ANCgPQBArj0AgHu8ALCPvQAApDsAQH49AIB2vABgaD0AgDO9AABEPQCgRL0AwNq8AIDkvADgBL0AwIU8ACCmvQCAkTwAwKy8AOC+vQBwmz0AQJg8AADYOwBQh70AAH29AOBdvQCAGrwAYDq9AKCNPQCAW7wAwHQ9ACC0PQCASTwAQFU9AIBgvQAAKDoAsMy9AFCkPQBALj0AANC7AACBOwAAyLsAAAw7AADluwAApbsAIFM9AAAAuwCgZr0AAI87AEDovABgSj0AIFy9AICwvACArrwAQAA9ADCyvQAA3zsAoC69AMBzvQAAYDwAEJY9AMCWvADA7rwAoC09AAAAuwCABzwA4Dm9AIB4vABA0rwAwDQ9AEBSvQAABr0AAPQ8AADNuwCAAL0AAPU7AOBVPQBA0T0AICi9AAABPABAI70AAIs8AECOPQAAvLoAgMk8AABouwDg4b0AACa9ANCePQBw/j0AANE7AAC5OwCAeLwAAIA6ACDWvQAAk7sA4KK9AOBYvQBgbL0AAP47AICWvABAnbwAQG89AABwOgAA7rsAQNQ8AADwOwCgYb0AQDq9AKBJPQDAr7wAAFM8AIB8vAAwyj0AICI9APCyvQDAeT0AQAs9AABMPAAAnrwAgOQ8AIAvPABgMD0AgBA9AECnvAAgnb0AYBS9AAC8OgAAk7wAELW9ALCgPQAgZr0AACy8AIDyvABAg70AgC48AEDUPADALT0A8Ky9AMCiPQDAcj0AwIE8AABaOwAAGz0AAK28AACivADA4zwAwFe9AAAjPAAAe7wAAP07ACBFPQAAG7wAwNA8ACAWvQAAXT0AQJs8AABUPQAAdLwAADA9AIC5PABgKD0AALG8AIDgPACAJb0A4DG9AEDQvABApLwAcL09ACBzvQAwhb0AAOi8ACDaPQBAOb0AAE67AGAwPQCAQ7wAAJa8ACBevQCgRr0AgAi8AKAAvQAAcrwAMOc9AAC8ugCALD0AgBY8AMCePABARb0AoBW9AGCCPQBgWr0AQMS8AKBCvQDgIj0=","chunkHash":"33ce61b2c19264a3cce3d6a49294f90c13fb29a634c52b218a6c87d01e7b4fea"},{"text":"File: `train_tiff_model.py`\n```python\n#...\nclass UNet3D(nn.Module):\n    \"\"\"A simplified 3D UNet model.\"\"\"\n    def __init__(self, in_channels=1, out_channels=1, f_maps=[32, 64, 128, 256], final_sigmoid=True):\n        #...\n        self.upconv3 = nn.ConvTranspose3d(f_maps[3], f_maps[2], kernel_size=2, stride=2)\n        self.dec3 = self._make_decoder_block(f_maps[3], f_maps[2])\n        \n        self.upconv2 = nn.ConvTranspose3d(f_maps[2], f_maps[1], kernel_size=2, stride=2)\n        self.dec2 = self._make_decoder_block(f_maps[2], f_maps[1])\n        \n        self.upconv1 = nn.ConvTranspose3d(f_maps[1], f_maps[0], kernel_size=2, stride=2)\n        self.dec1 = self._make_decoder_block(f_maps[1], f_maps[0])\n        \n        # Output layer\n        #...\n```","range":{"startLineNumber":32,"startColumn":0,"endLineNumber":42,"endColumn":0},"embedding":"AOAtvQAAL70AoAE9AFC0vQAA9bsAQKi8AAARPQBQiT0AAH28AKAOPQCAT70AAK+7AADguwAAobsAADc8AAAEvQAA5TwAgH08AABFPQAAJjwAAJg7AMCOvAAQhz0AAKe8AIAcPQAAljsA4AM9AACwugBAN70AwLs8AIC2vADACr0AoM29AJCIvQDAsLwAgCw8AADvuwDAkj0AUMK9AACMuwAAST0AQBW9AADSvAAA9jsAANs7AID3vABgYr0AwHY9AACkOgCASj0AgCm9AEBpPQCAZbwAQEE9ACCjvQBArDwAALw6AIB9vADAlLwAAK+8AIB3PADAA70AAOU7AADqPAAAOjsAABs8AGAevQDgHz0AQKG9AABsuwBgfb0AIF69AADGPADAlTwAgBs9AOBHPQCgVr0AQH49AAAQuwCAQrwAQDQ9AABMPADArTwAAG28AACAOwCQrb0AQH69AACcvAAAWTwAAII8AIDTPADACL0AMK+9AKBlPQCAnzwAANO7AADwuQAAfbwAoEw9AJCQvQAAzbsAoGk9AEDgvABA47wAgN+8ACAfvQBAwLwAAFg7AADUOgBAjT0AAOm7AABoOgAQnz0AwL88AECTPAAgHb0AQM28AEAmPQCAUrwAAB+9AAAJPQAgC70AgDs8AIAxPABgTz0AAFg8AFDEPQAAKLsAQBW9ACAgPQCAGzwAoFY9AAClPACwgb0AABC8AODVvQAwyb0AAAQ7AMBdvQAAJjsAQIO8AOAAvQAAozsAAJ27AAAavACAoj0AoFC9ADDiPQCAGrwAQIW8AMCUvQCAZjwAYD09ABCmvQAwkb0AgC29AACAuQBgJT0AAL89APCVvQAAN7wAIE09AIAWPACgUz0AAKS8AIAPPQCAZ70AADa7AECpvABQwr0AoJI9AACAuwCAXTwAAPy7AEA2PQAAsrwAAG29AMBBvQDADL0AABu9AIBlvABAET0AEIG9AIBzvACA0LwAADC6AIBRPQAA+jsAAD67AJCOPQBAjL0A4Lc9AAA+PQCABDwAoDY9AKBSPQBgdT0AYGS9AJCRPQCATj0AIAy9ABCHPQBgkr0A8Je9AGB8PQDAGb0AAOG8AADIugDAZb0AsJc9AEDSPADAjjwAYE49AIAhvQCwl70AgH48AAAmOwAAODwAgFA9AMAkPQDAIT0AoEI9AIB/PACAKD0AAKw6AABuOwCgJr0AgGa9AAAYOwCAlzwAQJw8AMDbvADAX70AAJA8AIDHvAAAAb0AABE8AFCPvQAAebwAANs7AABuPABAOD0AwKm9AMAaPQAgAj0AAGq7AIDSPACATLwAgFi8ADCvPQCQiD0AQJM9AGAsvQBAHb0AAKi8AGCTPQAAZrsAgC08AMADvQAAR7wAAPA7AIAePABAjLwAwOY8AABUOwBAwDwAAAC5AIChPADAqzwAgGU8AOBEPQCwtb0AAOy8AOACvQBAAb0A4DI9AIAGPAAA+DoAYDw9AEAcvQCgFL0AABW8ABCXPQAQnj0AAJi8AAB+PAAABbwAAFk9AACBvABwj70AALA9ADCKvQDARL0AgCo8AACsOwBgEL0AIGa9AAC4OwCAI70AAHe8AABCuwCAK7wAgBu9AED1PABgPr0AAK48AABqvAAAdjwAoN09AAAyvABA5rwAACQ9AADRuwAAC7wAwIE8AACKOwCAn7wAAOy8AJCYPQCAqz0AQIe8APCXvQAAIjwA4HI9AEDAvABgTz0AwHa9AGBFPQCATr0AwO28AEAbvQAA7LwAwJE8ANCJvQBAnDwAgMW8APC8vQCgsj0AgNg8AACHOwAAYb0AIFu9AABAvQBAh7wAwGm9ABCIPQCAfbwAYF49APC8PQCAnjwAkII9AGBrvQAAnLsAgN69ACCpPQBgND0AAM27AABFPAAACDsAgEY8AAACuwAA7bsAoEo9AIBqPABgTr0AADI7AECYvAAgcT0AwES9AADlvAAAHrwAwJY8AKCyvQAAAjwAgCK9AHCRvQAApTsA4Jo9AACPvABACL0AYCQ9AIAyvACAIzwAwCS9AEAAvQDgDL0AQCM9AGCAvQBAvbwAgIc8AADoOgCgAb0AgGg8AMBSPQCg3D0A4E+9AACAOQBA+7wAAF08AOB4PQAA4jsA4AE9AIBTvACQ+L0AYEW9APCrPQAA9T0AALM7AAB6uwAAibsAAE47APDXvQAA5bsA0Ke9AEBkvQBgg70AAFw8AAAcvACATLwA4EY9AABOOwAA+LsAACU9AACIOwBggL0A4AK9AKA1PQBA27wAAMM7AIAUvABgwD0AoC89AJC8vQAAgj0AQD09AACrPAAA0rwAQKc8AABDPAAgLD0AwDU9AACzvACQj70AYES9AICRPAAAi7wAANW9AMCTPQDAXb0AgGO8AEC2vAAAa70AAOW7AECSPACgHz0A0MO9AMCSPQDAaD0AAL88AIANPABgFj0AwO28AICLvABAozwAoHq9AIA7PACAG7wAAAI8ACBZPQAAR7wAgOc8AKABvQAAVj0AQIY8AOBHPQCAjrwAAAk9AECHPABgCD0AAH+8AMAXPQCACr0AIBm9AMDRvACApbwAoIs9AOCLvQAAYL0AgNC8AGDXPQAgML0AAGi6AOAKPQAAJrwAAFy8ACBOvQBgPr0AgAm8AIDhvABAlbwAkOE9AADpuwCAHT0AgG08AECePACAxrwAgPm8AMCNPQDgV70AALK8AMA+vQCgFz0=","chunkHash":"7bb7af73ef00dbbe70f2c798bfe78b165d2309e7dce1b90dfac5098af29361c0"},{"text":"File: `train_tiff_model.py`\n```python\n#...\nclass UNet3D(nn.Module):\n    \"\"\"A simplified 3D UNet model.\"\"\"\n    def __init__(self, in_channels=1, out_channels=1, f_maps=[32, 64, 128, 256], final_sigmoid=True):\n        #...\n        self.outconv = nn.Conv3d(f_maps[0], out_channels, kernel_size=1)\n        \n        # Final activation\n        self.final_activation = nn.Sigmoid() if final_sigmoid else nn.Identity()\n    #...\n```","range":{"startLineNumber":42,"startColumn":0,"endLineNumber":45,"endColumn":80},"embedding":"AMAfvQAAFr0AgKE8AOC4vQAArbsAQBm9AKAGPQDQjT0AAPi8AAAMPQBgLr0AgJ08AAC/OwAAKLoAAGg6AADlvADA1TwAACY7AGAMPQCAXDwAgBa8AADAOABgjD0AQP68AMDgPAAAXrsAgGs8AIDWvADgHL0AgHw8AEDzvADAJb0AANu9AOB5vQAArLwAAEI8AIAlvACglj0AsLm9AAAnvACgAj0AoES9AEDFvABAljwAgAk8AAA/vQCASr0AAGI9AAAaOwDgej0AABa9ACAiPQAAgbsAgEA9AGCcvQBAqDwAgFU8AACUOwAA3rwAoAS9AIAhPACANb0AQJQ8AMDxPAAAXzwAgAA8AKAQvQBgDD0AcI69AMCfvADgjr0AgEy9AACPPACAeTwAQO08AIBAPQAgib0AoIw9AACVuwAAGrwA4CY9AADzPAAAATwAANe7AMCDPADwxL0AoHa9AIDUvAAADjwAgBw8AABSPABAh7wAUKa9AKCZPQCAajwAAH68AADQPACA87wA4Bo9AMCLvQAAULwAELQ9AEDOvAAAGLwAgBa8AAAYvABAgLwAAFK8AACmPACgmT0AAOu7AABUvAAg3j0AgJ48AAB1PADgPb0AQO+8AEAvPQAA+bsAwPq8AACyPADA7LwAgBK8AABQPACAej0AACA8AGCdPQCAUzwAwNW8ACADPQCASjwAwGo9AMD3PABAjL0AAMs7AKDrvQCAlb0AACQ8AECSvQAAibsAwNq8ACAKvQAAFDsAAFy7AACEuwAAgD0AQKG9AOD4PQCAKTwAALi6ABCAvQDAkzwAoEQ9AJCQvQAglr0A4Ba9AACzuwBAAT0AEJs9APCavQAApbsAwG49AICtPADgOj0AAIi6AEDmPADAYL0AwLK8AIAevABAtL0AEJ89AADTuwCAhTwAANi6AKArPQCAhbwAYIO9AEDPvABgHL0AYCW9AABmuwAgNj0AAIC9AADKuwAACrwAAFa7AKBcPQAATbwAAPs7AOBxPQDwib0A8J49ACA/PQBAkzwAAO48AEBWPQAgVz0AYIy9AEBePQAgZz0AoDG9ALCAPQDAlb0AwEC9AAD4PAAADb0AAJm8AAAKPAAggL0AwIU9AGAkPQDAljwAIF09AMAtvQCwpb0AQMQ8AAD4uwAAsDsAwGA9AIAxPQDgMT0AAPQ8AMDtPAAAIz0AAMc7AAAfPADAP70AYIy9AACLOwAA7LoAYAk9AIAfvQCgWL0AAEA5AMAzvQBAGL0AAHQ8AMB+vQAAjLwAALS7AOANPQDAKj0A8Mu9AGACPQBAqzwAAPC5AADJPAAAADkAANy6AKC8PQBgYT0AQKE9AKBKvQAgEr0AAGa8AOA3PQAA0DsAAEE8AEAcvQAgA70AACI8AAAeOwCAnLwAAIs8AADTuwAgAj0AAGS8AAC6PADAojwAAH48AOAtPQBwqL0AAJC5AMAtvQDA37wAIGo9AAA1PAAAUzwA4Eo9AEA1vQBAPb0AAHq7ACBXPQCgnD0AwMy8AADdOwAAXDsAoFw9AECIvADQib0AAKg9AMAcvQCgc70AAPc7AACrOwAAd7wAoFK9AACguQAALr0AAGy8AACZOwAAmrsAYCG9AADMPABgPL0AwBA9AIDDvAAAkDwAMOk9AADougDgYb0AAFQ9AECIvAAAWDsAAAE8AABwuwCAfrwAgMu8AICuPQBwtz0AAJq7AIBwvQCAcTwA4H89AIC5vACQgD0AgGS9AOBNPQAgR70AgJi8AMA+vQDAKL0AAMM8AICMvQCA3DwAgFu8AECjvQDQrD0AgIw8AAD8OwAgjL0AgHq9AEBYvQAA4DsAgFu9AIA/PQAA+LsAwGc9AACWPQAAjzwAoHA9AOB7vQAAw7sAsPO9APCKPQAgIT0AgFq8AAAYuwAAsjwAAJw7AACAuQBAk7wAwE09AAC/OwDAPr0AAMU7AEA4vQDAIj0AYHS9AIAivQAAXrwAAB88AOCZvQAA1bsAwE69AMBNvQCAHDwAIJY9AACEvADgCb0AwC49AACWOwCAojwAAAm9AMDqvACgLr0A4CQ9ADCGvQAAibwAAOY8AAAAOACAu7wAAOQ6AGBqPQCg6D0AwAW9AIAbPACANLwAAJ87AICAPQAAU7wAgNk8AABVvACQt70AoBW9APC1PQDgAT4AAKA6AAAgugCALbwAAF88AKDNvQAAKLwAYJK9AMBevQCAmb0AAIw7AADquwDA3rwA4HI9AAB4OwAA5DsAgAk9AACzuwAgUL0AgCK9AMBnPQAAgbwAQI08AACsvACwyj0AAOQ8AADYvQAAqz0AAFQ9AIBsPACALzwAAMc8AEC+PACgID0AQLA8AABIvABAH70AgEW9AADQOQAA7rwAwLe9AECMPQDAMr0AQJ68AEDAvACgiL0AgAS8AIBNPACgYj0AMJ+9AFCXPQAAWj0AwLw8AIDtPAAAOD0AgOK8AABivADABD0AoHq9AADjOwAA7rsAAPg6AJCbPQCAabwAgAs9AMA6vQBAPz0AAMU8AMBnPQDA7LwAICU9AACpPACAwDwAAMu8AIDrPABAw7wAYAi9AIA3vABA07wAQOE9AOBCvQAgc70AgBC9ANDbPQCgW70AAFi8AMDAPAAAKrwAgIe8AEBAvQAgJb0AAA67AADZvABA07wA4NA9AABUuwAgWj0AAHi6AAAIPAAAfbwAwM68ACB4PQAARb0AALW8AABMvQAgWD0=","chunkHash":"5a73d9c256935bc1be546bdce641301de4a64692937e400008697f77d907692b"},{"text":"File: `train_tiff_model.py`\n```python\n#...\nclass UNet3D(nn.Module):\n    \"\"\"A simplified 3D UNet model.\"\"\"\n    #...\n    def _make_encoder_block(self, in_channels, out_channels):\n        return nn.Sequential(\n            nn.Conv3d(in_channels, out_channels, kernel_size=3, padding=1),\n            nn.BatchNorm3d(out_channels),\n            nn.ReLU(inplace=True),\n            nn.Conv3d(out_channels, out_channels, kernel_size=3, padding=1),\n            nn.BatchNorm3d(out_channels),\n            nn.ReLU(inplace=True)\n        )\n    \n    def _make_decoder_block(self, in_channels, out_channels):\n        return nn.Sequential(\n            nn.Conv3d(in_channels, out_channels, kernel_size=3, padding=1),\n            nn.BatchNorm3d(out_channels),\n            nn.ReLU(inplace=True),\n            nn.Conv3d(out_channels, out_channels, kernel_size=3, padding=1),\n            nn.BatchNorm3d(out_channels),\n            nn.ReLU(inplace=True)\n        )\n    #...\n```","range":{"startLineNumber":47,"startColumn":4,"endLineNumber":65,"endColumn":9},"embedding":"AOBDvQCgXL0AwJY8AKDBvQAA67sAgBu8AGA+PQAgWj0AADG8AIDgPAAgEb0AgCE8AICpPAAAxjsAQLw8ACALvQDADj0AAHY7AGA9PQAAjTwAALI7AAD7uwBwlT0AgIe8AMDzPAAAEDsAwIs8AADEugAA+7wAwIk8AMDwvABA9LwAcLS9AOCCvQAATLwAgA68AACyuwCgTz0AAKO9AAAJvACgXD0AwES9AIDdvAAAezwAAEg8AADFvACgP70A4Hg9AAD6OwDACD0AAPq8AGBXPQCArLwAIBw9APCmvQCA5zwAwJi8AAD0uwAAeLwAwMy8AACoPAAAbLwAQIQ8AIDcPAAAjLoAgBI8AOA0vQCgIT0AMKe9AAAAvACgSL0AoFa9AIDmPABAsjwAQCM9AKAZPQCgdb0AEIw9AABougAALLsAwEE9AIBoPAAAPTwAALy7AADWOwDgkr0A0IS9AAB8vADAqzwAAMo7AEANPQAA4LwA4LG9AGAwPQDAMD0AgAs8AMDDvAAAgLwAgE89ACCQvQCAPLwAYBk9AADevACAU7wAgI+8AGAjvQAAYbwAABC6AECAvABgNz0AQPC8AACgPAAQpz0AAIQ8AMC9PACAGb0AAE+8AEAPPQAASLwAAOG8AEDrPACA4LwAAHY7AIBFPAAgOD0AAJW7AHC6PQCAo7wAwPi8AMDuPAAAOjwAIHI9ACAEPQBwlb0AgAm8AGD3vQAQu70AALC5AGB5vQCAmDwAgE+8AMDkvAAA1bsAAJU7AIDqvACAiT0AYGS9AGC5PQAAkDoAAJu8ABChvQDA/DwAQEA9AKCPvQAQvb0AgEW9AAA4uwCAHT0AAMg9AJCdvQBAxbwAgJM9AIBoPAAwmz0AIAa9ACAVPQCATL0AAD67AADdvACgpb0AQIQ9AAA6OwAA/LoAAAe8AABcPQCA57wAwHG9AABfvQCAv7wAYAO9AIBivABAej0AwHu9AACWuwAAoDkAALe7AIA+PQAAoTsAgJi8AGBdPQAArb0AcMA9AEC7PAAAXTwA4C89AGBHPQAgeT0AQGK9AJChPQDgZj0AAOW8AMBrPQCQtr0AYJm9ABCBPQDAML0AYCi9AICRvAAgY70AoIk9AAC2OwAAn7sA4E09AMAjvQCAVb0AgIA8AIAevABAizwAgBs9AMAOPQAADz0A4B09AACyPABgXT0AAJA5AAADPAAgRb0AUIW9AAA8PAAAQDkAgHw8AIBevAAgMr0AAJ48AECavACAfLwAAAi6AOCMvQAAT7wAgLk8AICrPAAAQj0AMK69AEBcPQBA/DwAAPm7ACADPQAgA70AAAi8AICsPQBgbz0AEIA9AMApvQAA6rwAgKW8APCDPQAA/LoAgHQ8AADJvACAHrwAAOC7AIC6PACAVLwA4B49AABcPABAmjwAANs7AICcPABA3DwAAKU7AKBbPQCAor0AwBK9ACANvQAAB70AQPk8AICTPACAE7wAQF49AEChvADAK70AAEi8AOCWPQAgvD0AABG9AAA4OwAANjsA0IM9AIB5vABghr0AcMc9AMBlvQCgMr0AgFA8AAD8ugAArrwAwDS9AICMPAAARL0AgJq8AAAQuwCAGbwAAGm8AADsPABAX70AwLs8AACPvACABjwA4Po9AAC4OwCgJb0AoAY9AADGvAAA6LsAAEq7AAAHvAAA+LoAAC29AOCcPQDgmz0AAO+8AKCyvQDAwjwAIGo9AMDQvADgdz0AwEm9AEBWPQCAW70AwCS9AOAVvQBAHb0AgDA8ABChvQAArzsAgA29AADJvQDQpz0AACU8AACuOwBgfL0AIFy9AGBBvQBAv7wA4G+9ABCOPQAAQLoAoGk9AHCXPQAANDwA0IM9AIBivQAAbzwAkOO9AHCrPQCgLz0AAIS7AAAZPAAAJLsAAJw8AACPuwCAJTwAIFQ9AABLPADAQb0AAGA7AAC/vAAgLT0AwDS9AGAEvQAAFbwAoBA9AADOvQAADrwAYAy9AOBqvQBA1zwAsJE9AEC2vAAAQ70AgMc8AMCivACAjDwA4Cm9AEDfvAAAQrwAwB09AMCAvQBApLwAAOQ8AAC8OgDAp7wAQNI8AKBzPQDA2j0AwEC9AAAkPACAubwAgBE8AOCJPQAA1jsAwPA8AADoOgDg970AgFS9AAC2PQAw1z0AAMy6AABguQDAjbwAwJE8ALDfvQAARLwA0Ie9AMAyvQCAkL0AADK7AAAqvAAAYbwA4Eg9AAARvAAAVLwAQP08AABQugBgjL0A4AC9AIDZPAAAC7wAgB48AIDQvACQzT0AICo9ANDDvQBAaT0A4BE9AADKPADAwbwAQCc9AAC5PABACj0A4DM9AECuvABAlr0AYDa9AABMOwCAOrwAAMm9AKCMPQDAG70AANC7AIByvABggr0AAGA6AABwPABgKz0AEK69ACCDPQDAnz0AgBA8AACnOwDA5jwAwLy8AGAlvQBAFz0AoHW9AAAeuwCA+bwAAE08AKBfPQAANbwAoE89ACAWvQBATT0AgEA8AMBPPQCAwbwAQBE9AIDAPAAAdDwAgBC9AMDUPABAy7wAIHu9AKACvQDA47wAgL49AOBevQAgg70AgLC8AJDGPQAA6bwAAMM7AGAZPQCAP7wAgBS8AGBCvQAgfb0AAOc7AMCfvABAh7wA0NU9AIAiPABA9TwAADI8AIBWPACAQr0AgI+8AIB2PQDwh70AgFC8AMAkvQCA/Dw=","chunkHash":"204eb5f7694a84defae01ca5c99be0baad481715d67f81452dc4b890d7b56d60"},{"text":"File: `train_tiff_model.py`\n```python\n#...\nclass UNet3D(nn.Module):\n    \"\"\"A simplified 3D UNet model.\"\"\"\n    #...\n    def forward(self, x):\n        # Encoder\n        enc1 = self.enc1(x)\n        enc2 = self.enc2(self.pool1(enc1))\n        enc3 = self.enc3(self.pool2(enc2))\n        \n        # Bridge\n        bridge = self.bridge(self.pool3(enc3))\n        \n        # Decoder with skip connections\n        dec3 = self.dec3(torch.cat([self.upconv3(bridge), enc3], dim=1))\n        dec2 = self.dec2(torch.cat([self.upconv2(dec3), enc2], dim=1))\n        dec1 = self.dec1(torch.cat([self.upconv1(dec2), enc1], dim=1))\n        \n        # Output\n        out = self.outconv(dec1)\n        return self.final_activation(out)\n#...\n```","range":{"startLineNumber":67,"startColumn":4,"endLineNumber":83,"endColumn":41},"embedding":"AEADvQBAVL0AQPc8AFC9vQAAjzsAwIe8AGAqPQBQtD0AgCO8AIDIPABgaL0AgDK8AIAuPAAA/7sAAKy7AMAXvQBgIz0AAM07AEA3PQBAyjwAAMo7AAChvABgjz0AgEq8AIDvPAAAFD0AgEA9AIARvACABL0AQJo8AIBXvABAGb0A0MW9AEB5vQCAXbwAwJg8AACCuwBwpj0AMKe9AICKvAAApT0AAE29AOAgvQAA17sAAJA5AKBBvQDACL0AgC49AICMPABATz0AAM68AMAzPQAAOrwAgIs9AGCSvQCAYjwAAHy7AAAuuwDAAL0AAHi8AEDLPACAsLwAACS7AMAEPQCAhjwAQKc8AMDzvABABz0A0LO9AADAOgDAWb0AQCu9AAAZPQAAhTwAALk8AMA7PQAgTr0AgF89AICRPACANrwAgDk9AACAOAAA+jsAAF+8AAAJPACQzr0AwI+9AABtvAAAvDsAAKw8AIAzPACA47wAkKK9AIBZPQBA3jwAACA6AMCavADAnrwAEIU9AFCUvQAAabwAgGk9AICqvABAO70AAE68ACAGvQDAjbwAgEa8AACHvAAAWD0AwOS8AIAXPAAQqj0AwLU8AAAFPQCAEL0AAPC7ACAsPQCAsrwAgEK9AGA6PQAAPrwAAIE7AAALPADgJz0AADA7AIDQPQAAnbsAwCe9AMAOPQBAgTwAADA9AADWPADQkL0AACY8AGDpvQCgvr0AAIC4ANCevQBApzwAgCW8AMAAvQCAdLwAAJY8AACOvABQsD0AYDm9AKDdPQCAZbwAAFW8AAB3vQCAXjwAYAw9ADCIvQAgob0AAGu9AIB5vADAYz0AgLI9ACCcvQCAAbwAYDk9AACqOwCgKD0AQJm8AEC9PACAVr0AABA7AMDevACgz70AYIo9AAAIvADA1jwAAMS7AMBmPQAAA70AIG29AGArvQCAsrwAwCK9AAAMvABgHT0AsIK9AADmvADArLwAAKG7AMD2PADAoDwAAGK8AACgPQDAR70AwOE9AEAqPQCAPDwAwP48ACCKPQBAYT0AAEC9AKCTPQCAKz0AAFi8AKCJPQBwiL0AkKu9AGCSPQDAGL0AgNi8AABnvAAgZL0AIH49AADIPACAcLwAgAA9AEAJvQBgYr0AAIQ8AIBgPAAAjTwAQPI8AOAxPQAgCz0AgEo9AECmPAAA0jwAADC6AAAguQCgKL0AIGu9AAAAAAAAfTwAAFg7AIA2vADgTr0AAM47AACDvAAAH70AAFk8AECbvQAAmbsAgKM8AACzPABAHz0AQLq9AGAKPQAA6TwAgAC8AIDxPAAADLwAANy8AJC8PQCwgz0AQGw9AOBMvQAA2rwAwL68AMCjPQDA4bwAAKc7AACavAAAhbwAgCU8AABpPAAA8TsAQNI8AADkOwCA5jwAgFE8AADxOwAAuTwAAMM8AGBcPQAQkb0AwL+8AIA0vQAgXr0AIH49AIB3PAAACDsAgE49AOBNvQCADL0AAJG8ACDHPQCgqD0AQNy8AADiOwCAmLwA0II9AAB4ugDAbL0A8JU9AGBovQBgD70AAKC7AAATPAAAubwAwD+9AACxuwCAIr0AQNK8AIAOvAAAWDsAoAu9AEAlPQAgbb0AwLA8AICWvAAAljsAIPI9AIAQPADgNb0AgAg9AIBAvACAdLwAAOM7AADaOwCAfLwAwCa9ALCRPQAgmz0AwPC8AECCvQBAsDwAQFA9AEDcvADATj0AgFi9AGBvPQAAQr0AgJ28AKAjvQAgAL0AANA8AMCSvQBA7jwAgNC8ANCZvQAApT0AQNw8AIBQPAAQib0AgE29ACAZvQAA7bsAwD+9AOBTPQAAbbwAgGg9AHCqPQAA7DsA4JY9AECGvQCAOLwAoL29AMCwPQAgMj0AAMG8AICfPAAAyzsAAOg7AACsOwAAQ7wA4Cs9AAAwPABAVb0AgDs8AAAJvABgXz0AQPa8AEC5vACAu7wAwDU9AKC9vQAAADgAgDi9AICDvQCAPLwA4I49AACwvACA3LwAoCU9AECAvAAAoLkAwEO9AECBvABA5LwA4CE9AEBOvQAA8rwAgDk8AAC8OgAANb0AgFE8AIAWPQBA2T0AID29AAC8OwAA2LwAgK48AIB8PQAAhLsAwNo8AIA6vACACr4AgCO9ALCuPQCQ0j0AABY7AACluwAAjbsAAJW7AIClvQAABbwA0KG9AIA/vQCAib0AAPM8AICOvAAAqbsAwFM9AAAcOwBAqDwA4A49AABUuwBgd70AwAO9ACAXPQAAAb0AgAu8AAACvABQsz0AQCk9AACuvQDAdz0AgFk9AEDfPACAlrwAoE89AMC7PACARz0AQB89AEAGvQCAtb0A4AC9AACjOwAAIL0AgMq9ANCIPQBQgb0AAOw6AMDYvABA1rwAAP07AIDmPABAMT0AILq9AMCbPQBgUj0AAMI8AADIOwCAEz0AwKe8AMCjvAAARTwAQEu9AMCUPADAgbwAAEA8AKAnPQAAQDkAgLQ8AOAnvQAgUj0AgCq8AIA9PQAAUrwAgOw8AAB5PACAKj0AwI28AACGPADAc70AQEC9AEAavQBAIr0AQJ89AAB6vQBgb70AwMm8AFDfPQBgDL0AADq7AID8PAAAQLwAAPG7ACB6vQBgaL0AACI8AMDnvAAArLwAgNM9AIBzPAAAlTwAQL88AIDsPACgPb0AALi8AFCNPQAANr0AQKi8AIAOvQDAtDw=","chunkHash":"38d11657f07e22a1c0b6e909f53c9faaf60ffcd26a8f6d416cfa168e5a5e73fd"},{"text":"File: `train_tiff_model.py`\n```python\n#...\nclass UNet3D(nn.Module):\n    \"\"\"A simplified 3D UNet model.\"\"\"\n    def __init__(self, in_channels=1, out_channels=1, f_maps=[32, 64, 128, 256], final_sigmoid=True):\n        #...\n    def _make_encoder_block(self, in_channels, out_channels):\n        #...\n    def _make_decoder_block(self, in_channels, out_channels):\n        #...\n    def forward(self, x):\n        #...\n```","range":{"startLineNumber":15,"startColumn":0,"endLineNumber":67,"endColumn":25},"embedding":"AGAWvQDgT70AANA5ALDAvQAA8rsAQDS9AAAbPQDgZD0AgNS8AID0PADA2bwAQJc8AADAuQCAT7wAACQ7AIDlvADAlDwAAMU7AEASPQDAhjwAAI27AADsOgCAij0AwKi8AECvPAAAIDsAwIA8AADcuwCAFb0AgIk8AEARvQDACL0AoKG9ALCDvQCAirwAAOA6AECAvABQgD0AkK29AABguwDAKz0AIJK9AADZvADAjDwAAAI8ACApvQBgVb0AADo9AADAOwDwhD0AgNO8AIAvPQAA47sAwDA9AMCrvQBA5zwAAK27AADkOgBA3LwAwMu8AIBoPABgPr0AgN88AABAPABAlTwAQKI8ACARvQDAMT0AwIW9AACbvACAVr0AYCy9AEDXPAAALzwAYAo9AKAaPQBwhL0AcKc9AADSuwAARbwAQBU9AMBJPQAAtDsAAPC5AAC0PACwtb0AQF+9AIDpvAAA0zsAgBA8AIAkPAAAtbwAUJq9AKCCPQDArTwAAO+7AMCmPADADr0AACM9AAClvQAAjrwAMI89ACAGvQBAi7wAAKy7AICOvACAiLwAAO+7AAAVPACgbj0AgDy8AIAevADw0z0AgEI8AICiPACAXr0AwPS8AEA5PQAAWLwAgEa8AMDJPAAAfbwAAI+8AECLPADAZT0AAI07AFCDPQAAYLkAYBu9AIDePACAMTwAQEw9AMAZPQDQl70AAPo7ACD1vQDAbb0AgAM8AMCgvQAA+DsAAK+8AIDjvAAAWrwAgEe8AMCtvACgXT0AMKK9ABDjPQCAUzwAgDK8AMByvQCA5jwAwGo9AACSvQCwsr0AoC69AMCPvABAHD0AsKk9ADCXvQDAhbwAsIs9AMD5PABAdD0AAEy8AACQPABgV70AQKG8AADouwAguL0AsJo9AACgOwAAnDsAADi7AAAhPQCAV7wA4Fy9AMAlvQAgCL0AwOe8AAACvAAAYT0A4IW9AACgOQAAODoAALq7AMByPQAA/bsAAGY7ADCBPQDglL0AwLg9ACASPQBAxDwAQBI9AOAXPQAAeT0AQJG9AIBjPQAAez0A4BO9AEBWPQAQq70AQD+9AGAEPQBgQ70A4Ba9AAA4ugBwjL0AYJE9AMDyPAAAALsAoFo9AABNvQDwk70AYAI9AAA3vAAAKDoAoCo9AIAlPQBAND0AgBU9AMAMPQDAez0AAKm7AACaOwBgVL0AgJy9AMCFPAAAwLwAQBU9AADzvAAgX70AAAC7AGAqvQBAxLwAAJA6AMB0vQCAf7wAACI8AID/PAAABz0AkLq9AIDSPACAkDwAACY7AIDBPAAA8bsAAAa7APDBPQCgMT0AwIo9AABLvQDAu7wAAIQ6AGApPQAALjwAgB08AEA0vQAApLwAADY7AADWPABA/LwAgKw8AAAcuwDA8jwAwJG8AEDZPABAkDwAAM07AKBEPQCAmL0AAA28AKAUvQDgB70AoHo9AICzPACANzwA4Fc9AADPvAAgPL0AABG8AMB1PQAwpj0AgNW8AACAuACAOTwAwEs9AIC8vADAW70AoKw9AMCpvACgcr0AgEw8AAAgOQAAYLoAAF+9AIBrPAAAQb0AgKu8AAAoOwCAc7wAgLa8AMDTPAAASL0AYAo9AAD0vADAljwAMPo9AADwugAgYr0AABg9AACvvAAAhLoAAIE7AIB/PACALbwAgPm8AFCyPQBAmT0AQKG8ALCLvQCASTwAIFk9AAC3vACgdz0AIFG9AGBCPQDgaL0AAA29AEBTvQDAyrwAAKc8AMCRvQCAszwAgOu8AMC+vQBAsD0AgEA8AABougDAeb0AIIq9AEB4vQAA0DoAwGK9AMBKPQCAJLwAYGg9APCLPQAAFzwA4Ek9AOBWvQAAIDsA0P29AICRPQDA7TwAgDG8AACqOwAACDsAACQ8AIBCvAAAuDoAQHA9AAAAOwAgFb0AAKS6AAAZvQDgHT0AcIi9AIAcvQCAaLwAAPY7AAC7vQAAX7wAYBC9AGA5vQDAvjwAUJQ9AACfvABgJb0A4EA9AACDuwAArzwAICS9AMAgvQDAqrwA4BM9AKCKvQAARrwAQJ88AIAPvAAAibwAAIC5AFCBPQAA5j0AgBi9AEDJPAAA5LoAAGi7AECVPQAAxrwAwMM8AADEugAArb0AIFq9AFDFPQAQ9z0AAIy7AABMOwCAA70AABc8ALDgvQBAj7wAYGi9ACAxvQBAoL0AAKy6AAASvABA4LwAQHk9AACSuwAAALkAQL48AAAiOwCgf70AgA69AAA9PQCAobwAQLQ8AIB4vADA0j0AQK08AHDRvQAgoD0AIBA9AAAAOwAAkTsAgNQ8AADCPAAAID0AANQ8AIAYvADAE70AYHq9AIBovADgCL0AwKu9AOCUPQBAGr0AgIy8AABwvACQnr0AAEy8AADQOwBAVD0AAKC9ADCbPQAwiD0AgH08AIDNPADA+DwAQPO8AEDZvADgGD0AQGC9AACruwAAl7wAAGo8AMChPQAARjsAwC89AMA+vQBgFj0AgMc8ACBSPQCgAb0AAPg8AICOPABAyjwAgOi8AICWPACAtbwAoF29AADPvADAEb0AQP09AAAxvQAAir0AwN+8AGDLPQAAVb0AAI+7AIDTPAAAI7wAAC68AGBbvQBAO70AAJO7AMCYvABAoLwAINM9AABtPAAgQz0AQIO8AAB4ugDAmLwAQLa8ALCAPQCAer0AQNG8ACAEvQAgPj0=","chunkHash":"9de8878ff938cee0a3c8ec648f6ab2bc08d998428396de718b0811a5a33041e1"},{"text":"File: `train_tiff_model.py`\n```python\n#...\ndef load_config(config_path):\n    \"\"\"Load configuration from YAML file.\"\"\"\n    with open(config_path, 'r') as f:\n        config = yaml.safe_load(f)\n    return config\n#...\n```","range":{"startLineNumber":86,"startColumn":0,"endLineNumber":90,"endColumn":17},"embedding":"AID5PABAGj0AANC8AMB7vQDA77wAACC7AACFPAAA5rsA4Ea9AMCLPADgR70AANS7APDaPQBAy7wAIAm9AAAGvACAQrwAkKY9AIADvQBgdT0AYAU9AIBaPAAAUDoAQMg8AIAjPQCALTwAgJs8AACsvADARr0AQJm9AAC7OwCgS70AwJu8ACAVvQBA6bwAgPG8AIBnvACA4zwAAF68AIAPvQDANr0AQP+8AADxvACg7T0AoHk9AIDcvAAAYr0A8OA9AIBXvQAAxzwAwBI9AACkvAAA5DsAgBq8AGA9vQCgQz0AAP67AIDNPABAZL0AANC8AEDJvAAAYb0AwNK8AMBGPQDAkzwAABY9AOALvQAAWLsA4D+9AIAWvQAArLwA4Fy9AEDzvAAgOL0A8IQ9APC5vQAA2DsAcKY9AACgugAwjL0AYB29AADiPAAQor0AEJG9AIB/PACgYr0AAD+9ACAKvQBgZD0AAGK8AHCSPQCA+jwAAKu9AMA9PQDAGD0AAHg7AIBnPQCAlb0AQIY9AIAlvQCAnrwAoKM9AAAvvACwoj0AIC89AIBZPABAgzwAABE8AACrPADAmDwAgKO9AECZPACw+D0AgAI8AIDrvAAAXbwAMIG9AIC8PADA3LwAgB28AIDgPABAuDwAQDi9AFCevQAAsbsAgNM8AED4vAAA0bwAUJ69AAAAvQAA1jwAIFo9AIDLPACA4LwAwLO8AECnvQBAZL0AYEC9AAAAAADgPD0AQB69AOAKvQCA/bwAAJC6AGBkvQDA3DwA4Ae9AFCQPQCgLb0AwOs8AADAuQDAiTwA4Eo9AAC2OwBAsrwAEKC9AAC2vAAAkDoAAD09AEAgvQCAaL0AwIM9AIDSvABgCj0AYCI9AMDwvAAAU7wAgBO8AIA5vAAQlr0AwJ88ACAGPQAAMjsAAKi8AAARPAAAmrsAgI+9AIANvAAgE70AAGS7AMBZvQAA+TsAgMy9AAAquwAAMTwA4EW9AADgOQAAmDsAQCY9AKC8PQCgn70AgBQ8ACAPPQBgTb0AAGA5ACCGPQDAjz0AgD28AACKuwCAxzwAAPS7AAA+PQAAwLsAYEu9APC7vQAAK70AAA48AECfPADARb0AoBI9AEDovADARb0AIDM9AAC8OwBQhL0AAOQ6AADVOwDgC70AAFY7AACDPAAAvjsAgAq9AABAugAAbTwAgP+8AOBlPQDAgb0AIJe9AOCmPQCAJjwAABg8AICRvQDAjbwAQJm8AEBnPQBgMb0AAFi7AAAcvQAAsLoAQIc8AAClOwAACT0AQBW9AADVOwCgDD0AYIm9AAC0OgAAbb0AADQ9AAC6PAAAFD0AsK89AIBzPACAGL0AgFQ8AADougDA1bwAgC29AFCOvQBAQr0AADI9AABqPACAOrwAQMm8ACArvQCgGT0AQBi9AADquwDAGL0AAGm9AGAPPQDAxrwAwKY9AACtOwAAsLkAwJg8AADjOwBAFT0AICA9ADCkPQCgAL0AoGe9AMCHvACgSz0AABa8AACQvADAe70AgCg8ACCQPQAAFLsAID09AICDPADgBr0AQD+9AMCUPAAAOD0AkPK9AOAzPQBAZb0AwIw8AIA5vAAAQz0AQLy8AMC2vAAAALgAgNY8AACkuwAAmTsAwMY9AAA4ugAAlL0AwJM8AMCjPAAgOz0AwEG9AIBMPADA4rwAAMC6AAAtPQAAlbsAQOa8AACzuwDADT0AwC09AMA+vQCQhD0AUIy9AKBXPQBAqLwAAM88AAARvAAAnbsAgII8AED+vACAJj0AwOq8AICHvQCgqT0A4CA9AOCTPQBgj70AoKO9AJCQvQAAzDoAYAS9AEC9PADAyzwAwHQ9AACfPADgDr0AYCA9AABavQBAub0AABi8AACpvABgDb0AwOq8AIBYPADAQL0AAAu8AECjvADAH70AAJE8AGASPQCAZrwAgNA8AMDXvAAAYDsAAOw6ALDFvQAAjTsAgPG8AMD8vACgcr0A8Iq9APC9vQCAvzwAwOY8AOBPPQBgFT0AcNM9AMDpvABgiT0AwOg8AACGvQAAAb0AQD29AECYvAAAyDwAwNA8AKAoPQCA47wAwDm9AKA4PQDAHD0AoGE9ACB5PQCAoTwAgCE8AGBxvQCAiTwAgPq8AAD+vABAqT0AgBK8AACMPQDgcj0AAA68AMAqvQCgTb0AIJs9AGD9vQAAALsAwBm9AEAHvQCANr0AACC8ACAyPQAALL0AQEA9AMCcvAAAB7wAgKS8AICYvADAurwAIH49AAAzPQCANb0AAAK8AIBCvADAsDwAgMm8AABpPAAgUj0AQBw9AIAjvACAOT0AAKa8ALCGPQAA4DkAgCW8AAAfPACgXz0AwDC9AIBdvABAxbwAQC69ACBoPQAAd70AACg9AGBtPQAAELoAAKW9AIAFPABQ0z0AQBs9APC7vQBgwr0AGCA+ACAuPQAAdDwAgEc9AGABPQAAxLsAgFm8AACuuwAgKD0AQFS9ABCiPQAAnDsAAJ68AEDmvAAAtTsAYC+9AEAfPQCAn7wAAFa8AIAcPQDAwzwA4D+9AICCPABAHz0AANw6AEDxvAAgTT0AYN49AIAxvQAAOjsAIFY9AIBDPQCAlb0AwCU9AOBWPQAAq7sAALm8ABCVvQAAbLsAAHy9AACjuwCwiL0AMLq9ACAmPQAAPTwAAAI8AADyvAAAqrwA4A89AICQvABgMD0AACq8AKAivQCgbz0=","chunkHash":"3d5363846a743eb38e5af1fadcbfd1e969a8412aef4c1fe37afe649939b1ba3b"},{"text":"File: `train_tiff_model.py`\n```python\n#...\ndef train_model(config):\n    \"\"\"Train the texture model using the provided configuration.\"\"\"\n    \n    # Set device\n    device = torch.device(config['device'] if torch.cuda.is_available() and config['device'] == 'cuda' else 'cpu')\n    logger.info(f\"Using device: {device}\")\n    \n    # Create project directory\n    os.makedirs(config['project_directory'], exist_ok=True)\n    logger.info(f\"Created project directory: {config['project_directory']}\")\n    \n    # Setup dataloaders\n    logger.info(\"Setting up dataloaders\")\n    data_config = config['data_config']\n    loader_config = config['loader_config']\n    val_loader_config = config['val_loader_config']\n    \n    # Get target size from config (box_size)\n    target_size = tuple(data_config.get('box_size', (104, 104, 104)))\n    logger.info(f\"Using target volume size: {target_size}\")\n    \n    # Create a subset of the samples for faster training\n    sample_limit = 10\n    logger.info(f\"Using only {sample_limit} samples for training (to speed up the process)\")\n    #...\n```","range":{"startLineNumber":96,"startColumn":0,"endLineNumber":117,"endColumn":0},"embedding":"AKASPQAABDwAIJk9AOCIvQAwlb0AAES8AEAPPQAAqbwA4CS9AACIOwAgd70AgIo9AOAjPQCAAb0AQLc8AACwOwCAQLwAQKI8AIDovAAAtLoAAMc8AED4vACAGDwAAEu8AIDIPAAAqLoAIAM9ACA0vQAAqzsAgGG9AIAQvQCARr0AQG29ADDxvQCgW70AgPi8AIAuPABALD0AANQ6AIAQvADAk7wAIIi9AICgvAAg3T0AwB89AIAHvQDAib0AMKY9AEDLvABARj0AgL88AICcPAAAo7sAgAy8AAB0vAAgCT0AoAa9AAB2OwDgKL0AgDu8AMC+PADAzLwAgDw8AGA8vQBAnjwAwIq8AACtvABgAz0AcIG9AMCCPAAAsrsA8Pi9AMDwvACgKb0AgFk9ACAuvQAATr0AMOI9AICcvABAxLwAwJs8AACePAAAeDoAQFC9AMCuvACgNb0AQBm9AABkuwDAKj0AYJq9AABhPQBgdj0A4H69AEBqPQBAEj0AACq9AAAGuwBgcr0AIGk9AAByvACABr0AoGg9AIATPABAET0AAJo8AADWuwBgN70AgEC8AIBTvABQqz0AoBC9AIBGPABQyz0AgPQ8AAAMuwBgf70AgLG8AAAUPAAAiDsAoGq9AACwOwBQlj0AwDm9AHCUvQAAarsAQOw8AIBwPADghb0A4Hm9AADFOwCAgjwAEKo9AOAuPQAA77wAgOS8AJD0vQDgNL0AwAg9AACgugBATD0AoLO9AADguQCgNr0AQAk9AIAsvAAAALwAIAe9AGAnPQAgJ70AQP88ANCXvQAA4jwAwC89AED2vAAAxLoAIJu9AMDZvACgiT0AANS7ACAcvQCAJbwAgA09AMCHvACgOD0AANm7AEDjPAAAxDoAgNY8AABgugAw370AAIc9AGBZPQAAvbsAwEu9AEDYPACAIL0AwB69AMCFvAAAIDkAwCu9ALCBvQAA4jsAIKK9AAB2PAAAKDoAIBq9AEA5PQAAWLwAYBA9AAAFPQCAVL0AYBq9AEAtPQCAXbwAwNY8AOBMPQBAsj0AgDW8AKAVPQAADDwAQPE8AOBHPQCAFLwAAH67AAAnvQBAsrwAAD+8AMDTPADgML0A4Hw9AIC/vAAAVL0AgMo8AICOvQAQj70AQPC8AEAFvQDAL70AwCs9AEDuPACAfzwAgKa8AACMOwBAijwAIB49AEDUPABAdr0AoIq9AAA/PQDAjjwAAOq8AAByvQDAurwAgBm9AEDJPQCgwr0AAIC8AIB2vQCALTwAYDo9ACBtvQCAUT0AwAG9AAADvADgUz0AgK68AIAbvADgjb0AgDY9AKARPQCAIbwAwFg9AEAQvQCAFr0AwIE8AMAPPQCAD7wAwFq9AMBfvQCgRr0AMJg9AAD2OwAQkb0AQOK8ANCAvQAAXj0AAAQ7ACA7vQAAc7wA4Gy9AADGPAAApbwA4DE9AADjuwBAi7wAgCw8AECSPACgJj0AIBw9AIAsPQDAOr0AcKO9AEBWPQDAwDwAgNu8AIAwvACAoLwAAOW8AAC1vACAF7wAgHw9AGABvQCgmr0AYBC9AAAYvAAwhD0AgNq9AICSPACAf7wAAGo7AACUvAAAALoAYDu9AEAKvQBAxTwAAHw8AKA7PQCAN7wAULw9AADduwAAADgA4AU9AAAAOwBAgDwAAFc9AAAHPAAA0jsAgB+8AFCDPQBAUT0AgBS9AGDUvQAAWLoAgAo9AEDBPACwgz0AwDO9AABiPACAe7wAgEu8AAAmPAAgPL0AgDi8AIAkvACwuT0AYAU9AABZvQAgYj0AIDI9ACAgPQAQkr0AwDa9ADC2vQAAYTwAQMs8AKBVPQAAVLwAwHQ9AID2PADAw7wAQI49AACavAAAHr0AQMm9AAC9vACgP70A4Fa9AOAzPQBAmr0AAMa7AECLvQAAXz0AMLg9AAA8vABAOr0AgME8AIC9vABAmz0AgAc8ALCVvQAA1jwAAK87ACBWvQAAQrsAcLa9ALCpvQCQ4j0AwKk8AEDgvABABT0AEKk9AMD/vABQpz0AAJk8AICKvABAYL0AAL07AIDSvABACz0AgCO8AEBkPQDAvbwAoBK9AOBpPQDAUj0AYIY9ACBGPQAwqD0AoDI9AACRuwAAtLoAwIU8AIAfvADArzwAAGO8AEBxPQAgOD0A4BE9AIC7vAAgQr0AgKA9AFDxvQAAOzwA8JS9AED6vAAgEr0AADk8AABiPQDAkLwAgLk8AGAMvQCA1DwAAFo8AOCevQAAMbwAQD09AADzvABAjLwAAH48AACpPACAKD0AAJG7AADeuwBgXj0AAKY7AGBTvQDgAL0AgCy9AABaPQCAR7wAwJy8AAC7PABA1zwA4Gm9AEAQvQBA1DwAABS9AEB9PQDAAr0AQJa8AACvuwCAc7wAQLu8ACANPQBA1j0AAMg6AABfPAAA27sAwMQ9AAAQuwBQkT0AANE7AAAqPAAAwDgAAGC9AAB0OwAAjD0AAOo8AEA+PQCAMb0AAJQ8AICpPACAXj0AABm9AEBVPQBgEr0AAMa8AEDFvACAlTwAABY9APCCPQBgFz0AwNS8AIAjvACAVDwAsAA+AFDLvQDADr0AAEM8AGChPQDATb0AALA6AAADPQCAF7wAgFU8AICevQCATbwAADe8AAARPADA5LwAQKU8AHCCPQAABD0AAB49AICYvABgEr0AAHa7AMDEPABAZ70AwMg8AMDgvAAAdj0=","chunkHash":"d9c3143fc227158b0aece4851b95d2f8b3c199319076dbe6d3b640cfee62eed8"},{"text":"File: `train_tiff_model.py`\n```python\n#...\ndef train_model(config):\n    \"\"\"Train the texture model using the provided configuration.\"\"\"\n    #...\n    train_loader = get_tiff_dataloader(\n        root_dir=data_config['root_dir'],\n        batch_size=loader_config['batch_size'],\n        shuffle=loader_config['shuffle'],\n        num_workers=loader_config['num_workers'],\n        input_dir=data_config.get('input_dir', 'raw'),\n        target_dir=data_config.get('target_dir', 'mask'),\n        target_size=target_size\n    )\n    \n    val_loader = get_tiff_dataloader(\n        root_dir=data_config['root_dir'],\n        batch_size=val_loader_config['batch_size'],\n        shuffle=val_loader_config['shuffle'],\n        num_workers=val_loader_config['num_workers'],\n        input_dir=data_config.get('input_dir', 'raw'),\n        target_dir=data_config.get('target_dir', 'mask'),\n        target_size=target_size\n    )\n    \n    # Setup model\n    logger.info(\"Setting up model\")\n    model_kwargs = config['model_kwargs']\n    model = UNet3D(**model_kwargs).to(device)\n    #...\n```","range":{"startLineNumber":118,"startColumn":0,"endLineNumber":142,"endColumn":0},"embedding":"AACzOwAAtLsAEMg9ABCxvQBwob0AAPK8AEA7PQBgPD0AYBi9AIBmPABQjr0AwGM9AOAAPQBAF70AwIY8AIC0vACAUbwA4Dw9AECMvAAAkDsA4CU9AECLvAAAijwAAGw7AMDcPABAmTwAwEI9AIBRvAAAKrsA4Du9AGBBvQBAGr0AYJu9AHDjvQDACr0AgCC8AADZPABgWD0A4Ga9AICevAAAlDsAYC+9AAANvQBgqT0AgDI8AKAGvQDggL0A4Ks9AIBxvACgNj0AoAY9AIC0PADAh7wAAI87ACBrvQAAAAAAgM+8AACiuwBwjr0AAAO8AACsPADgLL0AgJI8AEC2vADAuzwAwL+8AEC3vADAuTwAsKa9AABgvAAAybwAcMK9AAA4ugBAxbwAoIY9AABqvAAAfL0AsLA9AAAgvQAA17wAQPs8AIAsvACAxbwAAFy9AMCXvACwob0AwFm9AGAEvQAA4zwAQFG9AEBGPQBgSj0AAHi9ACCLPQBAFD0AYA29AABEPAAAaL0AoDs9AABBvQCAdL0AAFU9AADIOwAAjjwAAKI7AADAuwCAaL0AAGm8AAB4ugBAaj0AQCS9AAACOwAQ5j0AAMU8AAAaOwAAc70AgFW9AICLPABAtTwA8JS9AIAOPAAAbT0AgI+8AIBkvQCAGDwAgMQ8AEAjPQCAIr0A4Em9AEDOPABgAz0A0II9AACjPABgUr0AAF+8AND5vQAgAL0AICQ9AACAvAAgAT0AkI29AIDRvAAgZr0AAKM8AEDkvACASjwAYAi9AEBdPQCgCb0AYCM9APDFvQDA7jwAoIk9AEAMvQBAuLwAQJ29AMD6vADAIT0AgAE9AIAOvQCA1LwAIEw9AABlvAAAbjwAAIo8AAAyPQAAkDkAAHk8AAACuwAQ1r0AoDo9AEDxPAAAEDoAoG+9AADBPADAJr0AYEy9AOANPQAAGTwAIAq9AABKvQAAbzwA0MG9AABwOwDAkLwAAGC5AOAMPQAA1DoAgIU8AKByPQAAZr0AgLm8AMApPQCgBb0AgGA9AKBCPQCgpz0AICm9AAA3PQCAoTwAQK48AABrPQAA6bsAADC7AECwvADAwLwAAIC6AIBOPACghb0A0II9AADguwAAtLwAAB88ABCDvQCQoL0AgLm8AEANvQAAybwAQIU8AECrPABAFT0AgMa8AAA2PABA6DwAAFw9AKAHPQBgcr0AUIS9AEADPQCADrwAALm7AOBMvQBATb0AgKa8AKBXPQDAzL0AwKe8AOB/vQAAUjwA4E89AAB4vAAgQj0AgHm9AACsPACgNT0AQAO9AACGOwCAX70AgJY8AOASPQAAQ7wAAC49AIAPvQDger0AAMw6AECZPQAAqrwAABG8AIB/vQDgZL0A0JE9AADBPACQtr0AgGW8AGBlvQBABz0AACK7AOAnvQAAnLoAoEa9AIC6PACgQr0AIAM9AAD8OwDgH70AgPM8AAB+uwBgAT0AwFw9AAAOPQDAcr0AQDG9AOBRPQBAJT0AQAG9AADLuwBgKb0AAIG8AIBtvAAAvLsAoJs9AAA8vQDgR70AgB48AADDOwBgUT0AMNW9AEDkPACAB70AAJC5AAAFvQAAr7wAgDe9AAAWOwAAuTsAALk7AKAcPQCgAb0A4L09AMCkvAAAK70AwBo9AAB+uwAAcLsAYHk9AAAPPAAAzzsA4BC9AMBNPQCgZj0AAB29AACLvQDAzrwAQDM9AADDuwBgUz0AQIW9AMDHPAAAbL0AAHY7AICovABA/bwAALA7AMATvQAQoz0AgAg9AABJvABAYT0AAH09AICZPADArr0AYFu9AHChvQAAr7sAwLs8AADAOAAAQrwA4HE9AOBoPQBAI70A8LQ9AMCJvABgFb0AoLm9AAD4uwAARrwAYHu9AMB7PQBANr0A4Aq9AIBLvQDA0zwA4Hg9AAAYOwCAb70AgBs8AMABvQAwoT0AwN28AEDAvQAAbTwAAHM8AKDQvQAAKjwAwPK9ALCzvQBAjT0AwLk8AAAtvQCAwjwAINs9AIAJvACQgT0AADO8AMDCvAAgKr0AAP27AMA2vQAAyTwAAIS7AAASPQDA+bwAcIO9AEBqPQCglj0A4Gs9AGBePQCAOj0AwB89AACbOwAAfDsAABE9AAD6uwDAtbwAgOi8AFCUPQDQpD0AgJo8AADqvAAAvLwAwBo9ANDnvQAAoDoAEIO9AICkvAAAPLsAAOw7AABDPQBABL0AgBM9AACyvACAijwAoB89ANCOvQAAV7wAAGA8AADIugAAILwAgA88AICLvACgOj0AAFA8AIAuvADQsD0AAEc8AEDJvACAHbwAgJ68AIAIPQAAlLoAgOc8AAD0OgAAkrsAoAK9AEDhvACA6zwAsI29APClPQAAy7wAQN+8AAAAOwAAhbwAAP27AMC7PACg/T0AAGg7AAB/PAAARLsA4K09AABsPADAOT0AAHA7AAAGOwAAljwAAJq9AIC6PADAAT0AQI08AOCdPQCgT70AIAg9AIBrPABATz0A4Iq9AJCgPQBgMb0AAES8AIAwvAAAEjwAAPw6AEBOPQCAMD0AAKa8AAAqvAAAFzwAmAU+AICuvQAgMr0AYAo9ACCtPQAAZrwAQNQ8AABqPACAIbwAwNE8AECLvQAAfbwAgNG8AADvuwDAC70AQBI9AECYPABgQj0AACY9AECavADAOL0AAKU7AIBZPACAUb0AoEs9AACxOwDQgz0=","chunkHash":"d87f44d4cac10920f394074c54d3e49c980d9ae34817874d32a4fbb6cdbde875"},{"text":"File: `train_tiff_model.py`\n```python\n#...\ndef train_model(config):\n    \"\"\"Train the texture model using the provided configuration.\"\"\"\n    #...\n    logger.info(f\"Created UNet3D model\")\n    \n    # Setup loss function\n    loss_name = config['loss']\n    loss_kwargs = config['loss_kwargs']\n    if loss_name == 'BCELoss':\n        criterion = nn.BCELoss(**loss_kwargs)\n    elif loss_name == 'MSELoss':\n        criterion = nn.MSELoss(**loss_kwargs)\n    else:\n        raise ValueError(f\"Unsupported loss function: {loss_name}\")\n    logger.info(f\"Created criterion: {loss_name}\")\n    \n    # Setup optimizer\n    optimizer_config = config['training_optimizer_kwargs']\n    optimizer_name = optimizer_config['optimizer']\n    optimizer_kwargs = optimizer_config['optimizer_kwargs']\n    \n    if optimizer_name == 'Adam':\n        optimizer = optim.Adam(model.parameters(), **optimizer_kwargs)\n    elif optimizer_name == 'SGD':\n        optimizer = optim.SGD(model.parameters(), **optimizer_kwargs)\n    else:\n        raise ValueError(f\"Unsupported optimizer: {optimizer_name}\")\n    logger.info(f\"Created optimizer: {optimizer_name}\")\n    #...\n```","range":{"startLineNumber":142,"startColumn":0,"endLineNumber":167,"endColumn":0},"embedding":"AEChPAAAQLoA8KU9AJDVvQAgi70AgPi8AGBzPQDAPT0AICa9AECmPABQib0AgAs9AAAAPQAALb0AgPQ8AMCLPAAAnbwAQP08AABuuwAAyDoAoCo9AIDAvAAAMzwAwLI8AKAfPQDArTwAQIw9AKAavQCAKrwAEJG9AIANvADgFr0AQKO9ANCxvQDAGb0AACS8AEDEPACgHD0AYCG9AMClvAAARzwAAE69ACADvQDw2T0AAGC5AACxvAAQgL0AELo9AAAwuwAAIT0AANo8AADhPAAApDoAAMq7AMBtvQAAJbwAQP28AMCoPACgn70AAOG7AABNPACgVb0AgFQ8AABuvACAOjwAAJO8AADhvABAyTwAcMK9AABsuwCA5rwAYMi9AACUuwAAJ70AIE09AADFvAAgT70A4KM9AOA/vQAAOb0AgBY8AIA5vABAkLwAIJC9AAD3uwDwqL0AQIe9AAByvAAAcDwAAOC8AOBQPQBADz0AQIC9AKBYPQAgIT0AAO+7AADPuwBgK70AQGg9AGA/vQCgLL0AoIA9AIA1PACgBj0AAI67AABWOwDATL0AACY7AIAFvADQkT0AAEW9AAAgPACg2j0AgBQ8AABQuwDgkr0AIFy9AMAAPQBAujwAgFq9AIATPADwiD0AANu7ACCBvQDAoDwAADs9AMC0PAAAMr0A4Gm9AIDpPABAxzwAQJw9AIDDPABAXr0AIBa9ALDlvQAgW70AgGk8AAC4OgBgCz0AEJ29AADauwDgU70AADe8AMAYvQDgGz0AAJ68AGA9PQAgcb0AQCk9AFChvQAAxDwAgBs9AOASvQAAOTwAkIC9AEDbvACAEj0AQDw9AOBMvQCAnLwAQIg9AACgOQDgAj0AwNc8AADvPACALrwAwNY8AIBpvADgvr0AEIU9AIBoPACAa7wA4FG9AADRPABgI70AgNe8AAC6uwAApTwAgK+8ACAvvQAA3DsAcLG9AABcPABgAb0AQIS8AIBYPQAAq7sAAN88AOBbPQAQkr0AgNa8AOAfPQDA47wAwGw9AMAWPQAQuT0AQAi9AIAZPQBgCj0AwJQ8AABpPQAAoTsAAF+8AIB5vABApbwAQIe8AADUOwDgOL0A0Jg9AMCNvACAwbwAgAY8AOA+vQDgpr0AoAq9AABZvAAAh7wAgBg8AACVPACAYjwAgC+9AACgOgDgWD0A4EY9AAC0PABgJ70AoE69ACALPQAAtLoAABW8AABOvQBgLL0AAFS8AMCBPQBwnr0AAO+7AGBuvQCAVjwAQGg9AADbvABgAj0AwI+9AEAHPQCgYj0AAIu8AAA4OwCwhb0AAJi6ACAlPQCAVbwAYFk9AAC7uwAgK70AAKC6AEB5PQBAn7wAgPK8AACEvQBAe70A8L09AIAhPACQob0AgEO8AHCFvQBgcD0AAPy6AOB9vQAAYDoAoDe9AAB9PACAPL0AwKc8AABQvAAA17wAgOg8AMC2vAAAmzwAgHE9ACA3PQAAbr0AAGu9AOCOPQAADj0AALu7AAAUuwCgNr0AgGq8AIC+vACAn7wAwJo9AABlvQAgiL0AAD47AACwPAAgCz0AQL+9AAClPABgDL0AgG88AAAXvAAAh7sAIFu9AACTOwCAFLwAgDo8AEBePQCAZLwAEO09AECAvACA+rwA4EY9AAAQPABAvrwAYFM9AAAhPAAAgDsAAIq8AEBTPQDwgz0AYAq9ANC9vQCAJ7wAYEE9AADBuwDgMT0AIF69AMDjPADgML0AAJA7AIBOvADA4LwAABA6AOAfvQCwtT0AACk9AMCLvACwqD0A8IA9AED3PAAQvb0AwGG9ACCPvQCAsrwAAHo8AICAPABAzbwAkJI9AGCnPQDApbwAAJg9AIDSvAAAmbwAQHu9AADXOwBAzrwAwIe9ADCFPQDAJb0AgAS8AEATvQDAzjwAMIY9AACNuwCgQr0AAPC5AMDbvACAnD0AAMW8ACCUvQCAV7wAQOs8AODPvQAAMDsAYMC9AFCVvQCAgj0AgLk8AICxvACA7jwAsNE9AADIugAggj0AgJ28AIDYvACAY70AAHg6AKBJvQAABj0AAIA4AIBjPQDALb0AQIe9AOB7PQDQtD0AAGo9AEB1PQCAGT0AwGo9AABQOgAA7LsAwOo8AAA6OwDAB70AwPW8AICHPQBAZz0AQK88AIAmvQDA4rwAIGw9AEDkvQAAnDsA8Ki9AIBxvAAAEbwAAII8AMATPQAAKLwAQOU8AABLvAAACbwAQMI8AOBuvQBAnbwAAEa8AABWvAAA7rwAgEE8AABavABwkT0AABg7AABmvAAQkj0AAOy6AGAcvQBAw7wAAM+8AAAwPQAAzDoAQJE8AAB8vAAAZrsAgMa8AABJvABgGz0AQHW9AABuPQDAtLwAIAe9AACAOQDgIr0AwPC8AACwPAAQ6T0AAOo7AACxOwAAG7wAUM09AIAUPAAgRj0AAMA4AAAzPAAAXDwAYJi9AABjPABApzwA4BA9AACbPQCgYr0AwMg8AEC7PADACz0AYIS9AACTPQBgAb0AQPm8AAC7uwAA4DwAAHi8AGBMPQCgLj0AADy8AADnuwAAlDsAIAg+AJCWvQBgHL0AgGW8ALClPQAAA7wAgPU8AACMOwAAQLwAwMA8AKCzvQCAnLwAwCy9AABgOQAgG70AALU8AGAZPQAAnzsA4BQ9AABXvAAgXb0AgAC8AMDrPAAgiL0AgOc8AABkOwAgYz0=","chunkHash":"1523e7b8ec8747097b792b955984e47292d4659aba6dc20808ff8d32aa43f4cb"},{"text":"File: `train_tiff_model.py`\n```python\n#...\ndef train_model(config):\n    \"\"\"Train the texture model using the provided configuration.\"\"\"\n    #...\n    # Setup learning rate scheduler\n    scheduler = optim.lr_scheduler.ReduceLROnPlateau(\n        optimizer, mode='min', factor=0.1, patience=5, verbose=True\n    )\n    logger.info(\"Created learning rate scheduler\")\n    \n    # Training loop\n    num_epochs = config.get('num_epochs_debug', 3)  # Use fewer epochs for debugging\n    logger.info(f\"Starting training for {num_epochs} epochs\")\n    \n    for epoch in range(num_epochs):\n        # Training phase\n        model.train()\n        train_loss = 0.0\n        \n        for batch_idx, batch in enumerate(train_loader):\n            inputs = batch['input'].to(device)\n            targets = batch['target'].to(device)\n            \n            # Zero the parameter gradients\n            optimizer.zero_grad()\n            \n            # Forward pass\n            outputs = model(inputs)\n            loss = criterion(outputs, targets)\n            \n            # Backward pass and optimize\n            loss.backward()\n            optimizer.step()\n            \n            train_loss += loss.item()\n            #...\n```","range":{"startLineNumber":168,"startColumn":0,"endLineNumber":199,"endColumn":0},"embedding":"AICmPAAAxLoAgIM9AECvvQBQqr0AAFC8AKBAPQCAdTwA4Bq9AABxPACgYr0AQFg9AIDbPADAVb0AAB09AECZPAAAHLsAYDQ9AMDvvABA8jwAwAI9AMBcvQAA4DsAABI8AOAwPQAA1DsA4HI9AGBLvQAAdrwAYCy9AADEvACAJr0AwMG9AKDwvQBAIb0AQOa8AABauwAAIT0AAPe8AIB+vAAAirsAoDO9AMBOvQBA/z0AANw8AIAZvQBgXb0AsLU9AECFvAAAaj0AAMA8AAAFPAAA4jsAAJ28AMBqvQCAeTwAQBS9AAB2OwDgS70AAOK7AOAEPQBgHL0AAIA6AMBPvQAAdjwAgBa8AAAjvQBA6jwAgKy9AAAeOwDApbwAANC9AABsOwBAHr0AACc9AAAXvQBA+LwA0MU9AIDmvADAAr0AgKE8AADlOwAABLsAYGe9AAAHvADwgL0AgFa9AABEPACAjTwAYFW9AHCJPQDgfD0AQJK9ANCIPQAAaz0AgM68AADyOwDAn70AQEw9AMCtvABAK70AACQ9AABSOwBAiDwAAPY7AMD4vAAAdr0AgIA8AAAjvADAFT0AwDe9ACAiPQAwqT0AQIA8AAAGvABwl70AAD+9AICHPAAAnLsAwJK9AAAKPACgZT0AALq8AIBKvQAA27sAgKU8AEAyPQCAbr0AYEi9AACQOQAANT0AQD89AAAzPABAML0AQBe9AJDZvQDAtrwAQJI8AAAAPABAHT0AkJu9AAAougAAXb0AgCM8AAAgvACABDwAwMm8ACAQPQBgVr0AwE49ACBIvQCAMj0AwFY9AADVuwBAjLwAULu9AAAmvQCgBD0AwJw8ACAVvQAAgrwAAGk9AACwOwBAGj0AgMY8AIBkPAAAFTwAgEk8AECfvAAwt70AwFE9AIAxPAAAs7sAMIi9AACDPADA97wAQMq8AADhOwAAaTwAAKS8AMAnvQAAeTwAIJ29AADWPACAhDwAgCK9AEAoPQCA8bwA4AI9AMBzPQCQhr0AQGS9AKBgPQCAtLwAwP88AGAuPQDwmT0AgHW8AGAVPQAAADgAAJA8AIANPQAAjDoAwPK8AIDcvAAA0zsAAKi7AMCvPAAgG70A4JE9AAArvADgOb0AAOA8AMBevQAAj70AgLe8AEC3vAAALb0AAL07AICYPADAkjwAoGa9AACgOQDgMT0AgEA9AEDHPAAgXL0AoFa9AEBhPQAAHzwAwNS8AMBgvQDgDb0AoDO9AGDzPQBAz70AgEK8AGCAvQDAjTwAgAA9AID2vABA+jwAoFC9AAD0uwAQhz0AAMi8AICDvAAAab0AgAA9AABaPQCAFLwAYEs9AMDevACgSb0AAAQ8AABAPQAAWjsAAAK9ALCKvQBAA70AoJ09AACLOwCArr0AoBm9AOBFvQDAfD0AAAk8AGBGvQCAqrwAQPS8AADCOwAAqLwAQD49AICcPACAbrwAADg8AIBXPABAnDwAgFI9AKBUPQCAR70AQI+9ANC0PQAAJT0AAL+8AACEugBAF70AwCS9AABCuwBA+7wA4Gw9AIAzvQBgYr0AAA68AADnOwAgkj0AQPC9AAAqPQBAg7wAAAA8AMDQvAAAIDsAQDK9AADEvAAAADoAAAM8AGCSPQAAPLsAELo9AAA3vADgA70AgAU9AIB/PAAAcDwAIGY9AGAlPQDAoTwAAHA6AABMPQAAzjwAYBy9AGC/vQCASjwAAAs9AADYOgCApTwAIIS9ACAaPQDgK70AANi6AADkugCAUL0AgG+8AIBPPADggT0AgBc9AKAbvQDQmz0AcIg9AIBtPQCQur0AwCC9ADC2vQAAOLoAABI8AOAiPQCACbwAAHs9AKBHPQAATLsAgG49AEDvvAAAwbwA4I29AIAlvAAARr0AIGC9AKAFPQBgTL0AwJS8AGBtvQAA5jwAIJQ9AADcOgAwh70AoBM9AADvuwAwmz0AAAE8AEB/vQAAKj0AAIw6AFCnvQDgA70AkKm9AEDSvQBA9D0AAOc7AMCYvABAhDwAUKw9AACTOwBwqT0AgEY8AADZOwAALb0AAJ68ACCQvQCA5TwAgI28AMAePQDA+7wA4H+9AIAwPQAQiz0AsJk9AKAfPQCgzD0AYEg9AIAfvAAAmTsAwLo8AACCOwCAVjwAQO68ACA3PQBA+DwAABY9AOAEvQBAqrwAwKE9AHD6vQCAZDwA4HG9AKABvQCAbbwAQMQ8AEA/PQAAfbwA4Ao9AIBOvABgPj0AgKE8ADCpvQCASrwAwOc8AADMugDA3bwAAIk7AADoOwDA9TwAgBQ8AABMPABgcz0AAKU7AIDzvACAPrwAwAC9ACBZPQCA5bwAwLI8AACIuwCAFz0AwPO8AIDrvABgRT0A4Aa9AECePQBgBL0AAJi8AADRuwAAFTwAgLm8AAAIPQCgzj0AgC08AAAnvABAA70AcPY9AACWuwBAUz0AAOo7AAAKOwAAmrsAAGi9AIBTPACgWT0AAKi6AGBgPQBABb0AAEo7AIDoPADgOT0AsJS9AIAhPQAAgrwA4Cu9AAC1vAAAiDwAAAi6AECOPQBgCT0AQKa8AICCvACAmzwA8Ak+AGCdvQCgXL0AAIS6AIB2PQCAfrwAAMM8AADBuwCAFLwAADc8APCavQCAOrwAYCu9AABwPACAC70AAN88AGANPQAAzjwAcIA9AABQvAAACbwAgFQ8AACfOwCwl70AwMY8AIBZvACgWD0=","chunkHash":"dc270faf3b150f5a59e8cbb9eedb74fca235015174c60154010d195005eb4ea0"},{"text":"File: `train_tiff_model.py`\n```python\n#...\ndef train_model(config):\n    \"\"\"Train the texture model using the provided configuration.\"\"\"\n    #...\n            if batch_idx % 10 == 0:\n                logger.info(f\"Epoch {epoch+1}/{num_epochs}, Batch {batch_idx+1}/{len(train_loader)}, Loss: {loss.item():.4f}\")\n            \n            # Limit to a few batches for faster debugging\n            if batch_idx >= 5:  \n                logger.info(f\"Limiting to first {batch_idx+1} batches for faster debugging\")\n                break\n        \n        avg_train_loss = train_loss / (min(len(train_loader), 6))\n        logger.info(f\"Epoch {epoch+1}/{num_epochs}, Average Training Loss: {avg_train_loss:.4f}\")\n        \n        # Validation phase\n        model.eval()\n        val_loss = 0.0\n        \n        with torch.no_grad():\n            for batch_idx, batch in enumerate(val_loader):\n                inputs = batch['input'].to(device)\n                targets = batch['target'].to(device)\n                \n                # Forward pass\n                outputs = model(inputs)\n                loss = criterion(outputs, targets)\n                #...\n```","range":{"startLineNumber":200,"startColumn":0,"endLineNumber":223,"endColumn":0},"embedding":"AGAEPQAAXjwAUIQ9ACC1vQBAob0AAEW8AEAhPQCAKDwAQPm8AAAmOwAATL0AwFE9AMCJPADARr0AIDA9AMCcPAAAm7wAIGc9AKA1vQBAgjwAAAQ7AEAVvQAAaLsAgAY8AMA1PQAAyDwA8IA9AIAhvQAAAAAAoIG9AMDBvADAFL0A4LO9AOAAvgDAEb0AgLS8AABYOwCAMT0AgGW8AACQuQAA9DoAIBu9AIBmvQBQBT4AgAs9AMC9vACA9bwAQLs9AED1vABASj0AAB49AAD8OwAAuzwAACK7AIDfvAAAtjsAoC29AADKOwDgRr0AALE7AACxOwAAU70AwPQ8ACAPvQCAgDwAgBi8AICvvAAAEj0A4Fq9AACCuwCAvrwA8Oy9AECWvACgJr0A4BM9AGABvQCgaL0AQK09AGABvQDA37wAANQ8AIB4PABAurwAgEW9AADIOwCwhr0AoIe9AAAEPAAAujwAQIi9AFCEPQCQlz0AQHu9AGB1PQAgbT0AAOa8AACLPACQgL0AAE09AKAgvQBAJ70AoHA9AIB3PACA6jwAAAI7AAB5vADAR70AgHk8AECavACART0AYEy9AECDPADgtD0AAKA8AIA4vAAwjr0AQBS9AICZPAAAsTsAoHa9AGADPQBgkD0AIDe9AKBvvQCAP7wAIAs9AAC7PAAgVL0AYCG9AAAauwDA3jwAwEI9AIABPQAA+rwAYAm9AND+vQCAgrwAgLQ8AAAjPABA7jwAcKi9AAAPvABAXL0AALy7AADjuwAA5zsAAO28AIDmPAAgSb0AQF09AHCGvQAgMD0AoG89AMDOvABAmLwA8J+9AKAJvQCgLz0AAHU8AOAHvQAA4LwAIDs9AACkOgDA0DwAAIM8AMD6PAAAjTwAADY8AICfvABw4b0AAEE9AACQPAAAbLsAELe9AADmuwAABb0AgB29AEChvACATjwAwMi8AMBXvQAAXjwA0JW9AICePAAAqbsAIFC9ACBEPQCAzrwAYCM9AKBwPQBAkr0AoFu9AEB4PQCA/bwAIAI9AIAEPQDAmj0AgHC8AOAWPQAA4LkAABM9AEAUPQAAHLsAgMK8ACASvQAAYLoAAKA6AAClPAAgNL0AUI89AIB5vABAU70A4AU9ADCFvQBAc70AgEO8AABdvADAk7wAAKs7AAAPPAAA2zsAIEq9AACAOABgYz0AwDM9AIB6PABAMb0AoJO9AGBJPQAAWDsAgHq8AACSvQCAi7wAwPO8AADoPQAAx70AACo7AOBLvQAAeLoAoDY9ACAivQBgNj0AAEq9AAD7uwAAUD0AwNO8AICFvABwhL0AwPw8AKBNPQAAHrsAYFY9AMC3vAAgYr0AQJs8AEAkPQAArzsAIBW9ACBfvQDA2bwAMJc9AACXPACgzL0AYBC9AEBJvQBwhT0AABU8ACBDvQDAlLwAQGy9AIAAPAAAn7wAwA89AEDAPACAPrwAAJM8AIC2PACAyzwAYG49ACBEPQCgH70AQFe9ALCBPQBA3DwAAPy8AACxuwCALb0AwDy9AAD3uwAANLsAAE89AIAhvQBQg70AANW7AADwuQBgdz0AINW9ACAdPQAA/LoAAAM8AIDTvAAANDwAAFO9AACeuwAAALsAgGs8AABPPQAA9jsAULc9AACJvADAk7wAAM88AAC8OwAAhzwAwE49AACgOgBA2DwAALC7AABiPQCgOj0AoAm9AHC4vQAAPbwA4GE9AACJuwCAaDwA4KO9AMDiPABgSb0AgBg8AIAFvACAIL0AgIa8AACEOgCQhT0AQEw9AGBLvQDgsj0AUJg9AEA6PQBArb0AoB+9AICavQCAETwAAOs8AAAPPQAA07sA8IQ9AIBmPQCAxLwA0J89AEC8vAAAG70AQIu9AABWOwCgRb0AYHe9AOBBPQCga70AAG68ACA3vQBAmDwAYJI9AABGOwCgdb0AAAo8AACXuwBQoD0AgFc8AOC1vQCA5TwAwJY8AHCxvQBAnLwAoKS9AIC0vQBAsj0AAIY7AKADvQAAnzwAEMA9AACvuwCgiD0AQB09AIA/PADgOb0AwLK8AMA5vQAAHD0AAIm7AKA1PQAANLwA8IO9AGAbPQDQjD0AoGs9AIC0PAAwvz0AoCc9AACrOwCABzwAoBo9AACougCAETwAwNy8AIBvPQCAPT0AQA89AADRvADA7LwAQKs9AEDdvQCAPzwAUIy9ACAhvQCAcbwAYCI9AMA8PQDAC70A4B09AIDWvAAgKD0AYB09AOCpvQAAmrwAYBo9AAAYvABAn7wAAMy6AACQOQAAojsAAOk7AADAOgBggT0AADI8AAAkvQAA7LsAwP68AGBVPQCAX7wAAAg6AAA4uwDA4TwAAGm9ACAjvQDAKz0A4De9AECJPQAA0bsAgJu8AACcugCAwDwAwOa8AIAxPACQ0D0AgEE8AECqPAAA4rsA4OA9AAAcvABASz0AgKO8AAAeuwAAa7wAYGO9AIArPAAAbT0AgJU8ACB5PQDAJL0A4AU9AKAYPQDAUD0A0I29AKBSPQDAxbwAQMW8AABwOwAANTwAAIu7AIB2PQAAHjwAwMe8AECYvACALjwAkP49AECcvQAgW70AAOo7ANCLPQDA5rwAACw8AECtvAAAIrwAQMU8ADCOvQBAvbwAAJW8AEDvPACgU70AQIo8AABuPQBAvjwAAEQ9AIDEvAAAwLwAAJs8AIAJPADQoL0AgBc9AABmuwBATD0=","chunkHash":"362fc0daafc4f79ba89e6c434e929782a248313b62bef440076d1e42c104dc20"},{"text":"File: `train_tiff_model.py`\n```python\n#...\ndef train_model(config):\n    \"\"\"Train the texture model using the provided configuration.\"\"\"\n    #...\n                val_loss += loss.item()\n                \n                # Limit validation to a few batches\n                if batch_idx >= 2:\n                    break\n        \n        avg_val_loss = val_loss / (min(len(val_loader), 3))\n        logger.info(f\"Epoch {epoch+1}/{num_epochs}, Validation Loss: {avg_val_loss:.4f}\")\n        \n        # Update learning rate scheduler\n        scheduler.step(avg_val_loss)\n        \n        # Save model checkpoint\n        checkpoint_path = os.path.join(config['project_directory'], f\"model_epoch_{epoch+1}.pt\")\n        torch.save({\n            'epoch': epoch + 1,\n            'model_state_dict': model.state_dict(),\n            'optimizer_state_dict': optimizer.state_dict(),\n            'train_loss': avg_train_loss,\n            'val_loss': avg_val_loss\n        }, checkpoint_path)\n        logger.info(f\"Saved model checkpoint to {checkpoint_path}\")\n    \n    logger.info(\"Training completed\")\n#...\n```","range":{"startLineNumber":224,"startColumn":0,"endLineNumber":247,"endColumn":37},"embedding":"AKAMPQCALTwAoII9ALCuvQAAob0AABG8AOAePQAA0DoAgPu8AAAJPAAAQ70AQGA9AIDnPACgJr0AQBQ9AEC2PACAUbwAIFo9AEAsvQCAeTwAABg7AAAvvQAAHbwAgEc8AIA8PQAAVDwAoFY9AMAxvQAAnbsAoGe9AMClvAAALb0AwKq9ADDjvQAAZL0AANi8AIA7PADAMz0AgNy8AIAivAAAaLsAYDO9AGARvQBYCD4AACU9AECDvADgE70AsOA9AMA0vQCgVj0AQCQ9AAByOwAAVjwAgIW8AAC6vAAABzwA4Ba9AAAqOwCgVb0AgCm8AAAOOwDAar0AgIU8AAD2vACA8DwAAMe7AMAavQCgDD0AYG29AADruwBAuLwAwOO9AAAGuwDA0LwAgCM9AEAVvQAgeb0AsMs9AIAuvADAKb0AAOg7AIAxPACAlrwAwFe9AAB4OwAgdL0AkJq9AAB4OwCABD0AoFa9AOBhPQBwmD0AYGi9AGBDPQAgfD0AQPG8AADYOgBAd70AQC89ACATvQDAAr0AoFU9AABvPACADT0AADQ7AADcuwDASL0AgDo8AADQuwBAQj0AoCW9AAAHPAAQpT0AQA49AADjuwDAp70A4CW9AID+PADAsTwAIIK9AMCUPABQnD0AICi9AKCKvQCAl7wAQCo9AACIPAAAbb0AYEO9AAD8uwBAzzwAAFo9AOBDPQAAHr0AwB+9ALDOvQAAwbwAQJE8AADQuQDA/DwA4L69AIBRvAAAbb0AAIg8AAC1vAAA0LkAQKO8ACAVPQBAX70AIE09AOBwvQDAKT0AwHc9AAC7uwBAi7wAkI+9AKAavQDAKD0AAAo8ACAXvQAAnbwAAEk9AAAguQAAwzwAAKk8AAC+PAAAHzwAwLI8AICVvADw670AQE09AAADPAAAlLsAcIW9AADrOwDgG70AYAe9AADZuwAAYTwAoAy9AFCIvQCA0zwAwJ69AADOPAAAvTsAIEG9AOBAPQAAu7wAYBc9APCZPQDwkL0AwGW9AEBoPQDA3rwAQBo9AIAdPQAAiz0AAFS7AGAkPQAAEzwAwIg8AKAvPQBApbwAwNa8AMArvQAAjjsAABA6AAA4PAAgSr0AUIg9AMDYvADgGb0AYA09ACB4vQBgZr0AANS7AADGuwDAtbwAgHg8AACtOwAAWDoAQC69AADWuwAgMT0AYEo9AADKOwAgE70A8Jy9ACArPQAAaLsAwJO8ANCPvQDAq7wAYCu9AODjPQDw1r0AAIK7AGAkvQCAWDwAQDo9AMAhvQBgED0AAEm9AAAsPAAgfT0AgH+8AEDAvACAg70AQNQ8AOAlPQAASDoAIGo9AIAovAAAYr0AQKg8AOBAPQCAjjwAAO+8ADCPvQAA+rwAMK09AIBYPAAwub0AgLO8ADCFvQBAYz0AgA08AGBcvQAA0rwAwFO9AADPOwBApbwAwAs9AIB0PAAAGrsAgAM8AED0PAAA5zwAgFU9AABIPQCgRr0AoIG9AMBLPQAA6jwAwKG8AABgugCAH70AgBa9AAB+uwAACLwAgFE9AGAkvQDAnr0AAHy8AIAjvAAwpT0AIOa9AMAgPQAA0LsAQIQ8AIAwvACAIDwAsIa9AADDuwAAALoAwMo8ACBoPQAANLsAAJ89AEDSvAAA57sAAOQ8AADougAAlTsAYEc9AACwuwAAGDwAAJC5AIB7PQDABz0AANa8AOCyvQAAObwAoDU9AIBQvABAuzwA8I69AECcPACgF70AQKM8AAD4ugCAX70AgHS8AADHOwDAjD0AgOg8AACOvQBwrz0A8JA9AMBJPQCgqL0AYHm9AACqvQAAwLkAwJc8AGAQPQCAZ7wAIIo9AKA8PQDAp7wAoJY9AAC5vACAIb0AIKm9AAC9uwCgGb0AAEu9AIAyPQCAjL0AAOC8AKBavQDAhjwAYKE9AAAiPADAf70AAAY8AECKvAAwmz0AAOA7AHDAvQCAvzwAADw8AOCrvQAAdrwAMK+9ALCavQDAoT0AABk8AMCovACAfzwAwMk9AACpOwAAjj0AQBA9AACsuwBAMr0AALq7AEAbvQAgBD0AAH+8AGBTPQBAxLwAYHe9AEA6PQBggz0AwKE9ACAZPQAQtz0AoAw9AADguwAANjsAAN08AADRuwCAbDwAwM68AGBkPQBAET0AgO08AKAIvQDgB70AMK89AIDdvQCAaTwAsJG9AIDZvAAAYrwAQNU8AEBPPQAA8rwAALc8AIC5vACgEz0AAJQ8APCvvQAAf7wAoBY9AAAAvACAmLwAgFA8AABBvADAET0AADw7AACdOwAgfD0AAJc8AMBQvQAAKrsAIAm9AGALPQBAvbwAAGi7AADEugBgCz0AYC69AMDMvAAgKT0AoCe9ADCSPQBAwLwAgFi8AAA0OwAATTwAIBq9AADnPACg5j0AgFo8AAD0OwAAMbwAAO49AAAXvAAgYD0AAEC5AAB4ugAAbDsAAGu9AIBGPADAdT0AwJ88AAArPQAAKr0AgH08AED/PAAgNT0AYFm9AMCCPQAAu7wAwMq8AACPvAAAmDsAAEA5AIBqPQBAmTwAgFi8AIBcvACAxjwA8N89AKCDvQDgOr0AADq7AACsPQCAfrwAACA8AAAYPACAI7wAAGI8APCavQAAibwAwNi8AEALPQCgf70AAP07ACBWPQCAqDwA4GM9AICivACA7rwAgIE8AICXPAAAgr0AIAA9AADAuwCAYD0=","chunkHash":"4855f186420780e877d20989dd6bdbdc1cdd0c6d58834e0a9572d499b27fcf78"},{"text":"File: `train_tiff_model.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Train a 3D UNet model on TIFF volume data\")\n    parser.add_argument(\"--config\", type=str, required=True, help=\"Path to configuration YAML file\")\n    args = parser.parse_args()\n    \n    logger.info(f\"Loading configuration from {args.config}\")\n    config = load_config(args.config)\n    \n    logger.info(\"Starting model training\")\n    train_model(config)\n#...\n```","range":{"startLineNumber":250,"startColumn":0,"endLineNumber":259,"endColumn":23},"embedding":"AGBlvQCAWjwAQEQ9AFCbvQCwgr0AAEK9AOAIPQBgUD0AIHO9AIDNPADAtLwAYDg9AEB5PQBgB70AADq8AIAdvAAACLwAsIo9AADAugDAdD0AwPU8AAAAPACAejwAAIA7AIBrPAAAEDwAIB89AACfOwAAxrwAYHa9AIALvQCAUb0A4Gu9AKAlvQAAnbwAAHe8AADgugDgZD0AYFy9AKCEvQAAhjsAYHO9AICVPACwhj0AwKY8AGB0vQBgSL0AIIg9AEClPAAAQjwAAAA4AIClPAAAMr0AgEs8APCRvQBADb0AYGe9AAD7OwBAyrwAgFC8AABAPABwlL0AgCY8AAAwugDA2jwAQMA8AGARvQAAvzsAAK+9AAD6uwDASb0AgGK9AACUOgBAvLwAQAE9AOADvQDgSL0AYG09AIDMvACwrL0AABg9AAAuPAAAbrwAgBK8AADSOwAwjr0AIFa9AGATvQAAtLoAIBG9AACyPADAzTwAAG69APCXPQAAZz0AABa7AIB6PACgnb0AYIQ9AKC/vQCwgr0AUJQ9AMCavABANj0A4CQ9AIBLPAAAxDsAQIQ8AOBlPQCAaj0AEJG9ACACvQBQ8z0AgPi8AIAjPADwk70AoAK9AKAAPQCAobwAIDi9AACcOwAwnD0AwO+8AEC0vADgAz0AAGw8AEA6PQCAc70AYIS9AMAzPQDAzDwAgP88AABgPQBwqb0AAJ27ALAbvgDgH70AAAAAAOBPvQBAez0AQM28AAC0vADgEb0AAEA7AGAavQAABz0A0JC9AHDlPQCAJLwAgGg8APCRvQCAfz0AoFg9AMBcvQAAArwAUJG9AMCuPABwgT0AQIM9AKCCvQAgYL0A8LM9AIBovABgFD0AAHs8AMCjPABAuDwAAHC7AAAlvABw170AYBc9AADAOgAAsLkAQPO8AED7PABAu7wAQDe9AGBTPQBAybwA8Ia9AKBQvQCA5zwAcKy9AMCuvAAA27sAwNI8AMCyPABgRz0AwOM8ALD5PQCglr0AwAk9AGCAPQCAdjwAAEG8AEB/PQAAlz0AQMm8AADzuwCgXj0AAIY8ALDrPQBgEL0AgHO8AAA5vACAp70AgBi8AAAbvADQpb0AAAE9AABcOwAAGDoAgCw8AAALvQAg4L0AAD88AOAPvQAAVDwAICQ9AACZPACgDj0AAL67AACAOgBgBj0AgB88AAC8OwAAQrwAIKy9AEAePQCAr7wAYAM9AGAfvQDgab0AAFg7AIAVPQBwmL0AABw7ANCNvQCAZTwAwGw9AABWPQDAOz0AYH+9AACQvAAAljwAAKW7AICLPADgKL0AQPQ8AECPPQCAJzwAYCU9AOATvQAgPb0AAGw8AGAUPQCAwrwAgNo8AMC9vQBA4bwA4AY9AMDzPAAgX70AAGM8AGBhvQAAajwAgLe8AOATvQAA8LoAgBK8AIBOPACAIL0AgGU9AACquwDAe70AEIY9AABYOwAAwrsAIFo9AACwOgAAKr0AADC7AAB3PACAgT0AgFa8AAAsPABAXL0AAC08AAAwOgCAG7wAsM89AKAFvQCAQbwAgCg8AAAdPQAA5jwAADC9AIAfPAAADL0AYBK9AMBYvQDAmbwAgKu8AAD0OgBA3bwAAI08AMCRvAAgHr0AoKs9AAA4PABAeL0AgIU8AAB2PAAA3TsAQNw8AMChvAAA67sAAMq7ACBzPQCgHj0AQKW8ADCCvQCAijwAgCU9AID4vABAjD0AQH+9ACByPQCAR70AgEq8AABMuwAAhLwAAFc8AGBMvQAQqT0AgIO8AMDKvADAhD0AgO88AKASPQDQrb0AULe9AHCpvQCQgD0AYBe9AIAqPABABz0AAH89AAAxPQCAcr0AwDY9AOAFvQDAv7wAQG69ACAIPQAABjwAYDi9AADROwDAC70AgNa8AIB6vQAAwDkAoB49AAC4OgAAGrsAABy7ABCCvQCAtDwAAHi6AMBHvQAgNz0AAAS7AEAuvQDA0rwAIK+9AABkvQCA0zwAYFQ9AAC8uwAAULsAYI89AEAOvQDAiDwAgC48AABgvQAATr0AgBe8AAAGvQDAxjwAgD09ACA9PQCgCb0AQHe9AGCSPQDgOz0AAKG7APDPPQAAkjsAAPo7AABoPADA3rwA4BE9AAALvAAAsDoAAOq8APDTPQBw2z0AAKg7AABEuwCAW70AAOo8AID4vQAAgDkAgC+9AIDbvAAAB70AwPi8AECpPAAA67wAUIc9AACJvADgOT0AAAW8AAAOPABgNb0AQNs8AABxPQBArLwAgIs8AADnuwBgfT0AANa7AACavQCAhD0AwM88AOCOvQCAvTwAAMs7AIDWPABACz0AgD08AGAtvQBAnrwAANS8AMCQPAAATrwAID69AECuPQCAPb0AgCG8AIA7PACgWr0AgEy9AAAgOgCA7DwAAGq7AEC4PABAgrwAsLs9AEDaPAAAMDwAgE+8AACyuwDA7jwAQK+9AIAePACA8DwAADY8AECWPQAAg7wAAPw7AIBXvQDA/TwAYBG9AIDNPADgGL0AAL47AAC1PAAA4DkAgDi9AOAfPQDA2DwAUIa9AAB4ugCAiTwAKAY+AACXvQDAP70AwP08ABCAPQCANb0AQMk8AMBGPQCAQbwAgAu8AEAqvQDAgb0AAES9AIALvAAgO70A4G89AAD7PAAgVD0AAJw6AICZvACgSr0A4Ao9AEAnPQBAubwAQNk8AACYOgAA8Tw=","chunkHash":"5b676103ae9247c90b31bb5cafa96af449a9d3d3a8fe211581781dedeaf64668"},{"text":"File: `train_tiff_model.py`\n```python\nimport os\nimport argparse\nimport yaml\nimport torch\nimport torch.nn as nn\nimport torch.optim as optim\nfrom tiff_dataloader import get_tiff_dataloader\nimport logging\n\n# Set up logging\nlogging.basicConfig(level=logging.INFO, format='[%(asctime)s][%(name)s %(levelname)s] %(message)s')\nlogger = logging.getLogger(__name__)\n\nclass UNet3D(nn.Module):\n    \"\"\"A simplified 3D UNet model.\"\"\"\n    #...\ndef load_config(config_path):\n    \"\"\"Load configuration from YAML file.\"\"\"\n    #...\ndef train_model(config):\n    \"\"\"Train the texture model using the provided configuration.\"\"\"\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":264,"endColumn":0},"embedding":"AECvvAAAEbwAIAg9ANCxvQAALL0AwLe8AOACPQAAQLkAQAS9AAAiuwBgX70AAMk7AEA5PQDA6LwAAIC4AAA8uwAA17sAIDE9AMCdPAAA1TwAwFM9AABGPADAuDwAQIW8AABlPAAAITwAsIQ9AABgOwDA4rwAQFm9AMCBvABAar0A4Ha9ACBPvQAA+LwAgCG8AACTOwDAUD0AQGO9AKAZvQDAn7wAgEy9AIBnvADAcT0AAEc8AGB2vQBgu70AoFI9AAChuwBAwDwAgAE8AID7PAAAx7sAQJQ8AECovQCA5LwAgCm8AECbPADAD70AwNu8AAAAAACgDb0AgGO8AIC9PAAA1TsAABq7AAAjvQBAnTwAsJm9AMAqvQBAz7wAMKS9AED+PAAA97wA4LM9AICvvABgL70AsL49AECJvACABr0AwNs8AEACPQCAz7wAwNu8AECYPAAQsb0A0Kq9ACAtvQDgJT0AAM+7AIDyPAAAkDwA4EW9ADCNPQDAGT0AAB+8AAC/OwCgYr0AIHY9AECEvQCgF70AYIg9AACsvADABj0AAIo8AADtOwDA0LwAQAm9AABxPAAANz0A8LK9AIDlPACg7T0AgKQ8AADJOwCgU70AQB+9AEAkPQAAgLgA0LG9AEDCPACAfDwAAN28AECzvACARz0AAFK8AACCPQAArbsAEIa9AACCOwAgXD0AIEQ9AEDQPABgr70AAMy7ALDxvQAgob0A4AG9AKBZvQBAQj0AABC9AKA7vQDAJL0AAKA5AIDlvABAsjwAgHu9AOC0PQAAb7wAgLk8ABCgvQCAIzwA4Fg9AGAqvQAA1DoAwLO9AAAkvAAASD0AAFY9ACAnvQCAurwAQHs9AIC6vACgIT0AAFU8AIAZPQDgL70AAAi6AABZvACQ2L0AQHs9AACtOwAAwDkAAPK8AAApPAAAwLwA0Mu9AACGPADA2bwAAC+8AECvvABgBj0AAMi9AAAUvQDA+rwAALu8AEDIPAAAXDwAgJA8AADNPQCgir0AQM48AABQPACAL7wAQJo8AICiPQDgkD0AwD+9AMCTPACAjz0AgKq8AMDhPQCAPbwA0I29AIDVvABA/rwAAG67AADLOwAgXr0AAFo9AABiOwAAErwA4FE9AIB1vABAnL0AACu8AMAIvQAA57sAYAg9AOAXPQBAMz0AAGi7AABQOwAAnjsAgDE8AMCGPABQhr0AwG29AABGPQAANjsAAOG7ACAsvQDAir0AgBC8AIA/PABAV70AAHi8ALCTvQAAULwA4Ho9AICMPADgOD0A4LS9AADBOwAAMj0AgNS8AIA+PADwgL0AAJA7ACBePQDAmjwA4Cw9AEAmvQCgGb0AgGq8AMBnPQDAXL0AAJK7AEDmvABgEL0AwIk8AOAQPQAAfrwAQBk9AADDvADgTj0AIBa9AABAugAAA7wAAKC8ACAmPQDgdr0AgB89AMCHvABAEL0A4Ic9AEAcvQAAsDsAIIg9AACSPABgCL0AANQ6ACBMPQAQpj0AANW7AAAwuwAABr0AYEQ9AAAbPAAAjLoAQG49AHCRvQAgBL0AQI68AIC8PADAyzwAkJe9AOAOPQCAab0AAOW7AAB4vAAA4DoAAPS8AOAJvQAAzDsAAGE8AAAiPAAAkbsAEN09AADiOwBAl70AYC09AADMOwAAoDsAAFg7AACEOwCASbwAANi8AEB6PQAARD0AAK+7AFCMvQDAlTwAIAs9AHCwvQAgZz0AIAa9ANCMPQBgtb0AAB68AGAXvQAwgL0AcII9AOAuvQBQiz0AgJ28AIB+vQAwjT0AgOw8ACBwPQDgyL0AcN29AJCLvQAAs7sAAGe9AEDQPAAAWzwAYJs9AKBsPQDA47wAIJw9AACZvABgPb0AYG+9AICZPAAAZTwAQD29AADvPAAA8rsAAOM7AADgugAAObwAIGg9AACxOwAAyLsAQJU8AIDQvAAAVT0AwPu8AOCHvQDA1TwAAH47AIBevQBAhrwAAOa9AOAhvQCACDwAYEo9AADbuwCAV7wAYIM9AECdvADAGD0AQNu8AHCAvQAwgb0AANC7AHCHvQBAwjwAgJg8AID+PAAAJLwAgG+9AEBwPQAgqT0AQLo8AIC5PAAA9LoAANI8AAAmOwAAkzwAQDo9AECEvADAEL0AgDm9AMDTPQDA8j0AQI48AAD/uwAAUrwAQFc9APgHvgAAkrsAAKO9AIC3vAAAe70AgJk8AIBjPACgGr0AEJQ9AMDdvAAARzwAAEE8AABhvADAbL0AgMA8AFCMPQDANL0AADq7AAC0vAAASz0AAMA4AGBmvQCAtD0AwPA8AIDDvAAACrsAwPA8AIDzPAAAYzwAAIs8AACUugDA1rwAAE29AACDOwCA37wAUMS9AGB8PQDgg70AADm8AAANvADAlr0A4Bq9AAC6PAAAlT0A4D69AMCNPACATbwAsLA9AAC4PADACj0AAJ68AIBBPACAVLwAANi8AADDPAAA4DoAADa8ABCYPQAAU7wAQPA8AIC/vAAAZDsAwP+8AGARPQDAFL0AgHW8AAD2uwDAvzwAAHm9AIDCPADAzDwAQFa9AIA2vACAITwA4A8+AEB4vQAAEr0AAGC7ANCrPQAAUr0AABI9AEAdPQAAMLwAQJK8AEBJvQBA87wAABe9AMCTvAAgRL0AgNU8AIAcPAAAEDsAALs8AIBGPACgib0AgJi8AECXPACgBL0AALo7AIBcvADwsD0=","chunkHash":"929fc5274cb5a30b684fc6a4aa5477c36643c0934515432dcb818fa824908ea1"}]},"file:///teamspace/studios/this_studio/train_with_morphofeatures.py":{"hash":"6b5e152c00cd71962918e88fda78076be45eadd55a2da786302bc78d55dd83f0","entries":[{"text":"File: `train_with_morphofeatures.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    \"\"\"\n    A custom trainer that extends MorphoFeatures' ShapeTrainer to use our dataloaders.\n    \"\"\"\n    def __init__(self, config):\n        # Initialize the parent class\n        super().__init__(config)\n    #...\n```","range":{"startLineNumber":21,"startColumn":4,"endLineNumber":23,"endColumn":32},"embedding":"AKCbPQCgTT0AwA09AMD8vAAArTwAwJm8AEATPQCgvD0AgHG9ACAYPQAAibsAAA28AABgOwBA8LwAAOu8AACwuQAwmz0AIDY9AMATvQBArj0AoDI9AADGPACgHD0AAP+8AIA1vADAlbwAAD+8AIANPQBAnzwAIBu9AMDKPACARrwAoJW9AADwuQAAlzwAAFm9AEA7PQBA6z0AAHq7AAB+uwCgNj0AEAm+AMDcPADQiD0AALQ6AMCdvABQjz0AoJ49AGADvQAAGz0AAGW8AAB7PQBAKL0AACy8AIAKvAAA9zwAAMs7AGAcvQDAJL0AAOS7AIBavACACr0AgNk8AADRuwDgIT0AQNk8AFC+vQAAxrwAABe8AECcPQAgUD0AQOm8AIAAvQCAA70AAMo8ABCjvQCgab0AsA4+AIACvACADrwAAGO8AAC8OgAA4DkAAJe8AGBWvQDAzbwAANi8AADAuwBA4DwAwOi9AGAxPQBA3rwAoEK9AEDzPABA0DwAQC49AMAoPQAQjL0AQCE9AACEvQDAST0AQIY8AAAmvQAgJD0AgNM8ACC5vQCAcbwAAOI7AADIOgAguT0AkIa9AKATvQDw3j0AABa9AACCvAAAKr0AQOo8AKAoPQCAYDwAgCU8AACtOwCAeDwAwMS8AGAuvQCgYj0AANu7ADCEvQAAmLoAcMe9AMBVvQCAaL0AAMA6AIDBPACACbwAQLG8APgGvgAQjL0AANA7AADAuQAAVjsAwNO8AMDyPAAA3DoAUJE9AEDdvADA8zwAAKq7AIBhPABAYb0AgH89AIA9vQDA5DwAACo7AMDjPACgcL0AAIU7AFCEvQCABTwAAJK7AIAcvADA7jwAYFE9AECIvACAWT0AoD89AACTuwAAOrwAAM07ACBAvQCAv70AkJE9AECdvADA47wAgF+8AACwvABAwbwAAEI7AIBYvQDAOb0AgOm8AABAOQAARjwAEIO9AGBaPQBggL0AwLi8AAAuvADAbz0AMJE9AOB6PQAgAb0AgMQ8AAAbPQCgCr0AAKC7ACAmvQAwjD0AoDy9AECmPABAxLwAgCW9AABRPACAMD0AAFm8AMCavADQqL0AABs8AACzOwBwkb0AgAw8AAAjvAAA1DsAAPI7AEAVPQAAj7sAAKQ6AAAyPACAarwAgMA8AIAxPQBgXz0AAK68ALCaPQCAGjwAwIu8ALCIvQAAILkA8LK9AACBvQBApDwAALA7AKBWvQBABD0AALG7AKAUPQAgjr0AQD69AAB0vQAgdT0AwOw8ADCGvQDANz0AAKg6AMAJvQCANTwAAFo8AIB6vQAgaL0AAIo9AABWPACAez0AQOs8AADbOwAgY70AACm9AIBsPACACb0AAAi8AHCRvQBwmL0AUJU9AMAPvQBAsLwAoIo9AIAyvADgh70AgBo8AIA8vACwgj0AAII8AACeOwAACDsAAJw6AABvvADgDL0AAOW8AAAiOwBgfT0AwOA8AEAwvQCgQ70AwM48AIAVPQAAsDsAwEK9AAB8OwAA+LoAgHu8AKBAvQCAD70AIBG9AAAgPACAQLwAQKm8AICXvAAAK7wAYAk9AMBePQBAnTwAwJ69AAC/vACArzwAALQ8AMDjvAAA8LsAAG08AIDEPACAHL0AMJQ9AOBBvQBgSL0AAEm9AECdPAAA2zwAAEW8AMDJvACAAj0AoBQ9ALCpPQCAvbwAsJq9AABCPACAZ7wAAE+9AIB8PACAaLwAAEK9AAAUOwAACL0AgC68AMCyPACQr70AYAa9AIDTvACA/7wAgH09AMAJPQAAkT0A0IA9ACCEPQCQ3r0AANC8AEC0vAAAgjwAAM27AADAuQBAnrwAgEI9ALDhvQAABL0AoJO9AADkvADgDT0AAGc8AGAzvQBgGb0AADK8AEBwvQDgLj0AgEC8AEByvQAgeT0AADI7AMDnPAAAC70AANY7AMCZvACgbz0AYDM9AID8vAAwhb0AALO7AABbvQCACjwAwLu8AGB1vQBApT0A4EU9AIBMvADgHT0AgMI9AEDTvABAcT0AgMQ8AAAHvAAAzbwAAJA8AABTvAAA77wA4DM9AABIPQCAHjwAQNY8AMA4PQAANjwA4Ik9AJDhPQAAKjwAIEM9AAA/PQBQsr0AQBG9AACKvAAAeTwAQNI8AEAkPQBAgD0AAB88AEDvvADwhT0A4Kc9ADC1vQAA6TsAwFW9AAA5vQAA4DsAcMy9AMBpvQDA47wAQOM8AAAxPADwmr0AAJS7AMBsvQBAm7wAgCc9AECJvAAgAb0AQG69AMCIvAAAZjwAAFS7AIASPQAAADgAwFE9AAD7vABgRb0AACS8ACB6PQAArLwAgB69AEC+vACwjj0AQJg8AABquwDAlbwAAMK8ADCbPQCgMb0AgCG9AAD3OwDA/DwAAKK8AAAYOwAAkz0AwKa8AMDpvACAk7wAcLU9AID4vABg1D0AAAi6ACAIvQBgTL0AkIy9AACCPAAAjDwAwN28AIB0PQDgrb0AwOA8AAAfvACgJT0AAIo9AADgugDgSL0AYCW9AIDDPAAgUD0AYE09AAArPQDQzz0AwKS8AICUPACgNb0AgN09AKAAvQAAWb0AwKw8AGAYvQAAYDoAAC89AAArPQAAUrwAoCi9ADCyvQCARTwAgFu8AAAvvACgR70AgB08AGChvQCgAT0AYAY9AMBtvQAA/LsAAHW8AIAxPADAxLwAwNM8AEB7vQDART0=","chunkHash":"97d2afdab650b4568bff75d7205cd94958ac6ae5e32778ae47b030459fdabd21"},{"text":"File: `train_with_morphofeatures.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    \"\"\"\n    A custom trainer that extends MorphoFeatures' ShapeTrainer to use our dataloaders.\n    \"\"\"\n    #...\n    def build_loaders(self):\n        \"\"\"\n        Override the build_loaders method to use our custom dataloaders.\n        \"\"\"\n        print(\"Building custom dataloaders...\")\n        dataset_config = self.config['data']\n        loader_config = self.config['loader']\n        \n        # Create train dataloader using our custom function\n        self.train_loader = get_morphofeatures_mesh_dataloader(\n            root_dir=dataset_config['root_dir'],\n            class_csv_path=dataset_config.get('class_csv_path'),\n            batch_size=loader_config.get('batch_size', 8),\n            shuffle=loader_config.get('shuffle', True),\n            num_workers=loader_config.get('num_workers', 4),\n            precomputed_dir=dataset_config.get('precomputed_dir'),\n            num_points=dataset_config.get('num_points', 1024),\n            cache_dir=dataset_config.get('cache_dir'),\n            debug=True  # Set to False for production\n        )\n        #...\n```","range":{"startLineNumber":29,"startColumn":0,"endLineNumber":45,"endColumn":0},"embedding":"ALDLPQAAQj0AoBE9AMAJvQAAcrwAwK28AABWOwDAkD0AIIW9AABOPAAAwDkAAAK7AAAQugAAUr0AQOq8AADQuwBgwT0AALc8AOAdvQAgyD0AYCM9AADvPABAFD0AAAq9AAC5vAAA1rsAwPK8AOAxPQAA5DwAQFy9AAA6PAAA57sAUIu9AMCNvACA8TwAgHy9AOBYPQAwzD0AgDe8AIAcPABgij0AgP+9AAB0PABwjT0AAOM7AMCIPAAQtz0AoE49ACAsvQCA6TwAAI67AOCnPQBgML0AoAu9AAAGPADAtzwAAGo8AEB0vQBgAr0AwAu9AABYugAA07wAAME8AAChvABAkzwAgAQ8AEC8vQCAY7wAQJm8ALDGPQCgWD0AIBO9AAA1vACAvrwAwIE8AEC8vQDAOb0AsPs9AAD+OwAAWLoAAL+7AABEOwAAizsAAJE7AACTvQCAtbwAgN68AAAxvADA+zwAUOy9AMDoPABAvLwAoIG9AMCuPADAizwAQEM9AIDCPACgjL0AMIs9AMAlvQAAST0AAI47AIDzvACAmzwAIFI9ABC8vQCAgLwAwPE8AADauwAgij0A4Ke9ACAmvQBgtT0AABm9AADuOwCALb0AAKE8ACBgPQAA5DsAgBm8AAAxvAAAMLoAAJC5AMAAvQDgNj0AgH68AIDWvACATrwAQMi9AKBUvQAARL0AALa7ACAgPQCABb0AIB+9APDyvQAgab0AALC6AACeOwAAITwAgAW9AGAiPQCAhjwAIIg9AAA8vQDA3TwAgGQ8AADwuQDghr0AgIw9AGBqvQAAvDoAgIs8AIB8PACgQb0AAGy8AHCGvQDAjzwAAOC6AADhOwCgFj0AYH89AECEvAAgbj0AgLo8AMCdvAAA0bwAAEq7AGB2vQBgz70AQH09AMDAvACAHbwAACe8AAB2PACAS70AwL28ALCFvQDAz7wAQCa9AMDTvAAAMjwAAIK9AIBRPQCAh70AAHi7AIANvADAdT0AYH09AGCMPQCAIr0AQCA9AEDbPAAAdrsAAKm8AMBFvQCAkz0AQAm9AMA1PQCgAb0AICO9AADSPABgWj0AQKy8AIBhvACgsb0AgJQ8AAB6PAAAQr0AACo7AAA3vADAujwAAOU7AGAUPQAA1DsAgMk8AMCCPAAAAAAAAIA6ACBiPQCgRD0AABC8ACBzPQAA1DwAAIk7AGBevQAAfrsAsLa9AIA0vQBA5zwAAIO7AIAsvQBAhzwAwKY8ACAqPQBglb0AIGa9AICOvQCgLT0AwMY8AFCXvQCggT0AQIo8AAA+vQAA5rsAAJs8AKB6vQDAV70AwFI9AABeOwAgQD0AAC48AAAgPABgnL0AIGy9AIAlPABgJ70AADk8AKCuvQAAf70A4GI9AACrvAAAwrwAwH09AACbuwAwhr0AAIo8AED6vAAQjj0AwOM8AABXPAAARzwAAD+8AIAcvADgAr0AgHO8AADWuwDwgT0AQI88ACBnvQDgTL0AgOU8AOBVPQAAA7wAQCa9AIAYvACAPDwAAOy6AEAIvQAgJb0AQF+9AAAIvAAAUjsAQN+8AECwvAAAFrwAAN48AAAOPQCgKT0AIL+9ACALvQAAbjwAoAs9AACrOwAA8LsAACS7AACJPABAKr0AsIg9AKA8vQBgQL0AAF69AACquwBAvTwAAOM7AMC/vABgBD0AQAU9AIDPPQDA2LwAALa9AABFPAAgBb0AgBm9AIA9PAAAprwAAIa8AIAEvADAyrwAAOA5AECePACwmL0AIDe9AICivABgQr0AgHs9AECgPAAQgD0AsLI9AABFPQDQy70AQO68AICcvACAMzwAgAs8AAAIOwCAcbwAIIw9AEDxvQAAl7wAoDm9AEC7vABAkTwAAKE7ACAIvQDAtbwAAJ67ACATvQAAUj0AAL68ACBavQDgqT0AgKA8AOArPQBgEr0AAE08AADwuwBwvT0AIDc9AIAIvQAABL0AAOu7AMA4vQAApjsAgIu8ABCCvQBgqj0AoGQ9AIATPADgIT0AMMc9AMCJvADAaT0AwJk8AACbOwCACDwAgIc8AACUvAAgO70AQMo8AIDxPACAYzwA4BY9ACA6PQAAqrsAcIg9AMCsPQAALDsAQCw9AEBwPQDQj70AgK28AAAIvQAABrwAYCs9AKAIPQAgTz0AgEo8AADVvADwij0AgK49APCPvQDAtTwAwIe9AAAZvQAAObwA0L+9AMAYvQCAp7wAwCU9AADTuwAQgr0AQNe8AKBjvQAAi7wAIFs9AACMvACgDL0A4Eq9AKA6vQAAmbsAAIC7AGAgPQAAYzwAAPE8AOBMvQAANr0AQJS8AKBuPQDgDr0AYAu9AMC3vABAXj0AANk7AIAsvACAODwAgGK8AIDBPQDAjLwAwCW9AACGOwBgDz0AAKm7AAAcOwBgbD0AAC28AEDMvAAATbwAoKE9AKA2vQAg8j0AAIy7AEAhvQDgqb0A4GK9AICSPACAGDwAQAi9AOCQPQCAir0AYAs9AACkvACA6TwAAHk9AMDjvADAZ70AgN28AAAePABAUD0AACQ8AOAjPQBAYj0A4EO9AABIvAAAorwAgME9AIAQvQDAWb0AgFy8AOAGvQAA4zsAABA9AAAlPQAAUrwAQA69ANC/vQCAUjwAgEK8AMCbvABAr7wAgAM8APC9vQCAiTwAYDk9ACBjvQBACb0AAFG9ACAQPQCACb0AgKo8AHCdvQBgHz0=","chunkHash":"3ea2d1cb8cb0ca211396f2df321d7672d1df2c291d59abee746335e87bed03d6"},{"text":"File: `train_with_morphofeatures.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    \"\"\"\n    A custom trainer that extends MorphoFeatures' ShapeTrainer to use our dataloaders.\n    \"\"\"\n    #...\n    def build_loaders(self):\n        \"\"\"\n        Override the build_loaders method to use our custom dataloaders.\n        \"\"\"\n        #...\n        # Create validation dataloader\n        if dataset_config.get('val_root_dir'):\n            # If a separate validation directory is specified\n            self.val_loader = get_morphofeatures_mesh_dataloader(\n                root_dir=dataset_config['val_root_dir'],\n                class_csv_path=dataset_config.get('val_class_csv_path', dataset_config.get('class_csv_path')),\n                batch_size=loader_config.get('batch_size', 8),\n                shuffle=False,\n                num_workers=loader_config.get('num_workers', 4),\n                precomputed_dir=dataset_config.get('precomputed_dir'),\n                num_points=dataset_config.get('num_points', 1024),\n                cache_dir=dataset_config.get('cache_dir'),\n                debug=True  # Set to False for production\n            )\n        else:\n            #...\n```","range":{"startLineNumber":46,"startColumn":0,"endLineNumber":61,"endColumn":0},"embedding":"ABDPPQBgUD0AQCI9ACAhvQAAvrsAAHW8AAChOwBwij0AQH29AACYPAAAujsAAKS7AADAuACgPL0AwPi8AACQOgDwwT0AgMA8AKBNvQBAzj0AYBU9AIDQPAAAOD0AoBO9AIBrvAAAo7sAQMq8AEArPQCA+TwAIHG9AAD2OwAA17sAUJe9AIBdvADA5TwAwF+9AEBXPQDgzT0AAFq8AIAmPAAQkD0AuAC+AECMPABgmD0AgJI8AACOPAAAvD0AwF49AMA/vQCA1TwAAOK7ABCuPQAgMb0AQBa9AADEOwBAsTwAgAo8AMB1vQAAzbwAQPa8AAAFvABA37wAAM88AIBIvAAAuDwAAAc8ADC3vQCAb7wAQKu8APC/PQAgST0AwAe9AAAMuwBAk7wAgB08AAC4vQAAM70A4AM+AADaOwAA0LkAAJm7AACCOwAA2TsAAAI7AHCXvQAAtLwAgOi8AAA/vAAA/DwAkOe9AIAFPQAAnbwAoIm9AMCvPAAAjDwAYE09AMDGPAAAjb0AAJM9AMAlvQAAJj0AACA7AIDgvACA5zwAYF89ACC6vQCATrwAQBM9AADFuwAwhj0AsK29ACApvQCwtj0AwAu9AACZOwAgSb0AgDk8AOBePQAAWjsAAIi7AIBSvAAAODoAAKA6AED2vADgLT0AgGq8AIDivACAKLwAQMy9AKBnvQCAYr0AACC8AKArPQBA6rwAYBG9AIDtvQDAdr0AANg6AAC0OwCAXTwA4Bq9AIAmPQDAmTwAoIg9AIA2vQBAxDwAgH88AABiOwDgf70AII89AOBxvQAASjsAQLY8AIAmPACgSL0AAHG8AKCHvQDAtTwAALk7AABiOwDgAD0AAIU9AIBqvADAYz0AQOI8AACKvAAA9bwAABq7AACDvQCQ1r0AAIM9AACgvAAASbwAgLK8AABuPACgUL0AQIi8AJCMvQBApbwAYDC9AAAHvQAAWDwA4Hq9AGBGPQAQhL0AAF67AIBIvACgcz0AAHw9AGCAPQDgEL0AACc9AIAAPQAA/DoAQIu8AABCvQBwjD0AgNO8AIAoPQBACL0AACi9AMDaPAAAWD0AQOK8AACouwAAur0AAD08AAAnPADASb0AAEg6AIALvADA2jwAABA8AMAWPQAAIjwAIAg9AAAkPAAAALkAAIy6AMBIPQBgVT0AAA28AMBxPQAAtTwAAMC5ACBMvQAAnLsAILS9AGA9vQBAujwAAJy7AAA1vQAAWzwAwKg8AOAyPQCAmr0AwFC9ALCFvQCAMj0AQP08AACEvQCQhz0AQIk8AOAjvQAA4rsAwNY8AJCDvQAAQ70AoGo9AAAFPACAPT0AADc8AAD2OwDglr0AcIK9AIAgPADAJr0AACA7ACC0vQCAdb0AAF09AICTvABAq7wAMIQ9AADguwBAh70AwLI8AMDsvACQgz0AwL48AIADPACADzwAAHm8AACQuwCA2LwAQJ+8AACUuwAQgj0AwJo8AABMvQCgSL0AQO48AKBAPQCAHLwAwBK9AIAivAAAZTwAALW7AEAWvQAgI70AoEO9AIBqvAAAk7sAAO28AABlvACAMrwAQNQ8AKALPQDAIj0AMMa9ACARvQAAlDwAQNU8AABgOQCANrwAACi6AIBSPADAH70AIHs9AIAtvQAAPL0AYFm9AAAHvACAzTwAAOQ6AADwvABAAD0AQM88ADDRPQCAv7wAAMG9AABgPACAEr0AYAi9AACfOwDAm7wAAK28AAAUvAAA17wAAAi7AMCrPADwnr0AgAW9AADVvADASr0AYE49AMCePAAAZj0AoKo9AEA8PQBgyr0AQPe8AAClvACARTwAABg8AAAwOwAAUbwAEJQ9ADDevQBAhbwAAD69AIDAvACAmTwAAAC6AKAQvQBAsLwAAPe7AEAGvQBgTT0AgNC8AIA0vQBAqz0AgGo8AEA5PQBgDb0AACo8AIA3vABguz0AoDs9AGAWvQCgFr0AgDq8AABPvQAA/jsAwJ+8ANCEvQDwrz0AoII9AADSOwCgEz0AUMQ9AAASvACgaT0AgK88AABIugAAYjsAgGA8AACFvADgS70AgA89AEDZPAAATzwAgPI8AMA4PQAAmDoAYHc9ACCnPQAA5LoAQDI9APCFPQCAlr0AAKW8ACANvQAACrsAwEY9AGAbPQAgOj0AgBM8AEDKvAAAgz0AYKw9AMCYvQCAkzwAwHS9AAAIvQAA87sA0Ly9AIASvQBAj7wAAEY9AAARvAAAf70AgKy8AKB3vQBAj7wAAFY9AIBzvACA6LwAYFG9AKAZvQAAfrsAAGC7AEAyPQCAKjwAgPE8AMBfvQAgIr0AwJu8AGB1PQBgD70A4AG9AIC6vAAAUz0AALk7AAAWvACAEzwAgHa8ABC7PQBAkbwAwCm9AAAwOwAAAT0AAAy7AAAwuwBQiD0AAJa8AECPvAAAQLwA4Ko9AKAmvQDA+j0AAGi6AAAlvQAwrL0AgFu9AICkPAAA+zsAAO68AECFPQBwjr0AwLg8AACavACA9TwAYHg9AIDlvACgfL0AQOq8AAA2OwBgTD0AgAA8AKBCPQBgaT0AYFu9AABTvAAAkbwAsLM9AEAUvQDgTr0AANa7AEAKvQCAcDwAwBg9AEAnPQAAW7wAIBS9ACC/vQAAtTsAACe8AICMvACAnrwAAGo8AJC4vQAAVTwA4D49ACBsvQAgDL0A4FS9AIAfPQDA97wAQMU8ACCcvQCAGj0=","chunkHash":"f966fe124f519417a3b71f89d9c9954fc561a38937d190a01366fffa876c92b7"},{"text":"File: `train_with_morphofeatures.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    \"\"\"\n    A custom trainer that extends MorphoFeatures' ShapeTrainer to use our dataloaders.\n    \"\"\"\n    #...\n    def build_loaders(self):\n        \"\"\"\n        Override the build_loaders method to use our custom dataloaders.\n        \"\"\"\n        #...\n            # Use the training data for validation (not ideal but works for small datasets)\n            print(\"Warning: Using training data for validation. For proper evaluation, provide val_root_dir.\")\n            self.val_loader = self.train_loader\n#...\n```","range":{"startLineNumber":61,"startColumn":0,"endLineNumber":63,"endColumn":47},"embedding":"APCsPQDAQD0AwPg8AADRvAAAZDsA4A+9AEDLPACQtT0AAI29AMDQPAAA9DoAAKy6AACQuwDANb0AYCe9AAAKuwBQuT0AwMM8AGBkvQAwuT0AwBc9AADBPACAIT0AAOi8AADFuwDAn7wAAJq8AABhPQBA+jwAwGq9AAAtPAAA/rsA8I29AACbuwDAvTwAIH29AMB2PQDQ3z0AANi6AIArPADgcz0AoAy+AIAMPQBwmT0AAGg8AAB6OwDwtT0AYH89AMAlvQAA3DwAgDS8AFCaPQBgGr0AgD69AAD9OwCAujwAAEc8AIBjvQDgFb0AgOa8AABIvACAHL0AwNQ8AICVvAAA6jwAACg7AODCvQBA17wAAHO8APCxPQDARj0AIBO9AAD7uwDAvrwAgFo8ADCvvQCgIL0AqBY+AADEOwCABbwAgAG8AAA4OwCAGjwAAEq7AFCNvQDA07wAgMC8AIBMvADAJD0AUPK9AOAOPQDA3LwAgF29AAC4PACAJDwAwGo9AIDSPADAg70AAGo9AKAmvQDANz0AANs7AED2vAAAkzwAAB49AICrvQAAkLsAAKE8AIAovAAgjD0AMJ29AMAnvQCQ2T0AQDC9AAA4ugCANr0AAJQ8AMA1PQAADzwAAEm8AAC1OwAAhzsAgEi8AMD3vABgVT0AQKq8AMAQvQAA97sAcMi9AIBrvQCgQL0AAEq8AEAkPQDAmbwAgPa8AFDzvQAAWL0AAFg7AACgOQDAnDwAAOG8AGAXPQAAXDwAAH09AIA1vQCgAT0AAJc7AAAsuwAASr0A4H89AEAzvQCAnzwAACa7AMClPADgUb0AAHC7ABCCvQAAdzwAABO8AMCVvACAljwAIHw9AAB+vAAgYj0AgLg8AACQuwCAOLwAgBe8AOA8vQCA3r0AQH09AICKvAAAkrsAwIW8AECWvAAA+7wAgIu8ACB2vQDAkbwAAP+8AIChvACAfTwAYGu9AKBFPQBQlL0AAES8AAD2uwCQkD0AIFs9AGB+PQCgBr0AAOU8AIAlPQAAv7sAQLa8AAA7vQBAYT0AoBK9AIBLPQCAmrwA4Ba9AAB9PABAOD0AQNS8AIArvAAAq70AgJA8AACVPACQi70AAIQ7AACtuwDAlTwAgHU8AKApPQCAKzwAgF88AIAOPACAHbwAwLM8AOBZPQDAWD0AAIe7ABCCPQAAVjwAwJa8AAB6vQAAOrsAYLO9AKBGvQAApDsAAIA8ACA+vQBA3jwAAHA8AGAhPQBwh70AYD69AGCGvQBgXj0AwPE8AACGvQDgkj0AALI7ACA5vQAATbwAAJU8AACMvQAQiL0AQGg9AACaOwDgKj0AABQ7AAA8OwBAVL0AwEi9AABhPAAgIr0AgAA8AJCfvQAAeb0AgHE9AMCQvAAA07wAUKM9AIAdvABAmb0AAEc8AEDUvACAjD0AgJk8AADAOAAAUDoAgKC8AAD4ugDgIr0AgKa8AACMOgBQhz0AQNc8AGBHvQCgLr0AoBw9AAAyPQCAX7wAwDK9AADCuwAA8jsAAIa7AMBMvQAAGL0AIDq9AADUuwAA4jsAwN68AMDovACAKLwAQCg9AMDzPAAgID0AMLK9AOAgvQCA2TwAQPc8AIANvACAe7wAAKO7AACiOwAAQL0AQHU9ACAQvQBgVr0AwGi9AADMOwDADz0AADC7AOAOvQBA9DwAgNM8AHDQPQAAo7wAYLe9AADGPABA+bwAAD29AACLOwAAprsAgNW8AABKuwBgGb0AACI7AIAxPADAjr0AAOa8AICivADgN70AgFs9AECXPABAVj0AwJU9AKBePQBwyr0AgN68AAAfvAAAYDsAAAy7AIAIvABApbwAUIM9AEDuvQDA6bwAcIu9AACmvADApjwAgBI8AID9vABAwLwAAOu7ACBbvQDANj0AwM68AOAxvQCAoT0AAAQ8AADYPADA07wAgKI8AIBzvADgoT0AAA89AEC7vADAPb0AwI68AKBGvQCAuzwAwOS8AKBTvQBAoj0AIGI9AABaOwBgRj0A4Ko9AIASvAAgaD0AgMA8AIAKvAAASLsAAJk8AECuvAAA0rwAgCM9AMAXPQAAlzwAgNc8AIAfPQAAODsAUJA9ACC9PQCArDwAAEA9ACCCPQDAs70AQKy8AIAkvQCAgTwAoB89AAAuPQDAiT0AALQ6AMD6vACwkD0AsKA9AJCjvQCAbTwAcIO9AMAqvQAAYLsAcLW9AGBLvQDA2LwA4Ag9AADoOwAwir0AAFu8AECWvQCAUbwAQDE9AIBPvAAA87wAgFy9AAAIvQAAbLsAgD68AAACPQAAwbsAYEA9AIAovQAgKr0AwKu8AOBVPQAA9bwAYBu9AECrvABgfD0AQIE8AADDvAAAgDkAwLy8AFC1PQDAorwAAAK9AIBBPADA6DwAgNi8AACEuwCAej0AwKq8AACkvABAk7wA0KM9AOA5vQBg6j0AAIy7AMBJvQBggr0A4HG9AAAsPAAAdzwAQPC8ALCHPQDQmr0AIC89AAC7vAAA1DwAoIU9ACASvQCgd70AANS8AACUOwCgLj0AgOI8AGASPQDgiT0AICa9AAAwuwBA2rwAANg9AAD7vAAAXr0AgE08AKACvQAAQzwAQAA9AIAYPQCAOrwAAB29AOCtvQAAwzwAgDi8AAAWvACAhLwAgC08ABC5vQCA1DwAACI9AHCQvQBAu7wAoEe9AMD7PABA/rwAwMM8AGCSvQCgJz0=","chunkHash":"cbdb0c5ef763858a2c4d26c533a55b8d021684b7931332f8cc0e2951c1a2b76c"},{"text":"File: `train_with_morphofeatures.py`\n```python\n#...\nclass CustomShapeTrainer(ShapeTrainer):\n    \"\"\"\n    A custom trainer that extends MorphoFeatures' ShapeTrainer to use our dataloaders.\n    \"\"\"\n    def __init__(self, config):\n        #...\n    def build_loaders(self):\n        \"\"\"\n        Override the build_loaders method to use our custom dataloaders.\n        \"\"\"\n        #...\n```","range":{"startLineNumber":21,"startColumn":0,"endLineNumber":28,"endColumn":11},"embedding":"ABC4PQCgQT0AAO48AIDpvAAAHTwAQPq8AAD5PABwwz0AIJq9AACLPAAAYbwAAIu7AABsOwCgGL0A4A69AAA2uwAwqT0AANk8AKAyvQCwvT0AoCs9AMCtPAAgIT0AQAG9AMCxvACAYbwAgFO8AEAoPQAANjwAwE+9AIBIPACAYrwAAIy9AACZuwDAgjwAYHy9AOBgPQCg3j0AAEi7AAARPAAAdT0A0AW+AMC9PABwkj0AAO47AACsOwBQnT0AMJg9AOAPvQBA7jwAABS8AKCLPQDALL0AYCi9AADDOwDAzDwAAIU7AMA7vQAAIr0AALW8AAB5vACADL0AAOw8AIC7vAAAzDwAADg8AIC8vQDA0bwAgIC8APCpPQBAMz0AQAq9AABlvAAAAr0AgKw8ANCovQAgKr0AgBk+AACMOgAAXrsAAEO8AAC4OgAAozsAQIi8AOB8vQBA4bwAQIS8AADmuwAAKj0AQPS9AEARPQCA97wAgFC9AIC4PAAA9zsAAFg9AAAiPQDAi70AwGE9AIAuvQCAPD0AgIE8AMAYvQBACT0AgCE9AJCvvQAAubsAAPo7AACsuwBAmj0AYJO9AKAuvQAA2z0AwAq9AACfuwDgJ70AwIY8AIA9PQCAczwAAHi7AABAuQAA4DsAAD+8AIAAvQCASj0AACC8AMBKvQCAIrwAYN29ABCBvQDAT70AgAC8AID8PADAqrwAQIK8AJABvgDwgb0AgFg8AABgOgCAajwAYAe9ACAhPQAArzsAQGc9AAAkvQDA6TwAAHA7AAAouwCAgL0AwFM9AOA/vQBAgTwAAES7AEDzPABAab0AgAi8AOBvvQAAQDsAAEy7AAA7vADAszwAwHE9AICpvACAbD0AgPQ8AADXuwAA/rsAAJQ6AEAjvQCAyr0AIIY9AACwuwAAobwAADy8AICYvADA37wAALO7AABuvQCA8rwAAPO8AIA3vAAAPzwA4H+9ACBHPQCwmL0AQIK8AIBGvADAeT0A0IM9AMB7PQBACL0AgBE9AKAMPQDAtrwAQKG8AKBAvQDwhD0AYB29AKAtPQDArbwAwCq9AIC8PACALj0AgIa8AIBlvABgq70AQL48AAD8OwBwhL0AAH08AADPuwAA7zsAAAA8AEAePQAAxjsAAKI7AAAaPAAAQLwAQKQ8AKBQPQAAaz0AAFa8AOB9PQCAYjwAwJO8AACCvQAAILwAQKu9AEBSvQAAdzwAgBk8AIA7vQAAzDwAAAs8AIAyPQBQkL0AIF69ANCJvQBgeT0AwKc8AGCfvQBAWz0AANw7AKApvQAA1bsAABw8AMB5vQAgeb0AYH49AADCOwAgQj0AQKc8AACQugDAa70AwEK9AAB4PADgFr0AAKi6AECuvQBAhr0AwJA9AMCmvAAAvLwA8KA9AIBcvABAgL0AABY8AICLvACgjj0AAIY8AADSOwAAADwAgDq8AAC2uwCAAr0AQN28AACZuwCghD0AAOE8AEBKvQAgTL0AgJo8AIAQPQCAILwAQEO9AIATvAAAkLoAgCm8AGBEvQBAK70AoCm9AACjOwAAIDoAgMC8AICMvAAAC7wAwAg9AEAQPQCAqzwAMKS9AIDVvACAdDwAgO48AMCjvAAAvrsAAIm7AAAXPAAAFb0AoJM9AGA8vQDgRb0A4Fm9AAAFPADA+TwAAIe7AEDqvADA/DwAAOI8AMC7PQAAoLwAcKy9AMDNPAAAqrwAoFi9AABIPAAADrsAIAW9AACNuwCA7LwAAIA6AACDPACglL0AgAq9AECovACAJL0AYHc9AICpPACgeD0AAJE9AIBlPQCw0b0AgM+8AABDvAAAEjsAADY7AAC3uwCAerwA4Gk9AGDyvQCAC70AIHK9AADRvAAArDwAAA08AKAZvQCADL0AgFS8AABMvQDAKj0AgKS8AOA9vQCAnD0AAB48AICqPAAAybwAAAQ8AICCvABwkj0A4BY9AMD8vAAASL0AAPa7AMBPvQCAbTwAgK28AEBdvQAgpT0AIE89AACoOgDgIj0AEMM9AEC3vACAgT0AALE8AABJvAAA4bsAAIk8AICMvACAx7wAYAE9AOA6PQAAbjwAwM48AKArPQAAbjsAMJI9AIDbPQAABTwAQDE9AABQPQBQqb0AALS8AMDBvAAAazwAwPU8AMAtPQBQij0AADY7AADnvACwhD0AkLc9AMClvQCAaDwAoH69AABHvQAAVLsAkLe9ACBJvQBAqbwAwM48AACMOwDQmr0AgF28AKCNvQAA57sAIC49AICTvACAFL0AwGu9AEDWvAAAjLoAAJi8AGAhPQAAgDkAADo9ACAMvQBAT70AQJi8AGBtPQBA37wAYDO9AAB2vACAhT0AAMU8AICgvACAXLwAwLC8ANCXPQBA17wAgPG8AIAiPACA0zwAAOu8AAAwOgBAiz0AAAW8AAAVvQCAlbwAALw9AMAzvQCQ6D0AAIe7AOATvQBggr0A8IK9AIBlPAAAVTwAgNm8ADCPPQBwjL0AgB09AABAvAAAyDwAQIY9AECkvABgYL0AwAm9AACrPAAATT0AwEE9AGArPQBAqz0AIBi9AABqOwBA5rwAEOA9AAC/vACgSr0AAEo8ACAWvQAAxTsAQCw9AAA6PQAAR7wAgBO9AMCzvQDAwDwAAE+8AAAzvADA/7wAAKk7AKDGvQCAyzwAgBc9AMCFvQCAebwAwBy9AMDJPADgBb0AAPg8AJCBvQDAPj0=","chunkHash":"312ae6bc22de77f81fe5fab1db611af81196a75d04050984937705428895e8ae"},{"text":"File: `train_with_morphofeatures.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Train MorphoFeatures shape model with custom dataloaders\")\n    parser.add_argument(\"--config\", type=str, required=True, help=\"Path to config file\")\n    args = parser.parse_args()\n    \n    # Load config\n    with open(args.config, 'r') as f:\n        config = yaml.safe_load(f)\n    \n    # Create trainer with our custom class\n    trainer = CustomShapeTrainer(config)\n    \n    # Run training\n    print(\"Starting training...\")\n    trainer.run()\n#...\n```","range":{"startLineNumber":66,"startColumn":0,"endLineNumber":80,"endColumn":17},"embedding":"AABbPQDgeT0AAFs9AAB/vQAAZbwAAAO9AICmPADwsj0AAE69AGAwPQAAyLoAwJ+8AABbPACA/rwAANm8AIARPABgTD0AsI49AAAevADgvT0AgJ09AIDfPABApDwAAES7AIAcPACA1rwAALw6AIDZPACA8zwAgHa9AEDOPABAmrwAIIO9AACKvAAA1LoAoBW9AICePABwlT0AwKG8AECAvAAgDT0AYLG9AIBXPAAwqz0AAPs7ACAUvQDgej0AgHg9AADFOwAA5jsAgD+9AGAcPQDA6bwAQIU8AABLvAAADT0AgFS8AMALvQDgQb0AgKO8AEDcPACAYL0AwOc8AIAyvACAFDwAgNM8AGCuvQCA7bwAQBy9AECTPQAgET0AIBe9AACguQCAl7wAADo9AHDUvQBAcb0AoBg+AIDLvABAA70AgHo8AAA4vAAAgDoAoCC9AEDYvABAU70AAIO7AIABvAAAFLsAoNy9AOAPPQAAaLoAABG9AIAMPQBgXz0AwEE9AEASPQBwwb0A4HA9AACIvQCAWj0A4Aw9AMAnvQAQjT0AwOQ8AMBtvQCAlTwAQMI8AACbPADg6z0A8La9AMAEvQDAmz0AIBW9AIA5PABAJL0AAC09AADgOgAADjwAAAw8AAByOwCAVD0AgBm9ACBbvQCAZzwAAD88AIBmvQAAgLsA8NW9AMAfvQAgHr0AgBA8AOBaPQBgB70AoBu9AJARvgAAUL0AgHw8AIBBPACgYT0AAEC6AAAAOgCAurwAQHI9AACEvQBAGT0A4B+9AGAiPQCAa70AAF89AADzvACA5TwAgII8AIDmPADA1LwAAKy6AEBVvQAATDwAgDc8AIC7vAAAhbsAgBY9AACPvADgOz0AoBI9AABQOwAgQr0AAFs8AMAqvQDwx70AgHw9AICAvADAKL0AoAS9AAA3vADA9bwAgBU8ACBRvQDAobwAgNu8ACArvQCAlTwAkIm9AIAXPQBgAL0AgC28AABIOwBAUz0AQAQ9AACCPQDgIL0AgIE8AICmPACAP70AAFa7AABgvACwyD0AAB+8AICyPADAzjwAICG9AMBzPQBACz0AAEq8AMAMvQDQr70AwPE8AABOvACAdb0AgEs8AICEvAAA4DsAQI88AMDsPABA57wAgA+8AABPvACAJTwAAEM9AAAcPACgdD0AgJ+8AECxPQAAkzwAgBw8AMAivQAAFrwAsN69AMCtvABAID0AAMC5ACAXvQCA3zwAgOA8ACCQPQBgcL0AAAy7AMBjvQDA8jwAwCE9AABvvQBAqjwAAIc7AGBNvQDA/TwAgCW8AADsvAAAnL0AgJc9AEC6PACAYz0AICM9AADwOQDASr0AAI67AABbPABgJ70AQPi8ADCvvQBARr0AMIE9AACPuwDA3rwAIF49AABpvABgUb0AoBi9AIDIvACAQTwAQOC8AABQuwAAYLwAAGw8AAAmuwCAbL0AANY7AIAHvABwlT0AAAA9AOA3vQCA27wAABW8AEA3PQAA4DsAQMy8AIC5PAAAqrwAIC69AMA7vQCAC70AAFg6AMDYPACAA7wAAKy8AIAGPACAW7wAwP08ACCCPQAAuTwAwG+9AACcOwCANDwA4Hg9AAAvvQCAOTwAoBg9AAA1vABgSr0A8KI9ACBFvQAgbr0AgCq9AOBdPQCAFjwAAMC5AKAMvQDgLD0AAAg9ABCRPQCgEL0AAIi9AMAKvQBArzwAYCS9AADkOgDAiTwAQKK8AGAIPQCgXL0AANE8AABXPAAgsr0AgIC8AAB4ugAAYDoA4AQ9AACQOQCAvT0AIKg9AIC2PQDQ+r0AYAW9AKBuvQBAPj0AQAS9AADNPACAeDwAwB49AKB0vQCAzrwAQAu9AADQOgAAuzwAgAQ9AADpvACAaL0AgMe8AKAevQCAXTwAQNu8AGBAvQBApjwAAPi7AMDvPAAAbLwAAC08AOAFvQBgjz0AgJs8AOAKvQAA17sAAEm8ABCzvQCgN70AAEu8AECQvQBgKj0AgIM9AIB9PAAAET0AIN89ACAfvQBgHD0AgEo8AAAcvQAATL0AgE08AABWPABA0LwAQPM8AECXPQDAq7wAAMM7ACBnPQAAXjwA4FQ9AGAHPgBAtjwAoAY9AADOPADAWr0AAAi9AEACvQCAXDwAQE09ABCNPQAAXz0AgES8AEC+vACgWz0AANA9ABDOvQCADzwAIDi9AKB6vQCAhrwAENq9AMDFvABAA70AAO48AICfPADgV70AgDG8AIBLvQDQgb0AQFk9AABKPACgAb0A4Aq9AADAugAAOLsAAM68AACbPADgKD0A4Bg9AKCHvQCAWrwAAOi8ANCQPQDA8LwAgBK9AIAdvABASD0AYCc9AAA+OwCAArwAYB+9ABCnPQAACr0AAAS9AACrPACAGzwAgNq8AACUugDQkj0AgDC8AAC0uwDgK70AwPE9AADMPABQ1j0AgMw8AMDbvAAABL0AALK9AMAAPQAAvTsAALC7AIAvPQCAdb0AAGS7AMD0vACALjwAAOY8AAACuwBgAb0AAE+9AACxPAAgVT0AgFA8APCNPQDg1j0AwDG9AIAGvABA1rwAkO89AIBAvQAACLwAALk7AAClOwCASrwAoEM9AIBlPQAAHLwAgOm8AKDPvQAgC70AgEm8AAAguQAgKb0AgAk8AGAxvQCgZz0AoCc9AEAcvQCA4rwAAO47AACtOwAAwrwAAIY8ACBOvQAAHT0=","chunkHash":"97a35c46d2b4e99b1f10f59ce4a1ae2b982b81182ec154d10433c3e2efe08f1c"},{"text":"File: `train_with_morphofeatures.py`\n```python\nimport os\nimport sys\nimport torch\nimport yaml\nimport argparse\nfrom tqdm import tqdm\n\n# Add MorphoFeatures to the path\nsys.path.append(os.path.abspath(\"MorphoFeatures\"))\n\n# Import the MorphoFeatures shape trainer\nfrom MorphoFeatures.morphofeatures.shape.train_shape_model import ShapeTrainer\n\n# Import our custom dataloader adapter\nfrom dataloader.morphofeatures_adapter import get_morphofeatures_mesh_dataloader\n\n\nclass CustomShapeTrainer(ShapeTrainer):\n    \"\"\"\n    A custom trainer that extends MorphoFeatures' ShapeTrainer to use our dataloaders.\n    \"\"\"\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":85,"endColumn":0},"embedding":"ACCpPQDQgD0AABk9AKBgvQAAhDsAANG8AIDiPABASD0AYFW9AIClPAAAzDoAgCS8AAAIuwBgUr0AANe8AECGPACAYD0AgCo9AACivAAAtz0AIGM9AIA9PQCAOzwAgBq8AECQvACAKr0AwOG8AGB5PQCA/DwAYF69AMDHPACAHLwAII29AAACuwAAuDsA4GK9AEAxPQDArT0AABO8AACHuwAAET0AEPa9AIC6PABgrj0AQPY8AIAUvQAgjT0AAD49AADsugCA8jwAAG47AKBxPQCgZb0AAA67AMCqPAAADDsAADK7AIDjvABA6rwAoB69AACwvADQgL0AgNg8AIAKvACgBD0AwLU8AACbvQAAyrwAgAG9AHCEPQAgZD0AAOe7AACuuwDAKr0AAMg8AGDVvQAAKb0A6Aw+AABAOgCAfLwAABa7AADtuwAASTwAgBO8AICRvQDgGb0AIIq9AADfuwBAgjwAkPK9AEDePACAHDwA4Cu9AID4PABANz0A4Hg9AIDePACAoL0AYCs9AIB9vQDAfj0AAI08AEBfvQDAVj0A4Gg9AMCGvQCAUTwAgCK8AABKuwBwiD0AYFq9AAAougBQ6D0AgC+9AABMPACgIL0AcKc9AAAePAAARTwAACw7AICCPADAzjwAwNq8AKAqvQCAKjwAgHm8AOACvQAAVjwAEOi9AOA8vQBAjLwAgPu8AMAuPQAABrsAAEm8AADsvQDAxL0AwJK8AACWuwBgZj0AAMA5AIA0PAAA4zsAoCI9AGABvQAAJjwAgDC8AAB9PACgY70AQI89AID7vACAZjwAADE8AAD2OwAAsDsAAPG7AHCcvQBAnjwAADI7AAAUPAAAwDwAgCU9AECJvADArT0AoCY9AIBNPAAgY70AAPg7AOB5vQDQ2b0AcIM9AEC6vADAt7wAgFS8AADluwAAYrwAgG68AGAHvQDANb0AgEq8AOADvQDA+TwAsIu9AKAFPQDQh70AwA+9AAAKPABQnj0AALQ9ABCePQCA2bwAAEw9AAC4OwDgC70AgC28AIADvACAsz0AYBa9AEDBPAAATrsAAOa8AKAuPQAgZz0AYEu9AKAJvQCgj70AAJY7AAAAvADQlb0AQJC8AACjuwBAFz0AgDk9AEBkPQAArDoAABc8AID1vACAPDwAgDs9AIAJPQBAbT0AgLG8AOCOPQAAQDkAgBS8AEBHvQAAdrwAYO69AIAUvQBAIz0AAFi6AOBvvQBAzTwAAB48AIA7PQDQiL0AANS8AECYvQCgUT0A4Bw9ACAXvQBgcT0AAN07ANCFvQBAlDwAAE88ACAUvQCAvr0AIDc9AICJPADgSj0AwLo8AADBPABAyLwAAMW8AABDvACwir0AAE68AKBsvQDger0AwD49AADduwAAw7sAYJI9AAAEOwBAAb0AgHG8AAASPACgVz0AANs7AED3PAAATjsAAJg8AADxuwCwlb0AAAK7AAC5OwBAXj0A4AU9AGBXvQAAWLwAgDQ9AEC/PAAAPDwAwDW9AICCvACAjzwAABk8AIARvQDAgrwAwGa9AIA8PAAAIDoAgGG8AACbOwAAwzsAQAo9ACBxPQBAwzwA8Ji9AAD8vACgAz0AoCE9AOALvQAAgrsAAKw7AECQPABAo7wAACQ9AIDdvAAgS70AQPi8AMAFPQCA3jwAAEo8AGAevQBA5zwAQKY8AOC+PQCAG70AEK29AID7vADAnbwAYCO9AAA8vAAAhLoAwJO8ACAMPQAAkr0AAKC7AICIPACAvr0AQL08AICavABgBL0AwDI9AAByPABwyD0A8JM9ANC6PQDA2L0AwES9AMA1vQCALDwAwNW8AADwuwAAIjwA4Cs9AJCpvQBAAr0A4Ee9AIAQPAAAzDwAADs8AOAgvQAgTr0AgO28AGArvQBAQD0AQJi8AIAIvQDgNj0AgMg8AEAmPQAAa7wAwPs8AABEOwDwqT0A4BI9AICwvACA2rwAgLu8AKBCvQAA87wAoAO9AMAWvQCATz0A0JY9AIA9PACAWD0AEMY9AABfvACAEj0AQPI8AICxvABgTr0AgDo8AMCdvAAA67wAwD89AGB2PQAACDwAAMs7AKBoPQAAkDoA8IU9AODPPQBgBj0AYBU9AIDuPAAglb0AAMe8AMDovABAsjwA4Bc9AJCbPQCwmT0AQKk8AIAMvQAATD0A8M09AJDUvQAA2zsAIBe9AIAuvQAAqbsAAKi9AEAjvQBgN70AgOQ8AIAAvABAkr0AAPW7AECrvAAgfL0AQGA9AEC3PABgAb0AIAS9AEC/vADA+bwAoEO9AIDbPAAAaTwAwDc9ACBgvQCAFb0AABq8ABCGPQAAAbwA4D+9AICrvADAkT0AgB09AAAIOgDAlbwAwLi8ALCjPQAABb0AoCC9AIA/PAAAFLwAQC29AEC+vADAaD0AQOS8AABIvADAEb0AsKQ9AMDPvADA3T0AgLy8AAAzvQBghr0AQJS8AADOPADAnjwAYB29ACCDPQCwgb0A4CI9AEDKvACArLwAAGg9AIAAvQDgfb0AYAe9AMDQPAAAuDwAAJK7ACBePQDQpz0AoBG9AMDYPADA8rwA4Pw9AKAYvQAAxbwAAEg7AABEOwAAgLoAIDo9AIDOPACATbwAAF29ACCovQCAgrwAAH+8AEC6vADA17wAAEK7AAAxvQDA5jwAAMU8AOAOvQBAKr0AwLC8AACpOwAAGLsAwLI8ADCBvQDAijw=","chunkHash":"54282675de2d619c13920b82a463f24ce019bd89841f64b9ef013b7789f8e87f"}]},"file:///teamspace/studios/this_studio/scripts/temp/.gitignore":{"hash":"d201326c729f40b244b9b861c68d102da7144af5c86e8721069937c28f1a8add","entries":[{"text":"File: `scripts/temp/.gitignore`\n```ignore list\n*.tiff\nnuclei_sample_1a_v1/*\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":2,"endColumn":0},"embedding":"ACAEPQAAALgA4FU9AMAZvQCgeb0A0Ii9AMACvQDgPb0AMA++AAC7vABA47wAwBI9AEDavACAS70A8IG9AIDMPQCAt7wAwO28AOCCvQBAgzwAoCY9AIA4vACQqz0AgKe8AAApvADAo7wAwL+9AEBTPQAAFj0AQO48AABhvQBAlb0AAIO8AECOvABQ0L0AgF48AGB8PQBgFz0AgIq8AGBxvQAA4zsAQBC9ACAQPQBgHL0AAOc8AAC+PABAOD0AALa7AACJuwDA1TwAgM08ACA+vQCA/bwAQJc9AEDXvABAjTwAIIq9ANCLPQAAlrwAANW7AABNPAAAGr0AAN48AIATPACArrwAEIg9AJCNvQCgb70AQCA9AAD4OwCATDwAgD28AABSvADgDr0AwOw8AAD+OwBAvrwAwPu8ACBTPQBwqr0AoB09APDGPQAgbD0AQPa8ACBAvQDQir0AoLW9AIBRPADwmr0AgMM8ACAovQBgfT0AABI8AADlPAAAArsAQLE8AAAEPADA2LwAAHS8AJChPQBABz0AAHU8AIDvvQBAtDwAcOk9AICVPACgKj0AABa9AMDfvADA8zwAAF69AOCovQDgez0AcIk9AIA8vADgIL0AoBy9ADDAPQAAljsA0Ie9AACQPAAAcDoAAM+7AGAtvQAAlTsAgEa8ADCoPQAgXT0AAJ+9AIBUvQBA5jwAwLg8AMCnPQAAOb0AAHw7AAC+vAAAtrwAAFs9AMCcvQCgyz0AAKE7AAC+vABAjD0AYFk9ACAAPQAgKr0AANg7AOAmPQDgAD0AsN09AAC4ugCAPz0AAAY8AAC1uwDA4bwAYGm9AMCKPAAAWLsAYCK9AACWvAAwiL0AwPo8AIAvvABAIT0AgL68AAAzvAAAPrwAICG9AOBQvQCAObwAAAe8AADYvAAAeLoAgJq9AAB1vAAwpj0AgFi9ACAxPQBQqL0AYAI9AIDZvADAGz0AAIa8AADKvABAlrwAoD+9AEC9PADArjwAwLm8AIAlPAAgLD0AYDE9AABbvACQ3z0AQPs8APD4vQAAlTsAgEm8AIDZPAAAjDsAoAS9AICcPACAfTwAQDM9ANDIvQCANb0AQOo8AECovADAorwAAEi7AACouwAALjsAQHC9AAAjvACA6DwAgHU8AMClPAAAsjwAgCu8AACbPAAAtLwAwIE8AEALPQBgED0AwNk9AADkuwAAMDsAQDi9AADvuwCgJz0AAOm7AAC9uwBgBr0AgJ68AED0vAAAsbwAQIm9ACDPvQDA6zwAgE88AIAzvAAAfz0AQKk8AMC3vACAMDwAYAm9AECAvABArLwAQGy9AIB5PQBArrwAwO88AABOOwCwrb0AAPw7AIB6vAAgL70AYEk9AKBjvQBAvDwAoB29AADOOwCAEL0AII29AIBavQDAsjwAMIo9AAB3PQAAlD0AAFw8AIAKvQAAbLwAQMk8AOD0vQAAeLwAsJ89AMAyvQAA0TsAQB49AADdOwAwh70AgNy8AMDYvACAqLwAALi7AEATvQAA/LwAQDk9AIAgPQCASL0AAL88AMChPACAvzwAAFM8AOBovQDQgL0AwIy8AID4PACAJr0AwKG8AACwOwDgjr0AADk8AAD0vABgeL0AICU9AIBcvACAirwAAFA8AIBiPQCACrwAsKu9AAAXvAAATjsAgB08AEAjvQBAXr0AoBk9ACDTPQAAFjwAgMY8AODmvQAAXDsAAFQ8ACA9vQCg1z0AQJ48AADzOwBA3TwAYD+9AICsvACAjr0AAAo8AAAQvACAdLwAwDa9AIASPABglj0AACG9AICbPABAQ70AQB29AEARvQAAfTwAgCM9AABOuwCgyr0AoA09AIBUvAAAxTwAYBy9AAAsuwDgP70AIGW9AEBVvQBgRT0AICK9ANCPvQDgU70AgI88ACApvQAA5DwAgAc+ACABPQCw3T0AQIu8AAAWvADAEL0AADS7AACluwDA2zwAAMa7AIB6vABgC70AsKK9AOBmvQBAMT0AgGE9AABwPQBAr7wAwMC8AADBuwBA9jwAAJ47AAAeOwCAdz0AgGs8AADtuwAAkDsAYGo9AACcPAAAQDsAwJg8ACApPQAAtDwAAGC8AOBYPQAQnD0AAJ07ADCPPQBAQj0AYAM9ABCYvQCAbjwAABC6AADeOwBw8j0AIK89AMCTPABATL0AALs8AADqOwCAUTwAAMK7AABnvAAAwLoAgPG8AABqOwBgeb0AAAi7AABgvACAQbwA4E+9AOC2vQAAQrwAAAA4ACAJPQCAWDwAoH49AAAwugBAgjwAAJW7AOD9vQCAOLwAoD89ACAqvQCAtLwAwDQ9AOBdvQAAM7wAYGm9AAAuOwCAALwAEJk9AIBRvACA9bwAgGC9AABIvQDAJL0AoIW9AMATvQAAUr0AAAC5AABTvACwuz0AAC47AACcPABAhzwA0KQ9AKAKvQCARLwAAIU8AMAfPQAgDD0AgGk8ACAgvQCAerwAIEM9AMDRPAAgO70AQPQ8AADyuwAADjsAAK87AADnOwAAnbsAYEo9AKBzvQAAvTsAoKi9AABwugAAwrsAADI7AMAOPQAAkrwAsKA9AIBQvAAAtjwAAP87AEATPQAAgzsAgMg8AACaOwCAebwAAJg7AADGPADAWz0AgFy8AIB+vQCgOr0AgLu8AEAsPQBgaj0AIEg9AAAPvQAAErwAQJK8AEDQPADA5zwAgAk8AABxvACAZ7w=","chunkHash":"9eb18c0e272ca01e6cf60af7cf022ee40cc3859df6787977de46857e2123bd5c"}]},"file:///teamspace/studios/this_studio/scripts/temp/generate_sample_mesh.py":{"hash":"9fed3651871174fa689e4f9f54e028d28708dcc69263119c1dcfcfc77339f085","entries":[{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\ndef generate_sphere_mesh(n_vertices=1000, radius=1.0, noise_level=0.05):\n    \"\"\"\n    Generate a spherical mesh with the given number of vertices.\n    \n    Args:\n        n_vertices: Number of vertices in the mesh\n        radius: Radius of the sphere\n        noise_level: Level of noise to add to vertices (0.0 - 1.0)\n        \n    Returns:\n        dict: Dictionary with 'points' and 'faces' tensors\n    \"\"\"\n    # Generate points on a sphere\n    indices = np.arange(0, n_vertices, dtype=float) + 0.5\n    phi = np.arccos(1 - 2 * indices / n_vertices)\n    theta = np.pi * (1 + 5**0.5) * indices\n    \n    # Convert to Cartesian coordinates\n    x = radius * np.cos(theta) * np.sin(phi)\n    y = radius * np.sin(theta) * np.sin(phi)\n    z = radius * np.cos(phi)\n    \n    # Add some noise\n    if noise_level > 0:\n        #...\n```","range":{"startLineNumber":7,"startColumn":0,"endLineNumber":30,"endColumn":0},"embedding":"AAAmvQDAhbwAsIk9AAA8vAAAuLsAAGa9AADZuwAAILkAwJ28AEClPABAubwAgLQ8AECJvADAoL0AAJ+8ACCtPQBgXL0AAAk8AMAVvQAAxLsAwAw9AGA0PQBgOz0AQJe8AOArvQBgWD0AgJk8AMAwPQDAZD0AAEu9AKBlvQDAq7wA4FS9AOBQvQCQzr0AAEg7AKA1PQCApDwAIAG9AEBHPQAAm7sAcLe9AABdPQAADDsAAHK7AACkPABgBL0AoDK9AFCAPQCAXbwAgDE8AECtPAAAZD0AAFC9ALCCvQAA4bwAAFe9AKAlvQAAFLwAIEg9AOBYPQCgj70AALc7AOANPQAAC7wAADK9AACUPACAa70AAHQ8ADC3PQDAAL0AAMU7AECQPAAA+7sAgIC8AMDKvACAzzwAANw6AKBmvQDA9LwAAIy8AABZPACAaD0AAGo8AMDbvQBoDb4AAJ08AEDgvADwub0AQL+8AIBHPABAlj0A4Dy9AECCPAAAqLoAAJi7AMBhPQAATjsAMN89AABuvACAerwAwLU8AOAKvQDgaz0AkJQ9AABWPAAAmTwAQLw8AEDmvABQxD0AQLY8AACQuwBAID0A4Eq9AEDbvAAADDsAQKw8AAD7OwAAR7wA4AG9AEDovACgCL0AAOI8AAAIPAAA7DoAAOC5AIC7PAAApLwAgBs8AAChPQAAHj0AgN28AICxPAAAIb0AIGm9AIAivQAApDsAYKq9AGBIPQBgOj0AgC+8AECKPACATjwAAJk8AKARPQAgBb0AQHq9AADYPAAAzjwAMJ49AOBlvQCASz0AAG67AIC5vACAhD0AAKy9AABoOgDwiT0AwJG8AACSPACgJr0AAP68AGApvQBgYb0AgOY8AECmPAAAUb0A4L29AICSvACAGL0AwOc8ANC3vQCgZz0AgAG8ANC3PQAAsDoAQDg9AECDvQAASTwAAFM8AICEvQAAGT0AADi7AABEuwAAALsAgEI8AMDIPAAAMLwAYH49AAAKOwAA5LsAgDo8AMCjvADAw7wAIEe9AJDBvQDAnjwAwIW9AMDEPACgEb0AgEy8AOApvQAADTwAwD29AECxvABgjr0AwAi9AADZvAAAxrsAANO7AIAuvABAsDwAwDc9AICsvADAcL0AAPA5AABJvAAgaz0AgAm9AIBZPQBAer0AYHA9AGAyPQCASj0AoG49AAC8uwAAgTsAgEu9AABTPQAAJz0AgCw8AABIOwAAwLoAgG68AMCuvACAcbwAQE09AOAWPQAgLb0AIF49AIBKPAAAALkAoAu9AABougDA8jwAAAI8AECGvQAAZDsAQJY9AID8vACAkzwAAL67AAA7PQCAoLwAgNy8AGCWvQDwuL0AQIm8AACtvAAAvTwAgOo8AIAIvQCAvL0A8Ic9AABuvAAAIrsAgMm8AACQuwBgCD0AgAa9AECFvQBASL0AAH28AOBjvQAgRr0AAIQ7AACNPAAAaTwAgCk8AMDcvAAAGDwAgNC8AMDkPAAAeDsAIBY9AMAUvQDAJj0AADQ7AKAFPQBg9b0AoBE9AAAPPQCwwb0AsKQ9AACbvACAfbwAAOg8AKBPPQCATrwAQDq9AHCuPQCAvrwAAO89AADHOwBA7r0AIAK9AMCgPQCAVDwAIGE9AECGPABAXj0AgD49AIDUvADA9TwAYGM9AAD8uwBQzT0AgFg9AECgPQAAHr0AgKe8AMDQvADQhz0AAPE8AFCCvQCAFDwA4FO9AACaOwDAED0AUKW9AECHPAAAeLoAAMq7AOBUPQBAmDwAQGO9ANClPQDAtDwAgIa8ACA/PQDAG70AgBg8AIDOvAAgoL0AwIM9AMCiPQDAk7wAQPc8AOA1PQCAVTwAQJ68AAADvQBAnTwAUNY9AEDmPADAjTwAACw7AGB7vQBgWL0AAD28AJDLvQCAbDwAgH88AAC4PAAAnDoA4L09AJDxPQAgCj0AgAa8AABXPADQwL0A4DI9AAA9vQCAVLwAoEK9AMB4vQDA1zwA0JE9AADpvAAA9jwAwK08AGAGPQAwjL0AAGE8AID3PACgBT0A0Ic9AMCVPABAOb0AAEK9AMDqvADAZb0AQBI9AACDPQDgQz0AgHQ8AACduwAAdjwAAMS8AABXPAAAnjsAwPw8AADmOwCAjDwAYCe9AMDfvADAhT0AgJ89AEC3vACgE70AIGM9ACBZvQAAdjsAAC48AEBVvQAAF7wAAOc7AMDuvAAQw70AYCM9AMCivQAgKr0AoDw9AEAjPQCAIDwAwMc8AABWuwDAsz0AQIQ8AMBjPQBAFj0AAAA8AADAOwBgFT0AQIg8AKDGvQAgCD0AAIy8ACB7PQDA1jwAAGo7AEDRvABgO70AkJM9AEAOPQBAB70AgHw8AIBBvABAhjwAgPi8AACIOwAAqzwAAJw7AACMvADAbz0AAOy8AJC4PQDALD0AwJQ8AAANvQAA/zwAYCE9AED5vAAAKbwAgFG8AICEvQCAWbwAALE8AAAaPQCAebwA4EC9ACAtvQBAlz0AAMA7AACqPAAAjr0AAOM7AAAZPQAA1zwAYGw9AKB0PQAAuDsAYDI9AIBwPQDAFr0AAJ88AGA4PQDAaD0AwLo8AAAWuwAQir0AQJA8AEDQPQAA27sAgJA9AICivACgfb0AAHq8ADABvgAA1bsAgL48AIC9PAAAzDwAAM48AMB2vQAATjsAsIq9AACqPAAAnDsAAIM9AIAEvACA0jw=","chunkHash":"1af900d325d39e1ade7f05bd1f6ec5c500f56a0934c118fcf5ddb2e81c44ba22"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\ndef generate_sphere_mesh(n_vertices=1000, radius=1.0, noise_level=0.05):\n    #...\n        x += np.random.normal(0, noise_level * radius, n_vertices)\n        y += np.random.normal(0, noise_level * radius, n_vertices)\n        z += np.random.normal(0, noise_level * radius, n_vertices)\n    \n    # Combine points\n    points = np.column_stack([x, y, z])\n    \n    # Generate faces using Delaunay triangulation\n    from scipy.spatial import Delaunay\n    tri = Delaunay(points)\n    faces = tri.simplices\n    \n    # Keep only outward-facing triangles (simple heuristic)\n    centers = np.mean(points[faces], axis=1)\n    norms = np.sqrt(np.sum(centers**2, axis=1))\n    valid_faces = faces[norms > 0.7 * radius]\n    \n    # Convert to tensors\n    points_tensor = torch.tensor(points, dtype=torch.float32)\n    faces_tensor = torch.tensor(valid_faces, dtype=torch.int64)\n    #...\n```","range":{"startLineNumber":30,"startColumn":0,"endLineNumber":50,"endColumn":0},"embedding":"AABuvADA+rwAMKc9AAAtvAAACLsAwDe9AAC0vAAAfrwAgBy9AECgPAAAwDgAgJU8AAAfvADAir0AgHu8AKDoPQDAd70AANe7AOBHvQDAijwAgOo8AIBAPQDgej0A4GO9AGAbvQDAWT0AgJs8ACA9PQCAdT0AgGu9AKAFvQDAwLwAgEO9ACARvQDg970AwMI8AAD3PABgKj0AQNy8AECiPAAAsDwAQH69AEAVPQAASrwAAM47AAD3OwDAK70AAH29AECLPQAAiDoAAOg6AAAVPQAgPT0AQMO8ALCqvQAAsbwA4F+9AIDZvAAAyLwA4FY9ACAwPQAAGr0AgBE8AEC4PAAAGzwAgH68AAA0PACAR70AACY9AGCmPQDADb0AAOc7AECIPABgFL0AACI7AABTvAAAHzwAAOC5AABhvQCAxrwAANm7AADsugBQpD0AQN88AJCsvQDwvr0AQIe8AABSuwBQyb0AAI07AAADPABAfz0AwBO9AIBzPAAAgbsAAI47AAA0PQAAprsA6AA+AECKvAAAiDoAoEs9AIDjvACgnz0AIGg9AABSPABAvTwAwP08AACBvADw8T0AAF88AADQugCA3jwAQNK8AACMvAAAhLwAoBA9AEAhPQAAALkAAEA5ACBkvQAA8bsAAJm7AAAQuwAAGjsAIAK9AKBhPQDghL0AgDs8ANCBPQDA6DwAgH88ACAPPQBANb0AwGu9AEChvQAAnDwAYEa9AGBYPQBgUj0AgHC8AIAiPAAArjwAYD89AIC6PAAAYLwAYHS9AKBoPQCAmTwAEJM9AGBSvQCgZD0AYAC9ACAdvQBgVj0A8Oy9AEDtPAAgnj0AwJm8AACGOwDAqbwAgJS8AACAvQCACb0AgN08AEC8PACgF70AYFi9AIA7vQBQlL0AgMs8AGAivQBggT0AgKi8AKDkPQBA2jwAALc8AOCYvQAAWDsAAAu8APCCvQDA8DwAAPY7AMDqvAAAS7wAgBQ8AMBPPQAAIrwAgFM9AAB4PQAASTwAwEQ9AGA0vQAAErsAAPa7ACDovQAgWD0AAAW9AAAKOwCAHrwAgIu8AABAvADA3jwAIB29AEDavACQoL0AALi6AIAIvQAA5bwAAJM7AABAOQAACD0AIC89AAA7vACQi70AAHG8AAChuwDghj0AgAS9AEBOPQCA17wAYBM9AOCTPQCAWz0AoGI9AIBwvADgDD0AgK68AKBkPQBgRD0AAK47AAAEOwCAObwAQPu8AKAUvQDAtjwAQIw8AMCwPABgHb0A4DE9AAAsvAAAGzwAABQ8AAAQOwAgGD0AADY7AMCSvQAAmLoA0KU9AIBfvABAlDwAgCW8AMBOPQAAFr0AQOO8AIAivQDA3b0AgEe8AMAMvQAAaDwAwKA8AADmvAAwvL0A4Ec9AABIvAAAvLoAQP+8AACFuwBAxjwAYFq9AMCOvABAwrwAAFI8AEBpvQCgYr0AAAs8AADHPAAA+jsAIBE9AIBMvAAAkLkAgDG8AMDsPAAADzwAIC49AEDuvADAEj0AAFm8AADfOwBIAL4AALA8AMCePAAwuL0AYIM9AACFvABgNr0AwJE8AOAjPQDAurwAYE+9APCaPQBAvbwA0M49AACQugBQ6r0AgHW8APCaPQAgGj0AsJg9AMDxPADgCj0AAE88AACJuwAA4DkAACA9AAAevACAoz0AcIc9AADTPQDAOL0AgCG8AFCBvQCgHT0AAMi6AKA3vQBA1rwAAK+8AAArvAAgHT0AANK9AMC3PAAAlzsAQNk8AOAqPQBA5jwAgI29AABZPQCACT0AAKW7AMBqPQBgJb0AAHi8AIAGvACgfb0AIKE9ADDZPQAARDwAAAk9AABmPQAAqjwAYB69AAC3vACAHzwAEMA9AEDiPACAKDwAAF67AHCcvQAgQr0AwKa8ADCnvQAAyzwAoEE9AEAXPQAAfzwAkIs9AHDCPQBATz0AQPu8AAAGPABQj70AgC89AGAEvQCAfLwA4Cq9ABCavQBAUz0AoKc9AAA6uwDACT0AwPU8AKAHPQBAN70AAAAAAAAzPAAAFD0A0Is9AIABPQCgdr0AQPe8AAAnvAAgi70AAL88ACAdPQAAcT0AAIm8AIDEPAAA1DwAwL+8AEARPQAA9zsAAFA8AIABvAAAlbsAQK+8AIB1PADAez0AoI49AIAePACgcb0AIC89AECRvQCASDwAAM27AKAOvQBgDr0AQJI8AKAXvQCAsr0AYKo9ADCXvQBApbwAAAw9AMCiPADAqbwAADc9AAAwuwDAlj0A4Ck9AKAgPQDgAT0AACI8AADwPAAAeT0AgAY8APDfvQBgJT0AAP67ANCMPQCAPjwAAHA7AGAEvQDwi70A8IE9AIDaPABADb0AAC48AADsuwCAPjwAgCK9AACkOwBAxbwAAKc8AIA8vACAaT0AQEW9ABCXPQCA4TwAALc8AAAPvACAJD0AgCs9AGAsvQCAzDwAQCq9AKAmvQCAqzwAwPM8AIBHPQCALrwAwPK8AIB1vQBgkj0AAGw7AADcOwCgHr0AgKY8AMDCPACAsTwAgDQ9ACBwPQAAKjsAANw6ACBePQAAbrwA4OY9AMDLPAAgMz0AACY8AAA4OgCQnL0AgFM8AOCsPQAAcLwAQH89AABmvQBQnL0AAOk8ADCgvQAAJrsAIAs9AGARPQBA7TwAANg8AAASuwAA/LoAYKK9AADZPAAAQrsA8KE9AICfvADgGD0=","chunkHash":"1c7a90c82ae698a9af35d9bb636c90eff72a3b9a6685fc669754a6322c8c0606"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\ndef generate_sphere_mesh(n_vertices=1000, radius=1.0, noise_level=0.05):\n    #...\n    # Create random \"features\" for each point (e.g., curvature)\n    features = torch.tensor(np.column_stack([\n        np.random.normal(0, 0.1, n_vertices),  # Curvature\n        np.random.normal(0, 0.1, n_vertices),  # Normal X\n        np.random.normal(0, 0.1, n_vertices)   # Normal Y\n    ]), dtype=torch.float32)\n    \n    return {\n        'points': points_tensor.unsqueeze(0),  # Add batch dimension\n        'features': features.unsqueeze(0),     # Add batch dimension\n        'faces': faces_tensor.unsqueeze(0)     # Add batch dimension\n    }\n#...\n```","range":{"startLineNumber":51,"startColumn":0,"endLineNumber":62,"endColumn":5},"embedding":"AECtvACgEr0A4KI9AACFvABAvLwAEIe9AEDBvACA0LwAgPC8AEDpPAAA1bsAAJc8AADNOwBQh70AAJO7AKDQPQAgUL0AAN47AMAkvQAAojsAAFw7AKAUPQBgWj0A4BW9AKA9vQBACz0AAOs7AGANPQBAhz0AgEW9AKAkvQAAzbwAYH+9AAAbvQBw170AAKI8AGACPQCA5jwAgGi8AMDJPAAAzDsAoIW9AIArPQAAerwAgFs8AIA1PADgAb0AwIq9AECuPQDAojwAgAo8AICwPADACD0AQD+9ABCBvQAABLwAgHu9AOAtvQAAnrwAUIA9AMBoPQBgSr0AAAs8AMCrPAAAGrsAQNC8AAC1OwAALL0AgOA8ADC1PQCAf7wAAL+7AABsOwCALbwAACw8AEDpvAAA9TsAgEg8ACBXvQCA+7wAAMQ6AEDgPAAglj0AQKQ8AACpvQCg8r0AgCO8AADovADwlr0AAKO8AMCEPACAez0AgIa9AECmPAAA5jsAwNg8AABjPQBAs7wAQPY9AICCvAAAzrsAwFo9AMC5vADgiT0AMKE9AAD6uwAAEjwAQLc8AMCCvABw4j0AALC5AIBvvABAlTwAQOu8AAAougAAQLwAIEI9AID7PAAAE7wAQJq8AEBevQAAmDoAAAg7AADlOwAAULsAgNG8AOA0PQAgY70AgDC8AABxPQAAbjwAABK7AECpPACAOL0AYBC9ACCQvQAAqTsA4A29AOAVPQCAWj0AAFi6AAAAuwAAWDwAgB09AICQPACAWrwA4IK9ABCGPQAA7TwAwLo9AFCivQCAED0AAEy8AEAQvQBAgT0A8MG9AEDRPAAgnz0AwBG9AIA+PAAAt7sAQIC8AAAyvQBAhLwAwCE9AAC4ugBAT70AYHy9AIAzvQBAwb0AANw8AHCovQCAiD0AQOq8AADZPQBAtjwAAGI7APC3vQBAlTwAQIS8AOBmvQCgTj0AAHy7AADiuwBAirwAQIU8AEAzPQCAGLwAkJo9AECWPAAA0bsAQCM9AOAEvQAAIDkAADi6AMDMvQAgPT0AAF69AIAxvAAAODoAQPW8AAAWvABAzjwAAEe9AEDCvAAgvL0AgFe8AAA/vABgO70AwLU8AAA2uwAARD0AgOo8AIAIvAAAYL0AgDS8AACOOwCgrz0AYA69AIBXPQAAKLwAwAc9AICmPQAAOz0AYGE9AADyuwBA2DwAYEG9AKCDPQAgMT0AANS7AICNPAAAirsAADe9AIAfvQAAejwAgH08AADhOwDAKr0AANU8AAAzvAAAjLsAAAi8AIA+vAAAJz0AACk8AABDvQAAEDwAAH09AIB7vACAOTwAAKi6AIBZPABgAb0AQOm8AIBVvQBAkr0AALC7AECSvAAAsTsAgEE9AICtvACgwr0AIHg9AADVuwBAsrwAwAe9AIB5vABAIT0AoBy9AIDKvADAgLwAANC5AFCZvQDAQb0AgEA8AAAQOwBAyzwAAPw8AAA+vAAAfTwAwIa8AED5PADApDwAAAE9AGA0vQCASz0AAMq7AMD2PAAIAb4AQBo9AAC/OwCwpL0AwF89AABQvACgCr0AQOg8AKA8PQAAGbwAgI69AECMPQCgN70AcLs9AAB8OwAwtL0AALC7AACOPQAgDD0AkMo9AADVPAAgPD0AAKs7AAAlPAAA/TsAgHc8AAAqOwBAsj0AoEY9AMCwPQAAcr0AQM28ACCavQDgFz0AAPS6AMAjvQCAb7wAgH68AAApvABgfT0AEKa9AIC+PADA3LwAQMo8AIAjPQAAED0A4KG9ACByPQDA5TwAQOq8AIDxPADAar0AgBS9AACUvAAAdL0AAIc9AIDHPQAAZjwAYBw9AOAHPQBAszwAgCe8AEDDvACAtzwAEKU9AABlPAAA3LoAAI27ANCVvQCAGr0AwKS8AMCmvQAAOz0A4DM9AACXPAAAgzwAcIs9AGC8PQCAez0AgH+8AECdPACwrb0AgP08AAAbvQBAnLwAQBu9AMB9vQAgWD0AcMk9AEDwvAAAGD0AQOc8AABMPADgH70AAP+7AICRPACAjjwAMI49AMDGPACAhb0AAFG8AABRvACAY70A4Bk9ACBjPQBgUj0AAN+7AICYPACAqDwAAOS8AECdPABAxrwAAKU8AABzvACAcTwAgFe8AEAmPQBAcz0AMI89AAAAPAAA27sAIEQ9AEBKvQAAELoAwNq8AKBIvQBAC70AAPI7AEDBvADwrb0AwKY9ACCQvQBALb0AwOU8AMAsPQCAo7wAAAc9AACAOADAvz0AAB08ACBOPQAAUDwAACK7AIAEPAAARj0AAIw6AGDxvQCAtTwAQOi8AOBPPQCATjwAALQ6AMC1vADAj70AEJc9AEAnPQCAPb0AgPG8AABdvAAAKjwAwGa9AAChPABAHL0AQJ08AEDQvADgjj0AwE29ALCQPQDA9jwAwCI9AID/vABAZz0AwD89AADFvACAHTwAACq9ACAhvQAA8TsAgIk8AOBcPQAARrsA4BC9AAAavQBAwD0AQKA8AABTPACAPr0AgNg8AMDcPAAAiDwAgC49ACCWPQAgGz0AAIQ7AJCVPQAAybsAwAA+AEDXPACgFj0AwKw8AACMPABQp70AAPQ7AKCmPQAAd7wA4I49AIAyvQDAub0AAMk8AFCPvQAAx7wAIBQ9AEDfPADA3TwAgJA8AADQOgAAtDoAwJK9ACACPQCApDwAMJM9AIBTvAAATz0=","chunkHash":"39c8873ad6e6506ff58175b7e225496c39bfcf5747ab584e7bf67bc4afc2d3d4"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\ndef generate_cell_like_mesh(n_vertices=1000, noise_level=0.2):\n    \"\"\"\n    Generate a more cell-like mesh with the given number of vertices.\n    \n    Args:\n        n_vertices: Number of vertices in the mesh\n        noise_level: Level of noise to add to vertices (0.0 - 1.0)\n        \n    Returns:\n        dict: Dictionary with 'points' and 'faces' tensors\n    \"\"\"\n    # Generate points on an ellipsoid\n    indices = np.arange(0, n_vertices, dtype=float) + 0.5\n    phi = np.arccos(1 - 2 * indices / n_vertices)\n    theta = np.pi * (1 + 5**0.5) * indices\n    \n    # Use different radii for each axis to create an ellipsoid\n    rx, ry, rz = 1.0, 0.8, 0.6\n    \n    # Convert to Cartesian coordinates\n    x = rx * np.cos(theta) * np.sin(phi)\n    y = ry * np.sin(theta) * np.sin(phi)\n    #...\n```","range":{"startLineNumber":65,"startColumn":0,"endLineNumber":86,"endColumn":0},"embedding":"AADyvADACb0AoFA9AECIvAAAyDoAUIa9AADcPADAEr0AAPq8AMDkPABgP70AwLM8AIAdPACgZr0AAP68AGCbPQAgCL0AAIW8AKALvQAAFjsAwI88AFCAPQAAKT0AQMW8AKAUvQCgWj0AgDc9AACnOwBgoT0AEIW9AEALvQDAwbwAgBO9AABrvQDAub0AAJG8AMAJPQAAoTsAgCi9AGCJPQBAUD0AYLC9AADtPACgDT0AAAg7AAD4OgAANrwAoAK9AOAKPQBAuTwAQGY9AMCjPAAAHLsAIJW9AKBivQBAbL0AIE+9ACAFvQDAOb0AAH09AMBaPQDwsr0AwJI8AMC+PACAUDwAAOe8AEAEvQDQgL0AAIE7AGC2PQAgKb0AgBS8AACwugAAc7wAQO68AABsuwAAObwAwEm9AKAFvQBADb0AABI9AACXOwDgET0AgAC8AGCDvQBIEb4AAOC7APCmvQCA4r0AgCa9AABCPAAgTz0AUIK9AMDMPADgDL0AwG89AABOPQAAQjsAQKc9AABMvQAAcDsAwHU9AGBAvQCghz0AwF89AAAbPADA+LwAAGO8AMAwvQDYCD4AAO48AIANvQCAgT0AgBa8AABkvAAAj7wAAMA6AIAQPABAsjwA4F29AGBqvQAA6LwAwL88AADSPABAhbwAgEA8AKAEPQDgcL0AgKC8AOCAPQCAfDwAAIs7AABDPAAAUjwAgLa9AMAmvQCAaTwAgHy8ALCHPQAAPjwAwJa8AABYPQCA9zwAwJU8AIBYPACAFjwAQBa9AEAXPQAAOjsAgOg9AOApvQDgjT0AwLc8AADxvAAgRT0AIKe9AIA3PQDwqj0AID+9AMD3vACAj7wAQPu8AIBRvAAATL0AgCE8AKBIPQBAlb0AoIC9AIBmvACgJ70AAC08ANCXvQBAkj0AgGK8AOCxPQCAXb0AAMS7ACBXvQCAA70AwJQ8AMB4vQAAwDwAwCS9AAA4OgAAnDsAwKS8AICUPAAAJjwAwIc8AAA8uwDAAb0AALA6ALCAvQCAmbwAwKS8AJCyvQDQhz0AAC+9AACbOwAAAr0AAKG7AIAKvQAAhDoA4Bm9AAAZvACAS70AoEa9AMD8vAAAobsAAOA7AICLvABAujwA4AI9AADauwCA/bwAAKq8AEDkvAAgsj0AABW8AACMPQAgCL0AwOU8AKCBPQAAdTwAQAw9AACEugBAAD0AMIG9AEBOPQBgXT0AAIy6AADAvAAAebwAAGK8AADMugBAsrwA4EI9AADGuwDA9LwA4IM9AAD6uwAAWjsAwIS8AIAVvACgbj0AABU8APCbvQDAtrwA8KE9AEDwvAAAYrwAANw8ACBGPQCAhLwAQLq8AGCLvQDgsb0AAGO8AEBrvQCABDwA4Gk9AIBNvAAwtL0A4DE9AIACvABAxrwAIBS9AICovAAAirwAYGO9AABJvQCgS70AwAq9ALCKvQCgmb0A4Bm9AICHvACAqzwAgGE8AACUuwAAGbwAQAq9AAAiPAAAkjsAgHM8AIBKvQDACD0AAMK7ANCMPQBwCL4AAJA8AIBcPQCQgr0A8IY9AMClvADAh7wAgIi8AEAkPQAgST0AACC9AGB4PQDgKL0AAI49AAAIvADgzr0AgJq8AIAHPQCAOD0AUIg9AAB7PACQgT0AIB09AOAGvQBAzzwAAJ48AADCvADgtz0AgFs9ADDbPQCgFb0AwJu8AOAcvQBgiT0A4AU9AMBcvQAgAj0AAOw6AKAUPQCABj0AUPa9AIDmvACgNb0AwMA8AACaOwAAmzwAgH69AAA5PACApTwAADW8AKBbPQBAa70AgEg8AGAevQBgSL0AoE09ALCUPQCAqLwAsKM9AOAfPQAAYLkAgAm8AIB5vACADz0AcKw9AMCFPAAAnLoAAOy7AIDavAAArbwAgFw8AKCnvQAA5zwAgLg8AGAwPQBAszwAAGg9ADCoPQAgWT0AgDW8ACAHPQDw1r0AQFw9AICfvAAgAj0AgCi9AOBYvQBAkzwAQEo9AABGuwAA9jwAgGE8AHCDPQAAhr0AAAC8AMDcPADgfj0AQFg9AICQPAAw1L0AACG8AAAqPABAWL0AACg8AMDFPQAATT0AAF67AABAOwAAPjwAABO8AAC/OwAAALoAAKk7AACdOwAAHzwAYF29AAA/vQBgdT0AwHA9AABQOwAAIrwAANM8AECHvQAAejsAALg6AEBSvQCQo70AIBq9AED4vAAgp70AwG09AEBhvQDgGb0AANA8AIDrPABA4DwAQG49AMBEvQDAkz0AAFS8AAAMPACgBz0A4A09AADguQAACT0AAEg8AFCXvQAAXTwAAIk7AGCtPQAAsTsAANq8AIAevQBAJb0AIF49AIBSPACgOr0AAHu8AEDtvADgAj0AoAa9AAALvACgTD0AgDk8AAC3vABAoT0AgBK9ACCgPQBAHz0AgCg8AADPvABArTwAAMg7AACEuwAAqjsAwKo8AACzuwAAxLwAAPC5AOA2PQDAGL0AIGa9AMAXvQDwpD0AAPg7AEAIPQCA3LwAMJw9AIA6PQCAtDwA0KA9AIDDPACAPrwA4BE9AEDgPAAAiDoAoCg9AIAoPQAACDwAgH88AADuuwCgW70AAPk8AEDHPQCAM7wAgJ49AECUvADgVL0AgD08ADDVvQDgGL0AQME8AIAuPQAAKLwAAAI9AEDXvAAATLsAAO+8AOAWPQAARrwAMLc9AIBzvACgJz0=","chunkHash":"202d3d50a4b49d9ba11b7d1a3a2f7799c558542d8477db2ff769aed10b71067a"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\ndef generate_cell_like_mesh(n_vertices=1000, noise_level=0.2):\n    #...\n    z = rz * np.cos(phi)\n    \n    # Add some protrusions to make it cell-like\n    n_protrusions = 5\n    for i in range(n_protrusions):\n        # Random direction\n        p_theta = np.random.uniform(0, 2*np.pi)\n        p_phi = np.random.uniform(0, np.pi)\n        \n        # Direction vector\n        dx = np.cos(p_theta) * np.sin(p_phi)\n        dy = np.sin(p_theta) * np.sin(p_phi)\n        dz = np.cos(p_phi)\n        \n        # Add protrusion\n        dist = (x*dx + y*dy + z*dz)\n        mask = dist > 0.5\n        protrusion = 0.5 * np.exp(-(1-dist[mask])**2 / 0.1)\n        x[mask] += dx * protrusion\n        y[mask] += dy * protrusion\n        z[mask] += dz * protrusion\n    \n    # Add some noise\n    #...\n```","range":{"startLineNumber":86,"startColumn":0,"endLineNumber":109,"endColumn":0},"embedding":"AIAzPAAAhzsA0IY9AAA1PACgIL0A4K69AICuPACAHbwA4Ie9AMDbPAAAO7wAgG08AEDKPAAAHLsAACq7AKCZPQDA0rwAADS7AJCDvQAAoTwAgGw8AADCPABgbz0AgIi9ACASvQCAMD0AwGM9AECJPACARz0A4D69AABRvACAYLwAAKW8AEDevACg270AgJC8AIAUvAAAGzwAAFm9AIAgPQBAHj0A8I29AMAAPQDgET0AwOm8AAAqPACALL0A4BW9AGBxPQDAkTwAYBk9AEDOPAAA0TwAAHy7ADC7vQDgL70AYAy9AMAMvQBAgL0AMIQ9AAAePQCgq70AwJw8AMDFPADAibwAgD+8AMDJvAAAbL0AQBc9AMDAPQCgN70AAPy8AABQOwAANrwAAJ28AEDTvAAAlzsAwAK9AGAmvQAAwDoAwBs9AACWOwAAoD0AQAG9ACBKvQCQyL0AgHi8AEBlvQDA7b0AgCm8AACQOgCgUz0AIFK9AEDLPACAYLwAQFc9AADJPAAAGLsA8P09AIB1vQBAkjwAAGg9AID2vAAAjz0AQGg9AGAJPQAAnbwAAPg7AICFvACQHT4AoB49AMA0vQDAaD0AABO8AABAOwAAw7sAwCw9AABPPACAGDwAAAm8AFDBvQCAyjwAAKq8AICHPAAAIbwAwIi8AID4PAAgl70AIBC9APCZPQCAQLwAwLc8AAAYvACAMrwAkK+9AIAgvQBgKz0AQO48ABCFPQAADjwAQCK9AKBmPQAA7jwAwMA8AAC4ugCARz0AYBS9AAAgPQCAajwA4Fg9AACrvADgVj0AgDy8AOAivQCAPz0AAKe9AICMPQAgpz0A0JK9AMAFPQAA+LsAgMA8AOANvQDA5bwAwM88AADePAAwlL0AIEK9AAAqvAAAYb0AgGo8AABjvQAAMz0AoBa9AGCdPQAAfLsAAFa8AOAlvQCgTr0A4C69AMDuvADA5DwAgFi8AAClOwAAh7sAAHK7AEBFPQAAtDsAABw8AMBMPQCAwTwAALg6AMBKvQAAvbwAwJi8AEDNvQBQqT0AAAc8AECbPAAAkzsAgK28AABZvADA9zwAwN68AMDHvAAAJr0AwAq9AMA3vQAAgLwAgCI8AACYugCAUjwAIEQ9AAClvACgDr0AAAi9AAAsOwD4Ez4AAIc7AIAjPAAAc7wA4EY9ALCbPQDAqjwAQOI8AIAKPACAlDwAICa9AHCWPQDADT0AgHM8AIAVPAAAg7wAwK68AAA1PACA5DwAAKu7AADGuwAAlrwAwOU8AMAYvQAgED0AAOi7AIClvADQmj0AAIq8AACnvQAAKrwAIII9AABxvQDAh7wAwNc8AKABPQBAO70AwDa9AEDcvADwtL0AgKq8AACVvQAAwLgAgDs9AIARvQAQo70AgJ88AAD8OwAANr0AQIi8AADQuwBAw7wAAFG9AAB6OwAAi7wAAKK8AIAovQDww70AYAC9AAAuOwAA8TwAAOA8AGANPQDA8rwAAEC8AIDWPAAA7TsAgE48AAAYvQCAIj0AgMC8AADuPADAA74AgAy8AIBrPAAgsL0AUJY9AAAXPAAwqL0AQJy8AIAXPADA1zwAQCa9AMBHPQAA3rwAsKQ9AIDbvAAgtb0AANi7AIAkPQAA1jwAwIs9AGAEPQAgYj0AAIg8AAAwPAAAHrwAANQ8AEDRvABQnz0A4Ic9AODKPQBgRr0AAHK7ACA3vQCgjj0AALE7AEBBvQAAdjsAAFi7AAAUvABAQz0AIK69AIAZPACA8rwAgCE9AABWuwCASj0A8Jq9AABqOwDgoD0AALW7AOApPQAwob0AABq8AADyuwCARb0AQKU9ACB3PQAA0zsAYDQ9AID4PAAApjsAgBS9AADFOwAAyzwAACE9AMCfPQAA0LsAQO88AIA7vQBAhrwAAPg6AFCOvQDgIj0AgCI9AOAkPQBALj0AAE89AHCVPQAAjDwAwES9AMBQPQBAlL0AQJ48AAChvAAA+TwAAB29AEBXvQDAND0AYKM9AGAQPQAASzwAAOS6AIAuPQDAzrwAIHe9AAASvACAID0AQAo9AECEPACQ4L0AAB08AJCFPQAAuL0AQLU8ALCMPQDAYT0AAMa8AED0PADABz0AAOe8AIA/PQAAzbwAIBa9AIAvvACAkzwAABe9AAAIuwAgHD0A4Fo9AADUOwBACr0AQAk9AOCfvQAAhzwAADQ8AAA/vQCgSb0AgIC8AADnvABwhb0AIJ49AMDgvADAZr0AABg7AIDLPABgGL0AgHc9AEBMvQDAWj0AgGU8AAAAOAAgSj0AAOA7AACwuwBQhz0AgAM8AGB1vQCACjwAAFo7AJCIPQAArzsAwNm8AABMvABARr0AQPU8AACrOwDAH70AAIy7AEAnvQAADTwAAIu9AACzuwCAUbwAoAc9AMDIvAAg2D0AgOa8AIDePQBgGD0AQJ08AABxvACAlTwAAKc7AACguQCAIj0AgBi9AMCyvAAAxbsAoCq9AOBcPQBA67wA4ES9APCyvQCAmj0AwMM8AACEOgAAiLoAICM9AMACPQAAsjsAIH89AIBaPQAAkrsAQIE8ACAoPQAA5jsA8NM9AADAuwCAsDwAgCc8AACTuwBwg70AQMg8AHDRPQAAi7wA8Ic9AIC5vABADb0AwE89ANCUvQBgBr0AYBk9ACBrPQAALrwAQLs8AAAbPAAAKDoAgLe8ANCdPQBA3rwAYNc9AACzOwAAPT0=","chunkHash":"5639116e707e68988e2633c75943c1640021f6de1aacdf3d1c24b80f3df9a60e"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\ndef generate_cell_like_mesh(n_vertices=1000, noise_level=0.2):\n    #...\n    if noise_level > 0:\n        x += np.random.normal(0, noise_level * rx, n_vertices)\n        y += np.random.normal(0, noise_level * ry, n_vertices)\n        z += np.random.normal(0, noise_level * rz, n_vertices)\n    \n    # Combine points\n    points = np.column_stack([x, y, z])\n    \n    # Generate faces using Delaunay triangulation\n    from scipy.spatial import Delaunay\n    tri = Delaunay(points)\n    faces = tri.simplices\n    \n    # Convert to tensors\n    points_tensor = torch.tensor(points, dtype=torch.float32)\n    faces_tensor = torch.tensor(faces, dtype=torch.int64)\n    \n    # Create random \"features\" for each point (e.g., curvature)\n    features = torch.tensor(np.column_stack([\n        np.random.normal(0, 0.1, n_vertices),  # Curvature\n        #...\n```","range":{"startLineNumber":109,"startColumn":0,"endLineNumber":129,"endColumn":0},"embedding":"AABAOwBA4LwAQLs9AABXvAAAIjsAML29AABOuwCAwrwAoF+9AACAugDA1rwAALs8AABpPAAgL70AANC8AODAPQAgTr0AgDu8AECCvQDA+DwAYBU9AAAfPQCAZz0AkJa9AGAYvQAgET0AYAM9AIA1PACgQz0A0IW9AIBivACA37wAAAu9AIASvQBgvL0AAF67AIDmPADAyTwAgCu9AMADPQAgTT0AYHa9AICfPACA1zwAACS7AAChvACAPb0AAFS9AMBRPQAgJz0AwNM8AEC1PAAADLsAwB29AKCgvQCA2LwAIIm9AMDgvAAA/LwAYE89AGAtPQCAVb0AQJI8AACPPABAqTwAAHi7AADEuwBAMb0AQAs9AFC5PQBAY70AADQ7AAA4PAAAULwAAFK7AIDBvAAANLsAALK8ACAgvQAAvbwAMIU9AAAYPACggj0AAKg7AKBTvQBA2L0AAAm9AEBlvQBw6r0AAKC5AADdOwCwiT0AYEq9AMDcPABAxbwAYHQ9AABOPQAAirwAwNQ9AKBSvQAAMTwAcKk9AOAyvQAguj0AIHM9AMCoPACAsLwAAAy7AADYvAAwFD4AAKk7AEAfvQBAYD0AACm8AABeOwCA9LwAwII8AECyPACACDwAgGO8AAC6vQDAnDwAAPy7AACPOwAAl7wAgEG8AKBaPQBQlL0AgJ68AAAqPQAApjsA4Bs9AACIPADAtbwAMIK9AKCCvQDA5DwAAIy6AOB4PQDAwjwAQLO8AMD7PADAIz0A4Es9AIAIPACAsTwAQD+9AMBfPQAAzTsAwJQ9AEBOvQCAkj0AADK7AOBbvQDADj0AEMy9AIBXPQBQuT0AQHO9AAAAvAAAvLsAAHw7AID+vABAxLwAABK7AIDePABApb0AwM28AACsvAAgq70AAAk8AAB0vQBgbD0AAAo7AOC/PQAAxbsAgIa8AMBavQAA/rwAwIa8AECGvQDAljwAAOm8AACYugAAq7sAgBS8AAAyPQAAtLoAAHQ8AKBLPQAACjsAoCM9ABCSvQCAM7wAAHQ7ABDbvQAw1D0AQJu8AAAFvAAAJ7wAQJu8AAB0vACAHzwAAIa8AAAguQDAk70AgDe8AIDAvADgPL0AAC88AABeOwAAvTwAAL08AAAqOwCAVr0AQOG8AABouwCA5z0AgHW8ACAQPQAAErsAAJg8AACrPQAA6TsAwGc9AAA9vACA7TwAICm9ALCQPQBAFT0AAFY7AIAYvAAAlrwAIAu9AAAAuQAgBj0AAOU8AICbvABgGL0AAEU9AMCHvABA3TwAAOS7AICKvAAwlD0AALU7AJCdvQAAYLsAwNo9AACCvADAkrwAgH08AAAOPQDAE70AgNC8AGAtvQCwur0AAOO7AEB7vQAA57sAoCc9AEC8vACg4b0AwNk8AADIugBArLwAwCa9AIBlvAAAebwAIIG9AACkOgBAibwAgIC8AAB+vQCwpb0AIA69AAC2OwAA+DoAgNY8AACMOwAAlbwAAFO8AAA3PAAAJjwAAFE8AGAivQBARj0AAJG8AADKPABABb4AAC08AMCSPADgbL0AoEs9AABSuwBgO70AgF68ACBKPQAAGzwAIFC9AGBYPQAA07wAsI89AACTvACA0r0AANY7AIB6PAAgXT0AoJo9AMDlPABADz0AQMA8AAAEPAAANLwAQI48AIB/vAAAzj0AYCI9AJDyPQAAU70AACC6AMB6vQBgYj0AAKE8AED2vADAlrwAAHg6AABkOwAgaz0AANC9AAAFvAAAkLwAYC49AABuPACA+TwAAIy9AACQugDAKD0AgAU8AGAwPQAAZr0AAKG8AAD2uwDgdb0AAIg9APDePQAA/TsA4IM9AAAGPQAAkDkAgEG9AAAePACA7TwAYHo9AAB/PAAAUjsAAKy7AMBKvQAAo7wAAMW7ADCTvQDAojwAwFI9AMAbPQAAFz0AIBk9AKCDPQAgRz0A4BO9AAA/PAAgcb0AYBk9AACavABAtTwAAO+8AGCQvQDACj0AEJk9AAByPABAQD0AgIg8AGBePQCgIL0AIHO9AACXPACgOD0AQEY9AAC9PAAgrb0AADY8AECvPADAor0AgCu8AJCFPQDgTz0AwJW8AEDwPAAAizwAAOa7AID/PAAAyLsAgFC8AAAOuwAAyTsAwIi8ACABPQCAej0AAIs9AGAGPQCAYbwAgK08ALCFvQAAQLsAgBO8AMBgvQDgk70AwLu8AECmvAAQhb0AkLk9AOBavQBA9rwAAMA6AAAhPQAAAr0AwJI9AAAWvQAQpz0AwIA8AMCQPAAAiDwAQPI8AACgPABAij0AgKI8AECLvQAgEj0AAL87AJCPPQAAKjsAwMa8AADovABgmL0AwHs9AABGPACAIb0AAGy8AED8vACAETwAgEm9AAAKuwAAw7sAAAg9AABsvAAgnz0A4Fe9AJCXPQCApDwAgKY8AABYPABAJz0AgKU8AAAWvABA6zwAwNG8AMCkvACABzwAAIg7AABKPQCAwrwAYBm9ABCEvQDwiz0AAOg7AAAzPAAA97sAcIY9AGAYPQAA0DoAoI49AAAcPQBAkTwAAPO7AADsPADA2TwAEAE+AMDCPAAAlDwAQM08AADkugDAd70AwOY8AOChPQAAerwAIGk9AOAbvQAgLb0AQEE9ACB2vQBA87wAgJw8AJCFPQAAiDsAwMo8AAB+PAAAEbwAgMa8AACDPQDAmLwAEMU9AMC3vAAALj0=","chunkHash":"db5a361d2c0f700e7386af4687d17dc30575ea35c054fb2c1483159c2c2e8c5f"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\ndef generate_cell_like_mesh(n_vertices=1000, noise_level=0.2):\n    #...\n        np.random.normal(0, 0.1, n_vertices),  # Normal X\n        np.random.normal(0, 0.1, n_vertices)   # Normal Y\n    ]), dtype=torch.float32)\n    \n    return {\n        'points': points_tensor.unsqueeze(0),  # Add batch dimension\n        'features': features.unsqueeze(0),     # Add batch dimension\n        'faces': faces_tensor.unsqueeze(0)     # Add batch dimension\n    }\n#...\n```","range":{"startLineNumber":129,"startColumn":0,"endLineNumber":137,"endColumn":5},"embedding":"AADUuwCAu7wAcJU9AEDkvAAgGr0AEMS9AMCSPADgG70A4Ce9AAA3PAAAirwAAP88AACrOwAASr0A4Au9AHC3PQDgf70AgGg8AGAfvQAAFDsAAAI8AKAOPQDgZT0AAFq9AIAOvQBA5DwAAM87AMDxPADAcD0AQBi9AAAqvADAtLwAwE+9AMDRvACwsb0AYAu9AAD1PACAdzwAwMW8AEDgPABgDz0AsLe9AECdPACAwjwAANQ7AMC1PABA9rwAMIm9AABfPQBQmT0AQEg9AICGPAAAoLsAwMq8AACOvQAASjsAAHC9AKAkvQBgOL0AAGM9AKCAPQAwsb0AwLQ8AAAIPQAAHT0AAEu8AEDtvAAgdr0AACs8AHC3PQCgGr0AQIW8AAAaOwCAA7wAAEK8AAAovAAAmzsAgIG8AEAOvQCgd70AoD09AADrOwCAOD0AAOw6APCCvQCA8b0AYAq9ANCpvQDAqL0AgJy8AAA/vABAQz0AAIy9AMCYPACAy7wAwMI9ACBDPQBgIb0A0NE9AMACvQAAczwAULE9AIAOvQCwsz0AAC09AAAAuACABL0AAHK7AIA8vQCICD4AgCU8AEApvQBwiz0AAMk7AABWvABAFb0AQBQ9AEDLPAAAKLoAAHu8AJCjvQBA3jwAAAu8AADAugCAPL0AgGu8AEBVPQDAc70AAOK8AOBMPQCAVzwAAME7AABYOwCAErwAwIe9AHCRvQAAnTsAQAQ9AOAzPQDAyDwAgAs8AMDsPABAFD0AYBk9AAAmvABgCj0AcJe9AIB6PQAA9TsAwN49AEAzvQAgRD0AYBI9AMBhvQCAeDwAIKC9ACB8PQAQ2D0A4F29AAAQuwCAeTwAwIy8AAC8uwAAgTsAAPA7AKACPQAAtb0AsIC9AIC6vACwvb0AAHQ7AMB5vQCwij0AgK28ABCPPQCAerwAwMu8AGCAvQCgLL0AwJa8AIB5vQAA7TwAQDu9AABIOwCAdrwAwKu8AMAsPQBAkDwAgB49AMC0PAAASrwAAGY7AMCLvQDAmjwAQK88AMCwvQBgpD0AgA69AEDivAAASzwAwOi8AICLvAAASLwAgK+8AIDsvAAwl70AgA69AGArvQAgRL0AwKc8AACIOwDA/jwAAMM8AEC2vAAANL0AAIO7AABFvADQ1z0AAGa8AEA2PQCADzwAAHA7AADBPQAADjwAQBM9AACOOwCAzTwAIHa9ACBEPQDA/TwAAHA6AAAAuAAAbDsAoCS9AAB8uwAArTsAIAk9AMAkvQAAMb0AwB09AICvvABAqDwAAOW7AACWuwCAfT0AAGo7AGBVvQCAwbwAULM9AAD1uwCAirwAQC49AECUPABACb0AwLq8AOCNvQBAoL0AAC+8AEAJvQAAsrsAIEs9AACivADQyb0AwPA8AAA+uwDgL70AgOm8AMCcvACABzwAAGm9AMDMvAAA+rwAAOa8AFCIvQCwn70AAK27AMDdvADgIT0A4BQ9AACWOwAA6LoAwJe8AAC/OwBAuDwAgG48AEBAvQCA2TwAQLI8ACBGPQBw4r0AQOU8ACAvPQDgNr0AoDA9AACYuwDgNL0AAAI7AAAyPQCA3jwA8Iq9AAAgPQAAF70AIGk9AMCZvACgsr0AQI+8AAAgOwCgdj0AMMo9AICvPAAAbjwAAKm7AGAIPQCAoTwAALO7AABWOwDwwT0AAP07ANC3PQDgN70AQP28AMBuvQAgNz0AgJc8AOA2vQAABTwAQIw8AMCBPADQgz0AcMG9AICLvAAAX70AQL88AAAouwBAwjwAgJS9AACcugAAWDwAwKC8AIAYPQAQpb0AwLu8AEDXvABgG70AAHI9AACaPQCAFzwAwMQ9AIBXPAAA7bsAAN+8AADJuwCAgDwAAF49AIBYPAAAw7wAAFi6ACB5vQAAkzsAANk7APCavQBAVT0AYD09AEAaPQDgMD0AYAE9AGBCPQAgZD0AQLy8AAAkPQBwmb0AABU9AMD6vAAAizsAwPG8AHCpvQAgcj0AgKo9AMAlvQAAKT0AAMI8AIAEPQAAn7sAwDO9AAC7PACAUj0AYGU9AECnPACwpb0AgEw8AADdOwAAhL0AgFs8AFCTPQCgMD0AYAW9AADlPADgDz0AgMS8AACGOwAAoLoAABM8AACRuwAA/bsAAIi8AIALPABgij0AAII9AMCqPAAAiLwAQNA8AKBtvQAAaLwAQL68AGAzvQCwkL0A4Ce9AABXvAAQkb0AYM89AIAjvQCAJr0AwIi8AGBPPQAAJbwAQIY9AADivABgnj0AAIA6AGAUPQAApLwAAPQ7AIAjvADAVT0AQO88AHCfvQAAJjsAAL+7AJCGPQCAIDwAwIq8AACevABQg70AAGw9AAAwPACggL0AoGi9AMAVvQBA7DwAAJC9AMDXPACAArwA4BY9AACxvADgmz0AwJG9AIBGPQBgAz0AgJY8AAA+OwAA4DwAwLA8AAAJPAAAwDsAQJm8AMCkvAAAlDoAABe8AICaPQCAyLwAoCy9AIBHvQDQnD0AQJc8AACMPACAxLwAgF09AKAiPQAAOjwAQIw9ACAdPQAAjzwAAMi7AEDmPADA4DwAsPA9AOAbPQCAUTwAwJY8AAB0OwAgeb0AgDE8AECsPQCASrwAwFU9AEAGvQCgLb0A4CE9AICJvQBAX70AAJQ7AGAvPQAAGLsAQJE8AEDyPAAA3bsAAAy9AIAqPQAAqzsAIMk9AAAWPACgZD0=","chunkHash":"0b538d6ac0ec7ab58e3de3b63691d2a3922d808aed38189475b634629d13e110"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\ndef visualize_mesh(mesh_data, output_path=None, show=True):\n    \"\"\"\n    Visualize a 3D mesh from the model input format.\n    \n    Args:\n        mesh_data: Dictionary with 'points' and 'faces' tensors\n        output_path: Path to save the visualization\n        show: Whether to show the plot\n    \"\"\"\n    # Extract data\n    points = mesh_data['points'][0].numpy()  # Remove batch dimension\n    faces = mesh_data['faces'][0].numpy()    # Remove batch dimension\n    \n    # Create figure\n    fig = plt.figure(figsize=(10, 8))\n    ax = fig.add_subplot(111, projection='3d')\n    \n    # Plot mesh\n    mesh = Poly3DCollection([points[face] for face in faces], alpha=0.5)\n    mesh.set_edgecolor('k')\n    mesh.set_facecolor('cyan')\n    ax.add_collection3d(mesh)\n    \n    # Plot vertices\n    ax.scatter(points[:, 0], points[:, 1], points[:, 2], s=5, c='blue', alpha=0.5)\n    #...\n```","range":{"startLineNumber":140,"startColumn":0,"endLineNumber":164,"endColumn":0},"embedding":"AECyvADgWD0AIGI9AECBvQDgRb0AoK+9AECWvAAAW7wA4AI9AIAovAAAODoAwOI8AKA0PQAAtL0AgH69AIBbPQCgCb0AgGA8AACsPACgED0AAJg9AMAvPQAgoz0AAHS7AOAlvQCAkD0AAHe9AACZOwAAIDsAAAE9AJCyvQCA07wA8L+9AEB0vQCwrL0AgDM9AOAcvQAA+jwAACA6AABxPABAtD0AAP68AOBYPQBA5jwAQEM9AADJuwAAKTwAoA69AEDLPAAA1bsAgNI8AKBvPQAAcDwAYDy9AMDlvAAA4LoAQKO9AOCrvQAAu7sAQIE8AKCwPQAAIL0AABQ7AHCRPQCAQb0AAP87AMDtPAAAiDoAgFa8AABNvAAAxbwAAOu7AEApPQDA/7wAABe9AEAhvQBAMb0AgMO8ABDhvQAArL0AAK87AIA8vACATzwAQAA9ACAkvQBAnrwAAKO9AICqvAAAGLwAAKK7AMDqPACA5DwAUJq9AMDxPACAEj0AsMo9AKAvvQCAT70A4BI9AADrOwCALzwAQFY9AMDAvACAYrwAgN88AEDZvAAAYT0AADA8AACTuwDAqjwAAOI7AIBgvACA8TwAwNy8AOARvQDABr0AABc8AICzvAAA/7sAwCK9ADCcvQAAyjwAoF09AACJuwAAuTwAAEs9AABcuwCgG70AACk8AGCLPQCgAT0AwMC8AIAsPQBw770AwPa8AABBvQCA2LwAoIu9AEAEvQAAbT0AABy7AOAsPQAAAjsAQJY8AEAvPQCgKz0AwKW9AGCYPQDA1jwAAIs9AMDKvABQjT0AQLQ9AFCJvQCACTwAYCm9AKCKPQCAZDwAAEQ7AAAwvAAAlzwAAKK8ACCQvQAABL0A0IO9AIBSPQBgJL0AgFq8AMC3vADwpL0AwJ+8AICqvAAALD0AgG69APABPgAAWjwAAMw6AACkOgAAoLsAgEG8ACBNvQCA7TwAQCy9AMCOPAAA+zsAQIE8AADcPABA/zwAwJ08AAD8PAAA5bwA8JA9AAAvvQDA+7wAQKY8AIBAvQAgRT0AgGu9AAA7PQDA27wAQOI8AEC7PACgJr0A4Ji9AAArPADAyzwAAJw7AOAtvQAQnL0AgAQ9AAAAuAAAMz0A4CQ9AEDUPAAAsLkAgH88AACavADA6jwAAMy7AEBsPQCAJr0AgEE9AEB/PQAAxDwA0KM9AACsuwDA27wAYDq9AIBYPQCAYz0AwCw9AIAIvABACz0A4HA9AMDzvABgFL0AANO7AIAsvAAgBT0AIIs9AEDNPAAAqTwAgAW9AGACPQAQ9D0AoAo9AADougBAd70AwJm8AAClvACgCz0AgHs8AABCuwCgd70AQIu8AECkPABwJL4AAGA5AKBGvQDAJr0AgBY9AAC1OwDA5bwAYCg9AACnOwBguD0AgJq8AIBovAAARLsAgBG9AGBxPQDgBb0AAGo8AADPOwAwpb0A4DU9AADnuwCAZz0AQMQ8AEAwPQAAVrwAQFi9AOAJPQCAJDwAAKA5AIAyvABgHL0AALc8AAAEuwBQs70AwGc9AEDYvABAmb0AgKM8AIAIPAAAUDsAAMq7AABfPQAAwTsAoFK9AIAqPACATb0AAGi6ANDTPQBAKr0AAJe7AIACvQAAsbsAAN89AECrPACgfr0AwPi8AIAbPQCAQjwAAHy8AACruwDQuj0AcMA9AABGPABgHb0AoE+9AMD9vACA4TwAQAq9ACB/vQDAnrwAUK29AMD6vABAtrwAcIS9AACEuwDAar0AAIC5AADDvACgjz0AwAM9AEDNPAAAxzwAAC08AMDJPACgtL0AICC9AJDFvQAA6rwAQIG8AIBjPQCATDwA+AI+AFCSPQDAjr0AQJE8ABCIvQCgJ70AALw6ACAlPQCAzjwAgEW9AEBbvQAAVbwAAGm8AFCEvQDA2zwAoDQ9AMDivADAFD0AQH49AMDgvACASz0AwCS9AACNuwAAwLkAQMc8AICsvQAApTsA4Fi9ALANvgBABz0A4CA9AADdOwAANzwAQBi9AADQOwAAsLkAIFC9AED8vAAAdrwAgNs8AAA6uwAAqjsAoHc9ACBiPQDgmb0AAFy7AOCUPQBASj0AwKW8AIBrPQDAujwAAKM7AABgPAAATLsAQNo8AMDMPACgZb0AwNG8AIBQPACABT0AwME8AAAjPABAi7wAAJ49AIC5vQBAqbwAwLO8AIA8vQBgVr0AgP+8AEALvQBA8LwAQJs8AAAgOQAARr0AgFk8AEDcPABgab0AgIo9ABC7PQDA3bwA4BI9AEDbvAAgA70AQOI8AAACuwBQlz0AwOo8AFCpvQAgAT0AAJ28AOBPPQAADr0AALG8AIDnvACgQr0AAP+7AADuOwBAGb0AgOm8AAB9vAAAtDwAIA69AMDVPACAbLwAIHG9AECNPACAVzwAAJc7AAAUOwAA7zwAAAC5AMCrPACA/jwAgKI9AGAdvQBAET0AQJa8AMAqvQCAQT0AgGA8AOBJPQCgCL0AQPK8AOBXvQBgRT0AgI08AAA4vQAAU70AAOS7AABauwAAVTwA4EE9AED7PQCAirwAID69AAAbPQAAo7sAUKU9AEBIvQAwkr0AQCo9AACWuwCgMb0AACK7AMAvPQCADrwAANw8ACALvQBgnb0AgCy9AMDHvACgE70AwDQ9AIAYPABgKD0AAJc7AICvvAAAnDoAAEa7AIDcPABgGb0AoJM9AEAHvQCA+jw=","chunkHash":"9690c62bd61f55a1c883920cd401963fe8f505ad3a2b952fdd6ab47b2eb25208"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\ndef visualize_mesh(mesh_data, output_path=None, show=True):\n    #...\n    # Set axis limits\n    x_min, x_max = points[:, 0].min(), points[:, 0].max()\n    y_min, y_max = points[:, 1].min(), points[:, 1].max()\n    z_min, z_max = points[:, 2].min(), points[:, 2].max()\n    \n    ax.set_xlim(x_min, x_max)\n    ax.set_ylim(y_min, y_max)\n    ax.set_zlim(z_min, z_max)\n    \n    # Labels and title\n    ax.set_xlabel('X')\n    ax.set_ylabel('Y')\n    ax.set_zlabel('Z')\n    ax.set_title('3D Cell Mesh Visualization')\n    \n    # Save if requested\n    if output_path:\n        plt.savefig(output_path)\n        print(f\"Mesh visualization saved to {output_path}\")\n    \n    # Show if requested\n    if show:\n        plt.show()\n    else:\n        plt.close()\n#...\n```","range":{"startLineNumber":165,"startColumn":0,"endLineNumber":189,"endColumn":19},"embedding":"AKAQPQAAXj0AsI09AGBuvQAA0r0AkL69AADluwAAOr0AQJm8AEDQvADgFD0AgAG8AMADPQDAor0AgDm9AJCZPQDAFL0AADA6AIAHvQAQiz0A8Ik9AIAEPQBwhz0AgIo8ACCRvQDgVT0AgGm9AACAugCgLz0AAOC6AIBvvQCAqbwAYDm9AECuvAAgCL4A4BE9AIBIvACAuDwAQC89AAAvvADwnT0AoDm9AFCIPQAA9LwAwPc8AIAzvADgOr0AICC9ADCTPQCAPrwAAM47AIDBPABA1TwAALk7AGCavQDAxDwAEK69AOBSvQAAm7sAAAA4ADDJPQCAc7wAgEM8AKCDPQAAgzwAAMQ8AMCrvACgLr0AAO88AIBLPAAAx7sAQCW9AIDFPACAD7wAwCK9AEDzvACA3rwAAJg6AMDCvQCgV70AAA28AACQugDAXz0AAL67AOBZvQAAzLwAgJu9AECovAAAkr0AAOC5AIBivACAtDwAgHW9AIB1PABAMz0AYOs9AKAPvQDgBr0AQKo8AACpPAAgIT0AgNM8AGBHvQBAjTwAgD09AADwugDA0zwAQCo9AAAuPACAbD0AwNU8AMAjvQDgMD0AAAu8AIBPvAAAA70AQOI8AIDrvAAAOTwAgOu8AMB0vQBgBz0AgAA8AIDpvADA6jwAwOQ8AAAkvACACr0AQOi8AKA9PQAgED0AAO07AABRPQCw5b0AIHS9AOCKvQAAsDkAACy8AMCAvACQtz0AALw8AGBaPQCAlDwA4Gg9AIByPABgDj0AwKa9AMDCPQAAsjsAQMc9AAC+OwAg5T0AUIc9AKB3vQAAdDwAIHK9AMA3PQAgJz0AgKW9AAAbPAAA97sAAOu8AABvvABgC70AANm8AGBvPQDgLb0AIHi9AEBNvQBArb0AgAa8AEAavQDgTT0AYGC9AIDAPQDA0jwAAKC7AAAdvACgQr0AgBW8AIBZvQBAmjwA4CO9AAA0PAAAeDoAACY7AIBfPQBAAD0AQLk8AIAlPQCAcTwAIAs9AOB8vQAARLwAgGY8AJC4vQDwgT0AgHO9AICqPAAAODsAANA5AMDiPAAAg7wAoA69AED8vACAJLwAAIm7AEAzvQDgB70AoEo9AICEPAAAzDwAYEM9AACsvAAA6rsAQIW8AECNvADghz0AAIC4AEAdPQBAcr0AQHQ9AGBlPQAA2DoAgI49AAA0vAAAkrwAwKW8AECyPAAAez0AAEA8AEDDvAAAHz0AQAQ9AAC+OwAAxrwAAFO8AICsvAAA3zsAoBw9AECFPADAwDwAwKu8AACPOwDg4T0AQIQ8AMDMvACgUL0AAJM7AECcvAAALrsAgBM8AIDKPACArb0AAB+8AOADvQD4Eb4AALi6AABMvQBAQb0AAK08AIBNPABggb0AQIA8ACAWPQDAUz0AACU8AABNPAAAW7wAoDK9AACougAAsjsAoI89AAAgvABwnL0AQFg9AAD6uwBQoD0AQJE8AIBtPQAAwbwAQIG8AEDIPABAzjwAgKQ8AICAvACAAb0AAIo8AAD8uwCghr0A4Bo9AABAugBgnr0AQOs8AAChvAAASDoAAFS7AABfPQCgRr0AYGi9AABAPAAAS70AALU7AABJPQAgS70AgHe8AACqvABgFT0A0Ns9AIBiPQDAQL0AgBK9ACCFPQAAFzwAANk8AIAWPABAxz0AMJA9APCHPQDQuL0AAH68AEBgvQAgTD0AgMa8AFCnvQAAAz0AoFi9AACouwCAsjwAkKG9AAARPQBQiL0AAC67AMDEPACwlT0AAEo7AAASPACQqD0AAIO8AKAPPQAAjL0AABO8ANC4vQAgXr0A4BQ9AKBTPQAgDT0AkPU9AIDYPACwir0AAJI7AIDgvABAUr0AAIo8AIAVPQAAxzsAAA29AICfvQAAnbsAgIY8ACA/vQAA2zwAEJA9AACbOwBgHz0AYDg9AACxOwDgJD0AAM28AMANPQCAFjwAgGU8AMAyvQAA+TwAwAG9APDivQAgaz0A8I89AAAtvACAujwAAAW9AKAGPQCAgDwAYDq9AICrvAAAojwAgCI8AMDNPADgd70AAHc8AOAnPQCggL0AAJQ7AACNPQBAZz0AAAa8AEBzPQBgCz0AAEC5AACAOgAA1LwAAAu8AEDlvADA7LwAAJK8AADruwAAtTsAAOm7AMAQPQAgM70AQKI9AJCVvQCAHLwAwM68AABLvQDgNb0AoAK9AOAmvQBg3r0AwKg8AADDuwCAyrwAQB09AABcPQBA/rwA0P09AADOPADAvDwAwLs8AABTvABAlLwAAMu7AABSOwAAhT0AAHi7ANCVvQBA2TwAwOO8AMBjPQBAhbwAwBO9AOAPvQCgK70AANg6AADDvACgNL0AAKS7AECvvACAcLwAoEC9AAC8OwDAkrwAwFa9AECePADAzTwAwN88AAAGuwCAjjwAADY7AIBiPQAAsLsAIFQ9AMAsvQDAcj0AgBy9AMDKvABAhz0AAAi7AGBbPQDAB70AICi9AECwvQBAfj0AgKA8AGA0vQAACL0AgKA8AMBhvQCgCD0AYBM9AACgPQAArrsAQMS8AIDSPAAADTwAQLw9AGAIvQBgkr0AADk8ACAKvQDgoL0AAIM7ACB/PQAAXbwAALI8AIDdvACATb0AAK67AABlvQAA7bwAQMc8AMBKPQAAvDwAAOs7AIDKPACgGb0AAMi6AIDVPACANjwAwH09AEC7vAAAQjw=","chunkHash":"60265231b0a96c651828f0f16fe249dab0d933779cd089cd4c3f23a1d78581a1"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\ndef save_mesh_data(mesh_data, output_dir=\"sample_meshes\"):\n    \"\"\"\n    Save mesh data to file for later use.\n    \n    Args:\n        mesh_data: Dictionary with 'points', 'features', and 'faces' tensors\n        output_dir: Directory to save the data\n    \"\"\"\n    # Create directory if it doesn't exist\n    os.makedirs(output_dir, exist_ok=True)\n    \n    # Save tensors\n    torch.save(mesh_data, os.path.join(output_dir, \"sample_mesh.pt\"))\n    print(f\"Mesh data saved to {os.path.join(output_dir, 'sample_mesh.pt')}\")\n#...\n```","range":{"startLineNumber":191,"startColumn":0,"endLineNumber":204,"endColumn":77},"embedding":"ACBwPQAA17sAwGI9AECuvQCAwbwAIFS9AED7vACAmDwAAJ08AIAwvACAHrwAAI+7AID1PACw5b0AgH29ACBdPQCABb0AIDU9AABiPAAAPzwAwF09AIBYPQCQhT0AAOY7AEC1vABA7TwAQAK9AAC7uwBAHT0AQLW8AMBVvQCA6rwAcIC9AAAaPACgsr0AALs9AACrPACAGT0AAJ87AEDsvACQwT0AIKG9ACBLPQDAzLwAgF+8AEBMvQAA37sAQBC9AOB/PQDAgbwAgM88AAAZPAAAlbwAYFq9AEDFPAAARDwA4EK9ABCQvQAAoDsAgEO8AOBcPQBA3rwAgJO8AOAdPQBAnTwAAIs7AICqPAAAhjwAgB28AAClOwAAZjwAAH+8AIA5PQCAgrwAgEk8AOA3vQDAML0AwIY8AGBjvQCgur0AACW8AIDSvADAsjwAAF48AACDvAAAOb0AaBS+AKAtvQCAN70AANo7AEDCPABgBj0AsJm9AACTPABA8TwAkJU9ADCavQDA5bwAgI88ACBYPQCgLT0AwLs8AOAzvQCA7zwAAAE8AGBEvQBAfT0AgBE8AADYugDAvzwAgHy8AACfvQDApj0AgAw8AIA4PADAfr0AwHY9AMCKPQAAHrsAADW9AEDevADAJD0AADy7AIA0vAAAeLwAwJ48AAA5vABAbr0AgAE9AMBTPQAA+LoAgAa8AAD7PAAA8r0AANO8AACKOwAA+TsAIGS9AABoOwBASj0A4Eo9AADZOwCA5zwAQMI9AACoOgCAUrwAgHW9APDOPQCA/TwAsJU9AAARvAAgPz0AQHk9AOAovQAQjD0AEJi9AICPvACAYT0AMPe9AIAjvABA7bwAgAc8ACBEvQAACrwAQJu8AKBfPQCgE70AQKW9AAAIvQDghr0AAAI7AMAgvQAAkz0AQJQ8AJCHPQBAx7wAQKe9AIDtvAAwt70AAJa8ADCzvQCALjwAwNK8AIC7PAAAJLsAAC47AACtPADAbz0AABE9AAB4PACAKbwAwP88ACAuvQBgTb0AAKw8AMAcvQCgAz0A0Ie9AADhOwCAybwAgCi8ACAWvQDgLL0AACC7AKAhvQBAer0AAEy9AADVvACgor0AQKu8AAAbvADQnz0AAKI8AAAWuwAASDoAgOS8AADJvABAgDwAwIW8AIAzPAAAxbwAwCc9AICaPAAA1jwAwF49AACwOQCgE70AIHe9AID6PAAAKT0AAN68AIBFPABAvrwAQLI8AIAjPADArrwAAAq9AIDDvADAmLwA4F09AABWvQCAkLwAgCq9AMALPQBAbT0AQEM9AAA6vACAnbwAgCw8AACJPACgBT0AAOm7ADCaPQCQ0b0AgFg8AMBEvQAgyL0AgG28AAB6vABAZz0AoG89AEDmvAAAW7wA8Is9AABdPQBQnz0AQLu8AOATPQCAELwAQIG8AACXOwCA/7wAYGU9AMDBvADAiL0AQNg8AEDavABAxjwAQMI8ACAnPQDApLwAgB29AEAkPQAAkjsAoCY9AIAOvQDAmLwAwIk8AICEPABAx7wAANQ8AIATPABAcb0AAEa7AEDkPAAAH7wAgAm9AMD6PABA5bwAAGG9AAAGPQDQj70AYBE9AIDXPAAAd7wAoGe9ACAxvQAAz7sAcMk9AKBQPQAAkrwAAOy7AKB4PQAAlDwAwOo8AMBAPQBwtT0AEI49AIBfPQBAer0AwJy8AOBTvQCggD0AoLq9AKA3vQAgbj0AoEq9AIDXvAAAmLsAwNS8AIAkvACwkb0AAFC8AAAlPQAgdz0AgMM8AOAxPQCAfT0AAB28AAA4OgBAY70AwD29AFDvvQAAW7wAgDI8APC7PQBgUT0A0Ak+AACpOwCAXrwAAMK7AICIPADgGb0AwHU9AIA4PADA9DwAICS9ADCrvQAACLwAgAC9ACCvvQBgiz0A4JA9AIArvAAABLsAgD09AAD6PABAlT0AAKW7AACWOwAAdTwAwM48AOBUvQAgTz0AwGi9AMDUvABgHz0A8K89AEC2PABgFj0AYAm9AKCYPQBgX70AAHe8AAA0OwBgPD0AIAU9AIC5PABgV70AAAg6AIA1PADA2LwAAGA8AGBCPQDgGT0AYEU9AMAIPQAAhDwAAIq8AOAevQDAL70AAJ28AIDOvAAARDsAACg8AECVPACwqz0AQCE9AOASPQAA7rwAIHM9AKBUvQCAJLwAALQ7AIC+vABALL0AkIe9AABovADA2L0AYAC9AJCFvQDAO70AIDQ9AACkugAAFbwAkIM9AADQPABADT0AAHE8AADZOwAAvLwA4GO9AMD+vAAgdz0AYEI9AECmvQBAljwAAKW7ACAKPQAAvzsAgCK9AACcuwAAcbwAMOc9AEDivACAjL0AwK08AAATPADgT70AYF29AACNOwCgO70AADC8AADtOwCAIz0AANg7AMD1vACA4zwAAKA8AMCTPACAD7wAANg8AIAivABgKj0AwIK8AMCcvQAQnD0AAB68AIAlPADAgL0AwJq9AKA5vQAAnLwAwII8AID1vAAATb0AAPk8AIAxvQBgCT0AAJY8AABwPQCAKjwAMI69AJCtPQAA47sAwDM9AAAoPQCgLL0AoOA9AMD8vAAAc70AgF+8AFDfPQAAlbsAgO48AOAPvQDgU70AAGq8AECSPAAAdLwAgEU9AIA8PQCAzzwA4IA9AAA2vAAAsDoAQNG8AACQuQBAg7wAAK27ALCHvQBA7zw=","chunkHash":"6d9001e4919d2d8e21aac49b971b8eed69f3158d3042171d30995caf16886d32"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\nimport os\nimport torch\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d.art3d import Poly3DCollection\n\ndef generate_sphere_mesh(n_vertices=1000, radius=1.0, noise_level=0.05):\n    #...\ndef generate_cell_like_mesh(n_vertices=1000, noise_level=0.2):\n    #...\ndef visualize_mesh(mesh_data, output_path=None, show=True):\n    #...\ndef save_mesh_data(mesh_data, output_dir=\"sample_meshes\"):\n    #...\nif __name__ == \"__main__\":\n    import argparse\n    \n    parser = argparse.ArgumentParser(description=\"Generate sample 3D meshes for visualization\")\n    parser.add_argument(\"--output_dir\", type=str, default=\"visualizations\", help=\"Directory to save visualizations\")\n    parser.add_argument(\"--n_vertices\", type=int, default=1000, help=\"Number of vertices in the mesh\")\n    parser.add_argument(\"--shape\", type=str, default=\"cell\", choices=[\"sphere\", \"cell\"], help=\"Shape type\")\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":213,"endColumn":0},"embedding":"AADRvACAuLwAsII9AAAovQBAg7wAoB69AACAugDgMb0AwKK8AABmuwAAoLoAAMQ7AMDIPADwjr0AAAK8ANDaPQBAIL0AQL68ACBSvQDgHj0AgD89ABCGPQAgMz0A4EO9AEBGvQCASz0AgCs8ACBiPQDAdz0A4Gm9ACBAvQDACL0AYGe9AADSuwDQCr4AgCS8AABwPAAAODwAgJA8AAAJPQCAhD0AkNm9AACGPQAADjwAgHg8AAArvACAtbwAsKi9ACC3PQDA8bwA4Bc9AIDYPADA0zwAQIi8APCzvQDAB70AIFm9AGAgvQAAMTwAwJY8AEA4PQCAYr0AgAM9AMC2PAAAsLkAgIG8AIANvABwhL0AQNQ8AKBePQDAwLwAQJS8AACUOgCwlr0AANw6AIBQvABAmbwAAI47AEBivQBgML0AAI87AIA4PACAgj0AIAw9AAApvQBwur0AoFy9AOALvQBgj70AgKm8AEAgvQBAQz0A4DS9AEDbPADAvzwAIG49AMCWPACAI70A0NE9AIA4PACAhjwAYII9AIAZvQDgoj0AYC09AEDDPAAANLsAwNs8AIDDvACQ7z0AQPc8AMC8vADABT0AANy6AADWuwAANDsAICY9AMA8PQCA0TwAAOi7ACA3vQCACLwAAEw7AIBCPACAczwAAG48AABmuwBgKr0A4EE9ACBNPQAA5TwAgJa8AGAgPQAwsL0AAA29AIDGvAAAaLoAYGK9AKAAPQCQsT0AABo7AIBAPABA9TwAgDw9AEDMPAAAujsAYDy9AGCUPQAASzwAkJs9ACANvQBA+DwAwLQ8AAAMvQBAJT0AgJW9AEDZPAAA3T0AQEG9AACcOgAAJTwAACk8AJCAvQAAUrwAgCc8ALCcPQAAK70AgHK9AMAjvQCgbb0AwPc8AOBivQCAjT0AQCq9AODLPQAAiDsAAOy7ACAyvQAAc7wAAKg6AABNvQDgIT0AAM67AIByvAAANLwAAMi6AGBvPQCA3TwAgKI8AAAhPQBA1TwAQJ88AAB9vQAAGrsAAG67APDkvQAgdT0AoAe9AECRvACAFjwAAEc8AMDXPAAARD0AwEe9AOAJvQDAU70AAHa8AFCRvQAAVrsAAIi7AACauwBAQD0AQCk9AABwugBgNL0AAPa8AMCZvADwpT0AgEi8AMDUPAAAl7wAgEs8AOAjPQDgBT0A8J09AAAoOgAAuDsAYE29AHCHPQAgXT0AAOo7AIC6PAAAUDsAgJI8AAChvAAAnzsAAAM8AEDyPAAgOr0AYDY9AMCFPACAKjwAQJI8AMCbvAAQlD0AAB67AAAuvQCAoLwAgOo8AMD0vAAAHjwAAA48AICbPADQg70AALW8AICEvABw9L0AgLm8AEDtvAAAqDwAgA89AICyvAAgPr0AIHo9AACUvAAA7zsAAOi8AAB/PAAAxTwAwE69AEDbPAAAErwAAP07AIBWvABQsb0AYGM9AIAMPAAAxzwAoFI9AAC3PAAAk7sAAKy6AACNOwCACjwAgO88AMCBvACADz0AAMU8AACUugDQ470AgCQ8AAAmuwBwx70AQDs9AACNPAAgUL0AwBs9AMD+PAAAIjsAgIK9AIAZPQDA0rwAQFc9AID5vAAgmL0AgNy8AKBLPQBAKD0AoIk9AEAZPQAAYzwAAI68AACEOwCAh7wAoFg9AADMuwBAzD0AYIY9AKChPQDA/LwAQL68ABDBvQBAST0AAFQ7ANDavQAADjwAACi9AIBavADAHj0AgH69AMCMPADgc70AQCI9AKBGPQBwiz0AwBy9AGBwPQAgCz0A4AK9AGAtPQDgr70AALG8ACB/vQAAHL0AYH89AGCTPQBAljwAYFk9AOBlPQAAizwAAHm8AICBvAAAA70AkAA+AOAHPQBAnTwAgJy8ACCgvQAAyzsAgAy8AMCwvQCARj0AAKM8AECGPADArzwAYIo9AEBTPQDADT0AAES9AIABPQDgR70AgKY8AMC3vACAJLwA4IK9AIATvQAAtTwAMME9AECrPAAAfDsAAEK8AACvOwAASbwAAKS8AADNuwAAmLoA4LU9AECIPAAAC70AAIC8AAA7PQCgKL0AID89ANClPQCgFD0AwBm9AACkOwAAOj0AAD67AAAAPQAAdDsAQLk8AADLuwCgHj0AwLW8AMCwPACgqz0AcIg9AICfPAAwir0AQI09ABDGvQAACLoAAJA5AEDNvACglL0AAPS7AOAnvQDwk70AYEo9AGBDvQBASb0AALM8AIBiPABAp7wAAD49AOBRPQAAKDoAQAI9AIATPABArzwAAES7AIBLPAAQpz0AAMI7AEDFvQAAoTsAgEE8AABIPQDAmTwAQJq8AMCKvAAATr0A4FY9AAChvACQgr0AAGk8AECsvACAJzwAwDO9AAC4ugAANL0AAKM7AABIOwCgqz0AwIa8ALC6PQAAHDwAAH08AOADvQAAIz0AgBA9AMC6vACAPzwAADi6AIB/vQAAYDoAAEm8AGA6PQCAubwAAIQ8AGBbvQAgmz0AAJw7AMDMvADAZb0AAJY8AACgOQCAfDwAAIg8APC7PQDAibwAAHi7AHDMPQAARLsAMMs9AAALPADAwDwAAMo8AIAVvADQwL0AgPo8AMDtPQAAWrwAgLo8AIAHvQCAyb0AAJM7ALDdvQBAAr0AwMM8ACAKPQCAOTwAAKA7AAAOOwCAq7wAcI29AECKPABA/7wAYHg9AADDuwBABj0=","chunkHash":"7e949219f39c25010ae5081db480872a85a3ce0063a33635d69cce7f48051426"},{"text":"File: `scripts/temp/generate_sample_mesh.py`\n```python\n#...\n    parser.add_argument(\"--noise\", type=float, default=0.2, help=\"Noise level (0.0-1.0)\")\n    parser.add_argument(\"--no_show\", action=\"store_true\", help=\"Don't show plots, just save them\")\n    args = parser.parse_args()\n    \n    # Create output directory if needed\n    if args.output_dir:\n        os.makedirs(args.output_dir, exist_ok=True)\n    \n    # Generate the mesh\n    if args.shape == \"sphere\":\n        mesh_data = generate_sphere_mesh(n_vertices=args.n_vertices, noise_level=args.noise)\n    else:\n        mesh_data = generate_cell_like_mesh(n_vertices=args.n_vertices, noise_level=args.noise)\n    \n    # Visualize the mesh\n    output_path = os.path.join(args.output_dir, f\"{args.shape}_mesh.png\") if args.output_dir else None\n    visualize_mesh(mesh_data, output_path=output_path, show=not args.no_show)\n    \n    # Save mesh data for later use\n    save_mesh_data(mesh_data, output_dir=\"sample_meshes\") \n```","range":{"startLineNumber":213,"startColumn":0,"endLineNumber":233,"endColumn":0},"embedding":"AAByOwAAyTwAQKI8AKBjvQDQgL0A4Ea9AICGvADA5bwAwN68AIBbPAAALrwAQKE8AACYugBwir0AoBC9AAC7PQBger0AAOq8AGAUvQAApjsAYGc9AEBCPQBA2jwAAJQ6AABOvQAAXjsAAEA8AIBJPQBgPD0A4C69AICdvQDA4bwAcIi9AECYvAAwEr4AABg6AMCHPABAorwAQI08AICIvACAEz0AQNG9AOCfPQBAHD0AAAC6AECAPACA9bwAoMW9AMDSPQDAx7wAALE7AAB6PABgEj0AoB69AKAAvQDAqLwAkKm9AMDKvACArbwAgFu8ANCVPQDAubwAAJE7AKBfPQDA6DwAAFU8AAAHPABAG70AAF48AJC2PQCARbwAAMW8AABQOgCgB70AQJm8AICovAAAqrsAABm8AOCIvQDgVb0AAB28AMDyPADwrz0AAFi8AOBtvQBAqb0AIFS9AADDvABAtr0AAMe8AADiuwAArzwAQAW9AEAVPQAgDD0AAPQ8AMCsvAAAcrsAQNE9AADhPACAfD0AACM8AOB7vQCAKjwAwHU9AECRPADAyjwAIH09AAD2PACAuD0AACA8AKBWvQDANT0AgCe8AMCkvAAAlLsAwPA8AMCMPAAAFrwAgEG9AEB7vQCAqbwAAIQ8AAA6uwAAfjwAIBk9AIAJPACAH70AAN87AABvPQAAMzwAAIY8AED4PACgbr0AwPS8AEAyvQAAsDoAYAK9AIBQPAAAwz0AAM07AOBCPQDgHD0AYJY9AIADvACAzTwA0Ii9ACCLPQAA2bsAcO49AEC1vACwwT0AAIE8AEDavADgAT0AwEK9AAAwPAAghj0A4KW9AMCovAAAoDkAAFM8AGAFvQBAML0AwOm8ALCcPQDgPL0AcJS9AAA0vQCwhL0AwAo9AACsvACgdT0AYH+9ABC4PQCAHTwAAF28AABCvQDgLr0AANA7AEAovQCAozwAIAa9AAACPAAAWrwAAIo7AOAkPQAAcDwAANI8AAAQPABAhjwAAHQ8AMDxvAAA/DsAABC7AODGvQAQij0AAIe8AAB5vACAlzwAALK7AABgOwDApTwAYDi9AIDxvABgL70AADa7AEBvvQAAgDkAAI48AAD/uwDAQj0AwFk9AACfuwAAWr0AAMS7AACRvABQwT0AACi7AABIuwCArrwAgBY9AMB7PQAgAD0AULk9AADVuwAALLsAACy9AACrPAAAhD0AwIs8ACAXPQAA6LsAALM8AADAuwAAvLsAgGa8AABLvADAgrwAYAA9AAD4OwAAfrwAgCA8AECLvAAQiD0AgMI8AIAtvQBAVL0AIEg9AAC4uwAAdbwAIAc9AADfPACQx70AgNe8AMB+vQAgqL0AAI87AICWvQBAhjwAQJU8AGAUvQAAHb0AIFo9AICmPABAET0AAJW7AIA+vAAAyTsA4D69AAAQvACAJrwAwJE8AEDJvABQn70AgEU9AACwugAATz0AIBw9AAD/OwCALL0AIC+9AEANPQAgJD0AgFg9AIDGvAAAND0AAEw7AEACPQDg9L0AALo8AIBjPACgPr0AwA09AEAUvQBAFb0AwJE8AEDzPADAybwAYCG9AAAxPQBga70AIHA9AIACPADAbL0AQDa9AMCkPACgET0AUKc9AIDcPADAjLwAAG67AEDPPAAA1LoAQJ09AMDGPADQtT0A4K09ABDNPQDgk70AwNy8ACAtvQBQrD0AQKe8AGBtvQAAojwAAPA5AACiuwDAjzwAIGW9AABEOwBgS70AACA6AMCRPQDgmj0AAMe7AIB9PQDgaT0AgPu8AACBPADggL0AgMC8ACDQvQBAFr0AANQ8AOBiPQAAqDoAII49AAAoPQAAMjsAAPy8AMDxvACgA70A4DY9ACAFPQAAKTwAIEi9AIDLvQAACLsAAFo7AGCWvQDAND0AwO88AADKOwBQmj0AwDU9AACVPQDgBT0AYBu9AAC/PAAgIb0AwEI9AKCFvQCAQrwAwCe9ACCdvQDAEj0AMKs9AACbuwBAmzwAgIa8AEDiPAAgYr0AwGe9AGACvQAAsjwAwAM9AACuPABAfL0AAEK8AGA4PQAQiL0AgMY8AABePQCAQT0AwNk8AGAlPQBAdz0AgDm8AABAOwAAy7sAwMs8AADzvACAEjwA4Du9AECHvABAiT0AoDQ9AEAVPQAAi7wAMJ49AOCMvQAAXDwAgGi8AEAjvQBAl70AABe8AABsuwDAZ70AwLs8AGBbvQCAML0AQLM8AIDAPACAsLwAYGg9AIAFPABAtzwAYEI9AIAYPQAAKrwAAL28AIAuvACwyD0AgGA8AJDBvQDgGD0AAP+7AOCFPQAA7jsAAG08AIATvABALb0AcKg9AAAFvQDQlr0AQLg8AEDJvABAuLwAoIi9AABkuwCAZL0AAGy7AACYuwAQgz0AAMw6AKCFPQDArjwAoBk9AACyPAAA9DwAQE89ANCKvQAAJj0AwIa9APCAvQDAhzwAgOs8AADhPAAAdrwAAPS8AHCavQCAWD0AgI08AIAlvQDAdL0AQGU9AABTvAAArTwAgAQ8ADCrPQBAzDwAAGW8AMDUPQAAZ7wAEMU9AMDPPACAB7wAAK48AACevAAgg70AABE8AHDuPQAAdrwAABk9AACjvABAKb0AAD47AHDTvQCAPL0AoA89AGBOPQCAeDwAQDs9AAAEuwAAs7wAABe9AICBPAAAMLsAQEk9AOAmvQAAOjw=","chunkHash":"4994336c18903f194dac3b17dbcd95460601831a220c9308fba702be3744efcd"}]},"file:///teamspace/studios/this_studio/utils/README.md":{"hash":"5386cfdc6186c8cefa3ff00fa79c7af4f5f04d26c49646a6529921dd069dc98f","entries":[{"text":"File: `utils/README.md`\n````markdown\n# 3D Point Cloud Generation Utilities\n...\n## Requirements\n\nThese utilities require the following Python packages:\n- numpy\n- pandas\n- open3d\n- pillow (PIL)\n- tqdm\n\nYou can install them using pip:\n\n```bash\npip install numpy pandas open3d pillow tqdm\n```\n\n## Files\n\n- `pointcloud.py`: Core module with functions for loading mask volumes and generating point clouds\n- `pointcloud_to_html.py`: Tool to convert point cloud PLY files to interactive 3D HTML visualizations\n\n...\n````","range":{"startLineNumber":4,"startColumn":0,"endLineNumber":24,"endColumn":0},"embedding":"AIBdvQCASD0AQIk9AIBLvQAgK70AwHy9AMCSPABgCz0AAM+7AECCPAAAY7wAQI28AIAUvQAgQr0AsJU9ACBCPQAAsLkAoAG9ACAuPQCAjT0A0LQ9AJCOPQCAtjwAAP08AJCBvQCAVj0AYBc9AEAlPQCAozwAIAg9AGCwvQCAgb0AwGq9AABhPAAA7bwA4EK9AMCKPACA8zwAQOe8AIAjPACAOT0AsJO9ABCDPQCggb0AQOG8AIALvQCAnrwAwPW8AADXPAAAUjsAAIC7AMBxPQAAe70AsIy9AECEvQCAKrwAEIC9AIA2PADA/7wA4CO9AODGPQAAlLoAkIe9AECAPQCAHD0AAE29AMCJvADAbL0AAL68AEBTvQBAWr0AwNw8AIASvQDAIr0AAPM8AAAPvACgOL0A8KI9AGCpvQAgYL0AwI28AABcPQCAHb0AAG48AIAuvQBQu70AMJm9AABNvADAo7wAAEy7AKBVvQAAE70AYHG9ANCYPQCglL0AAIC6AGBqvQCA4rwAQAA9AACGOwDAqrwAAEg7AIB4PAAAkjwAwIc9AECNPAAgKT0AgFS8AECuPABwkD0AwI+9AAD0PABA6DwAQF09AECAvACAhD0AgMk8AEDtvABAh7wA4EK9AAA4vADAiLwAAFE8AADkOgAAHDsAICG9AKAyPQAgdr0AACa8AABCvQCAyzwAwM28AEA+PQBwk70AQEK9AGCkvQBAu7wAAJ07AICevACAujwAAL27AGADPQBAOD0AAAQ7ALCIvQDgLb0AAKa7AGBYPQAA3jsAQCU9AAD1vACwgT0AAGs8AMDYvABAqLwAcNy9ACBNPQBAaj0AADm8AABWOwBArbwAgGc8AAAkOwDgTb0A4Ca9AKADPQAAojsAoBC9AMDovADgm70AgOY8AIC3vQAALbwAAMC7AICTvACAJjwAAOA6AOAkvQBAAb0AIGm9AAA1vADQgz0AQGW9AAB0vQCAqb0AYBI9AIAYvACAhD0AIEi9ABAZPgCAvbwAICo9AHCMvQBAoTwAAJw6AICNvABAID0A4AC9AMAaPQAAvDoAYDW9AEBuPQBAqDwAAJw7AAAougAAYrwAwKe8AABLPACAtb0AYLO9AIC5PAAA77sAgLo8AADlPACwgL0AwPW8AMDYvABAlD0AAEq9AMAePQDAz7wAUI49APCGPQAAHjwA4Ek9AEAZvQAAlrsAYJS9AMCGPQDgKj0AcLE9AICdvAAgCL0AIG89AIAZvAAAm7sAACg9AIBNPADgBL0AgDI8AEAgPQBA7bwAcIG9AAA8PQBQgT0AgB48AEAxvQAAiL0AsK09AIBDPQBAmD0AAIo7ACAoPQAgD70AAP27AACzOwAAaL0AQAg9AMBKvQAApDoAAJ68AGBqvQAAmL0AAJY8AECbPAAA4DoAAIe9AJCOPQAAXL0AAJa8AEBfPQAA2zwAoKc9AMCWvACQwr0A4FA9AICwvABAkzwAgCq8AABVvAAAKbwAgFI8AAAAPQCAAjwAAC48AABwOgCAoDwAQPc8AAA4uwBgf70AAL49AOCevQAgO70AgFs8AEDAvABAAT0AwPo8AEB5vQBA77wAoAe9AMD+vACggr0AAAW8AICyPAAA/LwAQBw9AEDXvAAAmDoAgAS8AEDSPACANb0AoBU9AICLvADA5LwAABS9AADAuQAA1DwAgAk8AAB7vAAADr0AADw8AIAlvQCQlT0AQEm9AJDjvQDA3jwAgEu9AIAavAAAILwAEIe9AEABPQDgOr0AAPY7AICkPAAALjsAQGq9AABUPQCAdz0AAAq9AIDRvADgN70AUIS9AEDDvQDgVL0AAMw7AMDfvABAgrwAQLo8AAAYPQBAMb0AUIW9AACIuwCAcjwAwI48AMDWvADAhjwA4Cu9AGDPvQAAaDoAgBS8ANCYvQAAhDwAAFS8AKBgvQAAT7wAIDQ9AOBcvQAAuDsAENK9AOAePQCAtjwAQPk8ACA6vQBghb0AwMa9AABHPAAA1TwAABw8AABxvABAIT0AAOE7AIDHPAAA0LkAgEc8AKBBvQDA0rwAgPM8AABTvQCAo7wAgEQ9APC0PQAwpb0AwBq9AADqPACAf7wAgBi8AABEPQCAB70AgIc9AIADvQDAMr0AQBs9AEC/PACAWTwAQPI8AAClPADQkT0AANE7AKBDvQBATL0AwA09AECFvAAAjTwAYEe9AMDCPABA4LwAAOY7AAAePAAAA7wA4CE9ACCMvQCgSb0AgCa9AABdvADAoL0AAHc9AOBePQAA9zsA0II9AJCMvQCgQr0AAC+8AIBePAAA/7sAALA7AFCJvQAAArsAgEw9AGCKPQAAID0AAMI7AMBKvQAAAbwAwME8ACBNvQDwir0AwJK8AGBYvQAARjsAgNE8AABAvQBAmbwAwBU9ACBBvQDAlDwAwN08APCkPQAgVb0AABs9AAChuwAwnj0AgMc8ACAHvQDQoT0AwOO8AEDavAAAvDoAAH49AADsOgCgeL0AICg9ACAEvQCAjDwAgDc8AADYvQCAD70A4EG9AEAOvQCQmr0AwMM8AADTuwDAKT0AAP68ACAIPQAAujsA4PY9AID/vAAA0DwAgCI9AMCpvABQr70AwOk8AHCoPQCAUrwAAA+8AABIPAAgXr0AQEw9AABwvAAAt7wAgEk8AACyuwDgSj0AUJU9AOARvQAAcrsAAIu8AIDuvABApTwAQLE8AAD4vAAA7zw=","chunkHash":"dfb85cd8e02ebb91f276e6df61127164dabef8120ea05f326e721dc8c9a5abe3"},{"text":"File: `utils/README.md`\n````markdown\n# 3D Point Cloud Generation Utilities\n...\n## Usage\n\n### Generating Point Clouds\n\nTo generate a point cloud for a specific sample:\n\n```bash\npython -m utils.pointcloud --sample_id 0001 --data_dir data --output_dir data/pointclouds\n```\n\nTo generate point clouds for all samples:\n\n```bash\npython -m utils.pointcloud --data_dir data --output_dir data/pointclouds\n```\n\nAdditional options:\n- `--voxel_size`: Size of each voxel in the output point cloud (default: 1.0)\n- `--sample_rate`: Fraction of points to keep (default: 0.5, range: 0.0-1.0)\n- `--max_points`: Maximum number of points to include in the point cloud (optional)\n\n...\n````","range":{"startLineNumber":26,"startColumn":0,"endLineNumber":45,"endColumn":0},"embedding":"AIAjvQDA5jwAIM89AOAYvQDAer0A0IK9AED3vAAAlTsAAAQ7AOAFPQDQkL0AgE68AMAfvQAgPr0AQAo9AOAnPQAAV70AADS7AIBwPQAA0zwAwCU9ANClPQDgcT0AwOs8AMCrvQDAyzwAgJs8AACwOwAgMj0AACe8AGCxvQBAZr0AgIG9AGBlvQAgUr0AAJu8AOAEPQBgFL0A4A29AMDYPABAET0A8OW9ADCHPQDgLr0AQJ+8APCGvQCgib0AELO9AACLOwBAgjwAAHy7AAAyPQBQiL0AUJi9AABEuwBgQL0AQJe8AABeuwDAs7wAwBO9AICXPQCAIjwAgLu8AAC+PQAAUj0AgPq8AAB4vACgRb0A4B29AIB3vQAA5zsAQIQ8ACB1vQAAYDkAwG09AAAnPAAgtL0AQEI9AEDHvQDgc70AQMQ8AIAyPQAAZ7wAANw6AADTvABgar0AQG29AIAUvADA2zwAgMy8AMAsvQCA+rwAoFu9AABVPQAQob0AYAC9AICQvACggr0AgKc8AABwOwAAgDkAAIQ6AIBzPACAxLwAoEE9AACuvADA1DwAAEU8AABAOgDAez0AgHS8AIBWPQAAdDsAMIc9AIBpvABgDj0AIDY9AIBAvABwh70AYIm9AEBUvQCAYjwAQMg8ACAEPQAALjwAQHi9AGBzPQDA/7wAAJC6AAB/PAAgAj0AgAm8AGAsPQAAP70AoEC9ABDjvQCA8rwAgEk8AIBivABgCb0AQNo8AGBbPQDwhj0AgDA8AABovACAAb0AoIO9AKBlPQAAXjsAAMA8AEBhvQDA1DwAAHC6AMAuvQBAozwAUIy9AIAvPQCwsj0AIIq9AABSuwAAKLoAYEk9AECtvADAfr0AUMO9AIAMPQAAybwAoEW9ACCCvQCAHr0AAIs7AFCzvQCAojwAwAS9AADHOwAA4DkAwCi9AMAovQCA/7wAwBW9AIBCvQBA/jwAIF69AIAfvACgn70AAHY7AGA5vQCguT0AwNu8ANDUPQCApLwAwIU8AMBdvQAA8LoAANS6AICYvABATz0AAE+8AACkOwDgKL0AgNO8AIAKPQDAqzwAQA+9AAAxvAAArDoAwIu8AAAtPACQob0AoM+9AMC8vADA9zwAAKA8AIDHPAAgur0AgD+8AACtvABw0T0AQE69AEBJPQDAS70AAKA9AICgPQDgRT0A4Ek9AIBcvQDAu7wAsM29AECKPQDAET0A4KQ9AIC3vACAEr0AgD49AGA6vQAA6TsAYAE9AADYOwDAML0AYBW9AIAhvAAAqb0AQDS9AMCxPABAKD0AgMM8AMChvADAWr0A0AM+AKBgPQCAbTwAgLW8AAAoOgCQjL0AAH47AMD4PAAAbrwAgJY9AABrvACAwzwAQMy8AECQvAAgl70AQH09AIATPACABT0A4GW9ACCFPQCgXL0AgB69AECsPAAAh7sAQFw9AKCOvQAgTL0AICk9AABCuwCAijwAYAS9AAAZvACAOzwAAJM8AECavAAAbDwAYAg9AAD3uwBgTj0AYCc9AGBRPQDgOb0AwJc9AIBUvQBAM70AALy8AGAYvQCABj0AgC89AABhvACA6jwAQIe8AAA3PADAhb0AwBo9AIBAvAAA6zsAwMI8AIDfvAAARjwAQA09AKAEPQAAaLwAADw8AMDfvAAAI70AQLO8AABYugAADzwAQK88AEC9vAAApbsA4Ak9AMAqvQDgGz0AkIi9AIDLvQAAijsAAKS8AEBAvQAAIrsAQOu8AID8PAAgAb0AwBg9AKCSPQAAmLoAoBO9AOAnPQAwmD0A4H29ACAmvQAAg70AUJG9ANDZvQAgW70AgJy8AECUPADAmTwAgMk8AMAfPQBAFL0AAEu9AECdvAAAnzwAwGi9AIAaPQAADzwAoF69AID1vQAAEb0AQLS8AKBJvQAAmzsAQL88AECtvQAAJzwAAMu7AIAhvQCAsjwAwAW9AACBPADA5TwAoJY9AAAHvADARL0AcLO9AEABvQDAvzwAABI9AAC1PABQnj0AADo8AMDhPABAEb0AAIA7AABsOwAA87wAABS7AADPOwAA0LkAAIS8AMALPQAgH70AYAs9AGB5PQAAkTsAAEo9AEDjPAAAkbwAQBM9AABivACAm7wAAF09AIATvADgKT0AwJc8AAA4PABgZT0AgDE8AOAvvQDARr0AoEU9AADAOQAAwrsAYEq9AMAHPQBAH70AQJC8AED9PAAA07wAIEI9APCtvQDAIr0AwKe9AMCLPADAIr0A4Js9ACAGPQCAwDwAICk9AADFvAAAyrsAANu8AACgOgBAj7wAAPQ7AHDZvQAAXDwAgA88ABCzPQAAfjsAAP07ACAkvQAALTwAAEi7AEAtvQDwpb0AADU8AOAVvQAATT0AgOw8AIBWvQAA8jsAAJk7ACAqvQAAuTsAQLo8APCYPQAA+LoAQMs8AAAougAgXz0AwNa8AIDIvACQiz0AwA+9AIAuvAAARTwAwF09AABLvABgD70AgL48AOBfvQAAlbsAwJu8AJCQvQAQqr0AgF68AACBvAAAvbsAQAE9AMCJPAAAEj0AICa9APCPPQCAyLwA4AU+AADJuwAgCz0AwOC8AAB6OwDw770AAK+7ACBoPQCAGrwAwKW8AEABPQAAqbsAwE49AIDyPAAAibwAAF48AADkOwDAWD0A0MM9ABCEvQBAkLwAANi6AABsvAAAyzsAAL08AMCmvAAgAj0=","chunkHash":"18ae00aeca9af958ef58c29eb7ab661ea365dd8d957bc504250e166afca5ae60"},{"text":"File: `utils/README.md`\n````markdown\n# 3D Point Cloud Generation Utilities\n...\n## Usage\n...\n### Converting Point Clouds to HTML\n\nTo convert a single point cloud to an interactive HTML visualization:\n\n```bash\npython -m utils.pointcloud_to_html --input data/pointclouds/0001.ply --output data/pointclouds_html/0001.html\n```\n\nTo convert all point clouds in a directory:\n\n```bash\npython -m utils.pointcloud_to_html --input data/pointclouds --output data/pointclouds_html\n```\n\nAdditional options:\n- `--title`: Custom title for the HTML page (default: filename)\n- `--point_size`: Size of points in the visualization (default: 0.05)\n\n...\n````","range":{"startLineNumber":45,"startColumn":0,"endLineNumber":63,"endColumn":0},"embedding":"AEBTvQCA/jwAELo9ACARvQBgdb0AQJq9AIASvADA8TwAoBQ9AMDCPABA8LwAAJC8AOAbvQDgkL0AwGQ9ACCLPQCASrwAQK+8AMBsPQCgKT0AQEY9AIAzPADQgz0AIHA9ACCNvQCAgz0AwIE8AADsPACAMj0A4CI9AICFvQAAaL0AwOi8AMAivQBA+LwAgJu8AGBZPQAAErwAQIW8AKBjPQAAHz0AwF+9ADCKPQBAk7wAADy7AKBPvQAAGL0AQKa8AKBAPQAA2zsAwLo8AICYPQBgOb0AIJG9AGBYvQCgRL0AYBe9AKAnPQAAhbwAwCG9AMCWPQAAZjsAoCy9APC5PQCAijwAwGm9ACBJvQCA8rwAAFK7ACAvvQAAODoAAFK7AOBGvQAAdLwAwLc8AACuOwAwm70AQGw9AICGvQAwor0AAHM8AOAwPQDAcr0AAFa8AMCOvAAgUL0AgK28AACbvAAAwDoAwMG8AKCSvQAABjwAEJ+9AMCFPQAgq70AQN88AKBJvQCAGL0AgAs8AABCOwCAojwAADA7AIBgPAAACLsA4As9AACvuwAAUj0AoB49AEA2PQAAezwAIH29AAAhPQAA9bsAEKQ9AAA+vABgPD0AAEY9AEDpvABAurwAQEq9AIDRvAAAebwAwNU8AADHOwAAT7wAwBq9AACsPABA6LwAACE8AMBmvQAAPD0AANC7AOAcPQCgg70AIBm9AHC8vQBABr0AAMU7AAB4uwAA5rsAQOo8AEA8PQDgKT0AgEy8AMBSvQCAcrwAQLa8AAClPQAAwDgAgDE9AMBbvQBA7TwAQLI8AEAdvQBA1jwAQGy9ABC4PQBAQD0AoI29AACQvADAPD0AAJ88AMDNvACAPL0AYIW9AABBPQAAuDoAgFG8ADCKvQBAx7wAAMG7AADMvQCA+TwAAOS7AIAHvAAgOT0AAKK8AAB9vQCA3bwAAKQ7AMC6vACwiD0AYGu9AAA7vQAwsb0AQNk8AIATvABAST0AQBy9ANDRPQAAP70AgGs8AKBCvQDA6rwAIE+9AADcvAAAkz0AgCq8AACAvAAA4LsAgMq8ABCIPQDAmjwAAFq8AIDkvADA+zwAAIO7AADSuwDwhr0A4HK9AACEvABALj0AAOC7AICJPAAAKb0AgCO9AMAJvQDgej0AwPy8AMDTPAAAWb0AEKw9AACePQAA7DoAwKM8ACBQvQCAzDwAIHu9AFCiPQAAPT0AAKU9AMDivADAkbwAoKg9AEDLvABAhrwAMIw9AADOPADAKr0AANy7AABCuwDALr0AgIW9AABsvABAcT0AAOq7AOAmvQBgfb0AwM89AICLPQDAqTwAQNK8AAATvAAgsr0AADg8AIAnvABghr0AYCI9AADoOgAAzLsAAFK8AIAIvAAAmr0AoCc9AICoPAAAbjsAoGy9AMCdPQBAj70AAJS8AMBJPQAAnzwAQFc9ACABvQAAp70AAJk8AACquwBArDwAQBq9AMCavADA2DwAACY7AIDnPACAiDwAADK8AACYOwCAPzwAAGA7AGAzPQBQyb0AoI09ACBcvQBgSr0AgAg8AOBMvQDQ0T0AwOU8AADwOQAALDwAQLG8AMD0vACQx70AAHI7AACWPAAAnjwAICk9AAD5vACAoDwAYAg9AGBnPQAANL0AwLM8AIAxvAAA/7wAUJm9AED3vABA+TwAEIE9AIBpvQAAXLsAANo8AMDJvAAgCz0AwFi9APDRvQDAJT0AQBC9AKAzvQAApLwAgA+8AGANPQDgIr0A4B89AOB5PQAAILsAwFG9AGAiPQDgiT0AwD29AABCvADQq70AoFq9ACDyvQAACr0AAJQ7ACBMvQAA6zsAQCA9AMCNPADANb0A4Ey9AABqPACAtrwAgDE8AMCvPAAAtzsAsIW9AECnvQAA3DoAAJO7AACBvQCAtbwAACq7AFCovQBAqLwA8II9AICovQAApzsAYBO9AGAfPQCAyjwAcIE9AADEvABAXL0AEKy9AICcvAAAIjwAgFS8AAAAOAAADj0AgIq8AABLPQAgTL0AAEw7AKBqvQAAZr0AQK88AABxPACAbLwAgB68APDMPQAgmL0AAK+8AAAWPACAMTwAQPQ8AMDtPACA1LwAID49AIAgvQBACb0AgIg9AEDVPACAxbwAAHE8AACOOwDAvTwAALK7AIAyvQDgF70AoBQ9AADNuwAAfDsAoGa9AAAsuwCAY70AAMC7AIDYvACgIb0A4C89AMC8vQBAOb0AgJW8AAA+uwCgwL0AsK89AKBmPQAAnjwAAKU9AMAYvQBAOr0AAFA6AACtPAAAMjsAQKM8AGBkvQDArTwAAMS6AOCJPQAAE7wAwLk8AKA7vQAArrsAANO7AEA0vQAAer0AAIQ8AKA/vQAAcDwAAPi6AEASvQCAsDwAAHK7AEAXvQDAnLwAAHI9AOCWPQCgKL0A4AE9AABFPABgtz0AYDg9AICpvAAAPT0A4Fy9AKApvQDAyDwAsII9AECIvABghr0A8J49AEDuvAAAdrsAADq7APDRvQCgSr0AAEC9AICfvABgab0AABC7AAADPACA1LwAgFS8AICiPACARbwA4BI+AMAkvQAAgLgAAIu8AAAIPACAs70AAP07ALCFPQAAR7wAQHK9AMCtPACgar0AgLM8AABEOwBAv7wAgCG8AAB4uwBgGj0AIJ49AMBkvQAAUrwAQNs8AKAZvQAAUDoAABE8AADuuwAAALw=","chunkHash":"a3e071e1ce345d06ade621f2a0cb6f7f2ca2c35b42f2a01ecb925941180250a2"},{"text":"File: `utils/README.md`\n````markdown\n# 3D Point Cloud Generation Utilities\n...\n## Usage\n...\n### Using the Script in scripts/\n\nThere's also a script in the scripts directory that can generate point clouds for all samples and optionally create HTML visualizations:\n\n```bash\npython scripts/generate_all_pointclouds.py --data_dir data --output_dir data/pointclouds --generate_html\n```\n\nAdditional options:\n- `--voxel_size`: Size of each voxel in the output point cloud (default: 1.0)\n- `--sample_rate`: Fraction of points to keep (default: 0.5)\n- `--max_points`: Maximum number of points to include in the point cloud (optional)\n- `--html_dir`: Directory to save HTML visualizations (default: data/pointclouds_html)\n- `--point_size`: Size of points in the HTML visualization (default: 0.05)\n\n...\n````","range":{"startLineNumber":63,"startColumn":0,"endLineNumber":78,"endColumn":0},"embedding":"AGBnvQBA+TwAgOw9AMArvQBAfb0AMJm9ACAVvQAAaLoAAJw6AABLPADwn70AAJk7AIDFvACgWr0AgGU8AEBjPQBghL0AAC47AMDiPACAhDwAAGw9AMDsPAAghj0AgKI8ACDKvQCAVj0AQJU8AMAVPQDwhD0AQLu8AHCNvQCAUL0AUI29ACBBvQAQ4r0AgHq8AAD3PACgBL0AwIW8AIBjPADA5DwAIL69AOAgPQDA8rwAQBG9AMBVvQAQi70AgLe9AACAOwAAeTwAwJg8AOBbPQAAjL0AIE+9AABDvQBAjr0AYEO9AAChOwBAsrwAACe8AECdPQAAlDoAQAq9AKC0PQCAnTwAAJ27AACDuwCgWb0AwNy8AMDovACgaz0AgGC8AAC7vAAAFjsAQPI8AIAtPQCAqL0AQMk8AOCvvQBgUb0AAKQ8AKAEPQBgHL0AQJS8AECgvABQj70AgPe8AGAAvQAAd7wAgCK8AABQvQAAPLwAwE+9ACBUPQBAk70AACq8AGAJvQCgnL0AoB09AADyPAAgIT0AgDq8AACqvAAAb7wAkKU9AADDuwCAVz0AgD49AMBRPQCgBj0AIIe9AOAdPQCALzwAID89AMDmvACAKDwAIGE9AIBcPACgPb0AgGC9AEC0vABAuzwAgA09AAAuPAAAOzwAgP28AEDbPAAAGL0AgLm8AIBiPAAA0LoAQPU8AIDUPACgZ70AwOC8ADCvvQBgMr0AwIS8AKAAvQBAKT0AwEI9AKA+PQAAcz0AoFQ9AIBTvABAxbwAoE69AKBYPQAABLsAwEg9AMCLvQDgOT0AgC88AOA+vQCAmzwAQGW9AADXPABAhT0AgLe9AACWPAAAFTwAoBw9AACsuwCAUL0A0Mm9AKAQPQAAUzwAgPi8ANCKvQAA+rwAAA48AODAvQAAHz0AgC+9AMCFPACADTwAwAe9AIDZvABAlbwAAAo7AAAhvQCAYT0AgDK9AAAfvAAQ070AQME8AAC/vABAhz0AAA69AGC8PQAAZrsAgDc8ACBVvQCABbwAAEw7AEDvvAAgXT0AQIS8AAD6OwCAHLwAAMg6AMCxPAAAiLoAAMS8AEBWvQAAsrsAAP28AACevADAGr0AIKK9AGAEvQDAKz0AAIK7AAA5PQBgn70AgMq8AAAoOgCQrj0AQFy9AMDTPAAAv7wA8Ic9AJCFPQAASrsAsIY9AED4vAAAJDwAQLe9AHCzPQCATT0AEMc9AAB/vAAAJr0AYGg9AGBFvQCAn7wAoCo9AEC3PABAfL0AAIa8AID/PABAL70AIES9AMDIPAAwij0AAHY8AMCGvACQor0AQMs9ACBcPQBA9jwAQAS9AIAdPAAQqL0AgCs8AACguQDAgrwAQNw8AACnuwCAGT0AALO7AOARvQBgqL0AoKY9AABuPACA9zwAgM68AICBPQAAn7wAwAO9AICDPAAAKDsAUI09AABDvQBAZ70AQPw8AAABvABA+TwAAL27AAB4ugAAHjwAAAC5AAC0uwDA2DwAwJY8AAC7uwAArjwAAHI9AOBIPQCAXL0AkLE9AIDVvADgCL0AAC+8AAAzvQCAPz0AAGM8AIChPACAKzwAAH68AIB0PADAi70AYEs9AACbOwCAVTwAoEE9AEDwvAAARTwAwDE9AEAtPQAgA70AwMM8AAD+OwDAYL0AgL+8AIBCvAAA3jwAALI8AICbvAAAwLwAAAY7AIDOvAAAyzwAAH+9ANDovQCAlDwAgEm8AADuvACAMLwAADq9AMBmPQBgLr0AAA49AMCFPQDAiDwAgNS8AMAfPQDAcz0AgGm9AMDAvACgpr0A8JO9ABgavgBwr70AAJc7AIDQPAAAK7wAIBQ9AEAsPQBAB70AoIe9AABAOgDANL0AwLi8AADKPADAxjwAoDe9AJACvgCA4bwAgIy8AFCEvQCAbTwAIBc9AKBRvQAgIj0AAHY8AMDgvABADz0AAIq7AACrPABAuzwAYFs9AAD/vABA9bwAkNO9AEAXvQBgLD0AwIY8AMCSPACwjD0AQJw8AKBKPQBgQL0AAJC7AAAAOgAAH7wAgCI8AAD4OwAAubsAAIW7ABCSPQCA8bwAAMc8AMBzPQAAjDoAgIw9AGAtPQCAajwAAHK7AECAvACAc7wAgIE9AABjvABACz0AwMQ8AAATPAAAdT0AQLY8AIBZvABAd70AoFo9AAAAugAAUzwAwHK9AMCUPABA2rwAgEI8AABQOwBgUr0A4Fg9AACyvQCAF70AAGy9AAABPABQlL0AQLw9AKB6PQDgLT0AAOE8AAAIvAAA9DoAgFW8AADPuwAA8bsAgKQ8ANCpvQBAxzwAgGo8AHCIPQCAxzwAAI+7AGArvQCAwbwAABC6AAB4vQCQm70AADE8AOBGvQDA/zwAwJK8ACBCvQBAgbwAgDq8AOApvQAAl7wA4BQ9AHCuPQCAfDwAwCA9AIArvADAyTwAgIw8AOBKvQAgZT0AQPK8AICdvACgMT0AgKg9AABFvAAgMr0AoDA9AEAbvQAA27sAALi7ADCbvQCAh70AANi8ACBOvQDAn7wAAFo8AICwPADAuDwAQAO9AGCAPQDAjbwAUAE+AAAsOwCAsjwAAJU8AACfuwBg770AgI88AOBOPQCALbwAIAO9AIA7PQAA/rsAgCE9AIBUPAAABb0AAHw8AACkOgCgOT0A8JQ9AOBsvQCACb0AALg6AAAoOwAAALwAAIA6AABFvQBA9jw=","chunkHash":"8ec5abfdcffb7a6a981258cfb9dc8bd713e8c861c329ecf6cd19675ba31a38fa"},{"text":"File: `utils/README.md`\n````markdown\n# 3D Point Cloud Generation Utilities\n...\n## Usage\n\n### Generating Point Clouds\n...\n### Converting Point Clouds to HTML\n...\n### Using the Script in scripts/\n...\n````","range":{"startLineNumber":26,"startColumn":0,"endLineNumber":64,"endColumn":0},"embedding":"AFCDvQCgNT0AAJI9AOBlvQAAYL0AsIO9AIDevABAzTwAAIC6AADOOwCAbr0AgCs8AIDPvACASLwAwBY9ADCUPQAA1bwAAKm8AMA1PQAgNj0A0I09AIABPQDgcj0AYFg9AADGvQAQwj0AAGg8AIAQPQCgAz0AgCw8AJCRvQAAbL0AALq8AABVvACAxLwAwMS8AIBEPAAAobwAAKG8AABUOwCAKDwAQF69AAD7PADga70AIFq9AGBsvQDgQ70A4AK9AKAYPQAALzwAAIk7AKBSPQAgVr0AIDK9APCpvQBAU70A8IO9AAAiPQBA7bwAAKg8AMCyPQDA1LwAoJa9AGClPQAAiLoAIAa9AEAyvQAgFb0AAJa7AADCvABA5jwAACa8AACXuwCASrwAgPE8AEC7PADwhb0AoCg9AFChvQAgcL0AgA48AMCJPQBgab0AgPG8AABYOgAAXb0A4I69AIARvQAABL0AgLm8AGBBvQCAebwAgDm9AFCEPQAQgb0AAKi6AFDFvQBgOr0AgLc8AICCPABgJz0AANQ6AICzvAAAPbwAwHw9AIAZvACAcDwAAEk8AADkPADAOD0AcLG9AIAKPQAAzDwA4HQ9AAAWvAAAOT0AAHU9AAAiPAAAFL0A4Hq9AMCtvACA0zwA4CQ9AABePABAsjwAoEe9AABjPQDAEL0AAJ68AGACvQAA+TsAAOy7AADwuQDgUL0AALm8ADCovQBgXb0AAIO7AIDvvAAA9jwAAAs9AIC6PAAALD0AYBA9AMA1vQAAg7sAwKm8ACBbPQCABrwAoBA9AMAzvQDA4DwAgCm8AAC8vAAgFz0AYKC9AGAnPQCAGT0AoGa9AADsOgAAIj0AAFg8AECTvACAWb0AwNK9AACmPAAAjTwAQGK9AKBTvQBA7LwAAFi6AOC6vQAAUbwAYCu9AOATvQAAhTwAQOW8AMBDvQCgBL0AQK08AADkugDAcj0AgD+9AKB0vQDQr70AgEw8AACQvABAUz0AYBa9APD/PQDA57wAgBg9AEBMvQCAL7wAAO67AAC3vACgbD0AwN28AGBHPQAASLoAQJK8AEA2PQAAbzwAgOu8AMBYvQAADjsAwPi8AAA+vAAwob0AgI29AIADPABgEz0AAEe8AEAHPQBghL0AICy9AIBbvAAglT0AIHq9AEAEPQDAt7wA8Io9AHDAPQAAFLwAAFU9AGAqvQBAPj0AoLW9AFDQPQDgOT0AMMU9AABcuwBAH70AgKQ8AABIuwAAALsA4Ac9AEDbPAAgYr0AgFi8ACAIPQCADr0AEIy9AIC4PAAQij0AwJU8AABtvACAPb0A8LQ9ADCTPQBgIz0AAG+8AIDRPAAgcL0AAEc8AACcOgAAoLwAAEE9AIAdPACAFz0AQPC8AABzvQAgqb0AUII9AAAVPAAA0jwAgA29AHCHPQCAOLwAQHW9AAB7PAAApzwA8Kw9AKAovQBQpr0AgFM8AMDDvACgKz0AAPC8AACQOgDA8zwAAFY7AAAyPAAACrsAAAm8AACwuwCAFz0AoDs9AGA8PQBAX70AwLM9AEAGvQCAO7wAgEW8AED2vADQhz0AAAU9AMCevADgFj0AACu8AECXvADgU70AQDg9AACjPAAAz7wAwLM8AKBVvQAAVLwAgJ88ACAqPQDA5bwAQKs8AIAePAAAQr0AQBu9AICmvAAAIj0AoCw9AEABvQCAy7wAgK88AOADvQBgGz0AgJ29AODSvQDAmjwAgL+8AECmvACAbrwAwLe8AKA3PQDgpr0A4E89ACAAPQBA9zwAwGK9AGBdPQBgtD0A4D29AGAkvQCAMb0AoLq9ABDnvQAAjb0AgDE8AEAXvQDA+7wAgO08AGA6PQDAAb0AMIC9AAABPAAAT7wAAFK7AADQOgAAeLoAYBi9ADDSvQDAoTwAAJm7AOBtvQAAIjwAgAI8AJCkvQDA7DwAYAc9ACACvQBAnTwAACO9AIDQPAAARLsAgFE9AOA8vQAAvbwAsPW9AAD2uwDAjTwAgBY8AMClPADAYj0AAOI7AKBRPQDgcL0AAN+7AEACvQCgEL0AAAA6AABYuwDAprwAQDs9AODHPQDAK70AQIo8AIDrPABAwLwAQDE9AOCbPQCAh7wAAIs7AAA5vQAAC7wA4Hk9AMC2PABgFT0AoCE9AACKOwDgpj0AgBq8AOBqvQAgZb0AwE49AACUugAA1DwAoDe9AIB1vABgIr0AAJE8AMCIvAAAGLsA4HM9ACCAvQCAkL0AQBK9AAD9OwBAi70AUMU9APCXPQAA5jwAwIM8AABcvQDA97wAAKu8AAAmOwAAlrsAgAM9ACAPvQBAxDwAAIE7AKCIPQDgGD0AwMS8AMB8vQDAZb0AgCy8AAAPvQDAY70AAEM8ACB2vQAAajwAgGW8AAAmvQAAxrwAAEA7ABCMvQAADb0AMJM9AGCtPQAAIbwAwCU9AABIOwBAFT0A4Bc9AMDrvABgZD0AgAW8AICwvABgJz0A4KA9AMCpvAAAgr0AoFE9AACZvAAANrsAAJE7AADgvQBAv7wAABW8AEBcvQDgKL0AQJA8AABCvAAAkDwAAI+8AIC5PAAA17wAQBo+AEDVvABA7jwAgGQ8AACUPABQ0L0AQLk8AKBbPQCAYbwAYAK9AIBcPABA8rwAoAw9AAA6uwAgEr0AAAA4AAD0ugCACjwAcKQ9AABJvQBAIr0AQL48AIBjvAAAzjwAQMG8AAAgvACAzjw=","chunkHash":"aac71beb28c16752ef0289f22faf5c3775a158194116c5ba104380de28a16690"},{"text":"File: `utils/README.md`\n````markdown\n# 3D Point Cloud Generation Utilities\n...\n## Pipeline\n\nThe point cloud generation pipeline follows these steps:\n\n1. For each sample:\n   - Load the mask volume from TIFF slices\n   - Convert the binary mask to a point cloud\n   - Optionally limit the number of points (using sample_rate or max_points)\n   - Save the point cloud as a PLY file in the output directory\n\n2. Optionally, convert the PLY files to interactive HTML visualizations\n\n## Output Format\n\nThe point clouds are saved in PLY format, which can be opened with various 3D visualization software including:\n- Open3D\n- MeshLab\n- CloudCompare\n- Blender\n\nThe HTML visualizations can be opened in any modern web browser and provide interactive 3D viewing with zoom, pan, and rotate functionality. The HTML viewer also includes a slider to adjust the point size in real-time. \n````","range":{"startLineNumber":78,"startColumn":0,"endLineNumber":99,"endColumn":0},"embedding":"AEA2vQCAcT0AYJQ9AEDivACger0AgLG9AAAAOwAAsjwAAOS7AMD6PADA1rwAgBG9AAD7uwDAcL0AYEk9AGBXPQAAI7wAYAi9AGBrPQAgUj0A0II9ACADPQBAmjwAoEM9AJCYvQCAED0AwL08AMCTPACAVDwAAI87AFCWvQAQkr0AoD29AAA+vACA77wAgOu8AAABPQAgMD0AwJG8AACAuABgED0AUJW9AGAJPQBgVr0AQKU8AGAjvQCAXjwAoB29AEDQPADA/jwAAFW8ALCbPQBgkb0AoHW9AFCEvQAAx7wAAA29AAAIPAAARDsAQPi8ABCkPQBAg7wAAH69AABfPQAA2DwAgF+8AGAqvQDA6rwAAP67AEAavQAAJjwAAAw7AFCVvQBgHL0AALI7AMDzvADAjr0AIAk9ACCfvQCAXL0AAFw7AGAxPQCgIb0AQNu8AABdvAAQgL0AQFG9AABlvABAxrwAAEo8AKCjvQAAzLoAQEK9ADCVPQCgj70AgIw8AGCIvQAgAL0AADs9AICJPABAsTwAQO48AACQugBAjrwAwGo9AADEugBgQD0AAMg7AADAPACA8zwAML69AECFPADAAj0AIHo9AAC4OwCAxDwAoG09AIAsPADAm7wAwE29ACC2vQCADjwAQMM8AAAIOgCAuzwAwNW8AGCRPQDAib0AAI07AAABvQDA7TwAAKq8AKAfPQAgtb0AwOe8AKCVvQAAPrwAwIa8AADIOgAA9jsAAIK7AACMPABwqD0AAKe7AOAcvQAAsLwAYDq9APCTPQAA9rwAAC09AOA8vQAAID0AwAU9AECWvABAhbwAQLy9APCiPQBgOT0AAHO9AAAtvAAAiLwAgF09AMDZvABgG70AoFq9AOArPQAAwLsAgIW8AABtvQAAcL0AAJC5AGCsvQBA/TwAAJ28AADPvAAgGz0AAI+8AEAUvQDAx7wAUIC9AACVvAAAwj0A4DG9ALCdvQAQi70AAOw7AIDTvADAoT0AYAK9AHgWPgCwj70AAHk9AAA8vQBAhjwAgCO9AEDxvACwjD0AAJ08AGApPQCANbwAAOO7AMA9PQCAaTwAQO+8AIBNvACAsDwAABK7AACwuwBgvL0A4Ga9AIBhPADA5jwAQPY8AKAEPQCgib0AQIe8AMDqvABArD0AAEG8AECnPABgW70AgH89ADCPPQDA8zwAgP08AADOvAAA5jwAQFK9AECQPQAA4DsAYMg9AIAlvADAaL0AYAk9AEClvADAnLwAwBA9AACAOQAAYrwAQIw8AIBdPACgFL0AgPG8AADQOwCgMT0AgCo8AOA+vQDgHL0AMJc9AEAqPQAAdz0AAIs7AADiuwBAP70AwLU8AMC9PABga70A4DM9AOACvQAApLsAYDq9AABfvACAyb0AYAU9AAC0ugAgbz0AQHO9AMBsPQCgSr0AANy6AEB9PQAASzwA4Hk9APCFvQCgor0A4Co9AIAYvACA2TwAAC28AADAOAAAtDoAAIA4AICCPAAA2bsAQMA8AAAcOwDAoDwAwN48AGBFPQCAfb0AANU9ACBgvQBAe70AAEa7AACYuwBQoz0AgOE8AEDEvAAgJr0AQMq8AACvvABwp70AAAS8AICaPACAC7wAAIE8AKBfvQDAlrwAgH88AICdPADAxLwAgHY8AAByvACQhr0AoA29AID0vABgSD0AANA8AACzvADA6rwAQO08AEDpvABAbT0AoF69AICjvQBgHz0AIJ+9AIBjvQAAKLsAQEe9AEABPQDA7rwAAJy7AIBNPABAqrwA0J+9AJCNPQDALj0AAPi7AECevADA670AkOC9AADTvQDA9rwAAEY7AICtvACA8bwAAJs8AKBEPQCgKL0AMMC9AECZvAAAsLkAAJI8ACAQPQAAVrsAQCu9ACDhvQBAi7wAADC7AEB3vQAAMDsAAA09AKAQvQDABL0AwFs9ABCXvQCASLwAAGC9AMDgPACgQj0AoI09AAAqvAAAVb0AYLC9AACRuwCAWDwAwPU8AABsPADAPz0AgA08ACAkPQBAL70AAOi7AABjvQBAz7wAAE08AIAFvABAobwAoD89AHDEPQBQh70AIAm9AECaPACgCD0AAJ+8ACAmPQAAursAgEs9AAAEvQBACL0AAAI9AADLPACAMzwAAAS7AIBxPADgfj0AAJa7AACGvADQib0AQOs8AGAhvQCAijwA0L29AAAnvAAAQDkAwOc8AABtvABgW70AsIg9AGBSvQBA0rwA4Da9AKARPQCgbb0A8J49AKA0PQCA9DwAQL88AKBtvQCgS70AgDI8AMCvPAAAAr0AABO8AHDPvQAAcrwAwKy8AOBQPQDA0DwAQJo8ALCGvQDA57wAwI+8AABuvADgaL0AAKC6AECfvQAAursAAL27AMAcvQCAEDwAQMY8AABgOQDA1DwAgIg8AIBtPQAgc70AQB09AECRvADAeD0AAEK8AECPPABgij0AoB69AIBlvABgOj0AAKw7AADQOQBgNr0AQEU9AMA3vQCAVTwAgEW8ACDRvQDA57wAACm8ACBSvQDgcb0AQJg8AABqPABgGj0AgMW8AIACPQAAKD0AECM+AMCGvADAoTwAADE8AABJvAAQwb0AAL88AHDPPQAAdrwAQO+8AACQOgBgib0AYCM9AACUPADA5rwAALQ6AADoOgAgUj0AgHA9AMDtvAAAAbwAAD68AACWvACAezwAAA+8AMCSvAAAgDs=","chunkHash":"9d9b7c4ee808aefec293577e77cf28b6e4723f2dc4890afdc173a188ee931611"},{"text":"File: `utils/README.md`\n````markdown\n# 3D Point Cloud Generation Utilities\n\nThis directory contains utilities for generating and visualizing 3D point clouds from masked nuclei samples.\n\n## Requirements\n...\n## Files\n...\n## Usage\n...\n## Pipeline\n...\n## Output Format\n...\n````","range":{"startLineNumber":2,"startColumn":0,"endLineNumber":91,"endColumn":0},"embedding":"ACB7vQBAdj0AwLo9AEBfvQBgl70AwHu9AACQOQAA0jwAMIO9AMDNPACAW7wAgFg8AIAZvACgRr0AgI09APCYPQBAz7wAAMm7AKB9PQDATT0AEKM9ALCDPQCAbj0AgHo8AGCXvQBwjz0AwIc8AADEOwDAiDwAwLw8ACC/vQAAhL0AADS9AMC3PACAprwAgJu8AEDiPABAgzwA4EC9AADJOwCAdDwAwL29AAB8PACAIb0AAHG8AKAsvQAA+zsAMLG9AABuPAAA6LsAACu8ACBiPQBwnb0AoGK9AIBsvQAAmbwAYDC9AAASuwAA47sAALe8APDDPQCAx7wAoGW9AOA/PQDA+jwAQNC8AMD0vADAHb0AAJC7AKA6vQCA4DwAwL08ACAzvQDA/7wAYDA9AMCVvABAj70AgPQ8AED5vQAADb0AwIS8AECBPQAAqrsAYAK9AOATvQDwl70AQGW9AIACPABgDr0AAJA6AABHvQDAw7wAYB69AJCpPQCwkr0AAP+7AKB+vQAAZ70AoGU9AMCsPAAAZLsAAPU7AAB6PAAgCb0AgLY9AIApPAAA2zsAANa8AACLuwDwiD0AAO+8AAC4ugCAYj0AgC89AAACOwBAZT0AkJw9AIAOvAAAN7wAANC8AKBUvQAA4TsAwDw9AACYOwCAGT0AgGy9ALC2PQBA2bwAAKK8AOAcvQAAgDgAgA+9AABwuwBgWL0AMI69AOB0vQBgGL0AAGY8AMCzvAAA9zwAwKM8AIDCPAAAnj0AAJC6AMAdvQAAJbwAABO9AOB2PQAAtDoAwDI9AKAOvQCA9TwAAJW7ACAdvQDAxLwAML29AEA9PQBgbT0AYDy9AMCMPAAAHrsAoBc9AIChvABgOL0AEJa9AADNPADAk7wAoCu9AOALvQDAyLwAwL08AACnvQAAYjsAACS9AGAavQBAxjwAAMO8AGAAvQBA67wAwOu8AACBOwBAQD0AgF29AOAkvQBQpr0AgIq8AMC/vACAJj0AwF29AODyPQCgA70AQCw9ACA4vQCAEz0AQOy8AEDFvACgBj0AANw6ACBmPQAAALkAgLK8ACAyPQCgAD0AgMa8AABxvAAAODoAgNK8AIC9vABAhL0A4NG9AAAaPAAAhjwAAC08AAAwPQDgcL0AAK68AMD1vABAez0AAB29AMDgPAAAQLwAII89ABC5PQDA1jwAANc8AGA1vQAAKDwAIKm9AABpPQDAwjwAUJs9AIASvABAfL0AgBc9AOBdvQAAMjsAgGY8AAAsOwAAyTsAALO7AMDBPABAK70AAPi8AAAhPQDAYz0AQOM8AEATvQDgMb0A0JU9AGApPQAAVj0AAMw8AKAkPQAgEr0AADg8AACUPQDgV70AwEI9AABIugAA7zwAAGC9ACB1vQAgp70AAJ87AMCIvADARz0AAIO9AHC+PQCgM70AwKO8AMArPQCAyzwAIJ89ACAavQCQqL0A4C09AIDXvAAQgj0AAPA6AAAYvACAMLwAQII8AAArPAAAXjwAANa7AMCqPAAAED0AQKk8AKAWPQCANr0AIMA9AABKvQAAvbwAAFW8AIAYPACABTwAICA9AAA4vQAAy7sAQJC8AACFOwCAK70AgPU8AACvOwAABL0AQKY8AADguwDAqLwAALm7AOAFPQAAR7wAgHW8AADdvAAAh70AgKm8AACfvAAAajsAANM8AAADvAAAcjsAwMU8AIBTvQBQgD0AENG9AMCkvQBAVD0AgDK9AMCgvADAoLwAgG69AMAuPQDgZb0AQN08AADkPAAAgrsAwLK9ADClPQAAnz0AgDW9AICYvACANb0AQNi9AAC8vQAgG70AgEi8AOAKvQCAwbwA4Bk9AMB7PQDAw7wAELe9AIAUvAAAujwAACG8AID5PAAAOLoAQJa9APDwvQCAQzwAgBO8AGCAvQAAcrsAAJ08AAB/vQCAsjwAAOo7AIDBvABA2jwA0Im9AAAbPQAAUTwAIG89AIDTvADAa70AsAi+AACNuwCAszwAAHg6AGATPQCAKz0AgEo8AIChPADABL0AAE47AAB1vACAX7wAAEU8AACiuwAgBb0AgL88AACDPQAARb0AAIE7AACrPACA4LwAoBE9AGBsPQDA5rwAgBM9AMCivACAxbwAgPk8AABQPACgIT0AQMM8AAC8ugAQuj0AAEU8AKBQvQCAZr0AoGQ9AABgOQCAAj0A4Du9AEDDPACArLwAAMQ7AMD0PADAKb0AQFw9AID3vAAggL0AgHe9AIAcvADAZb0A4F09AICKPQDA7TwAAAU9APCsvQAAeL0AAAG8AABuOwBAjrwAwKw8AFDfvQDAHD0AQJs8AGAOPQBAQz0AANc8AABMvQBgEL0AgAS8AGAOvQAAJb0AAMm7AGCLvQAAULwAAIi8AGAEvQAAALwAAHi6AKBAvQAA8LkAoAc9AJDVPQAAM70AQAE9AADjvACgmT0AAJ08AIBGPADAmj0AAPW7AAAWOwDA17wAgNs8AIA2vAAgjL0AYG49AGADvQBAubwAAHo7AACcvQAARb0AQMG8AEA4vQDAIb0AAKY8AMCivADAGj0AAG28AOBePQCA+DwAYDg+AMDEvADgLD0AIBU9AACDvABgc70AwK08AGBwPQDAgLwAAES7AEDyPAAgD70AgMY8AACEugAAr7wAAKY8AAC0ugCgQD0AEI09AICnvAAARLwAQAu9AICzPAAAeDsAgIs8AMCHvADAoTw=","chunkHash":"8532aed5bdbb2e5556266c74768e6117c9b60cf85398a584e2036c85f225e12c"}]},"file:///teamspace/studios/this_studio/utils/requirements.txt":{"hash":"212bf4c38796e507fb98878718b0d98e21b4bc03c10bb4a0986e40cd9090ad29","entries":[{"text":"File: `utils/requirements.txt`\n```text\nnumpy>=1.20.0\npandas>=1.3.0\nopen3d>=0.15.0\nPillow>=8.0.0\ntqdm>=4.60.0\ntorch>=1.9.0 \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":6,"endColumn":0},"embedding":"AEAOvQBAYr0AQJw9AGB6vQAAhTsAQI28AAAKPADArjwAQIS9AADFPAAASzwAgPQ8AFC4vQAAurwAMJc9AKCqPQAAijsAQLE8AEAqvQAQiT0AsII9AMA8PQBgEr0AQNG8AIDrvAAAED0AQL08AJCLPQCAcjwAYCk9AKByvQAgRb0AQD+9AIAoPQDggr0AAHy9AAA6uwAgPz0AgEc8AIC9vACAkDwAsJq9AACsOwAgdL0AYEa9ACBEvQAAl7wAAP07AACCPACgNL0AAPC6AAA2OwAgb70AgCk8AIAKvQCAOTwAAJG8AGBOPQBgCj0AYFq9AIDdPADAnbwA8Km9AACzvAAAMLsAgIE8AKBKvQBwlL0AgBq8APCtvQDICb4A4C09AAARvQCwBL4AgN08AIBevACAGbwAmBc+AACwOwAgRr0AcJq9AMDbPAAwl70AoBA9AIAzvQDQ6b0AoKq9AIAwPQCgV70AgA68AFCCvQDAg70AQDW9AOBLPQBgaL0AYCi9AMDKPAAAqrsAQKq8AADvOwAAkrwAQM08AIAsvQCgCT0AACM9AIBuPAAQrD0AUIq9AMD8PABgej0AAEO9AADDOwAAILsAANc9AECwvABA5rwAgHy8AADkuwAA3LwAAAQ7AIBdPAAgMr0AALE8AMCJvQCAXLwAwNW8AEC4vACgX70AALq7AOANvQDgZ70AcIW9AEDBPQAAXb0A4D29AECNvQAA3DsAQM48AAD+vAAAMj0AQKo8AIBAPABA2rwAYDI9APClvQAAWDoAAIw8AABougAARrwAAPg8AACUuwBAnz0AsMO9AAAauwCACrwAIKO9AMCAPABQsz0AgGw9ACBBvQCgkr0AABS7AMAFvQCAQrwAwDs9AEDKvADgFD0AQPS8AAABvABQk70AUIM9AABgvQAAwLkAwI28AMAyPQDA7DwAAPy6AICtPAAAvbsAEM29AICMvAAAYDkAAPS8AACbvQCAar0AAMw6AABoOgCAZD0AYCq9AIByPQDgBz0A0IQ9AECKvQAgVz0AwBo9AKBRvQDAvTwAgHi8AECyPAAAIrsAgIC9ALCHPQAAarsAwB89AAAAOgCQwb0AkL29AIARvQAwl70AUIW9AICePACAk7wAwLm8AOCWPQDAljwAQP28AADHOwAAWzwAAHC9AMA4PQAA2zwAgFA8AKCBPQAA0DkAQKM8AEDRvAAAaLsAoHK9AECJPADAaT0AYCW9AKBXvQCAfbwAwDg9AAD4OwBAm7wAgNg8AIB8vABgAr0AQAq9AADGPAAAL70AAM+8AMB7PQBA8LwAAJc8AGBDvQCAbL0AAAi7AEDLPADAGz0AgBU9AHCAPQAwlL0AgCG8AECQvQBAV70AQJW8ALCnvQAA4zwAoDS9AEDVPACA57wAAPQ7AMCzPAAAArsAgDA8ALDFPQAA7bsAAB89AAATPQAAtD0AYF09AAA4vADQgb0AgDc9AKAPvQAA27sAQAo9AICfvAAARDsAAMM8AAC6OwBgPT0AAEw7AIBRPQAAKDwAwJg8AAALvACAkTwAoIk9AGBivQAAbbwAgOG8ACASvQCA+LwAoDU9AECGvQAgXL0AMIu9ACBCvQAArzsAAMo7AAA9PABwmr0AgIU8AABxPQAA8LsAAMi8AIBsPABAkb0AgCQ9AIBTPAAAiDwAwJe9AMDivAAADDwAAPG8ACCAPQAAhLsAAOe7AMCRvQAAIj0AQJy8AEBIvQAA8LsAQNc8ANCqPQCABrwAIJC9AAD/OwCAKD0AwMg8AACWuwAAybwAgGM8AADBuwBAyD0AAMc7AADGOwAgP70AgNS8ACB1vQBA/LwAwO68AABXvQAA67wAQNa8AHCTPQAAQDwAgNI8AFCBPQDAED0AwP88AJC9vQAA/LsAgAG9AICmvAAQjr0AAM68AIDYvAAASDoAAAO9AIAAvQAAs7wAwLe8AAARvQAgBL0AgFa9AMA2PQAAzjwAAJ27AEAjvQAA5LwAoJW9AICIPAAAu7wAgFE8ACAlPQAAhzwAAMA5AADROwBgfj0AABW8AOAevQAAlbsAwLo8AGChvQBgCj0AAKE8AMAzPQCAtbwAgIS8AEC4PAAA/DsAADc8AIAzPABAGT0A8KQ9AACaOwBAjLwAgEa9AAC/PAAAhTsAAP07AAAtPQAwjD0AsKE9AGBgvQAASjsAAFE8AAB9vQAAOLwAwBm9ANCCPQDgU70AgCI8AID7PAAA2rwAQFo9AGAQvQCARzwAwK68AIARvQDgN70AIBk9AIAHPAAgnr0AoGc9AOBovQCAyzwAIGW9AEDSPAAAR70AwB69AMA6vQDAjjwAIL09AOBxPQCA4rwA4DG9AIBfPAAAeD0AkII9AMAAvQAAJb0AABw7AEAovQAgOT0AAOk8AMAHvQDgI70AsKI9AICovQBgZT0AAFi8ABDPPQDQi70AAFA8AIDwPADATD0AgJq8AOAzvQDAmT0AgCI9AADkvAAAFTwAAM07AABFvABAjbwAYBA9AAD0PADAmjwAgJ88AABHvAAA1bwA4Cw9AACouwDAY70AAAA7AAB5PACA1DwAQPu8AEA5PQAA9jsA4Ls9AAD0uwAAiL0AIBs9AEC+vADgur0AQAo9AAClOwAAgLwAgJQ8AABevADAfb0AAFo9AOApvQCgjL0AoEk9AIAUPQAAY7wAoBU9AABzPACAb7wAIAW9AICMvABAvTwAAAE9AIBxvADAAT0=","chunkHash":"a91f22790086017ed6b7fb5657be97e856e0624edecf6f7d877722ab2ee40a13"}]},"file:///teamspace/studios/this_studio/utils/mesh_utils.py":{"hash":"0e4f899dbd21a78bc1c8765c05bef0abfa901357dc69e44725d185099203c8de","entries":[{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef create_mesh_from_mask(mask_volume, threshold=0.5, voxel_size=(1.0, 1.0, 1.0), \n                         smooth_iterations=10, decimate_target=5000):\n    \"\"\"\n    Create a triangle mesh from a binary mask volume using marching cubes algorithm.\n    \n    Args:\n        mask_volume (numpy.ndarray): 3D binary mask volume with shape (D, H, W)\n        threshold (float): Threshold for considering a voxel as part of the mask\n        voxel_size (tuple): Size of each voxel in the output mesh (dz, dy, dx)\n        smooth_iterations (int): Number of iterations for Taubin smoothing\n        decimate_target (int): Target number of faces after decimation\n        \n    Returns:\n        trimesh.Trimesh: Triangle mesh object\n    \"\"\"\n    # Step 1: Run marching cubes algorithm on the volume\n    verts, faces, normals, _ = measure.marching_cubes(mask_volume, level=threshold, spacing=voxel_size)\n    \n    # Create trimesh mesh\n    #...\n```","range":{"startLineNumber":17,"startColumn":0,"endLineNumber":34,"endColumn":0},"embedding":"AACOvADA6zwAwCc9AADrOwBgFb0AAMO8AMAgPQBwmz0AgI+8AKAfPQAAaDwAAL88AEApPQBAs7wAANa8AEBTPQAgIr0AAFo7AIAAPQCA/LwAAJa8ACCrPQBASD0AQPS8AMBsvQBAGj0AQFk9AABhvQAAGDsAAHY8AICvvACA/LwAQJy9AIBHvQCAobwAAHU8AIATvACAXD0AgGa8AICPPABgXT0AwGa9AABQuwBA8jwAQNg8AIAsvACAKT0AoBG9AAAaPACA6LwAIB+9AACrPQCAhbwAgFm9AICAvABAQL0AYIO9AAAnvQAgAj0AwMo8AMCJPADgQL0AoCG9AIDbvAAQ7j0AIJg9AICOPAAAJbwAgL88AICCvQAAdr0AAJY7AAAMvQAAlrsAABk8AEBHvQDAmrwAcJQ9AEDrvAAAPLwA4EK9AEANvQAgnT0AAI88ALDvvQDAe70AEKi9AAA0PADAOL0AEOK9AGA3vQAAtjwAAEC5ALCmPQCAEzwAwGe9AIA3vACAFr0AwIk9AEAEvQAAOLwAgII9AICXPADggz0AIBw9AADiPAAgdT0AoBe9AAAWOwAQ5z0AYIo9AADyvACAeD0AAGy8AIBvPAAAFbwAQGI9AADFPADwzr0AABM9AMB7vQAwrr0AgEc8AOBYvQDALj0AgIe8ABCSPQAAcr0AQOu8ACBXPQDALz0AgLM8AEBnPQAgGL0AgHk8AGAtvQAANz0AwF89ACAUPQDggj0AcKa9AAD/OwBggj0AgBS9AEA9vQDgLL0AAGy8AABmPQAArbwAAHA6AGAqvQCA6zwAAE48AOCCvQAAoLwAoI69AACOPABgsT0AAAg7ACAzvQBwsr0AQL48AAC7vABAzzwAIAE9AFC6PQBA+bwAgDE9AACCuwBgN70AIAE9AMDovACgbD0AIO29AIANPQAARrwAQA29AIC/vACgZ70AAGW8AKBUvQBA+TwAABg7AACfPADA6rwAgHo8AIBNPADgSD0AwJE8ACCjPQBA8bwAYAA9AED5vACANjwA4JU9AIBVvAAgED0AgAY9AGB3PQAAjLsAAF08AABuuwCANbwAQAQ9AAATvACAMr0AAP+7AABiPAAwhr0AgDU8AADHuwCAtLwAUIA9AOCKvQDQyL0AwI89AAB+vACABbwAABW8AAC9PQBgUD0AAOc8AADKvADAhrwAAHo7ACAPvQCAIzwAQIG9AKAMPQAgwz0AAMu7AIBfPAAA4rwAgCm8ACAivQCAb7wAwJu8AADVPACAejwAAHo9AECjvAAAZDwAAF47AEC1vADApDwAADk8AEDPvAAAab0AALC8AIDdPADAZT0AwGu9AEA2PQBgMD0AABi8AADwugDAd70AoII9AMALvQBwgD0AQFc9AMCcvQCgnL0AgKq8AMCdPABA6DwAwJ48AMCsPADA0DwAwNw8AIDHPABgWr0AwCI9AIASvQDgUL0AAPW7AMDZPACArjwAIBU9AIDhvACAKrwAoAY9AMDXvABAo7wAkKA9AOAPPQCgIT0AAIA8AMCLvACgfr0AQEY9AEC9vQAA170AgFA8AIDVvACA8DwAQDm9AABHvQAAKbwAILa9AACjvABAID0AwJk8AIA4vAAgHr0AQNk8ACAhPQDAlDwAoHA9AIAUPABACD0AgCg8AADNvAAAIjsA4H09AEAtvQDQmD0A4DA9AMAMvQDAQL0AAM07ACCVvQBgID0AgD68AEBqPQBADD0AgHu9AEDAvACAPbwAyC++AAAeOwCANjwAQNQ8AIAKPAAAxrsAACk9ACBMPQAgMT0AAHa7AODEPQCAbLwAoBq9AIBXvQCAQ70AgCQ9AEC8PADwjT0AQIS9AIBwPQBACj0AAHw7AADQugCACD0AALi9AIDUPACAFLwAAI07AOBsvQAAODwAAGA7AGBKvQCANzwAQJI8AEDMPACA67wAIJA9AAADPQBg8z0AwAO9AABePAAAd7wAALS8AADvvABAxrwAcIu9AKAtvQDAIz0AgKs9AAD0uwCAyDwAQJc9ALDZvQCga70AgBA8AAD2uwCACbwAQMc8AABIOwAAOTwAgBm8AIAxPAAAFb0AAEc8AHD9PQDAwTwAAPS6AICpPABA9zwAAAk8AMCqPQCAvLwAYC09AAASOwAAsbsA4Cu9AADcPABAKT0A4Cw9AICRPABAEL0AALo8ANC/vQAA7jsAwIO9AED0PABAlLwAwF+9AEDZvACAcLwAwMy8AKCRvQAAqDoAADG8AADgOQAA4LkAAAC5AAB0vACAFD0AAJ09AIBTPAAA/LsAACu8AMDNPABAjrwAAIM7APC0vQCA3rwAQFM9ACBnPQAAqzwAQGK9AADOOwBAYD0AAJE8AMCrvADgK70AIGA9AIA6vAAAKD0AwNy8AIBTPAAABL0AAF48AMA0PQCA/zwAsOK9AFCmPQCgKb0AQIq8AIDSvACAd7wAYJy9AACauwDAFD0AAEK9AMAbPQBgYD0AgMY8AIDxPADAlDwAADW9ACCpvQDA8z0AAHy7AACougCgBL0AAAQ9AAAWPACALz0AcIc9AEAePQBgZL0AwDm9AGCPPQDAxrwAkIw9AOBcvQCABrwAQCs9AADrOwCAQr0AACS7AAB/vAAA97sAoCI9AIB0vAAgbr0AwAk9AMDjPAAAt7sAwDs9AACCuwAAczwAgFi8AICbPAAAUTwAACY7AAAmvADAgTwAAFQ8AAB7vAAgOr0=","chunkHash":"08d6019ed07b4386897adb12f1f909dd6634b623943e8fb7b8bed57f44815d91"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef create_mesh_from_mask(mask_volume, threshold=0.5, voxel_size=(1.0, 1.0, 1.0), \n                         smooth_iterations=10, decimate_target=5000):\n    #...\n    raw_mesh = trimesh.Trimesh(vertices=verts, faces=faces, vertex_normals=normals)\n    \n    # Apply Taubin smoothing if requested\n    if smooth_iterations > 0:\n        try:\n            smoothed_mesh = raw_mesh.copy()\n            smoothed_mesh = smoothed_mesh.smoothed(filter='taubin', iterations=smooth_iterations, \n                                                 lamb=0.5, nu=-0.53)\n        except Exception as e:\n            print(f\"Warning: Smoothing failed: {e}. Using raw mesh instead.\")\n            smoothed_mesh = raw_mesh\n    else:\n        smoothed_mesh = raw_mesh\n    \n    # Decimation if requested - fixed to use pymeshlab if available or fallback\n    if decimate_target > 0 and decimate_target < len(smoothed_mesh.faces):\n        try:\n            # Try using quadric decimation directly if available\n            #...\n```","range":{"startLineNumber":34,"startColumn":0,"endLineNumber":52,"endColumn":0},"embedding":"AMC3vAAgVj0AICY9AAChuwCA3LwAAL27AAAxPACwrz0AADC8APCUPQAABTwAgAe8AAC3PAAA9LoAAEa7ADCOPQBA0rwAABQ7AIBhvAAABrwAAMu7AACOPQCAPD0AAO68AMB5vQCAYTwAIFA9AKB4vQBAgLwAQKE8AOA3vQDA97wA8J+9AMANvQAgZL0AAKE7AECLvAAgAj0AgN68AMCUPACwuz0AQCy9AADSuwDgfz0AgDc8AIAivACAAT0AgFK9AABiOwDAj7wAgBC9APCTPQAAJr0AUIa9AMC5vACgPr0AQBK9ACBjvQCAFLwAgAc9AGAhPQAAKrwAANy8AADVuwAgWT0AoEw9AKAivQBA5rwAAMy6AKB8vQBgQr0AAG+8AMD8vABAAr0AAK67AIB4vACArLwAMJc9AIDsvAAAZrwAYEK9AAANvACA1TwAAHQ8AFAYvgBQwL0AgLu9AAAivACAhb0AkOG9ALCLvQAAHLsAoA+9ALCvPQDARj0AgBi9AIAIPABAGL0AsII9AICJvAAAn7wAYJ09AAAtPACA5zwAwNM8AABYugCgEz0AgFG8AACsuwAAzT0AAHo9AMBlvQCgZT0AgBq9AID+PAAAlLwAgKQ8AIB3PAA4AL4AAPM8AKAgvQAA6rwAgP88AMAhvQBA1zwAgBm8ACCvPQBwrr0AAEy9AECKPACAsz0AgBC8APCSPQDgRL0AgBm8AMC0vACAtTwA0Kg9AOAbPQCgBz0AAKS9AMDVPADAST0AQIo8AAA/vQCA77wAAAS8AEAzPQAAwLsAYHc9AGBjvQBAcT0AAHg7AIB+vQBgEr0AgFy9ACAtPQBApz0AADW8AKBKvQBgUr0AAGs8AACjOwAA+DsAQBU9ACB/PQCgNL0AAAy7ACAivQBgO70AgJC8AAAFvQCAOz0AIPa9ACA2PQAANjwAQCq9AGApvQAgh70AgGi8AABjvQBALD0AgAs8AOBCPQAgF70AAGs8AAAiOwCgnz0AAFA8AEB1PQDgA70AQFE9AID3vACAarwAYNA9AAClOwDwgj0AgCE8AKBAPQAAOrsAALW7AADdPAAAc7wAIDw9AEDNvABAi7wAAG08AAC5OwCAAr0AQP48AADAPADAiDwAEIE9AOBOvQBQh70AAHA9AAA0vQAA5DwAAMQ6APDGPQAgET0AwK48AMAsPQAAk7sAAEU8AKBdvQAAND0AYFy9AAAZPACwmj0AAOA6AIALPADgJL0AQOy8ACBsvQCAcbwAAPa7AAAtPAAAcjwAYFI9AADQvADAobwAgAc8AEDqPACAV7wAwOI8AECCvQBQjL0AAJM8AIBKPADAjT0AwM28AEBVPQAA/TwAgAa8AADQOQCgqb0AYG89AEBLvQBACj0AwHI9ACA4vQDwkr0AACY8AKAqPQBAmjwAoBM9AEBIPQAALjsA4EI9AAAYOwDAjrwAYDM9AEDLvABggL0AwB89AMA+PQCAwDwA4E89AABuOwBAm7wAAJC7AIA3vAAA3rsAAHg9AEDrPAAAJj0A4Co9AAATPABgsr0AACE9AGCPvQBAYb0AgLI8AEDHvABAuDwAgDK9AEBHvQAAljwAoPy9AADkPAAAQLsAQKU8AADxvACAOr0AgJY8AJCQPQAA4TwAELY9AACZuwCAUTwAAB68AAC3OwAAJbwA4Bw9AAByvACwpz0AANU8AIAnvADA4rwAAC68ACDEvQAAX7wAwEi9AABgOwDAwTwAIBW9AMC9vACAJTwA8Pi9AEBJPQBApTwAwPw8AADgOwAAJDwAYA49AAAlPQBgGj0AAIc8AMDZPACgHr0A4Ga9ANCcvQCAYLwAkIY9AMD1PACgkz0AQPW8AMAVPQDAEz0AgF49AEAIPQBApLwA8Ie9AABLPACAWTwAAHC6AICNvQAANTwAADG8AEBcvQAArDsAYAo9AIBQPABAybwAwGI9AIAdPQBg7z0AQEW9AECkPAAASLsAAOu8AABnvAAA+7wA0KW9ABCWvQDgMD0A8Kk9AABWuwCgZT0A0NA9ALCnvQBAL70AAMi7AEDcvADgGb0AAEs8AIDPPACAIL0AgOu8AIAUPADAL70AwJO8AFgBPgCgVj0AAK07AACkugAA6zsAYBK9AIDyPQDA0LwAIBM9AACDvAAArLwAABa9APCoPQBAEz0AYFg9AADwOQBACL0AgNQ8AJDWvQAA9TsAkIG9AGAWPQCABbwAAHi6AACgOQDgWL0AoB69AACRvQAAQrwAAJC6AIBcPACAtrwAAN27AAC8vACAMTwAgNU8AOACvQAACDsAAKe8ACApPQCAujwAoBe9ACC7vQBgNb0AgMU8ABCqPQAAZrsAUIi9AIA6vADgCT0AANM8AOBdvQCgT70AgNY8AADfOwAADjsAgIW8AAAQvADgY70AQFE9AAB8PABAYj0AENu9ALCGPQCAY7wAAA67AADVvADAzjwAoH69AED4vACAJTwAgGe9AMCDPACgUj0AgPY8AAA3PQDAjjwAgAe9AGBKvQAwqj0AgHU8AIAPvADgQr0AAIU8AABYvABAWj0AAGo9AMCFPQAgO70AgN28AMBKPQAAtbwAUMA9ACAkvQDA+zwAAHg6AACAOwAgUr0AAHK8AACYugAAfbwAgAY9AIAmvACwj70AAAI7AAADPAAA2DwAoGM9AAA4uwAArLoAAC67AADMOwCAMjwAQKU8AAC5uwCA9zwAwOg8AIDSvAAA3rw=","chunkHash":"7811dad809ab8a96f08caf56f45f943a9f81d3701b9348f60fcbe984cea099ed"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef create_mesh_from_mask(mask_volume, threshold=0.5, voxel_size=(1.0, 1.0, 1.0), \n                         smooth_iterations=10, decimate_target=5000):\n    #...\n            if hasattr(trimesh.simplify, 'simplify_quadratic_decimation'):\n                decimated_mesh = trimesh.simplify.simplify_quadratic_decimation(\n                    smoothed_mesh, decimate_target)\n            # Otherwise try pymeshlab if available\n            else:\n                try:\n                    import pymeshlab\n                    # Create a new MeshSet\n                    ms = pymeshlab.MeshSet()\n                    # Convert trimesh to pymeshlab format\n                    mesh_data = pymeshlab.Mesh(smoothed_mesh.vertices, smoothed_mesh.faces)\n                    # Add to the MeshSet\n                    ms.add_mesh(mesh_data)\n                    # Simplify the mesh\n                    ms.meshing_decimation_quadric_edge_collapse(targetfacenum=decimate_target)\n                    # Get the mesh data back\n                    decimated_vertices = ms.current_mesh().vertex_matrix()\n                    decimated_faces = ms.current_mesh().face_matrix()\n                    #...\n```","range":{"startLineNumber":52,"startColumn":0,"endLineNumber":70,"endColumn":0},"embedding":"AMDivADAcj0AALs7AAA1vACAFL0AACQ8AIDPPADA0j0AwLu8AGCCPQCAMTwAAJw6AEACPQAASLwAAB67AJCPPQBAx7wAAPg6AAA1vAAA+bsAgIi8APDIPQBATz0AwBy9AKCovQCA0TwAYD89AKA8vQAA1LwAgJs8AAAFvQDA3LwAYK+9ACATvQDgR70AgLM8AIAMvQBA5TwAgAq9AAC9PADQrD0A4E69AIBWvAAAGj0AwKM8AIDQvACAsDwAoFy9AABgOwBAp7wA4Gu9AIBnPQBAvbwAIGa9AABUvACgNL0AQN68AMBHvQAA8DoAwLU8AIBUPQAgEr0AgI28AADCOwCgcz0A4IQ9AICXvAAAx7wAAAS8AECHvQCQh70AAJy7ACBEvQBAn7wAwNu8AACgvABA1bwA8Lc9AEDRvABgBL0AQEe9AMDevABAMT0AAOC5AGAsvgDgb70AMLa9AAA9PADgmr0AkM+9AACCvQAASbwAYAi9AGCfPQCAQT0A4AC9AAB4PACASb0AIFY9AAA0uwAAQLoAwJk9AMCNPACA9TwAgLI8AAD4uwBgXz0AQKa8AIA7PADwtz0AAE09AIB1vQCgTT0AgBO9AECiPAAA4bsAgEc8AADzOwCAAb4AYBc9AGBVvQBACL0AwNM8AIDLvADwgz0AALi7AKCCPQBgjL0AoCS9AIAfPADAkT0AgNu8AADQPQCAWb0AACK7AECovAAAHzwAMJM9AIAKPQCAojwA8Iu9AEC0PACwlT0AAKY8AECRvADADL0AACg7ACAnPQAAAr0AoAo9AGBUvQDgiD0AAGA8AMAmvQAAXr0AAF29AID4PADgpj0AAHG8AAAxvQCgEr0AgBE9AAALPQAALLwA4DQ9AKBtPQCAOL0AAIC7AAA8vQBgN70AAJS7AEAqvQAADj0AcPm9AIDKPAAAQTwAQDS9AEDkvABgrr0AAMO7AGBfvQAAbT0AAJw6AEDuPADA37wAAJy6AICOPADgpz0AAA47AGBZPQBAwLwAQBQ9AEDtvACAAjwAsPQ9AABEPADwgj0AgKg8AMA3PQAAWjsAAG68AABVPAAApbsAQLY8AAADvACAmLwAAJA7AECEPACABb0AwFY9AIA7PACAbTwAwG89AEAuvQBgWr0AkJg9AMAwvQCAIjwAAAS7AIDjPQAA1DwAYCA9AEBJPQAAebwAgDI8AAA9vQDAEj0AIAS9AIBvPADAgT0AAKG7AADgOQCAE70AAMq8AECIvQCAvrwAgBw8AICUPAAAgLgAIF09AECDvAAAU7wAAFi6AEDGPAAAFrsAwNo8AGBjvQDgg70AAAC5AABIPACQpj0AwLG8AMAKPQDAvTwAgAy8AACwOgAQqb0AAHI9ADCIvQCAvjwA4Fk9ACAjvQBAVr0AgFU8AAAwPQAAMTwAAPg7AGAUPQAAgTsAAB89AADauwAACL0AwGE9AOBEvQDwj70AAHA8AKA3PQBgWT0AIEg9AIDrPADgM70AABg6AEC1vAAAurwAkIY9ACA2PQAgRz0AwBo9AIA9vADw1r0AQMo8AFCKvQAAZL0AANA7AMClvADAmDwAIEC9AEAuvQAAbTwAQLy9AGAkPQAA8jwAALO7AEA+vQBgQL0AADw9AOBlPQBAgTwAwLM9AACEOgAAFLsAwMy8AMCrPADAlrwAgME8AAAIOgBwlz0AQJ08AIBCvADATb0AAPw7AKC3vQAAGDoAoD29AABFPACA2zwAsK+9AGAvvQCAGjwAEP29AOBwPQCATzwAgHk8AACQOQAAYzwAAP08AKAdPQAgJj0AAPw6AEDePADgNb0AwEm9AACnvQDAyrwA4G89AECSPAAgHj0AoCC9AKBGPQDgcD0AIA49AADkOwCAkrwAUI29AAAVPAAAxDwAAJy7AKC2vQAAcjwAAFA6AABBvQAAyDsA4Bg9AEDdPABgG70AAJE9AAAAPQDQ5z0AoFS9AICSPAAAkDkAIAm9AAAoOwDAorwAIKK9AECGvQBgFT0AMKo9AADQuwBgXD0A8OU9ALChvQBA07wAAOu7AMDJvABACb0AAGc8AOAKPQAgVr0AgDC8AACzPABgEb0AAFo7AODbPQDgYj0AAOg6AAA7PACAcjwAQPm8ADD+PQAARLwAQBE9AEDPvAAAvrwAQLS8AHCMPQAAGT0AQK08AIBoPACA6LwAAPo8AICbvQDAozwA4Fi9AGA7PQAAbjsAAPy6AAAwOwCALr0AIDG9AICIvQAAVrwAADS7AIA9PAAAVLsAAGA5AMDMvAAA0TsAgNs8AOBZvQDAibwAAIM7AGChPQAAaLsAALO8AIB4vQCgD70AoBA9APCPPQAA0LsAQFm9AMABvQBgMT0AwL88AMBnvQDgP70AQL88AIANPAAA3zsAAIC7AAB0PAAAar0AIFU9AIDyPACAQT0AcPe9ANCNPQAAjbwAgFg8AEDkvABAnzwAsLC9AIDBvAAASLoAoF+9AIBWPAAgSD0AgFw8AAASPABA+TwAAKC8AOBQvQCgwz0AIAM9AIALvACA3rwAAHs8AIB1vAAAJz0AYGY9AMBMPQBAuLwAAOC8AKCBPQCA17wAIME9AGAxvQAA5zwAAJQ6AMD5vABgAb0AAM67AACmOwDAiLwAYGE9AIAevQDgW70AAMC5AECZPAAAcjwAwE89AACFvAAAfrwAALU7AICTPABA4TwAgCY8AECKvACA4DwAQLU8AEDevAAA/rw=","chunkHash":"a81e9332ce01bb63f87dbda98d0bca3042d024940eebe1cb3540331b453854fc"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef create_mesh_from_mask(mask_volume, threshold=0.5, voxel_size=(1.0, 1.0, 1.0), \n                         smooth_iterations=10, decimate_target=5000):\n    #...\n                    # Create a new trimesh from the decimated data\n                    decimated_mesh = trimesh.Trimesh(vertices=decimated_vertices, \n                                                     faces=decimated_faces)\n                except ImportError:\n                    print(f\"Warning: Neither pymeshlab nor trimesh.simplify available. Skipping decimation.\")\n                    decimated_mesh = smoothed_mesh\n        except Exception as e:\n            print(f\"Warning: Decimation failed: {e}. Using smoothed mesh instead.\")\n            decimated_mesh = smoothed_mesh\n    else:\n        decimated_mesh = smoothed_mesh\n    \n    # Make sure the mesh is watertight and has correct face winding\n    try:\n        # Fill holes\n        decimated_mesh.fill_holes()\n        # Fix face winding and normals\n        decimated_mesh.fix_normals()\n    except Exception as e:\n        print(f\"Warning: Mesh repair operations failed: {e}\")\n    #...\n```","range":{"startLineNumber":70,"startColumn":0,"endLineNumber":90,"endColumn":0},"embedding":"AABovACApj0AQKc8AABsvAAApbwAwJY8AIB9PABguz0AwMe8AGCkPQAAGDoAALY7AMCOPAAAzbsAAEq7AHCUPQCAE70AANO7AAA1vAAA+LoAAIS6ALCsPQBgJj0AgDG9ABCSvQCAyzwAAFc9AMBAvQAAbLwAwN48AACxvADA0rwAwL29AAD6vAAgWL0AAF88AECvvABAvzwAgM+8AAC0OwCwoT0AwGG9AADkOwBAXz0AQKk8AAAvvABAxDwAAJ28AAA+OwDAsLwAAFy9ANChPQDAxLwAUI29AAAzvAAAUr0AQLi8ACBQvQAAMLwAgAo8ANCIPQAAS7wAAAG9AABlvAAwhj0AQDI9AADRvADA4bwAgDC8AGBfvQBgUr0AACC6AADnvADgA70AoBe9AECwvADA3LwA4JM9AABevACApLwAQDe9AACAOgAAtTwAAIs7ADgwvgAgi70AoLG9AAAyOwBgcL0AENW9AKBqvQAADrwAQDq9AGCPPQDgMj0AQB+9AAClPABAGr0AYHI9AACnuwCAAbwAoKc9AAD+OwCAJjwAgOw8AMDfvABANT0AAIG8AAAYPACgvz0A0Jc9AMApvQAAEz0AAAK9AEC4PAAAi7wAgBc8AACqOwDwB74AYAE9AKBqvQCACL0AwPc8AAAJvQCgCT0AAOE7AFCMPQAgmL0AwDW9AACIOwAQiz0AAIo7AMDKPQBATL0AAIu7AABMvAAAw7sAII09AEAsPQBgID0AAH+9AIACPQDQmD0AgEE8AMDMvABA5LwAAFI8AIA/PQDAvLwAQPo8AMBrvQAgWT0AAPM7AGCEvQAgLb0AIEe9AMAwPQAgrj0AAKy7AAD1vACAPL0AQDo9AABUPAAAw7sA4Cg9ACBAPQCAD70AgFi8ACAKvQDgKr0AAPC7AKAgvQAAPD0AIPK9AMD3PACAWDwAYAa9AOAivQDgk70AAMu7AMBqvQCAPz0AALy7AED6PAAgOr0AgEm8AADSPACgpj0AgIY8AOCRPQBgMb0AgO88AKAjvQAAnzsAQMY9AIBvPACQiT0AAJY7AABqPQAAUjwAQKi8AACnOwAABLsAoCM9AACAvAAAmLoAAAA5AAAGPABgIr0AQGE9AABgPADA5zwAkJU9AMAhvQDAdL0AYHQ9AEDavABAgzwAAAC6ANC7PQAA4DwAQB49AIBTPQCAVLwAAGA5ALCGvQDAbD0A4GC9AABuOwAgoj0AAGw7AAAQuwBgIb0AgNm8AOByvQCgCr0AwMU8AADMPAAA6zsAoGM9AIBavAAAdLsAAB67AECsPAAAULwAQOE8AMBjvQAwkr0AgDA8AACfuwAglz0AQMW8AKBOPQAAhTwAwJi8AAA0PABwrb0AoGA9AGBpvQAANLsAQD09AGAgvQAAW70AQJI8AEA5PQAANDsAQNY8AIDlPAAAFrsAQM88AADfuwCA1bwAAPY8AKAMvQDgMb0AwNw8AEBCPQDARD0A4EI9AED3PAAA87wAAKu7AEAEvQDArLwAAGI9AIBKPQCgDD0AQMo8AABYugBA3b0AgKk8AFCdvQDgY70AwKU8AKADvQDA2TwAQFm9ACAZvQAAiTsAUO69AADUPACAhzwAAPO7AKBAvQCAJL0AABE9ACBwPQCApzwAQLs9AAB4PAAAWLoAAJa7AACRPACAjbwAQL48AACJOwBQ1T0AAMQ7AIAgPAAgWr0AAEA5AFCpvQAAWLsAAI69AABhPACA4DwA4IO9AGAYvQAA3zsAUO69AOAqPQBArDwAAOI8AIBPvAAAvTsAgD89AID6PACAQD0AQLc8ACAWPQCAPL0AgEq9AAC2vQDArrwAkIk9AICWPADAaT0AQAe9AMA3PQDgTj0A4AM9AAAxPABAzrwAkKG9AAA7PACgGj0AAD28ACCQvQDAqjwAACi6AKBdvQAAKLsAwII8AMCvPAAAIr0AcIU9AMBmPQCA4T0A4Au9AMD0PAAAFTwAAN68AAAIOgAAaLwAcKC9AOBJvQBgPj0A4MM9AAAKvADAcj0AMNc9AACWvQDAjrwAAHo7AEDAvACA/rwAAJk7AMA/PQAgMb0AgIy8AECTPAAgHr0AAK47AMDYPQBgWz0AgIY8AAA0OwAAJDsAwM+8AFDuPQAASbwAQCU9AOAOvQCADbwAAMC8ALCrPQAgJj0AwAg9AAAZPACAlrwAAAA9AKCovQAA2DsAAJa9AKAlPQAAsLsAAMC5AAAvvADANL0AYE69AIB4vQAAYrwAAMk7AABDPAAAWLwAQJO8AMAPvQAA07sAQAc9ALCAvQBAw7wAAD47AICmPQAAnbsAgNq8AICbvQAAWr0AQKY8ALCrPQCArrwAEIC9AAADvQBAST0A4CE9AKAkvQCgTr0AgOU8AIABPAAAkLkAAJU7AACgOgCATb0AwHY9AMCSPABwiT0AINm9AECjPQBAkLwAgH88AMANvQDA6DwAkKC9AKAwvQAABzwAoJm9AACEPABgMz0AgNw8AEDHPAAgAT0AAOy7AMBevQCwuz0AwPc8AAAKvADAx7wAALa7AECjvAAgCD0AQGQ9AAAwPQDAm7wAgIy8ACA3PQAgBr0AML49AIAqvQDAvDwAgJa8AIBkvABgJ70AAE28AACIuwCAd7wAQLQ8AMDSvADgW70AANw7AIBEPABAkDwAAEI9AAArvAAAtbsAgIy8AIB3PAAA9TwAgC28AIAJvAAAuTwAAMo8AIACvQBA4Lw=","chunkHash":"8b57d3d5c714c499fa07d90bbe836a8626fba4c82897063272e8705c04669c96"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef create_mesh_from_mask(mask_volume, threshold=0.5, voxel_size=(1.0, 1.0, 1.0), \n                         smooth_iterations=10, decimate_target=5000):\n    #...\n    print(f\"Mesh contains {len(decimated_mesh.vertices)} vertices and {len(decimated_mesh.faces)} faces\")\n    return decimated_mesh\n#...\n```","range":{"startLineNumber":91,"startColumn":0,"endLineNumber":92,"endColumn":25},"embedding":"AMDivADAfj0AgGw8AMDxvACgVb0AAJO8AACkOgDwxz0AAF+8AHCgPQAAtzwAAM67AACHPAAgOr0AABC6AFC9PQCgG70AQCo9AABoOgAgCb0AgGy8AICfPQAgpj0AgC+8ACB7vQBAMj0A4Fc9AAAdvQAAuLsAwKM8AEDFvACA+rwAEIC9AGAPvQAgPL0AgCS8AMDdvABA3DwAYBS9AIBEPACgvT0AQDO9AICJPAAgLj0AADw8AACzuwBA0jwA4Gm9AADYOgAAyrwAEIC9AECNPQBAkLwAsIK9AIAtPAAAUbwAAPm8AGBpvQAAc7wAgBE9AACAPQBgML0AAPG8AAAiPAAA+zwAoCI9AIAyvAAgXL0AgB88ALCvvQCghr0AgE48AMAwvQBACr0AAAq8AMBDvQAA/TsAUI49AEAbvQAAQrwAEJO9AIA+PADAGT0AgNS8AEgSvgCw3b0AYHu9AAD2uwAgr70AkK+9ABCRvQAAYLsAQMS8AGAoPQCgET0AAH28AAAnPAAAab0AQCQ9AADuvAAAOLwA0Jk9AEDoPACgAT0AwJA8AABguQCAjz0AgCe9AADMuwDQ2T0AYDI9AIBrvQCgTD0AAEK9AECSPAAAG7wAABY8AACAOQCA1r0AABE9AGBXvQAA67wAgGk8AEAMvQCAkjwAAKQ6AKBxPQBAZ70AQKK8AAAvPAAgLT0AgAG9AFC9PQBQgL0AgJy8AABOvQCACzwAoJ89AMCFPQAgWD0A0LO9AABSOwDgkz0AAKc7AOAWvQDgML0AwIe8AIA8PQAAILkAwOs8AKBYvQCAfj0AAEy7AOA0vQBgSb0AYCe9AKA5PQDQlD0AgI+8AIAOvQAgC70AAJ47AOA9PQBADr0AANc8AIB0PQAgXb0AAJs7AMCyvADA2bwAgJQ8AGAIvQCgWz0A4Ai+AICgPADAzzwAAJu8AACDvADgWL0AANy6AIAVvQAAUT0AQNQ8AIBAPQDAIL0AAKA8AABQPADQqz0AAPi6AIAXPQAAt7wAwLw8AIC0vACABjwA8N89AIAAvABAST0AAKo7AAALPQAAbLsAIAa9AAA1PQAA6bsAANc7AADlOwAA0LkAgMm8AADZPAAgSb0AoEs9AADsOgAA7DwAoG49AGCGvQCgbL0A0KQ9AAAUuwAAljwAAPS7ACCLPQCAQjwAANU8AOBPPQDA6LwAgGo8AIAcvQDgED0AgGu9AIB+PACQoD0AgFS8AIAevAAgIL0AgMW8AOBnvQBAx7wAgGc8AKA3PQAAgrsAMIM9AIAEvACAVbwAAFY7AABYPABA67wAACQ9AOApvQCAxbwAAEg7AEDcPADQrz0AAHI7ACBkPQCAUzwAAHI7AABguQCwvL0AIGM9AEDQvABgCj0AoC09AOAKvQAgur0AAAY8AKAuPQAgLT0AQII8AFCDPQAA9bwAQAI9AACRuwAAmrwAcKQ9AOANvQCglL0AwA49ACA2PQAgmz0A4BI9AAD/OwAAGLoAAPI7AMDbvAAA1jsAIEU9AAAXPQCAVTwAAH08AMCqvACgwr0AACc9ANCdvQCAT70AgMk8AGAFvQBAPD0AANa8AAAGvQCAIzwAYK69AKA6PQAAMjsAgCw8AIBCvQBwpL0AQNI8AAArPQCgNT0AIKY9AADZOwAAs7sAAAA5AED6PADAwDwAAFw8AAC4uwAgdj0AQOU8AECQvADALb0AAMi7AGDHvQAAFjsAwGO9AACkvADA7DwAIGa9AADuuwAAgLkAwOq9AEBdPQBgND0AQLM8AIB6PAAAMjwAwKQ8AIAUPQDgRD0AAKE8AMCqPACASL0AwG69AODKvQBgJ70A4H49AIAFPABgSj0AgB68AEA5PQBAAj0AwA49ACADPQCAtrwAkKK9AIBYPABAtjwAwNU8AICYvQDApDwAALe8AABCvQAA3LoAADs9AIByPACAHb0AABA9AAAuPABQ2T0AAC29AADmPAAAAAAAwPq8AEDmvADAtLwAAJ29ABCavQCAAD0AwIs9AADmuwBAGj0AIM09AKCBvQDA37wAgI+8AGARvQBA5bwAAKm7AACiPAAwiL0AAC+8AIBMPAAgKL0AgAw8AHDbPQDQiT0AQL48AAAjPQAAiLwAYBu9AHDkPQAAP7wAgPs8AECMvACAkTwAgAy9AIBdPQBgcD0AwCg9AADLOwCAR7wAgKY8AEDSvQAAEDoAQH69AIDgPACAhbwAQNa8AIAzPACgRL0AoGi9AMCRvQAAMDoAQKy8AAB7PACAYrwAAOg6AECQvAAA1DwAQJ88AKAJvQBgKr0AAOG8AACQPQBAuTwAAD68AHDIvQAA+LsAwCM9ADDGPQAAjbwAIGW9AMArvQCAPD0AwIk8AMCEvQCgEr0AQAM9AADeOwAARTwAgBe8AECnPADgDL0AAA89AICfvAAgGz0AQNu9APCLPQCAvLwAAPA6AECGvAAAjDoA8Kq9ACAovQAArLsAIAW9AACAugAgaD0AAKo8AIC7PAAAFjwAgOO8AEAMvQCAsz0A4Gk9AEDZPABAGr0AADQ7AADAuAAAHjwAIJg9ACBvPQDAF70AACq9AEB4PQAA+rsAAP49ACAWvQAAzzsAABA6AACmvABA3bwAAG28AADGOwCATbwAgNE8AACTOwCgo70AAIU8AIDTPAAAw7wAYD09AMCXvADAAj0AAC+8ACASPQAAuzsAQAg9AECBvABAAz0AAMA7AMCJvAAAxjs=","chunkHash":"1ec8aacd92f202e716d578595aa51a4b1a93131f01e74a01af8a62cd14810bb5"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef sample_points_from_mesh(mesh, n_points=1024, include_normals=True):\n    \"\"\"\n    Sample a point cloud from a mesh surface with even distribution.\n    \n    Args:\n        mesh (trimesh.Trimesh): Input mesh\n        n_points (int): Number of points to sample\n        include_normals (bool): Whether to include normals in the output\n        \n    Returns:\n        numpy.ndarray: Point cloud with shape (n_points, 3) or (n_points, 6) with normals\n    \"\"\"\n    try:\n        # Sample points evenly across the surface using better sampling method\n        points, face_indices = mesh.sample(n_points, return_index=True)\n        \n        if include_normals:\n            # Get normals from the faces\n            normals = mesh.face_normals[face_indices]\n            point_cloud = np.hstack([points, normals]).astype(np.float32)\n        else:\n            point_cloud = points.astype(np.float32)\n            \n        # Ensure we have exactly n_points\n        if len(points) < n_points:\n            # If we didn't get enough points, duplicate some randomly\n            #...\n```","range":{"startLineNumber":95,"startColumn":0,"endLineNumber":120,"endColumn":0},"embedding":"AADvuwCAPbwAUPE9AABoOgBgUz0AgK69AIAMPAAAlDwAgGk8AMA0PQDgR70AAAy8AMDmPAAAMD0AADI7AADPOwBAMr0AgK+8AACMuwAArzsAAIk8ADCSPQBQnz0AgPO8ACAavQBgoD0AYBM9AAAevQAgED0A4IY9AIAtvADA4LwAMIG9AECYvAAAkDkAwHI9AGAePQCABj0AgBG9AOASPQBAtTwAII+9AED1PACAfzwAgLU8AEDUvQAAcDoAADC9AABLPADQtD0AoBS9AIBVPQAAijsAIJ29AADPOwDgRL0AAHO8AABQOwBAF70AAFw8AIDMPQAAljsAAC67AKArPQDAnz0AADO8AMDaPAAgh70AAPW7AGACPQAAYDwAQE49AIAcvQCgLb0AQIk8AAAtvAAAUb0AoEu9AGA4vQAAoDkAgAU8AAC2uwAAcjsAAFu8AJCDvQCQ1r0AwHC9AKARvQCgZb0AgBc8AIDPPAAA7LoAgFm9AIBnPACA0TwAgN68AAC5OwBADL0AoGU9AEDdPAAAFjsAwBE9AAAjPABgbT0AACM9AIAOvACgFz0AAFq7AEByvQDgtT0AAAk9AAALPACAFjwAwGk9AABAvABgQj0AYIo9ACA0PQCAKL0AANU8APCDvQBA67wAAL88AEDjvADwg70AIFe9AAAFPQCA8rwAAGY7AKCGPQAgRz0A4Cy9AAC9PAAA3rsAsJK9AIC/PACA8zwAwGy9AMB6PQCANb0AgG48AJC5PQBgID0AgAk8AABkPABA6bwAgK69AMDDPAAAWDwAENY9AKBDvQCAojwAwL+8AADAuwBAET0A4Gm9AIB3PAAAyDsAYFK9AECsvAAAALsAkJW9AECRvAAANbwAAD49AKAdvQAQhb0AQP+8AGBUvQCAfL0AIAu9AIC/vQCghT0AgE28ADC5PQAAADgAAAC5AICTvQAA/LwAAJy7AJDbvQCA5jwAAO08AEB4vQAgYz0AAM07AMCGvADgJD0AwGy9ABDLPQCgLb0AIEg9AMCUvQAA2jwAQM28ANCqvQDwoT0AIEW9AEAEPQAAD70AIJm9AABuvACAezwAoGE9AEDevACApDwAwCU9AACYvABAs70AAOQ6AMAEvQCAVj0AgCQ8AACCuwBQ070AAAa8AAAjvAAAKT0AwOO8AIAGPgBAo7wAALM8AFCoPQDguj0AkKI9AIDlPAAAoD0AwGm9AMDZPACAGz0AQKu8ACABPQAA1DwAAC29AAAFvACgYz0AYCM9AACZuwCgNL0AABk8AOBkvQCANrwAgCA9AIDXPABAoD0AIB69AMAQvQAA8TsAwL88AIBevQAAkDwAAAk8AAAIPABA87wAwOi8AGBtvQCgC70A4B49AIBcPAAAQLkAgKm8AADmuwBwwL0AAIA4AAAqOwBAPL0AAB68AIAQPABAqLwAADa9AMANvQDA0bwAgCa8AMAqvQAA67sA4Bo9AICbvQCAAbwAwLo8AGBFvQBAAr0AoLe9AIAfPQBA0bwA4GY9AIBovQCAJT0AgDC8AODMPQAA1b0AAKS7AIDNvAAA4b0AABU8AEClvADgGr0AIBm9AAAaOwDAjjwAAP29AABcvABAg70AEJ89ACASPQAAybsAwHu9AAA0uwAACrsAoGo9AADnPAAA3DwAgBo8AIA0vQBA+TwAAMS8AAC6OwCwyT0AwIo9AADKPADADj0AQCG9AEA5vQAAtjwAAGQ7AGBMvQBADz0AANG8AAC7vQAAmbwAgJO9AIBpPAAgmL0AgFY8AIA2PAAAIDkAQOy8ALCsPQAAPb0AgKu8AEDuPAAAI70AAGC6AIBpvACAA7wAwOw8AFCSPQAAILkAULA9AHCRPQAAhDoAALi6AAAiOwCAZDwAYGE9AACAOgAA3LwAgIK9AIA+vQBA5LwAAOM7AGCqvQCABTwAgLs8AAB6PABAIj0AIHg9AAB9vACwgz0AwKy8AMDPvADA0zwAkPU9AADBPAAARj0AICO9AKAvvQAA3LoAAHg7AIAUPAAAHzwAABY7AEBPvQCAwzwAQNk8AIDEPABgHT0AYCM9AAAJPABAar0AgJs8AIAKvADgl70AAMg7AKB1PQCA9TwAIBi9AMCqvAAAgDgAABe8AAC7uwDgsr0AAD28AAAEvQBgbL0AACW8AKAEPQCADj0AIFE9AAC8ugAgGb0AwPi8AGCPvQBAxDwAwMu9AIAQvQDAFr0AQOW8AAA0uwDQq70AgLw8AACZuwDAk7wAAIu7AIAnvAAAMb0AAA48AABaPADAaz0A4Ac9AACRPADAtDwAABU8AICXPADgCD0AoJQ9AOBkvQAAlrsAALQ6AAAtPQAA4DsAYGe9AIAyvQAA/LsA4E09AIBXPABgOL0AAAC6AACAvABA/zwAwKU8AABcOwAAbrwAgG89AICwvAAgeD0AAKW8AMDUPAAA2TwAAOM8AAAtvABA9TwAwP48AIBBvACQvD0AAEC7AECkPQBgJz0AwFE9AIBmPACQlT0AQMO8AKBBvQCgzD0AwJO8AADwOgAgd70AoIo9AIB6PQAAQz0AQOs8AIAKPQBgAL0AgGi8AACcPQCAdbwAwJc8AOAuPQAgUz0AQLG8AACgOQCg0b0AAPs7ACAYPQAA07sAgKk8AMBovQCAqzwAAO48AMA1vQAAk7sAwJq8AABiuwAAqDoAAKy6AEBcvQAA2TsAgDe8AECRvACANL0AgBY8AOAZvQBA4jw=","chunkHash":"62a8d6a413cf46343f55ed3a59d8da4f6c1a5b5072061d2ede24b25a4f5f30e0"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef sample_points_from_mesh(mesh, n_points=1024, include_normals=True):\n    #...\n            print(f\"only got {len(points)}/{n_points} samples!\")\n            extra_needed = n_points - len(points)\n            if len(points) > 0:  # Only if we have at least some points\n                # Duplicate some points randomly\n                indices = np.random.choice(len(points), extra_needed, replace=True)\n                extra_points = point_cloud[indices]\n                point_cloud = np.vstack([point_cloud, extra_points])\n            \n        return point_cloud\n    except Exception as e:\n        print(f\"Warning: Point sampling failed: {e}. Falling back to random sampling.\")\n        # Fallback to random vertices with their vertex normals\n        indices = np.random.choice(\n            len(mesh.vertices), min(n_points, len(mesh.vertices)), replace=len(mesh.vertices) < n_points)\n        points = mesh.vertices[indices]\n        \n        if include_normals:\n            if mesh.vertex_normals is not None and len(mesh.vertex_normals) > 0:\n                normals = mesh.vertex_normals[indices]\n            else:\n                #...\n```","range":{"startLineNumber":120,"startColumn":0,"endLineNumber":140,"endColumn":0},"embedding":"AIAYvQCAADwA8M49ACBQvQAAxLoAEMO9AACIvACAQLwAANA7AEAlPQAAkrwAwMW8AACUOgCAEDwAwNa8AMAgPQDgEb0AgH08AACivAAAGjwAAEo9AECyPQAQrD0AwG+9AACUvACAHD0AAOc7AEAvvQCgIj0AgAw8AEDevADAF70AgFm9AMCEPAAAvbwAIA09ACAdPQAAd7wAADu9AICyPAAANLwAwEy9AIAmvAAAgLoAQEc9ALDBvQCAebwA4Ha9AGAqPQDAmT0AgKC8APCfPQAASrwAoKC9AABuvAAAq7wAgKq8AOAMvQBwjL0AgM28AECXPQAAErwAANm8AGBaPQDgXj0AAAO8AAC2uwAwrL0AgHi8AGAyPQCAJrwAYEo9AAD9vAAwtL0AQIA8AAAYugDgNr0AgEE8AFDFvQAAjjsAAKm8AIADvACAArwAgMK8ABCKvQDAu70AwBi9AKAJvQAAW70AAMi7AABQugAAuLoAcI69AACQPAAAZjwAAPw7AADTOwCADLwAAI08AIAOPACA/bwAoBs9AAAQPADAQT0AAEA9AABmPABAuDwAAAE8AABUvQDwoz0AwCA9AADkuwAAoDkAgBY9AAC+OwDAVD0AAGi7ACBnPQBAnrwAQMU8AIA0vQAAmzsAIC09AIBWvACAD70AgCq9AGBiPQAApLsAgFK8AKB0PQAAVz0AgPW8AMBOPQAA2LwAYNK9AIBZvADgIj0AAJ88AKB2PQAAXbwAgGu8AEB8PQAAzDwAAIY7AECuvAAAiTsA8Mu9ADDUPQAgWD0AUNg9AIAgvQDgYD0AgF08AADIvADAgjwAkNG9AMCJPACgTD0AIG69AACVPAAAIDkAkKG9AADAuAAAgrwAABQ7AIA3vQAgN70AAI69AHCJvQCgGL0AgEm8AJC9vQCgUD0AALC7AAB7PQAAF7wAQLY8AHCxvQAAzDoAgPK8AGC6vQDAlzwAQAY9AIBpvAAA8TwAgHO8AACouwBQvD0AYCa9AJCdPQAAYrsAIEM9AABZvQCAIjwAAAA4AFCgvQBApz0AQHS9AAD8OwBA7bwA8I+9AADwOgDA+DwAwMs8AMDhvACAEjwAAP47AEATPQCAkL0AAJo7AMAwvQAwlD0AwKo8AMCdvADAV70A4A49AMCvvABAZj0A4Di9AOC9PQCgHb0AwAk9AJD9PQBwoT0AoJ89AADiOwDAdj0AIAm9AABRPAAwjT0AwNm8AACBvAAAlDsAQJK9AAAguQBAFj0AQPw8AMDsvABQrL0AwFA9ABCGvQBgKr0AgEg8AAAbPQAAUT0AQOa8AKAivQAAHjwAQA49AMD+vAAAGrsAgOQ8AMBNPQBATr0AgOC8AGBTvQBwgr0AoBw9AICYvADA0LwAwJC8AICxPAAA0b0AwMK8AAC8OgCA5rwAgGK8AMBaPQBgE70A4Hu9AEBOvQAAmbsAgCg9AMCRvQCgRL0AAAM9AIAevQAgFz0AIBc9AMDmvACgA70AgD69AGAIPQAAoDsA4GI9ACAEvQBAw7wAgN48AHCePQDg3L0AAA+8AIDFvAAwwb0AwKM8AMCPvAAAA70AAMG8AIA9PACgGT0A4GW9AIC3PAAwhL0AUIM9AECcPACAWrwAwI29AIAJPACAMjwAAE49AED6PACAazwAQKG8AIDkvACgQT0AAMO8AIAyvADguD0AoEk9AIBXPQCAQjwAALi7AEDlvQCgET0AAHG8AJDgvQCAKD0AQF29AGBkvQDAobwAgFm9AMDMPADQq70AwCg9AMDDPACANj0AIAW9AADoPACAETwAgP+8AMDEvADgJr0AgEE8AICtvACAmzwAcJ09AMCYPQAALLsA8N49AGATPQCAGTwAgDo9AIB8vADgTD0AAHU9AEAEPQAAD7wAQPC8ACBovQAAiTsAALy8AICrvQAAmTwA4Co9AIBKvACACLwAIEM9AACgOwBAcj0AsIC9AABBPAAAWDsAUMk9AAAwugCA5zwA4G69ACAnvQDA3TwAAPA8AABqOwDAtDwAAMc8AAATPACAJzwAAPA6AMCbvAAAeDwAgPw8AMCJvABAp70AAK87AADIOgDQmr0AgDg8AIAvPACAHD0AoC+9AICZvADAzrwAgOq8AIASPABgkL0AAKg7AIAEvQCAK70AgDM8AADwPAAAXTwAYAs9AADFvACA7LwAgHI8AGCPvQAA1DwAMOO9AACAOACAULwAwJy8AAA4PACQ8L0AwNA8AABWOwCAGTwAQMq8AMCovAAgLr0AAAw9AADdPAAgTT0AwAM9AABevAAApbsAAO87AAAVvABwgj0AoAY9AMDMvQAAMTwAgKU8AGA3PQCAWrwAYDq9AEC2vQCgG70AQHk9AACkOgBAv7wAgG+8AOB7vQCgij0AAFy8AECPvADAoLwA0IQ9AADRvADgYT0AwNe8AEAjPQDAJD0AQB89AACzOwBAPT0A4GQ9AADBvADgNz0AABS7ALCuPQAAFjwAYH09AEBCPQAAlDwAwMa8AGBDvQCAdj0AAPS7AABnPACgVr0AQAc9AGAyPQBA0DwAIGQ9AGA2PQBAwzwAwFC9ACBzPQBAzDwAALU9AEBbPQCAzjwAACq9AADCuwDwzr0AgP+8AEBZPQAAVrwAgBW8AAAZPAAAhDoAgGI8AABHvQCAD7wAABi6AACAuABAIr0AIFo9AIBEvACATLwAAEa7AABuPACA7LwAgKw8AKBOvQBgVj0=","chunkHash":"8d9eea869c5b03627e7f3e38ddbc61dd6e6d8149d8a692ebe04a00cb4e94f71e"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef sample_points_from_mesh(mesh, n_points=1024, include_normals=True):\n    #...\n                normals = np.zeros_like(points)\n            point_cloud = np.hstack([points, normals]).astype(np.float32)\n        else:\n            point_cloud = points.astype(np.float32)\n        \n        # Ensure we have exactly n_points\n        if len(point_cloud) < n_points:\n            extra_needed = n_points - len(point_cloud)\n            # Duplicate some points randomly if we have at least one point\n            if len(point_cloud) > 0:\n                indices = np.random.choice(len(point_cloud), extra_needed, replace=True)\n                extra_points = point_cloud[indices]\n                point_cloud = np.vstack([point_cloud, extra_points])\n            \n        return point_cloud\n#...\n```","range":{"startLineNumber":140,"startColumn":0,"endLineNumber":154,"endColumn":26},"embedding":"AKAlvQAATbwAcMo9AGBWvQAA3DoAQMe9AABKuwCASrwAAIc8AGBSPQAAPrwAQIm8AAB0PAAAADgAAGW8ACAPPQAAurwAgFw8AAA0vACA0DwAgB89AHCoPQAAkT0AgGy9AKASvQDAXD0AgIs8AMDBvABAAj0AALk8AIDgvAAAIL0AgCu9AMC8PAAACLoAgK48AAAPPQBAlrwA4BK9AOAFPQAAirwAwNy8AABevACAv7wAQFY9AODWvQCAVbwAoBu9AABKPQCAqT0AALO7AFCfPQAACDoAcKi9AIA1vACAqjwAgHC8AIABvQCgpL0AAD+8APCTPQAANLsAwAy9AMB6PQCgRj0AANC6AECXvADgpL0AgKS8AOAcPQAAnDoA4B09AKAmvQBwsb0AIDM9AABGvACAhr0AgFI8AFCxvQAAJTwAQMC8AAAjvACAHLwAAMm8AOCFvQAgnr0AwDC9ACAYvQCAib0AAAA5AAACuwAAbDsA4Ki9AAAOPQCAQjwAAEy8AECaPABAwrwAwIg8AAD4OwAAO7wAIBQ9AECnPACQij0AoBs9AIAzPAAAMjwAAHi7AEBbvQCgtD0AAH09AAAiOwCAGrwAIB49AIBsPAAgZD0AABa8AIA1PQBA67wA4Bw9AABbvQAAobsAoEI9AADLuwAATL0AQIS9AKBfPQCAr7wAABC8AGA4PQAgGz0AQAi9AMBJPQAA6rwAMM69AABougDAHz0AAJ48APCKPQDAqrwAALC6AOBTPQDAEj0AAJs7AOAjvQAAcLoA4MG9AEDYPQCgSz0A4K09AAAcvQAgYT0AwK48AICIvAAA2TsAsMC9AEDePABgUD0AADm9AAA8PAAAqDoAkLW9AMD3vAAAqzwAADg6AKAYvQBgLL0A4FG9AGCHvQAAHr0AQPq8AGDNvQDABD0AALs7AGBQPQCAozwAAGE8AAC+vQAAYLwAwOC8APCTvQCAgTwAAKc8AAAFvQBAuzwAgNa8AAC6uwAA0D0A4Ce9AOC4PQAAgzsAYCw9AKBJvQDAqTwAAP07AKCSvQDglj0AQD69AAD8OgBAGb0AAFW9AAA6OwBgEj0AQBs9AEDRvAAA7zsAAJo7AKA9PQAAhL0AAAS7ACAhvQAQiT0AAM08AEC6vAAALr0AAGE8AEDzvACAPj0AQC+9AIDxPQDgFr0AAAg9AMD+PQCAjj0AoJA9AADkuwAAeD0AoC29AICWPAAAiD0AAMG8AAChvAAAWDwAEI+9AECxvADgWj0AAO48AIARvQDAi70AoGo9ADCFvQCgF70AABS8AEAuPQBgHz0AwA+9AEBGvQAAtzsAICA9AIDLvACAM7wAAOs8AIB3PQAgQ70AAA+9AGAfvQDApL0AACM9AABWuwBgA70AAJK8AMDVPADQvr0AwMm8AACMPACAA70AAPe7AMCbPQDgVL0AsIC9AIDAvAAAmDoAwBw9AECEvQDgb70AoGQ9AKBovQDA4DwAYDk9AMAcvQAgRb0AQI69AIC7PAAAlLoAACg9AICMvADAorwAwCY9AGCJPQCg9b0AALE7AOA3vQBg0r0AgNo8AIARvABACb0AwMW8AADfuwBgNT0AIEe9AIAfvABAbL0AoEw9AAAEuwBgJr0AAHG9AACEOwCAHTwAYJk9AMC0PACAHDwAAJO8AADKvADAYj0AIBy9AAB0OwAQrz0AgIY9AIC6PABAqjwAgGS8ACDUvQAgDD0AAPG8AEC3vQBAND0AoIC9AJCEvQBAwLwA4Fu9AGA4PQCgq70AYCo9AECYPACADj0A4Bi9AMD1PAAAcLoAgJG8AKAwvQCA2rwAABk8AMDkvACAhDwAMMg9AIB2PQCAQjwA0Nc9AMDsPACA0TwAgCA9AACIugAAQT0A4Ik9AMCqPACAhbwAQPO8AICGvQAAGDsAgB28AOCfvQBA1TwAQAQ9AACzOwAAw7wAQDw9AMCYPADwgT0AIJe9AABSPAAAWrsAcMo9AACfOwDAojwA4Hi9AOA5vQBAuTwAgOc8AAA7vAAAcjwAALM8AADvuwCAnzwAANu7AACrvAAAZzwAgMA8AADNvABgVr0AgPk8AAA5vAAgh70AYAc9AICfPACA0TwAEIW9AIA4vAAAyrwAQLO8AACJuwCAtL0AACg6AMCPvABAWb0AACK7AECGPACAUjwAQAc9AKADvQDAr7wAgGU8AMCNvQDA2TwA4OW9AAAAOwAAn7wAYC+9AAA7PAAw6b0AQIo8AAAJPACABzwAAK+8AEAMvQDgEb0AwLg8AEDzPABAVT0AQOY8AMC1vAAABrwAAAi6AAAovACgMD0AgO08AECgvQBAwzwAoA89AIA5PQCAYrwAgEC9AECMvQCAwLwAgEM9AACnuwCAvLwAAOY7AJCNvQAQiz0AAEg7AADgvABAwbwAII49AEC+vACAhT0AAIS8AECZPADgMT0AoBs9AACtuwBgRD0A4Dk9AAAavABAaj0AAOA5APC8PQAAaDsAYCM9AECUPACAozwAACA5AABmvQBwmD0AANw6AADJOwDgNb0A4Dc9AEARPQCA5DwAoCA9AAAnPQBAoDwA4Bu9AEBqPQCA/TwA4M09ACAaPQAAZjwAYCe9AABEvACgxr0AwJe8AGBZPQCAPbwAALC5AAC8ugAAQLsAwI48AIBOvQAA6LsAAI67AAB+OwBA6bwAgCU9AACQuwAAWjsAADK8AADvuwCAnrwAwMI8ACAFvQDggz0=","chunkHash":"bef88623c03f3f7fc50b59a9ca3a2b82285ede414ffc4b832459c92c2e818c0e"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef process_sample_mesh(sample_id, root_dir, output_dir, voxel_size=(1.0, 1.0, 1.0), \n                       smooth_iterations=10, decimate_target=5000, sample_points=1024):\n    \"\"\"\n    Process a single sample: load mask volume, create triangle mesh, sample point cloud, and save.\n    \n    Args:\n        sample_id (str): ID of the sample to process\n        root_dir (str): Root directory containing all samples\n        output_dir (str): Directory to save the mesh and point cloud\n        voxel_size (tuple): Size of each voxel in the output mesh (dz, dy, dx)\n        smooth_iterations (int): Number of iterations for Taubin smoothing\n        decimate_target (int): Target number of faces after decimation\n        sample_points (int): Number of points to sample from the mesh surface\n        \n    Returns:\n        dict: Dictionary with paths to the saved mesh and point cloud files\n    \"\"\"\n    # Format sample ID with leading zeros to match directory structure\n    sample_id_str = str(sample_id).zfill(4)\n    #...\n```","range":{"startLineNumber":158,"startColumn":0,"endLineNumber":175,"endColumn":0},"embedding":"AIBUPQBAmTwAoCU9AICXvADALr0AQD69AADEvAAABrsAQDG9AMDMPAAAsDwAAK+8AAACPABAzL0AELa9ACCXPQCgXb0AkIk9AACmOwBAwTwAYFM9AMBUPQCwpz0AIFg9AABiOwDAJj0AAAi6AACSvACAPzwAYDG9AEAAvQDA4LwAgJu9AGAYvQAgdL0AsLQ9AICTPAAAFDwAQPC8AIAoPQAwsD0AgHa9AAB+PACAY7wAAAc9AGAbvQCAXbwA8Oq9AIAQPADAnLwAIDk9AFC0PQDgF70AgAi9AABiuwAAjbsAgJK8ANCHvQAAm7sAAM+7AGAbPQBgXL0AgDy8AAAUPAAwsT0AAOg7AAAfvACAwrwAgKO8AEBSvQAAMrwAAM07AID8vABQrr0AAIY8AMAavQAgLr0AgI08AHC7vQCgHL0AABa7AECyvAAglT0AAI69AIDLvQBgB70AkLq9AGACvQCAFr0AAHW8AAApvACASzwAAFe9ACACPQBgWj0AQBC9ANCKvQCA9rwAALc8AIBFPQAAPjwAwPI8AMC9PAAAvbsAwPs8AIB2PAAAxz0AAOe7AOBZvQCA4DwAACM9AECWvQDA+DwAAIw6ACAcPQBAEL0AoJc9AMCqPACwrr0AAGW8AMCQvQDAH70AAIq7AIAevADAi7wAYBW9AODYPQDABr0AIA29AMA3PQCAuTwAAO28AGACPQDwuL0AgBM8AAAjvQBgjT0AoDA9AED/PACAjzwAIHG9AADKPABAfz0AgCU8AIByPACAv7wAgJC9AJCzPQAAYDkAoBc9AGACvQCAyzwAwLE8AICXvADgSj0AYEy9AKBFvQBgOD0AYMG9AICoPACAuLwAAGC7AACJPADADb0AAIu7AADMugDAvbwAAEy7AMCsvABASr0AQBQ9ACAcvQBwhj0AMIy9AMAhPQAAEDwAQIG8AICQPAAgc70AAN07ABCuvQBgPz0AgMO8AIDSPABAhbwAAFy7AAB2PABAwD0AwLu8AMB5PQAAGzwAUIM9AGAVvQAA+LoAwJA8AIAfPACAWT0AgFm8AECYPAAA87sAICm9ACAEvQAASTwAAOQ8AAAwvQDA6jwAwL68AECEvAAABTwA4DG9AIDDvACAOTwAQBw9AKACvQBAwr0AAE09AICNvQAAprsAgAO9ALCxPQCA77wAQBU9AMDCPACgYD0AQK88AACXvABAcL0A8Ku9AIAZvACAgTwAAB28AIBRPACgCr0AQCE9AACsuwAACLsAABM8AACVvAAALDsAIAY9AJC0vQBgEr0AAA28AIDAPADgYD0AgKc8AABkuwCAeL0AADI9AADtuwAALz0AALa8AGAQPQAAZr0AwGo9AIAOPACAbr0AAJw9AIAWvQCA3TwAQCw9AADZvADAeb0AYBI9AEDGvADAFz0AQCo9ADDkPQCAfLwAAJ47AECUPABA37wAABY7AOBDvQBwgb0AAJC7AADROwCAAzwAAL47AAAgvQAAoDkAAOK7AMDuPAAAfLsAsKg9AIB4PACgQj0AgNQ8AACkOwBgNb0AAMy6AEAHvQAwub0AQCe9AMCXvACAaDwAAIg6AIBFPAAAsLoAsL69AACeuwAAk7sAACc8AACUOgBAgTwAoDm9AAASPACAIbwA8Ks9AABIOwCAYTwAABY8AAC4ugAAqDsAwBc9AAC3uwBAxTwAkK89AGBUPQAAG7wAAJi6AECivQBAvjwAAN27AIA7PADAMj0AIAa9ABCGvQCAPjwAIBq9AEA4PQBA2rwAAJE8AEAVPQAAIT0AQLQ8AJCnPQAA8DwAANw7ACBJPQAwqr0A4Hu9AJCGvQAAQLwAAPC8AGBMPQDAoz0AgKG8AKAAPQAA2rsAAL47AMAEvQAAILkAQFy9AOByPQDAlzwAADO9AFCCvQCAZb0A4Fu9AOATvQDA/zwAEKg9AIAMPACgCL0AwJE9AMCePACQgj0AIDC9AABDPADwij0AAHA8AABwuwDAB70AwMa9AMAjvQCA9zwAkLs9AAASPABQvz0AEIE9AAAAugDge70AQKA8AADAvADAyDwAAG28AKAVPQAA1bsAgBg8AAAnPABwur0AANU8AODFPQAAGz0AwOU8AMAnPQAgUD0AABo7AIAwvABAnzwAwK08AOA3vQAAo7wAYBW9AGAtPQAA5jwAAO87AOAQPQDg0b0AAHo8AAATvgCABTwAwDS9AEC0PAAA8LoAgF69AAA4OgAgjb0AAOW8ALCFvQCAVjwAAKU7AICTvACA5bwAAH09AAB4PAAA3TwA4Hk9AKBLPQAAJrsA4De9AIBEvACglT0AAIW7AIgOvgAQg70A4Dk9AMCKPAAA/rsAAB88AMDxvAAgGj0AoC49AABzvAAARb0AAM+7ACAPvQBAAL0A0Ii9AAClPAAA1rwAANQ7AOAIPQCASD0AkOa9AKBIPQBAmbwAwNK8AAAzvAAADL0A4Bm9ACAOPQAgZz0AAAA4AIBKPQCAvjwAADM8AIDnPAAAO7wAQJK8AMBevQAAyjsAAFw7AABWvADg9L0AAC48AADRuwDAAz0AQAU9AAC6uwCAS70AEIu9AOCPPQAAXLwAcOo9AKAbvQCAPD0AsIU9AAD0uwCA070AALC7AKBrPQAA+bsAAI+8AIA8PQAgGL0AQC49AGArPQAAhDoAAHs8AGCbPQCA6jwAII89AADgvAAA07sAoA69AEDAvABARj0AgHc8AKBGvQAAXjs=","chunkHash":"07ef8771ff6e122ef4991959f5775ac70780d57cdca0c86e8429ee0971cee7cd"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef process_sample_mesh(sample_id, root_dir, output_dir, voxel_size=(1.0, 1.0, 1.0), \n                       smooth_iterations=10, decimate_target=5000, sample_points=1024):\n    #...\n    # Find the sample directory\n    sample_dir = os.path.join(root_dir, sample_id_str)\n    mask_dir = os.path.join(sample_dir, 'mask')\n    \n    if not os.path.exists(mask_dir):\n        print(f\"Mask directory not found for sample {sample_id}: {mask_dir}\")\n        return None\n    \n    try:\n        # Create output directories\n        mesh_dir = os.path.join(output_dir, \"meshes\")\n        pc_dir = os.path.join(output_dir, \"pointclouds\")\n        os.makedirs(mesh_dir, exist_ok=True)\n        os.makedirs(pc_dir, exist_ok=True)\n        \n        # Load the mask volume\n        mask_volume = load_mask_volume(mask_dir)\n        \n        # Create mesh\n        mesh = create_mesh_from_mask(\n            mask_volume, \n            threshold=0.5, \n            voxel_size=voxel_size,\n            #...\n```","range":{"startLineNumber":176,"startColumn":0,"endLineNumber":199,"endColumn":0},"embedding":"AMC/PABgEz0AAFY9AMCovACge70AwOi8AEDGvAAAeDoAAE28AABNPQAAtDwAgHW8AABSOwDQlr0AcIS9AKCjPQAA8bwA4Cg9AADLvAAANrsAQBk9AOBWPQCAJz0AwMc8AIDtvABA3DwAAAA7AAB2uwBAND0AAKa7AAAnvQCAdLwAILq9AAC4uwCAoL0AwFY9AIBJvAAASrwAAOO7AABcPABwzT0AYI29AIBdPAAAwjwAwPI8AKA6vQCAurwA6AW+AICwPACA17wAANA6AMCiPQAAALwAIIG9AADDuwAA3DsAAC68AFCJvQBA0rwAAJ07AFCNPQCgF70AAA28AICiPADwgj0AgJI8AIBDvAAAMr0AgE+8AACDvQCAvbwAgJo8AAA+vABwpr0AADA7ACApvQDA7LwAQNw8ABDFvQCA5bwAAOe8AEDlPAAwgz0AQI69ANDlvQBAYb0AkKy9AMDZvADggb0AACK9AMDvvACAbTwAoJu9AMDiPABAVz0AgLm8AAAvvQCgeL0AABQ9AMC8PAAApzsAAO07AIBfPQAA5LoAAC89AIB2vABghj0AABQ8AAAIvQDA4TwAQKk8AJCpvQCAXjwAQKQ8AEBvPQCAkrwAIGA9AMCbPAAwpL0AAJq8ABDGvQCAhLwAgAo8AIA0vQAAaDsAgLy8AODXPQCAFrwAgOa8AID6PAAAmDsAAD68AIBcPQBQ2b0AwCa9AAC8vAAAJT0AAIk9AMDGPAAgMT0AgF29AOAVPQDgUT0AAGI9AMCTvACAO7wAQJa9AOCQPQAAxDoAwJk8AGAivQAASjwAAOA5AEDCvABAhzwAQPi8AAD7uwCAhj0AgJ69AMCFPABAk7wAAAs8AEA0PQAAG7wAAPy6AAD6uwCAvrwAAFi8AABWvQAgC70AwNo8AKArvQDgWj0AILe9ACBAPQBArDwAwJe8AACcOwDgY70AAJS7AGB5vQBAYj0AgIs8AADsPABgDL0AwJW8AAAPPADA9j0AAKu8AGA3PQDAqzwA4B89AABAvAAAmjsAwKc9AAAKPADgpD0AgFm8AAAEPABAxLwAQFq9AACAOQDAxjwAgO48AMDZvAAA7zwAoHC9AAAFvAAAfDsAAHS8AAB2vADgGD0AgIQ9AAClvADQlL0AgG88AIBsvQCAKD0AwLi8AMB2PQCgGb0AsIU9APCTPQCAiz0A4GU9AICdvACgAb0AwIa9AAAFvABA0TwAAJE7AMCYvAAALr0AQDE9AGAdvQAAojsAAGi6AACMuwCACTwAgBM9AOCOvQCA+7wAwMM8AAATPQAAoDkAAMI8AEDWvABgZr0AYF89AAAYuwAA/zwAAO47AMDcPACA4bwAAOE8AIByPABgmb0AYIM9AMCTvAAAYDsAQAc9AACYugAwjb0AgGg9AECavAAAEzwAwBg9AMCrPQCAsrwAAG47AADAPAAAKDoAgNw8AMDvvADAeb0AQM48AIBAPABAKT0AAKk7AIDUvAAAV7wAgKq8AABzPACgAD0AAHo9AIA9PQDA3zwAgIs8AIBEPADQlL0AIAI9AKCNvQAApr0AALG8AACgOgAA4TsAgCA8AAA8uwAAWDoA8L69AMBEPQCA67wAACo8AMC+vABgAL0AAPa8AIDXPABAyDwAILU9AMC/PAAAgjwAAJ+7AAAdPQAARDsAIC49AABAuwAgWj0A8JU9AIAoPQBAy7wAAIW7AODWvQAAlDwA4CS9AMCgvADA8jwAoCC9APCEvQDA6jwAQMu8AJCIPQAALjsAAII8ADCEPQDAnj0AgGg8AOCJPQCA9jwAgAc8AAADvABw/r0AYGa9ABCVvQAAcrwAAMg8ADCCPQCAQT0AgMQ8AABNPQAAYDsAACo8AADAuABAybwAgGO9ADCiPQCAqDwAwLe8ADCovQBgQ70AAFu9AGBDvQAgFz0AIKw9AIA3PACAdrwAgGA9AECaPADAbD0AIAy9AIDbPAAgOj0AgK88AAAGuwCgH70AUNW9AOBUvQDAtTwAYLo9AACAOwBQqz0AwJ09AMCCPACABL0AAFW8AABIOwAAs7sAwIy8AIAdPABgd70AAJE7AAAkOwDAU70AgMs8AGDHPQDgjz0AAOM8AIDePADgBz0AACq7AMAkPQBAnbwAAHA8AEBLvQBAmTwAQBe9ACBFPQBACD0AAF48AICrPACgjL0A4DY9AMAkvgCAyzwA0Ji9AGAKPQAAb7wAQCe9AABBPABAwL0AQK68AABmvQAAIrsAQIe8AAAcuwAAtDoAICc9AIBYPACAHDwAAMg8AACePADAoLwAQCC9AIBRPAAwiD0AQGe9AOgMvgBgLb0AQJI8AKAqPQBA0bwAAIg6AIAZvQCAfjwAgEI9AOBkvQDATL0AAFA7AGACvQAAqLwAgF+9AADsPABQjr0AwIA9AEDSPAAQhD0A4My9AGBiPQAAeDsAAIK8AABoOwAA8LoAgGq8AACkOgBwkD0AgGS8AOAJPQAAtTwAAMI7AIAhPAAAh7sAAH67AMBdvQDgMD0AAPi6AGAxvQCQ2b0AgK08AEDOvACAcjwAID09AEDyPABA1rwAgEy9ANCIPQAADTwAWAc+AKCHvQDAKz0AwJQ8AAByuwAAt70AAKe7AEAsPQBAhbwAAJm7AEDuPAAADb0AQDc9AACKPAAATTwAAKU8AMCLPQCAOjwAIFs9AABkOwAAkDsAwOa8AIADvQAAdj0AgCk8AAATvQCAXzw=","chunkHash":"1dbe9effde30ea2d324117117e6c9de25463eecf03aefa6f39454a68f7e58e6c"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef process_sample_mesh(sample_id, root_dir, output_dir, voxel_size=(1.0, 1.0, 1.0), \n                       smooth_iterations=10, decimate_target=5000, sample_points=1024):\n    #...\n            smooth_iterations=smooth_iterations,\n            decimate_target=decimate_target\n        )\n        \n        # Sample point cloud\n        point_cloud = sample_points_from_mesh(mesh, n_points=sample_points)\n        \n        # Create output filenames\n        formatted_id = str(sample_id).zfill(6)\n        mesh_path = os.path.join(mesh_dir, f\"{formatted_id}_mesh.ply\")\n        pc_path = os.path.join(pc_dir, f\"{formatted_id}_pc.npy\")\n        \n        # Save mesh\n        mesh.export(mesh_path)\n        \n        # Save point cloud\n        np.save(pc_path, point_cloud)\n        \n        print(f\"Processed sample {sample_id}:\")\n        print(f\"  - Mesh saved to: {mesh_path}\")\n        print(f\"  - Point cloud saved to: {pc_path}\")\n        \n        return {\n            'sample_id': sample_id,\n            #...\n```","range":{"startLineNumber":199,"startColumn":0,"endLineNumber":223,"endColumn":0},"embedding":"AICsPAAgHD0AgGc9AEDGvABA+7wAAJG8AKBlvQDAkrwAAIQ6AIBLPAAAEj0AQK28AIBBvABAt70AcK29APDGPQAAnLwAoBo9AID3vAAAtTsA4Ew9AIBiPQBAdT0AwI48AIDXvACAPT0AgHu8AAB2vACgKz0AQM68AOAavQCAirwAgJ69AECkvACQzb0A4G89AMCZvAAAFrwAwKm8AEDPPAAwsj0AcKW9AECwPAAAqDoAgJg8AIAWvQAgD70AYMi9AMA4PQAA6LoAAEE8ABDFPQCARDwAADW9AED0vAAACTwAwMg8AMBLvQBArbwAgHy8ABCGPQBAwLwAAE47AED7PADgTD0AAM87AMDKvADAq7wAAAi7AAB2vQCAS7wAwIU8AGAbvQDwsb0AAIy6AIBHvQAgNr0AIB89AGA8vQDgNr0AgHa8AIAVPQCQjz0AAHG9AACbvQDgKL0AsNK9AED6vADAPr0A4AW9AOBevQCAqjwAANa9AABMOwAAeT0AwNY8AOBhvQDgTb0AAGQ8AOASPQAAELoAoAU9AECtPAAAwDkAAGU8AGAWvQCgMT0AwJ48AOAovQAAizwAgKk8AGBrvQCAfDwA4Gk9AOAcPQCAVLwAoHI9ACAaPQBgdb0AAOS8AKDjvQCAVbwAAE48AOBlvQAAnLsAAIK7ALC0PQAANrsAAP27AACnPAAACLsAwPW8ADCEPQAA7L0AAAq9AMCHvAAAMj0AgBU9ACAkPQDArjwAgBW9ACAMPQBgKz0AgDM9AAAnvACAFDwA4KO9AJCaPQAAjLwAAO88AACwvABAwTwAgFY8AAAAOwBALT0AoBO9AAD5OwCgWz0AAJe9AMCAPACACLwAgE48AACduwDA1bwAAF08AMCPvADAE70AwLO8AGCBvQAAK7wAAFw7ANCGvQDAOD0AAIS9AMA5PQAAtDoAwIK8AADWvABwk70AAPq8AMCQvQAgSj0AAMy8AACwOgCAzbwAANC7AMCGPACQyj0AALy8AMCNPQAAFjsAIFw9AMDVvABA+bwAgJw9AAAouwBArD0AwCa9AADkOgCA/rwA4Fi9AADAugDA/zwAgNM8AIARvQCA3jwAEIK9AGAOvQAAkLkAAPG7AMDwvABQiD0AQGA9AADluwDgfr0AAD+8AABYvQCggz0AgEq8AEAgPQAARL0AoE49AKCoPQAAbj0AQEc9AICXvAAADL0AwF+9AAA0uwAAfLsAgHw8AAAhvQAADb0AIAA9AIBfvACA9jwAAEY8AMCJvACAf7wAAD89APCzvQAgFr0AgEI8ACAaPQAAjzsAwJg8AEDcvABAmL0A0IA9AAAuvAAA6DsAgCI8AADXPADgRb0AANk8AIBkvABQpr0AADQ9AAApvABA6LwAwN88AICBPADAer0AYIQ9AACAvAAAvzwAgCY9ALC0PQCABr0AACy7AABkPAAA8LkAAGQ7AAC5vACQlr0AwJI8AAD+uwDAMT0AQIs8AADbvADgE70AgMO8AIAJPACAuzwAgHI9AGAmPQDAoDwAQNA8AADfPAAAm70AAGy7ACA1vQCwrb0AAFm8AADcugCAYzwAACI7AACsOwAAJ7wAIKS9ACBPPQAAOb0AAGi7AAB2vAAgNb0A4Aq9AAC5uwDAojwAoLM9AID4PAAAm7sAwKK8AEAdPQAAh7wAAPQ6AAAmuwDASj0AQLQ9AKBJPQCAx7wAAHs8AODDvQCA8jwAoEa9AEBHvQDgRj0AoHa9APCgvQAAhTwAgGY8AHCBPQAAwrsAwPA8ALC/PQBwwj0AgG08AMBxPQBgLD0AgCo8AABoOwBAA74AAIi9AJC2vQAABLwAADM8AACOPQDAPD0AgD49AEAzPQAAgDgAQNA8AICFvAAAnrwAAOu7AODNPQAAYDwAgCm9AMDMvQCAAr0AICG9ACBLvQAA1TwAEKY9AIDYPAAA7rwA4Js9AAD9OwAgbD0AICW9AECSPAAAST0A4Bc9AIAJPACAGbwAUJC9AIAyvQAAu7sA8OU9AABMuwAgfD0AgJ49AMBRPQAASLwAgA28AMCKvAAA87sAANC7AMCdPACwgL0AALE8AIAMPQBAgr0AgKA8AGBCPQAAOT0AAEY8AEDDPACAkjwAAA+8AEDCPACABLwAAOI7AKAAvQAAJLwAgBa9AMBwPQAAQD0AgCE8AECfPACgKr0AgDA9ANAVvgDAEz0A4H69AABwPACgYL0AYDy9AAAAOwCgu70AABi7AKAjvQCAVDwAAB68AAAGOwAA2DoAYIo9AAA0OwDAh7wAgC49AACmPAAAyLoAgBG9AIA1PACAnT0AAHu8ALgPvgDAPL0AoAQ9AMAEPQCAybwAABS7AIArvQCARTwAQEI9AIA0vQBgXb0AADC7AIDIvACAwLwA0Iy9AACsPABAU70AQFI9AABoPACwlT0AAK69AMDyPABAprwAgCU8AIBAPABA1jwAACK8AIBlPAAAfD0AgCm8AIAuPABAtTwAAMA8AACyuwAARrsAANK7AIAivQAAKDwAAKE7ACA6vQBwxL0AQIM8AGAJvQAAYrsAwNw8AAAOPQDAR70AIGG9ACBOPQAAn7wAYAo+AIA6vQAAWjwAAII7AAC8PADgr70AgEm8ADCmPQCAhbwAAN+7AMDMPADAMr0AwKg8AMCUPAAACjsAAAK8AODBPQCASDwAcKI9AADtvACANrwAAPy6AOBKvQCAWT0AAE08AICtvABAxjw=","chunkHash":"aacaae46c79c8962a4805143791654304348528dde9fc6f82e8c6d1c248cabb8"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef process_sample_mesh(sample_id, root_dir, output_dir, voxel_size=(1.0, 1.0, 1.0), \n                       smooth_iterations=10, decimate_target=5000, sample_points=1024):\n    #...\n            'mesh_path': mesh_path,\n            'pc_path': pc_path,\n            'mesh': mesh,\n            'point_cloud': point_cloud\n        }\n    \n    except Exception as e:\n        print(f\"Error processing sample {sample_id}: {e}\")\n        import traceback\n        traceback.print_exc()\n        return None\n#...\n```","range":{"startLineNumber":223,"startColumn":0,"endLineNumber":233,"endColumn":19},"embedding":"AIAdPQBgJz0AYJA9AACUvAAAGL0AgHi8AAAYvQCAfbwAAMq7AIACPQBAQD0AANy8AMClvAAApr0AMJG9APDAPQAAPrsAoEc9AEAjvQBAgTwAoIU9ACB0PQBwlj0AAIw8AIA9vABgGT0AAK07AAB4vAAAKz0AACu8AOAVvQBAjLwAMKm9AEDkvACQ1b0AwIE9AICFvAAAA7wAAKO7AICjPABw3T0AoH29AIBoPABApjwAAOg7AGA1vQDgML0AINe9AEDtPACAoLwAYAU9AJCXPQDAkzwAIBe9AADIuwAA7LsAAHw7AOB8vQAAKL0AgC+8AHCBPQCAhLwAQOG8AAALPAAwgj0AAOA5AADjuwDAZr0AwNO8AGBfvQAAHr0AANw7AECyvADgpL0AgG88ACAcvQAAKb0AABw9AMByvQBAEr0AgJS8AMAjPQBAgz0AQI69AKDAvQAAyrwAELy9AMC4vACgM70AQNi8AMD5vACATTwAwJ+9AIAZPACgXz0AACe8AOA2vQCgQr0AgKk8AEAFPQCATbwAgD48AMDcPAAARDwAQAc9AMAnvQAggD0AAAC8AGBQvQDAgjwAQBw9AHCXvQAA9bsAAKg8AGA9PQAAgLwAIGo9AOAZPQAAfr0AABC8ADC7vQAAsLkAAAg7AEBLvQCAN7wAALu7AFCmPQDAhzwAwBm9AKAZPQAAgrwAgE+8AOBOPQDwsr0AgMq8AIDJvADAvDwA4IM9AIAsPQCA+zwAYE29AGCCPQDgHj0AYF09AAD3OwAAFzwAkJG9AMCqPQAAXTwAgJw8AMDkvACAXzwAAEq8AGAAvQDA/DwAAKK8AABiuwDAfD0AUKy9AADUPAAA0LoAAGg8AAA9PACA8bwAAE48AADKvADAurwAAKG7AGAovQCAVrwAAHI7AMCOvQCADz0AUJm9AGA5PQAABbwAQLs8AMCNvABgMr0AwLG8AHCjvQAgJj0AAAA8ACAWPQDAwLwAoBq9AICJPAAg2j0AAKS6AGBIPQCAMzwAYEw9AIDTvABgCb0AgK49AABoOgDAjj0AoEy9AABwugCAM7wAQDq9AACQOQAAGj0AwOI8AGAqvQCAhTwAAH69AMCWvAAAzzsAgMq8AIDsvADAwTwAwAA9AIADvACwh70AAPq7AKAAvQDAbD0AQI+8AKBsPQDAKL0AIFg9AKCPPQAgmT0AwDc9AECqvACAkbwAcJe9AIDsvAAA8jwAgF08AGAOvQDAt7wAAIo8AIBkvAAAeDwAAJc7AACIuwAA9bsAwKI8AOCovQBgP70AgJY8AEAkPQAAKbwAANc8AABSOwBQg70AIDs9AADPuwAAxDoAAIM8AECzPABAML0AoAM9AAB7PAAwpL0AkJk9AMCRvABAsLwAIBs9AAAiPAAgaL0AcJ09AKABvQCAYrwAwEc9AFCVPQCASrwAAMC8AIAOvAAAl7sAADo7AMA/vQAAo70AQIc8AAABvACgUz0AAIM8AIDNvAAAdbwAAOG7AADAOQAgBT0AADE9AEBWPQDA/TwAAI88AEDJPACgcL0AAKQ7ACAGvQCAyr0AgNG8AAACuwCAmzwAgFk8AADNOwAAALkAgK+9AOAfPQBA7rwAQJk8AIDMvABAyLwAoBy9AECwPAAAKTwAEMQ9AABCPQBAxbwAoA29AEDVPADAkzwAwLc8AACvuwCgFD0A4Hk9AMCbPQDgHb0AAD08ALDMvQCAPTwAgMq8AABDvQCACD0AYCi9AKBzvQCA3DwAQKY8AABaPQAATbwAAKc8AFCtPQCw0j0AADg8AMBsPQCAaz0AgI08AADyuwDA870AAFO9AJCUvQAAqrsAAMk7AOCiPQBAVj0AANA8ACAEPQAA37sAQO08AADcvADgDr0AIE69APC+PQAAuzwAoIC9ACCNvQBgMb0AoGG9AMBlvQDAvzwAcKM9AABmPAAABLsAMIA9AABLPACAAz0AoCq9AAAOOwCAIz0AwPU8AACguQDA17wAoKm9ACBkvQAAKLoAQNg9AAAAOACAsD0A8LE9AGAbPQAA6rwAQLC8AIAnPAAA77sAwNW8AAAUPABgN70AAO07AACpPADAYb0AgJ88AOA+PQCgRz0AgDk8AMClPADAFj0AAAg7AEANPQAAGLoAANA6AGAvvQAAxDwAgI68ADCIPQCgHj0AgBY8AEClPABgVb0AgFY9AAgqvgAAMDwAoKq9AIA0PADwkL0AQFK9AAClOwBAv70AAG28AEBFvQAA0DwAAOK8AIAVPAAAeLoAAE49AIAKPQAAaLoAYEQ9AEDjPACAA7wAQCC9AACSuwCw1T0AQIa8APgCvgCACb0AQKk8AOA0PQAALL0AAEA7AED8vACAhzwAIFE9AMBAvQBAQr0AABS8AIBzvACA0LwAIJK9ACBEPQAgnL0AgEA9AAAMuwCgZD0AMKy9AIA1PQAAdLsAAAW8AECnPACAHjwAgA88AADuuwBAiT0AgF+8AIDZPACAfzwAgLg8AAAJvACAbrwAABC6AIDzvAAAzTwAANa8AED8vADwyb0AgI48AMAUvQAApLsAAFw9AIBPPABAsbwAoDS9AGB5PQAAs7wAuBU+AFCYvQDA0jwAAC68AIDxPADQwL0AgFq8AIBbPQCAfrwAQKe8AGAMPQDAEL0AIFI9AMCXPAAAADsAAOS7ABCOPQCAhjwAAJM9AABIvAAAALwAQO28AMDavAAQtz0AACI7AICsvABA7Tw=","chunkHash":"bb60f9261217592c075253d104aa8c2cdb44f34635ec8617d2371ec0b580a417"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef process_all_samples(root_dir, output_dir, voxel_size=(1.0, 1.0, 1.0), \n                       smooth_iterations=10, decimate_target=5000, sample_points=1024,\n                       sample_ids=None, max_samples=None):\n    \"\"\"\n    Process all samples in the directory or specified sample IDs.\n    \n    Args:\n        root_dir (str): Root directory containing all samples\n        output_dir (str): Directory to save the meshes and point clouds\n        voxel_size (tuple): Size of each voxel in the output mesh (dz, dy, dx)\n        smooth_iterations (int): Number of iterations for Taubin smoothing\n        decimate_target (int): Target number of faces after decimation\n        sample_points (int): Number of points to sample from each mesh surface\n        sample_ids (list, optional): List of specific sample IDs to process\n        max_samples (int, optional): Maximum number of samples to process\n        \n    Returns:\n        dict: Dictionary mapping sample IDs to processing results\n    \"\"\"\n    # Find all sample directories if specific IDs not provided\n    #...\n```","range":{"startLineNumber":238,"startColumn":0,"endLineNumber":255,"endColumn":0},"embedding":"AKBPPQAAhjwA4HU9AACiuwCA/rwAQKe8AGAevQBAFb0AgIS9AEBaPQBApTwAAAm9ACACvQAICr4A4Fe9AICVPQDgHr0A0Io9AEC1PADgHz0AwKE9AACPOwBgFT0AANo8AADxuwAgRT0AAEq8AKBDvQCgkT0AAI07AAA2vQCAO7wAoOK9AMBPvQAAzL0AAKI9AACcvACAEzwAgJu8AIAgPQAQ0D0AADe9AACZPAAA0bwAAJy8AADzuwDgGr0AYMy9AADrPAAgGL0AIC09AHCpPQDgK70AIA29AABUvAAA6bsAACQ8AOC2vQBAnjwAwAG9AIBYPADAtLwAQJs8AIBHPACgvz0AwJy8AIA+vADgOL0AAOQ6AICevQAAJ7wAAN07AKCIvQAgfb0A4EQ9AIAUvQCAGbwAgHo8AJCfvQBgc70AAAQ8AIAZPACgXz0AAMi8AKDRvQAgb70AwPm8AADpvAAAqbsAoEe9AADSuwBAaT0AEMa9AIAsPQAAibsAgH29AADwOgAAG70AQIE8AMAMPQCAVDwAAJC5AGAgPQCAmbwAoD89AABcPABAnDwAgDy8AEBvvQDAIL0AAHc9AAB4vQAAQz0AACy8ACBGPQAACLoAQNc8AGAEPQCAGb0AgEG9ACBhvQAAZLwAgLM8AMCwPADA8rwAAFQ7AKCePQCgDL0AgK68AACSPQAA2DsAYBG9AOAJPQAAgb0AAAy8AKABvQDA6zwAcJM9AEA3PQAApzwAoDK9AGCFPQBAST0AwCw9AIA4PAAAabwAAK+9AACNPQCAfTwAAHs8ACBqvQAADbwAAHg7AEDevABAjT0AADK8AKAevQCAnj0AAJm9AADfPACgDL0AALy7AIAUPAAAIb0AAIw6AIC4vABAuDwAAOA5AAARvQAAxTsAwKc8ADCCvQAgpz0AoHu9AKAmPQCAjbwAgNS8AIBEPACgg70AAGI7AGBevQCA7jwAAO28AABNPABwir0AAG+8AADHOwCgZj0AQB29AGCRPQAAWDwAAOQ7AADMvACAyTwAADo9AABIvACAzzwAQKW8AACPuwCAWTwAQFK9ACAlvQAAADoAQLk8AMBOvQBAwDwA4EK9AEClvAAAMj0AYJa9AEDdvADA7zwAACi7AMCFPADAZL0AABU8ACDBvQCAZ7wAwOW8AACRPQCA7rwAgOQ8AIAMPAAgOD0AgIY8AABCPACgpr0AgFe9AABwvACASDwAAOU7AOAQvQCAQ7wA4IQ9AAC6OwCAOzwAgHY8AIAvvQDAszwAoBu9AGB3vQDALL0AwI48AEDbPAAATLwAQKg8AMCNvAAgML0AwBA9AMDcvACAvDwAgB28AKApPQAAjb0AIF49AIBKPQBgLL0AQGU9AEAtvQCAkT0AYGE9AACAuwAghL0AADs8AEAhvQDAzTwAIB89APDGPQAAZLsAgA08AACsOwAAuDoAAFs8AMCQvQCgC70AgG08AAAZPADAuTwAgFw8AEBOvQAAjzsAgJa8AKAvPQDA9TwAIKs9AACRPADAOD0A4DU9AAD/uwBA+LwAAAS8AOAAvQBQh70AALW8AAB2vADA+DwAADI8AMD8PADAhjwAcJy9AEDbPADA97wAAAk8AEDDvACAajwAQNC8AACNvADArzwAgKc9AGAqPQCAbTwAAMS6AMCDvAAAqrsA4Bc9AMAAvQAAzTsAsJM9AMCaPQAAdDsAQJO8AAA1vQAgUD0AAFo7AIAkPAAAejwAgB69AECwvAAAwDkAwM88APCGPQAADDwA4As9ABDgPQAA+DwAAAA8AOB6PQAATrsAgMW8AAA3PAAwtr0AgHS8AFDGvQAAi7wAAAq7ADDPPQDAAT0AgB88AAD3uwAAvzsAYBc9AID9vABAurwAAFK9ACBjPQDAOj0AEJC9ACAivQBQgL0A4Bi9AABkvADgCz0AQIQ9AADYuwAA7TsAIDw9AAANvACgcT0AAGW8AEBQPQAAUD0AgGy8AEDyPADANr0AAJa9AEDbvAAgFT0AUJQ9AOAhPQDwoD0AQOY8AADIPADA8LwAAAA6AMCPPAAASTwAwCq9AICIvAAAxLwAAC+9AAAoOgAgNb0AIIw9AGCvPQAASz0AgBa8AACMugDQsT0AABq8AAAlvAAAMTwAwBQ9AOB3vQAAIjsAgFI8AEBOPQDAOD0AQKU8AACjOwAw3L0AgE48ALAgvgCAUTwAYGy9AACFuwDA0rwAUKW9AEDyPAAwvr0AwJy8ACCCvQCAtzwAwM+8AICQvAAAxrwAgA09AFCGPQDAgzwAgN48ADCfPQAAYrwAABy9AMCePACAQD0A4Hu9AHgLvgAAursAAME8AABrPADwkr0AAGw7AMCUvABAaT0AgN88AAAIvQCgQr0AgDQ8AAB2vAAAv7wAgKq9AOCBPQCgFb0AAK+7AID3PABgJj0AYGy9AAA8PQAAlDoAABe8AADWvACABD0AAJS6AICePAAAETwAgDI9AICXPACACjwAgDw8AAAtPACAGbwAgFW8AIA0vQBgR70AgCG8AEDWvAB4Jb4AAN08AAC2uwAAELoAIB49AAA4OgCglL0AYE69AGCmPQAA1bsA8LQ9AMCvvQDgWT0A4CE9AABFPABQ170AAAo7AADQPAAA/bsAAOe8AGBLPQDA0bwAEIo9AMCZPQCAjjwAgIy8ACAwPQDAyjwAkI89AECNvAAAEDsAgLW8AOAsvQBARz0AgGa8ABCbvQCAobw=","chunkHash":"4eea708da9c7c3592d766a745d00e2078656e26b58069869462d0c6fe27a9a1c"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef process_all_samples(root_dir, output_dir, voxel_size=(1.0, 1.0, 1.0), \n                       smooth_iterations=10, decimate_target=5000, sample_points=1024,\n                       sample_ids=None, max_samples=None):\n    #...\n    if sample_ids is None:\n        sample_dirs = []\n        try:\n            for item in os.listdir(root_dir):\n                if os.path.isdir(os.path.join(root_dir, item)) and item.isdigit() and len(item) == 4:\n                    # Check if it has a mask subdirectory\n                    mask_dir = os.path.join(root_dir, item, 'mask')\n                    if os.path.isdir(mask_dir) and len(os.listdir(mask_dir)) > 0:\n                        sample_dirs.append(item)\n        except Exception as e:\n            print(f\"Error scanning directory {root_dir}: {e}\")\n            return {}\n        \n        # Convert to sample IDs\n        sample_ids = [int(d) for d in sample_dirs]\n    \n    # Limit the number of samples if specified\n    if max_samples is not None and max_samples > 0:\n        #...\n```","range":{"startLineNumber":255,"startColumn":0,"endLineNumber":273,"endColumn":0},"embedding":"AEAHPQAACD0AUK49AAC8vAAggr0AgA+8AEBXvQAAuLoAoEC9ACBzPQCAOj0AAPu8AIDZvADwk70AIBm9AFCVPQCAlbwAADc9AADAuwAABzwAQII9AEDrPADAdT0AgEC8AADUugBAKz0AAEY7AAAwvAAQgj0AAIu8AABXvQCAN7wA8NO9AEDKvADA3r0AkIo9AOAvvQCAVbwAIA+9AIAnPABAxD0AwDy9AADBOwAASjwAwBQ9AMDcvAAA17wAIPu9AIAhPACANLwAwK08AACQPQCAZLwAwAq9AIAxvACAbbwAAGA5ANCovQCADrwAANW7AHCfPQAAaLwAwIc8AED1PABwjz0AAHC7AADJuwAATL0AAKq7AAB5vQAAUbwAAAA5AAA/vQDwib0AABQ8AECmvABAx7wAQKM8AMCcvQAAVLwAAOg6AICnPADApT0AIGG9AMC2vQBAYb0AIFO9AADGvAAAPr0AAGu9AIAuvQAAyzwAAOu9AEC/PAAARTwAIC69AECLvABAg70AgE48AMCyPADACj0AAIC5AKBWPQCANbwAABg9AICZvABgAz0AAL27AEAUvQAAXLsAwEY9AKCdvQBArDwAACq8AHCEPQAADDwAQI08AKBOPQAwjb0AIAy9AJCVvQAANjsAAGo8AGABvQAAeDsAwPK8AEC8PQCAVrwAgKq8AOAhPQAAnzsAAJ27ACBaPQDQ270AgBu9AOAtvQAAgTsAALA9AADxPADAWD0AQAa9AIBhPQBAUT0AwFQ9AACzuwAA1TsAMLS9AMCLPQCAbDwAgLg8AEDZvACAcDwAgF48AIBwvAAAYD0AgOW8AIBPvAAAiz0AIKC9AADePACAurwAADo7AEAPPQAAkLwAwOk8AIBkvAAAYLkAgL68AABlvQAAg7sAwN88ACBtvQBQgT0AgNe9ACANPQAABbwAgHm8AABkvAAgWb0AAL+7AEA6vQCA+jwAACS7AMDUPADQgr0AAP+8AABPPADgnj0AQDK9AOBXPQCgJT0AoAg9AIB7vABAujwAoOA9AMChvABQiz0AABy7AECPvAAAJDsAIIe9AAClOwCAlzwAACC7AED5vADAjTwAIFW9AIBMvAAAHj0AgKC8AIBKvAAAPj0A4AE9AABEPABgS70AgE88AOBKvQBAkjwAgKa8AAB8PQAAs7wAgOw8AIBLPQCgrj0AoAo9AIBLvACA6LwAIHa9AAAwOgBA5DwAAA08AOA+vQBA+bwAoCs9AGAlvQCAqzwAAIw8AAATvAAA/LsAAHi6AOC3vQDALb0A4Aw9AOBXPQBAxrwAgLI8AEAZvQDAS70AwMo8AMCSvACAtTwAwIM8AABbPADgB70AQAY9AEANPQDAb70AwHk9AMDqvADAPz0AwLo8AIChPABAab0AABA9AMDYvAAAc7wAYE89AOCBPQDAo7wAQKG8AAAyOwAAPbwAIDs9AOBAvQCgPb0AgPE8AICmPADASz0AAJg6AIDLvAAAzDsAgEG8AKAmPQDA5jwAMIk9AADxPACAtjwAAA89AAAQuwAgeb0AwJg8ACBvvQAAQb0AABi6AMC7vAAAsLsAAKs7AADsOwAAGrwAgKS9AFCOPQCA7LwAwJ88AAAIvQAAEb0AANC7AABxPACA2zwAEM89AEDjPAAAvrsAgI28AMCYPAAAGrsAAKE8AAARvADgID0AwCo9ANCFPQAAwLoAAJ28ALDTvQAgAj0AQLa8AICMvABA4TwAwHi9AAAfvQCA+DwAwNO8AOCGPQCALTwAoDs9ACDDPQAgKj0AAAC7AGBCPQAAMzwAgBG8AEBRvQBgu70AYC29ABCuvQBAh7wAgJc8AHC5PQCAnzwAwJY8AACnOwCA4TwAAJ08AEDYvACgHr0AwGC9ADCsPQCAfTwAYFi9ANCEvQBgWr0AQDS9AAC7vAAACz0AUOc9AACfPAAAg7wAwCg9AADAOgAAlj0AgMm8AIA3PQBwhT0AAMA6AMCiPACQhr0AcL+9AIAyvQBA+zwA4Kc9AGAPPQAQjz0A4JU9AEC1PAAAfrwAQMO8AIBsvAAAMLwAwJm8AIAZPABQjL0AAPm8AABQugCgAL0AAEE9AGCRPQBwpz0AgAu8AAD1uwCwgj0AAIm7AABuPQAA+jsAQOc8AMBcvQCAODwAADa8AKCdPQBAST0AQOY8AECbPACAqr0AgCI9AHgMvgAAID0AUKe9AAC6PAAAEjwAIFi9AACiPACg3b0AAJu7AAAXvQCAuDwAAHC9AAAgOgAAyDoAgMg8AGAXPQAAUDsAgGc8AADZPAAA67sAQEC9AIBBPQAgiD0AAHS9ANAAvgBgR70AwPM8AKAMPQBAWb0AQIs8AEDkvACA1TwAYEc9AMBxvQDgFr0AwJm8AAA4OwCAVbwAEIG9AABqPQDgtb0AQMo8AMASPQDgfT0A4Li9AABmPQCAEzwAAKI7AIADvABA+DwAANC8AAAivABA2zwAAOA7AECPPACAGDwAAJw7AMDDPACALDwAAM07AABbvQDAmbwAAC47AMD7vADg870AgH08AADnvACAP7wAQEU9AAA+PABgcL0AgDG9AKBuPQAAqzsAoP89AEDBvQAgIj0AABI8AACLPACArb0AACS8AMDCPAAAcLwAgBa8AADPPADAxbwAIHw9ACAjPQAAPjwAAKM7AKAfPQAABT0AgIo9AACaOwCAGzwAACG9AOAbvQAgYz0AAMk7AOBuvQAAWTw=","chunkHash":"cbb246d69f9f499436a4c776650387366d4738e83658e9955e12a04c5d7f725a"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef process_all_samples(root_dir, output_dir, voxel_size=(1.0, 1.0, 1.0), \n                       smooth_iterations=10, decimate_target=5000, sample_points=1024,\n                       sample_ids=None, max_samples=None):\n    #...\n        sample_ids = sample_ids[:max_samples]\n    \n    # Make sure output directory exists\n    os.makedirs(output_dir, exist_ok=True)\n    \n    # Process each sample\n    results = {}\n    for sample_id in sample_ids:\n        print(f\"\\nProcessing sample {sample_id}...\")\n        result = process_sample_mesh(\n            sample_id, \n            root_dir, \n            output_dir,\n            voxel_size=voxel_size,\n            smooth_iterations=smooth_iterations,\n            decimate_target=decimate_target,\n            sample_points=sample_points\n        )\n        \n        if result:\n            results[sample_id] = result\n    \n    print(f\"\\nProcessed {len(results)} samples out of {len(sample_ids)}\")\n    return results\n#...\n```","range":{"startLineNumber":273,"startColumn":0,"endLineNumber":296,"endColumn":18},"embedding":"AMAhPQDAHT0AQJY9AMCFvAAgSr0AgBQ8AIBrvQBAvLwAADW9AMA+PQBAaD0AgIa8AEAVvQAAwr0AYHq9ABCcPQCAprwAoDk9AICHvAAAijwAQHw9AABJPABgdz0AAGI7AMCCvAAARz0AAEA6AAAcuwCgUj0AAPa8AIA9vQAAAbwAwNG9AADnvACA4r0AoIw9AAAnvQDAzrwAgH28AECZPABw0j0AYHm9AIB6PACAejwAQJU8AEAAvQBAPr0AsO+9AAC6PAAAErwAwOs8AACsPQAAFjsAQN+8AAC7uwAAoLkAAF48APCtvQCANbwAAMa7AICXPQAARLsAQJM8AMACPQDAXj0AAFg6AACkuwDgMb0AgFo8AMCYvQDAhLwAAI07AEBNvQAApr0AAEC7AEA0vQDA57wAgJo8AOCYvQBgBr0AAM27AECHPABQqj0AYCa9ACDGvQBAaL0AwEO9AMDxvACgL70AAF69AAAjvQDgBD0AsOG9AMDhPACgFT0AAA29AAD3uwAAXL0AgDc8AICcPAAA9zwAABw7AMBHPQAA37sAAGw8AECJvADA/TwAgAi8AEA6vQAAAbwAAFI9AACivQBA3zwAAJu7AMB8PQAATjsAgPw8AMApPQDghb0A4BK9AJCLvQCACzwAgLQ8AMA8vQAAoTsAgHW8ADC/PQAA4DsAwKK8AMAmPQAAlzsAABy8AOArPQCw0L0AgMS8AEDMvACAdjwAULI9AOAcPQAgYz0AICO9AGA1PQDATz0AYGY9AAB6uwDAgDwAoK29AECLPQAAejwAAJi7AIDWvACAAD0AAOO7AACROwAgQT0AAK68AADdOwCQnT0AoJO9AEDfPACAG7wAgCA8AMCrPAAA1LwAAJw8AECbvACAL7wAwNe8AABjvQDAgLwAAJw8ACBQvQDgVz0AYKe9AIAqPQAATbwAwLC8AIARvQBAM70AANS7AIBdvQDAJD0AAGG8AIAoPAAAb70AwLe8AABgPAAwvD0AQO28AKB1PQDA2zwAoAY9AMDVvABA0jwAAMI9AADvuwBAkD0AgAS8AIBivAAAfDsAoHW9AACjuwAAYTwAAI+7AAD5vACASjwAQG69AECgvAAgDD0AQOW8AABkvACAUD0AACM9AIB8PABgS70AAIa7AEB4vQCA6TwAQKW8AABwPQCAlbwAAAw9AMB3PQBwnT0AoBE9AAAUuwDAAL0AQIe9AAAQugCAiDwAAMU7AABZvQDAEb0A4DE9AGAdvQAAvLoAwNA8AAB4uwAAE7wAANc7AKCkvQBAKr0AACA9AKBpPQAAp7wAQLw8AOAVvQDAWL0AAD09AACAvAAADzwAwKE8AIDcPAAA17wAgBw9AACCPADwgr0AMIY9AIC7vAAACz0AwAY9AMCJPACggL0AgFQ9AMC6vAAAvLsAYGo9AECNPQAAcLwAADI7AACwuQDAlbwAQAw9ACBDvQBAT70AoBM9AACaPABgiD0AALA8AADBvAAAJTwAAPG7AOAPPQAAND0AkIU9AADrPAAAvTsAgCk9AICKPAAgZb0AAEA6AEAyvQAggr0AANW7AAD+uwCADzwAwMU8AMCbPAAAmbsAEJa9AOByPQCArrwAwMc8AMC2vAAAt7wAQJu8AAAAPAAAZzwAwNo9AOAtPQCAJbwAAKA7AIC/PAAA8DkAwKk8AAAmvABA2jwAwH49ALCBPQAAZLwAAHg6AKCtvQCAQz0AAO68AKAOvQAAfjwAIHK9AOAdvQDAwTwAANw6AKCcPQAABTwAoB89ANDMPQDwgD0AgEY8ACBrPQAA6TwAAIW7AIDuvAAg2L0AwC69AMCyvQCAXLwAABs8AIC2PQCACj0AgHs8AAB8uwBApDwAoDY9AMCtvAAgK70AIFe9ACDLPQAAfTwAoFC9AAB2vQCAZL0AgDa9AKAzvQCA0DwAMLs9AICIPAAAtDoAAFc9AAB4ugBAiD0AwIu8AEAmPQAAVD0AAD48AABnPACgKL0A4M29AIBGvQDAtjwA8KQ9AICMPAAQnD0AEIs9AKAvPQAAyLwAQLi8AAAzvAAAIrsAQM+8AABmOwCgX70AAJu7AAC2uwAAMr0AgE49AOCYPQDQmj0AADC7AAC8ugCASD0AACi6AKAnPQBA5zwAgLM8AKBCvQAAlDsAACi8ACCdPQCgWz0AAHs8AIDXPAAQiL0AgBk9ABgWvgDgBT0AoK69AEDbPADA+LwAIHy9AIB+PADgt70AAMu7AIAZvQBA1TwAwC29AACCOwAAUrsAYBo9AOA5PQDAu7wAQIY8AIDUPADAuLwAwE+9AOBgPQDwhj0AQES9AMADvgCgFL0AgOQ8AMDwPABQhL0AAKc8AIDqvADAIT0AoFo9AIBivQDA+LwAALa8AACluwDA5rwAUI69ABCPPQCwib0AoCk9AAB+PAAAmT0A8KS9AABlPQCAkDwAACi6AACiOwDAhDwAAJO8AIBPvADAMj0AAD67AADNuwAAWDwAAJ48AADHOwCAE7wAAAi6AABuvQAAaLwAACy7AGAQvQCQ970AAP47AEDrvAAAnjsAIGc9AIBIPACARb0AQFC9AMBpPQCAxbwAAN09APDMvQDAmzwAANY7AEDKPAAQiL0AABK7AIDEPACAYLwAgGm8AAADPQCACb0AYGE9AAAkPQAAnDoAABU8AKB4PQAAdDwAYIo9AADgOQAAsTsA4Ce9AED8vADwlT0AgCE8AIBXvQAAGjs=","chunkHash":"f6bc8a1c32bee67cd84c92deb5bc12b8c4792d8e17e3c828651ed8b461adab67"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef main():\n    \"\"\"\n    Main function to run the mesh generation process.\n    \"\"\"\n    import argparse\n    \n    parser = argparse.ArgumentParser(description=\"Generate 3D meshes and point clouds from masked nuclei samples\")\n    parser.add_argument(\"--data_dir\", type=str, default=\"data/nuclei_sample_1a_v1\", \n                        help=\"Root directory containing all samples\")\n    parser.add_argument(\"--output_dir\", type=str, default=\"data/mesh_processed\", \n                        help=\"Directory to save the meshes and point clouds\")\n    parser.add_argument(\"--voxel_size\", type=float, nargs=3, default=[1.0, 1.0, 1.0], \n                        help=\"Size of each voxel in the output mesh (dz, dy, dx)\")\n    parser.add_argument(\"--smooth_iterations\", type=int, default=10, \n                        help=\"Number of iterations for Taubin smoothing\")\n    parser.add_argument(\"--decimate_target\", type=int, default=5000, \n                        help=\"Target number of faces after decimation\")\n    parser.add_argument(\"--sample_points\", type=int, default=1024, \n                        #...\n```","range":{"startLineNumber":302,"startColumn":0,"endLineNumber":316,"endColumn":0},"embedding":"AIBPPABgQj0ASBk+AOBZvQCAtb0AYEm9AADgOQAAlrsAAOG7AOAMPQDAjbwAAG+8AIB2vACwor0AABK9AGByPQDwkr0AwLs8ACAXPQAA1LoAwJc9ALDVPQBABD0AAKO7AIBdvABAFj0AgJO8AABHPABAFT0AACe8AOBFvQAAdLwAYGy9AEBUvQDguL0AQMA8AICGPADAgTwAQOG8AADaPADgoD0AsP+9AICNvACAy7wAAI28AGArvQBgHr0AUJi9AABBPQDAJL0AAKG8AECUPAAARrwAgAG8AMD7vACAMTwAAMA8AECNvQAASrwAgAa9ADDAPQAAUDsAQKm8AMCZPADgAT0AQO88AMA5PQDgbL0AgEG9AIA9vABAAr0AgI68AEAHvQAQhL0AgBU8AMDRvAAA5DoAAOI7AMCovQDAx7wAAPA6AOBJPQBAGj0AIFU9AABSvQDgqL0A4HC9AACuOwAgUL0AADO9AEBJvQCALzwAgJW9APC0PQAA1TwAALQ7AIBpvACwrb0AILU9AABjPAAApTsAIBE9AABkPAAAtbwAYAs9AMDwvABgHj0AQNo8AMBBvQDAZD0AAIA5AMCYvADAbz0AgEQ8AGAJPQAAuLoAYMA9AMAmPQAACTwAALG8AIC1vACAFD0AgLI8AACNOwAA+LsAwNk8AAChPQBAKb0AQEe9AOB/PQDAUD0AwJK8AADguQAAzbwAYHy9AICfvABAq7wAQD89AAC3PADAlj0AwAK9AEA2PQAAjbsAQIW8AOA0vQBA4LwAcKm9AODUPQAAoLwAkLo9AAA6vAAAJD0AADw9AGAdvQAgtT0AYFG9AOAhvQDAlj0AAPq8AABHPQAAYbwAgN48AAAUvQBA3bwAAA28AAAuPABA9LwAQM28AABwvQBARr0AwDc9AECdvQAAuDwA4F+9APC1PQCAXrwAAFe9AIALPADA1LwAAHW8AAAyvQDgXz0AEK69AAAUPAAA4LwA4Ak9AGAmPQCgCD0A4Bu9AACNPQBAmrwAAJk9AAD7vACAdrwAADE9AACcvAAQij0AIAW9AAAyPQBAJz0AgDA8AIANvQCA9DwAwPK8AMDOvAAANjsAwCW9AACbvAAAIL0AQIS8AMCFvACATrwAgHQ9AEAuvQCApr0AgCE8AEA0vQAgaT0AgDM8AFDjPQAA7rsAAL87AAAvPAAAEbwAQD49AAB0PADgJb0AgCy9AEAIPQBAgz0AwLw8AICVvAAAq7sAQAU9AGAivQAAkbwAAEY9AACAOQDA8jwAYAU9AHCAvQCAhLwAALG7AMDdPAAA/jwAgMk8AAAAvAAASb0AQE09AACAOwCAwjwAAIY7AGBiPQBA67wAwIS8AACdPACgV70AIEM9AACQugAA6TwAAFe8AECwvACgib0AADA7AAD8ugBACT0AgDu8AGBwPQDAm7wAkKG9AACruwAA0LkAQD49AMDTvADgZL0AgIU9AADAugCAXz0AYDU9AADIvADAtLwAAGC6AKA+PQDArjwAoFw9AOAFPQDAPD0AAGC5AABXPQAwwr0AAAA9AAAouwBApL0AQJs8AACbPAAAvDoAwLS8AED2PAAAhbwA4Cq9AMANPQAAEjsAAJg8AKAXvQCAZjwAgNe8AIDOvACAET0AwOI9AIB6PQBgCr0AAEk8AABJvQCAMLwAoCA9AADCvAAAYT0AgBw9AICXPABA1rwAIEI9ABCxvQBAGz0AIAi9AADvvAAgRD0AwIG8AEAZvQBAm70AQLa8AOB6PQBgCL0AQPQ8AGBJPQCwoj0AgKO8AOAuPQBAkT0AANe7AOBQPQBgxr0AQFy9APDGvQDABT0AgBs8AAB8PQDAYD0AcI09AECjPQAA+TsAYDQ9AEDxvADgLL0AwKa8AAA6PQBAx7wA4CK9AABtvQAAk7sAwAO9AMCIvQDArjwAID49AIAkvQAAYbwAAOI8AIDfvAAgzz0AAD69AACBPQBACz0AQBk9AAACPADgQL0AoDW9ANCzvQCAdDwAwKc9AACSOwAAsjsAIB49AOAXvQCAgbwAAGO9AADmuwCA1rwAAM+7AABMvABgJ70AAG88AGCVPQBAJr0AADY7AKAdPQCA4zwAYE69AABpPAAATjwAgNA8AACrOwAA77sAAFC7AMCVvQAAHrwAgAO9AECKPACAaDwA4Ag9AMCUPAAAoDkAQEU9ALChvQBgSj0AQNi8AIA7vACAabwAwOi8AEDqPACgN70AgGy8AMCGvQCgFr0AALi7AACmvACgB70AoGU9AJCLPQCASTwAYAw9AAAquwAAlTsAgBq8AAAWvQDwwD0AAJq8APACvgAgRz0AoEw9AEArPQCAoLwAgPS8AAD9uwAASj0AYCI9AAA8vQDgh70AAKG7AABAvAAA/bwAYGa9AMD2vACAZ70AgFE8AABrvAAA7zwAAL48ADgDPgDAKD0AgFA8AFCfPQCgOz0AgJG8AAA+vQDApTwAsIK9AGB5PQBA4TwAwNI8AABBPACALLwAwJW8AICfvQAAfzwAYCa9AMB1vQAgob0AAMu8AIBTvADAozwAQB09AKBAPQBAiLwAAEW8AFCpPQBAmLwAwAI+APDHvQAAaLwAABC8AADgOQBAVr0AAO27AMCLPQCAW7wAwCk9AIBlPABAgrwAADS8AGAGvQBAmjwAYBw9AGCUPQCgKT0AQCk9AABIuwBA/LwAgBU9AAD4OwBAnzwAQI08AGC0vQAACLw=","chunkHash":"e936619520fa18b9d9a77379afee2e5eb532c0616dc54b622c0b7087e0d8d49f"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef main():\n    \"\"\"\n    Main function to run the mesh generation process.\n    \"\"\"\n    #...\n                        help=\"Number of points to sample from each mesh surface\")\n    parser.add_argument(\"--sample_id\", type=int, default=None,\n                        help=\"Process only a specific sample ID\")\n    parser.add_argument(\"--max_samples\", type=int, default=None,\n                        help=\"Maximum number of samples to process\")\n    \n    args = parser.parse_args()\n    \n    # Process a single sample if specified\n    if args.sample_id is not None:\n        process_sample_mesh(\n            args.sample_id, \n            args.data_dir, \n            args.output_dir, \n            voxel_size=tuple(args.voxel_size),\n            smooth_iterations=args.smooth_iterations,\n            decimate_target=args.decimate_target,\n            sample_points=args.sample_points\n        )\n    else:\n        # Process all samples (or up to max_samples)\n        process_all_samples(\n            args.data_dir, \n            args.output_dir, \n            voxel_size=tuple(args.voxel_size),\n            smooth_iterations=args.smooth_iterations,\n            decimate_target=args.decimate_target,\n            #...\n```","range":{"startLineNumber":316,"startColumn":0,"endLineNumber":343,"endColumn":0},"embedding":"ABCEPQDAaT0A0A0+AACUvABgxr0AQHq9AIAKvAAAGLsAAFo8AMBLPQAA8DsAYFC9AADFvADAgL0AgLC8AICPPQBgk70AQKA8AADDOwAgDL0AQKs9AECnPQDA7DwAAFo8AIAHvACgFj0AAN87AIDyPABABT0AABi7AABovACAHLwA4HS9AOAqvQCgp70AgEo8AABXvAAAdDwAQOy8ACA8PQDAlD0AQNy9AACgOgAABLsAAEa7AADevAAA5LwAkJa9ACCHPQCAV7wAAPS8AABuPACAujwAAPi8AAA4ugBArTwAgAg8ACCPvQBgDr0AoBS9AIDiPQCAmTwAwPG8AEAIPQCAXTwA4Dc9AIDHPAAAY7wAQGe9AMCpvADAPL0AgN28AIBzvAAQq70AAMc7AICUvACAezwAAP67APCTvQAALLwAAJg7AMAsPQBgLD0AQM88AICZvQDghb0AwEq9AAAwugDgbL0AYCy9AECovACAY7wAEK29ABCSPQCARz0AwJ48AMCYvACAOb0AQDo9AOAQPQDAszwAAJo8AICbPACAGrwAAOQ7AABDvQAA0jwAgDA9AEAlvQCA8jwAgJG8AIDvvABgPj0AgK48AECvPABAhjwAMLM9AAA+PQAAKrwAIAO9AACDvQBgBz0AANg7AMCNvAAAGL0AgOU8AECEPQAAtLoAgGy9APCbPQDAwTwAgBq8AICjvAAAgbwAIAy9AKABvQAAPLsAoB49AIAePQAwgD0AgNW8AACbPAAAFLsAAKC6AIBEvAAAErsA4Me9ALDPPQAAODoAYGo9AAAAOgBgNz0AAF49AIDTvADg0D0AAHm9AGBDvQDAoT0AQN68AABxPQAACDsAQNg8AACkvAAAYDkAgPi8ACABvQAAR70A4Aq9AAA+vQDgUr0AIEs9AKC1vQDAjjwAMJK9ABDBPQCAAr0AMKC9AACcuwCgDr0AgDm8AADCvACA6TwAsKa9AAAFvACA37wAwBw9AMBPPQCABD0AQBK9AEDmPACAvLwAkKA9AACMvACAhLwAsJg9AICsvADAoT0AQJK8AMA2PQAAhzwAgJG8AMCovAAAHD0AAB29AIAKvQAAaDsAgH69AIBNvACAybwAgJ28AAC5vAAAEDsAwJQ9AIBGvQAAR70AAP27AIADvQDgij0AACK7AEDpPQAAtrwAQJg8AAACvAAAqLoAkI09ACAGPQBA5bwAYCK9AADYugBgcT0AgC28AEAivQAAUbwAAGY7AAAFvQAAQbwAwN88AAAyuwCAwjwAANi6APCbvQBAorwAgAq8AKAZPQCAxzwAgOI8AICFvAAAAL0AQJ89AABUPABAsjwAAKU7AOBJPQBA+LwAAK07AGAlvQBAAb0AYDg9AACaPAAA0DoAAMS6AADEugCgeL0AALA7AEC2vACAIz0AAC88AIBDPQCAO7wAcOy9AICLvACABzwAgEs9AIDIvADAJL0A4CQ9AAAqvACQoD0AgM88AEC+vAAAi7sAAAi7AICFPQAAIT0AQGs9AAAUPQAARD0AAB48AKBIPQCgr70A4Aw9AMCqPABwjL0AAGC5AKAzPQCATD0AQM28AEAoPQDAl7wAgJ28AADuPAAAXjsAAOs8AEAtvQDgDz0AgBa9AIDLvAAACrwAoPc9AMAvPQDA6LwAgBo8AICYvACAgDwAYD89AACeuwCgUz0AoE49AIBJPADA37wAgG49AGB7vQAgUj0AwN28AOAUvQDA2TwAgIy8AGBIvQDAg70AQM+8ANCRPQDA/LwAQIU8AEAhPQAwrz0AgBO8AMCOPQDwtD0AANQ7AADAOQDgmL0AADW8AHC2vQCgBD0AAJw7ADCMPQBgRj0AcME9ADCAPQAApLsAIFo9AADMvACAOb0AAGS8ACArPQBgO70AAJm8AKCHvQCAvrwAAEe9ABDFvQAAgzwAwI48ACBfvQDAibwAwBE9AEALvQDgjD0AIF29AEBMPQAgGj0A4Jg9AAAHvAAgD70A4AO9ABDLvQAASrwAMIg9AICVvACAzDwAYCE9AACdPAAADbwA4Hm9AIBcvAAAJLwAQAa9AMCZvAAAlb0AwM08AOBdPQAwt70AALE8AEAJPQCgPz0AoHq9AABaPAAAjDsAABA9AADtuwAAGLsAwL68AGAXvQAAhjsAwMS8AACAuQCAEDwAACG8AACoPAAAPDwAQFQ9ANCPvQCgID0AAE29AIDEvAAA07sAAEW8AIAOPQAAubwAQMe8AEAxvQAgH70AADg6AACiPACAMbwA4Ks9AEChPQAAubsAgCY8AICZPABApLwAwIq8AAADvAAAvj0AABa9AFgEvgBAmjwAwDY9AMAbPQCAR70AAIC4AEC3vABgEz0AwFI9APCCvQBQlr0AgPG8AIBEvAAANb0AwGa9AACAuQAAc70AoCs9AADmvAAADjsAgLw8AIDmPQBA6zwAAGA6AKDKPQCASz0AQJI8AEA+vQCAjzwAIDK9AABNPQBAhDwAgHA8AAAIugAAi7sAQDu9ABC5vQCAbTwAQMO8ACBXvQBwor0AQP28AIDBvABADj0AQF09AOBbPQAAijwAQMO8ANCVPQDgLr0AsOM9ALCkvQAA5LsAgJe8AIBYPACQhr0AAC68ACB/PQCAObwAACI8AAAiPAAAHrwAgBM8AIANvQAAXjwAwNE8AABwPQBAszwAoIQ9AEClPAAA3LwAAPQ8AIBYvADgGz0AgGc8APDnvQAAhrs=","chunkHash":"08674ca1ff7211b20f7235c0943847ff6cdce8e0fb6ab2a07df1029d88e08374"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\ndef main():\n    \"\"\"\n    Main function to run the mesh generation process.\n    \"\"\"\n    #...\n            sample_points=args.sample_points,\n            max_samples=args.max_samples\n        )\n#...\n```","range":{"startLineNumber":343,"startColumn":0,"endLineNumber":345,"endColumn":9},"embedding":"AKBwPQBgSD0A2AQ+ACAAvQCwsr0AsLm9AABiuwAAuzsAAFw7AADIPACALbwAgF69AECVvADgFL0AgO68AKCpPQBgS70AgHs8AIAaPADAqrwAoL89AMDTPQDgBz0AALw8AIBwvACgCz0AAAg6ACBBPQDAqzwAAMA6AADuuwDA3LwAQAq9AADOvAAgm70AANg6AICePACACDwAAE+8AGAWPQCAcj0AIMy9AABeOwAAhLsAAJc8AIDRvACAA70AAHu9AADMPQDA3rwAgKy8AABmPACgGj0AwCK9AAAsuwCAMD0AACA5ADCKvQCgTL0AYD+9AIDFPQAA4zsAwFa9AMA3PQDA2jwAwEI9AOAwPQAgeb0AgIS9AAAqvAAgh70AwCC9AABOuwDQwb0AwIM8AACxvAAAFTwAAIc8AHCCvQCAajwAQI+8AIBxPQBApDwAwLk8AMBgvQCgN70AYEq9AECXvABgNr0AwB29AMAVvQBAwbwAsKS9AKCoPQCgCT0AQOg8AEDUvABABr0AQMo8AEDvPAAAqzsAAN08AABQOwAAgrsAAC08AEASvQBAAD0AQMI8AGBbvQCQgj0AAFQ8AIBCvQDA4zwAwI08AIBcPAAAhzsAMLM9AEAaPQAA7TsAAGi8AEBevQAAUjwAwMG8AEAfvQDA8rwAANc8AKAiPQCAF7wAYFq9AAChPQCAIjwAAE28AMCnvAAAMLwAQP28AEDrvACAzrwAYCY9AMBkPQDAAj0AgBC8AIDnPACAM7wAAAq8AICCvAAAm7sAsOS9AJDzPQAAJDsAAHQ9AABIPABAMD0AgE89AAAJvADAlT0A8IG9AAD0vACgZT0AgB69AEBVPQCAjDwAgBs9AADguQAAYjsAgIK8AEACvQBgfr0AALe8AADJvADgWL0AQFU9ABDDvQAAcjwA0Im9ALCYPQDAG70AoKG9AACsuwDgC70AgAc8AIASvABAEj0AYJy9AADwuwAAlbwAwKI8AACjPQAAvjwAwKy8AIDkPAAAFjsAMK49AACzvABgFr0AEKA9AGAgvQBwrD0AwBq9AICAPABgND0AANm8AAAmuwBAgDwAQLG8AEA/vQCAZLwA4Hu9AADDuwBgXb0AgDg8AKBEvQAAELsAgDY9AOB2vQAgH70AAJS6AECqvAAgtj0AgIa8ADDtPQDAoLwAgDo8AIBfPAAAb7wAAHQ9AEC/PAAAOLwAgK68AIAjPADQkD0AALQ6AOBjvQAAyzsAgMS8AACgOgAATrsAQKA8AACxOwAAHzwAAAK8ACBuvQDA27wAgLS8AGAtPQCAeTwAgMs8AADuuwCAMDwAYHU9AACgPABAsbwAAEC5AHCWPQBA1bwAgC48AIDDvADAqrwAACo9AABcPACAGrwAQNW8ACANvQBgi70AgKM8AMChvACAHz0AAPu7AKCAPQCATjwA8Ou9AABLvACASDwAQGg9AIAHvQAAA70AYBI9AAA0uwDQzj0AAC48AACwuQAAH7wAALu7AABIPQBA1jwA4FI9AAAMPADAEj0AANw7AGAtPQCwj70AQDY9AMD/PAAghr0AgF08AOAMPQDgQz0AgO68AIBpPAAAAb0AABO9AIAtPACAfLwAgJo8AIA4vQAA1TwAgIW9AADvvACAk7wAwMU9AOBZPQDAJ70AgAC8AIArvACAEzwAgPE8AADPvACAdT0A4HI9AACxOwBA5LwAUIA9AKCOvQCgRz0AQJq9ACBRvQBAMD0AAHe8AEALvQBAV70AQPm8AKBVPQDASr0AwNA8AAAsPQCwyD0AgHO8AIBQPQCQsj0AABY7AAByOwDQmL0AgHQ8ANCdvQCAID0AAFY8AMB5PQAADz0AsNE9AMBHPQCAkbwAAAw9AKA1vQAgGb0AgEi8AKA6PQAAgb0AYAi9AFClvQAAHjwAIGG9ANCyvQBgHj0AAJ48ANCJvQAArLwAIBQ9AGA5vQBA9jwAEKW9AAB6PQDAtDwAcJ49AAA0vABAzrwAgJ+8ANC0vQAA+bsAgKA9AOAGvQBAyTwAABo7AACFPAAAwTsAkJ69AIDZvAAAsrwAQPm8AAAguQDAR70A4CQ9ADCIPQBwq70AgEs8AIBlPABApDwAgIy9AGB/PQCABzwAwBI9AIDbvADAq7wAAN28AOAwvQCAoDwAAAA5AAC6uwAAiTwAAEY7ACABPQAAyzwA4As9AOBKvQBA3zwAgFS9AADzvACAKL0AgJ68AAD1PADgGr0AQI28AIAZvABgBb0AAOs7AABQPACADTwAQHc9ANCrPQAAjbsAAI88AIBwPABA6rwAQOa8AIAsvABQuz0AgBG8AGDSvQCAAT0AQDw9AAA5PQDAIL0AAES7AABuuwAgGz0AwD89AOB0vQAgjr0AwMW8AMA3vQDAD70AgO+8AABJPAAgob0AgN48AGBjvQDgDj0AADU9AHDVPQAA6jwAALO8AMDaPQDgKT0AIEk9AADPvACgDT0AQBi9AAA/PQAApTwAQMw8AIA1PAAAyLoAQE29AOB4vQAASDwAALG7AEAHvQBQpb0AwIq8AMAvvQAAbTwAYI09AKBjPQDwiD0AgHW8ABCSPQDAd70AUAM+AACjvQCAWLwAADG8AACuOwAwoL0AAMU7ADCBPQCAC7wAAHi6AIB/PAAA07sAwN48AGAOvQAADzwAAFg7AMAyPQDABj0AgGI9AABougDAgrwAQL48AAA4OwAgNj0AACO8ABDKvQCA+zw=","chunkHash":"0bc3cabf5a6b6da7134bc71ae72471a59c326bdb58497bfe4b6d5edf9401e4c5"},{"text":"File: `utils/mesh_utils.py`\n```python\nimport os\nimport numpy as np\nimport glob\nfrom PIL import Image\nimport sys\nimport open3d as o3d\nfrom skimage import measure\nimport trimesh\nimport pathlib\n\n# Add parent directory to path to import config\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\nfrom utils.pointcloud import load_mask_volume\n\ndef create_mesh_from_mask(mask_volume, threshold=0.5, voxel_size=(1.0, 1.0, 1.0), \n                         smooth_iterations=10, decimate_target=5000):\n    #...\ndef sample_points_from_mesh(mesh, n_points=1024, include_normals=True):\n    #...\ndef process_sample_mesh(sample_id, root_dir, output_dir, voxel_size=(1.0, 1.0, 1.0), \n                       smooth_iterations=10, decimate_target=5000, sample_points=1024):\n    #...\ndef process_all_samples(root_dir, output_dir, voxel_size=(1.0, 1.0, 1.0), \n                       #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":236,"endColumn":0},"embedding":"AEDMvAAAiT0AAFc9AGArvQBAPb0AQFa9AIBaPACADj0AQJW8ACAaPQAANTwAwMs8AOASPQAAbbwAgIW8AFCePQDAsrwAALI8AIDwvAAAiTsA0Kw9AEDUPQAgKz0AwNa8AOAavQCgKD0AwEs9AIAcPADApDwAgHE8ANCHvQCAzLwAcLe9AADEuwDQqL0AgEU9AADRuwBgKT0AgOK8AACEuwAQnz0A4IC9AOAePQAAqzsAAFE8AKA4vQAA8bsAEKS9AEDpPAAAjrsAAIC4AECHPQCAWrwAIFi9AMCVvAAAc7wAgAS9AIBSvQCABrwAwBA9ACCxPQBA6bwAgMW8AAB4PABgdT0A4E49AIAyvAAAa70AAIm8AAA5vQCALr0AICw9AADcvACA070AYEg9ACAevQCAR70AAEI9AJCMvQBAK70AYC69AAB3vACAKT0AgDA8ALDevQAgVb0AgNK9AACAuwAQhL0AgB29ABCCvQAAC70AoBC9AGBCPQAAfjwAQMm8AMDJvADwpb0A4BQ9AAB6OwAAi7sA4GM9AMDlPABgUD0AQPM8AIA+PADwhj0AwNO8AADuOwBgqj0AAG08ACA4vQBgKz0AACC6AKAaPQAAIDsAgFE9AAD0PACQir0AAJ48AJCHvQAA9zsAgJM8AMDyvAAANDwAQMe8AAAxPQAAcLwAoAe9AIBRvAAAfzwA4Bu9ABCSPQDw0L0AQO28AACnuwCAND0AgBw8AIBWPADQgT0AMJm9AIDePADgTj0AAP08AACivABgTL0AQF+9AGCmPQAAKDsAgL08AIB4vQAgGT0AALU8AADCvABApzwAoI+9AEC9PADg3D0AoCa9AABjvABAz7wAAAM9AABoPABgHz0AQHE9AMBPPQDAIr0AAOu8AEDLvABQub0AAMA5ANCDvQDAtTwAsKu9AGBMPQAAoTsAQO68AOARPQDgfL0AABg8AMBuvQBgRT0AAJK7AAAnvADAvbwAAOA5AIDaPADQ0j0AAJw7APD5PQBAhjwAgHk9AKAVvQCAWDwA4Oo9AOAXvQBwjz0AgHO8AECdvACAVbwAAHS8AOAwPQBwkz0AADQ7AGAWvQAARLwAAKs7AICTvAAgP70AQN48AADXOwAAXrsAoDo9AAClvAAggb0AwKg8AMBbvQAACz0AgLi8AICpPQAAWLsAgD49AICEPQBAujwA4E09AEDyvAAARLsA8Ie9ACAmPQDAJj0AwIo8AIDEPACAW70AgHe8AAAovAAAd7wAQO28AACeuwDA8rwAkIQ9AIDTvADAkzwAgE68ACAKPQAAZzwAgHA8AGA1vQBAnLwAwLc8AABsOwBgOT0AgH48AMBFPQAACLoAgDm8AMCdvAAgr70AAMS7ACAuvQAAODsAgCA9AMDFvADAo70AALo7AABiPACA0DwAACG8AKClPQAADbwAwLq8AEC2PAAAVrwAIHM9AIBjvQBwtL0AYDc9AAChvADAGj0AoC09AMCIPACAEL0AAKA5AAA9PAAA67sAgP88AIBDPQAA5zwAoIM9AAA4PACgxb0AABa7ACC6vQCAyL0AQNU8AIBhPAAAEDsAgMC8AEDxvAAAqDoAQNu9AGBZPQCA4rwAgJg8AIAhvQCgib0AgEC8AAA0PQAA7zwAQD49AICDvADA+7wAAPG7AEDRPAAAabwAgAQ9AACPvABQmj0AwCE9AIBvPAAAjbwAAFs8AFDtvQAAvTsAwFK9ACAnvQAgjD0AYF29AEBOvQAAATwA0JC9AGADPQDgcL0AAEA8AICLPACA6jwAgIk8AEBGPQAgPz0AQKe8AMDWvADAj70AoEq9AABFvQDgDL0AcJ09ADCjPQCgCD0AAEM8AOBhPQAAizsAAKy8AABYPADANr0AAFG8AEC0vACAGzwAwL68AMA/vQDAsbwAgIu8ACCUvQAA1jwA4Dk9AECBPADgKL0AYA89AADTuwCQkz0AQKy9AMDbPACgLD0AAKg7AADEOgAgU70AaA2+AOAlvQAA0TwAAHo9AECDPADAWT0AoOY9AACAvQCADzwAADa7AMDwvAAA0bwAQJC8AAAGvAAgCb0AwKQ8AIBKPQDAG70AgNU8AEC4PQAAaT0AQJq8AMBoPQDAjjwAABM8AMA/PQAA+7sAgEI8AABAvQAA3zsAQPO8AID+PABwmj0AQIY9AABYOgDAob0AACA8ABDyvQAAfDsAQJK9AADSPAAAlDoAwKy8AECzvACAkr0AwNq8AMApvQCAX7wAoBu9AABlvAAA67sAQCI9AABWPAAAXDsAQNQ8ACAdvQDA87wAQC69AIDFPABgUj0AAHA7AJC9vQCAGL0A4DA9AEAjPQCA9zwAgNy8AECXvADAhTwAANc8ALCUvQAgkr0AQM48AAB4OgAAsbwAgAy9AADgPADgFb0AgDM9AICRPAAgmD0AgJ+9ACBkPQBAvLwAAAg9AMCOvAAAyDwAABu8AAD8OgAAIj0AAPa7AABXPQAAXjsAIAM9AAC+PAAA5DoAwMw8AAA4vQBggD0AgLY8AIASvABAN70AAJi7AGBLvQBA07wAYHA9AGBcPQDAlrwAwHS9AKB0PQAAsrsAsPk9AMCLvQBgIj0AAKw8AECkvABQx70AQOY8AIBjPQCAfrwAQJQ8AAA0vAAgT70AgGw8AIBVvAAA2bsAgLY8AACtuwBATL0AwBQ9AICyPACAcrwAgMK8ANCovQAA8DoAwIM8AEAbvQDAGz0=","chunkHash":"8b415aad90fdfd0578285f393d2584ce22c8b1984be8cec97569b8add23bef1a"},{"text":"File: `utils/mesh_utils.py`\n```python\n#...\n                       smooth_iterations=10, decimate_target=5000, sample_points=1024,\n                       sample_ids=None, max_samples=None):\n    #...\ndef main():\n    \"\"\"\n    Main function to run the mesh generation process.\n    \"\"\"\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":236,"startColumn":0,"endLineNumber":349,"endColumn":0},"embedding":"AGBpPQAARj0AkNc9AMCKvACgor0AwGm9AIA+vAAAgzsAABK7ACBmPQCADjwAIFW9AAD1vAAQq70AAIq8AOCYPQBAG70AgFk8AEDMPAAAHbwAQME9AECePQAAGD0AQJo8AIDevADAVz0AQI48AIDWPABAsTwAAAg8AIBpvABA6bwAgLO8AIA4vQCgv70AABA8AACWuwAANDwAwCq9AGBpPQCgaz0A4Oa9AIANvACAerwAgJ28AACIOgAAkDoAwGy9AKDoPQCAbLwAgN+8AID4PABAxjwAYDO9AICcPACAHzwAQL08AACgvQBgIL0AgOW8ADDSPQAAIzwA4CG9AMCpPADAHD0A4CY9ACAuPQDA67wAYEy9AEDtvACAnr0AoEW9AICtvABgt70AANg7AEDMvACAZDwAAEk8AOABvQAAqDsAQIq8AEBWPQBAozwAgKQ8AGCDvQAAmL0AwIq9AAB3vADgS70AQN+8AABOvQAAJDsAkLq9AJDAPQCA6TwAAGA7AACKOwCARr0AAGs8AKA1PQCACjwAIDg9AAA8OwAAu7sAACQ7AKB9vQAAqzsAgCk8AKCCvQCQjz0AAP87AABAvQAAFz0AgKY8AOAaPQAAgzsAYLM9AOBXPQAAYrsAgIm8AOCOvQAAJrsAAGi7AMDHvAAAHL0AwBQ9AKCKPQBAuLwAgFG9ADCBPQDAzjwAACG8AIAPvABAjrwAQMW8AAC2vAAAx7wAYHk9AIBqPQCgGj0AYA29AICAPAAAJjsAAPw6AEDfvAAAgDoA0MC9APDRPQCAX7wAQFI9AAB3PACArTwAIGQ9AED+vAAwgD0AQC69AECUvADAUj0AAO+8AOCIPQCAuDwA4BM9AIBfvADAhLwAAEA6AAAUvAAgOL0AgBC8AED/vADA87wAQH09AMDUvQCAozwAEMi9ANDGPQDAibwAMIG9AIAhvQBgS70AAGi6AACYPACgBz0AEKW9AADAuwBAPb0AAEM8AMCGPQAAAAAAQL68AMAsPQAACDoA0Kw9AIAtvQBgJb0AIJo9AOAnvQDQuj0AIGG9AAAMPQBA4zwAALW7AEDCvABAoDwAAEe8AMAbvQAADzwAEKO9AABgvABgIr0AgJ08AABMvQAABzwAoIA9AEBlvQCAxrwAAGq8AIA1vADgHT0AAB67ADDiPQAAxLwAgEy8AAB6uwAAhDoAQH89AABLPACAgLwAQNa8AIAnPACAnD0AgIM8AMBAvQCASrwAANQ7AAD8vACAeLwAwJQ8AEDWPACgLD0AAKW7AHCFvQDArrwAQDK9AEDCPACAETwAQBc9AACrvABAurwA4AM9AIAIPAAA17sAgLa8AICKPQBAsrwAQJk8AMD9vACAi7wA4AY9AIBSPABAqzwAgMa8AMAOvQCQi70AAJS6AED9vACgLT0AAFe8AGCQPQAA0LoAQL29AIAhvAAAQDkA4A49AIBivABA97wAAGA9AACBuwDgvz0AALM7AAAwvACAKTwAgGS8AIBKPQBAMz0AYFs9ACALPQAA9TwAAMU7AEChPABw1r0AwMI8ACARPQBwqb0AAAC7AECAPAAQiD0AwCG9AKAYPQBAnrwAQA29AEDxPACAEbwAAKI8ALCTvQAAgzsAgPe8AADRvAAAFzwA4OY9AKCEPQAgFr0AgB08AIAEvAAAObwAAA49AAAvvACggj0AgFU9AIBmPACAFL0AIEY9AAC6vQAApzwA4FG9AEAPvQBA5TwAAKO7AEBNvQCARb0AgM68AHChPQBAAb0AANw8AEBZPQAgwz0AgAA8ACAiPQBwmz0AAOQ7AEC2PADgrb0AAHi7APDFvQAA9jsAQK08AOA4PQCAzDwAwKU9AECyPQAAajsAkJU9AMAlvQCgHb0AAEs8AMAvPQBAMb0AwLa8ALCXvQCAMLwAIBW9AFCpvQAAljwAQB09AMBmvQBA6bwAwCk9AADlvACAhj0AsJO9AKCDPQAAyDwAgF09AMCXvABA17wAgLW8AKCYvQAAZLwAgHs9AECovAAA1DsAAAI9AACLPAAAcLsAwJK9AIBAvADA97wAwMi8AAA+vADAa70AYAU9AFCXPQDQor0AABM8AECwPACALz0AYGC9AAAIPQAAQrsAQNs8AIAqvADAx7wAYCu9AEATvQAAOLsAQK+8AMAUPQAAtjsAAJU8ACAePQCgBj0AgBY9AFCNvQCA9TwAwDy9AACFuwAAg70AAAy9AIB1PAAAMLwAQLi8AMAlvQAgNr0AABM8AIC4vAAAKbwA4GY9AABfPQAAtLoAgPs8AACrPACAOLwAgCu8AEChPABQvD0AoDW9AMDSvQBA5DwAIHQ9ADCDPQAwl70AAP+7AABxPADgIT0AYJI9AGBlvQBAWb0AgJi8AAD3vACgS70AAEq9AAD6uwDAVb0AgNY8AMBVvQCQgT0AgBs9AHD1PQAAkbsAgDY8AICkPQCgBz0AAJQ7AOAZvQCAizwAYCy9AIA0PQDAFD0AQCk9AAABvAAALLsAAPm8AGBgvQAASDwAAHG8ACAPvQAgc70AANK8AAC5vAAAmDwAgGc9AMBBPQAgHD0AANC7ADCZPQCAhb0AAAQ+ADCTvQAAfDsAgPG8AIDtPACAP70AAAA7AFCdPQCARrwAAIs8AADcuwAANbwAgKc8AGBOvQCAozwAwPY8ABCDPQBADT0AQC89AAC0OgCgGL0AAFM8AAADvACgYj0AwKa8ALCEvQAAijw=","chunkHash":"a42bc860de1d7dbfaa8b4a402b44a7dce7c3bb251560db0d284462f46add1246"}]},"file:///teamspace/studios/this_studio/utils/pointcloud.py":{"hash":"3f8c1b4b1f855ad67ee06a444ec123fb5ebbf4392f1f1ccf098fca74bc349633","entries":[{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef load_mask_volume(mask_dir):\n    \"\"\"\n    Load a complete 3D mask volume from a series of TIFF slices.\n    \n    Args:\n        mask_dir (str): Directory containing the mask slices\n        \n    Returns:\n        numpy.ndarray: Mask volume as numpy array with shape (D, H, W)\n    \"\"\"\n    # Find all TIFF files in the mask directory\n    mask_files = sorted(glob.glob(os.path.join(mask_dir, '*.tif')))\n    \n    if not mask_files:\n        raise ValueError(f\"No TIFF files found in {mask_dir}\")\n    \n    # Load the first image to get dimensions\n    first_mask = np.array(Image.open(mask_files[0]))\n    height, width = first_mask.shape\n    \n    # Create empty volume\n    mask_volume = np.zeros((len(mask_files), height, width), dtype=np.float32)\n    \n    # Load all slices\n    print(f\"Loading {len(mask_files)} mask slices...\")\n    for i, mask_file in enumerate(mask_files):\n        mask_slice = np.array(Image.open(mask_file), dtype=np.float32)\n        \n        # Ensure mask is binary\n        #...\n```","range":{"startLineNumber":15,"startColumn":0,"endLineNumber":43,"endColumn":0},"embedding":"ADCJvQCABbwAoAq9AGAfvQAQoL0A0Oy9AOAzPQCgoT0AYCS9AIBSPACAM70AQBA9AGASPQAgAL0AQJ08AIAgPQAA8zsAgFs9AAAAAAAAwzsAQCs9AIAHPQAAAAAAAFW8AHCGvQBAGb0AwB89AAAAuADAOD0AAGk8AKCovQBAUb0AAKC9AIAwPAAA5rwAgEo8AOALPQAAmT0AQBi9AMDJvACg1D0AwDK9ACAqPQDAlbwA0Jc9AGBTvQBA8jwAoGe9AAD7OwDAML0AAIQ7ANCGPQDAXr0AAKK9AEAHvQAAnDwAoAO9AECtvACAK7wAALA6AIDOPAAgL70AQMW8AAC1OwAwrD0AwKg8AIBcPABAL70AYEq9AAABvQAAk70AkII9AOBSvQAA4bwAIHU9AMCZvQCA5rwAoCw9ABDKvQCgUr0AQPG8AAC5OwCAeLwAgHY9AGB5vQDgZ70AgCy9AIAGvAAAXrwAANO7AICVPADA4jwAwK68AEBlPQDA97wAYBK9AGAfvQBgIb0AMK89AKAcvQCAHLwAwFo9AMACPQDgET0AsJc9AMA4PQAwpz0AALE8AKBPPQBgZT0AAFw7AGAAvQCwoD0AQNC8AADbvABA8jwAQDE9AEClPAAgQr0AAIA8AAApvQAAmDoAgD69AADJuwAA07sAgOK8AAA8PQDwAr4AAI67AADduwBAKj0AAEK7ACB8PQBgwr0AAM68AHCVvQCAID0AwIG8AOAwvQBwmz0AoFW9AAAxPACAOD0AALm8ADChvQAgab0AoF29AKCrPQAA1bsAAPU8AKAkvQDAdz0AYHo9AIB2vQAAM70A4Lm9AAA2uwAgRz0AALO7AACsugCgxb0AQAA9AGA2PQAAzTsAAGC5AMD5PABgfz0AAKM8AIBsvABgIr4AAJC6AABEvABART0AYGi9AIA1PACAyjwAYDC9AIASPQDA47wAYDu9AMDvvABgXT0AIA89AIByvADgCb0AgF49AEABvQAAxj0AgEC8ABDqPQAAgLgAwC49AACxvADAPT0AAIm8AACEPAAAKDwAgEc9AABMPQCAFjwAgEi8AHCaPQCAPDwAAM48AADIOgDA57wAABK7AGAAPQAQ2b0AAO+8AACHvAAAOLsA4G09AEDDvABAk70AQDI9AGAJvQBAhzwAgC+9AKCwPQAAWTwA4FA9AECEvABgET0AAIy7AAABvQAAgzsAsJu9AMAsPQAAILwAcIw9AMDTPADAR70AQNw8AIC5vAAAmLsAAEe8AADpOwBAzjwAAAA9AADqPABAHj0AgLM8AABKuwCAgjwAAJO8AIBRvAAAqDsAgEG8AMAkPQCg1z0AwOU8AOAHPQBAgrwAgDe8AIAVPQAgXb0A4BM9AMB3vQCgFD0AAHa8AACEvACQmL0AgD08AACwPAAAbDwAwJO8AABVPQAAlLsAoFY9AAAdPADAnDwAMOU9AIAZvABAar0AYA89AAB4ugCAObwAgGQ9AIAhvAAAXLsAAP07AGA6vQDAizwAgKU8AMDqvAAgU70AgCs8AACYugCgk70A4Lw9ALDNvQAgA70AgNU8AABougBA0jwAAMK8ACBbvQCALDwAwEy9APCIvQAAML0AgCu8AMAYPQAgYb0AAII7AACVvACgAr0AgFE8AIB5vAAA1LoAYA89AAAyuwAAQLoAIEI9AEAAvQAAQLkAgKk8AABguQBAz7wAAAi6ANCDvQDApzwAABi7AACxvACAtj0AkJq9AAAUOwAAMbwAmAK+AABKvADANj0AQOm8AOCbvQBgDL0A4FC9AIA9PACAC7wAwMa8AABbvADAxbwAAO47AIAzvQDAIL0AgPg8AMCtPACAUTwAQJ08AFCdPQAQpr0A8L69AAAaOwAADbwAgGy8AIBpvABggj0AgEG8AKBtvQCgVL0AYF29AMCwvAAAVjwAYDE9AEDRvACgTb0AgC88AACxPACAGDwAANG7AECkPABA8j0AQP+8AACpuwDA6rwA0Oe9AABwvQDwnT0AACk9AIC3vACAVzwAIE49ACB2vQCAPLwAwCU9AIDsvAAAvbwAwMc8AIBXPAAAOjwAADY8ACAlPQCAbb0AALU7APDSPQDAyDwAAAC5AID1PAAAZLwAQKk8AACaPACgQ70AIFI9AMDOvAAAVjwAwIy8AGAmPQCQhj0AoB09AKAevQCQhr0AAIA6ABCBvQAApjsAgEC9AEC5PABAQz0AoAS9AOAGPQCgQr0AAEg8ADCPvQAA9TwAIBC9AKAFPQAgG70A4AA9AKAQPQCA0DwAgEY8AACQOQBAEb0AAJw6AMCqvAAA1bsAwOy8AABcvQCAADwAgGs8AABcvACAij0AYDi9ACAkvQAAdDwAwJi8AAB6uwCA/bwAwB49AADiOwAArDwA4Gw9AAC0uwAAZbwAQPk8AEDkPAAA0rwAwGW9ACA4PQCgTL0AwPm8AFDVvQDAjjwAALU7AOBbPQAAxjsAgO28AIDdPAAAMD0AAG+8AACgOgBA4DwAgJI8AAAZvQCAdz0AAOk7AMDqvACAGr0AwLC8AADkPADgmL0AoAK9AACLPAAAaDwAYKK9AOALPQDwsj0AYBc9AEAnvQCAEzwAAAs+AKByvQCAnL0AgFU8AADzOwAAuLsAAOs7AADIPABgY70AQNE8AMAOPQAADb0AQJ89AECOvACAjT0AkKO9AACLvQAAFLwAAMC4AAAcvQBA7LwAgPw8AAB4uwBAIj0=","chunkHash":"59c0be708c3aef59be6f4003d9d19519eba5a865bab3141328c2d2621863c18e"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef load_mask_volume(mask_dir):\n    #...\n        mask_slice = (mask_slice > 0).astype(np.float32)\n        \n        mask_volume[i] = mask_slice\n    \n    return mask_volume\n#...\n```","range":{"startLineNumber":43,"startColumn":0,"endLineNumber":47,"endColumn":22},"embedding":"AEBKvQAA5DwAQDu9AGAEvQAQn70AgKa9AGBBPQBQjT0AAAq8ACADPQCAZLwAAL08AIAZPACALLwAwMQ8AIBZPQAANbwAwEY9ACCJvQCATjwAgBy8AGCGPQBAxjwAgBY8AHCQvQCAN7wAoA49AIA6PADgRD0AgME8ABCRvQCgW70A4EC9AIAcvAAA3LsAwLG8ACBMPQBgLT0AwOe8AIBuvAAgzD0AgJa9AOA0PQAAyrsAgFM9AMDJvAAAWLoAkJy9AIDfPABAWL0AwOa8AMBIPQCAGbwAIKm9AAAWuwCA3jwAABO8AACvOwAAAbwAgJw8ACA2PQAAJr0AQL28AAClOwBAuj0AADi6AAAsuwDQjr0AABe9ACBjvQCAfL0AMJI9AEAMvQCAyLwAYCE9AACJvQAA0bwAkLg9AFDHvQBANr0AIGy9AAC2OwCAybwAAKM8AIAevQBwob0A4GK9AMCuvACAarwAAHS8AABUPABAgrwAAHy8AIA+PQDgJb0AgHA8AMCkvADgUL0AQJk9AKAJvQAAM7wAAGo7AIA8PQBA8jwAIB89AOAgPQCgzj0AgGq8AMCZPAAwij0AAMA5AED+vAAA/jwAAAC8AAA8OwAAF7wAAKo9AACtvABQt70AAAw9AHCPvQCAHTwAANK8AEDWvAAAqbwAQIy8AADgPAAABr4AgCA8AACAvACgET0AgJe8ANCiPQAAub0AgHS8AADNvQDgVz0AAPE8AICfvADghj0AIDe9AMDxPABA9jwAACe8AEC7vQDAV70A0IC9AMBMPQAAzTsAgA89AGBivQAgXD0AAHk8AOA1vQBwkL0AIHS9AICwPABAgD0AAMK8AAAxvADAlL0AgKg8APCcPQDAorwAgJW8AMAfPQAA67sAgD88AMCPvACw7b0AAFu8AAASuwCgCD0AcOq9AECAvACA5DwAYES9AECWPAAA8LwAAF67AAALvQAgYj0AQJo9AAAjvAAAlTsAwGQ9AOAUvQDQxj0A4Am9AMCuPQDAzzwAYCE9AOAXPQCAWj0AQJY8AAAsPABA4TwAoAk9AMCTPACA1rwAoC+9ALCSPQDAnzwAgN88AACYOwAA/7wAgFq8AECtPABQo70AQNC8AIDAvADAtzwAMI09AOA6vQCgJ70AsJI9AADGuwCgGD0A8Im9ANCJPQAAibsAACQ9AEDOPAAA+zsAACS7AMAlvQDAozwA0KS9AEAUPQAA/DsAwHE9AOAMPQDAgrwAAIs8AABauwBgEb0AgEW8AMCaPAAAB7wA4CU9AADYuwCA2zwAAKo7AABEOwCAnzwAgDQ8AAC+vACAAzwAwEM9ACAzPQAAqT0AoBo9AIDbPACAtrwAADi7AABKPACwjL0AALY8AKBgvQAAgbwAAKq7AMAtvQAQo70AgEy8ACA+PQCAFjwAwLS8AGBsPQBAhb0AAAa8AMAoPQAA/DsA8N09AABuuwDAML0AgEc9AAB+PAAA2TwAQPQ8AEDsPACAebwAgCy9AAC9vAAAZjwAQOA8AID0vADgRr0AAIE8AIA8vAAg4L0AgHw9ADD+vQDgVr0AAK08AACAuAAAejsAgCK8ADCQvQBgGj0AQAu9AAARPACAtLwAADS8AEC3PADAZ70AgDi8AECiPAAATzwAALg8AOBkvQAA7LsAgH88AEAqPQDAtzwAAKU8AAC0OgDAgTwAYGM9AAADvAAAAr0AgBw8AEBAvQAAcDsAoDa9AMCivABQtz0A0JC9AEBCvQAA0zwA0O+9AAA7PAAgOT0AgDW9AAAuOwAA9LsA4Ee9AMCOPAAA5DoAAB+9AEAHvQAAebwAAAw8AEC7vACA7LwA0Iw9AECJvACgLz0AwIM8AJCSPQAAqb0AYIe9AED2vAAA8rwAABy7AACDOwBAUz0AAL48ANCvvQCAzbwA4FG9AIAgvQDAlTwAgBc9AEAXvQBQir0AgD08AECTPABgGL0AAAy7AIBcPABArD0AwCi9AEA/vQCgXL0AsMi9AIB5vQBAhT0AwDI9AKBavQBA3jwAkJI9AMBbvQCAObwAYEM9AEAvvQAAnbwAgBY8AIA7PQBAorwAAAI8AGBlPQDgaL0AANo8APCLPQDA0zwAQFE9AFCjPQCAeLwAAL07AICUPADQjL0AwCQ9AADqvABAHz0AQK28AECHPABgTD0AAK07ACAIvQCwj70AYCs9AKBfvQCASzwAoBi9AMC7PAAA3DsAQDG9AABkPAAgVr0AgIi8ACAhvQAA3DwAwN28AMDJPAAAq7wAoD09AECVPADgIT0AABQ9AIB4vAAATb0AwGu9AAA0PACA07wAgJK8ADCNvQCA17wAALw8AIDlPACASD0AoB+9ACBgvQAADrsAwIO8AAAuvQAAFL0AsI09AIBFvACgGz0AANs8AAAiOwAA9bwAADA6AIAVPACA9LwAwHW9AOB1PQCAHr0AQMq8AAALvQCADzwAAHg7AAABPABAxDwAABO9AEBNPQAAOT0AAKS7AIA8PAAgBz0AQOM8AACQuwAwnj0AgH48AMDAvACgOb0AAJi8AMAlPQDgp70AAD+8AAC0OwDgTj0AgIW9AADqOwBwyz0AIBc+AACgOgBAFz0A8MY9AFCLvQBgvr0AAAo7AABIOwCAIbwAgHM8AGAqPQDQpb0AABk9ANCQPQBgIr0AQDE9AIAqvADgJD0AMKC9AEBXvQCgFT0AAJM7AGAcvQDApLwAQJo8AIC2vAAgIj0=","chunkHash":"c6ebd7e82d2fed4c8832189fab689b0847e99fd86696959b64d9b9a0361c207b"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef create_pointcloud_from_mask(mask_volume, threshold=0.5, voxel_size=1.0, sample_rate=1.0, max_points=None):\n    \"\"\"\n    Create a point cloud from a binary mask volume.\n    \n    Args:\n        mask_volume (numpy.ndarray): 3D binary mask volume with shape (D, H, W)\n        threshold (float): Threshold for considering a voxel as part of the mask\n        voxel_size (float): Size of each voxel in the output point cloud\n        sample_rate (float): Fraction of points to keep (1.0 = all points)\n        max_points (int, optional): Maximum number of points to include in the point cloud\n        \n    Returns:\n        open3d.geometry.PointCloud: Point cloud object\n    \"\"\"\n    # Find coordinates of non-zero voxels (these are our points)\n    points = np.column_stack(np.where(mask_volume > threshold))\n    \n    # Apply max_points limit if specified (takes precedence over sample_rate)\n    if max_points is not None and len(points) > max_points:\n        # Calculate the required sample rate to achieve max_points\n        #...\n```","range":{"startLineNumber":50,"startColumn":0,"endLineNumber":69,"endColumn":0},"embedding":"AABzvAAgcz0AQNw8AAChvABwjb0AAOu9AIB7PADQnz0AgEw8AEADPQCAurwAwJc8AIDCPAAAzjsAgHO8AAAnvABA67wAAO48AIBePQDA5rwAQIO8AECRPQDAGj0AQI28ABCNvQCACzwAEKI9AAAwOwAAALgAAGg7AGAPvQDACr0AEMe9AGATvQCAeLwAABi7AMDpPAAgAj0AQD29AACOuwDwlj0A0Ke9APC1PQDAvjwA4FE9AACguQAgNj0AICu9AIAhvAAAPzwAYGC9AGBJPQBA1LwAsAa+AAATPADgEr0AkJm9AACmOwAAUrsAwBw9AGBDPQBAS70AANG8AAD5OwAgsD0AoGs9AADTPADgo70AQPC8APCAvQAA4TsAIEo9AOCjvQAAwDsAAC09AIBPvQBgQr0AAFo7AFDVvQAA0rsAwPm8AIDIvADA/jwAAAC5APDUvQAAPL0AoBi9AAAHvABAhLwAYHK9ACANvQAAzLoAwGI9AOATPQCAB7wAAOm7AAAxvACgXL0AQFI9AKAYvQDAt7wAAPE7AAAQPQDA3zwAYCE9AACVOwCgTj0AALg6AAAnPAAgsj0AgPA8AECRvAAA3zwAAAw7AMBkvQAAI7wAwJo8AEAbvQDgl70AABs9AEB0vQAAE70AACW9AADAvAAAwDwAwN+8AKAVPQAglL0AAJw8AIDLPABwmD0AAOE8AIDKPQDAVb0AwJi8ALCwvQBAlD0AAGA7AACIuwDA8DwA4CW9AIAYPABwjj0AQKi8AOB9vQAALr0AMIC9AIAmPQAAC70AgII9AMA3vQCgWT0AgD09AMDkvAAAEb0AsJ29AEBhPQAQ/D0A4CS9AMA8vQCgLr0AgDw9AIA5PQAAHTwAAD48ACAePQCgSb0AIBA9AIAUvADQ8r0AwNY8AACevACAJT0AIAS9AIAgPAAAILkAgNu8AABkPAAAirwAwLO8AKCEvQAAID0AYC49AADQuwAAwrsAwOQ8AMC8vAAgsD0AAHY7ABCDPQBgGr0AQKY8AAC6OwCAaDwAAAU9AABjPAAgcz0A8JU9AMDkPAAAojsAQIm8ACBYPQAA7DoAAIs7AIAiPACABr0AgMU8AAB4ugCA0L0AAN47AMD2vACABb0AAEc9AACKvAAALr0AIEI9AADSuwAAaz0AgCg8APCrPQBArjwAwNI8AAAgOgAAnrwAQJo9AMCyvAAAljsAgES8AAD1PADAcz0AAC48AABiOwAgJr0AgG68AMDyPAAAIzwAAI88AAB2uwAANbwAAI88AIBjvADA5zwAgJ88AACEuwCADjwAQLW8AADUugCAdTwAAEA6AMAiPQDwyT0AwA+9AABHPAAgRj0AwIi8AMApvQCglb0AAEg8AABnvADAtrwA4Dc9AOB6vQAg470AAMI7AAADPAAgXj0AAMa7AIDYPAAAi7wAAMo8AGAAPQBAKr0AgG09ALCevQCALr0AgB48AIA4vADgEj0AAHU8AJCSvQCAbL0AwKs8AIB3vQAAwrsAYGc9AACZuwBAlLwAwIc8AABOvAAgY70AIGo9ABD8vQAArb0AAEA7AAAgugAA4TwAgKY8AMDxvABgND0A0J29AAA9PABApzwA4AA9AMDFvACAaL0AIAI9AAC6PAAAejwAAAU9ACAWvQAAST0AYGU9AAD0ugAA7jwAgD88AABHvABgWD0AAOA6AKCfvQBANb0AACK7APCfvQAAaDoAAC47AIAVvACAij0AADO9AAAivAAAfz0A+Au+AIB0vAAAJDwAADW9AIC3vABAKb0AABS8AAAXPQCAQzwAgDq8AIBmPACALr0AgM68AEAnvQBAar0AIF09AIDMPACgMz0AgMu8AJCYPQAQjr0AEL29AAAgOgDAND0AQE+9AOAkPQAAkTwAwN08APCcvQDAKb0AACq9AECwvQCAoTwAgEc9AEAPvQCADr0AoBE9AAATvACAIrwAkJG9AMC8vAAgRz0AICG9AECNvACAt7wAoLO9AHC5vQCwqD0A4DU9AAB2uwBgGz0A4Fs9AKCMvQAAiLwAQI88AMAMvQCgMD0AYAU9AACxPAAAkLsAAMA5AEDEPADQiL0AQOk8AGDcPQCAtzwAgA88AACYugBApjwAAMQ7AEBmPQBAVL0AoF09AACAugBgDD0AwIO8AEAtvQDACj0AgIs9AAAuOwBgZb0AAOy7AECBvAAAbLsAYHS9AECJPQBAfD0AoCa9AACgOgDgNL0AAMm8AFChvQBA5DwAQD69AMBaPQDAEb0AAOo7AADAOQCgEz0AgJY9AECFPAAgDL0AYCW9AGAhvQAAu7wA4Cu9AJCGvQDQnb0AgEk8AECVPQDANj0AwFG9AGBZvQAAMLoAwLm8AIDevAAAQbwAQFY9AECUPACwmT0AAOo8AACevABAEr0AADc8AAA6uwAA8jsAoPS9AED9PABAtLwAALO8AOBvvQAACrsAAHG9AACCOwCAKT0AYGm9AIBuPADAWD0AAMA8AAD9OwAA8zsAAGg8AMBJvQCw2T0A4Ao9AABYugCAlbwAAJo8AFCOPQAAcLoAANM8ANDHPQAAFrsAgJS8AADePAAwij0AcLk9AAB+PADAOD0AwAg9AMA1vQDgXb0AgGc8AABUOwAAfrsAQBc9AABmuwDAer0A4FM9AKCOPQDgBb0AAOQ7ACBCvQAgNT0AgNu8AMCYvAAAoDkAAEQ7AMC2vAAAA70AQEk9AEBJvQAApjs=","chunkHash":"a0bd5bf7ad6c1e6eb9fb23b1820004f2df00b5e22e5bb982feb64dae603fe037"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef create_pointcloud_from_mask(mask_volume, threshold=0.5, voxel_size=1.0, sample_rate=1.0, max_points=None):\n    #...\n        required_sample_rate = max_points / len(points)\n        # Use the smaller of the two rates\n        effective_sample_rate = min(sample_rate, required_sample_rate)\n    else:\n        effective_sample_rate = sample_rate\n    \n    # Sample points if needed\n    if effective_sample_rate < 1.0:\n        num_points = len(points)\n        num_samples = max(1, int(num_points * effective_sample_rate))\n        indices = np.random.choice(num_points, num_samples, replace=False)\n        points = points[indices]\n    \n    print(f\"Point cloud contains {len(points)} points\")\n    \n    # Scale points by voxel size\n    points = points * voxel_size\n    \n    # Create Open3D point cloud\n    pcd = o3d.geometry.PointCloud()\n    pcd.points = o3d.utility.Vector3dVector(points.astype(np.float64))\n    \n    # Assign colors based on position (for visualization)\n    #...\n```","range":{"startLineNumber":69,"startColumn":0,"endLineNumber":92,"endColumn":0},"embedding":"AEAyvQCgCz0AADU9AKAOvQAwg70AEM+9AIASPAAAYT0AAOS7AADkPAAA0DoAgL88AAC+PAAALzwAgFU8AAA7PAAA3bwAwK48AEC5PAAAxbwAAJK8ACCPPQCAUT0AAIO8APCqvQCAA70A0KE9AIAwPAAAnDsAAC47AACevADA+7wAsBK+AEDRvACgAb0AAOk7AMCcPACAlzwAwPO8AADUugDAnj0AEKW9AIDiPQDAuzwA4E09AADQOgDA4DwAIDG9AOAMvQAAlzsAwN28AKBrPQBgBL0A0NW9AMD8vABgBb0AAE29AACRPAAAdDsAQNI8AKBePQBgEb0AAMG8AMCEPABQgD0AYCs9AABaPAAQir0AAAi6AKA/vQDAmbwAIGY9AEBvvQCACbwAgCc9AMDbvACgjr0AACQ9AHDfvQCAYrwAAG68AADzuwCAMjwAAEE8AHC+vQDghb0A4AO9AIDLvACA5rwAYCq9ACAEvQAAYLsAwN08AECrPAAA2zsAAAo8AACqOwBAQb0AQFU9AJCAvQAAhrwAQIK8ACAlPQCA8jwAAKM7AAAaPAAAiD0AAIm7AACSPACAuT0AgDA8AACCuwAAsDsAgL+8ACAOvQAAzzsAoB49AGBovQDgub0AAEg8AEB/vQAAKLoAAKG8AACCuwAA4zsAgHm8AIDhPAAwo70AAEA6AAAsPADAdT0AAIY8AHC+PQCgJr0AIEi9AFCavQBQnD0AAO48AIBePACASjwAgOG8AACMPACgLT0AAFU8ACAbvQBwir0A4GG9AABJPQAAaLoA4Iw9AOCOvQCgcD0AIAg9AOAPvQDAJL0AcLO9ABCTPQD4CD4A0IG9AAADvQBgGb0AQLg8AEB2PQAAeDoAgC+8AMC6PACgRL0AACa7AMAtvQAQ4L0AADK7AAAxvQDAEj0AAMC8AIAWPABAtTwAoAe9AMCyPABAy7wA4AK9AHCKvQAApj0AoEY9AABkOwAA2DoAAHk8AABvvAAAwT0AADC7AICuPQBgHb0AgBU8AIBJvACAwzwAYCs9AABqOwBgYD0AoCg9AMCqPAAATTwAQN68AICdPQCAUDwAAIY7AAANPABgEL0AwDo9AECwPADgx70AAES7AMABvQCAaLwAIE89AIARvAAwlL0AAAs9AGAcvQDgpj0AAFG8ADCsPQDAjDwAYGk9ANCAPQBAqbwAILE9AEDLvACAljwAgKO8AEDqPAAgAj0AAMQ6AAAwuwAAJLwAAAi7AABeOwAADTwAoBw9AABbPACA/LwAgOY8AIAgvQAAkLsAALU7AABiPAAAXTwAwIK8AADKvACArbwAIBk9AEAEPQAQxT0AAGy8AACAOgBAyzwAAG+8AACWuwDgHL0AgFA8AED8vABA3rwA4Ds9AADuvACwAr4AADS8AMCmPACgQT0AAAq8AEDGPADgFb0AgFo9AIDFPABAtLwAIJY9APCIvQDgU70AgKE8AAC4ugAAMT0AwMY8ACAbvQBAZr0AwJU8AAAYvQCAaTwAgFE9AIAcvAAAaLsAADI8AACivACAhr0AcIo9ANgHvgBgsL0AQBs9AEDzvABA2DwAQJg8AOA2vQDAPD0AAIi9AIAMPAAArLoAgKY8AECovACAfb0AwCQ9AKBRPQAALDsAwN08AMBcvQBAEz0AYAg9AEAFPQAArDoAAHM8AECivAAANz0AwKw8AEAsvQDgFL0AAKc7AKC6vQDAprwAAMy7ACAcvQCgVD0AwB29AEAEvQBgej0AoOm9AADWOwBAgjwAAK28AADsOgAAd7wAALa7AICJPACAGz0AADy8AMCjPAAgh70AgPW8AMAsvQBAO70AQIU9ACAgPQAAZjwAgMC8AACVPQDgDr0AcJG9AABCOwCAoDwAgBu9AMD6PAAAsDwAgEI8AKCevQDgK70AQLm8APCKvQAgDT0AgIc9AADovACAJr0AABo9AMCVvAAAILoAkKu9AADQOgAgFj0AQPu8AIBKvACgRb0AQOS9AGDJvQAgeT0AQEI9AIBWvAAAFz0AIIU9AKCgvQAAhDoAAMc8AAD8uwDgBT0AQPQ8AACDPABAKL0AAAy7AEDBPADglb0AAJQ8AIDKPQBAFD0AQNk8AABuPADAoDwAgES8ACChPQAAJb0AAHg9AIBOvABARj0AIAi9AABPvACA3jwAwCk9AIBqvACghb0AABs8AGBTvQAALjsAgI29AMCfPQBgMT0AoDK9AAAWOwCQgr0AAJ+8ANCtvQBAyjwAgJi8AIBDPQBA07wAQMk8AACkOgBAGj0AAH89AAByuwBgB70AIFK9AECUvACAj7wAAN+8ALCyvQDwmr0AANi6ANCsPQBAuDwA4DO9AICOvQBABL0AgOW8AAAsvQBgFr0AgFk9AABoOwBgbD0AAPg8AIBPvADgPL0AAHs8AACaPAAA8LoA0N69AMDePAAAWrsAAPG8AOBQvQAALDwAgDm9AIAIvQAAWT0AIDK9AAAUuwDADj0AAOk8AAAYOwDAiTwAoB09AADzvACAwj0AYBk9AAC1OwAA/bwAQMU8AOBEPQCA3LwAgMo8AGCOPQAAtjwAQNW8AIAAPQBAcD0AUAI+AABiuwAAhz0AAEk8AADouwAgqL0AAKY7AACSuwCAHbwAAIE8AIASvABwiL0AcJQ9AOB0PQAgDL0AgJ48AMAPvQBAvzwAAGu8AIAevABA7jwAAME8AEALvQAAZrsAIBo9AABmvQCAyTw=","chunkHash":"741a2bcd8027ad1df3cc53f473eb41140d7a08d2da03cda41efe9bf7aaf91b62"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef create_pointcloud_from_mask(mask_volume, threshold=0.5, voxel_size=1.0, sample_rate=1.0, max_points=None):\n    #...\n    # Normalize coordinates to [0, 1] range for RGB color\n    if len(points) > 0:\n        min_coords = np.min(points, axis=0)\n        max_coords = np.max(points, axis=0)\n        range_coords = max_coords - min_coords\n        \n        # Avoid division by zero\n        range_coords[range_coords == 0] = 1\n        \n        # Normalize coordinates to [0, 1] for RGB colors\n        colors = (points - min_coords) / range_coords\n        pcd.colors = o3d.utility.Vector3dVector(colors)\n    \n    return pcd\n#...\n```","range":{"startLineNumber":92,"startColumn":0,"endLineNumber":105,"endColumn":14},"embedding":"AIC3vAAAhzwAYBs9AIDVvABgY70AIMm9AKAyPQBwiz0AANS7AMDgPAAAmLsAQJo8AIBxPAAAgTwAgN08AIDCPADA2LwAQMg8AACluwCAcrwAAJq8AGBWPQAgUT0AwNG8APCgvQCAw7wAULw9AAAtPACAJzwAAAS7AEDmvABgFr0AuBC+AIAOvQCA+7wAAMI7AIAuPADApTwA4C69AAAfPABgej0AUKa9AGD0PQAA/zwA4Fs9AIAFPABA0zwAYBS9AMDRvACAOzwAgO+8AMBmPQBA4bwA0Lm9AIAHvQDAhbwAgCi9AAA+PAAAHrwAwOU8APCJPQDgAr0AAOa7AABWvADgej0A4Cc9AAA0OwBwl70AgG08AEAUvQDAobwAgGM9AAB7vQAAzrsAwB09AAA2vACgab0AICE9ACDwvQAAprsAgOG8AAASuwAAGjsAgDw8AODEvQCwnr0AgNK8AKAIvQBAAL0AACi9AICgvAAAM7wAAMA5AADYPAAA1DsAAOY8AACwOgBATb0AwFI9ACB0vQBAj7wAwIy8AOB6PQCA5DwAwJs8AAAguwCghz0AAHC7AIA2PACA0j0AAC08AAAAOQAAMjwAQOi8AIC/vAAA0DoAgCs9AOAsvQAwuL0AAPy6AEBWvQAAvbsAAFS8AMC7vAAAFLwAAK67AECQPABg070AgGw8AAD6uwBQlT0AAH88AKDBPQAAXL0AwIW9APCwvQDQlD0AQI88AACbPAAAXDwAAHe8AMDaPABgMj0AgAM8ACBOvQDAc70A4F+9ABCRPQAAyjwA0Jk9ABCjvQAgOT0AAP48AKAnvQDACr0AULy9AFCXPQD4BT4AwHa9AGAuvQDgC70AgAg9AKBfPQAALrsAwLC8AADIOwDgX70AAK47AABCvQAg5r0AAIy7AEAjvQAgCD0AANC8AADYOgDAiDwAYAi9AEABPQAAn7wAwMK8AGCHvQDQlD0AIEM9AADpOwAACrsA4CE9AABNvACQvj0AAG67ALCsPQAgIL0AQLA8AAB+vAAAtDwAYBE9AABuOwBgRT0A4D09AIBlPAAAQrsAgDC9ABChPQAA4DkAAIO8AIAZvACAyrwAgCg9AGACPQDwvL0AAPC7AABTvACAV7wAQD49AECkvAAQq70AgJk8AMCqvABwnD0AAE68ADCfPQCAB7wAwDk9AFCiPQAAobsAwFY9AMCuvAAAyzwAwKi8AAABPQBABj0AAEw8AMCMPAAAULwAAK27AADgOQAAjrsAgJc8AABdPACAebwAgAg9AKA+vQBAvLwAgJc8AACZuwAAujsAgCm8AICGvAAAn7sAwNM8AMDePACQsD0AAJs7AAB4vACAnDwAAJa8AACpOwCAKb0AACg8AOALvQAAFb0AwBI9AIDDvAD4Cb4AAHq8AMDoPAAgGz0AgCS8AMC4PABAKL0AgGI9AMD9PAAA77wAEJg9ALCXvQBgaL0AQLo8AAAHvABA4zwAQME8AMADvQBgY70AgA48ACAzvQCAjjwAQFs9AIAqvAAAQ7wAgL88AICcvABQm70AoIg9ALgKvgCgh70AAPc8AAAhvQAAyjwAAKw7AGBFvQDgLD0AgIS9AAD1OwAAELwAgKQ8AIAhvABgIb0A4AQ9AEBVPQAAXzwAgEc8AIBpvQBAXj0AIAY9AGANPQAAejsAgCQ8AACNvADAxTwAQIU8ACANvQBgB70AAKQ6AKDFvQAALrwAgBe8AMDyvAAgTD0A4EO9AAA8vQBAWj0AgPS9AABuuwDAkDwAgM28AAD9OwCAj7wAQJ68AMCRPADAJD0AwLO8AAASOwCghr0AYAe9ACANvQAAEb0AYNI9AGA0PQAA6jsAQJG8APCkPQDA87wA4IS9AAA4ugAAeDwAYBG9AEAcPQDAoTwAADo7AEB7vQCgSr0AgAq8AIBnvQCArDwAoG09AAD0vADgD70AgPA8AICUvACAzTwAsKO9AACLOwDAuTwAwJK8AIBuvACgSL0AgO69AFCqvQDAcT0AQFQ9AADsuwCgIj0AEKQ9ANCivQAAcDsAAFs8AACwvABAAD0AAIw8AIAHPAAALr0AAAg8AAC8PABwmr0AwNo8AJC4PQDgGz0AANQ8AAD5OwAAiDoAgAi8ADCzPQDQjL0AIEg9AABDvACgMT0AAOi8AACgOQCASDwAgDQ9AMCbvACgcb0AAKw7AIBkvQAADDsAQIG9AFCaPQAgDj0AoCG9AMCfvADwob0AAGG8AHCZvQCAazwAADi8AEDZPADADL0AQMU8AABAuQDgTj0AgGM9AADZOwBAmrwAQC29AACEvABA6LwAAJG8ANCYvQCQlr0AANa7AKDLPQBA1DwAYAW9AEBlvQDgIb0AgPC8AKAWvQAACb0AIC09AAAevABAOj0AQKk8AACMuwAAvbwAgKQ8AMCaPAAAFrwAgN+9AKAtPQAAKLsA4Aq9AIBnvQAAujsAABO9AIAPvABgeT0AAEe9AACiuwBAvDwAQAE9AADsOgDAhjwAwA89AAD7uwCA4j0AICg9AAAQOgAgCL0AYDQ9AEA7PQCAGL0AgJE8ALCSPQAAbTwAgBy9AIAxPADgWT0AuA0+AIBtvADwjj0AAGS8AECPPAAwmb0AANg6AICFvAAAKbwAANw7AAAZvABgfb0A0LA9AMBgPQCgA70AAAw7ACAqvQAAgjwAAFC8AABeuwAA4zwAAOw8ACAhvQCAHrwAQAs9AIAuvQAALj0=","chunkHash":"bc42dac1e1a2d254882acaca96e3aef72790933838f78982b8147d7970763474"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef create_mesh_from_mask(mask_volume, threshold=0.5, voxel_size=1.0, smoothing_iterations=0):\n    \"\"\"\n    Create a triangle mesh from a binary mask volume using marching cubes algorithm.\n    \n    Args:\n        mask_volume (numpy.ndarray): 3D binary mask volume with shape (D, H, W)\n        threshold (float): Threshold for considering a voxel as part of the mask\n        voxel_size (float): Size of each voxel in the output mesh\n        smoothing_iterations (int): Number of iterations for Laplacian smoothing (0 for no smoothing)\n        \n    Returns:\n        open3d.geometry.TriangleMesh: Triangle mesh object\n    \"\"\"\n    # Run marching cubes algorithm on the volume\n    verts, faces, normals, values = measure.marching_cubes(mask_volume, level=threshold)\n    \n    # Scale vertices by voxel size\n    verts = verts * voxel_size\n    \n    # Create Open3D triangle mesh\n    mesh = o3d.geometry.TriangleMesh()\n    mesh.vertices = o3d.utility.Vector3dVector(verts)\n    #...\n```","range":{"startLineNumber":108,"startColumn":0,"endLineNumber":129,"endColumn":0},"embedding":"AMDNvAAgKz0AgH49AAAmuwCAYL0AcIu9AMBEPQAgaT0AACC6AKAGPQAAeDoAAJU7AED+PAAADjsAoAK9AIBiPADga70AwIi8AEDZPACAnrwAADq7AGDFPQCgbD0AALy8APCTvQDA6zwAAFY9AOBVvQAAvLoAgBo8AOA+vQDAEL0AsAS+AOAnvQCAfrwAQMs8AIAPPAAQlD0AAJu7AEDHPACgkD0AgFq9AABcPQCA3zwAIAU9AEDavADAPj0AQE69AAA4uwBAtbwAAMw7AOCMPQCAcLwAQPS9AABbvABQhr0AYD+9AIC6vABgFz0AgC49AIDbPABgSL0AAP+8AICSvAAgvj0AYC89AMALPQAgIL0AANQ8AOBnvQBA6bwAQKI8AGAfvQBAkbwAgMA8ANCUvQAAsbsAYHI9ADCpvQAARLsAwBu9AOAavQCwmD0AgK88AMCrvQAAeb0AoJO9AAAkuwCAfL0A4MC9AOAbvQDAvDwAANM8ANCNPQAASLsAACy7AICPvADgFb0AkII9AGBivQAAMbwAoAQ9AIAtPQBAbz0A4BY9AABYPAAQlz0AQAK9AAAXPACA+D0AgBU9AAB0vAAAszwAALu7AIAbvAAAUrsAgFg9AAApPADAnr0AwLs8AEBRvQAgJ70AAAo8AOBDvQDADT0AgE48AEB9PQCgdr0AgFY8ACBnPQCAUz0AgNs8AEA7PQBgW70AAAI8AGBOvQAAnD0AwNQ8AMC7PAAgUj0A4EW9AABYOwBAhz0AAAa9AIBBvQAgbr0AQIm8ADCvPQAAsLoAQAE9AEBRvQDgXD0AgBg9AMAqvQAA2LsAgMK9AAAePQAwyD0AAGA6AKBOvQAAj70AAPM8AIBPPABAjDwAAG08AHC0PQBga70AoB89AAAQuwBgs70AQBk9ACA/vQDAAD0AoLK9AAC5OwCAATwAALS8AADxuwCAxrwAANq8AEBjvQAgJD0AQOQ8AAAyuwBApLwAYCU9AIDQPAAwoj0AAPq7AMDAPQBgbL0AoD09AMD1vAAAxzsAoIA9AMCUvABAPz0AgLc8AEBnPQAA2DoAABe8AGAVPQAAhDoAgL48AABmPACAVL0AAK28AMDFPACgxL0AALA7AADGvABAlrwAwGw9AEBJvQDAsL0AQH49AIAKvACAcjwAAIK8AGC7PQDA8TwAgGo8AICevAAALjsAwEw9AIBMvAAA5TsAUKG9AIAVPQBgnj0AAMA5AADCOwBAKL0AgES8AIA8vAAAcbwAgGw8AMCiPAAA0bsAUIA9AAA7vAAAbjwAgBM8AEDevABAwDwAAI88AAAaOwAgD70AAAy8AECsPAAAcT0AIBK9AABIPADgDj0AAGq8AECbvABgir0AoC49ACAcvQCAIzwAMJ09ABCZvQDg4b0AYBC9AEC/PADgcD0AgFW8AIAZPAAAJjwAoAM9AACYPACAJL0AYDw9ANC6vQDgOr0AgAu8AACwvAAAFz0AAAQ9AAA4vQAA4bwAADg8AAB6vACAP7wAgKs9AIDSPAAA9DsAAFq7AABbvAAA/bwAMII9ACDMvQBg3b0AwBw9AID2vABgJz0AQIi8AADevAAArTsA4H69AIAuvADgJz0AgBc8AAD5uwBAeb0AQFg9AKAhPQAAEzwAgEY8AABAvACA2DwAgJo8AMD+vADA9zwAABE9AIBcvACgQD0AAFA9AIAvvQAwm70AAFa7AACDvQAgHD0AAMS7AIAOPAAgez0AwDO9AIAKvQCAITwAOBq+AIAQvAAARbwAALA7AMCovACAD7wAoBo9AIBFPQCgGz0AACQ8AJCLPQAALr0AAH28AMDavACgHb0AgDU9ACAsPQAAUz0AgNe8AOB/PQAgB70A4F69AADfvABADj0A0Ia9AABsOwAAgDkAwIQ8ANCNvQCAwzwAwLW8AGA+vQBApTwAACw7AACEugAAsrwAcIk9AMDbPABQpj0AoJe9AACWOwCAFrwAwAu9AACnuwBgGL0AMKS9AEBgvQAAUD0AwJ49AAADPAAANj0AAIE9APDAvQCAcL0AgBo8AACUugCAJzwAALQ8AADguQCAUbwAAGU8AACxPABgNb0AANA7AMDkPQBAvzwAQJ88ACAGPQAA+zsAwIc8AFCQPQDAAr0AUIQ9AACMPACAuTwAgNe8AECavACAZDwAQDA9AACIOgBgHL0AgBk9ALCxvQAAmDsAAGi9AMCzPABAtrwAgEa9AOBZvQBgGb0AYAe9AGCFvQAAwTsAgAK8AAD5PACAoLwAQA89AAA+vACQhD0AAKg9AACuOwBAPL0AAEi8AADEOwAAxrwAAK87ADC0vQCAOb0A4GU9ABCCPQDgBz0AQDq9AMC2vAAAyTsAwMY8AED5vACgW70AoCg9AABevACAbD0AgEe8AEDfvADAwLwAwII8AKAxPQBAyTwASAe+AECTPQBA9LwAAPK8AMCpvAAAzLwAEIe9AADcugAgdj0AQP68AEATPQCQgT0AgC89AIDfPAAAtzsAgIy8AFCmvQAw6j0AAMg6AEC6vAAA8rsAoAM9AEDSPAAAsLoAYEU9AOAIPQAgRL0AQLm8AABIPQAAiTwAoNI9AMDavAAAuzsAwBQ9AMCEvAAgir0AAOY7AAC6uwAAt7sAoCk9AMD+vAAgdr0AQIg9AKAxPQAgFb0AANQ8AAAVvACgAz0AAJA6AIAEPAAANDwAAN+7AEAzvQAAuLoAwIw8AMCFvACAG7w=","chunkHash":"c9f2749c52a080940f4acd37a2752935bd7732f42132b5b4a5076ccc71b88d55"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef create_mesh_from_mask(mask_volume, threshold=0.5, voxel_size=1.0, smoothing_iterations=0):\n    #...\n    mesh.triangles = o3d.utility.Vector3iVector(faces)\n    \n    # Compute vertex normals for proper rendering\n    mesh.compute_vertex_normals()\n    \n    # Apply Laplacian smoothing if requested\n    if smoothing_iterations > 0:\n        mesh = mesh.filter_smooth_laplacian(number_of_iterations=smoothing_iterations)\n        mesh.compute_vertex_normals()\n    \n    # Assign colors based on position (for visualization)\n    # Normalize coordinates to [0, 1] range for RGB color\n    if len(verts) > 0:\n        min_coords = np.min(verts, axis=0)\n        max_coords = np.max(verts, axis=0)\n        range_coords = max_coords - min_coords\n        \n        # Avoid division by zero\n        range_coords[range_coords == 0] = 1\n        \n        # Normalize coordinates to [0, 1] for RGB colors\n        colors = (verts - min_coords) / range_coords\n        #...\n```","range":{"startLineNumber":129,"startColumn":0,"endLineNumber":151,"endColumn":0},"embedding":"AMA0vQCAuDwAwGQ9AIDTvADAWL0AwKe9AOBrPQBAjD0AgCu8AKA2PQAAAjsAgFm8AABgPADA1TwAABC7AEA8PQAgGb0AAH+8AIB3vACAD7wAACA5AKB4PQDwoj0AwLi8AGCmvQAAyjwAAHI9AAAvvQBAkLwAgCa8AGBlvQCgCb0AeBq+AAAUvQBgDb0AgAU9AABkvADAFT0AoCS9AAA8PAAwnD0AwO68APCxPQAACzwAgOk8AADPuwDAtjwA4FG9AACfvACALbwAABu8AFCIPQDA+LwAMMO9AKCAvQCAIb0AwDm9AIBXvACAT7wAgG89AGBiPQCAE7wAQKy8AABWuwDAzTwAgCU9AICMvABgkr0AgAk9AGBlvQAAXbwAYA49AIBCvADgBb0AgEg8AKAyvQAAVLsAICw9AEDpvQCAYbwAQEW9AAAxvADA5DwAgCg8AIC+vQCAnb0AAHm9AIACvQAgs70A0I69AAA/vQAAlLsAANO7AGAtPQBgST0AgDA9AMDXvAAAJL0AYF89AKB2vQCA7LwAgK08AEBhPQCgHz0AgKQ8AAA7vACgbT0AAFq7AICgPABQzD0AAKu7AIC5vACAMjwAgBC9AIDvPAAA8DoAwAQ9AAAsvACQ0L0AAE67AEAIvQAAQDsAgHY8AADpvAAA7zsAAIw8ACAGPQDQpr0AAFu8AAA3vABwmj0AwIe8AMCJPQAgdb0AwD29AKA/vQDwgj0AACg8AIDbPAAAaTwAAEm9AIABPQDAWT0AAEE8AADGvACQgr0A4B+9AADYPQBgGj0AQGE9ADCTvQBgTj0AQMQ8AMBQvQAAWDoAAMK9AACHPQBwwT0AwP+8AEBhvQDAxLwA4AU9AIBGPQAAMLwAANQ6AMDbPACgZL0AAIa8AEAlvQCQ5L0AAIQ6AOA6vQCAaTwAgIC9AEDsPABgCD0AAIa8AABsuwCAn7wAgHq8AABgvQCQkz0AAOo8AABAOQAAe7wAYGY9AAAWPADgxj0AgEu8AKC5PQCAdL0AgGk9AEC2vAAAt7sAIH49AACwugAATz0AAM+7AAAfPQAACLwAgJy8ADCGPQCAAjwAACQ7AAA0uwAAObwAwJk8AMCRPADArL0AAPc7AAAQOgCAazwAIDM9AEDevAAwj70AQBo9AMDsvAAAWj0AANG8AOChPQAAkLkAAMY8ADCcPQCAyzwAgDM9AACYvACAtjwAQFG9AOAbPQCgLD0AACI7AADQOwCAML0AAOC8AIBevAAABLsAAKA7AIDQPACAlrwA0Ig9AMBBvQCAtrwAAPA5AECfPAAA2zwAQNU8AAAgvQAAhLsAAIA5AAAAuQBwkz0AAFY7AACePABgAD0AQLK8AMCRvAAAhb0AAEI8AAAEvQAAzLsAgEQ9AAA+vQBAEL4AAJK7AABePQAANj0AQLK8AEDaPACATb0AoEs9AADQOgBAyrwAIJk9ANC4vQDgib0AAPQ8AADAvADAez0AgD49AADYOgDAHr0AAKK8AAAEvAAANzwAoBk9AIAtPAAAejwAwAA9AIABvADgn70AgH09ANDsvQAAh70AQF09AAAEvQAAuDwAAFW8AKAavQAgFD0AYKa9AID1PAAArbsAAMg6AAAIOwAAOL0AIBQ9AMCEPQCAPjwAYAQ9AMBjvQCA9jwAABi6AADyOwAA0LsAAEA7AABYOgDgaD0AgIc9AMDLvADgFb0AAAC8AMDAvQCABLwAAGO8AGAgvQBAHz0AYCi9AMA9vQBAwTwA4AG+AECsPABAwbwAAHI7AMCZvACAGzwAAIM7AMDSPACgRD0AgAS8AADNOwAgm70AwEu9AKBCvQCAdbwAkLE9AKAbPQDAsTwAAGU8AEBGPQAAwbwAoAW9AAAQugAAljsAwDi9AAC/PABAtTwAAMQ7ADCcvQAAYLkAwKy8AIAWvQDA6jwAAEw9AIAjvAAAHb0AYEY9AECKPABQqT0AINK9AACIOwCAnTwAAG+8AIBYvACAN70AAOy9AICHvQAgPT0AEJM9AACVOwAgVj0AsLg9ADCYvQAA57wAAJq8AKBFvQBA37wAABQ8AADGOwBAbL0AAFs8AOAAPQBgTr0AgBI8AIDwPQAgST0AwBM9ACAAPQCA8LwAAHq7AGCdPQDgEb0A4D49AABWOwDApzwAgE68AACruwAAzbsAQP08AAARvADAV70AYC49AIDLvQAAGLwAYGa9AED7PAAAFLsAQIy8AOAsvQDAmr0AAJO8AECQvQBAqjwAAJC6AABZPADgYL0AgNM8AECmvACAFT0AYB09AACwOgAgIL0AgOe8AABHPACAwzwAQIy8ANDHvQBAVr0AYAI9AJC6PQDA7DwAwF+9AIByvQDA7rwAgHG8AEA9vQBAar0AwKA8AIAOvACAID0AAGe8AADBuwAAwLwAAME8AED6PABAxDwAgNy9AGBlPQAAcjwAwMO8AABHvAAA2LoAYBy9AAANvQBAbD0A4Ci9AIBOPACgMD0AYCY9AEAVPQAAfDwAADg6AMCxvABAyz0AABo8AEDDvABAh7wAwA49AACUPADAhrwAoA89AKBgPQDgGb0AQNu8AAC2OwAgET0AkBU+AABnvADgEz0AAJW7AABVPAAwmL0AAIy7AADbuwAAVbwAgMM8AEDXvACgu70AwA09AIDIPABAmrwAAA49AAD4vAAA6DsAAD28AMDJvAAAkTsAgM48AOARvQAAkLoAwCg9AACpuwCAZjw=","chunkHash":"6210af1f0aa28a6097f1677e666729b2566115ab36263fe8899b0a53b102b529"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef create_mesh_from_mask(mask_volume, threshold=0.5, voxel_size=1.0, smoothing_iterations=0):\n    #...\n        mesh.vertex_colors = o3d.utility.Vector3dVector(colors)\n    \n    print(f\"Mesh contains {len(mesh.vertices)} vertices and {len(mesh.triangles)} triangles\")\n    return mesh\n#...\n```","range":{"startLineNumber":151,"startColumn":0,"endLineNumber":154,"endColumn":15},"embedding":"AIAlvQBAET0AYCg9AEDjvADglL0AAIK9AOBcPQBgoj0AAPe7AMBIPQAAijsAAAAAAABzPAAAkzwAgBm8AAA4PQCAOL0AADi8AABIOgDAhrwAACI7AICkPQCgoT0AAEW8ANCkvQCgMz0AAEg9AOAivQAASrwAAMA7AEBqvQCAG70AMBK+AKAZvQAA/bsAwLs8AACpuwDgMj0AAKG8AACJuwDgsD0AAPK8APC/PQCAnjwAoAo9AAAAPACAgTwAYFe9AECgvAAAs7wAABq8AHCZPQCAz7wAgOW9AAAHvQCAIb0AADS9AADuOwCAG7wAQDc9AOBbPQDAubwAwN68AAA0OwBgQD0AQNg8AAD0uwBAor0AwPI8AACVvQAAQrwAgDs9AAC6vADA57wAABI7AAB1vQAA/LsA4DQ9AIC1vQCAZ7wAwHG9AAADPACAoTwAABw8AODRvQDwn70AQGK9ACBIvQBgm70AQI69ACCBvQCAK7wAgFE8AECZPABgLz0AQNU8AMDWvAAATr0AgMk8AOBpvQCgEL0AQCA9AAAaPQBAaT0AADw8AADguwDwnj0AgOq8AIAXPAAw4j0AAIo7AMCFvAAAxDwAgLK8AACoPAAAjDwAwPs8AABVPADA0b0AAMY7AEDQvAAA+LoAAMM8AEC3vAAAcjsAwPA8AECLPAAAcb0AAKi8AABIOwAgPz0AoAS9ALCZPQCAN70AwMm8AACDvQAASD0AgKw8AGA3PQCA7TwAIFi9AADLPACgcz0AAIi6AAC1uwCgo70AQNu8AJC0PQBgRj0AICo9ANC0vQBgcj0AgLY8AMDyvAAAUrwAwJW9ACBYPQDAyD0AgDO9AKAPvQDA27wAgLM8AIBbPQBAwLwAwKs8AIAoPQAwhr0AgIe8AECSvACw4b0AACg8AOAHvQAAZjwA4HK9AADzPAAAyzwAQLy8AACAOADAxrwAAM07ACA9vQAgqz0AoDg9AADNOwAA2DoAgDU9AACBOwAQ3D0AgFi8ADCgPQCgSb0AoEo9AACJvAAAgrsAIKQ9AEC5vADgET0AANe7AEAkPQAAsDoAgAS9ACCPPQAAwjsAgBk8AABvvACAcLwAQKo8AMAfPQAA3r0AQMA8AADcOgAATzwAgEs9AKArvQDAbb0AIGo9AIBXvACgVz0AANC7AACcPQAAPDsAwNA8ADCLPQAA1jsAIGo9AIB1vAAAszsAoGq9AGAUPQDgJj0AAN47AMCHvACgE70AQBW9AAA8vAAA2bsAwM48AEDvPADA3bwAgHM9ACAIvQBgA70AAGw7AACYPAAAqDwAwL88AMDDvAAA7LsAAJm7AAC5OwDAlD0AABo8AIBFPABAtzwAAAa7AIBJvABAm70AYAU9AEAOvQCAArwAYFA9AOAYvQCYAb4AABK8AAAyPQBwhT0AgE28AEAhPQBgPr0AYA49AADSOwBA9LwAcMc9AHCyvQCwjL0AIAA9AADJvADQjD0AgCc9AABBPACALr0AgDS8AAAvvAAAPzwAQCo9AABIOgAAwDgAAJs8AAChuwCAWr0AYIA9APDgvQAAuL0AoIM9AABKvQDAyzwAAKE7AIADvQCA1zwAwK69AMA+PQAABjsAAKC7AAB9vADgX70AoCU9AAA0PQAAJjwAgN48AID0vAAAOjsAwLm8AADoOwAAFjwAAKy7AABQOgDAKj0AAIM9AIDbvACAGr0AAJw7AMCpvQCAH7wAQKu8AOBuvQDgOj0AgCq9ACAqvQAAcTwA0PS9AIAePAAAO7wAgCg8AAD0uwCAGTwAAIA8AMCqPADgaT0AAIQ7AOAJPQAwmL0AwDi9AMCJvQBAv7wA4JU9AMDHPAAAdzwAADI8AGAhPQAgF70AgGe8AIAMvAAATjsAkIW9AICfPABAgzwAAJu7AFCgvQDA4jwAQNy8ACAbvQDA2TwAYBI9AABYvABgLr0AoEQ9AAAouwCQnz0A4MK9AACsugAAUjsAwP68AIAivAAgJL0AoMm9ACAvvQBgAD0AoJw9AAAMPAAgVD0AoKE9AJCfvQAgJ70AQJW8AGBKvQDA2bwAAA28AIA7PABge70AgEk8AAAiPQDAX70AAJU7ABD1PQCgIT0AoCo9ACADPQDAi7wAgFm8ANCmPQBAOr0AgM88AIDSvACgNT0AAOC8AABCvADAhjwAAMs8AAAdvABALr0A4BM9AMDPvQCAXbwAgHC9AECxPADAhLwAYD29AOAlvQCAjr0A4CG9AHCfvQCAhzwAALC5AIDrPADgDr0AQM88AADAugDAFT0AQBo9AABYvAAAXb0AQOm8AACxOwDAzjwAAJU7ADDbvQDAIr0A4Bg9AADdPQAAUDwAIFK9AKBuvQAABjwAwIC8AGBhvQDAY70AQO88AAAquwAAHT0AQJW8AADyOwAAPrwAAFi7AMCWPADAijwAMNW9AOBkPQAAQzwAgBC8AAAMuwAAhbsA4DC9ACBdvQBgYT0AAA+9AACrOwAAXj0AoFM9ACA0PQCAMLwAAKi6AADIvABgvT0AQIE8AIBSPACAqLwA4BE9AGAIPQBA4bwAAEU9AIAZPQDAmrwAQP68AEDvPACAXjwAyBc+AABYvABAwzwAAMW7AIBwPAAwhb0AABW8AIABvACAMrwAgA08AIAQvAAQs70A4CY9AKAnPQDAE70AgMo8AKAGvQCA3zwAYAS9AABovACAFDwAAPY8AOA1vQDAgjwAQKw8AIAAvACASTw=","chunkHash":"a46c21079787175b3c8972893914d3a6c71d571281a1cd87a417afea00c6b9e9"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef process_sample(sample_id, root_dir, output_dir, voxel_size=1.0, sample_rate=0.5, max_points=None):\n    \"\"\"\n    Process a single sample: load mask volume, create point cloud, and save to file.\n    \n    Args:\n        sample_id (str): ID of the sample to process\n        root_dir (str): Root directory containing all samples\n        output_dir (str): Directory to save the point cloud\n        voxel_size (float): Size of each voxel in the output point cloud\n        sample_rate (float): Fraction of points to keep (1.0 = all points)\n        max_points (int, optional): Maximum number of points to include in the point cloud\n        \n    Returns:\n        str: Path to the saved point cloud file, or None if processing failed\n    \"\"\"\n    # Format sample ID with leading zeros to match directory structure\n    sample_id_str = str(sample_id).zfill(4)\n    \n    # Find the sample directory\n    sample_dirs = glob.glob(os.path.join(root_dir, '*', sample_id_str))\n    \n    if not sample_dirs:\n        #...\n```","range":{"startLineNumber":157,"startColumn":0,"endLineNumber":178,"endColumn":0},"embedding":"AED4PAAAlTwAwIA9AMBcvQCgPr0AcKi9ACAkvQCAFrwAAI28AMBYPQAAZDsAAGG8AICsPAAAgb0AAJO9ACA5PQDgOL0AQK09AAChPAAALLwAwFk9AACyPAAwhz0AwJw9AAD8ugBAz7wAwKk8AABsPACAwzwAgOK8AOA/vQDgIb0A8PO9AOA0vQBgZL0AoJY9AIDmPAAAALkAwGi9AABJPADA4T0AkKK9APCXPQAA6DsAgKE9AAAquwBA6bwAoKe9AABmvAAACrsAANY8AECXPQCAMrwAgKy9AMCGvACAKbwAABy7AEDUvAAAi7wAAPk7AOA5PQBgi70AgJk8AACnPADAnD0AAGk8AIBCvADAZb0AQO28ACAFvQAADzwAYD49AMA7vQCAG70AICo9AMDfvADgOL0AAAm8AGC5vQDge70AADC7AADcugAgET0AAEK9AKBxvQCA3bwAcIy9AIBqvQAAoDwAAKM7AACLPAAAErsAQNO8AADOOwBAqjwAgCM8AOB0vQBAirwAYA49AACPPAAA4DoAAJs8AICaPAAAULwAAOg7AADnOwBwwz0AwM08AACduwDAhTwAQN88AGBKvQCAOjwAAAI8AACiuwCAv7wAgH09AIAGvABwor0AAJm8APCavQBAjTwAIFq9AMDwvAAAa7wA4CW9AEC9PQBgdb0AwIg8AID1PAAACD0AAGQ7AOBjPQDAp70AgGm8AACVvQBAzj0AIAs9AAAqOwAAjjwAAOA6AEAcPQDwnD0AQKg8AADxuwAA37sAELO9AFCzPQAAn7wAIB49AAANvQCAszwAwBg9AAAdvACAjzwA0Ia9AAD6vACAdj0AwPa9AAB1PADA97wAgEa8ABCqPQAAAL0AAFW8AECbvACAobwAwMq8AIDqvACwqb0AgGo8AIDfvAAQjj0AQDy9AACpPABAorwAICq9AIDZPADgK70AQM68AIDcvQAALD0AAGo8AABEPACADDwAAC88AACWPABg5D0AwAS9AJDhPQAAursAYAI9AGBVvQBAlDwAgGK8AMAwPQAgeD0AgOA8AAAQOgAAdjsAoLC9AIDFPAAAIrsAAKS6AMCtvABAljwAAHK8AICAvACgGr0AoGe9ACBCvQAAXjwAIAc9AADvuwDwyr0AAB08AMDJvACAKz0AAOm8AMA6PQCA07wAIDQ9AAACOwDQiD0AgE09AACROwCwgb0AUIe9AABYOwBAtLwAAFq7AABxPAAArrwAoD49AAA4OgBgLD0AgP08AADpvADAn7wAgJ88ABDjvQBAKL0AgAo8AIBQPAAATj0AgBg8AADJOwDgHb0AoII9AAASuwBgXD0AAHy8AAANvACgJL0AAAs9AADHuwAgKr0AwIQ9AGAZvQDAzbwAAAM9AACPvABgd70AwPg8AMD5vACgAz0AwJk8AFC3PQDgGr0AgJc8AMAXPQBA37wAwKM8AECEvQCAA70AAGa7AABUPAAA9LoAgDy8AKBqvQAAV7wAAGQ8AMCQvACAQjwAgIs9AACDuwCAD7wAgOk8AAA8vAAAXb0AAAg8ACCZvQAgj70AIBO9AAAMuwCAMLwAAMs8AOAzPQCAYjwAYF+9AIASPAAAGLsAgHo8AIA3PAAAbLwAgGy8AIAPvAAAAAAA4EA9AADFuwCAkzwAAIk8AIAuPACAQDwAYFQ9AABAOgAAsjwAkLU9AACXPACAJjwAQME8AIBgvQAgCT0AANY7AMD1vABgMz0AgGK8AOAavQAgfz0AgBw8AMCoPAAAQTwAAJS8AMCvPACgRD0AwKO8AOBqPQDA1jwAwOo8AACCuwCAiL0A4D69AEDTvAAALLwAQLW8AIBHPQCATD0AAAI7AMAKPQCAj70AwIu9AED/vAAAZDwAgMS8AIB9PQDwij0AQJ28AICuvQAgr70AkI69AABCvQBgHj0AsLE9AMDJvACAZb0AoEg9AAADPACA67wAID69AAAtPACQwD0AAFQ7AAAQOgAAML0AIOS9AEAYvQAAGj0AcIc9AAC9uwBgYT0AAH09AKB3PQAgKb0AAPg8AKBgvQDgkD0AAI87ACAMPQDA4bwAQIU8AADvPACwzL0AAOk8ACC2PQDAizwAwEg9AIAiPQCADT0AAJ67AIB/vABAqTwAwKk8AADlvAAABz0AgB28AACcOwCAHzwAAJy7AAC0OgBwrb0AAK07AIDnvQAACTwAQBq9AKCHPQDAGD0AwFa9AMDQPAAAbb0AANS6AGBovQAAqDsAgCq8AACAOwAAKr0AIIo9AADFPADA1TwAILY9AADzPAAAobsAEMm9AGALvQBgNz0AAKC8APAKvgCg+L0AgIU8AIDFPAAA/jsA4BQ9AGBVvQAAlDwAQI08AACvOwDA97wAQJi8AADduwDAmbwAwAK9AACtOwCAQ70AwJK8AIAxPAAAFLsA0NK9AADqPADA8LwAANG7AAAiOwAAv7wAAOi8AMAaPQDAyj0AAEo7AAAfPAAAkjsAgKg8AICCPAAAYLwAAHk8AKA4vQAAkDkAgFY8AIBvvABgu70AwKG8AAD4PABA6rwAAAY7AABwugAACjsAIGK9AABPPQAAYTwAgPI9AABrPACgiz0A4D09AAA5vAAg0r0AAKK8AOBpPQAAobsAIHW9AEDePACAfb0AsJ49AKCEPQBAxLwAAKG7APCnPQAAhj0A4Ck9AGAfvQCACrwAACm9AACruwBAsDwAAOY8AKAuvQCwkD0=","chunkHash":"cee360fc37db06cbbe2c32b8d369c13b65ccb5266cf646f88522ee23f8eb8169"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef process_sample(sample_id, root_dir, output_dir, voxel_size=1.0, sample_rate=0.5, max_points=None):\n    #...\n        print(f\"Sample {sample_id} not found in {root_dir}\")\n        return None\n    \n    sample_dir = sample_dirs[0]\n    mask_dir = os.path.join(sample_dir, 'mask')\n    \n    try:\n        # Load the mask volume\n        mask_volume = load_mask_volume(mask_dir)\n        \n        # Create point cloud\n        pcd = create_pointcloud_from_mask(\n            mask_volume, \n            threshold=0.5, \n            voxel_size=voxel_size,\n            sample_rate=sample_rate,\n            max_points=max_points\n        )\n        \n        # Create output filename\n        output_file = os.path.join(output_dir, f\"{sample_id_str}.ply\")\n        \n        # Save point cloud\n        o3d.io.write_point_cloud(output_file, pcd)\n        \n        print(f\"Saved point cloud for sample {sample_id} to {output_file}\")\n        return output_file\n    \n    except Exception as e:\n        #...\n```","range":{"startLineNumber":178,"startColumn":0,"endLineNumber":207,"endColumn":0},"embedding":"AACEugAAxjwAYAE9AGAgvQCAJb0AAIy9AAB+vACAQ7wAAMw6AAC9PADAgzwAgGK8AMCRPACgLb0AgHC9AMAlPQBgfb0AAO88AIDlvADAsTwAQBE9AMBVPQDAUD0AwEg9AIA4vAAA5LwAAGk8AAC9OwAAET0AANg6AMC7vAAgBb0AcBi+AMDLvAAAcr0AsIo9AOA3PQDAoLwAAKy8AIALPACw4z0AEKa9AHCmPQBA4DwAYCI9AAAuvADAyrwAYK+9AIAgvACABbwAAHE8ABCmPQAA/rsA8Ja9AKALvQAABr0AAKI8AACIOwDAnrwAAIE7AGBuPQDgML0AAPk7AIAqPQDAlz0AAEw7AADAuwAgqr0AAAe9AOBlvQAAuLsAYJI9AOBCvQAAt7wAAGM9AAArvAAgCL0AAMY8AKClvQAgPb0AgHE8AEAnPQBA+jwAYFu9AECUvQAgL70A8Li9AOA9vQBAhDwAAM+8AADuOwBAvDwAgEa8AICXvACAbzwAAN48AABhvADgQb0AwMY8AABRPADAjbwAIAe9AEAGPQAAUrsAwAc9AACgvAAgoj0AQJ48AAAgvAAADj0AgIS8AMByvQBA7LwAoBo9AACouwAA4rsAMIk9AADOuwDATb0AAM87AIBzvQCAAj0AwKK8AABevQDAjLwAANs7AJCuPQCAFb0AAFM8AAAlPAAANz0AQKg8AJCTPQBgZL0AIEi9AABlvQBgoD0AgJc8AIBqvAAAcjwAAMw6AEBNPQAAWj0AAEc9AIC3vAAAhLsAAKW9ABCKPQAA6bsAwHc9AICvvACA4zwAANa7AAAWvABAubwAwHy9AAB+OwAAlD0AkOG9AECZPADgA70AAI07AICZPQAA3jsAAIe8AAD8vAAAtjsA4Ea9AMBdvQDgV70AADY8AEAYvQBAFT0AACA7AADGPAAAhTwAwKy8AECiPACAFb0AwBq9AKCovQAAZT0AIEI9AACSOwBA3DwAAHg7AACdPAAQrz0AABg8AKDPPQAAEDsAANk7AAAMOwAABDwAAPU8AABIugDAjT0AANg6AAAqOwCAprwAwLe9AOARPQAAvjwAIAA9AICAvACAVrwAwIy8AAAGuwCwir0AIHO9AADjvAAACrwA4DY9AADruwAAh70AAAy7AKAIvQDQoD0AADK8AICCPABgV70A4Ko9AECNPQDQjD0A0Iw9AIAdvACAEb0AoEO9AADZvAAAebwAABg7AABkOwAAHrwAYAk9AIANPACAED0AwOk8AMC2vABA1bwAwAE9ALDevQCgdb0AQAQ9AID0PAAA9zwAANi6AACPPAAAEr0AUJA9AACbOwAgAT0AwIM8AAARvAAAwLwAgFc8AIBvPADgWr0AAC49AICqvACAer0A4E49AMCWPACgc70AQBY9AFCQvQCAhbwAQAk9AKCZPQBAJL0AwI48AEAwPQCAOrwAwEE9AACwvQDAJr0AADY8AMCUvAAASzwAAEI8AKBMvQAADL0AgJc8AIDtvABA7jwAwHw9AABAugCANbwAAJK7AABavABAEb0AQNw8AKDOvQDAu70AAJS7AABOvAAAsrsA4DI9AEDrPAAAszsAAJi9AKAoPQAgAL0AAKs7AMDPPABgU70AgKK8AIDKPAAA8TwAQDE9AAAvPADArjwAAPw7ACAJPQAA/LwAAE89AAC2vACgSj0AgJ49AAD2PAAAurwAQIc8AEC/vQBAlzwAAJE7AGA+vQAgHT0AgAW9AMBbvQDgiD0AgGM8AEC3PAAAejwAgCm9AMCLPQBgrD0AQJm8AGAwPQCA+TwAAEg8AICTvACA3b0AwJi8AIBVvADA0bwAgA48AMBhPQAA6TsAgH08ADCFPQAAh70A4Ee9AMDBvABA1TwAAK+8AIB8PQBAEj0AAOy8AHCMvQBAs70AAEO9AMDbvAAAqDwAcIw9AOA1vQDAL70AwE89AMCZvADAVr0AQBi9AECMPABAXz0AACM8AADVOwAgQL0AkPm9AID0vABgJD0AYIA9AABSOwCQoj0AcJA9AMD7PACAkDwAgKY8AAC/uwAAQz0AAJS6AACfPABgeb0AADg8AKAFPQAAuL0AgOg8AIAtPQDADz0AQEk9AADzOwBgKD0AAOK7AEAjPQAACLsAYDU9AEAdvQAQnD0AAFS8AIBaPADAuzwAAJA8AACAuAAQz70AwMg8ABDpvQAAJDwAwNS9AMCSPQCAVzwAgOy8AIA8PACwsL0AAIS6AABGvQAALrsAAAW9AACjPADA47wAQFc9AACDPAAABbwAgKw9AABQugAA6bsAELS9AMCcvADAmDwA4CG9ACAPvgBg1b0AgB29AIC3PAAA7bsAgLs8AOCNvQAA7rsAALA5AABEvAAgDb0AQI08AEDVvACAxjwAAPK7AACHOwAAZL0AwMc8AMC+PADAjjwAAM69AABvPABAnbwAQMC8AADIugCAUbwAAHe8AAAWPADQ1T0AgBq8AIAfvACAMDwAwDA9AMC5PACA4LwAAN07AGA9vQCAXT0AALS7AEAkvQBQsL0AADq8AGAcPQDAF70AQK48AECGPACAezwAQDi9AMAMPQAA+jwA+BM+AIAUvAAgcj0AAAE8AMCDPACw6L0AgCq8AAANPQAAYLwAsIS9AKAXPQCAN70AkLA9AIB1PQAgCb0AgL+8ABCEPQBgHD0AYE09AADavAAANjsAAPW8AICQvADgEj0AgHw8AIBivQCwkz0=","chunkHash":"5058391fd8b71be7085c3bb77eb068756883f8d3e9839ca14d869f82d494daf9"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef process_sample(sample_id, root_dir, output_dir, voxel_size=1.0, sample_rate=0.5, max_points=None):\n    #...\n        print(f\"Error processing sample {sample_id}: {e}\")\n        return None\n#...\n```","range":{"startLineNumber":207,"startColumn":0,"endLineNumber":208,"endColumn":19},"embedding":"AACTuwAA1zwA0IA9AMAQvQCAJ70AgF69AMCavADA47wAALU7AEACPQDgDz0AIAm9AIDnvADgPL0AIDm9AGBFPQCAf70AoE49AKACvQCA0TwAAPs8AGBmPQDwiD0A4AE9AACDPACAY7wAAPw7AABOPABgLT0AABC7ACAqvQDAAr0AIAi+AID3vABQnL0AQEw9AAAcPAAAGrsAABS8AAAAAACg5j0AoGm9AMBePQAAGDsAQKE8AAARvQAwgL0AsNC9AIB4vACASLwAQLo8AABVPQAAzDsAIDm9AMCVvADgAr0AAL07AMCNPADAGb0AALQ6AADxPAAgBL0AgEU8AADqPADAQj0AAB28AIA4vAAAtb0AwAu9AOB3vQAARjsAgIQ9AEDxvABA9LwAAJg9AAChvAAA5LwAgD89APCNvQCgJL0AAHQ7AIAePQBAxDwAAGq9AEBFvQBgNb0AYJi9AGBjvQDApTwAgB+8AADfOwDA3DwAwLi8AAD1uwAAJDsAAHM8AMCLvAAgU70A4AE9AADAugDA77wAQKy8AACXPACAdbwAwBU9AABWvACAkT0AAEq7AMDivADAGj0AAJE7AOAmvQAgAb0AAKA6AIAXPACArbwAgC49AABYugAAS70AgEG8AGBpvQBgKD0AQJy8AIA2vQCAB70AANK7AFCNPQCAULwAAAY8AMC4PAAABjsAANW7AMCPPQBAbL0AAOa8AHCtvQBggT0AgBI9AABePAAAXTwAAHw8AOCaPQBgSj0AIDk9AADguQDAlDwA8Oi9AOC0PQCAhjwAQB49AADfvABgJz0AAJe8AIBKvAAAPrwA4CW9AABcOwBQnD0AgNO9AABePAAAv7wAAB88AJCfPQAAqLoAAMS7AJCDvQCAU7wAYAm9ACBTvQDAOL0AALa7AID9vACAzDwAAM47AAACPAAAlbwAAI48AADruwBAv7wAgMu8AHCyvQDAHT0AgBU9AAC6PAAAujwAgLS8AIBEvADg2T0AgFm8AJCnPQAAejwAgLM8AMDjvAAAzDoAIEM9AMCoPABgRz0AgIK8AMDIvAAA9LsAQHu9AMBCPQBgLT0AAG47AMDdvAAA3bsAgA68AABOvAAASb0AAEq9AIBivAAA+jsAADM9AIBcPACwqL0AAFi8ACAEvQAAhD0AwOC8AACsPAAQgb0AsIk9ABCCPQCQwj0AQMQ8AADtvAAA07wAwFe9AACCvABA27wAgCq8AAC5vAAA+7sAQBE9AABAuwCgUT0AYE89AEDZvABA8bwAABm8AIDRvQDQpb0AAF08AEBGPQAADLsAAEM8AABYPAAAZ7wAkJI9AIBWPAAA3DsAAHk8AACivABAKr0AQOE8AABHPABgbr0AAJA9AICgvAAANb0AsIY9AIAbvADgbL0AwHg9AGBBvQBgGb0AgDk9ACCtPQAgHr0AwKe8AAAOPAAA6bwAYCY9ABDRvQBgeb0AQK08AAAcuwCAkjwAAOo7AKB3vQDAt7wAANC6AADVvABgFT0AoCc9AACUuwAAFrsAAKO8AADvOwAAZrwAAN08AHCXvQCwqr0AAEq8AECivADAr7wAoGQ9AAAaPADArDwA8Ji9AIBRPQDAu7wAAGs8AIAgPABAiL0AQJ48AICMPACAYzwAgDQ9AAAcPAAAtTsAAHi6AIAEPQAAsLoAIBA9AAABvADATj0AcJ89AIDyPABA+rwAYDg9ACCzvQBA1jwAACy8AKBqvQAAWTwAICa9AMAJvQDwpj0AgBw9AACtPAAAvTwAwPO8ALDCPQBAsz0AwAi9AOA/PQCgGz0AgIM8AEC+vABg2b0AIBC9AIAdvQCAkrwAAFI8AKCsPQBA0jwAAK+7AABtPQAAor0AQHK9AMASvQAAtLsAQOK8ALCNPQBAHD0AwBC9ADCXvQBQz70AIE69AEA9vQDAjTwA0J09AEAZvQAADbwAgLo8AABevAAAa70AoBe9AAAOOwBAOT0AQJU8AIB0PACAdr0AwN69AEDQvACA0zwAAMA9AABIugAgWz0AAFY9AMBPPQAANbwAAIq8AADMugDABj0AAPi6AMCvPAAAVb0AANY7AECvPACAm70AwPo8AMAoPQAgJz0AQFU9AGABPQBgVj0AAAc8AAD0PACAQzwAYAE9AICUvABQnD0AgE28AIBaPABAoDwAAI07AADrOwCgzL0AgAA9AFAavgAA2bsAAKW9AKBQPQAAx7wAANO8AIAMvAAgkL0AgIg8AOBqvQDArjwAYDO9AOAEPQAAy7wAoEY9AIBpPAAAw7sAUIg9AMD5PABA6TwAIMu9AACsvADA2TwAgAC9AGgIvgDwo70AQAO9ACArPQAAzDsAgPw8AMA1vQAAhzwAAJ47AIDtvAAgFr0AAPS7AMC3vACAIzwAICi9AIDrPAAgcb0AwNs8AIAmPAAAt7sAkNi9AEDxPABA2LwAAJW7AACGPAAAzDoAgDS8AABHvADw5j0AAOK7AABHvAAAcjsAAHo9AAAMvABA2bwAgLE8AIB1vACA2DwAQMa8AKAzvQBg270AADo7AIBqPADArrwAoBk9AIBDvAAAajwAQBO9AMAZPQAAKDwAMBw+AEDUvACgQz0AADK8AABUPABQ1L0AgC28ACAJPQAAXLwAgG69AEBJPQCAeL0AsLg9AMCXPQCAbb0AgIu8AABIPQDgGz0AwIc9AOARvQAAwjsAgOa8AIA9vABgiD0AAFC6AMBKvQCAgz0=","chunkHash":"d601cccd52877669b29280b699d0ea6eaf4ec1ddea6f73af0e6d4659d5de4951"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef process_sample_mesh(sample_id, root_dir, output_dir, voxel_size=1.0, smoothing_iterations=1):\n    \"\"\"\n    Process a single sample: load mask volume, create triangle mesh, and save to file.\n    \n    Args:\n        sample_id (str): ID of the sample to process\n        root_dir (str): Root directory containing all samples\n        output_dir (str): Directory to save the mesh\n        voxel_size (float): Size of each voxel in the output mesh\n        smoothing_iterations (int): Number of iterations for Laplacian smoothing\n        \n    Returns:\n        str: Path to the saved mesh file, or None if processing failed\n    \"\"\"\n    # Format sample ID with leading zeros to match directory structure\n    sample_id_str = str(sample_id).zfill(4)\n    \n    # Find the sample directory\n    sample_dir = os.path.join(root_dir, sample_id_str)\n    mask_dir = os.path.join(sample_dir, 'mask')\n    \n    if not os.path.exists(mask_dir):\n        print(f\"Mask directory not found for sample {sample_id}: {mask_dir}\")\n        return None\n    #...\n```","range":{"startLineNumber":211,"startColumn":0,"endLineNumber":234,"endColumn":0},"embedding":"ACBhPQCAcDwAsJE9AIC5vAAgM70AIGC9AEDbvACAabwAQKu8AIA4PQBAqjwAAMa8AED1PAAgdb0AcJm9AMCVPQBAUL0AIFI9AABEOwCAIjwAAHI9AGAmPQDwnz0AQHY9AABwOgAAFTwAAKS6AEDqvACAATwAQJu8AGBtvQAA57wA0OK9AOAMvQCAd70AoLo9AIDAPACAnTwAYB29AECUPADg0D0AIHu9AAAmPQAArTwAgIQ9AEDfvACArLwAUMy9AAAoOgAA5LwAADo9ALC8PQDAyLwAoG29AADEvAAA9bwAgBS8AOB1vQAAg7sAAEI8AOBFPQAATL0AAOA6AACIOgDAoj0AwJ48AIC2vADAkrwAAKo7AKA7vQDAirwAQKQ8AMDMvACAYb0AgJs8AMBPvQCAv7wAACs8ANDcvQCgTb0AgGW8AADJuwCQmT0AgK+8ACCUvQDgEb0AIMG9AIAYvQAgIr0AAKY7AEC2PACAFTwAYEW9AAAxPACgSj0AAFA8APCfvQBAiLwAICU9AIARPQAAHLsAQBg9AGAFPQAAE7wAAMQ8AABiOwDg9j0AgME8AADIuwDA+jwAQAg9AJCYvQDADj0AAII7AAC4PAAAyLsAYKI9AGAaPQCwmL0AgKi8ABCtvQCAfDwAgIm8AABVvQDAlLwAwI28AIC5PQDgKL0AANS7ACAtPQAA2TwAAIC4AMAJPQAwt70AAAo7ACAmvQAgwj0AoAA9AACyPABgJz0AgNq8AEA6PQBQiz0AAIw8AADbOwAAhLwAYGq9AKDOPQAAirsAYDc9AMCpvACgNz0AQBI9AMCnvADAiTwAEKm9AOAHvQCAXD0AcNq9AADJPADAtbwAAO07ACByPQAAfbwAgJU8AACHOwDA27wAAKW8AMCovADwib0AgCQ9AADTvAAgjT0AcJi9AAACPQAAUjsAAI68AAC1OwCATL0AAFi8AGDCvQAgZj0AQJM8AECUPAAAjTwAgEY8AMDrPADw+D0AoAe9APCvPQAAxDoAgFQ9AMBcvQAAULsAQJU8AIALPQAglj0AAIg7AIBgPABAiLwAEIi9AACgOgAAlbsAgLY8AMDgvAAAzDwAIAi9AMA0vQAA07wAQCK9AIAJvQDgKT0AQCE9AGAIvQAQuL0AQN88AAC7vACA6DwAwKa8AIB1PQDAkbwAgA89AIACPAAgoz0AYCM9AACguwBgSb0A0K+9AIAXvAAAZrsAgJa8AAD/OwDAV70AoCc9AMCVPAAAwLgAgB48AIArvACAV7wAwBo9AADBvQCgFb0AAKU8AADBPABAYT0AAIo8AIAZvABAZr0AoGI9AIB0vAAACD0AACE8AABBPACgSL0AQAk9AAAIugBgjr0AIHQ9AIAuvQAAy7sAIDY9AIC6vACgRL0AgIA8AMCTvADgHT0AAPA8AGCrPQAAs7sAQKQ8AMCEPAAAKrwAgIU8AIB4vQDgAL0AAJA7AACmvAAA4jwAAIc8AIDsvAAA77sAANq7AADZOwAAprsA0J89AIARPACACjwAADw8AACsugDgJ70AAIw7AIBZvQDwrb0AAAC8AAB2vAAAGjwAAEw8AGAFPQCAIrwAwHi9AACiuwAA1rsAAIc8AAAVPAAARjsAQMK8AAAAuwCAa7wAgIU9AABeuwCAODwAgAi8AACZvAAAKTwAIEw9AAByPAAAxjwAEOw9AIAOPQBAmLwAAG08AOBTvQCAzTwAAIu7AEDMvABAcT0AgCy8AACGvQAgbT0AYAy9AMAJPQCARLwAAHY7AAD3uwAAcj0AAOE7AJC0PQCgAD0AADU8AACjPACAsb0AIBq9AEACvQAAKDsAAPe8AOBLPQCwtT0AQJI8ACA5PQDga70AQDS9AKAjvQAAjLoAwOy8AJCDPQAgVT0AQPK8ADCZvQDASL0AIG69AOAZvQCA+TwAYIY9AACguwDgJr0AMIs9AGACPQBAyzwAYBe9AMCUPADAmz0AAAo8AIBdPACA0LwA0OO9AID1vADgAz0A4Kk9AMCHPACgjT0AAPo8AMAhPQCAW70AAAq7AGBEvQAAID0AQIG8AMClPACgIL0AAEs8AMCHPAAQob0AgI48AKDRPQBgBT0AwAY9AEAuPQBArTwAAAs8AIAovACARTwAgNY8AGAMvQAAVTwAQOO8AAA0PAAAEDoAAIs7AIDcPADwtL0AALI8APAIvgAACLsAAO28AOAmPQAAvLsAoAi9AAB2OwBQkb0AoCm9AIB8vQAAHDsAALq7AABhPAAgEb0AwLE9AAAmOwBgIT0AQIU9AMBBPQCAWbwA0IK9AAA2uwAAbD0AAFi7AMAVvgDwvr0AICY9AIBGPAAAjrsAAME8ACBFvQCAnzwAABg9AADUOwDAPL0AAAC9AADYvACAJr0AYBa9AABWPAAAGL0AAIg8AKAMPQCgGz0AoOe9AGAlPQBAlLwAgJ28AADgOwBAtbwAoA69AMD9PADwxT0AAAA5AMDhPAAAyzsAgDw8AED1PAAA1rsAwKC8AICOvQDAsjwAQKQ8AGAWvQBgqr0AADA6AAAHvAAAljsAgH48AACAuQDA5bwA0IO9AIB+PQAA1zsAEAI+AEDpvADgQD0AIJU9AACDvACww70AAGO8AHCIPQAAAbwA4Ce9AADAPADAe70AgEw9AABcPQCAcrwAAJw7AMCsPQCAPD0AICs9AIAUvQCAGDwA4Dm9AADmuwCADj0AYA09AGBEvQDgND0=","chunkHash":"dfbeff4c1824cb28792d6db95ec3a06c3fc81e891f5b4888e6b2a3f7982a948f"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef process_sample_mesh(sample_id, root_dir, output_dir, voxel_size=1.0, smoothing_iterations=1):\n    #...\n    try:\n        # Load the mask volume\n        mask_volume = load_mask_volume(mask_dir)\n        \n        # Create mesh\n        mesh = create_mesh_from_mask(\n            mask_volume, \n            threshold=0.5, \n            voxel_size=voxel_size,\n            smoothing_iterations=smoothing_iterations\n        )\n        \n        # Create output filename\n        output_file = os.path.join(output_dir, f\"{sample_id_str}.obj\")\n        \n        # Save mesh\n        o3d.io.write_triangle_mesh(output_file, mesh)\n        \n        print(f\"Saved mesh for sample {sample_id} to {output_file}\")\n        return output_file\n    \n    except Exception as e:\n        print(f\"Error processing sample {sample_id}: {e}\")\n        import traceback\n        traceback.print_exc()\n        return None\n#...\n```","range":{"startLineNumber":235,"startColumn":0,"endLineNumber":260,"endColumn":19},"embedding":"AMDZPABgGz0AgFE9AACmvAAgg70AIFC9AAD4ugAAqbwAAPi6AMAIPQBAujwAALa8AADyOwDgIb0AQIm9AFCGPQAghL0AgL48AACVvAAAgjwAABs9AKAoPQDglT0AIDE9ACANvQAADzwAgFG8AMDmvAAA2zwAgCq8AMBAvQDgDb0AuAa+AAD8vAAAn70AEJU9AAC4OgAATrsAgAC8AIABPADQ6D0AADe9AMBrPQCA7DwA4B09AACMvADACr0AsPq9AAD4ugAA3bsAAPI8APC/PQAAALgAELa9AADZvACA1rwAADA7AECfvAAAoLwAgME8AOBPPQDA37wAAOK7AAB8OwBAYz0AgHI8AECzvAAAU70AAIA7ABCjvQAABDsA4FA9AMDrvACgOL0AAJc8AKBbvQCAY7wAAFo8AGDQvQDANL0AAAm9AAABPADwjD0AQG29ADCgvQAACr0AcLm9AKAyvQAgIL0AAN+8AEDKvABA5zwAQEW9AIA3PAAAeT0AAN88AIBrvQCgZ70AYBo9AIAhPAAAd7wAAPI7ACA/PQAAFLsAICA9AIAKvQDQpD0AAI47AICfvADAdz0AAAw8AACRvQAA1LsAALI8AABKPQBAkLwAAI89AEDxPACgq70AgKG8AICSvQCAVTwAAAE8ADCWvQBAnrwAAGA6AECdPQDAEL0AAH68AIAPPQCAvjwAgGW8AEBDPQAQrr0AwJK8AKBWvQCQkT0AwAM9AMChPACA4DwAAOC8AGBPPQDgMT0AoAo9AADPuwDAwbwAwJC9APDCPQAAXjwAwDk9ACAyvQAgMT0AAEi7AADJvACAczwAoG+9AADguwCQmT0AoL69AACEugCAQLwAABw7AOBiPQAAcDoAAPU7AECnvACAVbwAQL68ACBLvQAgcr0AAFA8AIAQvQCgFD0AQD69AEDFPACA0TwAAM27AABTvACASr0AAI67AACPvQCAhD0AwP88AABcPABAmTwAgFu8AACdOwBgAz4AABi7APClPQAASLsAICw9AIANvQDAoLwAQIQ9AEDRPACgkz0AQJe8AAAOOwAAkbwAgGG9AMDaPAAApjwAoBg9AIDVvAAADz0AgOm8AMC+vADgGb0AwO28AABrvACgAj0AQFQ9AAAGvAAgp70AANs7AMAVvQCAmj0AgNu8AEBSPQCA5bwAIFs9AECGPQBQqT0AoGE9AABKvABgHb0AUJC9AICevAAASLwAAAS7AACAvABgLr0AwJA8AAAgugAAiTwAAMM7AAD4uwAAfLsAQN08AEDAvQBAJ70AgFY9AMDqPAAAnzwAQNw8AACsugCgZb0AIHE9AICfvADA+zwAAN87AMDAPAAALL0AAPs7AADUOwAgjL0AkIw9AKApvQDA/LwA8Iw9AIB7vABAh70AIDQ9AADRuwAABDwAwA09AFCBPQAA/rsAAAQ9AMCgPAAAHDsAAMc8AGCVvQCgjb0AgOo8AABjvADABT0AAKE8AKAlvQDAjbwAgAm9AACsPABAhTwAoHQ9AIAjPAAAhLoAAKg6AIBAPABgH70AQKM8AGC1vQDgsL0AANO7AEDSvAAAFjwAgCU9AABAPACABjwAEKu9AGAUPQCAzLwAgJw8AADoOwBA4rwAgFq8AIBsPAAARDwAAHo9AADfOwAAbjwAYAO9AADsugCAfrwAAC49AAAiuwDAUD0AYOY9AIAdPQBgBb0AgFE8ABCYvQAAiTwAwI28AKA0vQCgGT0AQOO8ACByvQDgIT0AwJm8AMARPQDAh7wAAKY8AMAhPQCAxj0AAES7ADCTPQAAID0AAFA8AADxuwDA670AoG+9AOAvvQAAkLwAQLg8AACUPQDAHT0AoAo9AKAjPQDAZb0AQI28AEAIvQAAhzwAgCe9AKCtPQBgND0AQAS9AKC4vQAgTb0AgFW9AICgvACAMD0AUK49AECDvADAnrwAoHc9AIBePACAkjwAwCG9AABAOQBAET0AAAo7AACJPADgPb0A8P69AICDvABAuzwAELk9AADJOwCgij0A4G09AIDdPADgGb0AAEu8AAB5vABAsTwAgJq8AAB8PADwhr0AgJI8AEAaPQCAlb0AAH88ALCkPQAgVT0AoGA9AAAnPQBApzwAAK67AIALPQAA6DoAAMI8AMDkvADAojwAAPO8AADvOwDAibwAgBe8AICuPADQvL0AoFY9AIgavgAABTwAQIy9AADOPADAn7wAABa9AAADvADQor0AAIe8AIBsvQDAmTwAgAy8AKARPQDAqbwAAH09AIAFvAAAhzsAkIU9AIDhPAAA4rsAkIe9AABhvADgLD0AQAu9AJAKvgBwnr0AgFs8AOA2PQDAgLwAgFS8AGBtvQAA+DoAAAs8AOAUvQCgLr0AgE28AACJvAAAKLwA4A+9AAC+OwBgOr0AoA49AOA8PQBgKz0AUNS9AIDOPACALTwAAIg6AAB6OwCAUrwAAKm8AIBEPADQxz0AgKS8AECxPAAAwDwAwBE9AAC/PACAILwAANI7AMAXvQDgRj0AAFa7ACBKvQAgt70AQM88AACAvAAAmzsAgAQ9AAB5PABAzLwAQE29AAAuPQAAsDsAoBg+AKBQvQAgHj0AgAM9AECEPACguL0AwKK8ACAsPQCAZLwAQJe8AAAaPACgVb0AgGc9AIDiPAAAkrwAAEU8APCXPQDA7zwAgD09AOAgvQAAoLsAQNK8AACsvADgUT0AAKY8AEDavACgHz0=","chunkHash":"32c78820c569cbd365b210ea3a3f782d44abb8c5732fb72df9fd6ff6237096a3"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef process_all_samples(sample_dir, output_dir, voxel_size=1.0, sample_rate=0.5, max_points=None):\n    \"\"\"\n    Process all samples in the directory.\n    \n    Args:\n        sample_dir (str): Directory containing all samples\n        output_dir (str): Directory to save the point clouds\n        voxel_size (float): Size of each voxel in the output point cloud\n        sample_rate (float): Fraction of points to keep (1.0 = all points)\n        max_points (int, optional): Maximum number of points to include in the point cloud\n        \n    Returns:\n        dict: Dictionary mapping sample IDs to point cloud file paths\n    \"\"\"\n    # Make sure output directory exists\n    os.makedirs(output_dir, exist_ok=True)\n    \n    # Find all sample directories\n    sample_dirs = glob.glob(os.path.join(sample_dir, '*', '[0-9][0-9][0-9][0-9]'))\n    sample_ids = [os.path.basename(d) for d in sample_dirs]\n    \n    if not sample_ids:\n        print(f\"No sample directories found in {sample_dir}\")\n        return {}\n    #...\n```","range":{"startLineNumber":263,"startColumn":0,"endLineNumber":286,"endColumn":0},"embedding":"AABbPAAArDsA0Iw9AMCevABAVL0AYAW9AMDOvADANb0AgN+8ACBXPQBgBj0AgEo8AKANvQDgsr0AwAa9AAA6PAAgSL0AQNI9AGBmPQCA5zwAcKo9AIATPACA3DwAwOQ8AAD+vAAAxLwAwJQ8AIA/vACgdj0AAMc7AMB9vQBA57wAMNy9AAAfvQCAl70AQKM9AEClPAAAIrwAIAK9AAD+PAAgAj4AQIy9AEBpPQBgQb0AwIM8AED3PABAaL0AcI69AECpvACAEbwAwKI8AIDdPQDAlrwA4MC9AADxvABA6rwAgDA8AAAAvQDgFT0AAKw7AMBMPQDADL0AIHA9AED0PAAgPT0AwBu9AABMuwCAY70AgJ28AOBKvQAAgLkAQMs8AGCTvQDgEr0AMJE9AECnvAAA0LoAQK+8APClvQDgLL0AwAA9AIDGPACAmTwAwNY8AOBcvQAAgL0AAFy8AAAkvAAA+TwAAJu8AIBdPQDgWz0AIIq9AIDzPACANrwAAFO9AABuOwDgHL0AIDY9AAD5OwDARD0AQLm8AOARPQAAYrsAgOI8AEClPACAijwAAKO7AID6vADAwLwAgJ88AAD0ugAgHT0AALy8AICMPACAizwAwLI9AACbOwCgDr0AYIS9AMD8vACgCz0AwNq8AAA/vACAMrwAAJ28AAA5PQCAPr0AgHe8AIBcPQCArjwAAAs8AMBUPQDgUr0AYBW9AEBsvQDA2jwAAIM8AIAYvADA9jwAoA49AMCPPQAgLD0AYFo9AOAQvQBgBb0AYLy9AAA2PQDgDT0AAI88AKBYvQAA2DsAAKo8AADEOgCALj0AwAq9AIDZvACQsz0A4Li9APCSPQCAbr0AABE8AABKOwCATLwAALA7ACA4vQCAvjwAADK7AOBCvQAgX70AAJk8AGADvQBwrj0AID+9ALCQPQCA97wAgDu9AICVvADAOL0AQNG8ALCWvQBAQT0AAL07AMCkvADApbwAAGG8AACtOwDQxT0AAHm9ALDOPQAAELoAwLa8AEAdvQBAhj0AAAQ7AECcvADgFT0AwPo8AIAtvAAAjLsAIKW9AAA/PACAi7wAAKq7AMACvQDAoTwAQBy9AID+vADAkLwAsLO9AKAIvQCAnTwAAJM7AEDvPAAwjb0AgIK8AOBgvQAAcDwAAB69AACAOwDAprwAgFg8AAC8OgAQoD0AQMw8AACeOwBAar0AsJ69AEDLPACgUb0AAFA6AADWuwCAczwA8KE9AACxOwCAMrwAUI09AICXvAAASLoAQLS8AMCbvQAgKb0AIAU9AIDOPACASjwAACm8AAA+OwDAi7wAAE89AAArvAAAxzwAAFo8AAAuOwBQnL0AwOE8AMA1PQCAJLwAgA89AECxvQDAez0AwP48AMAbvQBgRr0AAKC5ACBHvQDAiTwAIAQ9AECnPQBgSr0AwBA9AGA+PQCAdzwAQGo9AGBtvQDAi7wAALY8AAANvAAAmzsAAFA8AIB1vQCAlrwAQJO8AICRPACAVzwAYLg9AMDivAAAVrwAQCg9AABIOgAgP70AANA8AIChvABASb0A4BE9AIAvPAAAljwAgDk8ACBZPQDA/zwAABW9AABMPQAgKL0AwMk8AICRPACAU7wAAOq7AAC1vAAApLoAoB49AMCHPACgWD0AwCQ9AAAoPAAA97wAwEI9AECBvAAAKLoA4GA9AEDHPACAZTwAgE88AIDIvAAADT0AANY8AIBMvABgFz0AQCu9AIAbvADAVT0AAGc8AAACPQCgQj0AgB08AHCLPQCA8DwAAMq8AEBfPQAArTsAwOm8AIAtvADwt70AAOI7APCUvQAAqzsAAGu8ANASPgAADTwAYDo9AIB+PACgNb0AQMi8AEBvvQAgKb0AADq8AMCPPQCwgz0AIHa9AMDfvAAAfb0AgMq8AAD1uwAA0LkAgM49AOBkvQCgHL0AgFg9AADmOwAAHL0AQME8AMA0PQCQjj0AIDi9AAAMPQCger0AcKa9ANCevQDgkz0AYA49AAA+PQBAVD0AgGo8ACAZPQAArTsAALm7AEDGPACgXD0AAFe9AADRuwDAubwAwOW8AAAgPACwnr0A8K09APCpPQAAUT0AAOA8AICwvAAQnj0AQKy8AIBcvACAKz0AALM8AADMvACAFTwAgB88AMCWPAAAKj0AAMA6AADguwBgwL0AgCc9ADDNvQDAiTwA4FG9AMCFPAAA8zwAcLm9AEB4PQCgur0AgAy8AMBwvQAAmLoAwEq9AMC0PADAy7wAgIs8AMBhPQBA0zwAIBo9AOCZPQAAf7wAAMa9AABAOQCAAT0AAHm8APAMvgDAcL0AgH68AAD8PACA8rwAYAo9ACA9vQBABT0AgAI8AMCkvABALr0AQIq8AIAhvAAACDoAABi7AGANPQBA9LwAAKk7AICvPAAAgrsAYGe9AMApPQAAFjsA4Bo9AICDvACQsz0AAII8AEDKvACQjD0AYE49AMCEvAAAP7wAACA8AAAbPAAAKDoAABw7AOBuvQAgY70AAFC7AEDWvAC4CL4AgJS8AACEPQDgIL0AABi8AACGuwDgL70AIE29AGAcPQCAI7wAwF09ALCOvQAAfT0AQDw9AMC1PABQ3L0AAB88AICgPAAAibsAYG29AMB0PQDQvb0AULk9AKC6PQAA3bwAAGg6AMARPQBAyjwAgMQ8AIBdvQAALT0AADq9AAB0vQCAbjwAACe9AACfvQBAozw=","chunkHash":"e263abae44e61f4fadff11203b3573b0fb25c24dd4ef1b671ddc11534f0530be"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef process_all_samples(sample_dir, output_dir, voxel_size=1.0, sample_rate=0.5, max_points=None):\n    #...\n    results = {}\n    \n    # Process each sample\n    for sample_id in tqdm(sample_ids, desc=\"Processing samples\"):\n        output_file = process_sample(\n            sample_id, \n            sample_dir, \n            output_dir, \n            voxel_size=voxel_size,\n            sample_rate=sample_rate,\n            max_points=max_points\n        )\n        \n        if output_file:\n            results[sample_id] = output_file\n    \n    print(f\"Processed {len(results)} samples out of {len(sample_ids)}\")\n    return results\n#...\n```","range":{"startLineNumber":287,"startColumn":0,"endLineNumber":304,"endColumn":18},"embedding":"AADeOwCAvTwAwJc9AKAQvQDggL0AoBm9AIAhvABA77wAAIq7AADhPABAOD0AAH+8AIDivACAg70AgOW8AADRPACgLb0AsJM9AIBFPABALT0AgD09AICNPAAgQT0AQME8AADdvABAxLwAAAs8AMDkPABA4TwAACW8AKBivQCA17wAAPy9AAALvACQk70AIIU9AIBWvAAA8LsAAK68AABvPACQ7z0A4E+9AMBEPQAAjLwAALA8AADLvABggb0AcNy9AECzvADAhzwAwOg8AGCSPQAAELwAAEu9AEDJvADA77wAAIA6AIDDvAAAPjsAAEK7ACBNPQAAmbsAkI89AEAaPQAgKD0AgIO8AIBCvADQqL0AAFC7AECFvQAADbwA4CI9AEBfvQDgBb0AYKE9AADyvACAcrwAwNU8AOClvQCAy7wAgAI8AACsOwAALj0AAC+8AKBcvQDgdb0AgAi9AGBCvQCArzwAADu8AIBlPADAVT0AgH69AMDEPACAc7wAAKu7AACfPABASr0AYDQ9AADAuQCAvTwAwIW8AMDNPAAAursAwMM8AACyvABA6DwAAEC8AMD8vACAoTwA4Ak9AABDvAAAUDsAAKA5AIDrPACAB7wA4J09AEC4PABAI70AABC9AIAHvQDgKj0AADq8AMDvvACAj7wAAEO8AGBhPQBgRb0AAEk8AMALPQBAuDwAACw7AIB1PQDwkL0AoCC9AGCpvQAAIj0AIEY9AABguwAASzwAQCI9ABCyPQDALT0A4Do9AIDDvADAqbwAgOW9ABCDPQBAqTwAALo8AGBYvQDA+TwAgB68AAA/PACAZDwAUIa9AACIuwDg2T0AQL69AEC/PADAG70AAPQ7AEAJPQAAQTwAgHU8AKBsvQAAEjsAIAm9AGCSvQCwj70AAAQ8AGBCvQCALz0AAPi6AIDmPAAAEb0AwKm8ACAPvQDAU70AIEO9AKCjvQDgLj0AABi7AABnvADAgbwAgGW8AIALvADwyj0A4Cu9ALDgPQBgGj0AAPY7AEAVvQDAWz0AoAM9AACoOgDAHD0AQDw9AEDxvAAACLwAIJy9AED8PAAA8LkAgE+8AMD3vABAwbwAANy6AAAGvQDAyrwAcJG9AACRvAAAxjwAwBg9AABFPQDwoL0AgL+8AGBtvQAwgD0AoAq9AEARPQAAc7wAAFY9AKAmPQDwuz0AAPA8AADcOwBAFb0AYIq9AICYPABABb0AAJO7AEDyvACACLwAQFc9AADpuwAAgTsAYJg9AMCuvACAyrwAwBe9ADCmvQBgRb0AoAI9AAA6PQAA7LoAAPS6AAA5vACApLwAAKs9AAC3OwAAGjsAgEc8AAD9uwBALb0AQOM8AIDnPADgT70AAHI9AAB5vQCAhTwAwEM9AABjvABQjb0AQPs8AIACvQCAUTwAAAc9ACCQPQDAJb0AQAA9AICAPACAi7wAgDs9AICOvQCgCr0AgO88AICQPAAAPzwAgDg8AEBnvQCAYbwAAJ+8AAAoOwDAAD0A0KA9AMAAvQAAhrwAoBY9AECzPADA+7wAAGQ9AFCZvQBwqL0AAL47AAAovAAAsjsAgBo9AIB6PADAGD0AIGW9AGBWPQDA8rwAABw9AICGPACAYb0AgII8AACwugCA4DwAgMc8AIBBPACAHz0AwN88AMDTPADAxLwAwNQ8AIBVvACAIzwAoFg9AABCPAAAV7wAwM48AABavQAAaz0AQI48AMBLvQBAszwAwIi9AKAPvQDwgj0AAE08AMAoPQCAJz0AANQ7AADOPQCgGj0AoBW9AAAuPQBAlTwAAKC8AMC9vABw4r0AAFW8AIBQvQAAvrwAYA49ADgFPgAAzjwAAHA8AEAHPQBQgL0AACi7AAByvQAAE7wAAJ+8AOCZPQBAOj0AYFC9AOBovQCAyL0AgAG9AEDMvADAzTwA4MA9ACBTvQBgLL0AIA49AMDxvACA0bwAAIe7AOAsPQCAbD0AQIg8AEDTPAAwkb0A4La9ACB3vQAgVT0AsIQ9AED0PACgbT0AYD09AMAtPQCAfTwAAFQ7AAA2OwDgIT0AQA+9AABIugBgMr0AAJ27AACEOwAAkL0AwIo9AOCdPQAgVD0AoCc9AAB4uwDAeT0AALO7AAD4PABAFT0A4Ck9AADJvAAA3TwAgBG8AIDgPADAvTwAAPS6AEAvPQAQ070AwOg8ALDSvQBAjjwAsJq9ACA1PQBAlzwAYIi9AAAVPQBwqr0AAAU9AJCNvQDA/TwA4Cm9AIATPQAAmbsAwJk8AECGPAAA07sAYCM9AMBQPQDAo7wAgNe9AACNOwBAmTwAwOy8ABgIvgCQhL0AgB28AKA3PQCAFb0AAMQ8AOBrvQCA6jwAABY8AKBpvQBANr0AALW8AECfvAAASTwAgFS8AIASPQAAjbwAAG08AMCxPAAAsLsAILe9AEDyPAAA1TsAIA09AAA0uwCgcD0AAEa7AIDivABgwj0AgCc9AIDVvAAAuzsAYC09AABiuwCAQbwAgOM8AKAzvQBAiLwAAPy7AGBNvQCQ2L0AAMM7AEBJPQDA2bwAQJ48AADnuwCA7bwAUI+9AACYPACAa7wAGAY+AFCVvQAAIz0AAG48AICmPADwxr0AAIg6AACFPACAT7wAgE29AAApPQBQnb0A8LU9ANDSPQCAeb0AABi6AAAoPQBgMT0AQDc9AADFvACgST0AIBq9AIDYvABgWz0AADY7APCBvQAgDj0=","chunkHash":"ec57af39cb5050cf4c4529896adc9136b2ab68eb42cde43acbb2ab4da67f8889"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef main():\n    \"\"\"\n    Main function to run the point cloud generation process.\n    \"\"\"\n    import argparse\n    \n    parser = argparse.ArgumentParser(description=\"Generate 3D point clouds from masked nuclei samples\")\n    parser.add_argument(\"--data_dir\", type=str, default=\"data\", \n                        help=\"Root directory containing all samples\")\n    parser.add_argument(\"--output_dir\", type=str, default=\"data/pointclouds\", \n                        help=\"Directory to save the point clouds\")\n    parser.add_argument(\"--voxel_size\", type=float, default=1.0, \n                        help=\"Size of each voxel in the output point cloud\")\n    parser.add_argument(\"--sample_rate\", type=float, default=0.1, \n                        help=\"Fraction of points to keep (1.0 = all points)\")\n    parser.add_argument(\"--max_points\", type=int, default=10000, \n                        help=\"Maximum number of points to include in the point cloud\")\n    parser.add_argument(\"--sample_id\", type=str, default=None,\n                        help=\"Process only a specific sample ID\")\n    \n    args = parser.parse_args()\n    \n    # Process a single sample if specified\n    #...\n```","range":{"startLineNumber":310,"startColumn":0,"endLineNumber":329,"endColumn":0},"embedding":"AMANvQAgUD0AkAM+AOBuvQCwnL0AgJq9AIB8PACAPrwAgEo8AGAiPQAAe7wAACA6AADCuwBAa70AAIW8AGANPQBAwL0AQNg8AMDaPAAAkzsA4I89AMDIPQCA+zwAgAo9AOAjvQAAArwAAHq7AABSPQCAJz0AAGe8AAAJvQAARL0AILi9AMBEvQDggL0AQKA8AEAaPQAAajwAoHq9AEDvPADApj0AcCC+AKAVPQAA97wAAEo8AACUvABAAb0AYKK9AID7PACAP7wAQJO8AMAOPQAAFLsAwCG9AOA1vQAA+zsAQME8AABguwAAfrwAgKO8AADHPQAAhbsAgK48AMCQPACAiTwAAJE8AAA+PQBgi70AsKW9AABIvACAPrwAIAg9AKCDvQBgPL0A4Cc9AACyvAAATrwAgIo8AGDPvQAgRL0AAMc8AOA/PQAAnTwAgPk8AIAIvQCgk70AQAu9AMCvvAAAJjsAAEi6AAC+uwCADDwAQAe9AEBmPQCAMLwAQM08AABFPAAwm70AINM9AAAxvAAApTwAQLE8AAAkPABA57wAoCY9AADzvAAABT0AAPY8AOADvQBAgT0AgF+8AIAhvAAAnTwAAL07AIBnvAAAiLoAwOM9AACLPAAAQLsAAOe8AEAovQDghz0AwAe9AAAMuwDApbwAgHs8AJDCPQDAb70AAOS7ACASPQAgYz0AAKi7AIDRPAAA+LoA4Ji9AIBivQBgDT0AgGU8AIB3vADABT0AwPk8AOBDPQAA37sAAOQ6ACB9vQDAsbwAkPu9ALC7PQCAc7wAIMA9AAApvAAAAz0A4CM9AMCwvADgWT0AQFi9AAB3vABguD0AAHC9AIAUPQAAjrwAADY8AABTPABAB70AwDe9AACfuwCACr0AQDK9AICEvQBgmb0AAGA5AOB0vQCAczwAgBq8AOB5PQAAkLwAAES9AAAZPABAzrwAADe9AIAivQAAMD0AkIC9AADivACAvbwAgAU9AIDbPABAID0AcIC9AFD3PQAAqDoAcJQ9AIBcvQBAqjwAAKA7AACmuwDAYD0AADg8AMDLPADAUz0AgPe8AECQPACAkTwAwMy8AACWuwDAkbwAANO7AIDlvAAAqL0AYAm9AEArvQAAf7wAYFA9AACCvADwy70AAC28AKAJvQCguT0AwNs8ADCXPQCA37wAwIs8AADtOwAASzwAYIQ9AADJOwAA8rwAICC9AIBQPQDAvjwAgPw8AIBTvAAA3LoAQB09AIAWvQAAKLsAQK09AADfuwAAwTwAgF08AACovQAA8LsAAPC7AAA8uwDAND0AABg6AMAaPQBgDb0AMK89AACIPAAAsTwAACI7AEDuPADA+LwAgKm8AMDfPAAA97wAoDM9AAAgvABAl7wAgCy8AAAzvQCAuL0AAFO8AMDovAAAmzwAICu9AIB5PQBwiL0AYDK9AABMPAAAKTwAYHU9AEBtvQAAJb0AcIk9AMCJPABAFD0AwK08AACYvQBgCL0AAA48AIAqvACA5zwAYHc9AADOuwBApzwAAB68AADkOwBQmL0AoAc9AKBkvQCAjL0AoB89AMCHPAAAeDsAAE08AAA5PQCAoTwAIAO9AACmPAAAKDsAoAA9AIChvAAAULwAAKQ7AMCwvADAEz0A8Ik9AABXPQDAhLwAwBg9AMChvADADr0AQCo9AADMvABAOz0AwAI9AAC+uwAgAL0AICc9AJC0vQBAGj0AgJK8AMBevQAAHD0AADK7AKA4vQAAiLsAgDG8AEA1PQAArbsAgBu8AGAbPQCghT0AMIC9AEAxPQCgXT0AgHu8AABOPADQ070AYDm9AMBevQDAkzwAgD48APC1PQDA3jwAwII9ADDFPQAAi70AwMe8ACAsvQDA97wAAII7AEAzPQDAh7wAAEy7ANC0vQCgF70AQCC9AGChvQAA4jsAoBI9AADKvQBAGb0AQL88AIBHvQAAADgAQKu8AEA4PQBAYz0AALw7AGAMPQBwn70A4IG9ACCdvQBAlDwAUIU9AECtvAAA0DkAQC49AMCmvACAAzwAgOq8AABQuwAArTsAgBo8AIAsPACAW70AwLg8ACDOPQBg070AwOU8AMDwPACAVrwAgGu8AOAaPQCASjwAwBE9AACQugAAvrsAAOI8AIDtvAAAKjwAAMI8AIAUvAAAGLwAgHk8AAAmvABAP70AQCE9AEARvQBANT0A4BS9AMDEPACAJDwAgLa8AMDNPACgBL0AgAY9AOBZvQBgZb0AwJy8AAAbvABgML0AwIg9AJCNPQAAijsAsIg9AMDHPADAzjwA4Eq9AKAivQCgYD0AgPy8AEABvgCAr7wAwPs8ACAxPQAAgDwAAIE8AGALvQCAwTwAAIc7ACAvvQCQmL0AgJW8AMDhvABAqLwAQJW8AMCYvACAO70AAIk7AIAEvAAA9bwAAII7AHD0PQAAdDsAAKI8AEChPQDANj0AAOe7AMA2vQBwjT0AAH29AMDyPACAPzwAgIQ9AAAfPAAAErwAgBQ9ABCFvQBACT0AQKq8ALCYvQAggr0AwO68ADCEPQBAwLwAAAw8AIC9PAAAXj0AAIC8AKBQPQCAIzwA4BA+AKB/vQAgNT0AgFS8AACjOwDgor0AAAQ7AABbPQCAUrwAAAY8AMDMvABA87wAgLY8AAASPAAAALgAAI87AGChPQAQjz0AgAo9AOALvQCAHr0AgBE8AAChPAAA/rsAgK08AODJvQBQhD0=","chunkHash":"ea4309ac65c9d6738113d578b1f76db0d0d1a6caafae308321f7ca97dcc11cdc"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef main():\n    \"\"\"\n    Main function to run the point cloud generation process.\n    \"\"\"\n    #...\n    if args.sample_id:\n        process_sample(\n            args.sample_id, \n            args.data_dir, \n            args.output_dir, \n            voxel_size=args.voxel_size,\n            sample_rate=args.sample_rate,\n            max_points=args.max_points\n        )\n    else:\n        # Process all samples\n        process_all_samples(\n            args.data_dir, \n            args.output_dir, \n            voxel_size=args.voxel_size,\n            sample_rate=args.sample_rate,\n            max_points=args.max_points\n        )\n#...\n```","range":{"startLineNumber":329,"startColumn":0,"endLineNumber":346,"endColumn":9},"embedding":"AADBOwAAXz0AYOk9AIAIvQAwqr0AkLe9AAAAPQDAi7wAQLQ8AIAiPQCABrwAAHa8AIAGvAAAgb0AgOG8AMATPQDg1L0AAKw8AAC5PAAAy7sAIGY9AFCjPQCgND0AACQ9AOAsvQAAkrsAAOM7AKCDPQAgKz0AAIe8AAAqOwDgIL0A0MC9AIA0vQCAUL0AwM88AICNPAAAcjsAwGG9AADPPAAgsD0A0O69AMBTPQAAhbsAAAk9AAC3vADgTL0AgIq9AKAjPQAATzwA4CS9AACMPACgMz0AUKi9AAAuvQAAZLsAAAC4AIAdvADgFb0AAEq7AKDOPQAAuzsAAF47AEC2PAAAPzwAgKI8AIDyPADApL0A8KW9AMDpvACAK70AwBQ9AABHvQDgSL0AwGk9AIBHvAAAATwAABc8AEClvQCADb0AQKw8AKBzPQDA1TwAwKc8ACAIvQDApr0AQCi9AMBrvQDAvTwAAJK7AABQOgCAXzwAgCq9AKB5PQAAALwAANs8AABwPADgSr0AoHA9AACwOQAAijsAgKo8AAD7OwAA8LwAABI9AKAMvQAAqzwAQNI8AMDavACgkD0AgBu9AADwuQAA1DsAwNU8AICVvAAApDsAoPY9AECyPABA47wAwFi9AMBtvQAAdj0A4Dm9AIBlvAAA6LwAQKo8AICVPQCgBr0AwIm8ACBpPQCgGT0AgII8AMCjPABAnDwA4De9AECTvQDgCD0AwOQ8AACcOgAAIjwA4DU9ACA5PQCAEDwAAAi6AABEvQCAJbwAOAy+ALCqPQCAWrwAYH09AACQugDA2TwAAPo8ACAQvQDAcz0AAHe9AIB9vAAAvz0AkIO9AMDZPAAAGrsAAGY8AEAWPQAACDoAwF+9AKBcvQAAJL0AwAq9AGBfvQCwvb0AAEK8ALCGvQAA0jsAANC6ADCDPQAAB70A4DK9AIAIvADA2rwA4C69AGABvQBgLT0AwFO9AEApvQDgUL0AsIk9AIAwPQAAYj0AQCS9ANDcPQAA5bsAQJw9AKAKvQBAiTwAwMA8AABdPABASD0AgD08AACbPACAAT0AgLu8AMD5PACAnDwAgAS9AMAMvQAA6rsAAOQ7AACbvAAAnr0AALq8AEA5vQCAm7wAQAk9AMC4vABwz70AgIS8AAARvQCw3j0AgDU8AACePQCAXb0AwNY8AACvOwBA5TwAIKc9AAAXPAAAo7wAoD69ACAfPQAASjsAQIE8ACABvQAAiDsAwI48AABXvAAAcrsAwJ09AABQOwAAbrsAAPi6APCYvQAAkjsAwOS8AIAWvADAiDwAgCk8AAAOPQAAULwAYL89AMCSPAAAADkAQMm8AIBdPACAqLwAAIu7AIBYvAAAkjsAgC09AIAXvAAArbwAgCc8AMA2vQCgvL0AAEA6AIAFvQDAxzwAAMC8AABOPQDARr0AwGK9AACVPAAAUDoAwGI9AOBivQAAqrwAYEk9AACguQBgNz0AQIU8ACCavQAAdrsAAHg8AACrOwBATz0AQGs9AACIOwAAYrsAgDA8AIA/vAAAXb0AIGA9AIAPvQAwn70AAHo8AADDOwDAJz0AAKo7AIAHPQAAxDwAQAa9AADhOwAAkLsAAAA9AAA4vAAAaLsAgAK8AOAcvQDAzDwA4Gk9AOAlPQAAELwAAPc8AIBlPABAxbwAQA09AICLvABgTj0AwFM9AADeuwBAG70AQFk9ANCNvQDADz0AAJe8AIBxvQCA1DwAALM7AKAavQAAELsAALE7AOAkPQAAwLsAgFy8ACB/PQDQ0T0AYD+9AKASPQAAaT0AAN+7AAB8OwCQu70AAHy8AKBIvQCAzzwAgH88AGC2PQCAuDwA4Jk9AJCLPQCApL0AwKm8AEBbvQCAAr0AADw8AID7PADAmrwAALG7AMDXvQAAzrwA4C69AHCUvQAAqDwAgKk8AHDuvQDgM70AIDw9ACBvvQCA3LwAAOS8AKAaPQCAVz0AQPA8AACwuQAQkr0AIGO9AGCcvQAABzwAIFA9AMAFvQAACjwAwIs8AAAdPACAJzwAoDq9AIAhvAAAKTwAwKG8AECBvAAgUb0AANg8ANDEPQCg5r0AwP08AEDpPABAlrwAANq7AKBpPQDA4TwAwAg9AECVvACAHTwAQOE8AACOvABAuDwAgBQ9AADAOAAAcbwAAJq7AACdvAAAI70AwBU9AIBRvQCgDT0AYHO9AECBPAAAvLoAgFm8AMAwPQCAeLwAQAk9AMAdvQDApbwAQKS8AACLOwCA07wAwIE9AAB5PQAAHTwA8Jg9AMDYPAAAkjwAIIO9AMAnvQBgVT0AgGu8AOAQvgCgJ70AAJo8ADCEPQAAADgAgIM8AEDMvAAA7zsAgDW8AKBJvQDwu70AQPO8AADOvACgJL0AALC5AACvuwCA8LwAAI07AIAfvADgBr0AgJI8AFC1PQAAijsA4AU9AGDVPQDARj0AACg8AGBkvQBAnD0AYFq9AAC4PABA7jwAoGw9AAA8OwCAoLwAgJg8ACAPvQBAFj0AAFm8AGCRvQAQsb0AwNe8AKAbPQCA2LwAYDQ9AMAUPQBgkz0AoAO9AMDaPAAA4rwAGA4+AMCevQAgIz0AQPK8AADdPADA0r0AABi6AMA8PQAAMLwAQNm8AMC2vADgNr0AwFI9AAA2PADAnrwAAGY7APCaPQCAND0AAP48AAACvQAA27sAANc7AADzuwDAyzwAAFC8AHDCvQCwgj0=","chunkHash":"6da9db992c7c868a6cea4532b9fc880682509b632172353c27ae7409c1688bd5"},{"text":"File: `utils/pointcloud.py`\n```python\nimport os\nimport numpy as np\nimport pandas as pd\nimport glob\nfrom PIL import Image\nimport sys\nfrom tqdm import tqdm\nimport open3d as o3d\nfrom skimage import measure\n\n# Add parent directory to path to import config\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\n\ndef load_mask_volume(mask_dir):\n    #...\ndef create_pointcloud_from_mask(mask_volume, threshold=0.5, voxel_size=1.0, sample_rate=1.0, max_points=None):\n    #...\ndef create_mesh_from_mask(mask_volume, threshold=0.5, voxel_size=1.0, smoothing_iterations=0):\n    #...\ndef process_sample(sample_id, root_dir, output_dir, voxel_size=1.0, sample_rate=0.5, max_points=None):\n    #...\ndef process_sample_mesh(sample_id, root_dir, output_dir, voxel_size=1.0, smoothing_iterations=1):\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":210,"endColumn":97},"embedding":"AAApvQCgVD0AoH49AKAvvQDAfL0AoJS9AGAOPQCAtTwAAAAAAMDsPAAAEDsAAFU8AICXPAAA67sAgDg8AEBHPQBA5rwAYCE9AIDuvAAgOD0AoJw9AKC8PQBA+jwAAMq7AKAcvQAA9rsAIFk9AOA/PQBAkj0AABc8AOB2vQAA17wA8PC9AABAuQCgVb0AQPQ8AIDNPAAAPT0AAA69AAD/uwDwsz0AkIW9ACC5PQAAwDkAAH48AADbvACAU7wAQIO9AMCZPAAAHbwAgBM8ACCEPQAAlbwAMLS9AMCpvACAN7wAAOa8AADPuwAAYDwAgJo8ALDJPQBAP70AAOa7AIBkPAAwiz0AgHu8AADQuQCQqL0AwAi9AMBOvQDAG70A0IE9AKARvQDwq70AQIA9AIApvQCAn7wA8IU9AFDTvQAAfb0AQLm8AAAbPAAADzwAwLs8AFCYvQDwk70AcMW9AACEvABA7LwAgIS8AABMvABA0bwAQKK8AMDfPAAAkjsAAIA6AACivABQhL0AoGo9AACPuwAA5TsAAKI7AAAMPQCgSD0AICI9AMC+PACgYj0AgM68AAChOwDgrT0AADC6AADtuwCAfTwAgCI8AAAIOwCADDwAwGo9AAAavABARb0AgLY8AOB7vQAgAD0AgLe8AECdvAAAzjsAAEC8AMCyPADggL0AAMq8AEDzvAAAvTwA4Be9AEC/PQAw1b0A4A29AGAhvQAAPT0AgDG8AICZvABQhD0AwBy9AMAbPQBA0jwAAJM8ACCCvQAAkb0AYF69AIDCPQAAibsAQBI9APCUvQBAgj0AgLI8AAD5vAAAbjsAII+9AECuPABA1j0AYBm9AIBpvACAMr0AAKM8AIAbPQBAtTwAYBY9AKAQPQCAnLwAACW9AEClvAAw8b0AAGI7AOAvvQCAmzwAQFe9AMAJPQAAqjwAACC9AECKPQAA9rwAAOO7AIBMvQCgNz0AAE48AMDcvABApLwAgPA8AACAOwCg0T0AAEi6ABgMPgCAkzwAgEI9AABiuwBA7zwA4H89AAAOvAAgbT0AAMc7AADjuwCACb0AAK+8APCUPQAAej0AABa7AACgvACAzrwAAGU8AACmuwBwsL0AAA69AACNuwCAxbwAwAQ9AECuPABAbb0AANQ8AABrvQCAJT0AgK+8AICBPQAACLoAIGU9ACATPQAA+zsAAHY9AIB4vACATrwAIHy9AAARPQAAsLkAgKM8AECgPABgUL0AAJ08AIDJPAAAD7wAAJ+7AADEuwCAG7wAIGc9AABCvAAgHz0AAHw7AABoPACgJz0AgAc8AEABvQCAW7wAwBw9AOACPQCQmj0AABo8AOAKPQAAprsAAB68AECQvAAQib0AAK28ACBXvQAAIDsAwMc8AKACvQAgo70AgLK8AICOPADgDj0AwAK9AEBwPQBgB70AABe8AGApPQAAwLgAkKc9AIBXvQCgpb0AIE09AAD8vAAAODsAgPI8AGALvQCAAb0AANu7AIBJPAAAQLkAwJs8AADEOgCAILwAADQ9AACUvABAsb0AADA8ABACvgCQsL0AAAk9AADJOwAAhLoAgGi8AGAPvQBA1zwAUKC9AIDSPADA+bwAAJq7AABqvACwk70AACg7AMAjPQBAuDwAgIS8AGAIvQCA+rwAAOw8AIAfPQAAtLsAwNM8AABYvADgRz0AQJw8AIAJPQDATb0AALA5ACDBvQCARbwAgDa8AABsvQAwpD0AwFG9ACAFvQBA0zwAAG69AADeuwDAm7wAAFg6AGAkPQAAMDwAAJO8AEAPPQCAHj0AQAm9AIAXvABAmr0AANO8AADCvACgbr0A4KU9AOBpPQCAQTwA4AI9AACSPQAgaL0AsJu9AACJuwBAmbwAgLU8AMDmvADgJz0AAFA7AMBjvQAAPr0AABm9AGAivQCAzDwAQCM9AADVvAAAN70AgAg9AEDyvAAAwzsAcJG9AED6PACAuj0AwCu9AADqOwDQqL0AeA6+AIBWvQAgDj0AgPQ8AICRvABgIT0AYNk9AMCGvQAAPLsAgCU9AGA9vQAAdDsAAO47AACIOwDgEL0AAGc8AICsPQAAmr0AQOo8AHCRPQBgCT0AACg8AACSPQCAnjwAAM88AECvPAAAljsAANE8AIBEvAAADz0AACq8AAAzPABgUD0AgHM9AMCivADg1b0AgEg8AFC9vQAAtLsAAHS9AMDWPAAAeTwAwBi9AIBjvACAJb0AAOA6AOBtvQAAxLoAAMG8AAAtPABAv7wAoIA9AEDcPAAACzwAQHM9AIAKvQCAO70AIIW9AACZOwCAdzwAgIu8AHCwvQAAjL0AgPo8AGBWPQBALT0AwOG8AMA2vQAAgrsAgDs8AKBovQAAfL0AoDI9AIA4vACAULwAACa8AADcugDgLL0AQL08AKAgPQBAujwAUK29AOALPQBgG70AYBg9AABDvADAmzwAgLI8AADkugAAZD0AAAo7AEA0PQAAJjwAgL88AMABPQAAzjsAIHw9AICBvADwgz0AgP48AEAVvQCgJr0AwJK8AABsuwAAmr0AgPI8AMBgPQAAQDoAAF29AOAkPQAgPT0A+AI+AGA0vQBgRD0AoII9AMDKvABw670AwCg9AECMPQCAb7wAAKu7AABBPAAQlL0AYAo9AMDzPACgCL0AwKQ8AAAzPADAlbwAgJU8AAAAugAASjsAgHy8AJCwvQAAtLsAoAE9AAD8vABAiT0=","chunkHash":"ae1969e15617f3764ed2dc43d888a82b30ca5ca1531633ff60061b3d2d61ee45"},{"text":"File: `utils/pointcloud.py`\n```python\n#...\ndef process_all_samples(sample_dir, output_dir, voxel_size=1.0, sample_rate=0.5, max_points=None):\n    #...\ndef main():\n    \"\"\"\n    Main function to run the point cloud generation process.\n    \"\"\"\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":262,"startColumn":0,"endLineNumber":350,"endColumn":0},"embedding":"AADCuwBAMz0AgKM9AGAKvQAApr0AQF29AIA6PADAIb0AADU8ACA+PQAASjwAgHI8AABFvABwjL0AQBG9AIAvPQAwtb0AIBE9AIAJPQAACrwAwHA9AABhPQDAST0AQOA8AEAzvQAA7LwAAFM8ACAmPQCgLD0AAJG8AIAWvQDADL0AQOK9AIAYvQDglr0AQCY9AACbOwAA7bsAgFO9AMBOPQBAzT0A0Pq9AEBTPQAAxbwAwKg8AAAGuwDwjb0AkNK9AIBFPADApzwAAB68AIByPAAgCD0A4IG9AKAQvQBAtbwAgKQ8AIAqvAAACLwAgJs8AKC/PQAAjDoAgPE8AMC+PAAArTwAwJI8AACPPADAsb0AwHi9AABvvQCAp7wAgJ88AKAyvQCAF70AoHs9AMCBvACABbwAAAw8ANCYvQCA+LwAQJ48AMARPQDAAD0AAE08AIBRvQCgnr0AwNS8AMCPvABgOz0AgGG8AIAtPABAGT0AoFS9AEBVPQCAT7wAgAA8AABuPAAQhr0AgEs9AABEvAAAFzwAAMq7AAB2PAAARbwAAAQ9AOAfvQDA9TwAACy7AAACvQAgOj0AAJK8AADquwAAAjwAAMW7AABBvAAA/jsAIPE9AAB7PAAAKL0AgD69AEARvQCgiD0A4EO9AIAVvAAgL70AgBY9AMBmPQAgEb0AALi7AICPPQCAVzwAwM48ACAJPQCARLwAYDW9ANCYvQCgKj0AYBQ9AADnuwCgHj0AIDw9AOBLPQCAyjwAQIk8ACBOvQAAGrsAmBK+AICBPQAAFrsA4Ec9AABbvAAAWDwAQAA9AAB+uwCgGD0A4Im9AMCCvAAAzT0AMMK9AIBfPQCAULwAQBI9AIAZPQAAFLsAAI28AKCKvQBA4rwAANC8AAANvQCwmr0AAGY8AEBKvQCAMz0AAMi8AHCUPQBAEb0AADm9AACuvADAlrwAQK28AKA9vQBQhT0AwCG9AAD5vACAV7wAAPU8AIAsPQAAhD0AICu9AGDMPQCAXDwAQC09ACA0vQBgIT0AANg8AICHvAAANj0AwKw8AIBHvADAujwAYDW9AADdPAAAIjwAoFW9ACBTvQAAt7sAgPq8ACAUvQCAgb0AIDS9AEBTvQAAgDkAIEY9AACLuwCQ3r0AoBa9AKAAvQBwtD0AAIM7AEBkPQBA3bwAALU8AAAWOwDARj0AoIE9AIATPABAXb0AIG29AEA7PQAAubwAwLo8AICxvACAfbwAICI9AICpvACAcTwAUK09AECEvAAAJDsAoBu9AMDcvQDAuLwAAJ67AICmPAAA4DkAADs8AMCOPAAAVLsAYLk9AACMOwAA+DsAAJe8AAABvAAAX7wAgDU8AACIPACAObwAAFg9AKAJvQCADLwAAN87AMAjvQAQvL0AAJI8AKAvvQAAPTwAgGm8AKCePQAgb70AAIW8AKAXPQDA/rwAAF89AGA4vQCAW7wAAGk9AABGPACA2DwAgDU8AOBtvQCAX7wAAMC5AAB6vAAgXD0AUIU9AAAguwAA4LkAAOs7AADsOgCgWr0AIFI9AID5vADwpr0AwO48AABMuwCA0zwAQMs8AMAkPQCAZDwAQO+8ACBLPQAANbwAQBc9AECdvAAATbwAAIw7AEAFvQCAVDwAQFY9AEC/PAAA2DoAwBQ9AADtPABAFL0AgOI8AABDvAAgHj0AAIk9AAAZvAAArrwA4KI9AEBlvQDgPD0AAJK8AMBCvQCAvjwAgAq8AEBNvQCgET0AAA67AMBgPQCgFT0AgGS8AICcPQBAkT0A4FG9AKBVPQCgOT0AgD68AABwOwAQ0b0AAGW8AFChvQCAfzwAAMw7ABDuPQDA3TwAANc8AACCPQAgl70AQKe8AOBvvQAA8bwAAMA4APCbPQCAdDwAwJy8AFCZvQBAaL0A4Bq9ACBWvQCAoTwA8Io9AHDDvQDANr0AgAk9AGAvvQDgA70AAKS8AEDfPABgij0AAHI8AIAsPABApL0AwIi9AECYvQDASD0AYFk9AICAvACAHTwA4Bw9AKA0PQDAwDwAwOK8AIA+PABgQz0AIBO9AABsuwBAFr0AwJk8ACBbPQAQr70A4FM9AKB4PQCAiTwAAHy7AEDaPAAAPD0AQJU8AAAcPABgNT0AwIg8AIAhvQBgDT0AAHq7AIASPAAAFDsAAGi7AABOOwAgpL0AAAc9AAC4vQDAiTwAIFi9AAAQPQDAujwAYFS9AAAWPQBAFb0AwAs9AABPvQAAMrwAwBu9AMCYPAAAf7wAAC09ANCEPQAA5TsAYHM9AICDPQAACDwAQMi9AADTvABgNz0AIBy9AHATvgBwhb0AAPw7AECDPQAA0LsA4BA9AACIvABAhDwAgDa8AABQvQAwk70AwOy8AEDevACA8bwAAAy8AMCaPADA5bwAAPg7AAAAAAAAn7wAIAO9AFCMPQBAjTwAwBU9AFCFPQCAYz0AgHm8AOBZvQAAbj0AAJ67AECnvACA8zwAwHA9AACBOwAAjLwAQOk8AEAWvQAAqLoAALc7AMAgvQBA3L0AQM+8AGBfPQDgEL0AAOc8AAAjPABAKj0AICG9AAC1PAAAjrwACA8+AEBzvQCAgj0AgO68AIDvPAAAmL0AAFM8AKADPQAA4LsAwO68AAA0OwBAe70AILg9ACBEPQAARL0AADw7AIB0PQBgVT0AAH88AIDbvACAGTwAAJe7AIDIvABgNj0AgKy8ANChvQAA/Dw=","chunkHash":"a12b2ff9bdb5837f2d9bb1cb29f3d9f627d746cfcae122eeee83253df9b4ea10"}]},"file:///teamspace/studios/this_studio/utils/pointcloud_to_html.py":{"hash":"abe41a5092ffb41168c1dc319bba5fc29a4a508945bc0508676648dc5535dc03","entries":[{"text":"File: `utils/pointcloud_to_html.py`\n```python\n#...\ndef convert_pointcloud_to_html(input_file, output_path, title=None, point_size=0.05):\n    \"\"\"\n    Convert a point cloud PLY file to an interactive 3D HTML file.\n    \n    Args:\n        input_file (str): Path to the input PLY file\n        output_path (str): Path to the output HTML file or directory\n        title (str, optional): Title for the HTML page\n        point_size (float, optional): Size of points in the visualization (default: 0.05)\n        \n    Returns:\n        bool: True if successful, False otherwise\n    \"\"\"\n    try:\n        \n        if os.path.isdir(output_path):\n            \n            base_name = os.path.splitext(os.path.basename(input_file))[0]\n            output_file = os.path.join(output_path, f\"{base_name}.html\")\n        else:\n            output_file = output_path\n        \n        \n        os.makedirs(os.path.dirname(os.path.abspath(output_file)), exist_ok=True)\n        \n        \n        pcd = o3d.io.read_point_cloud(input_file)\n        \n        \n        points = np.asarray(pcd.points)\n        \n        \n        if not pcd.has_colors():\n            #...\n```","range":{"startLineNumber":16,"startColumn":0,"endLineNumber":48,"endColumn":0},"embedding":"AAAIvQBAxDwAwKE9AGB2vQAAQDwAML69AIDMPACAuTwA4JY9AMCNPAAAvjwAAAy7AAAAuQDASr0AYCG9ACBlPQAAZjwAYGK9AEBwPQBgRD0AgOM8AECqvAAA1jsAAFM8AADEvADALD0AgKY8AAA2PADA7zwAgJc9ABCMvQAgT70AEKK9AKAxvQAAGb0AgCU8AMARPQCgYj0AgDk8AMD4PABQqT0AgLS8AODaPQAAwTwAAPo8AABOOwCA/TwAgN48AGB7PQAAlDoAAEA8AHC4PQCAZTwAoHW9ALCvvQCAezwAwIo8AKB2PQBAwbwAwPe8AIDoPADA3rwAwNE8ACA5PQCAdrwAgPe8AIDqvAAACLsAgFQ9AOAHvQAAfbwAQOA8AKBCvQAQg70AwL+8AABAvADAM70AgEi8ACBivQCgMb0AQLY8AMD5PACAaL0AALM7AEBVvQCgOL0AIDO9ACBlvQAABL0AAMs7ACCNvQDAAD0A0Kq9AIAqvQCgPr0AIGU9AIAcvQAAB7wAAPs8ACBrvQAAgzsAAGc8AICWPAAAXTwAAPg6AKAwPQAAoD0AAGY8AJCJPQAAOL0AcJC9AMCqPAAAxrwAAIQ8AAC/uwCAGLwAAJE9AACSPAAAHL0AQEy9AMAAvQCAUbwAgGW8AIA8vQAApDoAwKY8AMCGPADAlbwAgIA8AGALvQAAdD0AAAI8ABCbPQAQyr0AAHK9AADXvAAAOLoAgKW8AAAaPAAA/LoAAKQ7AAAauwAA5bsAgFW8AMDQvAAAPDsAwLm8AMBvPQBAwbwA4Eg9AEDhvAAAmzsAwCY9AABiPAAAmDsAgAq9AODqPQAAQz0AwOO8AADKvAAAIDsAgCy8AADLOwBgSr0AwNs8AIAVPACAgT0AALs8ACBkvQCAG7wAgHe8AMCevADACT0A4K89AAChPAAA6TwAwKY8AECfvAAA47wAgPO8AIDRvAAQhz0AgKg8AMDFvACA/rwAAHQ7AIAHPQAA8DsAIC+9AKDjPQBAV70AAPA5AMCFvQBwg70AIFi9AAAmvABg3T0AQJO8AADMOwBAlD0AwNG8AGCUPQAA/bwAwLk8AACfOwCAQz0AALQ8AMC7vADAy70AQN48AIAivACAhDwAAJE8AACAOwAADrwAQHK9AIAuvABAaj0AQPc8AAA2uwDwrb0A4Io9AMAcPQCAOzwAAAS9AADSvAAA0TsAACg6AMClPQDA07wAIBU9AEBWvQBAhTwAoKQ9AIDEPACAtrwAMIQ9AAAjPABA87wAAHE8AKAfvQCATTwA4BC9ACAbvQAAfTwAAHW9AADlvABwi70AAKg8AADeOwDAFz0AAOQ7AAB6vAAAmb0AAMY7AICzvADA570AgO68AIBvPABAbb0AAOy6AAAqOwDAQr0AAIe8ACCQPQDAhTwAIDC9AICDPQDQ3L0AABE8AKCMPQDA0zwA4CE9AIANvQBAQr0AAHy7AMDIvACACT0AAFA8AAC8OgCALrwAALy7AICFvADAlDwAgDS8AIAhPADgZ70AQL28AIBiPAAgGr4AwNI8ANDPvQBgNb0AIA49ACAcvQDwsz0AgLI8AECLPAAAOrwAAAy9AIA0vQBQgb0AgN68AEA2PQAAKjsAIJM9AAD8vACApTwAoL49AACcPADAzbwAoBk9AED0PACgWb0AgEu9ACCjvQCAXz0AgKg9AKBBvQAgYb0AoCA9AOARvQDALT0AAIM8ACB+vQCAEzwAoJi9AOAJvQAAGLoAABe8AIA+PADAqjwAQBu9AAC2vADA9zwAAPW8AIAfPQDAXz0AALC6AADAOACoBr4AAIC6AKC0vQAgGj0AAE88AABEvAAAJDwAIFk9AJDxPQCAMr0AoCm9AEC5PAAA77wAUMs9AADUugAAiTwAgOi8AEAVvQCAv7wAACY7ANCQvQCAFrwAAHa7AAAwOgAgF70AUNE9AACmvQCAsLwAYAG9AMAEPQDArTwAQAk9AECRPAAA/7wAQFu9AADnvAAAujwAAD48AADNvACAPjwAgBY8AABauwCAU7wAQCe9AMDLvQCgdb0AQC49AIAyPABAHL0AAPE7AGD8PQCgwL0AoB69AADpOwAATjwAAJg8AIBRvAAA0rsAANk8AECDvABgQL0AYAg9AAB+PACAEr0AAPi8AEDwvAAA3rsAYDa9AOA8vQDAoLwAAOw7AIBJvQDACD0AQHe9AADgOwCgFr0AAEy8AIDZvQBAUL0AYFI9AOCbvQAAOr0AoGI9AABgPACAbb0AgB89ACCFPQBA3zwAUAE+ACAJPQAAx7sAAKo7AAA2OwBgKj0AgJ48AMB0vQDA7LwAgN+8ABCoPQAADrsAwOs8AECnvAAA0LwAwFu9AAA2uwDA07wAQOU8AIBxvAAANLwAgFK8AEDzvADACz0AABG8AACAuQAAizwAQPA8AIBGPQAgkb0AAMY8AMBFPQCQnD0AgIs8AAAHvABgSj0AQFi9AABlvQDgPT0AoIA9AMCkvADQ2b0AkII9AAA6vQDwlD0AwKa8AACsvQAAw7wAADm9AAAmPQAwyL0AoCK9AEBFPQDgfr0AABC6AMCkvAAAsjwAQM89AABwvABAr7wA4Ae9AICWvABgD70AgDW8AKBJPQCARrwAIBW9AKA5vQAQvr0AAF08AABwPACA37wAwKG8AEDuvACATzwAAHI7AHCAvQCAVTwAAMK7AGBqvQCAM7wAAOa7AICOvAAAGjs=","chunkHash":"f6bac6144aa6cf6041d402983ba0aacc4b2edb349d09085f216b83901228cbeb"},{"text":"File: `utils/pointcloud_to_html.py`\n```python\n#...\ndef convert_pointcloud_to_html(input_file, output_path, title=None, point_size=0.05):\n#...\n            min_coords = np.min(points, axis=0)\n            max_coords = np.max(points, axis=0)\n            range_coords = max_coords - min_coords\n            range_coords[range_coords == 0] = 1  \n            \n            \n            colors = (points - min_coords) / range_coords\n            colors = colors * 255  \n        else:\n            colors = np.asarray(pcd.colors) * 255  \n        \n        \n        data = {\n            'points': points.tolist(),\n            'colors': colors.tolist()\n        }\n        \n        \n        if title is None:\n            title = os.path.splitext(os.path.basename(input_file))[0]\n        \n        \n        html_content = f\"\"\"<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>{title} - 3D Point Cloud Viewer</title>\n    <style>\n        body {{ margin: 0; overflow: hidden; font-family: Arial, sans-serif; }}\n        \n        \n        \n    </style>\n</head>\n<body>\n    <div id=\"container\"></div>\n        #...\n```","range":{"startLineNumber":48,"startColumn":0,"endLineNumber":84,"endColumn":0},"embedding":"AIBkvQCA8bwAAMk9AKBdvQDA2LwAEAO+AADLOwCANjwA4FU9AACGuwBAPD0AANg8AGBwvQDAorwAACS7ALCoPQAASj0AgCU8AEDtPAAggT0AgEC8AKBBvQBgIT0AAPA8AKAZvQCA5TwAAAe8AACzPAAgdj0A0Lo9AMCZvQAAZr0AsK+9AAAAuADgNr0AgC88AIDqPACAZTwAgDk9AEDePAAgrz0AAGY7AOAGPgDAiDwAACE9AOBSvQAABrwAAAY7AIDZPAAApjwAAN48AOBAPQCAIjwAQKm9AMBOvQCgHD0AAPa7ACBJPQCARrwAICq9ALCnPQDAE70AIAg9AMCVPAAANrsAgG29AMD0vADATb0AgLc8AIAFvQCAELwAwKw8AADiuwDAprwAAGg6AAA3vABgpL0AAEg6AGB9vQAAXr0AgLI8AADpPAAgVb0AgBW9AIAmvQAA6rwAQEq9AEBVvQAALr0AgGY8AKAWvQDgSD0A8Lq9AABIugBA5bwAEIU9AIAMvQAAFrwAgNg8AABBvQCgFj0AgKS8AOAoPQAAcjwAALM7AABEuwAAFT0AAJy7AGA3PQAArzsAAIq8AAADPACADb0AAEA7AMCCPACAyLwA8JU9AADbPAAAOb0AwMG8AIBNvAAAL7wAoIm9AGBwvQAArbwAwOo8AABQugBA/LwAAJY7AKASvQDwnz0AAKS8AECAPQAgp70AQGu9AGCBvQAAhjsAAKe7AABNPAAAYTwAwII9AACeOwBAH70AgB29AMDDvACASjwAgLy9ADC1PQAAKDoAYDg9AMCIvADAwTwAADM8AABrvAAAursAAKy9ADCuPQCAjj0AQKG9AIDrvACAEDwAgDu9AAA0PADACb0AQPk8AIBcvAAANT0AABC7AHCGvQBAtrwAYC29AGCPvQBAkT0AwIY9AACFPAAAcLoAAJA5AMB2vQAAbLwAgGo8AAD8vAAgGj0AgIY8AABevAAAPbwAAPS8AKBhPQCAMD0AQAC9AMgKPgCAwLwAAE47AGBlvQAAJ70AAFW9AMCrPABgVz0AwJC8AADwOQDggj0AgAG9AEDmPQAAj7wAIFk9AMAqvQAAkTsAAMo7AADUvACQlb0AAIE8AAAwvACATD0AAMq7AEDTPAAAR7wAAC69AAC3vADgZj0AAF+8AMCyPAAgar0AwKY9AKBHPQAAcLwAAIq8ACBvvQDApTwAAG+8ANC1PQAAjrsAgEQ9AABAvQDAhbwAoHk9AAAMPQCA+LwAELg9AIBovABADr0AAGi7AGBRvQCA1rwAANk7AACtvAAAZDwAIEe9AEAzvQBAdb0AALQ8AMC4PADgLD0AQIg8AEC5PADAhL0AgKY8AACrOwAAr70AQM+8AACSOwAgYr0AABi6AADbvACgM70AADO8ALCEPQAAQLsAYDK9AGA8PQBAlL0AgCA9AEA/PQBAuzwAIBg9AACsuwBAIb0AoDM9AIBMvQDA0jwAgBK9AIA7vACAPLwAwJa8AEDQvABArDwAgLq8AAAGOwBAvr0AgM68AACAOQAAGr4AoAQ9AIDbvQBAor0AYEE9AJCQvQCgEz0AgJk8ACAYPQAA+zsAIBG9AKBlvQDQgr0AACE8ACBRPQCATL0AgJw8AOAMPQCAvzwA8Io9AAB4OwBAD70AgHo8ACCBPQCAqbwAgEC9AOA5vQCAmjwAoDs9AMC8vADA+rwAAMs8AGBOvQAAEjsAAPC5AMB0vQCAvDwAoIW9AIAnPAAAirsAwGC9AACYPAAAersAAIA6AACOPAAAPD0AwMG8AADIuwDAZD0AACS8AAASuwDwv70AgDu9AHCbvQCA9TwAgMI8AMDKvABgfj0AIC89AHC7PQDQmr0AgBS9ACAOPQAAQLwA0NQ9AACjOwAAvzwAAAC9AKAHvQBAFL0AABi7AMB2vQAAQjsAAPc8AOAZvQAAML0AYBk9AKCZvQCAgjwAACS9AABoOwAAWDwAAMs8AAC0ugBACr0AUOC9AIBSvQBgEj0AAD48AACgvAAA8LoAAN48AIAsvACAl7wAAF68AEDSvACA6LwAAIo9AICcPADAiLwAAJi8AEBzPQCwsr0AQLi8AKANPQAAdzwAwDg9AAB9PACAZzwAAJm7AICxPACAdLwAYHc9AIAlPAAATb0AwPC8AMDNvAAAWDwAgLa8AADWvACwqL0AAB08AMB1vQCArDwAwMC8AAB/PAAAN70AgCi8AGCxvQCgub0AQEg9AJCovQAAi7sAANo8AADQOQBgjL0AYAw9AECHPQAAGj0AoME9AABKPAAAqDwAQFC9AMCKvAAAND0AAE67AEAZvQAADL0AwJ88AKCxPQCAgzwAoBU9AACPvAAgA70A4ES9ACARvQDA5rwAYGQ9AADUOgAAGDoAAFq8AAA4vADAFj0AAPi7AMCtvAAAMbwAAKI8AGAuPQBAc70AAFO8AADVPABQhj0AwN48AIAiPAAwxT0AoCm9AJCjvQDgKz0AID09AIAjvQAw270AcIA9AACcOgAAwjwAgKe8ACDBvQCAHL0AAMQ6AADQOwDwh70AAMS8AMBpPQDgjL0AwKS8ACAivQDA0LwA8Ao+AIBwvACgKb0AAM87AACmuwBgbL0AwKa8AECJPAAAN7wA4DS9AMBvvQBgub0AgDQ9AIDsvADAhr0AABQ7AIBPvAAAt7sAgN48AMD8vAAAGDoAACg8AOARvQDA4LwAgOC8AIDRvADgBj0=","chunkHash":"91533206d3530ebc10713cb140f790038db59ce43ad10d1820bd22f4ab55836d"},{"text":"File: `utils/pointcloud_to_html.py`\n```python\n#...\ndef convert_pointcloud_to_html(input_file, output_path, title=None, point_size=0.05):\n#...\n    <div id=\"info\">\n        <h3>{title}</h3>\n        <p>Points: <span id=\"numPoints\">0</span></p>\n        <p>Controls: Left-click + drag to rotate, right-click + drag to pan, scroll to zoom</p>\n    </div>\n    <div id=\"controls\">\n        <label for=\"pointSize\">Point Size:</label>\n        <input type=\"range\" id=\"pointSize\" min=\"0.01\" max=\"0.5\" step=\"0.01\" value=\"{point_size}\">\n        <span id=\"pointSizeValue\">{point_size}</span>\n    </div>\n\n    <script src=\"https://cdn.jsdelivr.net/npm/three@0.132.2/build/three.min.js\"></script>\n    <script src=\"https://cdn.jsdelivr.net/npm/three@0.132.2/examples/js/controls/OrbitControls.js\"></script>\n    <script>\n        // Point cloud data\n        const pointCloudData = {json.dumps(data)};\n        #...\n```","range":{"startLineNumber":84,"startColumn":0,"endLineNumber":100,"endColumn":0},"embedding":"ACBjvQCAGLwAgJY9AOBdvQDA37wAgOi9AAD0OgAAUjwAgFw9AAAAOAAAOjwAAAw9AIDzvADgCL0AgGG8ABC+PQCA8DwAAGw7AIAjPQDAcT0AAIC4AGA4vQAAdT0AwJU8AGANvQDADz0AANK8AAD4OwBQoj0AcMI9AGByvQDAar0AAAy9AAC8OwDgO70AgAi8AICvPADAvzwAgEA9AEAMPQCw0j0AAM27AFD2PQCAMDwAoCI9AIDdvABA1bwAAK+7AMC3PAAAPzwAgOk8AIAcPQAAH7wAwJS9AIAlvQDAmzwAAHC7AKBvPQAAMDsAgCm9ACCOPQBAm7wAoB09AAD2PACABjwA4AG9AIAovQAgO70AAHo8AKBGvQDAxjwAAIg8AMCzvABAAL0AAFS7AIBGPADwv70AALC6AABwvQCAFb0AgKg8AACwPABAcb0A4Fe9AMABvQAA4DoAYAS9AKBRvQCgXb0AQLk8AEApvQAgIz0AQLa9AADWuwCgIb0AQEQ9AICrvACADDwAwAU9AOArvQDgTD0AgC+9AACVPAAAAjsAAB67AABVPACgdD0AAMy7ACCfPQCAAzwAQOe8AIAPPAAgJb0AAEa8AAA4PADAIL0AIE49AMDLPAAAlb0AgAi9AABzvAAAxrwAwI69AIB1vQAAZrwAQOU8AAAWOwBgE70AANI7AACfvABQiT0AALC7AECIPQCQrL0A4E69AGC0vQAAnLsAQI48AIBhPABALj0AYIw9AMCZPABgWL0AAIO8AKB1vQAA0DoAkLO9APCXPQAAWLwAQDw9AEDDvABAyzwAAMy6AADsuwCANzwAYHG9AOBZPQDApz0A8I29AOAdvQAAgDgAIFa9AECqPABgSL0AwAw9AADAugAgTT0AgC48APCmvQBAn7wA4E29ACBgvQBAbD0A4Fw9AABGvACAJjwAQO88AKBPvQAAEDsA4Ak9ACAPvQBgjj0AgFo8AADevAAA1TsAALS7AEA8PQAANj0AANW8ACABPgAANLwAANC6AICQvQAgMr0A4C69AIAsPABgfz0AQJe8AACiuwAwjz0AAAy8APDpPQAAqDoAAKI8AKBJvQAAPjsAADG8AABkvQBQlL0AgG48AMD6vADAYT0AAHq7AACUPAAA3bsAgCO9AMATvQAAcz0AANS8AEDVPADgbr0AcJM9AICrPAAADrsAwLy8ACBivQDAuDwAQJu8ACCMPQBAkDwAwCk9AMD2vAAApzsAgG49AGA+PQCAzLwAQMc9AAAOvAAgIb0AANS8AABmvQDAAb0AQM28AEACvQBAFT0AQNO8AECnvABgSb0AQMc8AADIugDgUD0AABg8AEBcPQDwor0AwAM9AICsvABQt70AAEw8AAAZvAAgI70AQL08AEBevQDwkb0AAES7AOBdPQAALzwAgPa8ACCXPQDAob0AAA47AICqPADAlTwAoB49AACzvACgT70AAAo9AED4vADgHT0AYFu9AECBvAAAQLwAQAO9AIDyvAAA8jwAgH+8AABpPACwhr0AQBW9AIBaPADYDb4AYFQ9ACC9vQDgXL0A4C09ADDOvQAAEz0AgHI8AMDYPAAA4TsAYEa9AMB0vQBAiL0AAHQ7AAA7PQCAG70AQBk9AAAMPAAgAD0AIJ89AICZPAAA3LwAICI9AECTPQAAo7sAwE29AIBhvACA+DwAoKE9AEDevABgLr0AQA49AMBMvQAApTsAAN07AGB0vQBAszwAACO9AIASPAAAl7sAwNm8ACAhPQAAnzwAwII8AADBOwAAYj0AANy8AAAPPAAgAD0AwJu8AADIOwAQi70AcIO9AABivQAAsDsAwK48AAAwOgCAkD0AwEM9ACChPQBgf70AgFm8AGApPQBA+7wA4M89AAC7OwAA4TwA4Ba9AIAOvQCAq7wAAFG8ACCHvQCAdjwAQMA8AEDLvAAA07wA4DU9ANCJvQAAuLsAQOu8AIB+vABAozwAACy8AAAEvACgUb0AoN69AECAvQAA+zwAQOo8AIC9vAAAgrwAAAE8AECVvADADL0AAH28AABpvACgWL0AkIc9AOBDPQCAl7wAgGy8AHCaPQDwhL0AAIG8AAB4PAAAt7sAQFY9AMDcPACAwTwAABA7AIApvAAAIjsAoGE9AECyvACA87wAgLO8ACBZvQCAcbwAgBy9AMDfvADAlr0AALI7AAD9vADA3zwAAFS9AADhOwAgKr0AgK28AGC+vQDAwL0AIG49AIDvvQAAPrsAANw8AAC3uwAwg70AAF49AACmPQCAEj0AUMQ9AICjPABAvzwAYDO9AACqOwCgED0AAJi6AID+vAAA/rsAAIG7AADFPQCAmDwAwCc9AADRuwBAqLwAQFq9AMB6vQCA+rwAgEQ9AIAJPABAtrwAICm9AEAEvQAgPD0AAFK8AADvvAAAALsAgHo8AEB3PQBQoL0AQIQ8AECRPACgYD0AANM8AAD6uwAAwT0AAES8AOB6vQDAJz0AcJE9AHCDvQCwxb0A4DE9AACXuwDAnjwAANs7ABCxvQAgZb0AAAq7AICQvACgL70AQPu8AMDyPAAQor0AwOi8AEAgvQCABL0AwAA+AOABvQDA9rwAAKs8ACBJvQDgXr0AwPq8AMCMPACAPbwAwJq8ACB6vQBw0L0AACU8AAAQuwDAjL0AACC5AADYuwCAITwAQEo9AICOvAAAvrsAAKY8AEAPvQAAr7sAAOy7ACAevQAAOLo=","chunkHash":"d3fe35f19efad727f7648c6e504f85b990dd77a9c570bb8c4020f5b4e5bcc4bf"},{"text":"File: `utils/pointcloud_to_html.py`\n```python\n#...\ndef convert_pointcloud_to_html(input_file, output_path, title=None, point_size=0.05):\n#...\n        // Three.js scene setup\n        const container = document.getElementById('container');\n        const scene = new THREE.Scene();\n        scene.background = new THREE.Color(0x111111);\n        \n        // Camera\n        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.z = 5;\n        \n        // Renderer\n        const renderer = new THREE.WebGLRenderer({{ antialias: true }});\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        container.appendChild(renderer.domElement);\n        \n        // Controls\n        const controls = new THREE.OrbitControls(camera, renderer.domElement);\n        controls.enableDamping = true;\n        controls.dampingFactor = 0.25;\n        \n        // Create point cloud\n        const points = pointCloudData.points;\n        const colors = pointCloudData.colors;\n        \n        const geometry = new THREE.BufferGeometry();\n        const positions = [];\n        const colorValues = [];\n        #...\n```","range":{"startLineNumber":101,"startColumn":0,"endLineNumber":127,"endColumn":0},"embedding":"AHCGvQAAh7wAkKM9AAA5vQAAsrwAEOG9AACkOwAAWLoAQGo9AAB4vADgFD0AIAA9AMCPvABALr0AgDO8ADC6PQAAGz0AABs8AABCPQCgUT0AAPQ6AMANvQBgcz0AIDQ9AEApvQCA2jwAALC8AICsPACAoT0AsKM9ANCEvQAAcb0AwJy9AAC0ugBAlrwAACo8AMCVPAAArTsAANc8AOAUPQBwxT0AAL07AKDmPQCAXDwAwAQ9AOAAvQAA67wAAMc7AAB0PACAbjwAwM88AGA0PQAAILoAYF29AEAMvQAAYDsAAKy8AABLPQAAiLwAwK28ACCrPQDAGb0AAAU9AABQPAAA8jsA4DW9AABNvAAA3LwAAKY8AEDEvAAgBj0AgMU8AIC5PACAMb0AwMG8AICrPAAQrL0AQPe8AICCvQAAz7wAABg8AACRPACgPr0AAD29AEBRvQAAAL0A4D69AGBZvQBggL0A4EQ9AMD3vAAgVz0AoLm9AAAAuQCgGb0A4FU9AIAovQAAujsAwGw9AGAUvQBgPD0AQC69AMAEPQCAVrwAAGI8AECEPACANj0AgH68AOCNPQAAMzwAYFK9AICJPAAAFL0AAP67AAB4OgDA0bwAYIA9AAD5PABAnL0AwAS9AABCuwAALjsAAG29AABwvQAAcLoAAHQ8AAAIOwCgUL0AAJ87AIBZvACwnj0AAPO7AGCGPQBgpr0AYGS9AGCsvQAAELwAgF+8AACkPACAezwA0KM9AAAoPACAe7wAANS8AECdvABgAj0AAGO9AKCiPQAAnrsAADI9AEAgvQAANDsAAMi6AMCQvABA9jwAQKm9APCOPQCAwT0A0Ki9AKAWvQAAQzwAgDy9AICjPADAG70AoAE9AAAoOgBANz0AAFC7AECevQBAzLwAIFi9AMCGvQBgUD0AQHA9AADhuwAAHzwAoA49APCRvQCAmjwAAE08AOAPvQDwmT0AAKG7AACKuwAA/zsAAJm8AIBIPQDgcz0AQNa8ACgoPgDAibwAABg7AKB4vQCAcr0AgAa9AAD+uwCgVT0AwKy8AIAVPADwjj0AAHO8AACbPQCAjjwAgCY9AEBhvQAAkjwAALQ6AAAxvQCgiL0AgL08AECbvABgaz0AAKC7ACAUPQBADb0AgDe9AKA5vQDgeD0AwOW8AOAHPQCwm70AkIg9ACBEPQAAPLsAAKw7AAB6vQCAVDwAgPG8AOCkPQAAQLkAgPo8AABivAAAMbwAQHQ9AOAhPQBAoLwA8LA9AIA5vAAAKL0AAGu8AMA9vQBAGr0AwIa8AIDQvABgRD0AQNC8AIAuvQAgO70AgE48AACbuwCAJj0AwMw8AEALPQAwkr0AgCc9AADjuwCgwb0AAJA6AAA1vABA7rwAQIw8AKAQvQBgL70AAPI7AFCCPQAAfTwAALS8AMBTPQBQp70AAM47AABpPQCAZjwAACI9AEBLvQAAV70AgOE8AMDzvABA5zwAAPG8AADEOgCAt7wAANS8AED+vABA0TwAAEi8AABaOwCAdb0AQJa8AEDgPABgA74AkJ49AEDGvQBgN70AoDI9AFCivQAAGz0AACM8AIAfPQAAsjsAIGi9AEATvQBArL0AgKI8AIBzPQBALL0AgDQ9AMCCPAAAczwA4II9AADoPADAgLwAwKA8ADCGPQAACDoAQOK8AIAovQCAaTwAQKQ9AIAUvAAAAL0AwEI9ABCNvQAAAAAAAIq7AABgvQAA4TsAIGS9AADKuwAANrsAwN28AIDiPAAAWLoAYAU9AABtvACgcj0AwMS8AACougAAdD0AgLi8AAC1vABQm70AMIq9AIBNvQBgBD0AgBA9AICHPABwiT0AgNI8AMC3PQAAmL0A4A+9AIDOPADA67wAIL49AAAhPABAnzwAwOK8AADnvAAAYrwAAH+8AICavQDAlDwAANk8AMCBvADAwLwAIB09AFCLvQDA3DwAAOG7AID0vAAALDwAADg8AABRvADgPb0AgO29AACDvQDA/zwAoAM9AICavAAABDsAANg8AIApvACAN70AQMy8AIC7vADgOr0AoHQ9AABOPQAAwrwAgFC8ACBaPQBQi70AIAK9AADHPAAAuzsA4Cs9AEBSPQAAMzwAAB+8AICTvAAAMLoAMIY9AAA8uwBAQL0AAJG7AMAhvQBAgrwA4B29AEDQvACwtb0AAPA7AOAkvQCgAz0AQEa9AAC8OgCgcr0AAPy6APCpvQDA3r0AYGY9AGC0vQAA0jsAAOs8AADQugBAVb0AAEk9ANC1PQDAJT0A0Jg9AMDRPACAEbwAoEy9AIAQvAAgTT0AADa7AMAHvQAA9rwAAHq7AGCpPQCAkzwAwBw9AEDMvACAG70AAEm9AEA8vQBA77wAQOU8AMDLPACAUL0AwMC8AIACvQBgND0AABa8AECGvAAACLoAAFc8AKAsPQBQgb0AANs7AABuPADAIj0AgMM8AADLuwAQxD0AALM7AAAlvQAgQj0AQC49AOB1vQDgrb0AYDU9AAAsOwAA0TwAgIy8AACjvQCAKr0AgBy8AADIOwDArbwAAAW8AKAlPQBQgL0AACi8AKB9vQDAmrwAQB4+AMC8vADAHL0AgCw8AKARvQDAFb0AoA69AICaPACAWbwAIBe9AMBivQDYA74AgEg8AABguQCwg70AAOg6AIDHvACAS7wAACs9AKAkvQCAC7wAAAy8AKASvQAAjbwAgGK8AEDSvACADjw=","chunkHash":"a203cb23c466c5c519e393107907adbdf9adb9119c337a4392cf2f67205636eb"},{"text":"File: `utils/pointcloud_to_html.py`\n```python\n#...\ndef convert_pointcloud_to_html(input_file, output_path, title=None, point_size=0.05):\n#...\n        for (let i = 0; i < points.length; i++) {{\n            positions.push(points[i][0], points[i][1], points[i][2]);\n            colorValues.push(colors[i][0]/255, colors[i][1]/255, colors[i][2]/255);\n        }}\n        \n        geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\n        geometry.setAttribute('color', new THREE.Float32BufferAttribute(colorValues, 3));\n        \n        const material = new THREE.PointsMaterial({{\n            size: {point_size},\n            vertexColors: true\n        }});\n        \n        const pointCloud = new THREE.Points(geometry, material);\n        scene.add(pointCloud);\n        \n        // Update point count\n        document.getElementById('numPoints').textContent = points.length;\n        \n        // Point size slider\n        const pointSizeSlider = document.getElementById('pointSize');\n        const pointSizeValue = document.getElementById('pointSizeValue');\n        \n        pointSizeSlider.addEventListener('input', function() {{\n        #...\n```","range":{"startLineNumber":128,"startColumn":0,"endLineNumber":152,"endColumn":0},"embedding":"AGBcvQCAh7wAcIA9AMC9vACArbwAwNO9AAD/OwCARLwAoHU9AAALvABgPD0AQM48AADjvAAgOr0AgFa8AKCWPQDgQD0AAFa8AOAxPQCgHz0AALS7AMDOvABgeT0A4CA9ACA2vQDgFj0AAFm8AACGOwCQlT0AsKo9AGB4vQAATr0A4JS9AIAavACARrwAgAs8AMCIPACArDwAgOg8AAAGPQAQrj0AgCo8AODYPQAA8DkAgCM9AACwvAAAs7wAAOC6AAD0ugDgEz0AQJA8AMA4PQAAh7sAkKq9AABHvAAAszwAgBq8AKAjPQAAbrwAgN68AOCWPQCgW70AwLM8AMCbPAAAnjsAgKC8AAABvQDA17wAoAQ9AIDwvADAJz0AgL88AIB/PACAEb0AANq7AMC4PACwpb0AAMO8AJCSvQAAcLwAwKQ8AMCOPAAATr0A4F69AIAqvQCAjrwAAFy9ABCNvQBwo70A4BA9AMDlvACgXT0A8Me9AAAQugBAEb0AgF09AGAYvQAgET0AYA09AEAVvQDAPj0AQC+9AIAQPQAACrwAgFw8AAAWuwBgMD0AgBO8AOCKPQCAPjwA4HK9AACePAAgAL0AgA+8AMCtPACgC70AgEA9AEDrPADAXL0AAAy9AAA6OwAA4DsAIBC9AECJvQCAGrwAgP88AAAHPAAAFr0AgF68AACWuwAQsD0AAP67ACCRPQAAUr0AoFC9ADCnvQCARrwAACk8AECqPAAAgLkAAK89AACgOQAAqLwAQI28AMDUvAAAzDsAEKC9AACvPQAAgzsAAG49AIARvQAA8DkAAPk7AADSuwAAEzwAIL29APCqPQAQmT0AUMG9AAAZvQAAgbsAAF+9AMDHPAAgIL0AwC89AACuuwDAKj0AAIW8ALCevQDgT70A4Cm9AJDEvQAQhz0AAGw9AACquwBAmjwAQLc8AGCDvQAAfjwAgJE8AADevACgqz0AABQ8AAA0uwCAgjwAwI28AOAlPQAwlj0AABC8ACAVPgCA+rwAANw6AGB9vQDAcr0AQCe9AACYuwBwnD0AgLu8AECFvADAgT0AAGe8AIC8PQAAIDwAAAQ9AOB0vQCAATwAAFM8AGAAvQDAeL0AAI08AECOvAAAbj0AAOC7AAAoPACAOr0AAJu8AMAbvQBghj0AwN68AABkPQAgjL0A4GY9AIBKPQCAZbwAAFK7AABFvQCAjDwAAFO8AKCmPQAAKDoAANo8AACWvACAK7wAoFk9AEAmPQDA4LwAQOE9AAD8ugCgS70AANm8AIAqvQAABL0AwAC9AMDRvADAID0AgMm8AMAqvQDgMb0AAEM8AAD8OgBgFz0AACc8AEAvPQBAX70AwPU8AEChvACgtb0AANA7AACAOgCAs7wAgD48AABtvQDgc70AAIy8AJCLPQBAwzwAQI28ADCDPQDwiL0AgG88AEBzPQAAqzsA4HQ9AIDPvABA87wAAHw7ACA+vQAgOz0AQIO8AACBOwDAnrwAQMq8AICavADA5zwAwL68AADOOwAwj70AAOe7AMAoPQCoB74AwG09ALDLvQDAS70AwL08AFCevQBgQT0AAOS7AID7PAAA9DoAgDW9AAAKvQBAmr0AABQ8ALCBPQCgJL0A4AY9AAC5PABAkzwAoH89AACQOQDA6rwAQAM9ALCZPQDAgLwAAI68AOAjvQDAkjwA8K09AEC3vABAEr0A4Hs9AGB/vQAAODwAAAA6AIBOvQCAAjwAwEO9AACnuwAA9zsAgCe9AOAdPQAAlrwAYAE9AAAUuwCgdT0AAMC7AAAAuwBgdj0AAO+8AABhvACgqb0AAIy9AKAfvQAgDT0AoAw9AAADvAAAmj0AAOE8ALClPQDwmL0AQIi8AID5PADAoLwAkNA9AADPOwAAtDwAwNi8AIArvQAA97sAAJO7ACCmvQCAzjwAQIQ8AACMvACAFb0AgBE9AKCFvQBAwDwAAEq8AEACvQAAS7wAAB47AACkOgAAGb0A4OC9ABCFvQAA+jwAwBA9AEATvQCAG7wAwJQ8AAALvADAA70AgKC8AEC6vADgOL0AwG09AGAjPQDgB70AAKS8ACA9PQAQkr0AANa8AKAbPQAAOjsAoEM9AMC/PADABj0AAEK7AACsugAA6bsAAFk9AADAuQBgR70AANy6AGAgvQDAn7wAwP28AIDBvAAwur0AgE48AEAuvQCA7DwAgC29AACROwAgGb0AAGq7AECtvQDQy70AQFk9ADDNvQBAlzwAgO08AIAcPABghr0A4FA9AHCLPQDgOT0AILI9AMCtPAAAgDsA4DO9AACSOwDgRT0AAHA7AEDSvACA1bwAAPQ6ADC8PQCAgDwAgAc9AIDqvAAAMr0AwGy9AMAgvQCAqrwAoAc9AADBPAAAI70AQPq8AIDDvACAUz0AQJa8AACluwAAtDoAgLk8AADIPACQjr0AAHQ8AACeOwCAYj0AYAs9AADwOQBwzT0AAP87ACA+vQCgWT0AgD89AABsvQBAsr0AoDg9AABGOwAgAj0AACq7AGCOvQCATb0AAKg6AADYuwAA27wAAFe8AIABPQAgib0AANy7AABhvQCAAL0A0C8+AAAavACA5LwAAB08AEDDvAAAg70AIDq9AADwPACAWrwAYBC9AKAsvQCg2L0AANM8AAAguQBgmr0AAIe7AADzvABA5rwA4C49AACpvAAAmjsAADU8AADvvABAt7wAANQ7AIDmvACAUDw=","chunkHash":"5836ef6d82342f9662349d73f7439c8499d788de6ae46cc1b4fa26de21f7c556"},{"text":"File: `utils/pointcloud_to_html.py`\n```python\n#...\ndef convert_pointcloud_to_html(input_file, output_path, title=None, point_size=0.05):\n#...\n            const size = parseFloat(this.value);\n            material.size = size;\n            pointSizeValue.textContent = size.toFixed(2);\n        }});\n        \n        // Handle window resize\n        window.addEventListener('resize', () => {{\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }});\n        \n        // Center the point cloud\n        const box = new THREE.Box3().setFromObject(pointCloud);\n        const center = box.getCenter(new THREE.Vector3());\n        pointCloud.position.sub(center);\n        \n        // Set camera position based on bounding box\n        const size = box.getSize(new THREE.Vector3());\n        const maxDim = Math.max(size.x, size.y, size.z);\n        const fov = camera.fov * (Math.PI / 180);\n        let cameraZ = Math.abs(maxDim / Math.sin(fov / 2));\n        camera.position.z = cameraZ * 1.5;\n        \n        // Animation loop\n        function animate() {{\n        #...\n```","range":{"startLineNumber":152,"startColumn":0,"endLineNumber":178,"endColumn":0},"embedding":"AIB6vQAAszsAgIc9AKACvQCAJr0A4Oy9AIAUPAAACDoAgDk9AADLvABgFD0AID89AMC+vADAbb0AgAW8APC+PQDAizwAgIe8AGAaPQCAET0AAJq7AKAKvQDAcj0AwAM9AGBbvQCAPzwAQPu8AIDIPAAAlz0AgKE9AMBcvQCgZr0AwGS9AMCKvAAAZbwAAHA7AAAcPAAALDwAgIs8AEDKPAAAnj0AAEi7ACDoPQAAGLsAAEM9AAB6vADA1bwAALo7AAD8ugAAhTwAgL08AGB8PQAArjsAYGm9AIAPvQAANjsAAAq7ACBfPQCABbwAgFm8AHCyPQDAB70AoCI9AABEPABA1DwA4CK9AMArvQCgA70AIAQ9AKAfvQAAijwAgPw8AACHOwAAxrwAAEq7AMDYPABQsb0AYBK9AMB4vQCAxbwAAC48AMDtPAAAFL0AgNq8AGAnvQCAX7wAwI29AKBvvQDQh70AgPM8AMC0vABAcD0AALy9AIBVvABgH70AIDw9AIDsvAAA+jsAwJM9AAAlvQCggz0AQDa9AAC8PACAPLwAgIo8AMC3PACAED0AQO68AECDPQCAOTwAoFe9AIAvPADgMr0AgFC8AACxuwDAOb0A4KM9AEDuPABwrL0AAL28AABouwAAFjsAAIm9AIBcvQAAtjsAAIA6AIAcPAAAz7wAQK28AAAsOwDAjj0AABO8AOB7PQBgor0AgJK9AIDGvQAAmDoAAP67AMDBPADAyjwAELA9AABFPACAmrwAgK+8AKAovQBApDwAQIa9ACCNPQAACLwAABg9AIBGvQCANzwAAKK7AACKuwBAkzwAMIK9AACWPQAwqj0AYKC9AEC3vAAAuDoAoEK9AIB2PACA7LwAgPw8AADiuwCANj0AAJ87ADCzvQAgFb0AoAG9AKCbvQBgIT0AwDo9AAD0OgDA7zwA4Ak9AOCdvQCAHjwAgDg9AIBIvACArz0AgDc8AIAcvADAgDwAAPc7AADHPABgmj0AgPK8AJABPgCAnbwAABK8AOByvQAAaL0AwPq8AIAyPAAgjj0AgO+8AAD3OwBAez0AgDa8AACQPQCA3DwAQJY8ACApvQDA0jwAAH08AAD5vACgeL0AgEk8AACzvAAggz0AADU8AADZOwAAYr0AAM28AAAAvQCgfj0AQN+8ACBCPQBAr70AkJc9AIBzPQDAlrwAANO7AECAvQAA7zwAwIa8AAC1PQAAkTsAwNk8AOAKvQCADzwAAIg9AOAjPQDA2rwAUM89AMCnvABAJb0AAJS8ACA8vQBA3bwAYBK9AKANvQDACT0AgEG8AEDhvABwi70AQB89AICOvADgNT0AgB88AMAbPQDAg70AwB49AMDKvACQn70AQPE8AACDvADAmbwAAM47AIDfvAAgcb0AgIK8AMCkPQCAtDwAgMu8AIAzPQBAdr0AQCA9AABSPQAAcTwAIBA9AICkvAAAUL0AYBg9AADruwDgFj0AQMO8AACnuwBgHL0AABO9AIDKvAAAPrwAgMm8AACmuwBAL70AAOO8AIDLPABgB74AkIE9APDFvQBgIb0AgFM8ABCTvQCAdT0AAB67AMDJPAAAsDsAwEm9ACATvQBQpb0AACg8AMBwPQAAPb0AQFE9AIAmPACgHT0AgFQ9AOAJPQAAhLwAQOc8AKA+PQBAnbwAABa9AEDFvAAAFz0AUIU9AABMOwCA7rwAQE49ALCsvQAAbLsAAES7AKBUvQAAGjwAYDK9AIATPAAAnTsAQKy8ACAMPQAA2bsAAP48AED5vADglT0AgF28AABwOgCA9jwAQJq8AICZvAAQlL0AoI29AMByvQDAGT0AACU9AAD1OwBAkT0AQAM9AFDAPQCwn70AoAq9AAChPAAAb7wAAJ09AMCvPACA5TwAgB+8AAAlvQAA9LoAgAK8AKDAvQAAIDwA4FY9AIDtvAAATLwAwEA9AACPvQDAwjwAAG68AECNvAAAqTwAADo7AACEOgAgNb0AwOS9AEB5vQDAOD0AgM48AAAQvACAfLwAAH08AABxvAAgEb0AgLG8AEDqvAAADb0AwGw9AKB2PQAgDb0AANG7AABLPQCAfL0AwBy9AADNPAAA3bsAwF89AGCAPQBAAD0AAMO7AMCivAAAiTsAsJA9AABSuwBA9bwAAMC4AIAPvQBA1LwAgOS8AEDwvACQjL0AgLM8AEBbvQBAIT0AoHO9AAAWPACA0LwAwLq8AGC2vQDwp70AgHA9ACDCvQCAEDwAQMc8AAAKOwAAX70AIGo9AHCQPQAgOT0A0Jg9AMC/PAAAwDoA4Ea9AACYugAgFj0AAJm7AKAZvQCAL70AAIC6AIChPQCgAD0AgHM8AICLvACA77wAoIe9AKBavQCAirwAgLI8AMDYPADAeb0AgCe8AMAavQBASz0AgEG8AMCUvAAAlbwAwNA8AMAWPQDwkr0AgCM8AACPPACA9TwAgKo8AECZvAAQoT0AANw8AMBUvQCAkz0AoFY9AIB6vQBwwb0AIEs9AADSOwBARj0AQPO8AJCXvQDgOr0AAIQ7AADGuwBAKr0AAO+8AKA5PQDAV70AQMe8AGByvQCgN70AkB4+AAD8vACA/rwAoBI9AMAEvQAAUr0AALe8AAA5PAAAeLwAQD69AIBzvQDw/b0AgGE8AACtPAAger0AAFQ7AAAsvAAAcLsAADg9AAAfvQDApbwAgCw8AIDXvAAARLwAAC08AADUvAAAxTs=","chunkHash":"647ffe493f0e8955775fd4a197a511c3cc6d288de5a2924200408c3f1159166b"},{"text":"File: `utils/pointcloud_to_html.py`\n```python\n#...\ndef convert_pointcloud_to_html(input_file, output_path, title=None, point_size=0.05):\n#...\n            requestAnimationFrame(animate);\n            controls.update();\n            renderer.render(scene, camera);\n        }}\n        \n        animate();\n    </script>\n</body>\n</html>\n\"\"\"\n        \n        \n        with open(output_file, 'w') as f:\n            f.write(html_content)\n        \n        print(f\"Created HTML visualization at {output_file}\")\n        return True\n    \n    except Exception as e:\n        print(f\"Error converting {input_file} to HTML: {e}\")\n        return False\n#...\n```","range":{"startLineNumber":178,"startColumn":0,"endLineNumber":198,"endColumn":20},"embedding":"AGAgvQCANzwA4Bo9AAB6vQDA2LwAQPG9AIBxvAAAhrsAgHY9AMCbvACgXT0AAGg8AOAnvQCQl70AgAa8ALCePQCAEjwAAIA6ACArPQAgOj0AwOE8AGAEvQCAEj0AAK88ACAqvQAA0DoAAPG7AIDBPADgXj0AgM49AACWvQBger0AADi9AACrvABgbr0AgKU8AAANPQAAmrwAYBE9AADMOwAA6D0A4Bi9AFDjPQDAjDwAQDE9AECCvACADb0AADA6AAAGPAAAgrsAwPE8AGBTPQAA4LkA0JC9AIDAvABAvDwAAKq8AECUPQCAGbwAQNC8ACBiPQBAubwAwL48AACKPAAAlTsAoHK9AOARvQBAOb0AgB48AIAvvQAA4LkAAIA6AACzOwCAtrwAAMa8AABwuwBAc70AALi7ANCUvQCAFL0AAFA6AIBePQBwgr0AICu9AIChvADA+7wAgJi9AMAevQAgNb0AACc8AIATvADQmz0AYHa9AIA9vACARL0AUI49AKAIvQAAtLoAQGQ9AAAXvQBwhT0A4Ha9AEDiPAAAXTwAAOE7AEC+PADgJD0AwJ68AEANPQAAgDoAgAu9AIDwvADgQb0AwIu8AIA4PACAZL0AsJ49AMCUPADQnr0AwN68AAAIvAAASjwAwLe9AECjvQDA47wAQNs8AABjPADAurwAAPa7AAD0vACQij0AwK68AICsPQDQ3L0AAHq9AOB2vQAAB7wAAOy7AAAiOwBgez0AEIs9AID5PABAh7wAADS8AIA/vQCAiDwAIAO9AKBzPQCABzwAYCM9AEC4vACA4jwAgAi8AIDEvADAmrwAAI+9AFCZPQBwmT0AsJK9AIA0vACABz0AAFG9AIB8PACgNr0AAOU8AADHOwAAED0AAOO7ADChvQDA77wAwBG9AMBYvQAgHz0AIIc9AAB1PABAjjwAoB09AMCKvQCAQjwA4Bw9AGAhvQCwlj0AAEM8AMCKPAAA7zsAQJW8AIACPQBgUD0AQBm9ACDgPQDAWr0AAGg7AGAsvQAABb0AQMe8AAAgOwCwhz0AgHa9AACWPAAAbD0AoA29AGB3PQAAB7wAgK08AMA0vQCA3jwAgHE8AACsuwCQm70AwLo8AMDCvAAgcD0AALU8AAClOwCAmLwAYBi9AIC4vABATj0AAMs7AAAOPABgfL0AUKI9AOAhPQCA3DwAQJa8AIA1vABA7jwA4Ai9ACAiPQCAjjwAgMY8AMBDvQAA97sAsJs9AKBXPQCgeL0AoLQ9AAAWOwCA/LwAAES7AIArvQAA9bwAAPQ6AICbvAAAyzwAQJG8AABbvACA+bwAoAg9AAA4OgDAbT0AwLO8AMDwPAAAPr0AQPM8AGBVvQBwpr0AANy6AAAZvAAARr0AgMQ8AMCMvACghL0AgEe8ABCNPQAAULoAgKu8AGBXPQBQmr0AgCo9AAAbPQBgBz0AwIo8AEC7vABgo70AoHI9AACVuwAAJT0AQPW8AIAJPAAAbLwAACK9AMDavAAAujsAYAO9AACIugCQvb0AAHS9AADeOwCQC74AIDE9ADDuvQDwgb0AwBI9AKCVvQCwgz0AQMw8AOAkPQAAtjwAYEq9AMDRvADQyr0AAC47APCAPQCgDb0AQGg9AECOPABgBz0AULg9AKCQPQCA87wAgNc8AKBCPQCAQTwAoE69AAAHvQBgCD0AoI09AAABvAAgV70AgAo9AHCAvQCARDwAABY8ACCQvQAAnjsAQNO8AIApPAAA4LoAAPy6AIAiPAAAfjwAAGM8AAAwuwDAQD0AYBS9AADVvAAAwDwAAEs8AABkvADQ2L0A4Bi9ADCpvQCAGD0AQLE8AABwugAgEj0AABo9AECzPQBAZ70AQIW8AIBGPQDA4LwA4Hg9AMD8vADABD0AALa8AED6vAAgAr0AgLa8ACCivQAAmjsAoC49ACAIvQCAK7wAgCg9ADCDvQAAKTwAgHy8AAAVvABApDwAAPw8AACEuwCAJr0AMJa9ACBDvQBABD0AAKG7AABMvADAkzwAQK08AECaPABAyLwAQM28AKBPvQAA6bwAoFM9AMDlPAAAJb0AAJw6AMCoPQDAnL0AMIi9AIByPACAmTwAgG49ACA6PQAAzjwAANc7AIAYvADAzrwAAFE9AAC4OwCArrwAwIu8AMDdvACA17wAYDe9AABQOwAASr0AQPU8AKBGvQCAgjwAoEK9AEClvADASL0AgBm9AODHvQBAl70AAGE8AICsvQBAO70A4DU9AIA/PACQqr0AQLQ8ANDBPQDAJz0AUNM9AADOPAAAxDoAIEC9AADnuwBgTT0AgBM8AMDAvACAGbwAACG8ABDuPQAACbwAAN08AEDvvABA/bwAYBq9AKBmvQCgBr0AAKk8AAAvPAAgFL0AIAW9AIDsvAAABT0AAMS7AMCbvADgD70AADM8AEAqPQDwm70AQJk8AAA2PQAgAT0AUIA9AIDSvADwlD0AAO28AECBvQAAoz0AADQ9AED8vACQwL0AQG89AABtvADAqjwAwC29AGCYvQAgAL0AAIO7AAA2OwBQhr0AgCG9AIDbPADggr0AgAq9AIDdvADgGr0AwP49AAC/vACABr0AALq7ACBUvQCATrwAwOe8AACROwCAZrwA0Ju9AIB0vQAg6L0AAMs7AIBJPAAgab0AgDS8AAB2vABArrwAwKw8AEBqvQAA2DoAQO08AADzvAAAArsAgHK8AECCvAAA6rs=","chunkHash":"e590626ad00e04837a9ebc12926f0e28f0180a6e3ba109cf36b3569f590ae59a"},{"text":"File: `utils/pointcloud_to_html.py`\n```python\n#...\ndef process_directory(input_dir, output_dir, point_size=0.05):\n    \"\"\"\n    Process all PLY files in a directory and convert them to HTML files.\n    \n    Args:\n        input_dir (str): Directory containing PLY files\n        output_dir (str): Directory to save HTML files\n        point_size (float, optional): Size of points in the visualization (default: 0.05)\n        \n    Returns:\n        int: Number of successfully converted files\n    \"\"\"\n    \n    os.makedirs(output_dir, exist_ok=True)\n    \n    \n    ply_files = sorted(glob.glob(os.path.join(input_dir, \"*.ply\")))\n    \n    if not ply_files:\n        print(f\"No PLY files found in {input_dir}\")\n        return 0\n    \n    \n    success_count = 0\n    for ply_file in tqdm(ply_files, desc=\"Converting point clouds to HTML\"):\n        base_name = os.path.splitext(os.path.basename(ply_file))[0]\n        html_file = os.path.join(output_dir, f\"{base_name}.html\")\n        #...\n```","range":{"startLineNumber":201,"startColumn":0,"endLineNumber":227,"endColumn":0},"embedding":"AMCVvABAizwAoHg9ACAWvQAAzLoA4Em9AABquwAANTwAAJM8AIBxPADA/TwAoA29AAAbvQAAAL4AwNK8AKAcPQDABD0AgEI8ACAePQAAUj0AQIE9AOAuvQAAqDoA4GE9AIA2vAAgSz0AwII8AAC1PADARz0AwDg9AGAdvQAA7LwAoHS9AACOvABA6LwAAKW7AMBSPQCgnT0AwOI8AOB1PQBgyT0AQO68AKCAPQAAxLoAgFk8AIBQPAAAYDsAgCW8ACBJPQBAnLwAAEk8ACDIPQCAYDwAQLS9ACCCvQAA0zwAAM47AADyPAAAKLoAoD+9ANCvPQAQhL0AYIA9AIBBPABgRz0A4EO9AKAavQCABL0AID09AGBFvQCAD7wAgOg8AGA7vQAAdb0AwIs8AEDzPACApDwAgMI8AOAXvQDgVb0AgB08AIDkPADgwL0AAG88AMCgvAAgeb0AAAW8AMBavQCAgbwAIAi9ADCLvQAwhT0A4Ha9AADfuwCwkb0AoBU9AAD9uwAADDwAAEo7AABnvAAA3DwAAJg7AID4PAAAkjwAAPQ7AGASPQCgWD0AAJ07AID1PADATb0AoDC9AABFvAAAzjsAgCE8AEAnPQAAlDsAgN89AKAUPQDAuDwAwO+8AIDpvAAAVbwAoFW9AMDMvACgPb0AgL48AACvOwAAKLwAYEc9ACAHvQCQtT0AAKo7ADCFPQDgor0A4B69AABnvQBgOz0AgEA8AICsPADArDwAQOc8AIBYPQCA/DwAABM9AIALvQCAGbwAAGg6AHCgPQBA+7wAIEM9AECNvAAAmrwAICE9AIBGPAAAozsAQDC9ACAXPQAAQT0AQLK8AGAOPQBAuzwAAIA7AMCbPACAmrwA4GI9AOABPQAgPz0AAE48AKBPvQDAyLwAAIA5AMBOvQAAwD0AAMg7AAC9uwDgFj0AwEm9AEDevADggb0AgDe8ACAIvQBwrz0AwC69ADCRvQDgNb0AgFQ8AIAxPQCA2DwA4Ie9APCpPQDA+rwAgFe9AMAwvQCAwLwAYBe9AKAAvQBApD0AALE8AEDlvABACD0AsKK9AIBwPAAA+jwAAPa7AMD+vACAZDwAYEi9AIDOvAAAZLwAQIm8AKApvQCAHD0AADU9AAD0uwAAjLwA4BW9ACA3vQBA0jwAgCC8ADCLvQBAqLwAAIg8AADJuwBgJj0AgEa8AIALPQAACDoAwPC8AGBoPQAAErsAwMw8AMA3vQAAKDsAwMA9AMCgPACA+bwAwMA9AAByPAAAvrwAgIo8AGBrvQCApLwAQK08ACAfvQCApTwAYFe9AKA9vQDAGb0AQDs9AABwOwAAZjsAAKG7AADTuwBAfr0AgOs8AIBcvADAzr0AICy9AMC9vADAIT0AQMA8AAC+OwBAgr0AAHS8AIAuPQCAKjwAgAw8APCvPQDQ0b0AgCw9APCfPQAAIT0A4BU9AIBRvAAAErsAwB69AAASOwCgUT0AACw8AMA/vQCAWTwAAEw7AGAzPQAAfjwAAFI9AAAAOgCghr0AgFC9AEDIPACA870AAI28AAA3vQDwg70AgIU8AICsvAAwhD0AAOA6AGAXPQAAMrwAwKe8AICrvADgl70AQBK9AEDBPAAASLsAQOM8AAA0vQBAnzwAQDU9AOByPQAA5DsAQGU9AGAiPQBA/rwAAPO8AIB3vACACrwAAMM9AEC+vADAirwAAEE8AADMuwAggD0AANM8AGAkvQBwgz0AIKq9AEARvQAgHz0AQJs8AEDGPAAAXT0AAPS7AKBvPQBAHz0AgEO8ACANPQAA+rsAgHI8AIANvACgur0AgGg8AEBVvQBAiDwAQHI9AACzPABAtjwA0JI9AGCjPQDAAr0AYDC9AADVOwDAsb0AMNk9AAAZvABwij0AoEi9AIDDvACgHr0AAMw7AGBzvQCAODwAgF+8AACVPADgOb0AgNY9AGB2vQDAwrwAAIs8AACjPQCAKD0AgAO9ACCVPQCA5LwAwAq9AADsOgAAQDkAAAg8AOAGvQAAYDwAAHo7AECPPQCAED0AQOe8ADCovQDA47wAABy8AIBgvACgZ70AAOk7AHD4PQAAgL0AQP68AIBTPACAgT0AgFg8AOAgvQAAgj0AACe8AMCXvADAo7wAAHE8AAB1PAAwg70AwNC8AICfPAAAhTsAAOW7AACeOwAgbr0AAMg7ADCLvQDA3TwAYIm9AIBEvQBAbb0AoF29AAAgOwAgAb4AAA28AADXvQBgB70AYFg9AMDSPABgeb0AANk8AMDtPABgAz0AwKU9AGC5PQAArb0AoFe9AKAyPQDgJz0AwIs8AGDsvQAABjwAQAC9AOBcPQBgIL0AQCk9AKBxvQAADD0AgHC8AMC6vABAC70AAIU7AAApvAAA3rwAQJ68AABfvACAqbwAACc8AAAcOwAAwLgAgG28AKA8PQCAc70AwEU9AAA6PQDQyj0AQFc9AMDhvACAHbwAQN68AOB1vQCArzwAAJC6AIBnPACAkL0A4GU9AEB0vQCAKLwAAOu7AOB8vQDgFr0A4KO9AJCnPQAA0b0AoIm9AABUOwDwxL0AwKS8AAAyvAAAQjwAMNQ9AKASvQAA1DsAAKk8AACSOwAANr0AwLE8AOB3PQAA5bsAQKy9AMCoPADgxr0AAIQ7AICYPADAmbwAQFG9AAC9OwBA+zwAgHA8AEDvvAAAdTwAAGw7AHCnvQCANDwAwIe8AECTvAAALrw=","chunkHash":"c50620d4684db913729122c60346eae9357c52782815b0dae7120200eaaa9ad0"},{"text":"File: `utils/pointcloud_to_html.py`\n```python\n#...\ndef process_directory(input_dir, output_dir, point_size=0.05):\n    #...\n        if convert_pointcloud_to_html(ply_file, html_file, title=f\"Point Cloud: {base_name}\", point_size=point_size):\n            success_count += 1\n    \n    print(f\"Successfully converted {success_count} out of {len(ply_files)} files\")\n    return success_count\n#...\n```","range":{"startLineNumber":228,"startColumn":0,"endLineNumber":232,"endColumn":24},"embedding":"AED/vAAAQLoAgLQ9AMAvvQAAkDoAQEu9AAAGPQBgFT0A4Cg9AADwOQAAmTsAgDY8AICJvQAg4r0AwG29AECSPQBAyTwAgGU8AICXPAAgFD0AYDk9AOApvQDQgD0AoFg9AGAAvQBgfD0AAFm8AACPPADggD0AQGI9AIAKvQAAYr0A4IS9AABHvAAgFr0AwMc8AEBDPQBAQD0AgHw9AIB1PQAg7D0AQJa8AGCzPQAAPLwAAG48AMCwvADAE70A4CK9ACAkPQAAxzsAAA88AECbPQCgDz0AAMu9AOAxvQAAsDwAgKU8AOBrPQAAjrwAQEq9AKCqPQBAMb0A4Hs9AEDAPADAJD0AkIK9ACAHvQAAJL0AQI88AKBtvQAABLsAYJ09AMD2vAAAOr0AgM08AADjuwDAm7wAQDE9AGATvQDAYb0AAFe8AADkPACA4b0AwPy8ACAfvQCAS70A4Bq9ADCuvQCAKrwAAKa7AGAMvQCgWz0AIBa9AAAaOwAAF70AoBE9AOA5vQAAJTwAAL07AABJvAAA1DsAQN28AKAhPQAASDoAAMS7AAAPPACAfT0AgKS8AAA9PQAA47wAsIu9AAD0OgAAXrwAgHU8AIBRPQAAEDoAsPA9AAAZPQBA9LwAAFE8AAC1uwAAQjsAoE29AOBlvQBgCr0AYFY9AACcvAAAfLwAQFg9AMCzvAAgcD0AABi7AKBTPQAwg70AgOq8ANCYvQDA9TwAACy7AIAePABAmzwAAFA9AIC/PAAAqDsAALk7AIBBvQAAfrsAgFa9ABC7PQBAobwAoGg9AADZvAAA2zsAwLA8AIDoPAAAkbwAYDu9AMD2PABgPz0AQHe9AADnuwCARzwAAEC5AAC5PAAADL0A4F89AIAXPACghz0AQJ28AKCzvQDABb0AAIG8AKBWvQCAXj0AgE89AECxvAAAvzwAoEC9AOAHvQAA7bwAACc8AID5vADAnj0AAEA7AIAOvQAA5jsAgAW8AGA5PQDwgT0AQAq9APC7PQAAFjwAQJe8AOAFvQDApbwAgLu8AECzvADwoT0AAIu7AAAUvQCADT0AkIK9AGA8PQAA5zwAgCY9AOBzvQCAXjwAwO28AEDdvAAAeb0AABi8AEDuvAAAUz0AwNk8AADPOwAA9rwAwMG8AMALvQAARj0AAHi8AEAfvQCAHb0AYCg9AMDXPACASzwAgBq8AICDPAAAHLwA4Ce9ACCUPQAAgLsAgPs8AGA6vQCANbwAABI9AIAyPADAzrwAMPQ9AABXvADAv7wAgEA8ADCXvQBAKL0AAGc8AACSvACAbDwAoB+9AIBbvAAAu7sAwHM9AAAuPAAAeLoAAJC6AAAuuwDAkb0AoCg9AEDavADgqL0AAPW8AAB4ugBAhbwAgGs8AAAbvADQi70AAG48AKAaPQDAozwAANU7APDRPQCQt70AICE9ACBBPQAAgzwAwGo9AABTvAAAQDkAAEG8AIAHvABgYD0AgCm8AMD1vAAAtLsAAMS7AAC8uwAAvjsAoEU9AADhOwAQj70AoBi9AEBCPQBA+b0AAI+7ANCVvQAQjr0AQPA8AMBKvQDA4jwAABI7AACmOwAAdzwAoDy9AICRvABAPb0AgIe8AKAYPQAA6rwAgC08AIBBvACAiTwA4Eg9AKCGPQBAmLwAgLI8ACAuPQDAw7wAgN28AECHPACAi7wAcJc9AMCkvABA2LwAQG89AEDSvADAAT0AAJM7ABCMvQCgqD0AcKO9AOBFvQAgGT0AgNM8AKAYPQBAQD0AgKY8AHCPPQBAaT0AIFO9AMABPQDA4TwAADG8AACkugBwt70AQOq8ACB6vQAAdDsA8Io9AECsPAAAaz0AwMg9ADCsPQBAdb0AwLy8AIDXPAAgbb0AkM89AIAEvACwgD0AQB+9AKBIvQAgF70AQJu8AABgvQCAVDwAAAy7AIBvvABgdb0AsJg9ALCAvQCgKb0AQJu8ADCPPQAAwTwAADq7AADuPADAoLwAsK29AAAAuwAAAzwAAME7AMAUvQCAcTwAwEs9AIBhPQAAJbwAAEi8AMBwvQBAE70AYAs9AIC2PABASr0AgAW8ALgEPgCAqr0AAL+7AAA2vACAwTwAADc9AIB3PAAApzwAwIe8AAALvAAAh7wAADs8AACROwBA77wAAES7AABtPACAXDwAgA+9AACbOwBAeL0AAD88ACBxvQCAtDwAMIK9AAAkvABAdL0AgIS9AEDjvADwu70AAGq8AMDVvQAALDsAwKA8AABNPACgdr0AgKI8AABXPQCAaz0AIM09AGBpPQCgab0AwH69AAApPAAAKz0AAFw7AECpvQCAmrwAAOq7ACCUPQAA0bsAgDQ9AOBTvQDA5zwAgI+8AGBzvQBAQL0AwN48AAApvADA4bwAABO8AGCEvQAA1LwAACi7AAC8ugBAprwAgF68ACBuPQBAW70AoAU9AJCVPQAQoz0AgDM9AIB+vAAgJz0AgPK8AGB8vQCgND0AoAM9AAAQvAAAtL0AMIo9AIAqvQAAMDsAgGe8AGBjvQDAWr0AgFO9AICSPQDw270AQEi9AMCPPADQjr0AgLO8AADduwDAirwAqBQ+AIBQvAAASrwAwKc8AACZvABgKb0AgEU8AOBFPQCAFLwAgIW9AABrPAAgoL0AgK48AABqPADA37wAwLO8AECKPABAnzwAwOU8ACAdvQBAhLwAgNk8AKCfvQCAnjwAoC69AIAAvQCAIzw=","chunkHash":"5dd84815c812ba4af3c413ae5c67d622fcc2e1cc740a8e221223ca65b2f11733"},{"text":"File: `utils/pointcloud_to_html.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Convert point cloud PLY files to interactive 3D HTML files\")\n    parser.add_argument(\"--input\", type=str, required=True, \n                        help=\"Input PLY file or directory containing PLY files\")\n    parser.add_argument(\"--output\", type=str, required=True, \n                        help=\"Output HTML file or directory\")\n    parser.add_argument(\"--title\", type=str, default=None, \n                        help=\"Title for the HTML page (only used for single file conversion)\")\n    parser.add_argument(\"--point_size\", type=float, default=0.05,\n                        help=\"Size of points in the visualization (default: 0.05)\")\n    \n    args = parser.parse_args()\n    \n    \n    if os.path.isdir(args.input):\n        \n        process_directory(args.input, args.output, point_size=args.point_size)\n    else:\n        \n        if not args.input.endswith('.ply'):\n            print(f\"Error: Input file must be a PLY file: {args.input}\")\n            return\n        \n        \n        convert_pointcloud_to_html(args.input, args.output, args.title, point_size=args.point_size)\n#...\n```","range":{"startLineNumber":234,"startColumn":0,"endLineNumber":258,"endColumn":99},"embedding":"AMAxvQAA0zwAIK89AKB0vQBA/7wAsJ69AACcuwCAgDwAwF49AECYPAAA9LsAwAW9AIB9vACAib0AAO68ACBCPQAA8LoAAEu8AKAvPQAgSD0AQP08AABnPAAAtTwA4CI9AOAEvQAgGj0AgCI8AOAEPQAASD0AgDU9AABEvQDwg70A4IC9AADZvACAA70AgIq8AMA5PQAAYD0AIA89AGAvPQBguT0A4EC9AOCjPQAAbDwAAOg6AAAIOgAA6LsAALQ6ANCPPQCAdbwAAIi7AACpPQCACjwAwIS9AICivQAAoDsAgCc8AMBXPQCAFL0AwFK9AOBJPQAAfbwAAO47AAAvPQAA7bsAwMW8AECavABgF70AAFo7AGAuvQAASrsAwOg8AEBvvQDAjb0AgAs8AIAuvACAs7wAIEY9AOBXvQDgLL0AAIA7AIA2PQAAbL0AgBc8ACAjvQDgJr0AABO8AEBOvQAAGbwAAF+8AFCWvQBAwjwAYI29AADrOwDAB70AYJw9AEAzvQAAo7wAYCI9AAA5vQBA6jwAAMq7AABNPADgHj0AANA7AAAwugCgxz0AoBA9AIBXPQAAuTsAYJ29AABAOQBAzbwAgB88AACzPACAXTwAYJ09AMDrPACAabwAgA69AMCAvAAABzwAwOW8AMAxvQAAOrwAgEU9AIBpPADA+rwAgDg8AIDCvAAQqD0AQPO8AEBPPQCQi70AoEa9AKB0vQAA8jsAAG08AAC0PAAAlzsAgBs9AMBJPQAAHLsAQJW8AAB+vQBgAT0AgBO9ACChPQBADr0AUMo9AAAVvQBA6jwAADw9AIAyvAAAYLoAwNq8AEDWPQCAGz0AwL68AAD7uwCAVjwAAMC6AECdPAAARbwAgD08AACdPAAgPz0AAIA4ACCRvQAAYbwAYFO9AEA+vQCAGz0AwFI9AABwOgDAGj0AAES8AKAYvQBgJ70AgH68AMAFvQCAuj0AgDe8AEBYvQCA77wAABw9AECvPACgDz0AUIu9ADDtPQBgO70AAMc7AEBZvQBAyLwAYEm9AACKOwBAwT0AgC+8AABYvABQij0A4C+9ABC6PQBA9TwAwOI8AIC3vAAATDwAAOY7AADavAAAob0AAAQ8AGASvQAA1TwAAL88AACaPACAC70AANO8AMBDvQCglz0AADM8AADKvAAAO70AwMA8AAAYPQAAzDoAgA08AICjvADAhDwAgD28AHCIPQAAxDwAAEA9AKAwvQCAFLwAkIU9AACwPADAhbwAgNE9AAB6uwBANL0AgI88ACAfvQCAwrwAQBi9AKAOvQCgJT0AQIK9AACwuQBQg70AIIA9AOANPQDAkTwAgDU8AAAouwAAsb0AAAa8AACDvADgk70AANe7AECVvAAAOb0AgIU8AAD9OwDgKL0AAPC7AECEPQAAz7sAYHS9AGC0PQBAz70AAN87AJCUPQAgVz0AoBg9AMASvQCAWb0AgJw8AADcvABgTD0AABg8AIDivAAAqLsAACM8AAC5OwCA8jwAQLo8AAChOwCgO70AIEi9AMAMPQBw+r0AQCA9APCJvQAQgb0AoDE9AOBIvQDwjz0AgGo8AIDXPACAKjwAQA69AKA3vQAgh70AAKa8AGApPQAAsDoAQLc8AMATvQCAMj0AEJA9AIDaPABA8rwAAGU9AMAtPQCgMb0AYDy9AGBhvQCgVT0A8IY9AOBFvQBAbL0AwAs9AGBgvQDgYT0AAMu7AFCjvQBACj0A4Be9AGABvQAAZbwAADY8AMAHPQAASDwAADy8AMCZPACgQz0AwJa8AMDwPADgLz0AQIE8AADAuQBQA74AwIC8ACDGvQAALD0AgNk8AIC8PACADD0AYFI9AOCzPQCARr0A4A29AIDbPACAZb0AgK09AAB8vAAACDwAgNW8AAA2vQAAuDoAAJc7AGCnvQDAkbwAQPm8AABYvQDgAL0AUMg9AOCovQAgN70AwAS9AGAgPQBgID0AgK88AEC3PADgT70AwM+8AOBavQAADjwAwKE8AMB3vQBAr7wAAJA7AADfuwBAm7wAgDi9ABCOvQAApL0AIB89AMD/PACgb70AQOQ8AIgPPgCQjL0AAA29AAAgvABgBz0AAEa8AED3PACA2DwAwMc8AADdvACAJb0AkJQ9AACkOgAASL0AADC8AACevAAAfrwAwPK8AADXuwBAXr0AAPs7AEBgvQCgQD0AwFa9AECWvABAib0AAOu7ABCHvQBAV70AQOM8ACBjvQBAsrwAwFY9AEDqPAAwgb0AQIE9AMAgPQBAkjwAILk9AOBcPQAAnbsAQIS8AACuuwBggz0AANS7AKCtvQAAmrwAADI8ALCjPQAAxbsAAKk7AMArvQAAl7sAwI68AMAAvQCwnr0AQII8AAC0ugCAPrwAgAW8AEDOvACAQTwAAEI8AADTOwDAijwAAPY8AGCsPQCwjr0AYBI9AKCgPQBwqD0AgMA8AICZvADAnTwAgMS9AOBAvQBwgj0AUIs9AMCivACgdL0AMJ09ACBSvQAgKj0AAMq7ACDevQBAzLwA4HS9AGAmPQAwm70AQOe8ACAmPQCgCr0AwLW8AACKvAAAizsAgPE9ACAevQCAUbwAgF28AAAzvAAAcb0AALi6AGBBPQCAS7wA4C+9AAD5uwAAy70AALC6AAAoOwAgNr0AQPa8AIBsPACACz0AgB09AIDWvAAA8LsAwKs8AEBvvQCARbwAACK7AAAzvQAARrs=","chunkHash":"58e9ff8c4f9a486a49cd5f7e10c9c46ad4698495e05abd599daea8dd6c956390"},{"text":"File: `utils/pointcloud_to_html.py`\n```python\n\n\"\"\"\nTool to convert point cloud PLY files to interactive 3D HTML files for visualization.\n\"\"\"\n\nimport os\nimport sys\nimport argparse\nimport numpy as np\nimport open3d as o3d\nfrom tqdm import tqdm\nimport glob\nimport json\nimport shutil\n\ndef convert_pointcloud_to_html(input_file, output_path, title=None, point_size=0.05):\n#...\ndef process_directory(input_dir, output_dir, point_size=0.05):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":1,"startColumn":0,"endLineNumber":262,"endColumn":0},"embedding":"AKBKvQDwiT0AwJ49AECEvQAA97sAQLq9AAALPQAAajsAIFw9AAAgvAAALj0AAGE8AIAaPACgcr0AAMC5AMAKPQAAXrwAYB+9AKAwPQCAYD0A4Cs9AACQuQAAyjsAADq7AABZPAAA9zwAAMI7ABCbPQCgbz0AsJg9AEDJvQCAY70A4De9AABmOwCACbwAAKU7AIBxPADA3DwAgAQ9AHCfPQCAkT0AYAW9APDHPQAARzwAwKU8AICfvAAAi7wAgGe8AOB6PQAAoDoAgB09AOCHPQCABrwAgCS9AGCvvQAAbrsAgA+8AOB1PQAASLwAwIi8AMBKPQAAL7wA4B09AOB3PQAArTwAIB+9AAAUvQDAcr0AAHi6AABGvQBAK70AoBI9AMD+vACgqr0AYDI9AAC8uwBAZb0AwMc8AGBYvQDgMr0AAIs7AKBgPQBAhr0AAJk7AIDqvACgRr0AwEe9AGAFvQBgFb0AgLA8AGCavQCABT0AoIi9AADOvABgML0A4EI9AGAEvQCAtLwAgJ88AEDlvAAA7TsAAGo8AACUuwAADD0AALs8AGANPQBQlT0AQMq8AKBbPQAA1LsAEJ69AMDDPAAAFb0AAM67AABGOwCAFrwAIHg9AIC+PAAABDwAwAu9AAAMvQAAzrsAAKO8AAB3vAAAkbwAAJs8AAC+uwCAnLwAgDu8ACBhvQCgcj0AAI+8AKBCPQDQvL0AYB69AICtvAAAlrsAAO28AACQPAAgCz0AAMY7AMA4PQAAsDoAAPe8AIARvQAAMLwAADi9AHCHPQAAwbsAgHg9AADvvACAOjwA4Dk9AMCqvABAmjwAgK28AAC5PQCAgz0AAJu8AADcugAAqzwAAMa7AAA/vAAAjLoAYDw9AEDLPABAWT0AAKu8AIBWvQCAQb0AwOW8AIAuvQBAhTwAAJ89AIDOPACQlD0AgJE8AAB1vAAA4rwAAMw6AABvvADAeD0AAIi8AMDUvABAJL0AAFY7AMDfPADAgDwAAAi8ABAcPgCgH70AAEY8AOBzvQBAgrwAQIG8AADruwBQqz0AwN68AACqvADARz0AADg7AJCtPQCAjTwAAIo8AACkvABgJz0AgLU8AAAUvQCwvL0AwIq8AAB+uwAAPjwAgJI8AEDWPAAAWrsA8IW9AMAFvQDwrz0AADq7AIBjPADAT70A4CQ9AECrPAAAsLsAADw7AEC/vAAAEDoAQBC9ACCVPQAA87sAgDQ9AEDzvACAKDwA0Jg9AOAJPQAADbwAMMA9AAALvABA67wAAL48AIC0vAAAm7wAQNq8AIBcvADALT0AgHm9AAAWuwAgL70AgEw9AADtOwCgBz0AgHw8AMDUPABAgL0AABK7AIAwvAAg0L0AgNm8AAC+vADAsLwA4DM9AADKvABAU70AAHw7AAA/PQAAwTsA4Cu9ADCGPQAQsr0AwIc8AICDPQBAGD0A4FQ9AGAGvQBwgL0AgMw8AACcvABAwjwAAAy8AACoOwAAOLsAwNQ8AADAuQBAtzwAAI67AICVvABgUb0AAMy8AAAwOgDQ6r0AADA6AMCfvQDwnL0AoBo9AKAZvQBwoj0AAF48AAAguwAAorsAgHu9AABYvABQib0AgK+8AAADPQBAwLwAQCg9AACOuwBAKz0AwCA9AOA0PQCAN70AAIk9AKAdPQAA4LwAoAi9AEC0vABgRD0AAJc9AIA1vACADb0AAO87AFCovQCgDT0AAEq8APDKvQAgUD0AkI69AOBJvQAA+7sAAF08AMCmPACAC70AwMQ8AEAFPQBAVz0AgGy8AMBhPQAgPj0AAEC7AACwvAB4Ab4AgBS9AFDZvQBAibwAIDc9AICkPABAOD0AAKI9ANDIPQDglb0AIEO9AAALPABARL0AQIU9AEDcvAAAYjsAgNS8AMBovQAAybwAwJi8AFDNvQAAbTwAgGy8AICfvADA7bwAAJc9AOBbvQCAqLwA8Jm9AKAkPQCgUz0AgBU8AADeuwCAcb0AEKe9AAC+vAAA/jsAAGg6AABgOgCAhrwAAOs8AED0vADAMb0AgCe8AMCpvQBAhb0AwFs9AABOOwAAG70AAPg6ANgFPgBgsb0AwM+8AAB3PAAAKTwAgBi8AIDnPADAqDwAgAI9AACTvAAAkrwA4GE9AEC9PAAgRr0AgAC9AIAcPADALT0AABW9AIACvAAwnr0AAFk8AABNvQBAiTwAwIa9AIDqPACAJL0AAK67AJChvQCAfr0AQBA9AODEvQDAdr0AQFA9AADSPABAV70A8Io9AOBsPQDAs7wAsPI9AKAxPQDA0TwAQNS8AAAAOQDgVj0AQKY8ACB7vQDAGb0AAD48AGCaPQBA7TwAAC88AAAJvQBAnbwAwMi8AKACvQAgur0AwOY8AECOvAAAHLwA4BO9AACnOwCAPDwAQO+8AAAyuwAA1zwAQKG8AJCXPQAwhb0AgAA9ACAWPQDwsT0AgF48AECrvABwnz0AgAa8AKCEvQCAOzwAAEk9AAC1uwDQsr0AkNs9AECzvACAeDwAAGK8ANC9vQAAxbwAgFa9AMCKPACwrr0AgJ68AMC3PABAOb0AANm8AADbuwBAk7wAmAc+AKAQvQAAkDwAAGA5AMAHvQDgV70AAEA5ANCLPQCAcLwA4Da9AADfOwCAv70AgFo8AAA2uwAAurwAABA7AIByvADAwjwAAMw8AEBQvQCAUzwAABi7AFC3vQAAOjsAAA67AACvvABAgTw=","chunkHash":"3ea45ff28c22cda609257bd7dfc24a7c9be84496584a4ab713fa1f1628fd31ca"}]},"file:///teamspace/studios/this_studio/.gitignore":{"hash":"72bf5e95effe2c70e1a46249926b9aac421c3f009394c3f1797e2028cfba05bc","entries":[{"text":"File: `.gitignore`\n```ignore list\nnuclei_sample_1a_v1/*\nexperiments/*\n.cursor-server/*\n.bash_history\n.DS_Store\n.cursorignore\n.cursorrules\n.cursorignorerules\n.cursorignorerules\n__pycache__/*\n*.pyc\n*.pyo\n*.pyd\n*.pyw\n*.pyz\nresults/*\n*.png\n*.jpg\n*.jpeg\n*.gif\n*.bmp\n*.tiff\ndata/*\n*.zip\n*.tar\n*.gz\n*.bz2\n*.rar\n*.7z\n*.pyc\n**/__pycache__/**\n**/__pycache__\n**/__pycache__/\n**/__pycache__/\n**/__pycache__/\n**/__pycache__/\n**/__pycache__/\nlow_res_dataset/*\n.vscode-server/*\n.vscode/*\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":40,"endColumn":0},"embedding":"AAAnPQBAhjwAcKs9AIBpvACAFb0AAD+8AAA+vAAA/7wAcMW9AACVOwCAsbwAANs8AACdvACQi70AMIe9AODUPQAAGDsAAB+8AOCRvQDAg7wAMJM9AICdPAAAeD0AADg6AABXPABAj7wAQO28AGBcPQBgIT0AgFI9ACAwvQCAQb0AQMe8AMDivABA97wAAKw7ABCnPQDALz0AAE+8AKAUvQAAnLoAAKu9AIAlPQDAc70AANi6ADCGPQCAZDwAAAS7AIBrvAAA5LoAwJK9AAC0vAAA4jsAsJs9AMCqvACALrwAgAi9AJCfPQCA4rwAYAs9AIDvPACAQzwAgDI8AACBPAAA0DkAEJI9AMDtvACA/7wAQMc8AAAhPAAAeLoAABg7AEARvQCAIL0AgAY9AMCzvABAgrwAgJ88ACCBPQDgpb0AwLg8AABSPQAAMj0AwNK8ABCKvQDghL0AQOi9AIA6PACAib0AgCI8AED8vACAg7wAQOq8AMBwPQCADj0AQEA9AGACPQAA8bwAgAa8AEBmPQDAcT0AANi8ABCqvQCAGzwAUL09AADpPACASDwAgHW9AIBNvQAAArwAIES9AOAovQCAVDwAQII9AED5vADgaL0AAAS8AABIPQBAvjwAAJm8AIAqPAAAWjsAICe9AABevQAAqrsAgOG8AACaPQCATjwAQG+9AOCovQAApjwAQMe8AEB2PQDQgL0AAJa7AACguwBAm7wAYBY9ALC/vQCQsz0AgNk8ACABvQBgWj0AIEQ9AADduwCAv7wAAGO8AAB/PAAA0TwAcLc9AAAUuwCwqj0AAPc7AIA3PQCApbwAAOq7AED1PACAODwAAAg7AIAIvQAQpr0AAEg9AAD8ugAAtDwAgAI8AECUvADQi70AQNu8ACAkvQCAKrwAAGs8AADjuwCAFTwAYEq9AAAbvAAgPT0AYBO9AAAWPACAaL0AgBe8AMD9vAAA2rsAwLK8AADBvADAvbwAgIO9ACAHPQAAYTwAoJ29AABcPADAOj0AADM8ACCKPQBA9D0AgFA8AGAJvgCAwjwAAO07AACSuwDA8bwAwCq9AMB2PQDgDz0AwNA8ACARvQCALbwAgNA8AAAqvAAAuLwAAE28AMDZvABgRD0AYKS9AID1PADA8DwAwDA9AADMugCACTwAwKk8AIAUvQDAI70AoHM9ACAwPQCgOj0AMNU9AAB5PACA9TwAoJS9AMC4vACATjwAANy7AABUPAAAALkA4AG9AAAGPACA17wAoLq9ACCivQBgKj0A4Cg9AAANvQBA/jwAgKe8AACKuwBAyjwAgO68AGA4vQDAP70A4Iy9AOBNPQCALrwAgDU9AAAWuwAAY70AoDI9AOAhvQBA0bwAwBK9AEDqvADAxjwA8LK9AADQPAAAVbwAsM29AMB2vQAAwLgAQPs8AMDPPAAASTwAgF48AGAhPQDAzbwAIGs9APgJvgAA/7wAQNw9AGA/vQCgGD0AANq7AACGvABgEr4AAAi6AABvPAAAnDsAAJo7AADTPABgFb0A4Fk9ACBDPQCA070AwJY8AEAIvQAAebwAAFC8ACAxvQDA170AgF08AEC4PAAgDL0AgGE8AAAIPAAAMb0AYFc9AIBgvACAZ70AwPw8AACEPADAC70AAI67AEB2PQCAbL0A4IG9AAABvQAAybsAAPQ6ADCEvQBwxb0AgJI8AIBtPQAACrwAgCA8AJC/vQDAHb0AAFU8AIA8vABAbj0A4CE9AIA8PAAAyTwAQHS9AMAqPQDAq70AgC88AIBjPACAUbwA0AO+AAACvACQlj0AgI28AEDRPADgNr0AAE28AAAYuwCAIDwAAHC8AIBivACQsL0AADs9AICkPAAgGD0AAOS6AMCpvADABL0AAI27AIDXvADgDD0AgBi9AKBJvQAArrsA4AA9AOAfvQDAgjwAwNI9AABxPAAggD0AABc8AACvvADA+rwAgBY9AABFPADAJT0AgDG8ACBHvQCgmr0AAK28AGAAvQCAGz0AYIw9AKBkPQDA8bwAYAo9AAC8uwAAAzwAADg7AIBBPABQgT0AgFY8AIAwvADAGr0A4I09AAAoPADA7LwAALI8AADguwAAoDwAgIs8AGBOPQAANjwAgA49ADCCPQBgMj0AAOC8ADCavQCA97wAgBY9AIA2PADg1D0AwKg9AIBIPACgUr0AwJM8AOAOPQCATTwAAMg7AADlvABAnTwAAHC8AABOvACAybwAIAI9AEDAPAAQkr0AUIS9ACDXvQCACzwAgJg8AICXPAAAzjsAkI09AABwugAAdLwAgAy8APC+vQCAI7wAAPw8AHCZvQAwiL0AgC89ADDAvQCgFb0AwKO8AOAovQAAOLsAYLM9AIB8vACgN70A0Ie9AMAkvQAAVLsAANG9AIAUvACA3LwAADA6AEAvvQAwlj0AICG9AOAfPQAAUbwAoMw9AMCpvACgDT0A4EA9AICkPADghD0AADA9AECsvABA77wAAOs8ACBpPQAAYL0AIEg9AIBPPABgEL0AwNQ8AABiPADgD70AQKQ8AECivACAK7wAAHW9AAAGuwCAjrwAAP07AADRvADAh7wAIMs9AIAOvQCARbwAAAK9AEApPQAAyLwAAMM7AAA6OwBAkbwAALA6AEDAPAAAQ7wAgEm9AOAEvQDAqrwAANG7AECNPACAvDwAYBo9ACCVvQDAmLwAoGS9AMDPPACAkj0AAIU8AACVvACgUr0=","chunkHash":"86447a1967ff335475a26d2473394699b8684870e731e3bfd88ac96e1645a178"}]},"file:///teamspace/studios/this_studio/configs/shape_config.yaml":{"hash":"71c1958ddf099071236ea4f357eca4e5d0aed0eaac8cb9c8ca9825834c81ad28","entries":[{"text":"File: `configs/shape_config.yaml`\n```yaml\n# Configuration for training the shape model with our custom dataloaders\nexperiment_dir: \"experiments/shape_model\"\ndevice: \"cpu\" # Change to \"cuda\" if GPU is available and CUDA is properly installed\n\n# Data configuration\ndata:\n  root_dir: \"nuclei_sample_1a_v1\"\n  class_csv_path: \"chromatin_classes_and_samples_full.csv\"\n  num_points: 1024\n  cache_dir: data/mesh_cache\n  precomputed_dir: null # Set to a directory path if you have precomputed meshes\n\n# Loader configuration\nloader:\n  batch_size: 2\n  shuffle: true\n  num_workers: 0\n\n# Model configuration\nmodel:\n  name: \"DeepGCN\"\n  kwargs:\n    in_channels: 6\n    channels: 64\n    out_channels: 64\n    k: 12\n    norm: \"batch\"\n    act: \"relu\"\n    n_blocks: 14\n    projection_head: true\n    use_dilation: true\n\n# Optimizer configuration\noptimizer:\n  name: \"Adam\"\n  kwargs:\n...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":36,"endColumn":0},"embedding":"AKA0PQAANbwA0BE+AABTPAAAEDsAAIO8AICPPAAA8bsA4HK9ACAPvQAAEb0AAEM9AECpPADAeb0AAMy8AEChPAAgCT0AAJo8AICAvACgOz0AYBY9AMCgvABgej0AgI88AEAfvQAAUjwAgMg8AABougAAZT0AgJ28AAAUPADAubwA4Ee9AMAZvQAAZL0AwKW8AKAOPQDAkTwAoBu9AAAbPQCAQTwAkI69AAA1vAAAxz0AABw9AKBLvQCQrL0AAO47AMA4vQAAgTwAAIk7ADDoPQAgA70A4BY9AIA0vQBgPT0AQEE9AAAQvAAAw7wAgFc8AAB8PAAA8rwAADa8AACjPACA1zwAYJ69AEA9vQDgFz0A4BW9AACNPABgAD0AYES9AAB4PADwkb0AkI49AMCLvQBAFL0AULo9AECUPACAt7wAwOu8AADSOwBA3zwAwD+9AABguQCAGL0A4Ee9ACBuvQAAkLkAgFg8AIAXPQBgJ70AsIC9AOB+PQCAHjwAgKM8APCHPQDQhb0AgIM9AAACPABgIT0AAGU9AADwuwAAEDoAALY7AOBmvQAAijsAgAg8AMA+vQDACT0AQFK9AMDIvADgfj0A4Cm9AACsvACgL70AQJi8AOA6PQDgi70AAN67AABwugDgAb0AoAM9AECAvQCAL7wAoAM9AMC9PAAAzDoAkBC+AMAnvQDA6bwAQLM8AACaPAAgqr0AAIK7ACAivQBAlr0AwGg9AAAYvQAA7TsAAFK8AGBWPQBgET0AgDk8AABsvQAgHD0AAFG9AGA3PQBAXb0AMIE9AIAqvQDAVT0A4Be9AICcvAAAJrsAgGK9AEAdvQAAeDoAgA69AJCbvQDA8zwAgDQ9AIA0PACAeD0AAPI8AAD8PACgtb0AAJu7AMBmvQBgjL0A4IE9AAALPACAM70AwMA8AAB4OgCA/zwAYB29AEAPvQAgdb0AwAm9AECXvQAAbLsAYHy9AED/PABgxb0AQDa9AECdPACAKzwAwA49AACAuQBgUb0AAKW7AIDAPADAZr0AAJo7AEBxvQAQnD0AAPC8AAAMOwDAsrwAwNQ8AIBGPADA0jwA4AS9AIBAvQCQwL0AwNO8AIB/vABAFL0AgLi8AOApvQAAWDsAwMM8AICjvACwhr0AQJS8AACmvADAhLwAQDg9AAAiPQCAMrwAIAI9AOAyPQAAED0AwO+8AACwuQAAW7wAYMe9AAC6uwBAPz0AAJ+7ACBJvQCgOL0AAJE8AICCvADA7bwAgGC8AIBkvQAAczwAUIg9AOChvQBABz0AAD88AACNvAAwmT0AQIA8AIAtvQAw9b0AgEA8AABuPADAybwAUIU9AABePADQur0AwDG9AMDevACAeb0AwHK9AEAmvQBAT70AYF09AOAJvQBA/jwAgIk8AAAevQAAkDsAgPe8AMD2vABA3LwAYMa9AEDHPACAir0AAHY8AAAtvACADL0AAJg6ABCuvQDgTz0AAJw8AIB8PABwo70A4C29AGATPQDAGj0AABw7AMDnPADgID0AACg7AACoOwDASb0AQEI9AMDrvAAAxrwAAAC4AJCIPQCAwzwAkLm9AHCvPQBA7TwAwGq9AIBWvADgGj0AQIE8AACkOwAASTwAgGQ8AIBQPABAHj0AgFU9AABrPABgOr0AABA8AACyPABAGD0AYEm9AIAJvAAA87sA4Bk9AKCVPQAA0zsAwI68ACAFvQAAYDoAAFq8AADOvAAQpj0AABW8AABNPAAAVr0AQMC8AED9PACgb70AwE49AACwOQCALz0A4DW9AADyuwDAiTwAgIw8AICVPQCAn70AADS8AACYvABAjzwAwJK8AIBkPQAAP7wAQIw9AMBVPQAACDsAIA69AJCAvQCQpb0AAOQ7ACAqPQAAwLwAgCC9AMBqvQBgCz0AgAG8AJCSvQAAYDsAEKU9AAAyPQBA+jwAALQ7AIAuvABAYj0AYDw9AIDWvAAALrsAAIC6ACCXvQDA5TwAQLG9AJCZvQCgnz0AYL49AJCEPQAAybsAoLQ9AABavAAA9DoAQBq9AACoOgCA4bwAAP67AICXPAAwrL0AwNK8AGAMPQCAD7wAgBe8AADlvACAjjwAsJE9AGCBPQAAvrwAANQ6AOAAPQAAHLsA0I+9AIANvQAAbDwAwMo8AEDfPACQ8z0AgB49AAAqvAAANrsAEIk9AKBJvQBAFz0AwNe8AMBBvQBAd70AQBa9AACFPACADbwAgBi8AIATPACAvrwAwKe9AEAgvQBAKr0AoDk9AACgOQAA8LwAgD48ALCSvQAAgTsAoAA9AIAcPQDA6DwA4KA9AIBFvQAgob0AAPy8AACYPABAJ70AwOy8AEDIPAAgHz0AQIw8AACLvABAizwAIFG9AIAaPACAgL0AAAe8AAADPQBgfb0AAO+8AAA6OwAQnD0AgDW9AOCLPQCgMz0AcCM+AIDuPAAgvT0AgGE8AAAQuwCA9rwAgA68ALCuPQCAmjwAgGO9AAC/uwDA5LwAAKK8AICRvAAA9jwAQBW9AACwuQCAlb0AAPC8AABMOwCwwj0AAJk7AAB0PABQpT0AQMe8AECHPAAwmj0AEOo9AOBCvQAAr7wAIC09AIC6PACAtbwAQBg9AOATPQCAQbwAoA09AEBSvQDAtTwAAA+9AABgvAAAlbsAQBc9AEC0vAAAjLsAQCU9AIB8vQCA97wAYGO9AACwOQBAkDwAIAI9AADRuwCAxj0=","chunkHash":"0b02908285b527de712b63a0adcb43ab8197f46f549d3c2cc0f8fd46a1f2f5e4"},{"text":"File: `configs/shape_config.yaml`\n```yaml\n...\n    lr: 0.001\n    weight_decay: 0.0001\n\n# Criterion configuration (for contrastive learning)\ncriterion:\n  name: \"ContrastiveLoss\"\n  kwargs:\n    pos_margin: 0\n    neg_margin: 1\n    distance:\n      function: \"CosineSimilarity\"\n\n# Training parameters\ntraining:\n  validate_every: 1\n  epochs: 50\n  checkpoint_every: 1\n\n# Scheduler configuration\nscheduler:\n  step_size: 15\n  gamma: 0.5\n\n# Wandb configuration\nuse_wandb: true\nwandb_project: \"Chromatin\"\nwandb_run_name: \"shape_model_training\"\n\noutput:\n  checkpoint_dir: experiments/shape_model/checkpoints\n  log_dir: experiments/shape_model/logs\n  save_every: 5 \n```","range":{"startLineNumber":36,"startColumn":0,"endLineNumber":68,"endColumn":0},"embedding":"AACIPADA5TwAAL09AACRPAAA07sAAJQ6AMCxPQCA0TwAwO68AADROwAgTL0AwPc8AADtuwBwmL0AAIQ6ALCRPQCAf7wA4E49ACACvQDglz0AAMI8AHCHvQCAqTwAYBA9AECUvAAArLoAQFw9AMCpvAAgPD0AAB68AIBtPACAFrwAQJm8AABavQAga70AABq8AABqPACAhTwAoCm9AACAugAgdL0AMNO9AACwOgBgBD0AANW8AECovADAoLwA8JM9AOA4vQDgCD0AACy8APDIPQCALLwAACc9AAC1PAAAfTwAwNs8AICePADAw7wAAKq7ALCLPQCA4LwAAAA4AOALvQAAibwAwEm9ACAEvQAAqzwAwJe8AMC4PADgSj0AgE68AIAGPAAgHL0AAJc9AMDhvAAABjsAEMs9AMAhPQAAmDsAYDG9AADAOAAAdDwAQEK9AACRuwDQkb0AAI69AEAHvQCAvbwAALy6AADUPAAAbTwAgDC9AIA7PQAABjwAAFy7AMASPQAAp7wAgAc9AACavAAAmzwAwLE8AGAQvQDAgzwAABk9AKAkvQAAXDwAQBq9AED+vAAAeDwAgJO9AMD6PACAfjwAgHm8AAAAvACAa70AAJ07AIBePQCgUL0AAPq7AACwPAAgkL0AgKA8AGBlvQAANT0AQP88AACdPAAADzwAEPC9AEBUvQAAGLsAgLU8AID0PAAgUr0AAKk7AGBLvQAgJb0AAAU9AIBWvQDwpD0AAJs7ADDWPQAQhT0AgCy8AMBnvQAA+zwAAEm8AID6PABwqL0AMLA9AABOOwBAXT0AQLG8AIBXPACAsLwAYGW9AEAQvQAAQDkAAHO9AEBSvQAAFjwAIAo9AED/PADAAz0A4F49AADQugDAlr0AgBI9AMCgvQCQu70AAFA9AECSPADgEb0AQPe8AOAZPQAgZT0AgCu9ALCSvQBAqbwAANm8AIAuvQAAkbsAIKu9AEBbPQCQir0AoCe9ACAyPQDA0bwAoG49AABcuwDAQr0AABQ8ACCsPQAgTb0AAHi8ADCCvQDgjz0AwKa8AGAZvQAARb0AADu8AMDcvABgNz0AcIK9AGDJvQDgZr0A4B+9AEAbvQBA7rwA4B69AID1vAAAhLwA8J09AMC7vABgXr0AABq8AMCTvADAyLwAIC09AABKuwBwgr0AgHm8AAD4PABgKz0AACe9AMAgvQAAFz0AcLu9AABhPACgQT0AAJ+8AAAQvAAwqb0AoEg9AMDBvACAg70AANa7AMCmvABA9zwAgH88AEATvQCAfbwAQPY8AIA2vQAQgT0AAIo8AKBcvQDw4r0AAM48AAAGuwAAbbwAwIk9AACgOwCAMb0AwJa8AMDYPACAhLwAAF+9AIAlPACA6bwAgBw9AOBnvQAApjsAgJA8AIDgvACASzwAwC69AEDmvADAirwAgDu9AACiuwAA5TsAQKE8AICsPAAAwTwAAC29AEDgvAAALDsAYB29AICLPACAUr0AAAm9ACACPQAgGD0AgCg9AOBAPQAAfTwAgK28AEC8PAAAGDoAgJw8AEBgvQCAhbwAgH28AEARPQAAmT0AYAW9AKBEPQAA3zsA4Ae9AADDPABgVT0AwOM8AIDqPAAAOrwAwKQ8AECSPQAAKDsAAIs7ACA3PQCgRL0AgM88AAAePQDA0bwAgIq9AOCDvQDAhrwAgHA9AGAlPQAAh7wAAGC7AIB/vQBA6jwAAJi6AACmOwCAIj0AsJm9AAD+uwCAebwAgLK8AADwuwCglL0AQPo8AAApPQAAWLsA4Gm9AICkPABAmj0AwAy9AHDzPQAQC74AACK9AIB5vQAA0bsAwOG8AIDePAAAKzwAIBs9AGAvPQCAFDwAANC8AICQvAAQpr0AACq8AAB+OwCgQL0AgLG8AIA1vQCAt7wAwAY9AICcvQAATb0AIDg9AMBzPQCAzTwAAGA7AEA2PQCAdzwAIG49AOA9vQCAeDwAAAo7AOC8vQAAZDsAYMG9APC2vQAAFz0AcNY9AFCHPQCAzLwAwF89AHCHvQAAMrwAgHs8AECIPACAQL0AAII7AGAaPQBgr70AoAS9AACoPACgXz0AAD+8AABovQCAPz0AYNA9AKCFPQBgNT0AAJa7AIBoPAAAyjwAIL29ACBavQCAEjwAALC8AKA+PQCwqj0AYIs9AADuuwDAzbwAkJk9AGAhvQAAbTwAABW9AAA5PABQsr0AgCa9AAAsOwDAtDwAgAK8AADsOgCAwzwA4ES9AEDcvAAAOrsAgGw8ACAlvQAAQbwAQJc8ACA4vQCAArwAQA89ADCgPQBgAT0AAG09AEAAvQAQw70AwM28AED2PADAHL0AQJ88AMAKPQBgcj0AICg9AACvuwCA4jwAgB08AAA4OgCAEb0AgEG8AGAEPQBAUL0AYBO9AADCPABgKD0A4Cy9AKCePQAgBr0A4Cg+AMDDPACQqz0AYCM9AECLPAAAILwAwNA8AIBfPQAAkjwA0IO9AECNvQBgHr0AgLc8AEDYvABAWD0AwB29AAAlPADA+7wAAF67AIDEvACAuT0AYEu9AGAqPQDAKT0AwPQ8AABePABAUz0A6B4+AMDCvADwpL0AAKw6AACgOgAAT7wAwPM8AKAbvQDAhbwAALa7APCvvQCADjwAgBq9AAA8OwCgHr0AwN08AABuvABAv7wAQJk9AKAAvQBAybwA4GS9AADIvAAAOrwAAB08AAA0vQBAgTw=","chunkHash":"26af54306b1a295157c80dcc63325305242fdafbe728e5c518529ba80509d73d"}]},"file:///teamspace/studios/this_studio/dataloader/temp/highres_contrastive_dataloader.py":{"hash":"3b94ba2e5073ca75ba9c101a6a73004c596f44cd5fe31265ee714e0b230d2176","entries":[{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(224, 224),\n                 sample_percent=100,\n                 z_window_size=5,\n                 predict=False,\n                 debug=False):\n        \"\"\"\n        Args:\n            root_dir (str): Root directory containing the samples.\n            transforms (callable, optional): Base transform for target images.\n            transforms_sim (callable, optional): Transform for creating augmented views.\n            sample_ids (list, optional): List of sample IDs to include.\n            class_csv_path (str, optional): Path to CSV file with class information.\n            filter_by_class (int or list, optional): Class ID(s) to include.\n            ignore_unclassified (bool): Whether to ignore unclassified samples.\n            target_size (tuple): Target image size (height, width).\n            sample_percent (int): Percentage of samples to load per class (1-100).\n        #...\n```","range":{"startLineNumber":36,"startColumn":0,"endLineNumber":47,"endColumn":0},"embedding":"AAD9OwAAUbwAMJE9AAAdvQCAMDwAwHy9AAAjvAAAgDkAMJO9AGBSPQAgeb0AAEC9AIBCPQCwu70AABS7AKCcPQCAJLwAgJM8AICEvQCAJD0AwM08AEA8vQBAyDwAcLu9AIAbPAAAejsAgL28AAASuwCQiz0AgH68AID+vACAyrwAkKi9AADqvABgEL0AAKa7ACBYPQCAqT0AAK07AEAcvQAwvj0AoFu9AACAuwAAIzwAAK28AMAuvQAARDwAwBy9AMAyPQDAGj0AICC9ADChPQAAjzwAwJO8AMCVvACAKT0AYFy9AAAYuwBgHL0AIAC9AABxPQCgYL0AgJK8AMCgvACABrwAAIw7AMA+vQBAk7wA0KO9AED1vADA6jwAgDu8AAAougAAXL0AAFE8AICBvAAAwrsAIPw9AACevAAAer0AgCQ8AIAwPQAgOr0AICc9AIBRvAAgBb0AsJC9APDKvQAA+DsAQHG9ACA0PQAAAbwAwAe9AIAZPADA/rwAAJ28AMCnPAAAk7wAwK88AECqPQDA/jwAAEM8ACAvvQAAlbwAAJQ6AMB7vQAAlLsAMKC9AIAAvABA9DwAAMO7AGB1vQCgMT0AAEu8AIDSPABA+LwAoDy9AIAgvABgQr0A4D29AIDCvQBgdr0AANk8AMAcPQAAuzsAwJ+8AICXPQAArLoAQOi8AEC6PACgMz0AAC68AACQugBgeL0AwA+9AGA3vQDQkL0AAB49AEAdvQDgJj0AgMq8AICyPABA5jwA4CE9AIAYvQDA+zwAwCm9AMDpPQCA3zwAoAI9ADChvQBAzLwAAMM7AMAqvQDgeL0AAM+8AIDvvADAhT0AALU7AKCMvQAAPD0AADS7AEAaPQCAgLwAACG8AACtuwAAJLwAAPW7AHDAvQDAGr0AAKg8AAADPQCAJj0AYBO9AAD0OgAA1zwA0J29AAAlPACA2LwAwLq8AAAfPADgHr0AACa8AOBHvQCQjb0AcL69AIBdvABgXD0AoAW9AEDxvACgTT0AwLA8AIAtvQAAuLoAgPS8AICcPADgND0AYIw9AICJPAAA1DwAAOe8AGCMPQAABDsAYA29AOA4vQDA5rwAAFq9AIClPADA07wAAM47AIAGPQAAgDgAwO88AAAmPAAAejwAAOE7ADCTvQCA2jwAgDU8AIAJPAAA8LkAgBC8AEBXPQAAIDkAAEw7AAAhPAAgp70AAL68AMA1vQAA2LwAAJ67AKBbvQAAB7wAQME8AAA+uwBwm70AAO+8AOAavQAA+jwAwMO8ALCmvQAgCD0AwMe8AIAivAAAAj0AoAY9AKAgvQAAzb0AYEc9AOAFPQCw0D0AAA68AABqPABAj70AAJy7AADSOwCAGr0AwFK9AMgKvgAAPrwAAOy8AADquwAAubsAoBO9AABEPQBAzDwAAJG7AECxPAAAIL0AAFC6ADCePQBAXT0AAMM8AABYvQAwmb0AwGw9APCNPQCgCD0AYEQ9AAATvABAxLwAADy7AICcvABQkz0AAHQ7AAATPQAAkLsAAN07AKCBvQAAYjsAIBU9ABDevQAA+LwAsL29AACzuwAA6jsAACg8AAA4ugAA+TsA4IO9AIDnPADA1jwAAIK9AIBBPACAUzwAQJU8AAC3PABAyrwAQLc8AIB4PABAy7wAgGC8AAAwuwAAtbsAwPY8AED9vACAMDwAgPm8AABTPABgkj0AYA+9AOBhvQBAYr0AwGc9AMBBvQCA4bwAYMK9AACMOgAAFbwAUJG9AMCjPADwvb0AAAC5AAB+uwAA1DwAYCC9AGAgvQCARrwAQPe8AGBhPQBg8b0AQK28AOBGvQAAALkAAKE8AEC0PQAAcDwAUJk9AAAeOwDAp7wAAOw6AECxvACQs70AYBo9AIB0vQBA2bwAAAy9ACBvvQAAGL0AgNq8AMD/vAAgfj0AEKE9AIB0vAAA4bwA4A09AEB+vQCAVjwAACQ9AOBvvQAggD0AYE69AMAdvQCAX70A8JC9AIA2vABA/z0AAH88AEBavQCwkz0AgA+9AIAWPAAAFjsAQCS9ACAcPQDA6zwAAI+8AIAhvACgY70AgJ08AACROwDwir0AICe9AECUPABAzTwAMJE9AABAuwAgcD0AwJQ9ABCOPQCgWb0A4Eq9AMCKvQBACr0AIHo9ACAJPQBgBj0AAGc9AOBDPQCgRL0AgFc8ADCTvQCA2TwAACy8AACsvAAgQb0AwKS9AAA0OwCAxbwAAIc9AAC0OgCAYz0AoHu9AMCJvQAAGbwAgLs8AJDdPQDAnLwAAE68AAC8PACAIDwAgK08AKAoPQCAJrwAgLO8AACKvAAA2DoAQBE9AOBjPQAAh7sAACs9AACmOwAAZzwAAKQ8AMCnvQAApjsAYEE9AECePACAdr0AADw7AABUPAAAyjsAQP68AECfPAAQwT0AYKW9AIC5vADgGL0A4AE9AAC2vABALD0AgDE8AIA7PQAAizwAgCg8AADQuQAAwLgAwHe9AGAAvQBgn70AgAU9AIDAPADApTwAwKU8AAC5uwAwsb0AwME8AMD8vAAA7DoAAAg7AMCgPADAWL0AoKK9AEDsPAAAfzwAQNo9AGC8vQDAC70AQF89ADD+vQBgVr0AwJc8AIAmPAAAF7wAwNe8AADJPABgbL0AAFy7AABEOwAACDsAoCM9AMDavAAAVT0AII09AAACuwAgqr0AgIq8AMD9vADgLz0AgNw8AIBIvQBQtj0=","chunkHash":"88937487bf510058479648ea3fcb216487793b65f2ee7a70775765d53dce5240"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(224, 224),\n                 sample_percent=100,\n                 z_window_size=5,\n                 predict=False,\n                 debug=False):\n        #...\n            z_window_size (int): Number of z-slices to use per sample.\n            predict (bool): Whether to use the dataset for prediction (no pairs).\n            debug (bool): Whether to print debug information.\n        \"\"\"\n        self.root_dir = root_dir\n        \n        # If transforms not provided, use defaults\n        if transforms is None or transforms_sim is None:\n            self.transforms, self.transforms_sim = get_transforms_for_contrastive(target_size)\n        else:\n            self.transforms = transforms\n            self.transforms_sim = transforms_sim\n            \n        self.target_size = target_size\n        self.debug = debug\n        #...\n```","range":{"startLineNumber":47,"startColumn":0,"endLineNumber":62,"endColumn":0},"embedding":"AMCGPACA5bwAgBk9AEDCvAAAkzwA4Au9AMC0PAAAgzsAMI69AAAwugDgNL0A4De9ALCLPQCgjL0AgHU8ADCDPQAAqjsAwOI8AECUvQBAIj0AAEU8AIAmvQCAyDwAIOq9AACmuwCAPzwAAM68AAAIPADA/zwAALi6AMBbvQAA37wAwFW9AGAivQBAD70AAFQ7AEDGPAAAoz0AAGg7AICVvABwnD0A4E69AAAkvAAAgjsAgAy8AIBXvAAACDwAgNS8AECfPACgCj0AkIO9ADCePQCA+LwAAAO8AMDqvADgOj0AwAq9AABEvACAOL0AAAy9AEClPQAAYL0AwMG8AICcvAAAbrwAAM+8AIDHvAAAv7sAcIu9AIDJvADA0zwAgIy8AABfPADAW70AAMI7AIACPABAAj0A8O89AADAuwBgSL0AAIC8ANCNPQCA/LwAgBM9AIAPvADgNL0AsJG9ACCVvQCAvTwAYH69AKAyPQAA5TwAIAS9AADVOwDAvrwAoAu9AAAWOwBApbwAYC89AOCsPQCAZzwAgCm8AMBCvQAATrsAAHC8AOCpvQBA4LwAYO+9AAAovADAfD0AgDQ8AEB2vQDA3DwAgEy8AKAuPQBAJL0AcJK9AAA4vQAAXL0AoFm9AICLvQBAGL0AAMI7AAB/PACAfTwAwPC8AECjPQAAObwAwB29AMCZPADAPD0AAJq7AABOvACgtb0AgLG8AADuvACQk70AADc9AABUvQBAjzwAQEW9AIDpPABA3DwAgJQ8AKBjvQAA8DwAwLG8AEDBPQAA4LoAYE49AHCKvQBAqrwAAN07AGAyvQDwiL0AoA29AADUOgAgSz0AAOq7AKCrvQAAWD0AADu8ACAKPQAAgLoAALY7AIBgPADA8bwAgHO8AKC5vQCANr0AgJY8AKA1PQAADDwAQGG9AADvOwDgEz0AULy9AECIvACgK70AwPa8AMD9PABAq7wAgA68AABtvABglb0AsN+9AKAlvQAgTD0AgFG8AMCPvABARD0AoDg9AID4vAAA2bsAAJy8AAAtPADAhD0AEIE9AECZPADArzwAAOa8ABCIPQCAxDwAgMG8AGAKvQAA5LsAQD+9AIAwPACAE70AACC6AMDYPACA4DwAgHk9AACXOwCARTwAoCO9ALCfvQDAFz0AQPg8AIDRPAAAlbsAgDi8AIBTPQDAmTwAAIg8AACpuwBAGb0AgDO9AIBlvQCAW7wAAAA8AOBrvQAgEr0AABM9AADYOwBgxb0AgBm8AAAuvQBgcj0AQJe8APCOvQDAEz0AAB69AEC+vABAHj0AwNk8AOBLvQCApb0AQPY8AGANPQBg3T0AgCa8AAB/vABgj70AANS8AAAqPABgBr0AALi8AAD0vQCAfrwA4ES9AABePADgMb0AQIu8AKBXPQCAgLwAgIs8AMDJPADgkb0AQNM8AGBvPQBgET0AwF89AICGvAAwmb0AYFs9APCWPQAAZDwAYAk9AADKOwDAzLwAAGi7AADCuwBAoz0AAIo8AEAHPQAgQb0AgM88AGCBvQCAJ7wAgAE9AHD3vQDAmbwA8Im9AABguwBAmTwAACy7AABbvAAAYbwAELe9ACBoPQAA9TsAoAu9AAAYOwCATrwAAKw7AAAKPQDAyrwAQNo8AMDHPADgKr0AABy8AIDGPAAAzLsAgLk8AACvvADgCD0AQDG9AAB0PABAkTwAUI29AMAKvQBAPr0AkIo9AGCUvQAAmbsAUOS9AAD1uwAAZjwAgAy9AAA8OwAAsb0AAEg7AIDJvAAAN7wAAFu9AMDHvAAApjwAwBi9APC2PQAwBL4AgM28ACAYvQAAGjwA4Eg9ANCvPQDAwjwA8JQ9AABmvACAeLwAAAI7AIDNvABgJ70AYCQ9AEBLvQAAKrsAgIS8AEBBvQAA+7sAgHO8AIBnvADAdj0AUJ49AECTvABATb0AAGQ9AEAkvQAAIj0AoCM9AKA8vQDAgD0AQIK9AMA2vQBAg7wAwIC9AKAKvQBoBD4AgJ08AEAZvQCAUj0AQDS9AADYPAAAwLkAgHO9AAA/PQCA+jwAgDy8AADQuwAQ070AACq7AAAiuwCARb0AANa8AAAVvACgAT0AwJA9AABWuwBAlD0A0KE9AEAAPgAAZr0AYDa9AEClvQCAKb0AgJY9AOAMPQAA3LoAQEk9AGAFPQCAI70AYDE9AMAgvQCANTwAwOu8AAAKvABA67wAsLK9AACQPAAApLwAYIw9AMCzPAAQpj0AYDW9AOBjvQAACLoAIFE9AGB4PQBgBr0AAGi6AAA1PAAAzzwAAK47AED/PAAA1TsAQOa8AADlPACAfbwAYCM9ANCUPQBgEL0AQPo8AAAqOwAAozsAAOS7ACB2vQAAmbsAQCM9AIBJPAAwqL0AAN+7AICcPABAsDwAANC7AMDLPADAQT0A4G+9AMDOvAAAlrwAAE89AADQuwDAkzwAANW7AAD7OwCAtzwAgEA8AACUOwAgHj0AYHK9ACADvQCwk70AgLc8AMCFPAAAUjwAwNE8AAAQuwBATr0AwMs8AABAuwBAg7wAAKu8AADwPABgkL0AAOm8AEC+PAAART0AWAU+AOCfvQCgRr0AgNA8APDxvQCACrwAgJU8AICEPACAaLwAwO+8AIBYPABQib0AAHq8AKAOvQAAMrsAgBQ9AADZvAAAsDsA0Is9AAB2uwBwqr0AwLG8AKA4vQDA4TwAgEo9AIAIvQCQrj0=","chunkHash":"bbd47a1479b191dc1b7793c861b3c84683bef012d74cc8567f4ea4ebb6ca51c1"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(224, 224),\n                 sample_percent=100,\n                 z_window_size=5,\n                 predict=False,\n                 debug=False):\n        #...\n        self.sample_percent = min(max(1, sample_percent), 100)\n        self.z_window_size = z_window_size\n        self.predict = predict\n        \n        self.samples = []\n        \n        if class_csv_path and os.path.exists(class_csv_path):\n            try:\n                df = pd.read_csv(class_csv_path)\n                \n                if ignore_unclassified:\n                    df = df[(df['class_name'] != 'Unclassified') & (df['class_id'] != 19)]\n                \n                if filter_by_class is not None:\n                    if isinstance(filter_by_class, int):\n                        filter_by_class = [filter_by_class]\n                    #...\n```","range":{"startLineNumber":62,"startColumn":0,"endLineNumber":78,"endColumn":0},"embedding":"AIAKPAAgGb0AgMA8AADJvADAyzwAQCG9AIDDPACAlDwAgBa9AEDKPAAgC70A4Ee9ACBBPQBATb0AAOo8AFChPQBAnDwAwMw8AECcvQDAXz0AAPk8AMAjvQBAhDwAQL29AACEugCAtzwAgH+8AAAguwDArjwAAF68AMBOvQCAkrwAYEO9AECVvACACr0AAEY8AMC6PAAgvD0AAP+7AIALvQAwij0AgAO9AAAjPAAAULsAAFI8AIBEvABAxjwAIAW9AMC4PABAGD0AEKS9ABC1PQCAqbwAAOS8AACtvADgKj0AQDm9AADgOgAgDb0A4Ba9ABCUPQDgH70AgLW8AICZvACA27wAwJm8AKAIvQAAg7wAYF69AEAAvQDAsDwAgEy8AMARPQDAcr0AgJw8AAA1vAAAqTwAwLA9AADhuwBgK70AAOa7AFCKPQBA17wAoA49AICKvABATL0AgLm9AEBhvQAAljwAIGe9ACA9PQDgHj0AwE+9AAAIOgCACrwAQLW8AADMOwDAt7wA4Fs9AFC1PQAA2zwAAHi7AID/vAAA8TsAgIW8AODNvQDA17wA4LG9AIBRvAAgej0AAJo8AFC0vQCA4zwAgFG8AIBDPQBAFr0AQIu9AACivACAI70AwBm9AGCRvQAA07wAAN+7AACcvAAAQDwAQP28AIBdPQCA07wAQNi8AAA2PAAATj0AAKc7AECJvADwtb0AgKO8AED4vACwi70AAMk8AMAwvQDAHT0AQCe9AMCKPADApTwAAMc8AMCOvQCAGzwAIAm9AIC3PQAA2zsAYHc9ALCcvQDAobwAAFI8AKAYvQCgjb0AQDC9AIABPABgfz0AADq7APCYvQAAIT0AAJK8AID+PACA3DwAAAC4AADaOwCgGL0AQKK8APDXvQBACb0AAKs8AGA2PQBgDz0AgDy9AABqPAAAtDwAsJq9AICiPABgP70AAFG9AMCwPACAGb0AAKa7AKAAvQAAfb0AYPq9AMDXvAAgJD0AQL+8AAACvACAZT0AoCY9AMCYvAAAQTwAgAO8AIBDPACAcD0AsIo9AIA3vACAGTwAAEC9ACCOPQBAwbwAgEO8AIB1vACARrwAQGu9AADyuwAgDb0AANy8AACaPACAsTwAQPg8AMCvPABAtDwA4Dq9AMCivQDAHz0A4Ao9AICEPACAVzwAwIa8AMAePQCAoTwAAIM8AACzvADAwbwAwB69ALCEvQBAkrwAgGm8AECevQCA37wAgLA8AICtPACwqb0AACA6AGBdvQCgSz0AAOq7APCpvQBAYT0AQD+9AIB6vADADz0AAMY8AOA0vQCQu70AwP48AKAAPQAgrj0AAKc7AABGvACgpr0A4C+9AACzOwCAE70AgNG8ACD7vQAAEjsAIHG9AIBHPADAwbwAAAe8AGBKPQBAr7wAAII8AAD8OwCQob0AQB09AABpPQCgWj0AYFU9AICfvAAwor0AYHw9ALCFPQCAijwAwDI9AADVuwDAQb0AgIq8AABIugDwmD0AwJI8AEDIPAAAWr0AgC48AMB+vQCA07wAgEk8AJDwvQBAsrwAEJm9AADQOgCADjwAAOS7AADYugAAnjsA4LO9AABOPQCAK7wAgEG9AIB7PAAAarsAANC5AGAXPQBgFL0AwO08AIDMPAAA97wAgIK8AADmPAAAYDsAgIY8AMAVvQDArzwA4Ia9AADrPADAjjwA8Iq9AGASvQAANb0AYJc9ACCvvQAAFLwAUNC9AAA3vAAgHz0AwEO9AADwugAgYb0AAFU8AMCEvACAGLwAIHm9AAApvQBAGT0AIEq9AMCiPQAoAr4AQNW8ACAdvQAAqzsAIHA9AGCQPQAA3zwAQK09AACFuwCAjbwAAAq7AACcuwBAx7wA4EY9AMDevACA2LwAgB+8AJCOvQAAaLwAAPa7AIARvACwiz0AsKo9AMCSvACgYL0AAO48AMAxvQBABz0AQE09AEAxvQDgbj0AcI69AAANvQAARzwAQGi9AOANvQDQ2D0AAAM9AIA6vQDwhj0A4C69AEAnPQAAqTsAQHu9AAAxPQDAQD0AAI67AABYuwBQz70AAI+7AADiOwBAar0AALE7AIBCvADAvzwAYDQ9AEClvADgdD0AIJ49AGD4PQBAcL0AoBm9AMB4vQDAZ70AIIg9AIBaPQAA6DoAYBw9AKApPQBAa70AoB89AIDcvACAmjwAQCu9AIAhvAAAlrsAQNi9AIDJPABA6LwAAJw9AMD1PAAAZT0A4E29AKBKvQAAIrwAoHA9AJCDPQDANr0AALy8AAD/OwCAWTwAACY7AMAQPQAArjwAgEy9AKAlPQBAy7wAwPg8AECbPQCA8bwAgO88AAAEOwAAC7wAALY7AEBuvQAA7bsAAO88AMCRPADgc70AADQ8AACLPACADzwAAKO7AADNPABgmj0A0Ii9AKBFvQBgHb0AIF09AIBWvADgFT0AwMc8AECPPACA8TwAAF47AEC1PAAAPD0AIDm9AIBCvAAgnb0AQN08AAAGPQBA1DwAgLM8AAB0OwBgD70AAFs9AAAcPAAAqbwAACi8AEDVPACAlb0AoAC9AIA8PABA/TwA4AA+ALCfvQBgPL0AgHo8AFDCvQAAp7wAAAE9AIDkPAAAgbwAwDa9AIABPABQir0AAPO7AAB9vAAAnrsAQLY8AOAdvQAAMzwAIJM9AIAZPABQi70AAGW8AKBxvQAA3TwAwBY9AMAmvQBg2j0=","chunkHash":"29a722e0d64f8983c27a4421270d1f2c08279ae5e726cf158ef3a71a97e8fcdf"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(224, 224),\n                 sample_percent=100,\n                 z_window_size=5,\n                 predict=False,\n                 debug=False):\n        #...\n                    df = df[df['class_id'].isin(filter_by_class)]\n                \n                if sample_ids is not None:\n                    sample_ids = [str(sid).zfill(4) for sid in sample_ids]\n                    df = df[df['sample_id'].astype(str).apply(lambda x: x.zfill(4)).isin(sample_ids)]\n                \n                if self.sample_percent < 100:\n                    sampled_df = pd.DataFrame()\n                    for class_id, group in df.groupby('class_id'):\n                        num_to_keep = max(1, int(len(group) * self.sample_percent / 100.0))\n                        #...\n```","range":{"startLineNumber":78,"startColumn":0,"endLineNumber":88,"endColumn":0},"embedding":"AIBnPAAgHb0AgNE8AECsvABAxTwAABe9AEChPACAnjwAYCi9AMCxPADAy7wAgD69AIBPPQCAVL0AQMY8AECnPQAAcTwAQM08AACXvQCAUT0AwOw8AEAUvQAAajwAUMa9AABwOwDA1DwAACO8AACpuwDAuzwAAGS8AOBLvQCAd7wAgBy9AADzvABAMb0AAMc7AIDtPABQxj0AAB+8AIAOvQAgmD0AYA+9AADoOwAAJbwAACA8AAAsvACA5zwAgA69AKALPQCAFz0AoJ69ABCsPQAAjbwAAIq8AIB/vABgQj0AIFK9AAAcOwDA8LwAgPi8AMCpPQCAQL0AQIq8AAA0vAAA67wAAC+8AEAZvQAAMrwAgEy9AMD1vAAArTwAwKa8AEAKPQAQhr0AgG48AABAOgDApjwAcIs9AADauwDAML0AAFg6AECLPQCA3LwAYBU9AIBjvADgU70AEL29AMBevQAAfTwAIFq9AEBDPQBgBz0AgEy9AAAMuwAAJbwAwPe8AAAwOwAAZ7wAgD49APC8PQBA+DwAgBa8AMAKvQAAVDwAAIu8ADDJvQDAsbwAMK29AEClvAAQgD0AgNk8AIC9vQCA9TwAAPW7AOArPQBAFb0AcIW9AMDDvABAPr0AANG8ANCVvQDACL0AAAa8AACNvAAAADoAAPi8AIB3PQCA6rwAYAS9AAD1OwBAbT0AACi6AECTvADAq70AgLi8AGAFvQBQjL0AQM88AMA1vQAA7zwAgEW9AMC2PAAA3jwAAGo8AIBKvQAAajwAABi9ANC+PQAAWzwAgIA9AMCcvQAAybwAAGY7AMAcvQBgi70AACW9AAAyPADgZj0AAJY7AACbvQCA9zwAwIK8AIDhPACA0jwAADa7AADsOgAAGL0AgKq8ANDRvQDAz7wAQJk8AOABPQBA9DwAoEa9AIA0PADABz0AEKK9AACUPACgOb0AIEe9AMDXPACgGr0AAPa7AECYvAAwj70AKAK+AMDPvABgCD0AgA68AADMuwDAPj0AoEY9AECJvADAjDwAAFy7AMCUPABgaj0A8IU9AAAWvACAnjwAIBm9AIB7PQDA5rwAAJa7AIByvAAAorsAIFi9AACMugDgJL0AQOy8AIA8PACAlzwAgNc8AMCVPADAsjwAwA69AMCfvQAgET0AQDM9AMCkPAAAITwAAIm8ACAlPQAAXzwAAAA8AAAAvACAtbwAgBa9ANCVvQAALbwAAOa7AFCdvQBA2LwAQKg8AAApPAAQkb0AAKq7ACAzvQAgVT0AAFm8ABCtvQCgSz0AgCm9AECSvABA7TwAAMU8AEAwvQDQtL0AYAg9AMAXPQDAmj0AAO07AIARvAAAq70A4Eq9AIAxPACADr0AwMe8AIDqvQAAGDoAcIK9AIA6PABAkLwAgIC8AEAnPQAApLwAAKM8AIBhPADwnr0AYB49AABGPQCgKj0AQEY9AEAAvQDQkL0AQDc9AKCbPQDA/jwAYA09AIBsvACAI70AAJ68AAChOwAAqD0AwKU8AEC5PABARb0AAEo8ALCUvQBAlbwAANM7APDgvQAAorwAAKi9AAAguQAARDwAAEO8AABGuwAA3DoA0LC9ACA/PQAA3LsAwD+9AMCCPAAAKrsAAGC5AEAEPQDAAb0AAAM9AICAPABA/bwAQMC8AKASPQAA7TsAAKE8AAAevQAAwTwAoJG9AMD4PAAAzjwA4Iq9AEAJvQAAQr0AkIs9AHCqvQAAQrwAUMe9AADxuwDAFj0AAGm9AAAYuwAAfr0AQIw8AMCavACAarwAcI29AMAuvQDABT0AgDm9AICfPQCw770AAO28AAA3vQAAPTwAIGM9AACDPQAgCT0AQKM9AAA0vABA1bwAAJO8AACQOgAAx7wAADE9AMDtvACAwbwAACe8ALCUvQAAT7wAANm7AABEvACgkz0AELE9AMCxvABgfb0AQOk8AAAuvQAgDD0AYEA9AIBTvQBQgj0AwIO9AIDZvADAhDwAIHy9AIDmvACA3T0AQPg8AKA3vQCwiD0AoC69AEAaPQAAgbsAYH29AIAvPQAAXz0AAEC7AABAugCQ070AAOC6AAAdPABgfL0AAEE8AIAmvADAwDwAoCA9AICHvAAQiz0AIKQ9AID7PQBAXL0AQOe8ACBpvQAgbL0AAIc9AIBNPQAAcDoAYAk9AEAIPQDAbb0AYAQ9AADyvABAmzwAgEC9AABYuwAA2rsAwOe9AACvPACAnbwAMJ49AADvPACAcj0A4E69ACBGvQAAGLwAIIY9AABpPQBgQL0AwOa8AADyOwCACTwAAH47AKAgPQBAqjwA4He9AEAyPQAA0rwAwP88ANCjPQAAAb0AgAc9AACaOwAA7LsAAJS6AOB4vQAAELwAIBk9AACUPACgZ70AAOU7AIA0PAAABjwAAPm7AIDUPAAAlj0AoIe9AKBkvQBgAL0AIEg9AIAOvADA+TwAQJE8AABtPADA+TwAAKy6AMDkPACARD0AYDS9AADnuwAAqL0AQM88AEAYPQDAyTwAAKM8AAAmPACAOr0AgEg9AADMOgAAMrwAAO+7AABzPADAqb0AQO28AMDRPABADj0A8Ak+AECXvQCgVb0AQJE8AKC7vQDAnrwAgPU8AMABPQBAhLwAgDS9AIACPADwi70AgBi8AACyuwCAI7wAgNo8AKAKvQCAJzwAEK09AIB/PAAgkL0AgBG8ADCAvQDAtTwAYAg9AOA8vQAA5j0=","chunkHash":"6e63c69780d138cee0d4c83366293f2102ba1d96e28c57c311b59a01aac56167"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(224, 224),\n                 sample_percent=100,\n                 z_window_size=5,\n                 predict=False,\n                 debug=False):\n        #...\n                        sampled_group = group.sample(n=num_to_keep, random_state=42)\n                        sampled_df = pd.concat([sampled_df, sampled_group])\n                        if self.debug:\n                            print(f\"Class {class_id}: Sampled {num_to_keep}/{len(group)} samples ({self.sample_percent}%)\")\n                    df = sampled_df\n                \n                for _, row in df.iterrows():\n                    sample_id = str(row['sample_id']).zfill(4)\n                    class_id = int(row['class_id'])\n                    class_name = row['class_name']\n                    \n                    if ignore_unclassified and (class_name == 'Unclassified' or class_id == 19):\n                        #...\n```","range":{"startLineNumber":88,"startColumn":0,"endLineNumber":100,"endColumn":0},"embedding":"AADAOgCgOL0AAMs8AIDQvADA+DwAAP28AIALPACAfjwAoBu9AIAAPACA4rwAoDK9AOBCPQAAWr0AAKY8AGCoPQCAGjwAQPA8ACCavQBgbz0AQPk8AMASvQAAIzwAoMa9AAAMuwAAwDwAALC8AIASvADA1zwAgBC8AABSvQAAnrwAADS9AECnvADAWr0AAD48ACATPQDwvj0AQIe8AKArvQDQoj0AgC+9AACJPACAMTwAAJM8AAAmvACA6zwAQAG9AEAKPQBAET0AMJe9AJCkPQDAyLwAgPK8AACjvABANz0AYCy9AABCOwCArrwA4Bq9ANCjPQDgJb0AADG8AADWuwBA0LwAQKS8AEAtvQCAObwAwE69AAAevQBAhzwAgCK8AAC8PADAiL0AgHU8AACKOwAAnzwAoIg9AECOvADAQ70AgBk8ACCTPQCA6rwAICw9AABSvABggb0AYMO9AOCRvQAAUjwAAFq9AAAqPQBgKD0A8IC9AADhOwAAU7wAQOK8AABoOgDApLwAAF49ADCrPQDA6TwAAEq7AOAOvQAAyDoAgL28AMC9vQDA4bwAQJW9AEC+vADgkz0AwNw8ACCtvQDA0zwAAKM7AOBLPQBAq7wAIHi9AECkvADAKr0AwIa8ANCYvQCABL0AAB68AICyvAAAqjsAgKG8AGCBPQAA6bwAwIO8AAAsPABgdz0AAMC5AADkvACQqb0AQOq8AIAZvQAwhb0AQKk8AAA/vQAA5zwAICG9AABxPABA8TwAgEg8AABevQCARjwAQDa9AMDCPQDAijwAwGY9ALCfvQAAW7wAABQ7AIDwvACQkb0AADO9AAD3OwBgeD0AAAQ7AICPvQBA4zwAgGG8AKAGPQCgFT0AAMu7AADQOwBgEL0AQLu8ABDbvQCA4LwAAK88AKARPQBABT0AoD+9AABLPACAljwAUJe9AICSPABgML0AoHC9AECVPAAgPL0AAL27ACANvQDwkr0ACAW+AMCJvACADD0AgFG8AAC2OwAAcT0AoEg9AMCNvAAA/TsAAJy7AABoPACgiD0A8IU9AABquwAAljwAwGy9AABzPQCAxbwAgJu8AAD8uwAA8bsAoIC9AACJuwDAJb0AgNu8AAB/PAAArDwAgOY8AICnPAAAojwAQBe9AGCnvQBAID0AQA89AMCaPAAAWTwAAHW8AIAOPQAAIzwAwIw8AACDuwDAAL0AYB29AHCXvQAAUrwAADA7AACRvQDAirwAwII8AICcPACAir0AAL87AABEvQAAPT0AAIy7ANC1vQCgWD0AgO68AAA5vAAAnDwAwLs8AAAtvQDwy70AwBU9AEBHPQDwkj0AAIw8AABevADgpL0AgD69AAAEPAAA3rwAwJy8ANDavQAAwLgA4HW9AADtOwBA+bwAAES8AAAxPQDAgbwAwLM8AIBEPABQm70A4AQ9AMD3PAAgIT0AQDs9AEDNvAAQib0AgEg9AFCNPQDAxzwAYA89AIDNvACALb0AACy8AAAePAAAmz0AALA8AADMPABAPr0AwNE8ANCIvQCAgLwAAFc8AFDivQBAirwAwJe9AACEuwAAADgAAOy6AADwugAA7DoAQKe9AEAsPQAACLsA4DK9AMCjPACABrwAAPi7AEDlPACA6rwAAKs8AABtPADA7LwAANe7AIACPQAALjsAgLw8AEAGvQBA/TwA8IG9AAASPQCgDz0AEIG9ACAPvQAA+LwAsJo9AIC+vQAAN7wA8Nq9AADMuwDgOD0AoGS9AAAWvABQib0AgLc8AIBWvAAALLsAkJO9AEA4vQAA0DwAICe9AOCfPQCA/L0AwLq8AOAavQAAjLoAwFw9ADCdPQAABz0AsLU9AIA7vACA8LwAAMC7AABIuwAA1bwAwFo9AAAYvQAAqLwAAEe8ACCIvQAAmLsAAJC7AABEvADgmj0AEKc9AABsvADAZr0AQAI9AAAWvQDA2jwAIFQ9AABmvQBAWz0AwJe9AADevACADDwA4H69AIDIvACA3z0AgB49AIAtvQBAjD0AIBe9AOADPQAAULoAAHu9AKA0PQAghT0AAHg6AACFOwAQ270AgEm8AIB+PADgWL0AgEs8AAByvACAjzwAgD49AEDHvABQkD0AEKE9AGDyPQDgTr0AwBK9AIBzvQAAWL0AgIs9AIBiPQAANjsAgAo9AGAsPQAAf70AwNI8AOANvQBApDwAQFu9AIAPvAAAOrsAAPq9AADfPAAAxLwA4Kk9AMDnPADAUT0AYBy9AOApvQAAQDoAkIA9AMBsPQDgOL0AgKO8AAAAOACAazwAAI67AAAdPQCAbzwAQFO9AKAzPQDA47wAALo8AHCSPQBA/rwAoAQ9AAAoOgCASLwAgCg8AEBVvQAALrsAoAo9AABWPABgX70AAIw7AIBlPAAAWDwAADm8AGAQPQAAnz0A0Ji9AIB4vQAABr0AIDw9AICuvABAFz0AgKs8AABKPABgGj0AAMy6AAC0PADgFj0AIC69AAC4ugCQir0AYAc9AEDdPACAvzwAQKo8AACIOwAgMr0A4CQ9AACiOwAAVrwAgAG8AACEPAAgk70AQPW8AEDsPABACj0AQAc+APCHvQDgMr0AgNw8ADCrvQDAx7wAQBg9AGAJPQCAjLwAIB69AECAPAAgY70AAOK7AABCuwDAgrwAALU8AGAWvQCALjwAcJQ9AMDHPABgnr0AgGO8AGB/vQCAwDwAgMo8AOBFvQAg7z0=","chunkHash":"21559622933d78a6e8bdf5433303ee8979e7fdc0d7a2cc9101a5be81d3094e3c"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(224, 224),\n                 sample_percent=100,\n                 z_window_size=5,\n                 predict=False,\n                 debug=False):\n        #...\n                        continue\n                    \n                    padded_dir = os.path.join(root_dir, sample_id)\n                    unpadded_dir = os.path.join(root_dir, sample_id.lstrip('0'))\n                    \n                    sample_dir = None\n                    if os.path.isdir(padded_dir):\n                        sample_dir = padded_dir\n                    elif os.path.isdir(unpadded_dir) and sample_id.lstrip('0') != '':\n                        sample_dir = unpadded_dir\n                    \n                    if sample_dir is None:\n                        print(f\"Warning: Sample directory not found for {sample_id}\")\n                        continue\n                    \n                    raw_dir = os.path.join(sample_dir, 'raw')\n                    if not os.path.exists(raw_dir):\n                        #...\n```","range":{"startLineNumber":100,"startColumn":0,"endLineNumber":117,"endColumn":0},"embedding":"AIATPACAHL0AAEA9AIDWvACAmDwAQCW9AADPPAAADDsAQDa9AACDPADA+7wAgB69AEBoPQCwkr0AQMU8AJCpPQDAwzwAQPU8ADC7vQBgWz0AgOU8AEAsvQAAyDsA4Lm9AACCOwAAnTwAAKS8AACAOgDAMD0AAFO8AMCAvQDA67wAQFy9AIAkvACACr0AAC48ACAcPQCgpT0AABi6AGASvQAwpD0AwEK9AACSPAAAFjwAAGA5AAAEvACA4TwAQPy8AMARPQAA3DwAMIu9ADC7PQAAgLwAgKS8AIAuvQCAED0AYBS9AABoOwCADb0AYC+9ACCXPQAAJL0AgO68AMC3vAAAErwAwNO8AKAQvQAAWLsAAG29AAClvADArjwAAFm8AEDYPADQgb0AgF88AAAbvACATzwA8L09AADuuwAAYb0AACC5AGCQPQAgEb0AQBM9AMCGvABgNr0AcMy9AIB4vQAA9jwAYIC9AOBmPQDA/jwAAGO9AAAguQAARrwAQMK8AIAKvAAAu7wAQDo9AMCyPQDAkDwAAHO8AACmvAAAXLsAQJO8AHDLvQCAVbwAMK29AECyvABgQT0AgIQ8APCkvQAA4TwAAJw7AOCPPQDA47wAQFG9AECNvABgDr0A4Cy9AKCTvQDAsbwAALC6AIBzvAAArLoAALS8ACCGPQCAwLwAQIi8AIATPABAXT0AANg7AIAwvACAtb0AAGO8AIAAvQAQjL0AQOk8AKAZvQAAGT0AQC29AABAOwBAzjwA4A89AKBmvQDAxzwAwOS8AHDMPQDAhzwAYIg9AJCYvQDA4LwAQII8AIDmvABgYr0AgEe9AABQugDgeT0AAEI7ADCavQCgDD0AgDS8AEA2PQCAwTwAABy8AECCPABA+bwAgNW8ABDfvQBgCr0AAPU8AOA4PQDA8DwAgGC9AAAlPAAArjwAYKa9AIB7PACANL0A4Bq9AICSPAAAFL0AAE67AMCovACgd70AsOm9AICEvAAATj0AAJW8AACNOwBgSj0AoCY9AACSvAAApzsAAGW8AIArPACgez0AgFg9AIAYvACAVDwAgEa9ADCjPQCAo7wAgGe8AMAFvQCARrwAUIO9AAB5vACgE70AwLq8AECbPACAmTwAIBU9AID7PABAvzwAAEC9ALCWvQBAEz0AgBA9AAD1OwAAtzsAgKi8AIANPQBA9jwAgII8AACvvADA67wAIC69AMCDvQAAArsAAMS7AOBqvQDAoLwAQOA8AADtOwDgmb0AgAS8AEBtvQAAOz0AAFy7AICOvQAA/TwA4A69AABRvAAAAT0AgFs8AAA9vQCgz70AAAs9AOATPQBwkz0AgKE8AAAcvABwsr0AAO68AACQPADAG70AwKy8AAD2vQCA6rwAwDO9AIA+PADA/rwAgAC8AIBnPQAAjrwAgGU8AEDkPABAkb0AQNY8AGBpPQDALT0AoCA9AACHvABgdL0AUJI9AOB0PQAARjsAALY8AAC4ugBgOL0AgJ+8AECOvADQpT0AgIc8AIDKPACgXr0AAKc8ACCBvQAAO7wAQLo8AIDevQCAhrwA8JO9AACNuwAAiLsAgBa8AABEOwAAIDoAcMO9ACBVPQAAlrwAQPG8AAB/PACAGLwAACC8AOAGPQAgGr0AQKg8AIBmPAAgGr0AAFy8AADmPAAA6LsAoB49AMDgvAAA/jsAYGq9AMDRPADAwjwAQI29ACBLvQAASr0AYIQ9ANCwvQAApzsAAMq9AACAuwAgHj0AwNm8AIAvvAAAf70AAFk8AAD+uwAAFjsAgIq9AIDUvADAAT0A4Du9ACCBPQAYBb4AoAC9AGApvQAAkzsAACo9AJCSPQAgEj0A0Lg9AACuuwCAv7wAACC6AAAMuwBA1rwAACI9ACAFvQDAs7wAQJm8AJCKvQCACbwAAKe7AABQuwCQmT0AILA9AAD+uwBANb0AYAc9AKA9vQBA5jwAAD89AGAQvQAgbz0AYHe9AIBavQAAELsAoIS9AIDUvACg7j0AAOY8AEAovQCgeT0AAAq9ACASPQAAKjsAYEG9AGAlPQDwgD0AQIC8AACkOwBw0r0AgDO8AIAjPABgYL0AAKo7AACsugAACzwAYFg9AEC1vABgTj0AMIc9AGDqPQAgZL0AYCC9ANCWvQDAM70AwI09ABCAPQCAHzwAQCA9AIBMPQDgVb0AAN08AEAkvQCAoDwAIB+9AADQuQAAibwAsOK9AICfPAAgEb0AUJo9AECnPADgZz0AwGy9ACBQvQCAcLwAgGU9AIB7PQCgG70AgIe8AAA4PAAADjwAAJ47AIDyPAAAtTwAIHS9AICGPABAEL0AAN88AHCMPQAAkrwAQOE8AABAuwAAX7wAAD47AKB4vQCAgLwAoBY9AIBkPADwjb0AANI7AIBlPAAAozsAAMK7AMDyPACQuj0AsIq9AGBKvQDgI70A4EY9AAAkvAAgTT0AwNw8AMCiPACAGj0AANK7AIAoPAAA9DwAwCe9AAB/vAAwrb0AIB09AAC+PABAmjwAgFU8AADNuwAgRb0AIB09AAB0uwBAAL0AAO68AKAYPQDQjr0A4Ea9AAC/PAAABT0AeAo+AICTvQAgEL0AwI88AEC3vQBgKL0AQL48AGACPQDAhrwAoC69AABqPADgiL0AAH67AMCcvAAANTwAwMI8AAARvQAAZDwAkJI9AIA0PAAAq70AQIC8AIAvvQDgIT0AwP88AKAqvQBA4T0=","chunkHash":"f9d50c86a73637002f0cd84ef7291bd83a0f86f1efc67b46fe37e2ed6478e921"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(224, 224),\n                 sample_percent=100,\n                 z_window_size=5,\n                 predict=False,\n                 debug=False):\n        #...\n                        print(f\"Warning: Raw directory not found for sample {sample_id}\")\n                        continue\n                    \n                    raw_files = sorted(glob.glob(os.path.join(raw_dir, '*.tif')))\n                    if not raw_files:\n                        print(f\"Warning: No raw files found for sample {sample_id}\")\n                        continue\n                    \n                    self.samples.append({\n                        'sample_id': sample_id,\n                        'class_id': class_id,\n                        'class_name': class_name,\n                        'file_paths': raw_files,\n                        'total_slices': len(raw_files)\n                    })\n                \n                print(f\"Total number of samples to process: {len(self.samples)}\")\n                \n            except Exception as e:\n                #...\n```","range":{"startLineNumber":117,"startColumn":0,"endLineNumber":136,"endColumn":0},"embedding":"AMCFPADA5LwAYC89AED6vADA+jwAYHu9AAD8OgAA4DsAgHm9AMDYPAAA17wAQCa9ACAoPQBwoL0AgFo8AMCePQDAqTwAQOI8AHC0vQCgaT0A4Bo9ACBqvQAA8TsAYK29AAB6uwAAKzwAAMG7AADgugCAdj0AANA6AFCKvQDAEb0AoIS9AMCXvABAYb0AAGg8AIBXPQAAsj0AACi6AIByvQAgtD0AIC69AIBEPAAA2jwAALU7AIABvQDgED0AoAm9AOAYPQCAhDwAAG29ACCsPQBgAb0AQBK9AEAkvQAA3DwAoF29AIACPAAApbwAwE+9AACuPQDgIL0AgAq8AEDWvACAY7wAQKK8AIDUvAAAKrsAgIS9AEDgvAAA1rsAACi7AEDKPACQl70AABC7AACFuwCAgTwAkLQ9AADVuwAwgr0AQJM8AMCdPQBAFL0AwE09AACivACAOb0AoNC9AJCsvQBA9zwAoHm9AKAqPQCAJD0AQBa9AAA2OwDAjLwAAAO9AAB8uwCAK7wAQCk9AFCkPQCAPjwAAMy6AEDMvAAA2LoAAE+8AJCcvQAAvbsAgKu9AIDYvAAgND0AQJY8AJCavQAAWz0AAJ+7ACCMPQAAobwAQN+8AADQOwAgAb0AIES9AKCJvQBAtLwAADq8AIAcvADAtbwAgOK8AMCdPQDA0LwAQPe8AABfPAAAZT0AANQ7AACpPADAuL0AAMK7AKAWvQAAV70AoBY9AADyvADgSj0AACu9AIDRPABAHz0AoBY9ALCEvQAA8TsA4DS9AGDsPQDA6TwAIJs9AAB2vQAA6bwAwPs8AEDnvADgZb0AIGm9AACtuwDAXz0AAP67ADCRvQDA8zwAgAG8AADwPACA2jwAAAO8AIAuPAAAJbwAQIe8AADHvQDgD70AAMs8AED5PACgSj0AwGy9AIAEPAAAlDwAwH+9AMAAPQCA5rwAQBS9AABgOgDA6bwAgJ+8AEC+vAAwp70AMOS9AACZuwCAOT0AAAi8AACJOwAAFT0AYFk9AACnvACALTwAAB28AAANPACASj0AcIU9AACUugCA9zwAYCm9AABuPQCAGLwAAGK8AAAZvQCAt7wAwHG9AABcuwAAFr0AAIg6AAC8PACAajwAwNQ8AMDYPAAAwzwAYA+9AECavQBA5TwAYEk9AACePAAAmLoAAEy7AACvPADgBj0AAKk7AAAJvABA+bwAIDe9AJCSvQAA+jsAAA67AOCMvQBAoLwAAG48AABAOgBgi70AAFg6AGCWvQBgej0AAIY7AGCPvQBAyDwAQMi8AIBavADACj0AgKI8AIAnvQCwx70AgCM9AOAAPQCwkD0AADA6AAA4OgDgsr0AAMO8AMDWPAAgFL0AgMa8APDovQAA4LsAYAK9AIArPACAQb0AQKW8AKAgPQAASbwAgMI8ACAHPQCgjr0AIEY9AMBjPQBgOz0AgBk9AOAGvQDgfb0AIIY9ALCAPQDAijwA4Ag9AABGOwDAw7wAAJK8AAALvQDAoz0AAKI8AABcPADAnb0AAD08AKA2vQCArrwAoBc9AICqvQAAzbwA0Iu9AAAovAAAEjsAAJy7AADwPAAAG7wAkK69AADePACAx7wAwPK8AAAsPAAAF7wAgAe8AIBIPACgWb0AwKk8AADIPACAtrwAAKq8AAD6PACAHTwAgGo9AAAYvQAAVDsA4Gq9AOBRPQAgFD0AoDO9AGBrvQBAB70AkJI9AECxvQAAqjsAIK69AAATPACgMT0AAA69AAAsvAAgLb0AAKM8AIAbvAAAYDwAEKO9AIAyvABA7jwAoB69AGCXPQDg+70AQPC8AIA+vQCAkzwAADs9AHC1PQDgGz0AkJ09AACwOQDAA70AAFS8AACMugBAA70AgBg9AKBWvQCAVrwAoCy9AECWvQAA57wAAH28AMCNvABQnz0A8Lw9AACJuwDgLb0AYFA9AMA0vQDAvzwAICk9AOAVvQDggD0AAF69AKAOvQAAO7wAAGi9AMAnvQDg5D0AANs8AICGvAAgZD0AACO9AGAaPQAA07sAoEK9AEAOPQAAbD0AANW8AACeuwAAsL0AgH68AGAcPQAAcL0AAOW7AAD9OwCAPjwAADk9AEC6vAAQgD0AgHg9AHDePQBgKb0AAOu8AGBnvQCAOL0AsIg9AACYPQCATTwAgEw9AEBCPQCgp70AAGI7AMBSvQBAmzwAQDC9AIBsvACAzLwAsN29AOAiPQDASb0AoIo9AAA5PADAdT0AMIi9AED1vABA+rwAwE09AAB2PQDATr0AgAY8AABsPACAAjwAABe8AACoPAAgTz0AQD+9AAB7PAAAzbwAALO7AGByPQCANLwAICI9AIA3vAAAnTsAAO87AOAHvQCAQbwA4DE9AACQPABgZb0AAOM7AACwOgAAfjsAAAA7AIA+PADwoz0A4EK9ACA9vQCAWL0AYDw9AAAJvQAAQj0AAC89AAAoOwBADz0AAK68AAB6vACAsTwAgDC9AACLuwAgx70AIDE9AIBsPACAETwAAIM7AADYOgBgfb0A4B89AABAuwBAwrwAgKK8AGAGPQAAb70AAFG9AMCkPABAjjwAcPo9ACCOvQBAJb0AQAk9ANCHvQBAQr0AAH48AGAmPQDAgbwA4IG9AIDfPABglb0AQJO8AACwvAAAnLsAwKo8AIARvQDAkjwAYHk9AAAPvACwm70AALC6AABJvQAARz0AAMQ8AED+vACw2T0=","chunkHash":"e2a935dd815a4632625fa0da47c53fa80d905c5357121fd0a5243ea23621f99a"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(224, 224),\n                 sample_percent=100,\n                 z_window_size=5,\n                 predict=False,\n                 debug=False):\n        #...\n                print(f\"Error loading class CSV: {e}\")\n                import traceback\n                traceback.print_exc()\n        else:\n            print(f\"Warning: Class CSV file not provided or not found: {class_csv_path}\")\n    #...\n```","range":{"startLineNumber":136,"startColumn":0,"endLineNumber":140,"endColumn":89},"embedding":"AACoOgAAq7wAIAo9AIBWvACAizwA4DK9AIBePAAAujsAQHu9ACAEPQCgAr0AQPi8AIBjPQBASb0AAKE8AKCRPQDApDwAQC49AHClvQAgOD0AQMo8AEDfvACATzwAsLq9AIAWPAAACzwAAEe8AICwPADA6zwAABy8AGBIvQBA9rwAwD+9AADWuwCgAL0AAAm8AKATPQCwwD0AAHo7AOBXvQBAZj0AoEu9AIA0PADAyzwAAEs8AIBKvAAAIj0AAKO8AAC0PABA6jwAEJ29AJCsPQAAfLsAAIy8AMA/vQAAejwAQBe9AAC+OwBgD70AoGW9AFCgPQBAMb0AIEG9AICNvAAAsLsAwLu8AADOvACA9rwAQIK9AMCYvAAAAbwAAIm8AGAOPQBwgb0AgAc8AAD/vAAAOzwAcNs9AIBaPACAeL0AAP47AACmPQBAYr0AgDo9AAAbvAAgZb0AYMW9AOCPvQAAFj0AwHy9AIBFPQBAxTwAwOO8AABguwAA1bsAAH+8AADrOwDAFr0AMIg9AFCYPQDAhDwAAJ88AEDUvAAAcDsAgFG8AKDLvQDA5LwAwM29AIBQvADgcj0AANs7AKBjvQAA2TwAQK68AGAsPQAA7LwA4Iu9AMDOvADgM70AwNO8AFCrvQCAv7wAgJi8AACcvAAAKDsAgCe8AABAPQAAKLoAABO8AACwuQAgJD0AAII7AACdOwDgqb0AwNC8AOAcvQBwp70AYAA9AIAovQDgMz0AYEG9AIDdPADA3jwAAC48ADCcvQDAljwAwKW8AKDTPQAAGDsA4CA9ACBsvQCAILwAgCQ8AAArvQDgir0AYFm9AIAVvAAgYz0AAEA6AJC9vQAAKT0AAJu7AKBNPQAAjjsAAPk7AABIugBgBb0AgAO9AECxvQBgG70A4A89AIDWPADA0DwAIB+9AAD/uwDABT0AcIq9AIADPADA97wAoHq9AEDwPABAK70AgGU8AGAvvQDgd70AIOu9AIBxvACAIz0AANy6AAAQuwDAPz0AAMQ8AACCvAAAgbsAgHO8AMCMPABAUT0AIHs9AECPvADgKz0AoFG9AMCaPQCAZbwAwLO8AIDIvACAh7wAIEi9AAA2OwBAOb0AABW8AEDrPAAA+zsAANQ7AIAKPQDAuzwAgMq8AGA2vQBATD0AgA09AIABPACAZTwAAPC5AAD4PACALTwAAFg7AGAYvQAAe7wAwFO9AICKvQAAUrsAAN87ACBsvQAANLwAAE48AIBxPAAApb0AgDK8AMAzvQDgAj0AANC5ABCUvQDgXD0AgOu8AAC3vABArTwA4AQ9AEAmvQDQwL0AwCY9AAA5PQCQqT0A4Ak9AACoOwAAr70AABi9AABUOwCAFr0AAAK9AEDuvQCgIL0AADq9AABVPAAgCb0AANM7AOAVPQBgHr0AAEg6AADougDApr0AAPA8ABCMPQAAHz0AgF49AEAHvQBQmb0A8IU9AEBwPQDALj0AYDA9AECLPADgLr0AAEQ8AECJvAAw0T0AAEs8AIDYPAAAir0AAMI7AECEvQCApLwAQN08ACDnvQBAlrwAMJ29AIANvAAA0DwAALm7AIAFvACAJLwAQLy9AICxPAAAdjsAwEm9AABmPAAABrsAABK7AMD6PADAFr0AgOw8AIChPADASr0AALE7AECWPAAA0LoAwPg8AKArvQAAqTsAoJO9AEBUPQCAUTwAAHq9AMAfvQBgTr0AEJ09AOCgvQAAKDwAYPm9AABBPADA7jwAAMe8AAC/vAAwkb0AADo8AIB1vAAAhjsAAIu9AMD9vAAAIT0AQAC9AHCRPQAA5b0AAK68AMDwvABAzzwAIDc9AABaPQCAXDwA0Lo9AIAYvABAtrwAAAK9AABMvABAAr0AwEg9AEBwvQAAHrsA4CC9AIBhvQAApDoAgDC8AICYvAAQkj0AYIk9AEDsvABAEr0AAFc9AMBEvQAAETwA4F49AECJvQDgWD0A4FK9AGBqvQAAaLoAIFq9AEBBvQBQ4j0AgMI8AMDuvAAAUT0AwOC8AEDwPAAAnDsAYG29AGAEPQCAQj0AgCW8AACsuwBAuL0AABq8AIBdPADAR70AQP+8AACOvABAqDwAgGA9AACauwCAWz0AILI9AMDbPQAAMr0A4A69AKB4vQCAcbwA4Jk9AEAIPQAAcjsAADQ9AEAGPQBgfr0AAAM9AACNvAAArjwAAA+9AIAtvACAvrwAIOm9AEAMPQCAAr0AQMQ9AED9PAAwkz0AYGu9AIBTvACAELwAQGQ9AHCoPQCgdL0AAIA6AIAnPACAAjwAgGq8AIA4PAAgPD0AIAW9AIDRPACAfLwAAK88AGB7PQCAsbwAAE08AAAsPAAAgDwAAOA7AEDfvACAgLwAgNk8AIDTPACAdL0AgG08AADfPAAAbLwAgLq8AMCHPADAaD0AIIO9AGAgvQAAW70AwEA9AIBTvACA/jwAADg9AIA1PACA+TwAAAA4AIAgPADgGD0AYCu9AADAugAAob0AIEM9AAByPABAozwAwKU8AABcPACAFb0AgCI9AADkugCA2bwAgLO8AMCLPADAZL0AgEy9AABPPABAwzwAGAU+AACovQAAUr0AgEs8ANC/vQDgJL0AQKE8AADwPAAAd7wAQHe9AAAYPABQqL0AgLS8AACbOwAAkrwAQJ48AGB8vQCAtzwAIB49AIAAPAAAtr0AAJK7AEBCvQAgRD0AgL88AIA8vQDg4z0=","chunkHash":"681a90c6a0708cd9af11543ae154e30426b0ea19122cfa26a4b08e2422483ae5"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __len__(self):\n        return len(self.samples)\n    #...\n```","range":{"startLineNumber":142,"startColumn":4,"endLineNumber":143,"endColumn":32},"embedding":"AIAoPQCABb0AIIc9AAC3uwBARz0AgFa8AGBXvQDAjLwAAPS8AABgOgAgEL0AYCi9AEDRPACAAb0AAIE8AKBTPQAgIL0AgNo8AGA9vQBApDwAAO08ACAJvQDAnDwAQJi9AOBWPQAAwjsAoFq9AIBKPAAALD0AwMq8ACAtvQCASL0AwNm8AMCFvADgXr0AgA88APCBPQBgoD0AgDE8AHCHvQCAFz0AgJC9AAB7vACADjwAwDg9AACTuwAAizsAQKy8AEAOPQCgmj0AUJO9AODHPQBAdr0AYEi9AIAEvABAUz0AgJu8AACBPACATjwAcNC9AICSPQAAcbwAIDW9AABSvQDAUb0AAI67AED3vADAlzwAwCy9AMBovQCAHTwAwK88ACArvQAgXr0AQI+8AAB4OwCgCz0AIB09AADpOwAA7TsAQMC8AFCjPQCAFLwAAMO7AAA4PAAARb0AAG29AMB5vQAAGzwAAAa9AKAkPQCAqzwAgEE8AGAXvQAAMrsA4Dy9AABPPAAAr7sAABo7AAB4PQCAOzwAwIE8AABfvQAAT7wAAN+8AMDVvAAAlDsAcMi9ACBUvQBAkT0AgGU8AGCQvQBgYT0AAI07AMCEPQAAJLwAsIa9AACguQBATb0AANO8AGBkvQAAArsAgN88AKCHvQAA9zsAALa8AKAjPQAA27wAwIm8AIDYPADwoD0AANC6AAAGuwCQsr0AQI28AAB+vACQi70AgEm8AMDOvADA5zwAAMi6AEDCPABgMD0AgIU9AACJvAAA/TwAgFa9AGBRPQCALTwA0MQ9AACuvAAAADgAAAo8AAAGOwAgl70AwHG9AIAxPAAA0zsAIAi9AKBuvQAAOj0AAPM7AGBhPQAQhD0AAFI7AADbOwAA+LwAQI68AKDAvQCgGL0AgNY8AJCePQBgPz0AsLy9AKBNPQBgIj0AwBW9AOAoPQAAS70AwMS8AADbuwCgIr0AALo8AIAKPABAgLwAyBG+AIBWPACA9TwAgFq8AICivAAwkz0AgHI9AIABPACgCj0AgN+8AIA8vQDgdD0AIGc9AEAevQDAhTwAAH29AMCaPQBAYL0AADk8AAAKuwAgHb0A4IK9AAAQvADgFL0AAHI8AIAKPADAkTwAACE8AABsOwAAYjwAAAS7AIBkvABAbj0AQC09AOBDPQAAuTwAAJ+8AMDVPABA9TwAABE8AACeOwCAaLwAAPi6AECmvQCA3LwAgBk8AAAyvQCAUr0AALk7AIADPQAApL0AgAg9AIBavQAgDT0A0IK9AABvvQAAojwAYAS9AKB4PQCAYjwAgPk8AIAQvQAAY70AAFE9AACAvACAgD0AgIM8AMDuvADgz70AADa9AGARPQBgGb0AAO08AGDUvQCAXrwAQGS9AAAAuQDgNL0AwLO8AIAuPQAAPDwAgBI8AABNPADQmL0AAKg8AAC0OgBAlbwAoIw9AMAkvQDA7rwAIFU9AFCMPQDAnzwAgEM9AKAZvQAA6bwAAAA8AIB1vACgXT0A4H89AGAHvQBgBL0AoCo9AIAxvAAAVDsAAPM8AFDBvQAAozwAgJm9AIBtvAAA4TwAALU7AADIOgAAJLsAEOu9AICaPABAirwAwO+8AACEuwCAarwAwNI8AABoOgDAUD0AANW7AABNPACAj7wAALa8AABnvACATLwAANO8ACAxvQCAVjwA4GG9AKArPQAABjsAAGS7AAA9vAAAf7wAwFw9AFCcvQAAkLkAgPq9AAD0uwDgBz0AIIC9AIBevADAb70AAEC6AECwvACAe7wAABq9AIAFvQCgQj0AgFS8AMDAPQDwp70AADy9AABRvAAAKT0A0JY9ACBqPQAgTD0AcLs9AECTvADgR70AgFE8AIBUvAAAarwAALs8AOASvQCQhr0AwKw8AMChvQAAvbsAgN+8ACAovQDgEz0A0PA9AECKvABAc70AADw8AAAkvQDAyjwAEI49AAAQOgAA/DsAADK9AAD9vADA1bwAgC29AABJvAAAez0A4CI9APCMvQCgGj0AoJm9AAB3PQAAwjwA0Ky9ALCmPQAALz0AgFO8AIAOPQBw/L0AwBu9AACVOwDgfr0AYB09AIBivABAqTwAwJA8AAChuwDwrz0A4EQ9AGC8PQDgNb0AQKi8AMAZvQAAGLwAQJA9AABaPAAAxzsA4Ag9APC8PQCALrwAQLI8AADbPAAAsbsAgEC9AMCKvADAv7wAYCW9AKCnPQAAdrsAAOo8AECMPABAHD0AQHa9AACUPAAAFj0AgIk9AGBGPQAgCL0AwEC9AIAYPQDAjLwAwO88AEBNPQBgJj0AUIW9AGBPPQAAGLwA4G89AIAQPABwub0A0Ls9AADnvAAA0LsAgEW8AGAEvQCAWzwAgOo8AECnPAAAkLoA8Iw9AGANPQDAvjwA4B69AED1PABgdT0AwBK9AMATvQAAq7sAQFY9AOBJvQBAAD0AgCq8AIA6PACApjwAANu8AADQOQCgIz0AwAm9ACAePQDAL70AEJE9AMDCvAAgBz0AgPY8AIAQPQAAjrwAAPM8AAAgPACgFb0AQJw8AAB1vACgUb0AcIe9AOARPQAAgDwAuBU+AKAovQBgXL0AgJA8APCMvQDAfr0AAAE8AIAyPQCAeLwAAIa9ANCCPQDA9rwAQN68AAAzPABA0bwAAKk7AACIvQAA8TwAgJI9AAAQOgBgmL0AwIK8AGAmvQCADzwAwP08AHCdvQBQ5z0=","chunkHash":"1d46b231c30e8917e07245b85b6af4f4655e0f3c0df7859dee61b0ef6a5a28c2"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def _load_volume_slices(self, file_paths):\n        \"\"\"\n        Load a subset of slices from the volume for contrastive learning.\n        \n        Args:\n            file_paths (list): List of file paths to load\n                \n        Returns:\n            numpy.ndarray: Selected slices from the volume\n        \"\"\"\n        if len(file_paths) == 0:\n            return np.zeros((self.z_window_size, 224, 224), dtype=np.float32)\n        \n        total_frames = len(file_paths)\n        \n        if total_frames <= self.z_window_size:\n            # If we have fewer frames than needed, use all and pad\n            selected_indices = list(range(total_frames))\n            # Pad indices by repeating the last frame\n            selected_indices.extend([selected_indices[-1]] * (self.z_window_size - total_frames))\n        else:\n            # Select a random central region\n            start_idx = random.randint(0, total_frames - self.z_window_size)\n            selected_indices = list(range(start_idx, start_idx + self.z_window_size))\n        \n        images = []\n        #...\n```","range":{"startLineNumber":146,"startColumn":0,"endLineNumber":171,"endColumn":0},"embedding":"AAD0OwBAR70AAO07AJCavQAAIDkAoFq9AACRPAAgHD0A4Cq9AECdPAAAzrwAgGO8AGBLPQDAhbwAYDk9AMB3PQAAhbsAEJc9AGCovQCgFj0A4Cw9AMAsvQAAzzwAwOy8AABRvAAA17sAYGI9AIBOPQCgNj0AwOu8AGAevQCA47wAAC29AMAKvQBgeb0AAGC7AIAqvADw+z0A4HO9AOAZvQAAAj0AYIi9AACcOgDATz0AsJE9AIAZvAAAJD0AgFQ8AAD5vAAQkz0AYLa9APDVPQBgH70AgKW9AACtPADgOz0AANu8AAC3vADAkDwAwDu9AKA5PQCARr0AAKg7AACvuwAAhTsAQBg9AIAwPAAAijsAQKu8AACEPAAAvbwAAPs7AMCVvAAAp7wAgEE9AICVPAAgJz0AQEw9AACyOwCwn70AAPA8AMAzPQDgNj0AgOk8AKAmvQCAJb0A4IC9AABhPQAAlbsAIK69ACAdPQAALLwA8Ku9AMDuvAAAQLkAAI07AADFuwDAl70AMJI9AMBqPQBAvrwAAPo7AAB6vAAAsLsAQNM9AABIvQCAZT0AwJO9ACAIPQCABT0AICM9AMC4vAAwqD0A4Ey9AAASvACQ1b0AIFK9AMDtvACwlr0AALi6AMCpvQAA6jsAgHA8AICevACAcrwA4AW9AIBRPABANL0AQMy8AAC1PABQgD0AQJ88AIA9PQDA/b0AgLM8AADavAAAVb0AAMA7AKDkvQAQyj0AIIy9AAAHvACggD0AADQ8AEACvQCAAD0AwKy8AECQPQAA1TsAsIU9AEC5vABAhrwAgAA9AOBvvQAgh70A4F+9ACBAvQAAMz0AgK88ACAGvQCAqLwAwKy8AMBiPQAALrsAAPM7AABjPABAkL0AYKA9AACtvQAAmb0AAIC6AAAaPQCATzwA4EG9AOA2PQAArbsAULe9AADiOwCAFDwAgJW8AABpvACAHLwAAAO8AMDNPACgGL0AYCG9AACMugAA6DwAgDO8AMDYPAAAJD0AQJw8AADpvAAADj0AkIW9AABXvACA5jwAwIs9AIAoPADAxrwAoBy9ALC0PQBAtbwAQIC8AOBXPQCA0bwAIH29AAAWPQCAMb0AAIs8AADSOwBAwDwAgEs8AIBQvQAAGDoAoJC9AICXvQAQkj0AgOA8AEANPQAAirsAAEy8AICIPAAgOT0AABS7AADTuwBAiLwA4E29AADSOwCAKjwAgHo8AMDBvADgXr0AAKI8AECKvABwnr0AgMu8AIAbvQAgED0AoEW9AACIugAgET0A4Am9APCIvQAgLT0AgN08AAAlvQBAJr0AgDo8AIDyPAAAiD0AADe8AAB4uwCwsL0AgKK8AMCPPACgVr0AALe7AMgdvgAA8DoAADC8AIDQPAAAnTsAgPw8AABFPAAAhzwAAKi7AAAyOwDgPL0AgOo8AABYPAAAuzwAAM08ACACvQCgH70AgNW8AICHPQAA0DoAgDI8AABcOwBgAL0AANg6AIDNvADgiz0AwO48AMCnvACQgL0AAAo7AOAxvQDArrwAYAQ9ANC0vQAAsLoAgF+9AMBcPQAgiz0AwMC8AIA8vAAAGjwA4E69AAALvACAx7wAAMe8AAAOOwDAjjwAgIa8AAD/PACACLwA4GQ9AADaPAAAdjwAwJc8AKBKPQAAJDsAgGs8AIDMvADAkDwAwP68AFC4PQAAQLwAcLS9AACLuwAAnLwA0L89AABKuwCAIj0AsL+9AAAgugBgKz0AkP+9AEAwvQDAubwAgE+8AICLvQCAirwAYNu9ACARvQAAYLkAYFK9ADCBPQBgQL0AAPu8AABvvQDAFL0AQGU9AJD8PQBAyzwAkKc9AIB5vQDgUL0AACe9AIDZvAAAi7wAwEw9AABouwAA7LwAgFI8AODjvQAAmLoAAFS7AADfvAAgGD0AAH89AAAGPAAA4bsAANe7AAD2PADAsDwAAO47AGAtvQAQzj0AwFq9AICMvQCgND0AwJO9AIBfvABAkD0AAF88AABEvQAgNz0AUJ69AADVOwAAWDoAAH48AABqPAAAWTwAoA69AECGPADAlL0AABM8AIBHPACgJb0AAD+8AADwPACACbwAwAk9AICgPACgHj0A4E49AMCUPQAAVL0AwFW9AAA7vQDAzbwAwEw9AAAPPAAAhjwA4B09AACUOgBgFL0AwEY9ACAMvQAAjDwAQNC8AIBxPADA4LwAcKK9AMA3PQAgFb0AIOU9AMCrvADwkT0AwIO8AIDuvAAABz0A8JU9AGBYPQDA77wAgC68AMCxPAAA7rwAAAU8AOAhPQBA+DwAAN28AEDPvAAA7DsAoE09AABcPQDAQb0AgI88AAAoOgBgL70AoAS9AAAZvAAAdTwAsIU9AICIPQBAjLwAYEQ9AABBPADA6rwAgFI8AABCPABAFz0AALi8AABWuwBQhb0AgDg9AMBZvQAAUDsAgJ88AABEvQAAjTsAgGk9AACVPADwsj0A8I29AAA2vADgCb0AoF09AICLPACAzjwAABU8AFCWvQCADr0AQLC8AICwPAAgXb0AgGO8AADsPACACbwA4DS9AADfOwAgtj0AUNY9AEDovADgbr0A4G49AABcvQAgJ70AwAg9AECbPAAANLwAAFm8AADmuwCAeL0AgHI8AIDEvABAh7wAQIE8AMA0vQDAtDwAwAk9AACcuwBAV70AYHK9ACBIvQDAhTwAoDU9AED/vABgkz0=","chunkHash":"1edaa65cb08e468b25b2f90a6c6f4d6f53f2531f575643f60123479e8ff2fb55"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def _load_volume_slices(self, file_paths):\n        #...\n        for idx in selected_indices:\n            try:\n                img = np.array(Image.open(file_paths[idx]), dtype=np.float32)\n                images.append(img)\n            except Exception as e:\n                print(f\"Error loading image {file_paths[idx]}: {e}\")\n                # On error, append a blank frame\n                images.append(np.zeros_like(images[0]) if images else np.zeros((224, 224), dtype=np.float32))\n        \n        # Stack images along first dimension to create 3D volume\n        volume = np.stack(images, axis=0)\n        return volume\n    #...\n```","range":{"startLineNumber":171,"startColumn":0,"endLineNumber":182,"endColumn":21},"embedding":"AACkOgCAPr0AQEs9ACBbvQAA4LsAwIS9AABePACAlDwAICu9AADMugAAdbwAAAi7AEAkPQCgI70AgDo8ACC9PQDAF70AQBQ9AKDSvQAgXD0AAEI7AMA3vQAA5rsA4Ka9AAAmOwAA3TwAQAM9AMDdPACAbz0AgOG8AOBdvQCAGb0AgKm8AIA7vADAi70AAMQ6AADjuwCg8j0AAOe7AEAuvQBAqj0AYCi9AAD8OwCABz0AIH49AMCAvABAjzwAgN68AAADvACAhz0AAJS9AFD2PQDAg7wAUJG9AAAsuwAA/zwAYDe9AIBavACAXzwAYHG9AFCAPQDgZr0AAJI7AEC0vADA9bwAgDC8AACquwCAaDwAAMi8AAAwvABAyLwAgJo8AIDIvACAJ7wAAFU9AIBmvACAJjwAgGA9AAA2OwCAzr0AALC5AMAQPQCARbwAgGA9AECWvAAA4bsAUJa9AAC3uwCgSb0AAIW9AMC0PADAyDwAwFG9AACfOwCAOLwAwJm8AADTOwCANr0A4IA9AACDPQCAY7wAAGc9AMCRvACALrwAEIY9APCHvQAADz0AgBS9AMCNPAAgUD0AgNk8AGBYvQDgVT0AwIG8AECmPACwp70AQBS9AECdvAAggL0AgJq8AGCwvQAA/jwAAGS7AIAhvQDgAT0AAGS9AOBZPQCgR70AYAu9AAD2uwDQkD0AwKc8AICLPQDYBr4AAKQ7AAC9vABAJb0AAPA7ABCEvQDQmj0AIH69AIAWPACAiD0AABi8AAAouwAAdz0AgB29ACCbPQAAIT0AQFk9AAAzvQAA/DoAgDo9AABZvQCwmb0AII69AAACPQBggT0AAAg8AKAsvQCAY7wAgAY8AACPPQDgHj0AgOK8AEDEPACgT70AAIy6ALC6vQDAn70AABu8AIAEPQAArLsAkLm9AOCCPQAAbjsAgD+9AEDsPABACr0AwKi8AADWuwDgM70AAJO8AABuuwCAXb0AsIO9AECKvAAALDsAABe8AKAjPQAARTwAwPI8AICkvAAADD0AgAC9AACbvACANTwAAH49AAClvAAAMbwAAOI7AMDAPQDAnbwAgDy9AABHPQDAF70AMIS9AICTPAAA7rwAAIG8AED6PABAkDwAQIc8AIDfvACAdrwAIHa9AGBLvQDgsz0AwNo8ACASPQAAAbwAIAM9AIAiPADABT0AAPC5AED7vABAkbwAwI69AEDmvABAtLwAAEa7AADFvAAAPL0AwJQ8AAAAuwCgsb0AgNc8AAB7vQDADj0AgCe8AIASPADghT0AgNe8AOAqvQDArjwAwJ88AMD8vAAAGb0AwNg8AGAsPQCALj0AAPQ6AEDTvACAm70AgOq8AAC+PACgML0AAEW8AJAYvgAA3LsAABC6AAClPABAybwAAEa7AADdPACAXbwAAB68AIAqPAAgiL0AAPS7AAAYugCASDwAgJk8AEDPvADA37wAYCs9AKB6PQDA+7wAQOk8AABqOwDA8LwAAIQ6ACA0vQCgnz0AQJw8AADQvABwt70AABS8AHCpvQBgW70AYGU9AJDpvQAA1LsAgNu8ACBJPQAAVT0AQEm9AMCbvAAArDsAQFy9AACEOgCgEr0AAJG7AAC/PAAASLsAAKi7AEDEPACAOTwAIBQ9AMCGPAAAn7sAQLy8AIArPQCAMzwAAIY7AIAlvQAAkjsAAFm9ADCGPQAAhjwAAHq9AICRvADAvLwA0Ks9AOBnvQAAODoAEPG9AABAuwCAszwAMOW9AAAgvQAA0LsAgHC8AEAkvQCgEL0AgMK9AEB+vQCA0DwA4Hq9AOBDPQCQpr0AAEm9ACAcvQAAvrsA4KM9AOCLPQCA1TwAsL09AGApvQBQk70AAGO8AABOvACAP7wAALc9AADfuwAgR70AADw7AAC1vQAARr0AQI68AEBzvQBAHz0A4Kc9AICePAAgCb0AQOm8AAAEvACgCT0A4A89AIDbvABAmD0AQNm8ACCLvQAgFz0AALq9AKAzvQCAij0AwLY8AECDvQAASD0AQFu9AIA4PAAAz7sAADS8AIAXPAAAOT0AALS6AAA8uwBAm70AAIC4AMDcPABAP70AQIa8AOBuPQCAZLwAAMw6AACyuwBgHz0AYFo9APDNPQDA1rwAgLe8AAAkvQBA1rwAIIY9AID7PACAKj0AQCc9AICIPABAS70AABk8AIBkvAAA+DsAYHS9AAAJvADAl7wAkIy9AABsPAAAbr0AcA0+AIAdvQCAmz0AwBO9AAA+vQAAjbsAQJw9AFCSPQCAK70AADI7AAAauwAAQ7wAABa8ACBbPQAAJT0AIA29AMDQPAAAlLwAANI7AGARPQBAlLwAgBo8AIACvQAgar0AQEK9AOAUvQCAzbwAQM08AKBiPQBAKL0AgPY8AIAMPQAAkjwAgDM8AIAoPABALj0AwFq9AIBZPAAAIb0AwJM8AOBmvQCA2DwAADg8AAAiOwAAATwAQKc8AIB+PAAgCz0AgBy9AIDsvADwjr0A4HM9AAB1PAAgDz0AAFg6AAAdvQAA0LwAAIk8AMDZPAAALb0AALS6AKAwPQCA3rwAcJK9AIAZPACQlj0AyAU+AOACvQDAkL0AgOo8AMASvQCA/rwAAOo8AAD6OwAAgLwAIAm9AACauwBAfL0AALU7AABMuwCAibwAoGE9AOB2vQAA6jwAQPo8AIAtPADgJ70AQIe8AED7vADAlDwAgLE8AADjuwDwzj0=","chunkHash":"513cfa427efdd15632e63432e95727855b7a0c965322d73a799ad24f64fe32a9"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        \"\"\"\n        Get a sample by index.\n        \n        Args:\n            idx (int): Index\n            \n        Returns:\n            If predict=True:\n                torch.Tensor: Processed volume tensor\n            Else:\n                tuple: (input_tensor_pair, target_tensor_pair) for contrastive learning\n        \"\"\"\n        try:\n            sample = self.samples[idx]\n            sample_id = sample['sample_id']\n            file_paths = sample['file_paths']\n            \n            # Load volume slices\n            volume = self._load_volume_slices(file_paths)\n            \n            if self.predict:\n                # For prediction, just return the processed volume\n                return self.transforms(volume)\n            \n            # For training, create two versions of the data for contrastive learning\n            target_views = [self.transforms(volume.copy()) for _ in range(2)]\n            input_views = [self.transforms_sim(view.clone()) for view in target_views]\n            \n            return torch.stack(input_views), torch.stack(target_views)\n            \n        except Exception as e:\n            #...\n```","range":{"startLineNumber":185,"startColumn":0,"endLineNumber":216,"endColumn":0},"embedding":"AJCFPQDgpb0AACi6AMBrvQAAqTwAQLm8AKAkvQDAhTwAABa9AAAgvQCAUzwAQLK8AMASPQBgir0AQKw8AGAPPQDQob0AQK+8ADC3vQAA1zwAAOe8AAAAuwCgBj0AoE29AACdPQAA6LoAgAk8AMA0vQCwjj0AwPm8AIBHvQDACL0AYBO9AGByvQDAyLwAQOM8AKAEPQAwnD0AwEm9AAAmuwCgZT0AYKC9AIAhvAAAFDwAoC89AABpPAAAoLoAYKy9AAAmOwDg8T0AYHW9AKBfPQDAhb0AAM87AOCjPQDAh7wAAHe9AACVOwCAaT0AAJU7AADCOwAgkL0AACI8AMDxPAAAODwAgJs8AAAVPADASD0AgNA8AACAuAAAjTwAACo8AACtvAAAfjwAQLU8AOAzPQBgZj0AALo8AAASvQDAcb0A8IM9AEAIPQBARL0AIAc9AAAQugBwg70AQFy9AIBJvQBA/TwA0LO9AMDkvAAABjwAQGm9AAB4PACAdT0AAHQ7ACAEvQAAursAAI48AMBQPQCAWbwAwB09AIDLPAAgBb0A4EM9AEDgvAAA/zsAAH67AAD4OgAgLj0AgLi8AKCWvQBAkTwAQGs9AAAgOgCAXbwAgBY8AEAivQAwhr0AwMG8AMDkvQDAyTwAAKg6AKA6vQBgQr0AwDa9ABCxPQCQq70AoJ29AADmOwAAbz0AoAq9AAC8OgAAHL0AAE28AID2vAAgUD0AgNA8AGCWvQAAhD0AcKG9AADSuwAACj0AAKk8AMDVvAAAfbwA4Au9AECEPQAgMj0AWAA+AACROwCAMDwAgBK8AIDwvAAAjDoAIEa9AMC+vACAnTwAAC+9AIBzvABAj7wAAIY8AADwOgCACT0AQGa9AEAWPQDgnr0AQKG8AMAuvQCAsLwAgNs8AIDbPAAAijwAALC5AKA3PQCgAr0AYKK9AACwPABApLwAwL+8AOCqvQAA1TwAgKu8AEDuPACAMTwA4Ha9AAAnvAAAuLsAkKG9AECZvAAAersAgPE8AIDevABgCT0AQN28AIBBPADgaj0AgD89ACBoPQAAw7sAEK+9ANCHPQAgCr0AwF49AEAVPQBgEz0AQFu9APCuPQCAPTwAwHy9AMAUPQCALb0AwIM8AAC2vAAAcrwAAFS8AIDAvQCAKj0AAIi8AECjPACAjrwAoAE9AABKPAAglT0AwD89AMCTPABAGz0AoH+9AKAvvQCATbwAgF+9AADhOwAAgDkAAM68AKBsPQCAYLwAgB28AIAYvQBgaD0AYLO9AKAqvQAA/7wAoDW9AKB3vQAgYT0AAJw7AAB5vACwhr0A8J89AGBCPQDwjj0AIFG9AIA6vQDgY70AAEg7ACACPQAAfLsAAFw7AGCAvQBAiTwAALm7AKAMPQAAoLkAADQ8AIBHvQCAjbwAIFI9AADMugAgcL0AAIm7AEDUvAAAuLoAICc9AKA6vQAAAb0AAB+8ALCcPQAAgLgAAAY7AMDAvACgSb0AYA+9AMDivAAgDL0AULI9AGAavQBAW70AQJi8AADqvAAALLwAQIM8ABDgvQAAjLoA8Nq9ACCVPQDgOz0A4A69AOADvQAAC7wA4IW9AAAnvADgFL0AgFo9AACSuwAAj7sAwFG9AACKPAAwrT0AgCQ8AMAbPQAA2bwAwCA9AECQPACAFTwAIFA9AID1vAAAfD0AAE67AID0PAAAmrsAAHe9AADqvAAgRj0A0PU9AKAnvQBgLj0AoLO9AKA0vQCAeTwAQJi9AEDpPAAgC70AIE29AEC4vACA7jwAAJM8AMDqPAAA5LoA8Iy9AICYPABQw70AAPo7AIAQvQAAMb0AQLs8AKBYPQBAzjwAYF49AGCJvQBQ170AAIg7AMC3vAAgDL0AoBY9AMDHvAAA4rwAAAq7ACAkvQCgr70AcIe9ACCfvQAAs7sAMAI+AAAZPABATD0AgKQ8AABoPAAAXDsAwGA9AABZvACQnD0AAKA6AIATPABAML0AALy8ACAHvQAALT0AQC09AED/PACQAT4AAPi8AADDuwAA2bwAAPu7AIDzPAAAZz0AAGQ7AEAXvQCAwr0AACK7AIDXvACgor0AgLa8AADMOgBArTwA4FU9AIABPQDgTT0A4E09AMCjPQAATLsAwPS8AMAqvQAgtb0AwAY9AAC2PAAAcjsAcJA9AMCNPQBALb0AwO88AMB7vQAAdDwAoEW9AMAWPQAA/DoAgKm8ACByPQAAn7wAwMY8AFCyvQCAa7wAIFG9AIC1vABQkr0AABg7AABrPQAAnrwAgFW8AAAvPAAA8DwAgEW8AADbvAAAtDsA0I69AICXvAAABDwAgAA9AGAOPQBgWr0AAO87AMBHvQBAFb0AgEm8AED+PABArrwAAAs9AGBOvQAAlDoAAK27AECBPAAAzzwAQIc8AKASPQCAeTwAAMi9AEAPvQBgUr0AgA89AAAlPADAL70AwD+9AAAwPAAAgjsAoEQ9AIAxvABANj0A4F+9AMCAPABAFL0AANQ7AMCsvACAx7wAwIC8AEDWvAAAGLsAAOg8ACBTPQBga70AAKA8AIBtPAAAEb0AcLe9AGAQPQBgNz0AUJk9AAB4vACAirwAQBA9AKCRvQDgtL0AAOw7AECiPQCAWLwAgPW8AAAxPQAANjsAwN48AIAYPAAASjwAQIQ8AACCOwCAGbwAoIw9AOAFvQAAt7wAANW7AICNPACAeLwAgGU9AKCBvQAQ4D0=","chunkHash":"cc482b6647509995093e4cdbac4b092817b19702f0ed80da4d8f44ef8fe279c4"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        #...\n            print(f\"Error in __getitem__ for idx={idx}: {e}\")\n            import traceback\n            traceback.print_exc()\n            raise\n#...\n```","range":{"startLineNumber":216,"startColumn":0,"endLineNumber":219,"endColumn":17},"embedding":"AAAzvABgA70AgBA9AEDbvACgAj0AIBS9AACMugBAHD0AACS9AAAsvQCAQDwAAAO8AACOOwAAdr0AwKO8AACEPQAAmDoAwI68AEDpvQDQiD0AAIC5AACHuwAAEj0AAE29AMDePACA1zwAAMK7AMCrvAAgGj0AACw8AHCHvQDAVb0AAL87AMBVvQCAGr0AQNK8AGAVPQDAjj0AwNY8AEC4vQBQqj0AAGS9AAAsOwDAvzwAADY7AABHvACAhzwAwOW8ACBYPQAA4DwA4IG9ANCePQAgQb0AQCO9AKAgvQAAPTwAwFi9AAAHPQAALTwAQJe9AGB4PQCgY70AoJm9AABGvQDA9bwAgES9AAA+PAAA4DsAQLG8AKA8vQDABL0AAJG7AADZOwAAEL0AwMg8AMDyvABAYD0AQMI9AAAlPACAc70AAO07AGCvPQAAmL0A4Eg9AIDNPAAgab0AoLu9AKCQvQAAUzwA8Mm9AIA/vAAAHz0AwKg8AAAkuwDAtzwAAOY7AMDtvADA8bwAACk9AIAaPQAAwTsAALE8AEDFvABAlLwAQME8AHCpvQCA6bwA4IO9AAD6uwAgcT0AAOO8AEBovQAAkLkAwPI8AKAnPQAA4LwAgLe9AED9vABAKL0AQKK8AIBQvQDAjzwAAJe7AMBYvQBArrwAgGy8ACAHPQCAIb0AgH29AGATvQAgaT0AAHy7AACQOwAAlL0AAJU7AABvvACAO70AACS7AGAfvQBgaD0A4Iu9AABgPQAA7zwAAFY7AKAMvQBgmj0AgCG8ACCBPQCwtD0AoK49AECtvAAAxrsAQIQ8AMDpvADADL0AwOe8AABOOwBA7DwAgDE8AACYvQAAkDoAgEY8AOBDPQCAdzwAAMC7AICNPADgf70AwMe8ABCXvQAgbL0AADW8AIADPAAAwLkAoDa9AICUPADAnjwA4Bm9AMCxPADgeL0AgG28AMDjvADAc70AQIM8AOABPQAAg7wA8Ca+ACADPQBAiTwAwP68AAA4OwCAeDwAYGA9AICpvAAAz7wAAJI7AECtvAAA/jwAgGo8AACYOwCAHT0AgJy8ANDbPQDAyrwAgHk8AAAqOwAA9rwAIJe9AGBUPQBgCL0AIAC9AEDvPAAAcjsAAMS7AMC+PADgCz0AIAi9AKANvQAgTj0AQBM9AADVPAAAnTsAAOC7AIB4PAAAPjsAALE8AADWvAAA7jsAgKK9AECCvQAAQLkAgB08ACAqvQCAnzwAABs8AMBhPQAwl70AAOs7AKCYvQDAKT0AAG68AABIvQDAzjwAwFy9AABxvAAA9jsAgEw8AMCwvADAb70AoH89AEDYPABgVT0AAHc8AED6vADw9L0AQJe8AIDePABA+rwAwJW8AKDjvQBA1rwAYCy9AIBwPACA67wAANw7AIC7PADQlL0AgGY8AACIuwCQhb0AAAe8AIBEPAAAGrsAwPc8AEAkvQAAcrwAgNI8AMD2PAAAcTwAAJE8AMDivADgGr0AABU9AMCEPACgED0AgLg8AMAPvQAw2r0AAEY7ANCKvQAAurwAQO48AMAPvgAAjTsAgDK9AADQOQAAbjsAABa7AABVvQAAP7wAEMW9AECxPADgFL0AsIe9AACJOwAA0LwAAAW8AOAyPQCgOD0AgBY9AACGOwCAZ70AwMK8AIAWPAAACjwAAM47AIAmvQCgKz0AYBu9AMBWPQAAPDsAQMy8AMDTvABghb0AMIo9AHC1vQDgCz0AaBS+AACSPADA1zwAICO9AABNvQAgb70AwKq8AADwugAAQD0AwP68AEBTvQAQoj0AAM67AIDdPADgoL0AoBG9AIBZvAAAvDoAkJ89AIAFPQCACDwAwJU9AIAyvQAwjr0AAKO8AABePAAADr0A0IQ9ADC3vQDgVb0AIAO9AHCpvQAAy7wAAAa7AIAcvQAAxDwAENY9AMCvvACATrwAAFw7AECFvAAAnTwAcKQ9AAAJvACAAz0AAA+9ADCqvQCAFzwAIGi9AIAUvAAgjT0AwIs8AAAFvQDQpj0AoEy9AKASPQAA8DkAgIu9AGBrPQDgQT0AALk7AAAwOgCA4r0A4AG9AGAqPQAQib0AoBe9AIByvACAeDwAgGk9AABWOwBAsD0AAMM9AFgBPgCgGr0AwO28ACAQvQAgBr0AcI49AAAFPQAA1bsAYG49AKA4PQCgBL0A4A89AAAVPAAArjsAwOe8AEClvABAGL0AUIO9AGAAPQCAKL0AwKQ9AAAdPACgCD0AYCi9AADAuQCAmLwAgIM9ACAWPQDQi70AAMA6AACVuwDAszwAYAa9AIAePABgQD0AAM68AGBSPQAAUDsAwLg8AEATPQBgJL0AAGo8AADRvACAhzwAAIQ6AEBcvQAAOrsAoA09ACAFPQDAJb0AIG49AGBvPQCApzwAgHe8AIBHPACgjT0AQEO9AAD6uwBAJb0AADU9AABbPABA6zwAgHk8AMCnPAAAYD0AALa8AACUvAAAlzwAAGe8AAC6uwBgiL0A4CE9AADePABA8DwAgGG8AACjOwAAaTwAIA49AIBEPABASb0AACE8AAAeOwAAX7wAYB69AABougDgGz0AeCE+AIDxvAAAPr0AAPi6AGCQvQBADr0AAPw8AAAiPQDAkrwA4E+9AOBoPQCAp7wAgCK9AADAuACAAb0AACa8AEBqvQCAAb0AcI89AADMOgAADb0AgCw9AABLvABALD0AwL08AOA3vQDw3z0=","chunkHash":"f662e996d75101305ed3860b64af97117c17302bc5a6299842805cb83c046fbc"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\nclass HighResContrastiveDataset(Dataset):\n    \"\"\"\n    Dataset for high-resolution images with contrastive learning support,\n    compatible with MorphoFeatures texture models.\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(224, 224),\n                 sample_percent=100,\n                 z_window_size=5,\n                 predict=False,\n                 debug=False):\n        #...\n    def __len__(self):\n        #...\n    def _load_volume_slices(self, file_paths):\n        #...\n    def __getitem__(self, idx):\n        #...\n```","range":{"startLineNumber":19,"startColumn":0,"endLineNumber":184,"endColumn":31},"embedding":"AMBpPQAAw7sAAKE8AIA+vQAAhbsAwBe9AAAGPQDgOD0A4Fi9AMCkPADgAb0AwHa9AEAIPQAgVb0AAJI7AICRPQAARTwAoGA9ACBgvQBgDj0AANU7AGA9vQAATLsAsJK9AKAyPQCAcjwAAEA7ACA7PQAgkD0AwJ68AKAgvQDA8rwAsI29AADJvADgML0AgFO8AADUPADABj4AQAO9AIDgvACAPj0AAJK9AICGvACAHz0AAPa8AMDAvABARD0AAGC5AADtPABwoD0AEKK9AGCvPQAA2LoAsJe9AADPOwDAyDwAAFS8AAAuvACgWb0AQCW9AGBmPQBgW70AgIC8AJCxvQAAvrwAgAq8ACAkvQCABbwAYF29AACmuwCAoTwAAIS8AACkOgBgIr0AACa7AID1vADAuTwA4M89AMAQvQBggL0AgLW8AOB6PQAAMr0AgMM8AIDlvAAA+LwAYE29AADRvAAAX7wAoJq9AIDkPABgRT0AgPa8AOAGvQCAY7wAoAq9AKA4vQCgir0AIGQ9APCCPQAA3DoAgDg8AKAgvQAAqTsAgA49AJD3vQAArrsAkKq9AIBjPADAgT0AwKK8ANCEvQBAHT0AgHS8AABmPQAQqb0AIE29AMCrvAAgG70AAMe8AOCMvQAAWDwAAKe7AEDgvABAPz0AgNi8AMAuPQCACrwAwDW9AABCOwAABD0AQIu8AIAyPAAQp70AoBK9AMBqvQAge70AQKM8AKAavQBABT0AQOu8AADDOwAAcD0AwBE9ACBZvQAAODwAQOa8ALCnPQDgFb0AUJs9AMCdvQCA8rwAAJk9AAAmvACgjr0AUIC9AADKvACgTD0AgKy8AAB6vQDAfT0AAGa8AMAKPQAAyzwAgL48ACBAPQDwxb0AgFE9ADCYvQCgpr0AAP88AOBNPQDAljwAAGW9AIBYPADAkLwAoDS9AAD4OwAAibwAAHq8AMCKPAAA2rwAACS8AIBuPABANr0AsNW9ACAJvQCgLT0AABM8AIASPAAAoTsAgFY8AEDAvACAJzwAgL28AABSuwBgUz0AgGQ9AIBIvAAAhbwAwF+9ANCtPQBgCL0AQPS8AAAuPADA5rwAYJi9AKAtPQBAVb0AALQ6AIBjPADAcT0AIBI9AACRuwAALDwAIBi9AGBhvQAAcjsAgO88AIDcPAAASLoAwN+8AGANPQAADD0AAMA4AMDFvAAA+rwAYIe9ACAZvQAAA70AgCC8AOCDvQAABr0AABQ8AACQuwAA0L0AAAC5AGBKvQCgaz0AANC6AIAZvQCAmDwAwGS9AECjvABAvzwAwCI9AOCTvQDAQ70AAHY8AMD6PACAsD0AAPg7AAACvABQ4b0AALi7AECpPACgar0AAK27AEgBvgAAmbsAwIW8AIAOPQDgOb0AAG47AIBkPQBAg7wAwC69AAB6OwBAYr0AICk9AIBIPAAAMDwAgCg9AMDGvABAhL0A4DU9AACePACA6jwAgN48AAAPPQBApbwAAF+8AAAQPAAwvz0AAPE7AACIOwBgA70AwL28AHCWvQAAG70AwNs8AJDcvQBAxrwAMJa9AADjuwCArjwAAKm7AADyOwBApjwAcJ69AAC1PAAAHrwAIBy9AAADvQAAKLoAoBM9AEAAPQAgAb0AoBo9AADiuwAAJL0AkIO9AAAUOwCAM7wAAFS8AABQOwBAizwAoEO9AIAzPQAACj0AYES9AACsvAAAj7wAYDw9AOAVvQAAwLwAgNG9AABAOQAApLoAIFa9AAAguQBwhr0AwOA8AMDuvAAAPbwAwAu9AMCqvADA8DwAwPq8AABJPQAYB74AABS9AED/vAAAbTwAIFY9AEC7PQCANDwAEMs9AMCfvACAyLwA4AK9AMC0vAAAqjsAEIw9AOBzvQBgCb0AAMG8AIBJvQAA7jsAgKO8AMD0vADgdz0A8Jw9AACpOwDAR70AQOY8AAAVvQAAfj0AoJU9AIAkvQBAyTwAgMy8AMCMvQAApTwAIEm9AACiuwDwpj0AAGk8AIASvQCA/zwAAPQ7AID3PABAkjwAIBq9AMALPQAApLoAANW7AABwvAAwpb0AAAg7AKA4PQDAh7wAAGy7AGAlPQCAyjwA4J89AAAOPADA3jwAsJA9APDwPQBwpb0AAIa9AKBGvQAAmTsAAJI9AABVPQCAAjwAAHM9ACANPQAAoTsAoCs9AOATvQAANrsA4EK9AECdvAAAerwAANW9AEAgPQCAFTwA0LE9AIDjPACAVz0AgM68AOBtvQCAlDwA4F49AEAfPQCAe7wA4EC9AEBgPQAA5jsAAHy7AIBiPQAAaTwAADK9AAC6uwAAKrsAQLE8AGA+PQBgeL0AgEA9AIC1vAAAaDsAAGC7AAAAuwAAz7sAQFM9AEBZPQBALL0AwJW8AIBqvACAGz0AgC+8AAAxPADgtT0AYCm9AMCivAAAibwAwE09AMA5vQCgCD0AAMK7AID7PACgIr0AAAY8AADJOwBAnzwAsJC9AACOuwBA1r0AIKY9AAD8OwCgOD0AALY8AABgugBA9LwAwNA8AEDavABA57wAANw7AMDdPAAAAr0AAK+9AIAAPQDAjzwAMAo+AGBtvQBwyb0AYAE9AGBMvQAAQLoAQNw8AAAwuwCAP7wAQNC8AIAYvAAwlL0AIBW9AADgOwDAm7wAABC7AHCNvQCAJzwAwGk9AMDRvAAghb0AABm8AIDgvABAt7wAgA49AICVvACAkT0=","chunkHash":"7c87755847d4d462c6843e35aa40e36a41c2cc39d10916bd9deef1597aeca071"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\ndef get_highres_contrastive_loaders(root_dir,\n                               batch_size=16,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(224, 224),\n                               sample_percent=100,\n                               z_window_size=5,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    \"\"\"\n    Create train and validation DataLoaders for high-resolution contrastive learning.\n    \n    Args:\n        root_dir (str): Root directory containing the samples.\n        batch_size (int): Batch size.\n        shuffle (bool): Whether to shuffle the dataset.\n        num_workers (int): Number of worker processes.\n        transforms (callable, optional): Base transform for target images.\n        transforms_sim (callable, optional): Transform for creating augmented views.\n        sample_ids (list, optional): List of sample IDs to include.\n        class_csv_path (str, optional): Path to CSV file with class information.\n    #...\n```","range":{"startLineNumber":239,"startColumn":0,"endLineNumber":251,"endColumn":0},"embedding":"AABgPAAAALkAIFo9AABIvQCAxDwAQIy9AABuOwAAUDoAgMW9AAAIPAAAzLwAAOs8AMAHPQDg7L0AAOm7AAA4PQAAXjwAAIs7AOBsvQAARz0AgNE8AMAFvQDAAz0AYHC9AIAQPQBA57wAYBy9AEBvPQAgcz0AUIO9AKA6vQBAp7wAAAS8AAAuPAAA4rsAACy9AOANPQCg+D0AAK+7AAD6vAAQtD0AQNu9AGAQPQBQgT0AgAU8AED8vACApTwAADo7AED0PACAB7wAgDG9ALDePQDAhbwAgOe8AIAgvAAgRD0AoE29AIB6vAAABbwAYCS9AOAEPQDge70AAJe7AMDPvABA0jwA4EG9AMBHvQDALb0A4FC9AABIOgAAnzwAwMu8AAAQvAAAjr0AAKQ6AABUvAAAfrsAAKs9AADtvABgPr0AABw8AAAuPQAAQTwAAFI8AEBkvQCQjb0AoGC9AICtvQCgOz0AQHy9AJCPPQCAwzwAABq9AAASPABA2LwAgB69AEALPQDAmbwAQF09AGBTPQCAILwAACS7AADRPADA+LwA4BU9AEAIvQAANzwAYHq9AMC9vACA+TwA0IG9AAArvQDQgz0AAJO9AEAuPQAgQL0AQMu8AMAVvQDAWL0AgFG8AOC3vQDgNr0AYDA9AABkuwAAN7wAwPW8ALCYPQAA1LoAABY7AAABPADAjj0AwLU8AGAJPQBQqr0AgA28AABxvQDgKr0AgMc8AEAOvQAwlz0AYD+9ACBsPQCAVbwAACI8ACARvQAgCj0AgAI8AEDUPQBA5LwAgN48AGDUvQBgK70A4BG9AMD9vABgTL0AIAK9AEDrvACgbz0AAPE7ACC8vQBA6zwAgHA8AKAyPQDAvTwAAFw8AMAwPQAABjwAAJm7AMB0vQDAL70AsI09AACqOwAArzsAwIe8AACGuwAgVD0A0Ma9AIADvADArLwAwNS8AAA8uwBAjbwAwOg8AIBwvABQkr0AMIu9AIAmPAAATLsA4B29AADouwCAejwAgBE9AACLvACghz0AwLW8AAC0uwBAkz0AQIc9AOAHPQAAiTwAAAM8AABIPQAAKjsAAKG8AADCOwBgSL0AgPa8AAALPACAZjwAACu8AMAxPQCA6DwAQBM9AADSPAAA0jsAAJO8AGAqvQCgKj0AANs8AMC0PAAAxzwAAJK7AMDNPADAZz0AAGa7AIDZPABgFb0AgFK9AADfvAAAUrwAANE7AADXOwBAqbwAIAk9AACiPADwwb0AQBO9AMBVvQBgUD0AgBe8AEBSvQCgTT0AAIc8AABzvQBAibwAAPC6ACBcvQCAS70AQLU8AICIPACgcT0AAAy9AAAKvAAApL0AAE69AABZPQCA+rwAMJK9AICfvQBgXr0AACM8AADVPAAAuDoAAEc9ACAwPQCAYjwAAGq8AGAJPQCgEr0AAHc8AMB1PQAAiDoAoBc9AAAXPABgKb0AgI48ANCbPQAAA7wAgMw8AACJvAAAGDoAgFg8AACQuQDgRz0AQB29AAA6OwDAtbwAALi8AEC3vQCAHjwAAKS6AIDUvQCAAr0A8Km9AADAuwBAOj0AAKc7AEDAPAAAyDwA4Im9AABgPABAljwAgAm8ANCnPQAA2zsAQDu9AMD8vAAAAb0AAMC7AADwOQCgTr0AIDI9AABAOgBAnrwAANO7AEDfvACARDwAQPq8AEDyPAAAKrsAgCe9AABAOgCgIL0AQB89AEDYvABgXz0AQGS9AKBJvQAgSL0AAGm8AMCUPAAgv70AAAC6AAALvADA17wAgJ68AOBvvQAAwDgAgIU8AAAMPQDQm70AAAC7AICxvAAAFrwAoEc9AEDBPQBA3DwAwF89AACAuQCAozwAAOO8AAA2uwAAa7wAwJw9AMDgvABgJ70AYIW9AIDAvAAAhDwAwPq8AABnvAAgiT0AIEU9AABwuwCAgDwAoGY9AOAAvQCAED0AYIk9AHCSvQBQvT0AgAO9AKBdvQCAZLwA8Ma9AACCvABQ/j0AQOk8AADeOwBggT0AQNM8AABFvACA6bwAIGi9AACCvACACz0AQPA8AACdvACgYL0AwOO8AIDYPADgbr0AwOm8AMDXPADAND0AYLU9AABkPACgUT0AYGk9AMC7PQBgTr0AAO67ANClvQAAjLsAQBw9AECOvAAAAD0AADU8AADxPAAApbwAgH09AMDrvAAAuzwAoCi9AEDmvAAgSb0AoKi9AABjPAAQi70A+A8+AIB3vACAZTwAYBq9AMAAvQCAyjwAADo9AIC0PQAATLwAACi8AGAZvQCALb0AAOs7AOCBPQAAALoAAAG9AICQvAAgk70AwNo8ADCjPQCgQb0AgCY9AAAOPQCAYjwAANw8ABC7vQBAAz0AgLS8AOBgPQBAJ70AAJG7AOA4PQBAnTwAgKK8AIA1PQDAAj0AoI69AKAovQAAM7wAgNk9ACAhvQCAFD0AgLA8AEC2vABA7LwAYHY9ACAGPQAAzbsAYFe9ACBYPQAgQL0AcJQ9AAAqvAAA77wAAIo8AABuuwCgn70AAIi7AAC6uwAgd70AgKI8AGATvQDAp7wAQK29AAAgOgCgMT0AwPE9AEB4vQAAl7wAIB49AFC0vQBgaL0AwFI9AICOPAAAH7wAACu9AAC9OwAADr0AAFw8AAD8OgAALDwAAGY8AACmvQCAhrwAgEw9AABtvABICr4A4H29AACWvACAODwAQLU8AABmuwDAyD0=","chunkHash":"22961b860043bdb5376aca5c1616b3054434deaeaf8f0e99599d869d912f1abf"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\ndef get_highres_contrastive_loaders(root_dir,\n                               batch_size=16,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(224, 224),\n                               sample_percent=100,\n                               z_window_size=5,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n        filter_by_class (int or list, optional): Class ID(s) to include.\n        ignore_unclassified (bool): Whether to ignore unclassified samples.\n        target_size (tuple): Target image size (height, width).\n        sample_percent (int): Percentage of samples to load per class (1-100).\n        z_window_size (int): Number of z-slices to use per sample.\n        validation_split (float): Fraction of data to use for validation.\n        seed (int): Random seed for reproducibility.\n    #...\n```","range":{"startLineNumber":251,"startColumn":0,"endLineNumber":258,"endColumn":0},"embedding":"AECOPAAgDr0AAEo9AADAvABA1jwAwJ29AAAlPAAAjbsAILW9AIAjvACAQrwAAPw8AGBQPQCAmL0AgF48AGAhPQCAZzwAAEY7ABCtvQCATj0AgCs9AIBovAAA7jwA0Im9AAA2OwAAQLwAAPK8AACtPADQpj0A4HK9AGAyvQDgA70AACS8AAAIPADgLL0AABq9AACmuwCAuz0AAC88AMA2vQAgmj0AALi9AADoOwCA+TwAwME8AACIOwBgAj0AABO9AED8PADAojwAIC+9AJC9PQAAzLwAACA8AABeOwAggj0AQBK9AACMvAAAhrsAQNO8ABCTPQAAYr0AACc8AACQOwAAu7sAgOG8AIAXvQCACL0AwAm9AACsOgAAhjsAQPu8AADEvABAlb0AYAA9AABJPACAo7wAUIw9AIDxvAAAHr0AAAAAAOBiPQBA2TwA4AI9AGA5vQDwq70A0Ii9AICmvQAAEjwAYGO9AAAPPQCA2DwAICi9AIChPABgBr0AgOq8AEBUPQDADb0AQC89ACBcPQCA9TwAAC28AACqOwCgBL0AAC47AMBSvQAAjLsAMLm9AADWvADAYj0AQAe9AMCLvQCA5zwAwMy8AKBuPQAA7LwAgIy8AIChvADgsL0AAOC6APDOvQBgH70AgD48AACUugDAl7wAgIy8ADCYPQCASbwAAFU8AIC7PACgMT0AAPQ6AADHPACQyr0AAA68ABDAvQDAtrwA4D89AMDhvADQij0AMJS9AEDgPABA3bwAADa7AKAZvQDAiTwAwLO8AFCxPQAAJjwAwDA9ALCmvQDgZb0AQAu9AOASvQDAlr0AYEG9AABPvACwgD0AgA+8AECBvQAAsTwAAPc7AAAIPQBA4zwAAFA8AEBfPQCARzwAQPy8AGDBvQCAHr0AcIc9AACfuwDA8TwAgB+9AACEPAAgaj0AQMO9AAAuuwDAQ70AQDq9AAAPPAAAnrwAwAA9AIDfvAAAlb0AgLO9AAAyuwAAtjwAACe9AABwOwBgYT0AYIc9AIABvQDA/TwAAD67AAAQvQBglT0AgGA9AED9PAAAAz0AwNS8ALCaPQCgFj0AgAg8AECUvABgtL0AADS8AIBTvAAAiDoAAC68AMDYPADgCT0AYCE9AAAKPACAGTwA4By9AJCBvQBwnT0AACA9AIDPPADgAD0AAG88AAC6PACATj0AAG67AMD4PAAA+TsAYHG9AEAgvQAAp7wAwK48AIB5vACAa7wAoBs9AADBPADwgL0AYBO9AMCFvQAAED0AwCO9AMBFvQAAZj0AgHk8ACAYvQAAULoAgDY8ABCKvQAA3r0AAPw6AIBwPABgOD0AQOy8AECtvADQx70AQCa9AACtPACgDr0AAAq9AOCWvQCgO70AAPW7AKALPQDAkrwAAD47AID5PAAAhbsAACi6AIDyPADAOL0AAIs7AKBjPQAAuDwAYDg9AACcvADAe70AANM7AOChPQCAyDwAABI8AAAYvACAwrwAwIc8AIAXPAAgIj0AAKe8AACWuwBAmrwAANk7AFCJvQAAoLoAACO8AMCQvQCAtLwAwMu9AACYuwAApTwAAKm8AACiPADAqjwAAEC9AMD+PAAAcLwAgBu8AIBZPQAAUTwAgLW8AABWvACAHbwAAFI7AADrOwCgOr0AQK48AIBlPACACLwAgIw8AACHvADAxzwAwMa8AEAsPQCAlrwAQDO9AAAXvQDgBb0AsKg9AKAnvQAgNj0AIJy9AGAlvQAA5LsAAOu8AACAOQBwor0AAJU7AACBuwCAk7wAANK8AKAvvQAAgDwAAKA6AEByPQDgvr0AQJc8AID1vAAA5LoAoIY9ADCGPQCgND0AgEc9AAA+PAAAarsAgJe8AADNuwDACb0AMJQ9AACvuwCgOr0AwPC8AOBMvQAAVbwAgF+8AECdvACAaj0AoKo9AAAZPAAAYDwAEJc9ACAIvQDgRD0AIEU9AABAvQCgxj0AgD+8AIAcvQAgEL0AoLO9AED7vABw2D0AoHc9AAATPAAwnT0AALI8AEC4PAAAHbwAgG29AADgOgDA5TwAQNI8AIBKvADA+70AAD47AADmOwBgRr0AALM7AABjvACAtjwAIGA9AEDAPAAAPj0AIE89AKCMPQBAf70AAA68ADCdvQCgJL0AAN08AACJuwCAPbwAANw6AMDiPAAgMb0A4Go9AID1vADApTwAwEq9AIBGvAAgS70AcJu9AAAnPADgWL0AMBc+AECHPAAgAT0AYHi9AIBGPAAA2rsAQIo9AEChPQDAA70AAHK8AECFvQDgEL0AQIs8AAAiPQDAljwAAFS8AMDevAAgab0AYDs9AMC4PQDgfL0AAEQ7AEABPQAAnjsAgAW8AFCyvQDAJD0AAHK8AEAOPQBAAL0AQPS8AMD7PAAAtLwAAIi8AKAzPQDgED0AcI69AKAgvQDgE70AMOA9AAAWvQAAGT0AACI9AAApvACAoLwAQE89AABlPQAA/bsAgGm9AABlPQAAWLsAIHs9AICFPAAAMrwAAGE8AIBGvACwr70AgBM8AAALPACgWr0AIAG9AEDZvADgOL0AQLa9AAAQOwDAAz0AqBg+AICavABAgLwAALw8ALCvvQAAZ70AICY9AMDJPABAhLwA4Cu9AIBDvABA6bwAAJU7AIAyvAAAwzsAABg8AJCovQCAn7wAQGw9AMCbPADICr4AwFW9AADJvABApDwAwM88AIDSvADwxz0=","chunkHash":"587d6b2e92c1548131476dc070e553fc5532613df286034ac1c7650ba436b573"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\ndef get_highres_contrastive_loaders(root_dir,\n                               batch_size=16,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(224, 224),\n                               sample_percent=100,\n                               z_window_size=5,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n        pin_memory (bool): Whether to pin memory for faster GPU transfer.\n        debug (bool): Whether to print debug information.\n        \n    Returns:\n        dict: {'train': train_loader, 'val': val_loader}\n    \"\"\"\n    # Create the full dataset\n    full_dataset = HighResContrastiveDataset(\n        root_dir=root_dir,\n        transforms=transforms,\n        transforms_sim=transforms_sim,\n        sample_ids=sample_ids,\n        class_csv_path=class_csv_path,\n        filter_by_class=filter_by_class,\n        ignore_unclassified=ignore_unclassified,\n        #...\n```","range":{"startLineNumber":258,"startColumn":0,"endLineNumber":273,"endColumn":0},"embedding":"AECCPADgNL0AoAE9AIAKvQCgCj0AgHK9AABMuwCAhTwAgLK9AABxvABA/LwAYEs9ACB1PQCw6r0AgCA8AACZPAAAbLsAAAi7AKCPvQDAGD0AYBM9AAB5vABgLT0AIIe9AABIPACAAjwAQAy9AACwOwBwgD0AADa8AAAyvQCA7LwAAFO8AABCvACAD70AAJc7AKBOPQAQrj0AgIg8AACeuwAAwj0A4KO9AAAIuwCgRD0AAK87AOAXvQCAvjwAANC8ACAIPQDgET0AICu9AMDlPQBgTL0AADi7AABCOwBgMj0AwLu8AMCJvAAANb0AgB+9AIBTPQDgO70AwAy9AAAAvQAAOjsAAFG9AKA9vQAAAzwAwEO9AIA9vAAAt7sA4ES9AABkuwAgrL0AAHY7AACougAAdTwAAJU9AECGvAAAjL0AAKy6AFCUPQDA0jwAwIk8AMAivQCw5r0AoKS9ANCzvQCAuDwA8Ji9AAB/PQAAYLoAACm8AABuPABgHr0AwHK9AIDwPABA2LwA4As9AACoPQCgDT0AwPC8AICxvAAAw7wAAK07AOA+vQAAgrwAsKK9AMCtvACAnD0AYFW9AGCdvQCAFT0AQOu8AMDYPACAIb0AoCC9AABauwDAYb0AwPe8ABCDvQAgLL0AQIM8AMCLvAAAszsAAG08AHCUPQBAn7wAQI28AACVuwCAaj0AgBW8AIB2vABAs70AALA6AGA4vQCghL0AAEk8AEAvvQAAgTwAoIK9AACqOwDAgjwAgGy8AGBDvQAQgz0AAAy8ALCuPQAAjbsA4Gk9AMC+vQAAw7sAQL88AADcvAAAIL0AwDK9AACZvAAAkj0AQK08AMC5vQAAlTwAgJ48AAAvPQAA+jsAAFQ9AMBCPQDAr7wAABi9AACKvQDgJ70AQFk9AMBKPQCARLwAYC69AED0PAAA2jwAgOq9AGAaPQCAIb0AQP28AAAUvABADb0AoD49AOAbvQBwir0A4JK9AMCFPACAErwAoCS9AADvuwAgDj0AADo9AGAevQBgKj0AAAi7ACAQvQBgij0AoIQ9AID1PAAA8TsAAIy6AGDDPQCAEDwAAKw6AMCNvACAUb0AQCO9AAAdvAAA8DkAAPy6AECHPACANj0AQPU8AIB7PABgOD0AAOu8AIB+vQDQoj0A4Bc9AEBSPQDApzwAwOM8AIDSPADAbD0AAKk8AADkPADA2rwAQGW9AOAovQAAX7wAgIY8AMDMvAAAXrwAwJA8AECCPAAAsb0AADs8AKCOvQAAVj0AwOK8AADdvADA4TwAACy7AMD6vAAA0jsAANS7ABCBvQBwnr0AAMI7AIDPPAAQiT0AQDS9AEDHvADgZL0AIDS9AAAYOgBgNb0AwHK9AHCJvQAQg70AAL47AOAQPQCgFb0AAEC5AADJPAAApDsAAJw6AAD/PAAwhr0AQOI8AEA9PQAAtDsAgAc9AABUuwBAFr0AQOQ8AED5PAAAZjwAgH88AAChvAAAnLoAABU9AACauwCgXD0AgCa8AABevABAzrwAAAg7ACAfvQAAlTsAgF88ACCQvQDABb0AgJy9AIABvACAKjwAANq8AIBBPABAzjwAcKy9AECUPABA17wAICS9AAD9PAAAOrwAgLG8AECEvABAsrwAAIM8AADGuwBgE70AgDU8AIAiPAAArDsAAIM7AMCJPADAozwAgCi9AEAUPQCAobwAIDG9AID/vACQh70AoKQ9AEBqvQDAND0A4MG9AIDxvAAgO70AoDW9AECOPABQk70AgGm8AADMvABgGb0AYFC9AKCAvQDA+rwAABs8AMD1PACAj70AAFw7ACASvQAARTwAUJI9AODbPQBQhj0AkKc9AIAivAAgDL0AAF+8AADQuQBASr0AIJ89AIA/vACgcr0AgKi8AOBNvQAAmDoAgKa8AIAMvABAmT0AIM49AIAqvABAFb0AwIo9AEA3vQCgqD0AoH89AMAwvQDQxD0AgAq9AABxvQAAB7wAMJi9AAC8vADQ6z0AAPk8AAAgOQBgej0AgAM8AAAnPACAA7wAgA+9AACUOwAA5zwAIDE9AAD2uwAAq70AAMS8AID0PABQrb0AAME7AEChPACAVzwAQFk9AABQOgBgcj0AQFI9ALCiPQAAVr0AAKi7AMBsvQDAJb0AQJY9AEBdPQCAwDwAID09AOBoPQAANL0AoG09AIBHPACAGjwAgIO9AECXPADgLb0AQKu9AMDvPACQhb0AYP89AAA8OwBAwTwA4DG9AAC4vAAAaTwA0I09AKB8PQAAF70AIBu9AKCJvQBAJb0AgIg8AIAJPQBAkjwAAJc7ACAdPQBA7bwAgLo8AOAtPQBAWb0AAEY9AADmOwAASjsAAJc8AADCvQCAaDwAQIk8ACAGPQBAo7wAgBK8AIBZPQDAyzwAAM07AEDlPAAgRD0AQAG9AKAovQAAgDwAACw9AAA2vADABT0AQKc8AIAxvQDAnLwAQHM9AIABPABA/zwAYEK9AADHOwDgBr0AgN88AACHOwCAA7wAgJ88AABIvAAQjr0AgDK8AIApPADQiL0AwNC8AMDWvADgf70AwKO9AAAqPABA6TwAUMY9AAAhvADAzbwAAEA7AMDCvQDAprwA4DU9AIBgPACAhrwA4B29AABnPADgkL0AQNi8AIDWvAAA/DsAwNg8AOCavQBARr0AIIM9AIBYvABQDL4AQMa8AAALvQAAezwAID49AID0vABwyj0=","chunkHash":"24ba78c4988671d5bf3ee5a916eaa9c245abfe60f18bdeafd8021f0350709039"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\ndef get_highres_contrastive_loaders(root_dir,\n                               batch_size=16,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(224, 224),\n                               sample_percent=100,\n                               z_window_size=5,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n        target_size=target_size,\n        sample_percent=sample_percent,\n        z_window_size=z_window_size,\n        predict=False,\n        debug=debug\n    )\n    \n    # Split into train and validation\n    num_samples = len(full_dataset)\n    indices = list(range(num_samples))\n    split = int(np.floor(validation_split * num_samples))\n    \n    # Set seed for reproducibility\n    np.random.seed(seed)\n    if shuffle:\n        np.random.shuffle(indices)\n    \n    train_indices, val_indices = indices[split:], indices[:split]\n    \n    # Create samplers\n    #...\n```","range":{"startLineNumber":273,"startColumn":0,"endLineNumber":293,"endColumn":0},"embedding":"AEDGPABAAL0AQHk9AIAkvQAAtTwAgHS9AIALPAAAJDwAYKe9AMCOvAAAeDoAwNA8AEAxPQBAsL0AgAw8AEAgPQAAfDwAALc7AOC5vQAgcT0AQBs9AAAhvADgJD0A4Ii9AICmPACAj7wAQI+8AAB+PAAgiD0AIHa9AIBIvQDAAr0AAHC8AAAeuwAAjrwAANy8AICLPADwrj0AAGo7AMD6vACwiT0AUMW9AAASOwCgez0AQAA9AACjuwDACj0AQDi9AAAjPQAArTwAADy9AKDVPQBgGL0AwIo8AAAJvADgVT0AQES9AABKvAAA8bsAYBK9AGBRPQDgdL0AAPY7AAAEOwAA7rsAgDW9AKAYvQDAubwAgOm8AIAEvAAA2TsA4BO9AIAQPADwlL0AgHw8AMCLPAAAGrwAMIo9AIDBvAAAY70AAOM7ACBKPQCApDwAQMs8AKBGvQCQr70AIF69ALCCvQAAODwAsI+9AIAFPQBA+DwAAGa9AMC5PACA67wAgEi9AMAIPQAgF70AIFk9ACBjPQBAlDwAAJC5AAANPAAAULsAALi7AIAyvQAAuLsAYJ69AMDHvACwgD0AoBm9ACCovQCA7DwA4Cy9AABvPQCABr0AgLy8AID8vACgbr0AAD67AFC8vQAAW70AALM7AED/vACAsbwAADO8AHCyPQBAzLwAgDI8AABPPADAbj0AANm7AACgOwBAuL0AgDa8AJC5vQAgB70AAB89ACAhvQAQoz0AkIa9AEC3PABAm7wAAG67AGALvQDArTwAQKK8AGCmPQAARLsA4F49ALC3vQCAOL0AAPq7AAAFvQBgY70AAFK9AACyuwCgXD0AACw7AGB+vQAA8DsAgI88AID0PAAA5jwAAKQ7AOB2PQAAujsA4Cq9ANCtvQAA/7wAsIg9AAD9OwAA4jwAoD+9AIC6PABAHT0A4MK9AECkvADAKL0AwEG9AIA2vAAAvrwAgCo9AKAIvQBglL0A0Ou9AADgOwAARDwAYCy9AEClPABAYT0AgF49AECAvACALz0AAJy6AMAovQDAtT0AIJI9AMAAPQBApDwAALu7ABC3PQDAwTwAABA7AABUvACAkr0AwEG9AMCAvAAANrwAgFy8AMAbPQCA9zwAwCE9AMDWPADA4DwAwAa9AHCMvQBwkD0AwAE9AOAaPQBAOz0AAPy6AADmPACgbz0AAJs8AID7PABAvTwAAFe9ACA6vQAAr7wAgH08AMCjvAAAj7wAwN08AIDmPADgar0AgFW8AABWvQCAET0AgEG8AMDcvACgmz0AAMA5AKA7vQAAcLsAAAw7AKB5vQBQqb0AAKg8AAAGPQCAhz0AgOu8AAAOvADgor0AQEu9AID0PADgHr0AIFC9ALCVvQBgJb0AgJO8AADBPADA2rwAwLU8AEC2PAAADrsAAOc7AEAGPQAAGb0AgCQ8AKBMPQBAzTwAYCU9AADEugDAX70AgAq8AMCFPQAAJDwAgBo8AEDNvACADrwAAOQ7AAAgOQCgRz0AACC7AACHvADAp7wAgGA8AKBqvQAA+LoAAPK7AICjvQBAEL0AsJK9AIA3PACAczwAgCK8AACGPACAmTwAMKu9AAAEPQBA5rwAAJW8AOAePQAAwDgAIFW9AICCvAAAoDkAANI7AACAuwAgSb0A4A89AIBuPAAAJrsA4BU9AIAXvABA4DwAwBO9AEBuPQAAzLwAYIu9AIALvQAAA70AcKI9ABCBvQCgED0AIJm9AEA6vQAAZrsAAJW8AADsOgAQlL0AAGQ7AAC1uwDABr0AwAi9AKBZvQAA4jsAAC08AEBUPQDQtr0AACw8AICovAAAvrwAIHM9AHCUPQAgUD0AwHw9AAAsuwAANLsAQPa8AIBDvACAwbwAgIs9AIBRvABgTr0AAD68AAAcvQDAj7wAAMq8AACLvADAiT0AsME9AABKPAAAFjwAsJY9AMDpvADAIj0AwFg9AEAUvQAwxj0AgLK8AOBUvQDA2rwAkLq9ACAOvQCAzz0AADQ9AAB2uwBghz0AQAY9AKAbPQAAkLwAgEi9AABcOwDgKT0AQPg8AIA/vACwwb0AQJW8AABKPABQgr0AAOw6AAC0uwCAjTwAIDA9AICbPADgZT0AAFM9AGCvPQCgIr0AAOA6APCTvQDgEL0AYEk9AMAyPQAAUjsAADU8AOBAPQBQjL0AMIE9AEAKvQCAvzwAsI69AICAPAAgIL0AcJq9AECKPABAD70AUBE+AACNuwAAvzwAQGW9AAD5uwAAFLwAMLM9AECEPQAA6LwA4Am9ADCHvQAA+rwAACC5AAAyPQDA6zwA4By9AACTOwCgX70AQBM9AJCwPQDwgr0AAKQ7AIAZPACAzbwAAL67AACzvQCAAD0AACm8AOALPQAAQ7wAALy8AIBEPQCAbLwAAMO7AMDEPABgFj0AIHy9AEAgvQBAnLwAQNE9AIBIvADgMj0AQP88AIDPvAAAHbwAwF09AAAHPQCAZzwAYFu9AOBcPQAA1rsAAH09AABcuwDAwrwAAA48AIATvADAaL0AALm7AAA+PACAOb0AQAu9AKAbvQDgTb0AkLm9AACmOwDAMj0AkBg+AIAfvAAApDoAABA7ABCjvQCgGr0A4GQ9AECCPAAAjbwAgBK9AAAyvACgRL0AwNk8ACABvQCA4TwAALw8ACCGvQDgFb0AAGg9AAAQOgAw+L0AoC+9AOAGvQAA+DwAYCk9AABAvQDA1T0=","chunkHash":"1196a39c27c1eacc05ba7df7f2b69a2d87ec7e0b93bb5e9f41063f926017be52"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\ndef get_highres_contrastive_loaders(root_dir,\n                               batch_size=16,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(224, 224),\n                               sample_percent=100,\n                               z_window_size=5,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n    from torch.utils.data.sampler import SubsetRandomSampler\n    train_sampler = SubsetRandomSampler(train_indices)\n    val_sampler = SubsetRandomSampler(val_indices)\n    \n    # Create dataloaders\n    train_loader = DataLoader(\n        full_dataset,\n        batch_size=batch_size,\n        sampler=train_sampler,\n        num_workers=num_workers,\n        collate_fn=collate_contrastive,\n        pin_memory=pin_memory\n    )\n    \n    val_loader = DataLoader(\n        full_dataset,\n        batch_size=batch_size,\n        sampler=val_sampler,\n        num_workers=num_workers,\n        #...\n```","range":{"startLineNumber":293,"startColumn":0,"endLineNumber":312,"endColumn":0},"embedding":"AMDoPACAg70A4CM9AEDgvABAIT0AgBm9AIAdPACAtLwAUIa9ACAPvQAAp7sAQEs9AKB9PQBgq70AgDQ8AMDJPAAAzTsAAEo7AJCMvQCwgT0AwBY9AAA6PACA3zwAgFa9AAAQuwCAj7wAQLS8AADMPADggT0AIIy9AAAZvQCgEb0AAP+7AAATPABAt7wAAAi6AEClPADgoz0AAIU7AEAUvQBgiD0AkM+9AAAouwBwgz0AgBw9AIAovACA3jwAoEe9AECfPADAhjwAwOi8AADPPQCA2bwAAAW8AMDbPAAgMT0AICm9AABnvACAJTwAIFq9AMBDPQCgab0AAJi7AAAUvAAAlLwAAEC9AGBjvQAALLwAQKa8AIAaPAAAwjsAIBa9AABKOwAQhL0AgG08AMCCPAAAdrsAAJM9AAAbvABgEL0AwJQ8ABCdPQDgQT0AgO88ACBNvQCQsr0A4IO9AOBovQDABD0AQIi9AEBJPQAAqjwAgCa9AAASPACAprwAQC69AKA5PQBAIL0AIEk9AKBxPQCA6jwAgB+8AAAxPACABL0AAE48AGA4vQAARDwAULa9AKARvQDgZz0AIB+9ACBsvQDAHD0AwNe8ABCAPQAALLwAgIK8AICTvACgbr0AQIC8AACkvQAAb70AANc7AADauwDAkbwAgAO8ABCtPQDgCL0AAOc7AIBYPADAjz0AAM+7AAACOwCwvb0AgCg8AICtvQDgJ70AAIQ7AGAhvQCwkj0AoG69AMDFPACAHrwAADs8AEDvvACA4DwAgDC8AGCIPQAAEbwA4EE9ABDkvQDgX70AgDG8AGArvQBAhL0AIJW9AMC6vABgaD0AAFi7AOBcvQBAtzwAAI67AADMPACA/TwAgCS8ACBePQAA+jsAIDG9ABCtvQDgQL0AkIo9AIAcPABAjTwA4D29AMCMPACA4jwA4O29AIDbvACAVb0AIEy9AAC0OgAASrsAgH49AMCavAAAUr0AgMi9AADWOwAAA7wAYA29AEDiPABAwjwAYGI9AABKvADgRz0AAHW8AOAKvQAQxD0AcKg9ACA2PQAAczwAAAy7ALC8PQCADT0AAOQ6AAALvABgnb0AwP+8AACAPAAAkTsAgKK8AAANPQAA4zwAgL48AAABPQAA1jsAYA29AOBRvQAgpD0AQOc8AEABPQBgWT0AAKs7AAC5PAAgKD0AgCI8AKAtPQAAGTwAwHq9AKBEvQAAVLwAgEs8AACrvACAL7wAQKU8AMC0PACQib0AQNi8ACCJvQAA8TwAAMm8ACBKvQBAhj0AwNg8AFCFvQDArbwAAJi6ACAvvQAwhb0AAF67AACZPABwjD0AoA+9AECYvADwnL0AAIe9AACoPACABb0AQNu8AFCSvQCgQ70AgEK8AIA6PQDA1bwAAKE7AICBPAAAZ7wAgEu8AOANPQBA3rwAwI88AEBWPQAAajwAQC49AIAoPACAcL0AAMC8AECjPQAAZjsAAKg8AMDkvAAARrwAQNQ8AADgOgBgZT0AgJm8AEDNvAAAorwAADS7AKBRvQCANTwAQK28AGDXvQAAnbwA8Li9AABQOgBgHj0AAN07AICwPAAAHjsAcJW9AMDrPADA/bwAAJG8AGAaPQAA1DwA4Ci9AMDVvAAAEDwAgBI8AAAHPACgD70AAHw8AADsOgCAX7wAwNM8AKAZvQAA7TwAwOW8AKBzPQDAybwA4Aa9AMCwvADA57wAQJ89AKB+vQCAIz0AAKa9AMAWvQAAWDsAgAq8AAD8uwAAl70AgCc8AAAmuwBA8bwAQOS8AID+vAAAHTwAQIA8AIBTPQCQtL0AALG7AABrvADAuLwAIHE9AFCYPQDAvDwAQD89AAAAuwAAEbwAgHq8AADAuABAurwAkI89AEABvQBA/LwAALi8AIBXvQCAULwAADa7AABbvADAlz0A4NA9AAAAOQCAcDwAkIM9AIDzvACAVD0AgHQ9AABvvQBAyT0AQMS8AEDRvAAAAbwA8Ku9AMCAvACQsz0AACU9AAD6uwDgcz0AAHo8AAC0PAAA3zsAoDW9AABzPAAAKT0AoAk9AMCWvACg3r0AwKW8AAB+PACgcL0AANA7AAB5vAAAMDwA4Gg9AADwOwBgbj0AwEI9ADCqPQDAlrwAAKG7AGCUvQAAB70AIDI9AIAqPQAA17sAgC48AOBiPQDgN70AAJU9AAC7vABA8zwAQF69AABcOwAAdb0AwJy9AMDxPACABb0ACBo+AAAAOAAAejwAwDi9AMCIvACAJTwAUMM9AOB5PQDAhrwA4DC9AECWvQCgYr0AAGi6AED+PADAAT0AwOu8AMClPACgXL0AYDw9AHCHPQAgr70AAPI7AMCMPADAEL0AAAa7AJCvvQBA3TwAgPC8AKA6PQAAPrwAABy8AAD0PAAAH7wAABQ8ACBLPQCA1jwA4IS9AIBHvQDA8bwAwMY9AEDYvABgRj0AAAE9AAC3vACA5bwAgG89AEAqPQDA5jwAUIe9AABhPQCANDwAAFw9AACAuwAAzbwAQKs8AECovABAj70AgF08AACCPABgOr0AICG9ACAbvQCASr0AkJe9AECJvAAART0AKBg+AIB2vAAA6LoAgFU8AAB9vQAAN70AQD49AECnPABAjbwAAGK8AABvvACgKb0AQP08AACIuwAApzwAgCI8APCcvQAgIL0A0IU9AADtPADw/r0AIHu9AEDivABAjzwAQAQ9AIDNvACAxD0=","chunkHash":"0720758a74e9cef3c80deaa2c02cdad970870c40874c8ff57971b00db27a5941"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\ndef get_highres_contrastive_loaders(root_dir,\n                               batch_size=16,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(224, 224),\n                               sample_percent=100,\n                               z_window_size=5,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n        collate_fn=collate_contrastive,\n        pin_memory=pin_memory\n    )\n    \n    return {\n        'train': train_loader,\n        'val': val_loader\n    }\n#...\n```","range":{"startLineNumber":312,"startColumn":0,"endLineNumber":319,"endColumn":5},"embedding":"AIBVPABA5bwAIE49AKASvQBAJz0AoGe9AIClPAAAPLwAgJW9AKAFvQCAvrwA4EA9AEBpPQBQpb0AAGS7AABbPAAARDwAAPM7AOBuvQCAZj0AwMI8AECyvABgXD0AYEi9AAAiPAAAursAoDm9AIC8PACATD0AYEy9AIBEvQDgF70AwJE8AAAaPACAtLwAgIq8AMCRPACA0T0AAEI8AMAnvQDQhz0AYN69AAABPADgQD0AwAE9AIAwvABgHD0AAKy8AECoPAAAzjsAgPW8ABCzPQDA4bwAgEM8AMDBPABgFD0AQGG9AMDwvAAAmDoAYEi9AHCCPQCwiL0AAOC6AAAnvACAgbwAYEi9AOBavQBgAr0AQOG8AABAvACAWDwAYBe9AAAUuwBgb70AAKo7AABnPAAAuLsA4Hg9AABxvABAQL0AAKa7AECEPQAgET0AANQ8AGBKvQAA0L0A4Iq9AGBwvQDAtjwAAF29AIAvPQDAzDwAIAS9AIATPACAOrwA4AC9AEBLPQAgKr0AAMI8AEByPQCA+TwAgJa8AIAmPADAirwAQKA8AKAwvQDAzDwAYLO9AEASvQAgkz0AoGm9ANCBvQAAmTwAgEO8AOBsPQAAqbwAgMq8AIBhvADQmb0AACi7ACC2vQAAS70AQIY8AABMvABA07wAALy7ABCwPQAA5bwAAJA5AAAtvABgWT0AAGO8AABwPAAQnL0AgFe8AKCovQDgG70AoAI9AEA5vQAQjj0AQG69AAByPACASLwAAKA7AKAzvQDgGz0AwMW8ACCJPQAAJrsAAEA9AECkvQBgU70AgCu8AMDCvADQqL0A4GS9AADyuwCwkT0AwJE8AMB0vQAAdDwAgFS8AEDVPAAAQT0AAJ88AIAkPQAAKDoAYDi9AKCvvQBANb0A4JE9AADMOwAAVLsAwCO9AIBIPAAgMj0AQL29AADAvABgVL0AAOO8AADgugDAjrwAQDA9AOAYvQBAjr0AEKa9AIAgPAAA3LoAIFS9AIARPQAAyTwAQGE9AACwOQBAFz0AAJI7AKAtvQDQmT0AQG09AMAHPQBAnjwAwLu8AEDIPQBAujwAQIE8AAByvAAgkb0AAI68AACQOwAAmLoAgI28AMDWPAAgXT0AIDQ9AMCpPAAABLsAAOG8AKBIvQDwoD0A4AA9AAC9PADgWj0AwKQ8AIAfPQDAbz0AAD47AAAUPQAAZjwA8LW9AMAgvQCArLwAwB89AECgvAAAz7sAAFI8ACAZPQBArL0AAOa8AGBuvQAQhT0AwAm9AGAnvQAwiD0AANw8AAApvQBAkLwAANw7AKA/vQCgpb0AgHA8ACACPQDgaT0AgNq8AMDRvABgqb0AUIe9AOADPQAADL0AACi9ABCTvQAANb0AgCW8AAASPQBAvLwAACg6AAAJPAAAO7wAAMC6AIBpPABATb0AwIs8AOBOPQDAqDwAQHU9AIBcPACgWb0AAFo7ANCFPQCAaTwAQN08AEDIvABgFb0AgOI8AIA1vABALj0AwJy8AIA2vACA2bwAgFE8AKBevQAAhDoAgFW8AODKvQCAkrwAEKa9AIAZvAAAAj0AAEq8AIAHPADAyjwAcJO9AIDGPADAsLwAAC67AMA3PQAAADsAAHe9AKAevQAANjsAAMc7AADcugDANb0AwJw8AAAYOwAAQrwAAFY8AADAvAAAEjwAgLW8ACATPQCAsbwAQN28AIAlvQCA3LwAkKc9AOB7vQCAij0AgKa9AIBYvQAAqLsAAA68AICGvADwxL0AAP67AIACvADA6LwAgMa8AEAVvQAAnDwAgLI8AMAePQBQxL0AACC6AIDxvAAABjsAAJI9AIB6PQBgWz0AgHw9AAAWOwAAtTsAAIK7AABiuwAAobwAoKo9AAAZvAAACb0AQMK8AOALvQCAebwAAE48AAAiOwBgdT0AoKM9AACgOQAAarsAgI49AADIvADgLz0AAHc9AIBhvQAwwj0AgBq8AGArvQCAmLwAQJe9AMDPvADg1T0AgEU9AAAdPAAQhT0AYCM9AIAOPAAAuDoAAFi9AAAoOwAAGz0AgA49AIBCvACw8L0AAHS7AABNPAAgbr0AgEs8AIDYvACAqjwAgIA9AAC/PADgmD0A4HE9AECuPQAAIr0AgBC8AACPvQDgJL0AoDM9AMDKPADAg7wAgEE8AGA4PQCAU70AwLI9AADvOwDA7zwAoEe9AAAUuwCAXL0AEIa9AACaPAAAKL0A+AU+AAD3OwBA9TwAYB29AABAuwCAlDwA0KE9AACRPQCATr0AAFS8ALCuvQAgTb0AAJO7AIAKPQAAjzwAgES8AACaOwCgRL0AUIo9ABChPQBgk70AALk7AEDLPAAAmLoAAOG7APC6vQAgYT0AAHy7AEAnPQCAmbwAAJC5AEDbPACALjwAAIA6AIBlPQCA+zwAoDe9AIDgvACAFL0AwPM9AEC+vAAgZj0AQCQ9AIBZvAAAu7wAQGc9AOBAPQDAmDwAoFa9ACBDPQCAn7wAwIY9AAAgOgAAfrwAQOQ8AIAHvABgUb0AAEM8AIAVPADAnb0AgDm9AABtvADgYr0AoFa9AAChvABAqDwAcCo+AEDavABAiLwAgJY8APCUvQAAwbsAgDk9AEDYPABAnrwAABe9AADeOwAAQb0AAOG7AABqvAAAmLsAAI87AJCLvQAA8bwAgEo9AICSPADABL4AYES9AIDivACAnTwAgIg8AIAUvACQpz0=","chunkHash":"a47ae09bc2456604ebad8031fcfff926fe45f0d155736f102ac9dead9c717fd3"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\nimport os\nimport glob\nimport numpy as np\nimport torch\nimport pandas as pd\nfrom torch.utils.data import Dataset, DataLoader\nfrom PIL import Image\nimport torchvision.transforms as transforms\nfrom tqdm import tqdm\nimport sys\nimport random\n\n\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\nfrom dataloader.contrastive_transforms import get_transforms_for_contrastive, collate_contrastive\n\n\nclass HighResContrastiveDataset(Dataset):\n    #...\ndef get_highres_contrastive_loaders(root_dir,\n                               batch_size=16,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(224, 224),\n                               sample_percent=100,\n                               z_window_size=5,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\nif __name__ == \"__main__\":\n    # Example usage\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":324,"endColumn":0},"embedding":"AABpPADAEb0AAGc9AOBBvQBAYD0AwFC9AAAJPQAAmDoAwDq9AEC1vAAA07sAADQ8AKAlPQDwsL0AoAU9AMBcPQBAjrwAgGw8AMBRvQBAcT0A4CQ9AACSPAAAHrsA4He9AAB4OgCABjwAgFi8AMAzPQAAQD0AoAe9ALCIvQAAhLwAYBK9AABYvADAKb0AADu8AKAEPQAAtD0AAAi6AGAHvQBAmD0A0KK9AAAKuwBA1zwAgBM8AOAXvQAAtzwAgMu8AAAoPQDA5DwAAPG8AACfPQBA17wAALA6AAAkOwDA7DwAgFi8AABQuwAAtTsAQC+9AIBuPQAwgL0AAHk8AIDpvAAAvrwAQPu8AMB1vQAAqLsAgCa9AADrvACAYDwAgFO8AIBhvACgqL0AwPE8AAAKuwBAiTwAIM49AECEPADAPL0AALK7AABLPQDAojwAQEE9AAC4vACAmb0AAMm9AFCBvQAA+bsAkIK9AEC9PADgEz0AAG68AAC7PAAACLsAgM68AACBOwBgFr0A4GY9ACCuPQAAYjwAAP47AKAFvQDA3jwAoAM9ABCBvQBAg7wAMN29AED9vACQqT0AAGq8AEC0vAAAMDwAAPY7AOAHPQDA8rwAgAE8AABovAAAP7wAALA6AECWvQAA47wAAPQ7AABEOwAAmTsAgD28AOBJPQDAibwAACy8AECbvADAHT0AAP+8AGAfPQCA8b0AAIW7AAANvQDgc70AAPI7AMA8vQBgmD0AoES9AEC+PAAAvDsAAJW7AIBcvQAAg7sAwJS8AFCVPQAA4LsAYHw9AHCTvQBgWr0AAP67AADxvAAAKL0AoGq9AACGvACQoj0AADo7AGCEvQBAGD0AAEW8AABnPAAgDj0AQJA8AOBgPQBAAL0AgK68AACTvQDAT70AwBU9AIAhPACACLwAIAq9AICgPACAyzwAIOC9AMDgPADAH70AQO+8AECNvAAAc7wAAJM7ACAgvQCQrL0AUOm9AIBsvAAgGz0AoC69AEAqPQAAAT0AQGQ9AEATvQDgez0AgI68AAALvACQnj0AwEs9AADpuwBAizwAAFs8APD3PQAA+zsAALq8AIBSvADwm70AYDW9AADHvAAAOLsAYAq9AOAQPQAAFjwAgLg8AICxPAAA5DwAYIq9AACfvQCwiz0AQII9AAC2PAAAKT0AAHY8AAAIPADA4DwAAAc8AAAwuwAA6bwA0Jm9AAAIvQCgBr0AAIu7AMA4vQAAH70AgBs8AKBJPQBQn70AgBi8AEB/vQDAwjwAgKi8AIACvQBQkz0AwJC8AIBnvQCAirwAgAA8ACBOvQCger0AAJM8AADGPAAwnT0AQBu9AIAavQBgu70AYFq9AABIugCgiL0AYG69AACsvQCAFjwA4A69AEBFPQCAAr0AAE67AKAkPQAA9jsAgOe8AEA7PQDgRb0AACQ7AGByPQBAjTwAwE49AIApPACAkL0AwD09AIApPQAA77sAwMo8AABxvACAtrwAQPs8AABeOwAgQD0AwAq9AADdOwDgT70AABU8ABDEvQAAs7wAwOO8AJAAvgBAmbwAIGi9AEC7PABAnTwAwIi8AIALPACAYDwAQK69AICGPAAA/bwAQIK8AAC+PAAANrwAAES8AACRPACAbrwAQKe8AABKOwCAE70AwM28AIBvPQAAN7wAAI87AIBGPAAAXDsA8IW9AKBTPQCARbwAwBa9AIDLvADgZr0AoJs9AMCyvQBA8DwAkKK9AAAtvAAAYjsAoFO9AMCkvABAeb0AQPM8AOAhPQDAtrwAgMm8AAB3vQDAqzwAADy8ACAvPQDgyb0AAOi8AABwvAAAzbwAUJ49ADCoPQCAPD0AoJw9AAC5PAAAZrwAAKm8AEDTPADgXb0AcPQ9AABzvQAArbwAAB28AACCvQBAprwAAIU7AEAKvQBwhD0AkKA9AADEuwCA9rwA4HA9AAD9vABAcz0AwDM9AIA9vQBQqj0AACO9AMCfvAAAILkAAKm9AIAfvAAwjD0AgMY8AEAIvQAAPT0AgJM8AAB8PAAArTwAgBi9AADAOQAAIz0AQAo9AIB0vABgrL0AQJW8AGB9PQCgeL0AICS9AAC4OwCATLwAYEg9AACWvACgNT0AMJE9AEDiPQCAHbwAAOa8AIBNvQBARr0AsJU9AGAZPQBA8zwA4A49AEDrPADAK70AAFY9AIBevAAAoLoAgCm9AIAgvAAAw7wAsKC9AAC3PACgM70AUPw9AACbOwAAJz0AIFi9AAANvQBAqbwAALQ9AMCAPQBgar0AgBW8AMCqvACAOLwAQAe9AEC5PAAA+zwAwMC8AIAzPADAM70AcIM9ANCiPQAAOL0AwMk8AACJPABAqrwAwJQ8ALDBvQAAkLkAQMg8AMCYPACADL0AADy8AABVPQAADzwAAJa7AMAIPQDAFT0AIGC9AIDWvADAzbwA8KY9AIDWvACAKD0AAHw8AAC0uwAAcLsAEIg9ACAAPQAAdDsAAIS9AKAZPQCA47wA4IM9AGAQPQAA4LkAQCw9AEDgvABgbr0AAKA8AADIOgDAYL0AgHS8AMBGPQBgUb0AIFS9AAC3OwCgfD0AMP49AMApvQDArrwAoAU9ACCrvQCAHrwAgG49AGBGPQAAebwAICG9AABmOwDAp70AAK47AMAdvQAAHrwAgLc8AEAHvQCAHL0AIHA9AIAnPQBwiL0AQJe8AGBGvQCAFTwAwBQ9AAAiuwCgzz0=","chunkHash":"7bf24272cf701b6c3d3a07c18feb024ffc4fe73194dae4a1ae00ac9929baf63c"},{"text":"File: `dataloader/temp/highres_contrastive_dataloader.py`\n```python\n#...\n    loaders = get_highres_contrastive_loaders(\n        root_dir=\"data/nuclei_sample_1a_v1\",\n        batch_size=8,\n        class_csv_path=\"chromatin_classes_and_samples.csv\",\n        z_window_size=3,\n        debug=True\n    )\n    \n    print(f\"Train dataset size: {len(loaders['train'].dataset)}\")\n    print(f\"Val dataset size: {len(loaders['val'].dataset)}\")\n    \n    # Test one batch\n    for inputs, targets in loaders['train']:\n        print(f\"Inputs shape: {inputs.shape}\")\n        print(f\"Targets shape: {targets.shape if isinstance(targets, torch.Tensor) else 'list of tensors'}\")\n        break \n```","range":{"startLineNumber":324,"startColumn":0,"endLineNumber":340,"endColumn":0},"embedding":"AAAYOwDA/LwAYLs9AOBVvQCA+DwAgNC8AACjuwAAobsA4CK9AMAvvQAAr7sAwGQ9AIAIPACgvb0AgN28AKB7PQCA6bwAMJA9ADCMvQBAXD0AADA9AADcuwCwkj0AwIm9AICFPACAB7wAQPW8AMBEPQBgHD0AoE+9AMBuvQCgGb0AAPW8AIAWPACA9LwAABY8AEBNPQCwwT0AoAA9AMAuvQBgWT0AsIe9AECSPAAARz0AAJg7AAD7vABAl7wAgKy8AACkugDgdj0AICG9AADEPQBAHr0AgH28AAATPABQ1T0AAA67AAA8PAAAMrwAoAG9AICkPQAAQ70AQCQ9AOAXvQAAxrwAEKa9AIA8vQAAPr0AwJE8AECqvACANzwAACy8AIB0vABwh70AQKg8AEC4vACAND0AwD89AAAGuwAA4bwAAIQ8AGDNPQBgDz0AwMC8AIBKPACAmb0AwHm9AIASvQCgBz0A0Iy9ACA1PQCAtjwAwBa9AACSPAAAljsAoAW9AADwOwCwlr0AwCI9AABDPQAATrsAIC09AIC5vABgS70AAGo7AOACvQAAzjwAwKW9AOARvQAAFT0AYAm9AACevAAguT0AAGY7AKA4PQDAQb0A4F69AOAFvQDAy7wAgPu8AAD2uwCASLwAAMC6AIDdvACAZDwAQIK8AECEPQCANrwAANM7AABBPADgiT0AgBW9AMD8PAAwlr0AAJO7AOB5vQAQhb0AAHw8AIBIvQAQ0z0AAOy6AADgOQCASzwAAAQ8AGBXvQAAGTwAgEm8ABCUPQCANzwAgLU9AMAmvQAA/LwAQCu9AGB0vQAAUb0AwE69AACGOwDA/zwAAAA7AHChvQAA4DwAQL68AIAQPQBgAz0AADS8AEAKPQBAqb0AAPa8APC7vQAgTb0AQPQ8AACyPACAGTwAoBy9AADwOQDgXT0AAJy9AEC2PABgYL0AoDy9AAANvACA4LwAQEE9AEDbvABgr70AsJ69AECXvAAAwDkAYDq9AACoOgDAnjwAYCI9AACAOQAAED0AAM+8AECKvQAwsT0AwEo9AAA6OwAAULoAAOy7AGC8PQAAOjsAgAu8AIASvABQg70AAH28AICnPAAAJrwAAFU8AMArPQAA3jwAAKO8AABIPACAfLwAwJa8AEAdvQAgzD0AYBQ9AID6PACACT0AgLA8AAAdPQBAqTwAgN68AMDwPAAA+rsAMLe9AACtuwAgMr0A4EU9AEAfvQAAlLsAAAY9AEDOPABgwr0AQB09AMBsvQBAND0AgKO8AMDuvAAAIj0AABg6AOAVvQBAorwAAG47AOAcvQDAyL0AANc8AIDEPACgrD0AwMC8AECGvACw7b0AgE69AMDJPABA07wAwO68AMCKvQBA/rwA4Bu9AECdPABA8bwAQAA9AAAiPQAAJ7wAYAE9AECQPACAlL0AgMC8AOAVPQCA4bwAwGY9AICyvABgSL0AIAo9AMD+PAAAMLoAoBw9AACGvACAdLwAwLw8AECivADgXD0AgHS8AADyvACAJL0AACw8AIBIvQAArDoAQIq8AICfvQAAALoAUIm9AADpuwCATjwAgDs8AAA4PACAdzwA4Ie9AIApvQAAULsAAHy8AADAuQCAdLwAAGG8AIBpPAAgOz0AgDs8AIA3PAAAurwA4AM9AIBSPAAAgLgAYDq9AMALvQCAPDwAgO+8AIAwPQDA+TwA4Em9AEDfvABAhTwAULM9AMCUvQBAJD0AQI29AIDyvAAAkTsAwCS9AACduwCQir0AwJA8AECovADAgbwAAEK7ANCEvQBgAz0AAG67AICTPQBA770AAPu8ACATvQCAqTwA0JM9AGBWPQCAzTwAAJg9ACAPPQCAebwAgBc8AAD2OwAACbwAwKw9AAB0vAAAAL0AoEe9AIB4vQBAbj0AAFC7AMARvQAAND0A4KE9AAD6uwAAVLwAICM9ACAPvQCQlz0A4Ho9ALCdvQAA7z0AQDe9AIDVvABAzzwAAI69AECEvACgtz0AgBM9AADougBgIz0AgEC8AIBzPAAgAj0AwPW8AADOPADA0TwAgJA8AAByvAAAhb0AgCe9AMAKPQDgIb0AwPa8AICavAAAITwAYFI9AIAnPACgwz0AYIU9ANDTPQCAxLwAgBq9AOCcvQAgUb0AIEQ9AGAdPQAAEzwAAL07AEAJPQDAMb0AANI8AACVPAAAnzwAwDW9AADIuwDgH70AMMS9AGDBPQBA1rwAcMo9AMCfvABAlzwAYA69AIDjvABgLr0A4KI9AKBQPQAAwDsAQPW8AGArvQCA0LwAwP88AMANvQDgVD0AgFW8AACkuwCASjwAAKM9AMC8PQAA8bwAgEw9AADzPAAA9bsAAKc8AECRvQAgCz0AgGO8AEDxPAAAGLoAAPi7AIAYPQAAmjwAQLm8AMD1PAAACD0AQBO9AMAlvQDA2bwA8NI9AEC0vADA3DwAAOA6ACAevQCAz7wAAKo8AEBKPQBwkD0A4Gy9AAA0PQAgMb0AoIU9AACZuwCALLwAgFw8AADguwBAy7wAAGE8AMDkPABQm70AQEi9AABkuwCAk7wA4Ka9AAD1OwDAYD0AgB8+AGAOvQDA+rwAwO08ADCPvQDAijwAQI48AIBqPACAe7wAQDu9AABwOwCQg70AAHQ7AAB8vAAAursAwAQ9AGB7vQCAyDwAwGY9AAC3uwAA6b0A4EG9AIA8vAAAKjwAAFY9AECnvABgpD0=","chunkHash":"76ed7668d0707e1a42044d2d4c1ae8faade503fb57c064f15d18cff3884195ee"}]},"file:///teamspace/studios/this_studio/configs/highres_texture_config.yaml":{"hash":"576eedaaf175afa66669cecdc3205a54ed7141d39ea115cca0777dd711302186","entries":[{"text":"File: `configs/highres_texture_config.yaml`\n```yaml\n# Configuration for training the high-resolution texture model\nproject_directory: \"experiments/highres_texture_model\"\ndevice: \"cuda\"  # Use \"cuda\" if CUDA is available\n\n# Training configuration\nmodel_name: \"UNet3D\"  # Model type from neurofire.models\nmodel_kwargs:\n  in_channels: 1\n  out_channels: 1\n  f_maps: [32, 64, 128, 256]\n  final_sigmoid: true\n\n# Loss configuration\nloss: \"BCELoss\"\nloss_kwargs: {}\n\n# Optimizer configuration\ntraining_optimizer_kwargs:\n  optimizer: \"Adam\"\n  optimizer_kwargs:\n    lr: 0.0001\n    weight_decay: 0.00001\n\n# General training settings\nnum_epochs: 50\nbackprop_every: 1\nsmoothness: 0.95\nopt_level: \"O1\"\nmixed_precision: \"False\"\n\n# Data configuration\ndata_config:\n  root_dir: \"nuclei_sample_1a_v1\"\n  class_csv_path: \"chromatin_classes_and_samples.csv\"\n  is_cytoplasm: false\n...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":35,"endColumn":0},"embedding":"AIBDPAAAmLwAsBc+AIAivQAArjsAYAG9AKAwPQAgEr0AoGu9AACkvABAUb0AAP08AICFPADgUL0AALC5AAA6PACAobwAgG08AEC4PAAASLoAACo7AEAgvQAAMDoAAJm7AGAHvQAAdzwAoEo9AOAYvQDAHD0AgC88AABEPABAA70AAEa7AJCRvQAQwr0AQNq8AMArPQBA9TwAwE29AMDCvADA4rwAoC+9AGAWvQBAuT0AAAY7AABmuwAQt70AgDU9AIC6vADgfT0AwLa8ACDePQBgDr0AwCA9AIAzvQCASrwAgF88AIArPACgzr0AQNU8AADpOwDAS70AABY9AIAqPADA/DwAAC+9AMAcvQAACDsAQIG8AMDSPAAA/rsA4GC9AIAwPAAgNL0AwKQ9AEDGvABgZb0AwH89AIDivADA67wAIG29AACnOwDAsLwAQK+9AABSvAAgSb0AgMW9AABIvQAAUDwAgLy8AEC5PACA4zwAIFq9AMAAPQBA9LwA4E29ACCEPQBAs70AoDM9AEC9PAAAe7wAgDU9AOAMvQAAQLoAgHE8AGAAvQCAdL0AAIW8AACwuQCgSz0AYAu9AEAYvQDwgz0AAHg6AIAXvACggr0A8KW9AAD4PACAI70AgMS8ACAXvQCAHrwAQKA8AGBvvQAAyjsAID09AFCHPQAASzwAUK69AAA0vADARj0AoG09AACxOwDANL0A4D69AEAjvQAgor0AAAM9AIAqvQAAwTwAAFK8AMASPQAAMLoAgCi9AED/vACgdT0AAHm8AGAuPQBAvbwAcKg9AACevQDgEj0AgG68AFCCvQDA8jwA4H+9AADnuwBQqj0AgIi8ANDOvQAAO7wAoFM9AEDrPABALz0AAFY7AECqPAAgr70AoHY9AICCvQCAcrwAAJA8AIAjPQDAqLwAAGg7AOBqPQCAHz0AQK28AACcugAgcr0AwNy8AAAvvABAgbwAkJG9AACLPACQtr0A4JK9AECBPAAAhDsAgLS8AABmPAAAOL0AwOS8AIBUPQAAcLsAAN48AAA0PACAdj0AgHq8AEDLvAAApbsAgJO8APCUPQAgYz0AAPe7AEBAvQAgZ70AAKG9AACtOwCAhLwAwAk9AICdvABANj0AgOA8AACmvADwhL0A4CC9AAAuvACAALwA8IY9AABgOwDgZb0AgOe8AABnPACAWD0AAPA8AACZPACAE7wAoH69AIC+PABA2zwAgBs8AMCCvACACLwAAKQ8AACoOgBAB70AQJY8AKCfvQAgRj0AgJI8AABFvQCAhbwAwM28AIB7PACQkD0AALA6AECwvQBA+r0AAJs7ACAdPQAgDr0A4NM9AAD+OwDwlb0AQLM8AEDJvABgXb0AwDa9AEBlvQAgQ70A0JQ9AACROwCAObwAAO28AAC2uwBAvDwAAGC9AAD7OwDgY70AgC29AAChuwAA47wAoBQ9AMDmvABgHL0A0Ic9AABMOwDApzwAoCc9AKBxPQAAsLwAoGS9AECUPACgQj0AALe7AEAPPQAA8LkAAFc8AMCivADgkL0A4Ao9AMCdvQCgTL0AYDS9AIDTPADgxT0AoLu9AEB1PQCAODwAAPK7AIAUvABABT0AIGS9AADwOQBAuDwAQHU9AJCaPQCAXDwAsKs9AAD2OwAAs7wAgH88AAAzPQAAeLsAACM8AAAoOwDA1TwAQDG9AHChPQAAHj0AANQ6AKCgvQCAHLwAALE7AADSvAAATT0AAJa8AMDiPADA07wAwCm9AACBPAAA9LsAgAw9AADHOwBApzwAABy8AOBkvQBAOz0AAJA6AACPPAAgd70AgGe9AJC2vQCAGz0AgEM8AKBzPQAAarsAUIw9AOCWPQAA2bwAQMa8AADdvABAY70AAPs7AACYvADAHb0AAKS6AIBdPADAr7wAwCA9AIAlvQBA6jwASAA+AEC1PAAA7jwAgEQ8AKBQvQDgbT0A4GE9AGAuvQAAiLoAYB69AOADvQDAdD0AoAi+AABGOwBAcT0AsIA9AEDmPACAJbwAAJE9AICkPAAA9TsAoHW9AMATvQBgPL0AAFo8AIAbvABAub0AIGy9AKBrPQAAGLoAIDi9AACUOgDAaT0AAN49AABqPACAajwAwNA8AABmPACAyrwAgP+8AACzvAAAfjsAwDs9AKB/PQDwtj0AIBk9AACKvADAzLwAAHA8AGCHvQCAVTwAwIC9AADMugAQhb0AQL48AMBBPQAgFb0AAMY8AMCUvACAED0AgP68AABNvADAp7wAgAQ9AACnOwBArrwA4DI9AIDkvABAmjwAAC49AAAFPABAtjwAIFQ9AAAJvQCABb0AAJG8AAArvAAAxrsAIHI9AABDPAAAi7sAALY7AAC6vACAATwAQDC9AAAzPAAAdrwAAIA7AIBGvABAyLwA4L69AIAIPACwyj0AgFS8ADDZPQAgGj0AkKw9AEBaPQBAfz0AAKU7AOBJPQCAGzwAgJc8AJCIPQCgDD0AwNI8AAD/uwBQj70AANA6AMDuvADgHT0AAOy7APCmPQCgsL0AAFC7AAC7uwCAbj0AgJQ8AICLPACAGj0AID+9AGBfPQDwgT0AsC8+AEBRvQAgCr0AAEI7ABC0PQAAcLwAAHY7AADcOwDAgLwAQIu8AMBCvQCAMrwAgB29ACA9vQDAsrwAIGE9AACxuwAA7LsAwEU9AAD8OgCACr0AYCW9AAAKPAAAF70AYCo9AAATPABgZz0=","chunkHash":"d27abec07fd9cc250cb8b341e9a466063f852cebd873c6d578596cb81ac1f399"},{"text":"File: `configs/highres_texture_config.yaml`\n```yaml\n...\n  box_size: [256, 256, 256]\n  split: 0.2\n  seed: 42\n\n# Loader configurations\nloader_config:\n  batch_size: 2\n  shuffle: true\n  num_workers: 0\n  pin_memory: true\n\nval_loader_config:\n  batch_size: 2\n  shuffle: false\n  num_workers: 0\n  pin_memory: true \n```","range":{"startLineNumber":35,"startColumn":0,"endLineNumber":51,"endColumn":0},"embedding":"AMDsPABAFL0A8Cc+AIC8vAAArLsAoF29ADCBPQCgU70AoCG9AIBdvQAAsrwAIIs9AAC3uwAAoLsAAJA5AOAsPQCAJLwAgAQ8AACWuwAAQDsAAIs7AMDovACAVrwAAKo7AIDiPACADrwAwHk9AACIuwBgIz0A4Fu9AMBYvQCgSL0AgBo9AGCyvQBga70AAFS9AMADPQCAAT0AgOG8AABgOQDwkb0AACS9AEBRvQDgHj0AgGw9AAAGuwAAY70AwL48AIBLvQDgQz0AgAO8ABCCPQBAorwAYII9AAB3vACAhLwAgMU8AAAqOwCA7bwAAJy7AFCVPQAAm7wAAOG7AECrPAAANjsAgCQ8AEDQvABAL70AAAW8AEAiPQAAwDkA0Iu9AAB/vAAgxL0AIKU9AKAjvQCgPb0AgLQ9AMDqvACASLwAMKC9AIB0PQAAI7wAYHi9AEAEvQBAKb0AsJy9AMBQvQDgQz0AQIS8AIDAPADgQj0AAKq7AIBxPACAOL0AUKO9AMDBPQCQuL0AQKK8AKAmPQCAjTwAgNs8AKCSvQCAMrwAAGI9AGAZvQBASr0AAFg6AMCHvACAHT0AQLO9AAAIuwBAnzwAYAs9AABoOwDwjr0AYDe9AMAtPQDgd70AAEo8AIDyvAAgeb0AAFI8APCIvQCgJr0AAJI8AEDuPADgEr0AYIu9AACVPACAEj0A0JA9AIBVPQAAmLsAALC7AICVvQAghL0AACg6AEClPADAlDwA0Lq9AAB6vABAPz0AgF29AACwugBAcj0A4AW9AIB7PACAcTwAgJ89ACBlvQBAgjwAAIe8AIA4vQAABzwAoNS9AACfOwCAkzwAgAq9AEDbvAAAhbwAAK07AMBCPQBA9jwAAIY7AIAuvADgDb0AwFg9ACCwvQCAOLwAoKA9AACQugAARb0AgDu9ACAWPQDAPT0AAIA4AIAoPAAwn70AACU8AAAYPACAODwAYBi9AKA2vQCACL0AgEe9AAATvABAoLwAQIK8AACTvABAwLwA4BQ9AMD7PADAnrwAYJM9AIBRvQDALT0AwI68AMD0vAAAAb0AgBi8ALC6PQDAST0AwMk8AJDDvQCgir0AANy8AIBdPAAAgjwAwPQ8AAAkvAAAdjwAwLs8AKAKvQBgW70AQKm8AMDNPADAPT0AgGQ8AIA1PACALb0AgIM8AAAYOgBAJT0AABg8AMCSvAAA47wAUKC9AIBePQBQhT0AAFe8AADHuwDAqbwA4B29AMD/PABAm7wAoGq9AOCBvQDA5jwAAIi7ACAHvQCA87wAAB48AMCMvAAwkz0AwAm9AOCsvQDQnb0AABs9AICYPABAIr0AgPk8AEDVvACgqr0AgAk8AKA5vQCAo7wAAF67AACPuwCgA70AAII9AMDDvABgXL0AQJK8AACWuwAAeT0AACC9AIDLPACAG70AYJu9AABHPACgWr0AUJ89AEBZvQAgCj0AQLU8AADCOwAA4DsAAOO7AJD6PQCAOLwAIFW9AEDEvADA6DwAgF48AAAovAAA7rsAAMA5AMBwPQCgUb0AgAw8AOA0vQCgFL0AgPO8AAA+PABAAT4AYA2+ACA0PQCAFLwAwLK8AAA4OgAAfzwAAGg6AACPvAAAGj0AgFi8AIBuvABAwDwAQNg8AAB0PADAtLwAAK68AADluwAAobsAAMw7AAAevAAAFz0AgBc8ABCWPQDAUL0AQJI8AKBWvQAAcbwAwN+8AIAhvQBgeD0AICa9AEBrvQCAWrwAYCG9AAC0uwAAZjsAwLC8AICRPABAZb0AYFC9AIAHvAAAPD0AAFk8AADAuwCgWb0AAGe8AEBEvQAAWrsAACU9AIDgPACAoTwAQJo9AMCFPQCQmr0AAI87AACsuwAAmb0AANa7AABDvQAAOL0AQLI8AID5vAAQqb0AAAs9AGB7vQAAaD0AoJ09AIDdPABABD0AAD48ACAWvQDgED0AQLw9AAAKvQCAjzwAADs9AOBfvQCAMz0A0Ma9AOALvQCAeT0AwCk9AOA2PQAA7LsAwLc9AMDzPAAAsTwAwMi8ABCDvQDAEr0AAEi8AAB1PQBwmr0AgCu9AABtPAAARLsAQPC8AMD1PABAPD0AUMs9AMD0PAAA+jsAAFA7AICIvAAAqbsAALG8AIBwvADA0TwAAEo7AMB2PQCAOz0AAD68ALCPPQDA07wAcIw9AADmOwBAirwA8LO9AIA/vACgbb0AAKQ7AADtOwDgDL0AYMY9AGAZvQAgOz0AgAm9AMDSvABAbj0AADY9AIBdPADA5bwAgBy8AGAnvQBAR70AIEo9AEBqPQCAXD0A8N89AADWOwAA37wAwN28AEAPPQAAWr0AoC49AIBOPQCAMTwAwIW8AFCqvQAAgLkA4Ac9AACnuwAAijsAAHU8AADAOgAALLwAcKK9AADfPAAwjD0AAOE8AIDuPAAAnTsAEJI9AEAePQDAGT0AgGi8AIBzPABgFb0A4Ck9AJCXPQCANzwAAKk8AAC1uwDA87wAACU8AMCdvABgPD0AAM48AEARPQDAir0AAD69AAC2uwAAXD0AgNy8AIA0PQBAPD0A4EG9AABiOwCAeD0A4E4+AIAuvAAAzbwAAPU8AEDjPABAcL0AANU8ANCGPQCAi7wAAMo7AAB/vACAYzwAEJ69AMBmvQAAzbwAgGC8AABFvQAAoDsAAJK8AIAzPADgVr0AAJu7AAC8vABAq7wAgEA8AAA9vACAij0=","chunkHash":"3989c5012f405eb8b96dae1d4c2d42254336082df6c6bb534ff29a7733c3f020"}]},"file:///teamspace/studios/this_studio/configs/lowres_texture_config.yaml":{"hash":"95ab32eee98910027f196de465a991ac114e70cee099f4ab8981576ddb629eb5","entries":[{"text":"File: `configs/lowres_texture_config.yaml`\n```yaml\n# Configuration for training the low-resolution texture model\nproject_directory: experiments/lowres_texture_model\ndevice: \"cuda\"\n\n# Training configuration\nmodel_name: UNet3D\nmodel_kwargs:\n  in_channels: 1\n  out_channels: 1\n  f_maps: [32, 64, 128, 256]\n  final_sigmoid: true\n\n# Loss configuration\nloss: BCELoss\nloss_kwargs: {}\n\n# Optimizer configuration\ntraining_optimizer_kwargs:\n  optimizer: Adam\n  optimizer_kwargs:\n    lr: 0.0001\n    weight_decay: 0.00001\n\n# General training settings\nnum_epochs: 50\nnum_epochs_debug: 3  # Fewer epochs for debugging\nsmoothness: 0.95\nopt_level: O1\nmixed_precision: 'False'\n\n# Data configuration\ndata_config:\n  # Try using a specific sample directory as root\n  root_dir: /teamspace/studios/this_studio/nuclei_sample_1a_v1\n  class_csv_path: chromatin_classes_and_samples.csv  # CSV file with sample information\n...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":35,"endColumn":0},"embedding":"AADCPAAASDsAuCQ+AMA3vQAAILwAgEi8AOCRPQAAJL0A4HC9AADCuwAQhb0AgPs8AAC1vADA7bwAwL48AKAQPQAAQLsAgBU8AABIOgBAnjwAAMc8ABCFvQCAFLwAgCK8AAAwuwAAojsAsJM9AMBLvQCA0jwAgFo8AAClPACAA70AQJG8AACnvQAAWL0AgCW8AAA9PQAA4DsAIDq9AGAZvQCAUb0AoDa9AACIvACAaD0AQJM8AADAOgCgcL0AYFY9AICmvAAgBT0AQFC9AGCtPQAAkLsAQMo8AKAYvQAgHb0AAA08AADwOgBgnr0AgE08AMD/PACgCL0AABo9AIAjPQBA/zwAwKi8AGBDvQAA+LoAQPq8AKAYPQAAdrwA4G+9AACTuwCgMb0AQL89AAA1vADAVL0AwI89AMBIvQCAX7wAYC69AABrPAAAmrwAsJm9AADhvADge70A4LW9AKAavQAACT0AgBQ8AABbPAAgAz0AgE29AEDFPAAAbjsAQKK8AMCjPQAQs70AIGQ9AADUPAAAILwAQGQ9ACAYvQCAUbwAANi7AECxvABAn7wAAMG8AIA0vAAAaD0AQGW9AACFuwAggj0AAKw6AADJOwAglr0A4Mq9AIDDPAAgNL0A4EO9AKBsvQBA6rwAwPQ8AEBivQAAIrsA4EQ9AICsPQBA/7wAQJS9AEDFvABAUT0AYEs9AADJuwBA9bwAoHm9AIBhvQCgnb0AIB09AAADvQAA2DwAgHe8AEDtPAAAyrsAwCa9AIAWvQDwjD0AYCW9AKArPQBAwbwAgNA9AKBivQCA8jwAAJS6ACCBvQCANjwA0Ja9AAAqvABQoj0AQNu8ADDVvQAAWDoAANU8ACAuPQAgJT0AgK68AAD6OwBQjb0AIGQ9AJCqvQAAxLsAgFI9ACABPQAAZrwAAI28AGAnPQAA5DwAgBC9AADPvAAAKb0AAKm8AEDgvAAARLwAwJ29AIB/vAAQ1r0A8Jm9ACAcPQAAk7sAgM+8AAD6OwCQpr0AABu9AMAuPQDAprwAoCY9AADbOwDAcT0AAKm8AABAOQAAuDsAgEW8ABCdPQDgRD0AAJ+8AABXvQCAKL0AEK29AAA2uwDA7rwAQEo9AMCbvACgQz0AALE8AEDDvACQlb0AgOK8AIAGvAAAMLoA4Ew9AAAjPADAYL0AQMC8AADtPAAAUj0AAPS6AADTuwBAwLwA4KK9ACBKPQDAujwAAOM8AECOvABATL0AANU8AKAgPQAAIb0AAAC6AOChvQCACz0AwPo8AMB+vQCA+bwAAPW7AIDgPABQtT0AAD48AMCyvQA4G74AAH48AABwPAAAQrwAcM09AECTvAAAor0AQJg8AIA6vABAZr0AAAa9AGASvQCAkLwA0Io9AAAUuwCAubwAQCS9AABcuwDgRD0AAE+9AACZuwDARr0A4B+9AADAOwDALL0AwPE8AIC8vACAqLwAIFk9AIDTvAAA3zwAwJw8ADCyPQDgMr0AIFO9AADXOwCggT0AQOc8AIC8PAAA9DsAgAU8AABAOQCAWL0AYHI9AEBBvQDgc70A4BK9AAC/OwDwvz0AcLm9AEArPQAAKDwAALq8AAA0OwCAfDwAwA69AMCsvABA/DwAIBs9ALCUPQAAgDsAQJc9AKAGPQDAHL0AoB89AECmPAAA7DoAAJs8AIBEPACA/DwAYDu9AECXPQCABT0AgJu8ABDWvQAAlLsAABG8AACuuwCAKj0AwI68AADUugBgdL0A4IS9AMCdPABAkbwAgBA8AAC6PAAA8DkAgDy8AIA2vABgXj0AgEs8AMDgPABAL70AoC29AKCvvQCACD0AADg7ACAgPQDAgTwAgGk9ACCpPQDAlzwAAIo7AOA4vQBgX70AgAC9AIBevABAmbwAAI68AECZPAAAlLwAYBY9AABRvQBAmjwAcNk9AID8PAAgCT0AQMw8AADSvACgVD0AoIk9AEALvQAAejsAADK7AEBMvQCAcz0AAPG9AACwugBA7TwAoK89AACVOwCAKTwAoC89AADtPACAKzwAwB29AMCbvADAFL0AABK8AACVOwBAzL0AQFW9AADgPACAPjwAwBO9AADwuwAgeT0AQPE9AADMOwCAPDwAAOk7AAD4ugCARTwAQPC8AKBQvQAAyDsAAKo7AOAyPQCQpD0A4Dc9AAAXvABApLwAAB08AEB0vQAASDsA8IW9AIAyvADgVL0AAI07AAAFPQCAA70AoBQ9AICjvADAsDwAAJO8AMAFvQBAiDwAAIU9AACAOgAAbrwAAOE7AMD/vACAJDwAoAg9AMCXPAAA5jwAUIE9AMCLvQDALL0AwCK9AAD3uwDA4LwAICM9AKAYPQAAxLsAACi6AACquwAAbzwAwEu9AMDKPAAAw7wAAGO8AIBCvACASrwAkKe9AABSPADA1z0AgBa9AFDcPQCAHTwAsKo9AKBSPQCgfj0AAGw7AGBcPQDA6TwAADQ8ADCzPQAAvzwAAN87AABRvAAApL0AAMS6AAAAuQBgNz0AgA08AECGPQBge70AAAQ7AIAvvQAgIj0AAGg8AOAXPQCACj0AgCG9AECAPACgfj0AwCA+ACA2vQCANbwAgG68ACCHPQBAt7wAAHi7AIBZPABAhbwAgLq8AABsvQAAMbwAAAe9AKA9vQAA9bsAAM88AAA3vAAAHrsAAHM9AAAAvADAHr0AQE29AAAovACgL70AwPI8AADiOwAAuj0=","chunkHash":"8ecfb7c1147962668141dd5e62004e7502af2460374b6893a275a4755c8a0323"},{"text":"File: `configs/lowres_texture_config.yaml`\n```yaml\n...\n  is_cytoplasm: false\n  box_size: [104, 104, 104]\n  split: 0.2  # 20% of data for validation\n  seed: 42\n  # File format information\n  use_tiff: true         # Flag to indicate we're using TIFF files\n  input_dir: raw       # Directory containing input TIFF slices\n  target_dir: mask     # Directory containing target/mask TIFF slices\n\n# Loader configurations\nloader_config:\n  batch_size: 2 # Reduced batch size to avoid memory issues with 3D data\n  shuffle: true\n  num_workers: 0\n  pin_memory: true\n\nval_loader_config:\n  batch_size: 2  # Reduced batch size to avoid memory issues with 3D data\n  shuffle: false\n  num_workers: 0\n  pin_memory: true\n\npred_loader_config:\n  batch_size: 2\n  shuffle: false\n  num_workers: 0\n  pin_memory: false \n```","range":{"startLineNumber":35,"startColumn":0,"endLineNumber":62,"endColumn":0},"embedding":"AAAGPQAAZzwASCA+AAC9uwAA1TsAgAG9AOB3PQBgfb0AAEq9AECrvACAs7wAQBM9AACBuwAAPLsAANO7ALCBPQAAxjwAgGo8AIAuvQCAFj0AgNU8AMBevQDAhrwAwPy8AABxPAAAPLwAUKA9AMDmvACgJD0AQNi8AABmvQAAdL0AAI87ADClvQBAnb0AQPW8AEDAPABgez0AgOm8AACivABAr70AAGW9AACvvAAA/TwAQIU9AAB0vABgEL0AgEw8AKAYvQAAgDsA4CK9AKBxPQDAwLwAsJM9AEA6vQBAxLwAAJ08AIAzvACANL0AgG28AIAuPQBAJL0AgHI8AMD+PACAADwAgLQ8AMAnvQCAxrwAAKu7AGBWPQAAr7sA4JK9AADPOwDAYr0AAHQ9AICOvAAgYb0AkJk9AKAVvQAAC7wAYGi9AGBTPQAAKTwAIEW9AIBAvQCAKr0AIMy9AICovAAAdDwAACM8AADHOwCgbj0AAB69ACAHPQBArLwAwHu9AAC5PQAw1L0AwLG8AIAXPQAAeDsAgNk8AABKvQAAdLsAoFg9AIBKvABAsrwAQIu8AAAguwCgND0AgES9AACJuwBAQT0AwMw8AED7PACAfr0AILS9AOBXPQBgUL0AAC68ACAlvQAgJr0AABg7AKAjvQCgCr0AgIs8AOC4PQCgfb0AcJW9AAAfvADggj0AIFU9ACBRPQCAa7wAAAS9AAA0vQDA8LwAgB08AABPvABAFT0AABu9AIASPADghD0AgO68AACOuwCgCz0A4C29AMAoPQDA0rwAcN49AICEvABAHD0AANY7AAAjvQAA4DsAEOS9AMAtPQAA9jwA4Em9AAC6vACAtrwAABw7AOBnPQDgBD0AANm7AABPvACAAbwAIDA9AJDDvQAArLwA8JE9AIByvADgbr0AwC+9AIBnPAAgOT0AALK7AAAeOwDgh70AQAa9AMDivACAGjwAQO+8AEBOvQBger0AcKK9AMC0vAAA87sAgDq8AACDPAAgQb0AAHg8AEAkPQDAMr0AwFg9ACBRvQDAdj0AgAM8AAB8OwAAcLsAgEM8AACpPQDgJD0AAKS6AEC4vQCABr0AwAW9AICevAAA8LsAgOw8AIAYvAAAIDwAQNY8AAAtvABgL70AQAO9AGAmvQBgLz0AwPg8AIAhPABAa70AQO08AGAQPQAAIz0AADa9AABevAAAGjwAYKa9AIBWPQBApTwAwJk8AAAkvABgH70AALm7AMAZPQDgIL0AgGC9AGChvQDAVj0AgCY8AIAlvAAAgLwAgDY8AACROwDQmD0AoAW9ADDNvQAwxL0AAHQ8AIALvAAAWjsAQMk8AACgvABg3b0AAGi6AAAEvACAX70AQNm8AIDrvACAKTwAwOY8AIDfvADAp7wAQC29AAC5OwBQkz0AgI68AMDQPAAAcr0AwHy9AEC9PAAAcbwAIJk9AIDsvAAAv7sAABk9AIC3vAAA/bsAAHo7ADgWPgAgML0AwEu9ACBFvQAAdDsAAAc8AADYugAA8LwAALa7AMBzPQCAPr0AoGQ9AIB3vQAgVb0AQOi8AIAqvAAg1T0AGAq+AKARPQAgKb0AoCu9AMDAvAAAJDsAAPS6ACApvQAA7TwAAK67AECYPACAxTwAYAc9AEDJPADAX70AAL68AAAwOwAA97sAAI67AABcvACAwTwAAAy8AOCmPQDA67wAgPS8AODFvQCABTwAgHG8AAD6vADARj0AIGW9AEAyvQAA/7wA4Ee9AICZPAAAYrwAgN88AICMPACAV70AAFW9AAAEPADAez0AADG8AACMuwAAp70AQL+8ACCIvQBAAT0AAGQ8AAB+PAAACrsAUJc9ADCwPQDgAb0AAEa7AACrPACQmb0AoAa9AACzvACAr7wAgC88AADfuwCArL0A4Cg9ACBGvQDA1TwAINE9AOByPQBghT0AwOI8ACAzvQCAbj0A0Kg9AKAMvQAALj0AYFU9ACAovQDgFz0AAKW9AEA1vQAAVT0AAIE9AKA5PQAAWTwAUIs9AADhPAAA1jsAAGS7AGCWvQBAQb0AAGO8AEDRPACgrr0AABS7AMDUPAAAMjsAYKy9AECuPACAFT0A0Ms9AIALvADAEz0AwJQ8AAAZvAAAGj0AAHS7AIBkvQBA2TwAgEK9AOBwPQCwhz0AAKY8AABAPQCAF70AIFs9AEDTvAAA4TsAwHu9AAAcOwDA47wAAAY8AMDXPACgGL0AoJw9AIAmvQDgMD0AwOC8AAC7vACgPD0AIHQ9AIDGPAAALLsAAEO8ACBVvQAAEb0AwNA8AKBEPQBgZz0AoK49AAC1vAAAbLwA4Fi9AACBuwDgSb0AwOM8AOBDPQAAqLsAIEG9ACARvQAAwTwAwKw8AECMvAAAo7wAQJS8AACjvACAvjwAMK69AMDWPADgXj0AAOW7ACBEPQAgQr0AwOM9AEDLPACAKT0AAJ28AACbPACAQLwAQNw8APCuPQDAqzwAABo7AIBovADAkrwAgFc8AMDovAAgND0AAKE8ACBZPQAgWL0AgDG8AOAovQDAcT0AAL68AACWPQAAojwAgDS9AAAGuwBwmj0AKCk+AADIOgCACbwAQNk8AECxPACAb7wAAJS7AOAEPQAAprwAQJK8AGA6vQAAxrwAIES9ACAQvQAAMbwAAC88AICfvAAA6TwAAEk8AADgOQCgJ70AwIa8AMCYvACgQr0AQME8AIAjPQBgqj0=","chunkHash":"8284a7a101adb44f62d8d4cbfae9296d9b6e89d6c9a96d978e480c7cd87a54db"}]},"file:///teamspace/studios/this_studio/dataloader/temp/lowres_contrastive_dataloader.py":{"hash":"d3dfd2ce42db9267926b8a8b1785e91e80cc0ed266e470471812a3f7f9ed8cb1","entries":[{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        \"\"\"\n        Args:\n            root_dir (str): Root directory containing the samples.\n            transforms (callable, optional): Base transform for target images.\n            transforms_sim (callable, optional): Transform for creating augmented views.\n            sample_ids (list, optional): List of sample IDs to include.\n            class_csv_path (str, optional): Path to CSV file with class information.\n            filter_by_class (int or list, optional): Class ID(s) to include.\n            ignore_unclassified (bool): Whether to ignore unclassified samples.\n            target_size (tuple): Target image size (height, width).\n        #...\n```","range":{"startLineNumber":37,"startColumn":0,"endLineNumber":47,"endColumn":0},"embedding":"AAA8PAAAyLoA4HE9AOA9vQCAGTwAAE+9AADeuwAAp7sAUKm9ADCEPQAwlr0AwDO9AKAbPQBgjb0AgEk8ABCEPQCAPjwAAAA7AFCvvQBAUz0AABs9AIB0vQBgAj0AUNu9AIA2PACADjwAAJW8AMCbvACAJj0AADw7AIAHvQCAdLwAEOG9AGAKvQAAIrwAAJ88ALCRPQBgYz0AADM8ACAkvQBghz0A0IG9AIAEPAAAUrwAAOS6AEDyvABA1zwAwPa8AKBUPQDAgDwAgF29AHCVPQCASD0AANC6AEDCvACgKj0AQCK9AADgugBA3bwAAAK9AMCYPQAAN70AAB+8AADEOgAADLwAgD08AKBJvQCAA7wAII69AMDuvADAzTwAgDe8AADdOwAgQL0AQMU8AABYOgAA4LkAQPY9AMDTvACger0AQME8AOBBPQBgEb0AwDQ9AIA1vAAAHr0AwFW9AGDGvQDAyzwAwEe9AGANPQCAsLwA4CC9AMChPAAAP7wAAHQ7AIAIPQDAlLwAgAw9ALC6PQBAMz0AwIA8AOACvQCAq7wAQLe8AAAsvQAA/jsA0Nm9AAC9uwAAaz0AAJm7AMBTvQDgTj0AAGy8AKAPPQCgGb0A8IO9AAB7vACAMr0AMIO9APC2vQCgfL0AgN88AOBkPQCASTwAgGG8ALC8PQAAIbwAgKa8AADPOwCASz0AQIW8AADcuwDAM70AQB+9AKAjvQDAar0AgA89AMAWvQAgAz0AALG7ACAUPQDAgjwAgOI8AKBVvQCA5TwAQCe9AEDjPQCA2DwA4Bk9AMCCvQDAsrwAAGI8AAANvQDglL0AwMC8AACVvABQgT0AANs7AHCDvQDAVT0AQIC8AMCHPQAAVLwAwMe8AABoOgAArLsAAGC8ADDBvQCA6rwAAB49AEAyPQCA+TwAAH+9AICJvACAZjwAkJy9AACsOwCAn7wAQOC8AIBzPADAWb0AgKG8ADCQvQAgjb0A8Ma9AIAYvADgMT0AQBm9ACAAvQDA9jwAQL88AEAyvQAA2DoAAJM7AEALPQAACj0AAH89AIDDPADALj0AwJ68AECIPQAAfjsAQGW9AAA2vQAAFrwA4JK9AIAJPABA9bwAAAg8AMDhPAAAtDsAwNg8AMCAPACAKTwAAKs7AIB1vQCAiTwAAMU7AABXPACAFzwAwI28AGCbPQAAnDoAAF28AAD0ugCArL0AQCi9AMAlvQDgBb0AAHY8AMBVvQCAFLwAAM48AACdOwBwj70AAB+9AAAGvQAArzwAAMe7AKC5vQAAtzwAwPO8AACRuwAgBT0AAMw8ACAZvQBA0r0AwG09AABSPABIAz4AAEy8AICQPAAga70AAOK7AECfPACAKL0AgHy9AHgCvgAAtTsAwNS8AIAjvAAA1LsAoCG9AGBLPQAAmzsAAI87AMCJPAAgCb0AgCg8ABCDPQBgWD0AgF48AGAhvQBwor0AQEY9ACBbPQAgFz0AYFg9AAAGPAAAAr0AALk7AMCfvADglD0AAKQ8AMD6PACAlLwAAAA8AABTvQAAxDoAQAc9AMDJvQAALr0AEJe9AACPvAAA/rsAgCA8AICGvAAAnLoAgI29AADePAAA1jwAIE69AAAIOgAA/DoAANU7AAD/PADA8LwAQJ48AMDzPACALb0AAJe7AAABvAAAQrwAIAk9AICHvAAAuTsAgPK8AABtPAAwiT0AIFS9AIChvQBAUb0AwCc9AKA7vQBAg7wAwMm9AMCJvADgB70AAJW9AEANPQAQvb0AADA8AAAoPAAAKDwA4B+9AMChvAAATjsAAMS8ACBaPQDg8L0AAFK7AOBOvQAAfDsAgC88ANChPQCApDwAAJs9AAADPACAJDwAANM8AICkvADgsb0AgDU8AIBnvQAATLsAoBG9AHCWvQAA2bwAALm8AACQvABgSj0A4JI9AACPOwAAIb0AAPo8AIBcvQAA0DkAwPM8ACACvQCAmT0A4F69AOAtvQAgc70AIGu9AIAJvABQ1T0AgAA9AACCvQBAwD0AYEu9AADZOwAADjsAAKu8AMAWPQDgHT0AQKS8AADDOwCgdb0AgJc8AADbOwCAer0AYBe9AICOPACgBz0AkKo9AAD4ugBQiT0A0IM9AIBwPQAAAb0A4FS9AKCfvQDA07wAwA09AIAnPADAtDwAUJc9AMAoPQAA5bwAAG67AMBjvQAAmzwAAF28AIDpvACAF70AkLy9AIBRvACABr0AQHQ9AABDPAAgQz0AIFC9ANCDvQAAGrsAIEA9ALC8PQCAebwAgHK8AAA0PACAfDwAAAW8ACAOPQCAirwAgNu8AADuvACACrwA4BI9AEBJPQDAlLwAgBQ9AADePAAAMTwAgNk8AAByvQBAmzwAQBM9AMD6PADAfb0AABe8AIDWPACAWTwAgG+8AIBtPAAwyT0AMMG9AADRvACAhr0AgBE9AAA9vACgSD0AAMw7AIA4PQCgAT0AgHg8AMCJPAAAHLsAYFm9AOA5vQDAlL0AwPs8AIA7PQAAWDwAoCI9AMC2vABAbr0AIAQ9ACBAvQAAgjsAAPy7AABnPACALb0AAHu9AMCPPAAASzwAcLY9APCWvQDAhbwAwCE9AOgCvgDAW70AgKc8AACfOwAA/7sAQPe8AADPOwCAhr0AwJc8AAAWPACACjwAQPk8AECavACAYT0AEJg9AAAmvABQtL0AALG7AAAWvQDAEz0AwNU8AIDxvAAg7z0=","chunkHash":"5d1a4e2b91bf25334c28a7fbfda91fbb7b6e6faccc7dc7bd7d541da616b44d4e"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        #...\n            sample_percent (int): Percentage of samples to load per class (1-100).\n            z_window_size (int): Size of each window along z-axis.\n            z_stride (int): Stride between windows along z-axis.\n            predict (bool): Whether to use the dataset for prediction (no pairs).\n            debug (bool): Whether to print debug information.\n        \"\"\"\n        self.root_dir = root_dir\n        \n        # If transforms not provided, use defaults\n        if transforms is None or transforms_sim is None:\n            self.transforms, self.transforms_sim = get_transforms_for_contrastive(target_size)\n        else:\n            #...\n```","range":{"startLineNumber":47,"startColumn":0,"endLineNumber":59,"endColumn":0},"embedding":"AABdPAAADbwAgPY8AADrvACA5jwAQBe9AACSPACAK7wAcJK9AOAIPQAgcL0AAD69AKBwPQDALb0AgO08AEApPQDAyTwAgBw8ADCxvQAAYT0AQKA8AABtvQBAtDwAoN29AACMOwAAmTsAgEW8AIAxvAAAXjwAAMM7AEAOvQDAlLwAkK29AOBQvQBAgrwAgLM8AAAzPQDgaD0AAFA7AMAWvQCACj0AwH+9AADcugBApbwAABQ8AAC9OwAABT0AgHy8AMDcPAAAnDwAwLC9AOCHPQAAsDsAgEC8AECJvABAUD0AwM+8AACcugCAJr0AYA29AEC3PQBALb0AgI+8AADDOwAAg7wAANu7AEArvQAA2DsAYI69AIDHvACAuTwAAG+8AAC6PAAgYr0AgGA8AKADPQCA5zwA0OU9AEDWvACgGr0AAGg6ADCHPQAgAL0AQCA9AADTOwCAWL0AwG+9AJCuvQBACT0AYIO9AID8PAAAJLsAoDy9AADCPAAAnLoAgGe8AACjPABAhrwA4G49AOC2PQAAOD0AAKO7ACAdvQAAPrsAQPu8AEBUvQAAX7wAKAS+AMCTvADwnT0AAJW7AIBevQCA9TwAABo7ALCBPQDgTb0AsK69AEDKvADAZ70AIHe9ADCfvQBgLL0AgFI8AIADPQBAqjwAwNe8ACDNPQAA3bwAgP28AAD9OwDgbj0AwIq8AMChvADQl70AABu9AIC/vACgUL0AYCU9ACBTvQCACTwAgPm8AGAuPQAATjsAgJY8AFCQvQCA4DwAwMu8ANCyPQAA8DkAIEA9AEBIvQDAirwAgCE8ACAOvQCQpL0AQBO9AAA4OwCAST0AAOa7AIChvQDgSz0AgK28ABCKPQCAfbwAALq7AADSOwCAFbwAgPe8ACDKvQAA+rwAgO48AOBGPQAAsjsAsLK9AICMvACAQzwA0MS9AMCWvABAxbwAwKS8AMDgPABAH70AALS8AEAXvQBgk70AoOO9AEAYvQCAVz0AAMS8AAC4vACAGT0AACk9AOAEvQAAFbwAAI07AADzPABgZj0AYFA9AIBwPAAgOT0AgOy8ANCPPQBgCT0AYBe9AKABvQAAhzsAgGu9AABKvABAH70AgHc8AACWPAAAnjwA4Eg9AADnOwAADzwAIAC9AGCEvQBA/TwAgI08AACrPAAAOjwAgLy8APCPPQCABTwAABy7AACxuwAAJL0AQEG9ACA6vQBA0rwAwAM9ACAfvQAgH70AAAA9AECEPACwrb0AgMq8ACAMvQAAND0AABi8AJCpvQAgNj0AAD+9AAA5vABAEj0AwM88AOBavQDQvL0AwDE9AAA5PAAABD4AQIS8AADuuwAgXb0AIBe9AEC8PAAABr0AQKG8AADWvQAAtLsAIDC9AAAPPACAEr0AQMa8ACA4PQAAxrwAgJk8AIAdPACwlr0AAOo8AAByPQBgDT0AoCc9AADQuwAwo70AgC89AEByPQDA6TwAABE9AMCtPADgIL0AABi6AAAHvACAlD0AwOQ8AIDVPACAWr0AwOs8AEA8vQAAWDoAgPc8AGDKvQBAx7wAAJa9AADsuwAAaLsAADq7AIC6vAAA1bsAQL29AKBzPQAAlzsAIAG9AACeuwAAhbsAANS6AIBOPQAgGr0AQOY8AOAbPQDger0AAFA6AADiOwCAIbwAAIU8AACyuwAA8zwAgOe8AMC/PAAA3TwA0K69ACB2vQBgJL0AoG49ALCGvQAA97sAyAa+AICWvAAAq7sA4E69AIC/PAAgpL0AAE08AABQuwCAMrwA4EW9AADZuwCAyTwAIAS9ALDBPQD4AL4AAFK8AAArvQAABDwA4Ac9AACcPQBAvzwA8I89AABVPAAA2jsAQMg8AIDYvADgJL0AAJ08AAByvQAA3zsAAB68AOB4vQAA3LsAgBW8AADyOwAgED0AQJM9AADeOwBAeL0AgDM9AEDHvABA7DwAoB09AIApvQDwiz0AwF+9AAA0vQAAprwAYF29ACAKvQDg0D0A4B49AKBNvQAwmT0AgHu9AIDRPAAAzLoAIBi9AGAmPQAAHD0AgCO8AADjOwBwyb0AAOQ6AAAvvADATb0AQAG9AACquwDgJD0AoKs9AABguQBwpD0AsJY9AEC0PQDAFL0AQDW9AHC6vQDgBr0AAEQ9AADgOwAAOrsAIHk9AMDgPAAAxrwAQMY8AEARvQAANDwAgOW8AMCBvACAAb0AkLG9AABKOwBAiLwAkKA9AICkPABgiD0AwPy8AEBwvQAAzjsAIJw9AAB0PQBA2rwAAAS7AADIuwAA0TwAAEe8AGAEPQAAWDoAQKS8AAAsPABArLwAwPI8AMCJPQCgSr0AgGg8AECGPAAAgzsAABa8AKAlvQCAATwAAJk8AEDrPADQib0AAFW8AABXPABAzDwAAA08AIDoPADgWz0AAKW9ACADvQDAUL0AIGQ9AACfuwCA7jwAAOK7AADQOwBAGT0AAOM7AMARPQAA/TwAgFW9AOAkvQBger0AwJE8AAAMPQAAvTsAIBk9AECXvAAA+rwAIBw9AIBfvACAb7wAQBG9AMCxPADQiL0AgMi8AAD8OgAAHz0AQAM+AOBtvQDAlbwAAA08AND4vQAA0rwAAKg8AICOPAAAW7wAQDK9AADiuwDwlL0AAOA7AMC5vAAA9DoAgHk8AIBtvAAAoTsAUJ49AMCYvADArL0AAKu7AIBJvQBAtDwAYC49AOAGvQDA5z0=","chunkHash":"83f46a5bca86a0f4cb8bca4637fe01bde010006a724e431822b832b27f55b3cd"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        #...\n            self.transforms = transforms\n            self.transforms_sim = transforms_sim\n            \n        self.target_size = target_size\n        self.debug = debug\n        self.sample_percent = min(max(1, sample_percent), 100)\n        self.z_window_size = z_window_size\n        self.z_stride = z_stride\n        self.predict = predict\n        \n        self.samples = []\n        \n        if class_csv_path and os.path.exists(class_csv_path):\n            try:\n                df = pd.read_csv(class_csv_path)\n                \n                if ignore_unclassified:\n                    #...\n```","range":{"startLineNumber":59,"startColumn":0,"endLineNumber":76,"endColumn":0},"embedding":"AIChPADApbwAQME8AMAIvQBApjwAQP+8AMCePAAAUjsAwF+9AKAgPQAgQL0AYFK9AOAqPQCAqLwAYCI9AIBvPQBgDj0AgE08AECsvQDAhz0AgO08AGBavQCAazwAkM69AACWOwCAoTwAALm7AICmvAAADjsAAMA4AABEvQAAIbwAcK+9AID/vAAA47sAANU8AIAtPQBwjT0AAHS7AKAYvQAAHz0AoEa9AIA8PADAnLwAgNk8AADQugCAIz0AgPq8AEAkPQAAuzwA8LK9ANCePQCATTwAABG8AMDfvABgRj0AQNK8AADXuwDA6bwAgB29AFCvPQCgC70AAG68AABKOwDA2LwAADq7AKAfvQAAUDoAgFu9AADnvAAAljwAAHe8AEANPQDgWL0AgOI8AMCIPABA6TwAYLs9AMCFvADAzLwAgBQ8APCPPQAAz7wA4Bo9AAAZvABAYr0AUIy9AMBqvQBAzjwAQGW9AEAPPQCAYDwAoGK9AECQPACAajwAANi6AACYPADAt7wAgHo9AJC/PQBALD0AAKC6AACmvAAARjsAYB69AJCYvQDAjrwAkPK9AAATvAAwrz0AgJE8AHCSvQBgAT0AgF+8ACBsPQBASr0AMJ+9AICGvABgFb0A4Ga9ALCSvQAA0LwAAPA7AAAbPACAoDwAQJe8ADCpPQBAHL0AgN+8AAAwOgBAXj0AgGG8AECKvABgor0AwP+8AMDJvAAgW70AAMU8AAAyvQBAvDwAQM68AADnPACADjwAgGQ8AJCgvQAAJjwA4Be9AOC5PQAARDsAIGc9AIBHvQCAjbwAQMY8AMANvQCArb0AICu9AIABPACgfz0AAJC6AMB8vQAgSz0AgN68ABCBPQBAizwAQJ68AIBEPAAAx7wAAPO8AJDZvQDA7bwAgAQ9AAA2PQAAjDwAgJC9AACCuwAAmzsA4Ja9AAACPACgAb0AwDW9AMC7PAAgWr0AAHe8AMBOvQCwhL0AkPu9AIC+vADgOj0AQIq8AACluwBA/jwAYDA9AIDivAAA9jsAgNA8AIC5PAAAUz0AAH49AADIOwAgEz0AwBa9AKCUPQAALLsAoAi9AECWvAAAsDoAkKa9AAB7vAAgKL0AAFy8AMC8PABAhDwAoAg9AACIPAAAwTwA4Ce9ADCMvQDgBj0AQOo8AIBYPACAoDwAAMC8AIB6PQAARjwAABC7AMDivABA67wAwGC9AKBwvQCAwrwAgC88ACB7vQDAz7wAAK08AADwPABgrb0AgEO8ACAmvQAgMz0AALs7AHC5vQBgRj0A4Du9AADxuwBAHj0AAJM8AIAxvQDwyr0A4B89AIBBPACgAT4AACA6AACwuwBAd70A4Cq9AECDPABA9rwAwAy9APDovQCAczwAAGe9AAAfPADAnbwAQIi8AOArPQAAKL0AAL48AACKuwBQlb0A4BE9AOBwPQCgQD0AIDM9AAC1uwAAsL0AYDg9AMBqPQCA2DwA4Do9AIBAPAAgRb0AgDq8AAApvAAwmj0AAAw9AECtPACgcb0AgJU8AABTvQAAP7wAgGI8AKDXvQAAE70AAHC9AIBAvAAAL7wAAOm7AICKvAAAk7sAULW9AMBQPQAA0zsAoAC9AAD4OgAAMLwAAEq8AIA5PQCgNL0AANI8AIA0PQCgXr0AACe8AEChPAAA5LoAgMY8AIAjvADA9TwA4He9AKAJPQAAYjwAULC9AACCvQDgKb0A4H89ACCYvQAAyLsAUOe9AIDDvAAAkjsAgF69AICQPABger0AAKc8AACfOwCA07wAIGe9AACfvADALT0AYAm9AAC1PQAgA74AgE68AMAbvQAAjDsAYC89AIB2PQDA3TwAsKc9AAA+PAAAUTwAALE8AIBkvACA2bwAgKw8AOAxvQAAXDsAADG8ABCgvQAAWrsAAPA5AABSOwDASz0AMJA9AAAWOwDAhL0AQAw9AMDbvABAnjwAABE9AICOvADAjz0AYGa9AAAVvQAAprsAQD29AEAUvQCQpj0AYDk9AKBwvQAQqj0AgHG9AAAiPQAAzTsAYBS9AKAlPQBgWj0AAAS8AADyOwBgx70AAG67AACIOgBgdL0AAL67AAA/vAAgAj0AcIQ9AMCLvABQlz0AIIw9ADDDPQCABr0AICu9AMCQvQAgV70AYDA9AADCPAAA8LoAwD09AOAXPQAACr0AAHQ8AACsvAAAmTwAQBm9AIAdvACAK7wA4N29AIA1PADAsLwAgJQ9AAAaPQCAWT0AQEG9AOBFvQAA0LoAoLI9AKBsPQBgIr0AgE68AACiuwBAyzwAwKu8AKAZPQAAzDsA4Ba9AMDGPAAA77wAgKE8ABCAPQBgRL0AgLs8AACvPACALLwAAAA6AMACvQAAyDsAQL88AMATPQCgar0AACm8AMDuPACAhzwAACc8AIBSPABQlT0AUK+9AAAkvQBQl70AgHc9AADAOQBgJz0AAEE8AAB2PABgKD0AgEw8AMA6PQBgDz0AgDK9AEAAvQBgi70AQNI8AKBMPQCAOzwAADk9AABPvACAKbwAoFQ9AIBIvACAXbwAALa8AECiPABAe70AgMK8AIA9vADA9DwA8Og9AIBuvQAA2bwAABy7AODHvQDA2LwAwOM8AACxPAAAZrwAAE29AICKvADglb0AwMQ8AIB9vAAA+DoAgD48AADpvAAAYTwAUJU9AAANvACAj70AACA7ACB4vQBAiTwAQP48AECyvADYCj4=","chunkHash":"aa19f1cf967d392a23dbd8f3789c3026846f9c074d870931cc228cb0eb26c789"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        #...\n                    df = df[(df['class_name'] != 'Unclassified') & (df['class_id'] != 19)]\n                \n                if filter_by_class is not None:\n                    if isinstance(filter_by_class, int):\n                        filter_by_class = [filter_by_class]\n                    df = df[df['class_id'].isin(filter_by_class)]\n                \n                if sample_ids is not None:\n                    sample_ids = [str(sid).zfill(4) for sid in sample_ids]\n                    df = df[df['sample_id'].astype(str).apply(lambda x: x.zfill(4)).isin(sample_ids)]\n                #...\n```","range":{"startLineNumber":76,"startColumn":0,"endLineNumber":86,"endColumn":0},"embedding":"AIAiPABAsbwAAAM8AEArvQCAvzwAwN28AACCPACACTwA4Gq9ACBTPQBAHL0AYDK9ACAmPQAAjrwAwB89AGBkPQAgGj0AAEs8ABDLvQCwiz0AICM9AGBovQCAnDwAQNa9AIAEPACAwjwAAPQ6AADPvAAAMjsAAEA7AOA6vQAAE7wA4Iq9AIDQvADAiLwAAJw8AAA/PQBQkz0AAHS7AGAgvQCgGT0AIEa9AADPPACA87wAgNQ8AAAyOwAgIj0AAM28AAAWPQAAKDoAUL+9AHCXPQCAXDwAAJ68AECevAAgPD0AYCO9AACTOwDAtbwAwAW9ACCxPQBgFb0AANS7AIA+PAAgCr0AABS8AGAwvQAAzjsAYEe9AICvvACAYzwAgEW8AOBLPQDgb70AQPs8AIDOPAAAxzwAMJE9AMCgvAAAGr0AAHc8AKCTPQBAobwAgBI9AADWuwDgaL0AAJe9AABxvQAA7DwAIFq9AAD8PAAAeDwAMIO9AIBqPAAASDwAAAa8AECnPABAmrwAgI49ABC2PQAAKz0AAOS7AIBHvAAAKLoAAAe9APCkvQDAmbwAINi9AACBuwCQqT0AQKA8AACpvQAAKj0AAN27AMBdPQAAO70AUKm9AIA7vABAN70AIFK9AJCOvQBgIr0AAFw7AAA4uwAAIjsAgMS8AHCoPQCAFL0AAO+8AIAvvADglj0AgBi8AADQvADAjr0AQA+9AACyvABgcr0AgNc8AGA3vQCAFD0AQN28ACAZPQCAtjwAAAc8APCBvQAAgTwAgPy8AGC1PQBApTwA4HM9AOBHvQCAibwAgHw8AEADvQAAqb0AAEG9AICwPABgaj0AgCc8ACB7vQDgDj0AgMu8AJCDPQCAeDwAAIS8AAAOOwBAurwAQBG9AIDdvQDAkbwAAPI8AKBOPQDAlTwAcJq9AMCRvADAqjwAoKa9AACCPAAA1rwAYFe9AMDQPAAAbb0AAI+8AIBGvQBAjr0AUPa9AICdvAAgBj0AgHy8AAAmvADA9jwAgEM9AAC1vACAiTwAQNA8AEDkPADAXT0AoFs9AAACOwDgKD0AwPu8AMBzPQCAsLwAgF+8AAAavAAAJzwAsJC9AICRvADgKr0AQM68AIBQPACAoTwAAFE8AADGPAAAuTwA4By9AICMvQCA/DwAgOc8AIA5PABA8TwAAMm8AGBsPQBAizwAAMq7AICYvADA4rwAgFC9ACCCvQBAoLwAQKY8AMBavQAAuLwAAPA8AECoPADgj70AgGy8AKA+vQAAOT0AgIo8APC0vQDAQT0AAFK9AACduwCA9DwAAC88AOASvQCQz70AQCA9AIAKPABQ4D0AAPA6AACPuwBAgb0AAF+9AADJPACACb0AQN28AEDTvQAAVzwAAIe9AAChOwAAl7wAgHC8AIAWPQAgKb0AwAc9AACMugCwmb0AQBY9AOBXPQDgOz0AQCA9AACkvABArr0AwAo9AEBePQBABD0AADE9AADAOgBgTb0AAGu8AABmuwCQmj0AQP48AIBlPABgfb0AAJc7AOBfvQAAirwAgJo8ANDFvQAgDL0A4G29AICtvAAAXbwAABa8AIA8vAAAwLoAcK69AKBIPQAAzLoAgPy8AADCOwAAUrwAAO+7ACAjPQAAL70AYAc9AIAHPQAgYL0AADC8AACRPAAAzLoAQOM8AICZvACAfDwAQHy9AOAMPQDA5zwAMKq9ABCEvQBAJb0AIGY9AHCZvQAAPDsAcOC9AICEvAAA9DsAIHu9AIBPPAAAc70AQKw8AABsOwAAsrwAcI+9AECIvABgPz0AQAi9AACqPQAQ9L0AgCe8AKA2vQAACTwAQCU9AEBSPQCAAT0AYKE9AICHPAAA/TsAwIw8AAAIuwDAyrwAgG88ACANvQAAFLsAgDq8AACvvQAAlrsAACM8AADjOwDgRz0AQJo9AADWOwBggb0AADQ8AIDWvACAmzwAwPQ8AEAJvQDglT0AAGq9AAD/vAAACDsAAES9AEAIvQAQoD0A4Eo9ACBJvQBgsj0AQFi9AIAHPQAAajsAoDe9AKAHPQAAfT0AAGG8AADlOwCA3r0AAJo7AAA2OwDQhL0AgDc8AIBOvACAFj0AgG89AAB0vABgjT0AUJI9ADC3PQAA47wAgAC9AFCWvQDAaL0AACA9AID+PAAAtDsAICk9AIDRPABgBr0AgFw8AEDAvABAsDwAwCi9AACUvAAAyrsAoN29AACxOwAAwrwAUKQ9AAAfPQAAJz0AQPm8AABGvQAAkzsAwKk9AGBhPQCgE70AgIO8AECMvAAARzwAgK+8AADtPACAhDwAwFO9AADpPACgAL0AwOI8ADCJPQBAHL0AQJs8AED3PACAQLwAAMC5AAAWvQAA7DsAwMM8AKACPQDAVb0AgCG8AICePADAgTwAgIo8AIBmPACwmT0AQLS9AOBAvQBQjb0AAHg9AABuOwBAGz0AACU8AABWPADAJD0AAFI7AGBSPQDA1zwAAB+9AIC6vADgg70AQOg8AGBePQCAuDwAICw9AACCuwCAkrwAQF49AABQvACADrwAAKe8AIBCPACQl70AAEW8AADVuwAAxTwASAY+AKBpvQDA7LwAABa7ANCyvQBAprwAwOQ8AADxPACAfLwAIE29AAB+vADQtb0AAG48AIB8vAAAA7wAgAE8AMDDvAAAszwAELY9AABCuwAQpb0AAIA6AKCSvQCAITwAwNE8AICcvABIGj4=","chunkHash":"9c928eb8f25b48268aa89f9267372d7b11ce98fc29931fd33f0bea17c5ee8314"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        #...\n                if self.sample_percent < 100:\n                    sampled_df = pd.DataFrame()\n                    for class_id, group in df.groupby('class_id'):\n                        num_to_keep = max(1, int(len(group) * self.sample_percent / 100.0))\n                        sampled_group = group.sample(n=num_to_keep, random_state=42)\n                        sampled_df = pd.concat([sampled_df, sampled_group])\n                        if self.debug:\n                            print(f\"Class {class_id}: Sampled {num_to_keep}/{len(group)} samples ({self.sample_percent}%)\")\n                    df = sampled_df\n                #...\n```","range":{"startLineNumber":87,"startColumn":0,"endLineNumber":96,"endColumn":0},"embedding":"AICGPACArrwAAGE8AED3vAAA/zwAAJ28AIAxPAAARDsA4C69ACAjPQCAGb0AICe9AOAcPQCAdbwAQBk9ABCBPQDAFj0AgBU8ACCmvQBAej0A4Ag9AIBdvQCAkjwAENO9AIAfPABApjwAgBa8AICbvAAAtbsAADC6AKBKvQAAaLsAUIy9AIAlvQAA9bwAgLM8AEBKPQDglz0AADm8AIBTvQAgNz0AoEy9AIClPAAAorwAICc9AACcOwBART0AwO+8AGA/PQCAtDwA0MK9AKCXPQAAEjwAAKm8AICXvACARj0A4AK9AABSOwAAObwAgPC8AEDCPQDAGb0AANW7AACbPADA6LwAAJW7ACBEvQAAALkA4C+9AOAEvQBAiDwAAH+8AGAGPQAgkr0AwLQ8AEDpPACAzDwAwHs9AADhvACAv7wAwIk8ALCaPQBAw7wAIEc9AABquwDQjr0AEJO9ACB2vQAgBT0AoGi9AID6PAAARDwAIFq9AICmPAAAOjwAgAa8AICEPADAmbwAUIU9ABDDPQBASD0AAKK7AEDwvAAAdrsAYCO9ACCJvQBAvrwAYNq9AIDOvABwyj0A4BY9AGCdvQCgEz0AANi6AKBKPQCAJb0AAJ29AIBkvADAG70AIBW9AKCYvQDA4bwAAAC7AABYOgCAhjwAgHS8ADCtPQAgN70AgGq8AACdOwBAij0AADO8AOAQvQAgm70AwP28AMDBvABASL0AgHA8AOBDvQCAozwAALG8AEABPQCALTwAAOE7AAB+vQAAeDwAADO9AAClPQAAujsAIH49AIBMvQAAk7wAACU8AIDfvAAwo70A4BG9AACHOwDASz0AACa7APCDvQAgDz0AgLe8AEB7PQAAiDwAgF68AACkOgDAyLwAgOC8AKDdvQCAJ7wAIAA9AIAVPQAAyTwA4Ji9AAAqvAAAMjwAUJq9AAB8PAAAzLwA4DK9AECVPADgcL0AALK8AOAxvQCQmb0AcAe+AMCUvAAgAz0AgGy8AADMuwCgEz0AQEg9AMDPvAAAKTwAgNQ8AMDqPACgcD0AIIs9AIAwPABAID0AADC9AKBnPQAAgrwAAAu9AADKuwCANDwAAJi9AMCfvADAPL0AAHq8AIAWPACAojwAQOg8AAA6PAAAjDwAQPe8AICDvQBABD0AgPk8AECyPADAwTwAwM+8AIBRPQCABTwAAKS6AAA+vADA47wAAFa9AFCXvQAArbwAgIo8AACBvQCAz7wAQKI8AAD9PABwj70AgDy8AIAPvQCAKD0AANi6AODFvQCgPT0AQCy9AADAuwDA0DwAwJc8ACA/vQBw1b0AgDk9AADDPAAgzT0AAPi6AIABvAAgg70AwDm9AACOPADgDL0AgOK8AGDNvQAA2TwAwHa9AADWOwAAMbwAgGu8ACAvPQCgC70AwNA8AADluwBwpL0AgDw9AOARPQBACD0AAC49AAAhvADgmr0AgPs8APCPPQDgKT0AQAw9AAAKuwDgL70AAAa8AADnOwBAkD0AgC89AIBOPAAAUr0AwMA8AEBivQAAILsAAGA7AFDJvQCgBb0AMJe9AICJvAAA/rsAgE28AACRvAAAwrsAkL69AOAaPQAAgDkAYBa9AACjOwAA6LoAgEC8AGArPQCAG70AAK88AGASPQCARb0AAPS6AEDbPAAAHjwAgFQ8AAAYvABAHD0AoIm9AOAmPQAA3TwAgKy9AKCAvQBACL0AwIA9AHCYvQAAersAwOi9AAC8vACASjwAsJC9AIBxPADgfL0AgOs8AAD0OwAAz7wAQIy9AIBpvAAgGD0AABC9AMCsPQCw5L0AgCm8AEAxvQAA7LoA4Ek9AMBlPQDADT0AULI9AAB+PAAAoDkAgFk8AABAOQDA4rwAwJo8AEDuvAAAnDoAAHK7AFClvQAAqLsAAKC6AACQuQAgfz0AUJo9AABmOwAAj70A4Ag9AACYvADAtjwAQDM9AEACvQCQmz0AAFm9AIDuvACAgzwAYG29AIDVvABgoD0AgEU9ACBivQBAsz0AQIe9ACAaPQAAILoAIBC9AOA9PQAgiD0AALC5AMCRPACg0r0AAEG8AAACPAAAhL0AgBI8AECDvADA/zwAAHI9AACavADgoz0AwJY9AJDMPQCA77wAQOe8AHCLvQAgUr0AgPU8AADJPAAAgTsAoEc9AKAAPQAgH70AwIU8AMC/vACAdjwAAGK9AICFvAAAS7wAkO+9AABePAAAL7wAcK89AMDPPADgID0AQCG9AKAlvQAAzDsAEMQ9AABDPQAAHL0AgOS8AAAZvAAAwTwAQMS8AOANPQCAMDwAYCu9AMDxPAAgDL0AAHY8AGCAPQBARL0AwNA8AECKPAAAOrwAANQ6AIDqvAAAETwAAMI8AIDMPABAVb0AABu8AIBhPAAAbjwAAMc7AACYPAAAmj0AgLq9ACA/vQCgh70AwHc9AAC/uwAANj0AAEY8AADlOwCgWT0AAMA6AOBQPQCgGD0AQA+9AMCbvACgWr0AwOk8AABUPQCAIzwAwDk9AACwuwBAxbwAIFI9AADyuwAApLsAAFC8AIABPACwib0AAGG8AMCGPAAgCz0AYPE9ACBCvQBA+rwAALY7AOC6vQBA5rwAgNQ8AGAQPQAAdrwAYD29AAB1vAAwjb0AAIw8AABmOwAAarwAABU8AEDFvACAOjwAkLA9AACZOwAAh70AAKs7ANCGvQCAIzwAgLE8AMAZvQCADz4=","chunkHash":"8fc161eb5e78e16683ab39062fd7eca5fe2901642e4b3913c5ceb52c869729bc"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        #...\n                for _, row in df.iterrows():\n                    sample_id = str(row['sample_id']).zfill(4)\n                    class_id = int(row['class_id'])\n                    class_name = row['class_name']\n                    \n                    if ignore_unclassified and (class_name == 'Unclassified' or class_id == 19):\n                        continue\n                    \n                    padded_dir = os.path.join(root_dir, sample_id)\n                    unpadded_dir = os.path.join(root_dir, sample_id.lstrip('0'))\n                    \n                    sample_dir = None\n                    if os.path.isdir(padded_dir):\n                        sample_dir = padded_dir\n                        #...\n```","range":{"startLineNumber":97,"startColumn":0,"endLineNumber":111,"endColumn":0},"embedding":"AAAYPABAlLwAAFw8AEDtvABAhjwAANe8AMCuPAAALLsAQFe9AGA4PQCgSb0AAAS9AAAcPQBAxrwAQCA9AFCAPQBAKz0AAAQ7AMDQvQBQnz0AAPw8AEBhvQCAZzwAMM+9AECSPAAA3DwAAHA6AECVvAAAAjsAANe7ACBZvQAAsLsAoIS9AMCivACAiLwAAHI8AIAxPQDgiz0AgA+8AMBFvQDAPj0AwGW9AMDrPACA2bwAwPE8AACGOwBAMD0AYAG9ACBePQAAvjsAEJ29ABCgPQAAhjwAAPi8AOAQvQBANj0A4AC9AACsugAAobwA4Ai9AICmPQCAJb0AQIa8AACSOwDAtbwAAJy7AOBBvQAABzwAwCu9AADbvACAozwAgJO8AIA+PQBAer0AwBI9AACRPAAArjwAYI89AACUvABAAb0AAMw8ACCIPQDAu7wAgAw9AADcugBAZb0AgJq9AKBlvQAA3TwA4Fe9AGAAPQCAUzwAoHC9AACHPACAHTwAAPC6AIBsPABAobwAUIQ9AKDAPQAAIz0AAOy7AACMvAAAq7sAYBu9AFCbvQDAibwA8Ny9AICBvADwuT0AgIQ8AMCYvQAAAD0AALA5AKCIPQBgPb0AEKW9AADzuwDAIr0AwEy9AFCevQBAFL0AAIc7AACuOwAAGzwAwMy8AMChPQDAEr0AALe8AIB2vACgkD0AAEO8AMD3vACAl70AADO9AMCqvABgU70AwKo8AMAzvQBA7DwAQNC8AEC7PAAAPDwAAB08AKBxvQDAxjwA4A29AMC8PQCAojwAEIU9ACBbvQBAg7wAAEs8AEC6vADAp70AQCm9AADMOwDASD0AAOk7AGBnvQBABj0AgHy8AFCVPQBAuzwAgMm8AAB6OwBAybwAABK9ADDgvQAALbwAgBQ9AEBIPQCAQzwAoJO9AACSvADAjDwAgK29AEDsPADA8bwAADe9AIC/PABAgr0AAL28AGA3vQAwg70AYPO9AICivACAGT0AQMu8AACoOgDABj0AYC89AAC5vAAAhjwAwL48AAD1PADAUD0AQFw9AADwOQCAFD0AYCe9AECJPQBAq7wAALW8AIBlvAAA5jsAUKK9AICHvAAAI70AANu8AAAbPABAoTwAAII8AADpPAAAozwAoCW9AKBxvQDAGj0AwP88AACAOQBA2zwAQOO8AIBRPQDAmjwAAJC5AEDEvAAADr0A4Gi9AEBzvQCAibwAQMM8AIBOvQCAn7wAwNs8AMDJPACQgr0AAJy8AGBRvQDgQj0AgEg8AMCivQDgIT0AgCe9AABAOQBA+jwAADU8AKAJvQAQ5L0AAD09AIBTPAAwzj0AgCY8AAAavADgnL0A4Cq9AAC/PAAgDr0AgPq8ABDSvQAALTwAQHm9AIANPAAAt7wAAPu7AEAqPQCAJb0AwNE8AAC+OwCgmL0AoAQ9AAA4PQDgAD0AYCI9AADouwAwpb0AwBI9AABKPQCA0TwAQC49AAAgPACAQb0AgBS8AAD7uwAQnD0AACM9AAC9PACgZr0AQJ48AIBHvQAAX7wAgEc8ADDVvQAADr0AAIa9AAC+vAAAwrwAAA68AACJvAAAhbsAoL+9AOApPQAAnLoAwLW8AAAVPAAAQbwAgGm8AEAPPQAALb0AAKo8AAAJPQCwgb0AADw7AADnPAAAfjsAwMo8AIB3vABAoDwAIHK9ACAEPQDA5DwAwKe9ABCYvQCAHb0A4Gg9ANCPvQCAaTwAYPG9AACOvAAABTwAoGm9AIARPACAmb0AAJU8AAA8PABAvbwAAIu9AICUvABAPD0AQOi8ADChPQCA8r0AgBC8AMAnvQAAszsAwPA8AOA4PQDgJj0AUKk9AACDPAAAtjsAgFA8AAA8uwDA1bwAgGQ8AMAQvQAAPDsAAAK8AKCxvQAAprsAALE7AACMOwDAVj0AEKI9AIBoPADAiL0AgJI8AICQvAAAuzwAAB09ACABvQAgkT0AQGa9AOAnvQAApDsAgGi9AIDlvACgnT0AwGI9AOBvvQDAvT0AwFO9AMAuPQAADLsAAN68AGARPQAgjD0AgDm8AICFPAAQy70AAN87AACCOwAggL0AQJQ8AADruwBgAT0AYHs9AMCLvACAlj0AsIg9ADCuPQAA4bwAYB+9AICVvQBAS70AACo9AMAEPQAAEjwAwCE9AGAGPQCA5rwAAAM8AADCvAAApTwAYAq9AMCMvACAhLwAYO29AABoOgCA4LwAUKg9AMDuPADAOD0A4Aa9ACBevQAA2jsA8Lc9AAA3PQAA7LwAAD68AABovABAoTwAgKq8AADbPAAAMjwAQDm9AMDLPADABb0AAOU8AKCDPQDgL70AgOw8AEDGPAAAhbwAADg7AMA1vQAAgjsAQOo8AMDyPABAgL0AgBS8AICKPACAaDwAAAg7AAB9PACApD0AMLi9ACBRvQAgkr0AoIk9AACUOwDAMj0AAIc8AAB3PABARj0AAAA5AMBkPQAAITwAwBq9AED8vABggL0AoAg9AMBAPQAAgjwAwB49AABmvAAAR7wAoD89AMDAvAAAorwAgHe8AAAqPAAgjb0AwIi8AAB4OgAArDwAwAM+AOBqvQAA17wAAJC6ABCyvQCAE70AwN88AGASPQAAf7wA4Eu9AABFvADQjL0AQIY8AAA0vAAAgDgAgDo8AAChvABAxDwA8Lk9AAANPACAmL0AAKQ6AOCHvQAAZjwAQM88AAB5vAAwFD4=","chunkHash":"249836dddc1733d7469ad1e2972ab87b9c3318ef825ef3333d381099ba2599bb"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        #...\n                    elif os.path.isdir(unpadded_dir) and sample_id.lstrip('0') != '':\n                        sample_dir = unpadded_dir\n                    \n                    if sample_dir is None:\n                        print(f\"Warning: Sample directory not found for {sample_id}\")\n                        continue\n                    \n                    raw_dir = os.path.join(sample_dir, 'raw')\n                    if not os.path.exists(raw_dir):\n                        print(f\"Warning: Raw directory not found for sample {sample_id}\")\n                        continue\n                    \n                    raw_files = sorted(glob.glob(os.path.join(raw_dir, '*.tif')))\n                    if not raw_files:\n                        #...\n```","range":{"startLineNumber":111,"startColumn":0,"endLineNumber":125,"endColumn":0},"embedding":"AAAWOwDApLwAQPM8AAAGvQAApzwAICG9AABLPAAAFDsAoE69AMAOPQCAS70A4AO9AIBGPQDgYL0AYD89AICKPQDgJD0AANA7AADnvQDQjz0AoBM9ACB3vQAAxDsAgMO9AIAovABAyjwAAPA5AAA9vADA9zwAQIM8ANCCvQAAnbwAQK29AIBlvAAAKLwAQA49AKB0PQBgnT0AAJw6AKBjvQBgXT0AwFW9AIC+PACAqbwAgG48AACVuwAAKj0AwIK8AGBAPQAAwLkAoJe9AKCXPQCACTwAgHK8AAA0vQCABz0AQKm8AAAKOwCAYLwAwFK9AOC3PQCA07wAAL+7AAAsuwCAoLwAgHS8AMAQvQCAbzwAoIS9AID2vAAAgDgAAM+7AMAcPQCgk70AwNI8AEClPAAAIjsAMLI9AMCivAAgU70AgOI8AAB6PQAADL0AwEU9AICBvACgbL0AUKm9AFCZvQCACz0A0IW9AMACPQAAqDwAAEi9AIBvPAAAKLoAABK7AAAnPACAlLwA4H49AOC4PQDAkTwAAGG8AICMvACAOrwAoCO9AIB0vQAA8LsAgNG9AIAQvACglz0AACE8AECRvQAgKT0AQI88AOCmPQAAL70AwI29AAD8ugDAr7wAQI+9AJCEvQBAuLwAgAY8AABkOwAAybsAQKi8AFCpPQAAAL0AwIa8AACougCQiT0AAHA6AABeuwDQsL0AABK8AED4vADAQL0AQOA8AMAMvQBgDD0AAF68AACcPACAYzwAwOc8AFCYvQAA3TsAIB29AADYPQAgDz0AAJs9AICEvQCAp7wAQAs9AMDxvADAhL0A4Dq9AACoOgCgVD0AAKw7AECcvQAABj0AACe8AMCNPQAAVDwAAAa8AABVPACANLwAgMu8ABDhvQAAerwAQPg8AOBJPQCAyzwAsIu9AACouwAAwLkAoLW9AMAcPQAAB70AgPK8AABcPABACr0AADu8AMAlvQBQgL0AYMu9AAAPvABgPD0AgBO9AABAOgDAtTwAoEY9AKAAvQCAdTwAgEI8AIC4PADAXj0AQF49AADwuwAANz0AYBq9AGCTPQCAVrwAQJi8AID7vAAAbLsAEJW9AEDOvADgLL0AgAG8AIBtPADAozwAgNs8AIBiPAAAGT0AIEi9ADCVvQCA3TwAYAU9AADxOwAAYjwAwNy8ACBQPQDAAD0AAIM7AADevACAJb0AIHi9AAB0vQAA17sAgAk8AOBWvQCAAb0AwP08AIAAPACAh70AAES8AGBhvQAAHD0AwNE8AHCIvQCgFz0AgC+9AABdvAAgED0AANE7AKA1vQDAwb0AAD89AECFPAAwxD0AALC6AECTvADwk70AgPe8AMD7PABABL0AgAq9AEDPvQAAFrwAIAe9AICdPABgBL0AAE68AGAtPQCAybwAQKM8AMCcPADAc70AQOw8AGBhPQCAUT0AoAs9AABMvAAAm70AIHo9AOBLPQAASDsAID89AMC9PABgWb0AQIO8AAC8vAAgqT0A4A09AIAnPABQp70AAHQ8AIAxvQAAVrwAAAQ9ADDDvQBApbwA4Fa9AIBTvAAAbLwAAIm8AADYugAAIrsAgL29AIAkPQCgJ70AALK8AADDuwCAObwAwIm8AMD5PAAga70AABg6AID3PADgRr0AAKS6AMCbPAAAMrsA4Bs9AAC1uwAAMDoAQG69AIABPQBAID0AQI+9AECdvQBgIL0AIEo9AJCsvQDAgzwA4NO9AMCGvABAvzwAABC9AACGOwBAbb0AgB48AIB5PAAA2rsAgIi9AADAOwCgFz0AIC29AGBwPQAACb4AwKm8AAA9vQAAejsA4As9AOB4PQBgHz0A8LA9AMDVPAAAATwAAB89AACyOwBAAb0AQIY8AIAhvQAA+DoAgOS8AMCkvQAAz7sAACa8AECBPAAAfD0AMKY9AIBRPACgfr0AIBA9AOAgvQBAxDwAQOI8AABwvAAQhT0AQEq9AABlvQCAB7wAwHW9AADGvADQrz0AICw9ACBJvQAwlz0AYC+9ACALPQAA4DoAQOO8AAD7PABggj0AwIG8AAAXPABgvb0AQKK8AACyPABgj70AALa7AAAwOwAAlTwAgHI9AMC5vACAbz0AYFs9AMC0PQBAFL0AQAa9AIChvQAAQ70AALQ8AEBGPQDAtDwAgEY9ACBQPQDAIb0AgBa8AOAxvQAAqTwAIAe9AIB8vADAirwAQNi9AACCOwDgJ70A4JU9AMDAPADAOz0AIBi9AIAkvQBA07wAoIc9AEA3PQDAM70AADo7AAC/uwBAEj0AgPC8AIDKPABA6DwA4Cq9AADmuwCAIL0AANU7AIBTPQBA5bwAAO08AIADPAAAUbwAACg6AGAbvQAARbwAgOU8AMABPQAAdr0AgFm8AMCRPAAAcDwAwII8AAD2OwAAuj0AAIW9AAA0vQDwkr0AIGM9AAAZvABAXD0AAIw8AACYPACgQT0AQJy8AEC0PACARTwAgCW9AIARvQBQlb0AoDM9ACAvPQAAQzwAIB09AICQvAAA9rwAICw9AABSvADAqrwAQBi9AACwPABgkb0AYB69AAAQPACA3zwAmA4+AIA/vQAAnbsAACA6APCxvQDAPr0AgDA8AED8PACAdrwAYGq9AABEPAAwlL0AgLo8AECEvAAA5jsAgJE8AED2vABAwzwA8KA9AADkugCAsr0AgBk8AOByvQDABz0AwLQ8AECJvAAwDT4=","chunkHash":"90f7a9925b3665c3236a4b9d3b8daf81890d188ebcb0e5e74592c1f37e73a5ce"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        #...\n                        print(f\"Warning: No raw files found for sample {sample_id}\")\n                        continue\n                    \n                    # Create windows of consecutive slices with stride\n                    total_slices = len(raw_files)\n                    \n                    if total_slices < self.z_window_size:\n                        # Handle case where we have fewer slices than window size\n                        self.samples.append({\n                            'sample_id': sample_id,\n                            'class_id': class_id,\n                            'class_name': class_name,\n                            'window_files': raw_files,\n                            'window_desc': f\"0-{total_slices-1}\"\n                        })\n                    else:\n                        # Create multiple windows with stride\n                        #...\n```","range":{"startLineNumber":125,"startColumn":0,"endLineNumber":142,"endColumn":0},"embedding":"AIDRPAAAlbsAAKs8AAARvQBApjwAQFW9AIBiPACAPbwA4Im9ACALPQAAx7wA4Eq9AKA7PQAANbwAwAE9ALCSPQCgGj0AwN48ADDIvQAAkD0AwCU9AFCEvQCAFDwAQMu9AIAaPADA7DwAAEG8AIBqvABAsDwAAHE8AEB0vQAAp7wAUKG9AIB4vACgEL0AAE88AEARPQDgiT0AAPA7AOBRvQAAID0AoIK9AEDfPAAAYrwAoDY9AAA8OwDAQz0AAJu8AADmPAAAazwA0MW9ABC2PQAAn7sAwAy9AMD3vADALD0AQCW9AIBHPAAArrwAQOi8AADbPQBA37wAgB28AIAuPAAAOLwAAAW8ACAovQCAKTwAICG9AMDevAAAzjsAAHy8AIAKPABgMr0AwMg8AEDQPADgAz0AkI49AABnvAAABr0AgGI8ANCwPQDgCL0AQPY8AAATvABATb0AEJW9AKBVvQBgNz0A0IS9AKAYPQCANDwAEJO9AACWOwAA0LsAANQ7AACDuwCAyrwAoGw9ACCkPQBA3zwAALO7AIChvAAAL7wAgCe9AGCGvQAAKTwAkPm9AICQvADglj0AAGY8AJCOvQBgMz0AwM+8AACXPQDgCL0AUJS9AEC+vADA4bwAIES9ANCRvQCAlLwAgB68AACHPAAAbDsAgIe8AIClPQBgKb0AgF68AACDPACQhj0AAPy7AACGOwAwn70AwLy8AID/vAAAF70AAA09ACBFvQDAVT0AwLy8AKACPQBAsTwAgNw8AHCWvQCAcTwAoCq9ANCoPQDAsDwAAJY9AEDgvAAAZrwAAAk9AMAEvQDwmL0AABm9AACxOwDAZj0AAOA6ANCIvQDA+DwAAF68AOCQPQDApzwAAOu8AICIPAAAOLoAgMS8ALDhvQCAGr0AABQ9AAAxPQBA5jwAUKy9AAAzvAAAXzwAMK29AAC1uwDAk7wAoBe9AABIPAAgKb0AAIe8AEDNvAAwoL0AsPS9AAAcvACARTwAQMy8AIC0vADAnzwAQDk9AEDnvAAA8DoAADc8AAD2OwCgRz0AwHw9AACXPADgTj0AwGy9AIB2PQAAj7wA4BC9AADMvAAADDsA0I29AADEuwBgGL0AAM07AAA1PAAA9zwAADM9AACROwBAsjwAwCa9AGBqvQBAkzwAADE9AAC4OwDAqTwAwIW8AEBBPQBALz0AAOQ6AMC0vAAA5bwAgBu9AOBtvQCAAzwAAPU7ACBvvQAA47wAgPM8AADrOwBAfL0AAMA4AIBqvQCgHz0AABA8AJCbvQCA7jwAgEy9AAA4OwBAMz0AAPo8AOBQvQCg3r0AoFY9AADkuwBw3D0AACq7AADwuwBAdb0AwM28AACgPADAEr0AANK8ADDgvQAAALgAABe9AAA4OgDgSL0AgDG8AOA7PQBAx7wAQLY8AACJPABgzL0AYEI9AEAzPQBART0AgLk8AACpuwAQj70AAN48AKB8PQDAkzwAAHI8AEC8PACAOr0AwNC8ACAFvQDAsT0A4Do9AACwPAAAor0AwKQ8AMASvQAAjDoAwNM8ADCrvQAgAL0AYFq9AMC4vAAA4LoAAI68AECAvAAAHbwAkLi9AMBPPQBAqLwAACq7AAAAPAAA7DoAgPW8AAB3PAAAOb0AALg8AAAvPQDAKL0AAKW7AADzOwCAILwAgFM9AACFvACgEj0AYFy9AIBNPQCAYzwA4Hi9AICFvQDA+7wAIJE9AMCbvQCAYjwAUL29AAA4ugDA+jwAgG+9AAC8OwBgY70AAKw7AACYvABApLwAUKC9AACVPACgLD0AACO9AJCnPQCg+70AwIq8APCFvQAAhDwAADQ9AECTPQAgDD0AwJk9AADCuwAA9TsAAP47AACquwDgJr0AAKg7ACAYvQAAvjsAgHu8AGClvQAABLwAALG7AAD7uwCAdj0AYKQ9AACvPACAKL0AIAE9AICNvACAYzwAwN08AIBZvABwrj0AAF69ACB5vQAAHLwAwCe9AKAOvQAQtz0AoD49AMCmvACQjj0A8J29AKAxPQAA8LsAQB+9AMACPQAgfj0AIAe9AIDqPAAg170AwLO8AACDOwCAS70AAKE7AIAUvADAkTwAoGY9AACROwCQhj0AEIM9AGCvPQAAUbwAoE29AFCKvQDA6LwAoCA9ACA4PQAAvjsAkJA9ACANPQBgN70AgHc8AIAPvQCAIzwAIEu9AADAuwAAirwA4O29AAD6OwCANr0AwLI9AIAjPQCgcj0AgGW9AMCHvAAAtjsAEKo9ACBIPQAgO70AAOg7AAACOwAAbzwAgKW8AGAvPQCAeTwAwDC9AAAsOwBgHb0AAHC7AEBqPQDALb0AwPs8AADbOwAAsLkAAD88AEDQvAAAtjsAAM88AKAjPQCgcL0AwIu8AMCKPAAAEjsAAHE8AICNPABQlD0AMJu9AEA0vQDgw70AgCQ9AADUuwBART0AQMw8AABmuwAAPT0AAHC8AECrPACAozwAACi9AAB3vACQib0AgOI8AIDWPAAARDsAQDE9AIDjvABA/rwAQP88AMD6vAAApLsAwAK9AMD2PADAQ70AQPa8AAByuwAgLT0A4OU9AFCGvQBAC70AAEk8ALCevQAAd70AQMo8AADHPACAaLwAQEq9AECfvACQqL0AAOY7AIC/vABAgDwAAMC4AADDvABA3DwAMJU9AIBAvACgpL0AQL+8AIBHvQAAxjwAwNA8AIBzvADQ+T0=","chunkHash":"1d2a2ccf9f1e71996a840a5d821e1c263cee089d58d0481ea8f3a64066495357"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        #...\n                        for start_idx in range(0, total_slices - self.z_window_size + 1, self.z_stride):\n                            end_idx = start_idx + self.z_window_size - 1\n                            window_files = raw_files[start_idx:start_idx + self.z_window_size]\n                            \n                            self.samples.append({\n                                'sample_id': sample_id,\n                                'class_id': class_id,\n                                'class_name': class_name,\n                                'window_files': window_files,\n                                'window_desc': f\"{start_idx}-{end_idx}\"\n                            })\n                \n                print(f\"Total number of windows to process: {len(self.samples)}\")\n                \n            except Exception as e:\n                #...\n```","range":{"startLineNumber":142,"startColumn":0,"endLineNumber":157,"endColumn":0},"embedding":"AMCuPACAU7wAANA8ACARvQCAcDwAwDy9AAB/PAAAersAYHq9AED7PABAv7wAwCS9AEANPQDAp7wAwOs8AJCHPQAA2jwAwKY8AHDJvQBggz0AICY9AHCQvQCAKzwAUMe9AAD8ugBgBD0AANa7AECCvACAmzwAACY7AEBdvQAAwrwA0JS9AKAevQAAMr0AAH88ACAmPQCQkj0AAIK7AICCvQAgBz0A4GG9AICZPADAjbwAwEQ9AABqPACAET0AgDu8AKAbPQCAlTwAkK69ABC6PQAAGLsAgAe9AEDTvACAOD0AAB+9AACYOwAAELwA4CC9AKDjPQAA67wAAAA8AABfPAAgE70AAIY7AGAovQAAqLoAIBG9AAD8vAAAprsAAHS7AABHPAAgKr0AgPE8AACePACAyDwAIIQ9AABkvACA/rwAAPE7AMCkPQAA8LwAgB09AIAhPAAgIr0AYIO9AIBOvQDgGj0AoHO9AEDmPADA7DwAoG69AAB4OwCADzwAANs7AABeOwDA7rwAYHQ9AECtPQAgGj0AgD+8AADNvAAAl7wAIBG9AHCCvQCAPjwAEOW9AADSuwAglT0AgBs8AKCGvQDA5zwAwP68ALCuPQBAGr0AAJC9AADMuwBgCr0AAEO9AHCavQCAB7wAAPQ6AAD7OwAAnLoAAMO8AKCOPQCAVb0AAPi7AICZPADAiD0AgEy8AABWOwAQob0AwLe8AOBEvQCAK70AAEU9AKBTvQDgBT0AgJ+8AID3PABAijwA4AE9AFChvQBAkDwAIEC9AODJPQDAoTwAYIc9AGAGvQAAerwAoAU9AIDDvACgi70AwCC9AAAYOgDgTT0AAOI7AJCFvQBApzwAQK+8APCKPQAAdTwAwO+8AIDBPAAAPjsAAD+8ADDjvQCAFb0AQDQ9AMAOPQAA5TwAIMS9AACtOwAAaDsA0Kq9AADxOwBAiLwAIBu9AACAuwCgZ70AALe7AOADvQCgn70AOAi+AADsugAAZjwAoCu9AICwvABA/TwAwD09AECNvAAA/TsAAEw8AAAZPABgaz0AII89AABLPABgMD0AgEG9AHCYPQAAmrsAIDC9AAA6vAAA9bsAkJG9AAB5vADgJL0AAP87AAANPABgKz0AwEY9AAAOvABAhzwAYAy9AACEvQAACT0AYCA9AADoOwCAxjwAwKC8AIAnPQCAAT0AgBI8AABIugCAibwAADK9AFCAvQCABbwAALs7AKB5vQDAx7wAAM48AAD9OwDwkL0AgA68ACBAvQBgJj0AAEC6AHCdvQAA2TwAgDS9AIA1vADACj0AwKQ8AOBTvQDwvr0AgDg9AIAJvABQ5D0AAKG8AAAPvABwi70AAPi8AAB1PADA7bwAgIK8AJDvvQBAjjwAABa9AABUuwCgSL0AAA28AMBMPQBA4LwAAAA9AECPPACQmb0A4Eo9AOADPQAAKz0AgOM8AABYOgBglb0AQMI8AMB8PQBAvjwAAGo8AACqOwDANL0AgHG8AEDEvAAwpT0AIEo9AACFPADQkL0AwPE8AMDIvACAXbwAAJw8AKC1vQDgJL0AwHy9AIB9vAAAZLsAAKu7AIBevACAd7wAwKC9AMAxPQAAoLwAwJ+8AADAuAAAOLsAALm8AICSPAAAGb0AgKY8AED5PADAMr0AAB28AAD4OgAAO7wAgCs9AMC7vADA5TwAgAi9AABXPQAATzwAYHu9AKBBvQCAAr0AsK89ACCYvQBAgjwAcPW9AABXvACAlDwAcI+9AACUPABgU70AwJQ8AAC5vACAtbwAAIa9AAC6OwBAKz0AQOG8APCqPQDYDL4AAOq7AMBKvQAAjTwAgGI9AHCcPQAA8DwAIJw9AABmPAAAi7sAgGs8AACGvABA9bwAABI7AEDNvAAAyrsAgBq8AKCmvQCAm7wAAI67AAATPAAAez0AkJ49AICFPACAPL0AAP08AABbvACASzwAQOI8AAC6uwAQoz0AoFC9AGBkvQCAB7wAgDq9AKAdvQBgqz0AgEs9AGAgvQCQlT0A8I+9AMA/PQAA47sAIC69AIAEPQBAYD0AQMi8AADcPAAg3r0AgH28AADJOwDQgr0AAJU7AIBfvADgCz0AAFs9AACRuwBwjz0AAHU9ACCwPQCA8LwA4CS9APCFvQCgSr0AgB89AKALPQCAVrwAgH49AABHPQBgB70AQKQ8AADDvACAaDwAIEi9AMCEvAAA9LsAYP29AIBfPAAAAr0AILM9AEAQPQBgcT0AYGS9AADpvAAAizsAEL49AKA8PQAgML0AAJA5AABXPACAkzwAgKm8AAAiPQCAgDwAoDa9AACCPACgCL0AwIA8AJCDPQDATr0AgN48AAABPAAAgLsAAFc8AIBBvQCAbDwAAME8AGAyPQBAYb0AALC7AIC1PACAQjwAAKY7AICLPABwiT0AoJ+9AED+vADwo70AIHc9AICwvABgKT0AQME8AADHOwCgQT0AAKi7AEDiPACA1zwAAD+9AICJvACgWL0AIBA9AMAiPQAAaDoAIDM9AECrvAAA2bwAgD09AAAPvAAAcLsAwPa8AAD1OwCAZb0AwO28AABquwDA9zwAsPQ9ABCGvQAgCb0AwL88AHCevQCAFr0AQAk9AIAePQAAg7wA4IO9AAAyvABAsL0AAPc7AIDKvAAA9TsAAKg7AGAKvQAgBj0A0I09AECLvABwr70AAOi7AIBtvQDA3zwAgLg8AMCpvADQ7D0=","chunkHash":"86054e2ee77b201ab7ca43f4c044bee21738c8557155507424605e4a3e9e9618"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        #...\n                print(f\"Error loading class CSV: {e}\")\n                import traceback\n                traceback.print_exc()\n        else:\n            print(f\"Warning: Class CSV file not provided or not found: {class_csv_path}\")\n    #...\n```","range":{"startLineNumber":157,"startColumn":0,"endLineNumber":161,"endColumn":89},"embedding":"AADZOwAA37sAAKg8AMDOvAAAkDwAgP68AIBdPAAAlbsAgJK9AIBOPQBAK70AYAe9AIAxPQCAcrwAIA49AKBZPQDAID0AQNQ8AGDHvQAgZT0AAAk9AOA9vQCAajwAwMi9AAB7PAAAMzwAAIW7AAAmOwAAvTsAAIC4AGA1vQCAqbwA0Ji9AIBnvACARLwAAO87AEBZPQBQjz0AgA48AIB6vQDAuDwAIHG9AACYPAAAiTsAAAY9AAAGOwDgYD0AgF28AADmPACABjwA8Lq9ALCcPQDA5jwAAGS8AGAzvQDAtDwAwLe8AAAYPACAy7wA4FG9AKCtPQDABb0AYBe9AAD6OwAA/bsAADG8ACATvQCAjrwAwIO9AEChvACAXLwAAEu8AGApPQBgbr0AwJs8AACwuwAAhjwA8M09AACPuwDAVb0AAKU8ANCfPQCAP70AwDc9AACQuQCgcb0AEKC9AECOvQCASz0AAHG9AOAKPQAABTwAIAu9AIBwPABAlDwAAOE7AACpPAAAIr0A8J49AHCjPQCAFT0AgMk8AIByvAAAKrsAQAG9ANCRvQBAi7wAcPi9AABPvABgrT0AAIc7AIBFvQBA/zwAAKG8AMBcPQAgK70AEKy9AACavADgIL0AYDW9AICtvQDA0rwAACm8AADAOgAABDwAAMq7AOCVPQAAnrwAAOC5AAAqvACAPz0AgCe8AAC/uwCwj70AoAy9AGAFvQCQgb0AwNo8AIAnvQBgFz0AQOe8AGAfPQAAXTwAAMI7ABC5vQAAjTwAQMO8ADDCPQAAmjsAoCw9AED2vAAAx7sAAKc8AGAUvQDAqL0AAEi9AAC/uwCgXD0AACo7ADCmvQBAMD0AgFG8AFCvPQAAwLsAAAe8AABKuwBAn7wA4Ci9AEC3vQCAzLwAwDc9AAAAPQAAZTwAcIi9AEDNvAAAUzwAkI69AABcOwAAebwAAFm9AMC4PACgfb0AACA7AOBnvQBQhb0AgO29AACHvAAAED0AAC28AIAlvADAxjwAwM88AMDFvAAA1LsAgH08AADfPACAQT0AgGs9AAAIvADQgT0AAD+9AKCaPQAAdLsAoCm9AMCvvAAAgLoAYIe9AICNvACgP70AADA6AIDFPAAA9TsAANQ7AEDvPABAvDwAwMS8AOAEvQAgQz0AQM48AACsOgBAxjwAgE+8AOBBPQCAQjwAgBW8AKAtvQAAbbwAwG29AOB6vQAAAbwAwPE8ACA7vQAAcbwAgFA8AADQPAAAl70AwKa8ACAbvQCApjwAgFo8AFCovQCAUj0AAA69AAAivABAwTwAwLY8AGAqvQAQ1b0A4FM9AMCkPABQ1z0AANA8AAApPACAjL0AICy9AIBAPADAHr0AQAC9AADfvQCAxbwAYC69AIAZPADA9rwAANC5AIAEPQDgZb0AgCg8AAB1vACgqL0AQPQ8APCDPQCgFD0AoEA9AMCpvADAoL0AwE49AAA9PQDAPD0AYDY9AED/PAAAQb0AADU8AMC1vABQwz0AwOA8AIC1PAAAl70AAK87AOBGvQCAYrwAoAE9ANDMvQBgB70AAIK9AADCvAAABjsAgCq8AMCKvADAjLwAcMK9AMDWPAAA4DsAwAy9AADcOgAAbLsAgDe8AMAYPQAAO70AgOA8ACAPPQBgjL0AgFY8AAA2OwAAprsAAPY8AACXvACAETwAwIK9AKBiPQCAQjwAoJm9APCDvQCgQr0A4I89AOCIvQCAhDwAeAS+AAD0ugCAGjwAgBi9AADQugBwh70AQKA8AACXOwCAILwAEIm9AACUugBgVD0AwMm8APCZPQBQ6b0AAM67AEAAvQCAxTwAgAo9AIAkPQBAgTwAMLo9AIB6PAAAuzsAALq7AABcvADAB70AgL08AIBmvQCApzwAABC9AMCNvQAAODsAAMm7AACNuwDgZD0AEII9AAA+uwDgLb0AoDY9AID7vAAAsbsA4D09AEA+vQCwhj0AYDi9AGB/vQCAKrwAIDW9AIA5vQAQsz0AwDs9AMAdvQCgkz0AgDW9AEDoPAAA4DsAQB69AGAAPQDgYT0AgC28AAArPABww70AAMC7AIA0PABAR70AwOW8AEC8vAAA7jwAIJc9AADEuwAggD0AUKI9AHCpPQAAubwAwBu9AHCUvQAAW7wAwDQ9AIASPAAAMDoAYG49AEDnPADARL0AgDE8AECQvAAAljwAwAW9AMCJvADAqrwAoOm9AECwPADA8rwAoM89AGAQPQAAdj0AoDi9AABIvAAA5DoAsKQ9ACCYPQAAab0AALg6AACQugCAmjwAYCG9AIAiPABgHz0AQNm8AABbPADAjLwAADo8AIBMPQAgG70AAGg7AEDkPABAhDwAAHQ7AABuuwAAwDgAwIs8AKAoPQCAWL0AAJK7AEALPQAADLwAAPi6AAAmPADAZj0AoKy9AKAYvQCwsr0AAFc9AACPuwAAIz0AACM9AAA/PABgOD0AAPC6AAAcPQBA5DwAoBe9AMCivAAgfb0AIDs9AIAXPQAABzwAgCU9AAAmuwCAX7wAQDo9AICEvABAn7wAQAu9AAA/PACgWL0AYBC9AAAVvAAAyjwA4PE9AGBovQAA1bwAAO67AADJvQAAN70AgJE8AEDiPAAAaLwAYIi9AABKvABAub0AAJE7AADaOwAAhLwAAL47AIBBvQDAxzwA4Eg9AAAAvAAQwb0AAJc7ACBQvQCAHj0AAHc8AADwvABgET4=","chunkHash":"d2f8e854af4429a7ce8c6999b85025a8da2e952227ae71f273e9c94957b0aa57"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __len__(self):\n        return len(self.samples)\n    #...\n```","range":{"startLineNumber":163,"startColumn":4,"endLineNumber":164,"endColumn":32},"embedding":"AMBmPQCAarwAoEQ9AIDAvABAKT0AALy7ACBMvQCA/LwAgDS9AICYPACgS70AQEy9AICaPAAAoDoA4BI9AIABPQCAT7wAAIE8AGBZvQBAEz0AADY9AIBMvQCArDwAsKi9AFCJPQAACDoAQDO9AACIOgCAxzwAAEO8AMAGvQBAFL0AoG69AADBvADA+LwAgNE8AOCxPQCAVD0AgH48AICdvQAAuLsA8KC9AAADvAAAO7wAMIE9AIBvPACAoDwAAFq8AKA0PQCgQT0AwKu9AAC2PQBA5bwAwDm9AICRvACgQD0AAMK7AMCIPADAozwAMNS9APCgPQAAfLsAQAK9AECcvADAS70AAJk7AEAOvQDA+zwAYCO9AIBLvQAASrsAQKw8AOAjvQCAOb0AAMC6AEAUPQAAIT0AQAw9AABkvAAAhzwAAAC7AFCkPQAA2DoAAIC5AABxPAAgYL0A4DO9ACB8vQBABz0AAAi9AEDrPAAA0LsAAKG7AECnvADAzzwAQOW8AKAUPQAAqbsAgCs8ADCMPQDAojwAgHE8AEAWvQDAtrwAwC29AACquwCAWzwAIPq9AGBjvQCgwT0AAGs8AMB0vQAwgj0AAAc8AHCfPQCAcLwAEJq9AAANPADATL0A4FK9AOCGvQAA4LkAQAc9AABDvQAAvzsAAFK8AMCQPQBgKr0AgAK8AICnPAAAvj0AwI28AIB3vACQkr0AgNe8AABOvAAAWL0AgDi8AMD7vAAA2jwAQNk8AGAtPQBA6zwAgIM9AED4vABA5jwAgH+9AOBAPQCAazwA8M09AACBPAAA/DsAAII8AAAoOwCAuL0AYHm9AIBSPAAAGDsAYAW9AMA2vQAgQD0AAMu7ABC8PQBgVz0AQJm8AIA/PACAabwAQLW8ACDDvQAAwrwAYDQ9AGChPQCALT0AaAO+AECfPACAoTwAYAi9AEAdPQDADr0AgHy8AIA0vACgbb0AAEI8AAATvACASbwAeBW+AABZPADAiDwAgOq8AEDmvAAgYT0AwGE9AAAQugDgAj0AAAq7AAAEvQDAYD0AYHA9AIDNvADACz0AwIS9ACChPQAgNb0AgAq8AADnOwBA4bwAgK69AADLvADgHr0AwME8AACXOwBAlzwAADQ8AAANvAAADDwAAHK7AAD5uwCAdT0AAOQ8AAAsPQBACj0AwPq8AABjPQAA+jwAAJC5AAC3uwAAYrwAAH28ACCcvQDAEL0AgNk8AADDvACgYr0AAAU8ACA8PQCAib0AwK88ACAhvQDAvzwAAEu9ALCXvQCAwjwAQAW9AICLPQAAQDwAwNo8ACAQvQCgb70AwHM9AOAZvQCwtz0AAOQ7AEDEvAAwub0AQFG9AIA8PQDAqbwAgNg8AMC5vQAAcDsAwFS9AAAUuwBgAb0AwMi8AGAVPQAAELwAQI48AACgOwCQiL0AQO48AIAFvABAr7wA4HA9AMD6vADgBr0AwB89AIBYPQAA6DwAIEE9AICwvABgIL0AAMo7AIDRvAAATz0AsJ89ACA4vQBgGb0AwCI9AIARPAAAiTwAQNE8AMCavQCABjwAwHu9AAASvQAA4jsAAGg7AECMvACAObwA8N+9AIDMPAAAY7wAgHe8AIBTvAAArbwAAJc7AIAjPADAGT0AACK8AEC3PAAgJL0AALC6AIAOvQAAbrwAALi8AEDIvAAAdTwAoDK9AIBqPQAAADgAQMi8AMAwvQAAk7sAYDY9AOCWvQAAgDsA0Aa+AEDUvACALjwAUJa9AAC/OwAAcL0AADA8AADOOwAA37wAwPK8AADcOgBgXD0AAO67AEDSPQAgtr0AgKi8AAAovADgOj0AgGw9AGAcPQCAND0AkLY9AIBXPACAdLwAIDQ9AICCvACAhrwAgLa8AAAhvQAgHL0AQNc8AIC3vQAAcLoAQNC8AIDcvACABzwAsOI9AACeOwCgkL0AABU8AIDCvACABTwAQH49AMC5PADA0DwAoAS9AEApvQBAFb0AQAG9AIBQvABA/TwA4II9ALCgvQCggj0AILq9AABnPQBArDwAoIG9AECqPQDgST0AgJW8ACBKPQA4Bb4A4A69AABBvADghL0AADE9AECJvABAFD0AQOU8AAAeuwCQxz0AICs9AGCUPQCAfbwAALW8AIBMvQAACLwAQBw9AADeuwAAhDwAYBE9AFC6PQCALTwAgBE8AIC9PAAA6LsAADi9AADCvABA87wAYBG9ABCQPQAAxDoA4Ao9AEC1PADAyjwAwDG9AAClPABAWT0A4Lk9AKALPQBAn7wAwE29AICHPAAA/LsAALU7AAAkPQCgEj0AIEu9AIDZPAAAd7wAIEw9AIAUvACAzr0AwKM9AABcvAAAt7sAAIm8AAD9uwDAyTwAQI48AID4PAAAazwAYGU9AOAfPQDAzzwAwNS8AADjPADAdj0AoIq9AMDqvACAQb0AUIU9AIA0vQCAJz0AQJ28AADwOwBgDT0AAK68AIC4PAAA6TwAAM68AADhPABAwrwAEJQ9AACZuwCAjjwAAFk9AACsPAAAsDkAYAk9AACPuwAgAr0AAFE8AIDCvABgNr0AYE69AIAwPAAAbzwAKAc+AACevACAuLwAAAI7AICVvQDgmb0AAEw7AAA6PQAAabwA4JK9AAAxPQDA6LwAADi6AAB1PAAAvLwAAEG8AMA1vQCADT0A8KU9AAB6vABAnL0AAAC8AAAovQAAuLoAwLg8ACBovQAwDT4=","chunkHash":"adc328dd6d219f5aad1c7a48d47661ee48b2dc3e7c11ba6ac52ab0af9eca44fc"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def _average_window(self, window_files):\n        \"\"\"\n        Load a window of slices and average them for coarse texture representation.\n        \n        Args:\n            window_files (list): List of file paths to load\n            \n        Returns:\n            numpy.ndarray: Averaged image from the window\n        \"\"\"\n        if len(window_files) == 0:\n            return np.zeros((64, 64), dtype=np.float32)\n        \n        images = []\n        for file_path in window_files:\n            try:\n                img = np.array(Image.open(file_path), dtype=np.float32)\n                images.append(img)\n            except Exception as e:\n                print(f\"Error loading image {file_path}: {e}\")\n                # On error, append a blank frame if we have any frames, otherwise zeros\n                images.append(np.zeros_like(images[0]) if images else np.zeros((64, 64), dtype=np.float32))\n        \n        # Average the images\n        averaged_image = np.stack(images).mean(axis=0)\n        return averaged_image\n    #...\n```","range":{"startLineNumber":166,"startColumn":4,"endLineNumber":191,"endColumn":29},"embedding":"AAAjPABAtDwAgBS8AKBVvQAAm7wAAHW9AADaPABA+7wAQIW8AAAqPQDwhr0AwI68AKAoPQAAqzsAgB89AKBjPQAAtjwAIAA9ACCpvQCgMD0AAJo7ANCrvQCAwjwAQNC8AABLPADgIT0AAA49AABzvACArDwAAKg7AACUvQAAZbwAgEG8AGBhvQAAJb0AAIy6AADDuwBQ2z0AALg7ABCCvQAAzjwAYH29AKB3PQAAn7sA8MM9AKAivQAgPD0AgKC8AKBoPQCAbT0AgHS9AICoPQDAGT0A0Oa9AOAfPQDgkz0AgIA8AAB8uwBAtzwAICe9AIC9PQAAkrsAgFI8AOAMPQDAL70AQI68AACvuwCAgLwAAAM8AMCnvADgMb0AADA8AIAZvAAA37wAAGc8AACTPADAmzwAAMS6AACfuwCAfDwAAMC7AMATPQCAsLwA8JY9AMCiPAAQhL0AQHW9AABbvADA0zwAwMK8AAD8ugAAHjsAQEm9AEDDPADA8TwAgPq8AMA5vQAgDL0AcLU9AIBoPQAAiLoAAIg9AMAcvQAA/LsAANs8AEANvQAwgj0AcJm9AECiPABAXz0AANM7AEDLvAAAWT0AgLe8AFCNPQCgM70AUJe9AAAgPADgLb0AoCy9AJCFvQBAVT0AAE67AICBvAAAZzwAYFq9AEADPQAAFr0AQKq8AACUPACwvj0AYF+9AIC0PAAgWL0AAEi6AACxvAAALjsAAEQ7AEB8vQCQsD0AAA67ACA/PQDgUD0AQK48AKBRvQCAyDwAwIe9APCPPQAAgjwAcIk9AADRPADAnrwAgFU8ABCXvQBANb0AgGC9AABYPADAqzwAwA+9AOBvvQDgFr0AAIS6AOClPQCAtbwAAN27AGCEPQAAnb0AQK88AJCwvQBwm70AAEy7AADwuQDgaD0AYNW9AAAmPQBgXr0AAKK9AOAfvQBA4rwAgKW8AGBWvQCAhbwAAI+7AADTvADA3bwA4AK+AICSPACAe7wAYE69AMDHPAAAFTwAQMk8AADwvAAgUT0AQOG8AAAQOwCgcj0AUIk9AIB0PACAEz0AUIK9AMBtPQAA6bsAQNK8AGBFPQDAOL0AgCA8AACOPACAIL0AQOA8AMCjvAAA0zsAUKc9AOATvQAADjsAYHa9AECkvACAMT0AAL88AMCwPACASDwAAKi6AACyuwDwgj0AQCC9AADIugBA2rwAwGW9AIBTPAAgIb0AgFY8AADZvACgQL0AQCU9AMChPADAnbwA4Co9ACCMvQDAZz0AQEU9AIBFvAAAxjwAgOG8AMDAvADAg7wAIEw9AOCJvQCAML0AgCI9AAAIOgCgRD0AIEO9AOAlvQCAgL0AAHi8AECpPADgF70AADi8AOD+vQCAvjwAwKI8AMCDvADALL0AAIM7ACAkPQDAlrwAAC+9AMDQPAAwo70A0I89AMAaPQBgFj0AgNQ8AGAkPQAAtDsAwPo8AIBvPABA2rwAgNY8AOARPQBgdL0AgCS8AABGOwAwxj0AAKY7AIAgvQBQ8L0AgIk8AAAgugAgLb0AIAs9AMCXvQAAODwAACu9AID+PABA57wA8IG9AAAxPAAA1jwAIGC9AIDCPABAsr0AgEm8AACXPACAGzwAgFW8AMDFvABAtLwAwCU9AGANPQAAVrsAwCQ9AMBoPQCAHjwAAAa8AAD7OwBQpT0AQD+9AMCMPQAAWzwAAPG8AOBzvQDAiTwAYJ09AOBSvQAAdLsA0NG9AIALvAAAkbsAsOS9AAAUuwCAprwAAAQ7AKCcvQAAa7wAwFq9AAB7vAAAwLsAwJa8AMBiPQAAnb0AwOO8AABjvQCAcTwAALA9AABKPQCAHT0A4Po9AIA/vAAAuDwAAMG7AAArvABAHr0AgIQ8AECUPADAqLwAwOS8AKCOvQAAjL0AAPS6AACruwBAgLwAYMc9AICiPAAA4LkAQIA8AKCKPQAAQD0AwDE9AIAwPQBgMj0AAAI9ADDRvQCAsTwAIJ29AKAuvQAQ0j0AADI9AIAgvQCgRT0A8Lu9AGA8PQCACjwAAMW7AMAPPQDAxTwAAGi8AAAPPQCAhb0AAOC7AMCKPACQjb0AcIi9AADEOwAAtzsAwJU8AIBZPABgfz0AwDI9AHCAPQAAqLoAgKO8AAA4ugAgRL0AAD48AIA0PQAgG70AwF89AOAePQAALj0AgBQ8AICnvACATLwAkJ29AGABvQBATb0AcKC9APCBPQBARL0A4K89AIAFvQCg5T0AAL27AIB0vQBAgjwAsKc9AIBzvACgC70AAIS6AAA0OwDA5TwAAD47AOCBPQAAg7wAwAQ9AABoPAAAfjwAgOI8AMCzPACAGr0AACa8AAAlvAAA2LsAAIM7ABCcvQBAnT0AAFg8AMBzPQAA2rwAQIg9AAA0PQCATTwAAKg7AMAEPQCgPT0AoCe9AADOOwBgUr0AoC09AIA7vQDgSj0AQKM8AMCBvABgBD0AABg6AACWPACAbjwA4Ea9AMDqvAAA+7sAgHw9AACYPQDAzzwAACg8AOBSvQAgY70AQGo9AMCrvAAAkDwAIBq9ACAuPQBA17wAYBW9AIACvACAPj0AoDQ9AACEugBghr0AgDM8AGAdvQDgBr0AQM08AAChPAAAKbwAoFK9AEANvQCA170AgOQ8AMASvQAAwDkAAIA7AED9vACAxDwAADo9AABSuwAAELoAYBO9AADavABgIr0AAAA8AECuvAAA5T0=","chunkHash":"afae086e45a45ee5326b5fa28188cc4b356ac6c7998b378a91c7ca7c8e30cca2"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        \"\"\"\n        Get a sample by index.\n        \n        Args:\n            idx (int): Index\n            \n        Returns:\n            If predict=True:\n                torch.Tensor: Processed window tensor\n            Else:\n                tuple: (input_tensor_pair, target_tensor_pair) for contrastive learning\n        \"\"\"\n        try:\n            sample = self.samples[idx]\n            sample_id = sample['sample_id']\n            window_files = sample['window_files']\n            \n            # Average the window slices\n            avg_image = self._average_window(window_files)\n            \n            if self.predict:\n                # For prediction, just return the processed window\n                return self.transforms(avg_image)\n            \n            # For training, create two versions of the data for contrastive learning\n            target_views = [self.transforms(avg_image.copy()) for _ in range(2)]\n            input_views = [self.transforms_sim(view.clone()) for view in target_views]\n            \n            return torch.stack(input_views), torch.stack(target_views)\n            \n        except Exception as e:\n            #...\n```","range":{"startLineNumber":194,"startColumn":0,"endLineNumber":225,"endColumn":0},"embedding":"AKAlPQAwhb0AAMC6AKBqvQDAEz0AQPi8AIBfvAAAsjsAQCu9AADnuwAA/jsAAM27AEA/PQCAH70AwLI8AMCgPAAALb0AACG8AFDbvQBAPj0AwPG8AIBMvABAmDwAwGy9AGCcPQCAKzwAAMS7AACBvQBgZj0AAKI7AOAUvQCAbrwAgIS9APCRvQAAB7wAAOQ8AICwPAAQij0AgCy9AACBuwCAIz0AALG9AAD0OgCAD70AYCY9AMCzPACATjwAwEG9AACYOgDA2D0A0J+9ACBBPQAAZ70AgJA8APCfPQAA67sAADG9AACXPAAAfj0AAIo7AOAIPQBAFb0AAH88ADCSPQAAUrsAgA08AAC7OwBAPT0AQNU8AIAwvACAqzwAAOS6AECivACASzwAABk9AACOPQCgcz0AALQ6AIBGvQDAkbwAcJY9ACBJPQBwkL0AYEA9AIDAPACAiL0AIFi9AMD0vADAWz0A0J69AICTvACAjjwAwIO9AADsugDgMT0AgNo8AMAUvQAANLwAwLE8AMBRPQCApDwAACQ8AABUOwAAOb0AgCY8AMDtvADAnDwAAPa8AEDGvAAgnD0AYBC9APCWvQCAnDwAUJM9AGBIPQAA/rsAAJk7AMDgvAAAAb0AwAu9APDHvQAAIj0AAN+7AOAEvQBAK70AQLO8AEChPQBQtr0AYGG9AMC5PACQlj0AICy9AACevACAOrwAgEi8AGA6vQBAcT0AQMk8AMCzvQDgcz0AYCW9AADoOwCAYzwAwNw8AKCNvQBgDL0A4By9AEB7PQDA6TwAYAw+AIBZPACAdrwAAB67AMDgvACAarwAQJK8AAAhvAAA2zsAAPa8AECWvAAATbwAAGA7AMCMPABA/DwAAIm9AMBSPQCASL0AAHQ7AEBbvQAAbbwA4Dc9AKATPQAAyjwAABu8AMArPQCgDb0AoLW9AAA7PAAAQjsAQFW9ALCrvQAAljwAANg7AABQOwAAATwAkM69AAB5PAAA9bwAUMm9ACAVvQAAULoAICw9AADKvADAsjwAAJg7AABDPACwiT0AIHI9ACCcPQCAczwA8M+9AKBOPQAAxLwAYIQ9AID/PACA5DwAAEG9AJCRPQAAsLkAYDq9AAA6PQCgWL0A4DI9AAAlvAAAh7sAgEO8ACCnvQDAlDwAQJe8AICZPACAa7wAAH88AABCPABAmj0AIDU9AOAnPQDAMj0AAGG9AED6vAAAirwAsJ69AAB/vAAA2LsAAN67AEBUPQCAI7wAgAM8AABOvQAAbz0A8Mq9AOAivQDgAL0AoHC9AABXvQAgJj0AAKA7AMCnvADQh70AEJ09AIA/PAAglj0AIIK9AOBGvQCgQr0AgAY8AOAcPQAA2DsAgB88AEB3vQCgKj0AAHC6AAB6uwAAUrsAAGk8AIAyvQAgFr0AQCA9AABCvADAdr0AAGQ8AACCvAAA8jwAQLw8AADduwBgOL0AgJ+8AOBTPQAA+rsAAC+8AADQvACAib0AgH69AEDjvAAAybwAMKA9AKAZvQDgR70AAMK8AAB4uwCAczwAAIo7AGDNvQCAE7wAsN+9AKB7PQAAKzwAgOu8AMDqvAAA/7sAQHe9AICGPAAAQ70AYB89AADbuwAAtbwAAEu9AED4PACQoz0AQLs8AEAiPQBAD70AIDE9AAA6OwAAOLsAQCE9AACtuwCwtD0AAGq7AECXPAAAnLsAkIO9ACBFvQBQiz0AUPs9ADCHvQAA8DwAMLO9AEB/vQDAtzwA8Im9ACAqPQCALL0AwBW9AID2vAAAlDwAAB89ACBOPQAAlLwAgGW9AMDRPADw8r0AwKs8AIAlvQAA+LwAALA8AAB7PAAA8zwAYFo9AIDfvADgeL0AAAC6AAAPvABA97wAgDO8AECuvAAAx7wAAMA7AMCCvACQs70AQEK9AOA5vQCAXbwAIPI9AADwOwBAIT0AQPo8AOAZPQAA7LoAoIA9AAAIuwDwpz0AAIY7AAB8vADgDb0AQOi8AEC4vACAQz0AwBM9AABFPQCoBD4AQGW9AAASPAAAB70AAPq7AGAyPQAgPj0AgDE8AICFvABArL0AgC28AKAMvQAwnb0AIBS9AABJvAAAQj0AIIg9AMCsPACgXD0AoGo9AACOPQAAwzsAQC69AIDDvABwxr0AACq7AABLPACAdrwAMMA9APCPPQCArLwAgDc8AOCCvQAAtjsAgCW9AOAWPQAAlzwAACq9ACAVPQAAcDoA4C09AGBYvQAAnrsAgDu9AGAFvQDAfb0AQAw9AMDNPACAMLwAAHS8AAB2uwCgIT0AgDW8AMCQvAAABrwAgIi9AOAIvQAAoTsAgK08AAD9PACwhb0AgH48AGBbvQCAEb0AgJE8AACzOwAAeDoAwKE8AAAkvQAAGLwAAIC7AEDVPACA4jwAoBk9AGAaPQCArjwAYNq9AMD2vACAiL0AoBQ9AMC+PAAAIL0AQIy9AACuOwAA4zwAgGU9AAAaOwCgPj0AoDy9AIAWPQAAFLwAAH08AIAdPACAlLwAAEu8ACAcvQAAfLsAIIU9ACAVPQDAmLwAgA28AAB7PADAprwAUIi9AIBYPACAvTwAwF89AMC9vABA0rwAoBw9ACCevQAwxr0AgMU8AMBfPQAAU7wA4D69AMAMPQAANLsA4AI9AADcuwBAAz0AAP47AABoOgCAx7wA0K49AMAIvQAAcLsAAI28AIA3PACA17wAAC49ALCGvQBYAj4=","chunkHash":"ec9c53b64ca2dc1678cb0a8ca9b10f7c5720fa8b65778922c6b6468f72c04fd6"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        #...\n            print(f\"Error in __getitem__ for idx={idx}: {e}\")\n            import traceback\n            traceback.print_exc()\n            raise\n#...\n```","range":{"startLineNumber":225,"startColumn":0,"endLineNumber":228,"endColumn":17},"embedding":"AADwugBAoLwAwK08AAAnvQDA3jwAwMi8AAAgugCAxDwAYGC9AMCkvAAA6LoAgHS8AAAtvADAxrwAAAS7AGAuPQCA7jwAgAm9AED9vQBApT0AgEg8AACdvAAgKz0A4Hi9AGAjPQDAyjwAAIs7AMAOvQCAjjwAgPM8ACBvvQCgKr0AQJW8ALCFvQAAhbwAAJi7AEBfPQAgQj0AwAA9APDTvQAgJD0AYIK9AIB6PAAA9DoAgL08AACgOwBAGT0AwJu8AMB5PQAAWDsAMKm9AECaPQCAK7wAABu9ACA7vQCAQzwAgBW9AIAfPQCAtzwAkJG9AKCIPQAgSb0AQH29AECuvADA4LwAwB29AAD4OgCAijwAQJW8AKAuvQBgMb0AAKy7AAA3PABAyrwAoDY9AACYugBgXz0AYKo9AIBUvACgX70AAOs8AGCrPQDQkr0AQGE9AGABPQDwhb0AQJq9AGCYvQCA+DwA4NC9AADCvADAmTwAAO07AAA4PABAQz0AgAc9AAC1uwAAFL0A4EI9ACA3PQCAqDwAALY8AAA2uwBA/rwAAMg7AGB1vQBAm7wAUK69AABSuwBQpz0AIAi9AABKvQAAmDsA4AM9ACBcPQDgFr0AsM69AEDJvABAJ70AACG9AMBivQAApjwAALo7AEDdvAAApLwAACC7AGB+PQDgVL0AwDu9AMAyvQDAhj0AgI28AADRuwAAYL0AAPK7AIAbvABAx7wAAKC6AEAzvQBgUD0AIDi9ALCaPQAAPDwAACy7ACBRvQBwoD0AAKW8AAB6PQCwwj0AgLU9AIASPAAA1LsAwL48AADOvADgWL0AgLe8AAAAPAAAwTwAgBU8ABCCvQAA0DkAAEC5ACCyPQAAnDoAwLW8AEChPADAOr0AAAq9AACavQDAJ70AAIQ7AAAgPAAAQbwAYJ29AAD/uwAA4DkAYBa9AIBhPAAAM70AALK7ACALvQCAqL0AAKU7AIBXPACAoLwAGCq+AIDjPAAAwTsAgDe9AACruwAAlrsAwFk9AMDkvACA2rwAQBQ9AAD/uwDAwzwAgBY8AACBPACgZD0AQJW8AEDZPQAANLwAgDS8AIA4PABAubwAkMq9AMDqPABgDb0AAOq8AIDEPAAAnzsAAJS7AACiPACA9TwAAAW9AEDXvACASD0AwK88AICnPADAgzwAAJm8AAAiPQAAsLoAAKs7AGAYvQAABzwAAMO9AOBivQAASrsAwPg8AMC3vAAAcTwAACQ8ALCJPQAAeL0AAKe7AEB+vQCA3DwAADg6ACBvvQAAsTwAgE+9AAAavAAA0TsAAFA7AMC7vADwir0AcJo9AAAIOgDwkz0AAAA8AMDCvACw4b0AwL28ACAhPQBAwrwAgKa8AKDNvQAAPLwAgCG9AICCPACAXLwAADA7AECPPACwvL0AgJg8AAB3vABgf70AAJi6AAAaPACAB7wAANU8AAC1vACAwLwAAHI8AIBYPACAjTwAAGo8AIAWvABgR70AwBE9AACOOwBA4jwAABo9AKAsvQAw3r0AAJu7AABKvQAACLwAgN08ADgAvgCAPrwAABW9AICVvADAhLwAAMi6AACMvQCAvrwAgMC9AIC+PABgAr0AYGO9AIBMvABAEr0AYAS9AKBtPQAAGT0AwBM9AIBaPABQp70AAMi6AAAnvAAABjwAAAo8AICjvAAAFz0AQPW8ANCDPQAAQDoAoCq9AAB4vQDgar0AAGQ9ANClvQDAPz0AsBm+AACrOwAAqjsAgDy9AEDuvADgUL0AgAC8AIDBPABACz0AANG8AACKvABQvz0AALg6AAAUPQBwoL0AwIy8AICHvAAAkDsAAGo9AAA2PACAFTwAAIw9AAArvACAGb0AALo7AABXPAAAGr0AwOU8APC0vQCAvrwAAM68ABDGvQDAqbwAAOM7AMC7vAAA7LsAkMk9AABIugAAlrwAAEi6AAAkuwAAyDoA0JI9AACBPADAVT0AQMW8ADC/vQAAoDsAoE29AADtuwDAKD0AABs9AOAnvQCQ2z0A8IK9AKANPQAAEDsAQDG9AOBjPQAAdT0AAFw7AECPPAAw8L0AAPG8AMDlPADghr0AoBO9AMC1vADAAT0A8Jc9AAA6OwDAwD0AELA9AFDYPQAASbwAYAa9AGBAvQBAAb0AYBY9AABGPAAAwLgA8Jg9AMAyPQCAY7wAgHQ8AACMPAAATjsAQJS8AEDnvADAL70AgIO9AECHPADgBr0AsKs9AABKPACAkTwAwOG8AABOOwAASLsA8K89AIDpPADAfb0AAIM7AADIvABAAj0A8IO9AAB4OgAgLz0AAGu8AADfPAAAwLkAAHk8AEC0PAAAYr0AAKs7AACluwDAjDwAALS7AIDtvACACTwAALQ8AOBPPQCA7bwAADA9AHCJPQDApDwAAFI7AAC6OwDQlz0AEJO9AAB4OwCgqb0AIGM9AAC+PABgDT0AAO47AABmPADgiT0AQKG8AIAMPACAYzwAAIa7AAC0vADAWL0A4Dg9AMBBPQAAiTwAgE48AIBlvAAAAz0AwC89AABeuwCAP70AAMA5AAAnvACANLwAgKm8AEDivACAEz0A6BA+AACAOQBAirwAQKC8AICevQDANL0AQOg8AEAgPQDAjbwAAG69ACAMPQBAurwAgGe8AAD8OgCA7rwAgOy8AIAXvQBA5bwAYJ89AMCFvABgC70AYFU9AICMvAAgBD0AgFg8AMDUvACADj4=","chunkHash":"f0620519ce915dec32b8a0dc677d48db24925cd235fb5580de1b3b2cf07f60ec"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nclass LowResContrastiveDataset(Dataset):\n    \"\"\"\n    Dataset for low-resolution image patches with contrastive learning support,\n    compatible with MorphoFeatures texture models.\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 transforms=None,\n                 transforms_sim=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 target_size=(64, 64),\n                 sample_percent=100,\n                 z_window_size=5,\n                 z_stride=2,\n                 predict=False,\n                 debug=False):\n        #...\n    def __len__(self):\n        #...\n    def _average_window(self, window_files):\n        #...\n    def __getitem__(self, idx):\n        #...\n```","range":{"startLineNumber":19,"startColumn":0,"endLineNumber":193,"endColumn":31},"embedding":"ACA/PQAASTwAAJ07AOBgvQAApDsA4AS9AIDdPACA/jwAoEq9AEA1PQAgR70AYFa9AIDhPAAAfbwAgL48AMB8PQBgTT0AAOc8AJCLvQBAfD0AAMC5AIBRvQAA5bsAgLG9AKBIPQAAMTwAAAm8AAApPABAGz0AACU8AMDEvACAKLwAsLy9AMDvvADAwLwAACk8AIAOPQDg4D0AgB69AMDyvACAXzwAAKW9AAA+OwAAKLoAwNC8AMC1vAAAhD0AgGI8AAArPQBgYT0A0L+9APCqPQAA6jwAwHy9AIAdPACAOz0AgMk8AAALPABAMb0AwNS8ANCLPQBgFr0AgFe8AEBrvQBAnbwAAE48AKBFvQCAC7wAgBi9AAAOuwAAfzwAANC6AIA8PABA9bwAAE48AADcPAAAyjwAkLw9AKArvQAAp7wAAPE7AFCpPQDAKr0AAMM8AACoOgBgZL0AYFa9AGAMvQAAxzsA0K69ACABPQCgYj0A4Fe9AIAjvAAAbDsAAL67AMAxvQBAjr0A4KQ9APCBPQDAyjwAAIU7AMAGvQAA3LwAAAC6APC8vQAAjzsAYM+9AADsPADwyj0AgGS8AIA/vQDAUj0AAAg6ABCtPQDwo70AIIK9AADvuwBAs7wAgHC9ABCvvQAAUDwAAD08AACAOgBgUT0AAG68AECFPQCgI70AYA69AMDWvAAA7zwAgFe8AACPvABQjb0AQC+9ANCcvQAAjbwAAJk8AADFvAAARDwAAMC7AADKPADAQD0AQCI9ACCXvQCAXzwAIDu9AACsPQBA07wAcNo9ACByvQCgB70AYLE9AAChuwBQx70AgH+9AADHvAAgDD0A4Ba9AKBRvQCgQz0AAJS8AGCePQBA4DwAAPQ7AMAePQCgjL0AQNU8AGC9vQBgXr0AwEc9AKAiPQCAmzwAgJy9AAAlvABgF70AQFO9AAB+OwAAK7wAACK8AAB4OwCA07wAwLa8AADyOwCALb0A8Oa9ACAKvQAgBT0AwI28AIAiPACAvrwAwMg8AMDbvAAAB7wAABC6AAAQOwAAMT0AwAY9AADDOwAAlzsAMJK9ABCCPQAgBL0A4Ca9AADoOwDArbwAcL69AIDAPADAKr0AAD88AIBOPADAdz0AQAk9AADzuwDAoTwAQPe8AKAUvQAAEDsAQIE8AAAMPACA5DwA4IC9AKBtPQBAQz0AAFq7AICRvAAAC70AEKu9AEAavQCgKr0AAAC8AEA7vQCgMr0AAKg8AAA0OwAgur0AAEM8ACBuvQAA7TwAgBe8AMAtvQCAYzwAAKq9AAAQugBAyzwAwLA8ADCFvQCAfL0A4BQ9AADhvACg5T0AgCk8AMCVvADwrL0AAEC8AIAPPQCA/LwAAEQ8ALDvvQCAMTwAgBW8AGA0PQDAJb0AALC7ACBUPQBAT70AABO9AADDuwDgQb0AYCs9AABuOwAAzDwAIBA9AACOuwBga70AALQ8AIApPAAAAT0AgPo8AAAUPQCAHL0AQLq8AMCYPACQzD0AwKo8AIA1PAAgIr0AQJ28AOAfvQBA07wAgLY8AECsvQDA8LwAgHy9AADWvACAbbwAAOy8AADAuwCAfjwAQLG9AIAnPQBAg7wAgIO8AIDovAAAULwAgDc8AEBRPQCAzLwAwKg8AADLOwDggb0AQFu9AMDIvACAkLwAQO28AEATPQCAzzwAwCW9AAA/PQDAwzwAYJq9AKBIvQAAtDoAwA09AOBcvQDgBb0A4Ne9AADyvADArLwAYDG9AAD8PACwjb0AgA49AAC0ugAA+LwAgJW8AECUPADAFj0AAHK8AOBxPQAwFL4AgLG8AKBcvQBAqDwAYCg9ALCHPQAADzwAULc9AMCoPACAAjwAAG47AABmvAAADrwAABM8AECFvQCAlbwAgJS8AAB+vQAAvTwAACA6AMCkvADAHD0AAG89AMCaPABgQ70AQOs8AADwvACgNj0A0Is9AABSvAAgGz0AQM28ACClvQBAqjwAwEC9AACQOwCgYj0AgBU9AIBrvQDgIj0AgDe8AMAQPQBAgTwAACa8AABLPQAA/TsAAIE7AABovACQvr0AAIC4AAC8PACAZrwAADW8AACYOwDAuDwAwKE9AIABPAAAAT0AsIc9AMDXPQCggr0AEIG9AIBmvQAA0zsAIBE9AAB5PQAAgLkAgJg9AAAmPQCAqTwAwNA8ACAJvQAAIrwAgCG9AAAdvQAAO7wAIMq9AAAQPAAACDwAgNk9AGAmPQCAbT0AgAC8AIBKvQCAJD0AQOQ9AMC8PAAARbwAoEC9AIBYPQAAoDwAAGg7AIAbPQAA0DsAQKC8AMC+vAAA+DoA4CQ9AIADPQAAl70AIBM9AADkuwAAlDsAgFk8AACPOwAALDwAwPo8AEBRPQAAKb0AANe8AAA/vADgCj0AAPE7AACAugAgvD0AgHS9AECovACAN70AYG49AAAnvQDAZz0AAC28AAASPQCAHbwAAJG7AGAHPQCAcTwAAE69AIAuvACQi70AEKQ9AAD9PADgIz0AwFs9AIAXvAAAIb0AwPQ8AGAGvQCAHrwAAIa8AKAFPQCA9rwAoE69AACeOwCArTwAKAI+AOA4vQBgab0AQIs8AGCKvQDAv7wAgLo8AAAQvAAAQ7wAABG9AECsvABQm70AAGy7AAC4ugAAODoAIAC9AEA8vQAASzwAkJk9AEAVvQBgTL0AAMA6AIC8vAAAtLwAgJg8AABYugCQ4T0=","chunkHash":"b2e1335128f6886c3d6ca80d83add49f155df9b375a56c81f7a2dc4006113110"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\ndef get_lowres_contrastive_loaders(root_dir,\n                               batch_size=32,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(64, 64),\n                               sample_percent=100,\n                               z_window_size=5,\n                               z_stride=2,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    \"\"\"\n    Create train and validation DataLoaders for low-resolution contrastive learning.\n    \n    Args:\n        root_dir (str): Root directory containing the samples.\n        batch_size (int): Batch size.\n        shuffle (bool): Whether to shuffle the dataset.\n        num_workers (int): Number of worker processes.\n        transforms (callable, optional): Base transform for target images.\n        transforms_sim (callable, optional): Transform for creating augmented views.\n        sample_ids (list, optional): List of sample IDs to include.\n    #...\n```","range":{"startLineNumber":249,"startColumn":0,"endLineNumber":260,"endColumn":0},"embedding":"AACrPACAETwAoDs9AABpvQDAxTwAwHO9AIBJPACAAbwAYNq9AEADPQCAGr0AwMM8AABcPABAp70AgDs8AACsPACA9jwAgGy8AACIvQDAaD0AQCA9AIBrvQCAHz0AMI29AMBNPQBApbwAwNq8AAD+PAAgCj0AID29AIA4vQAAe7wAQBi9AIAcvACAVTwAAKa8AOAdPQCQxT0AABS7ACAXvQBgYz0AoOq9ACApPQBgND0AAPU8AEC0vABAFz0AAAQ7AADlPACAEb0AsI69APDVPQCAoDwAgIS8AACQOgDAZT0AQDe9AABkvAAAkDkAwP68ACA0PQBAY70AgB08AIAHPAAAdTwAwL+8AIBkvQAA57wAAE69AAAMOwCAYTwAgIG8AAAwOwCghL0AgHM8AIAtPAAAcLsAAJc9AGBAvQAA+7wAgPM8AAA0PQAAZjwAQKg8AABMvQCAmr0AwCm9AAC4vQCAbT0AgIO9AEBJPQAAGDoAIF69AICzPAAAQLsAgFC8AMBhPQCAuLwA4II9AICDPQAA9jsAAO47AGA4PQBAJ70AALU8AADcugAgBT0A8K+9AACmvABAeD0A4G29AKAXvQAgjD0AAFu9AIBgPQDghr0A4Ai9AIAHvQCAO70AIBa9AIDVvQBAa70AoFU9AEDOPAAAkLkAQMK8ANDBPQAAjrwAAG47AABYuwDwmz0AADM8AEDOPABAkL0AAIG8AOBbvQDAwLwAgLc8AMARvQBAgD0AwMO8AOB6PQCA97wAgCM8AABTvQBA8DwAAJa7AKDGPQAAbbwAgAU9AHCovQBAJb0AQKe8AEDXvADQn70AYBi9AADFvABAXT0AAJo7AJCdvQBA9TwAADq7AJCZPQAAnTsAAOA5AGA/PQCAgzwAAPy7AACQvQCA77wA0LE9AAAOPAAA0rsAYDO9AADdvACgBT0AINy9AIC7vAAAWLsAgI+8AIAsvACA4LwAQI88AED+vACwlr0AAKK9AABiOwCAMLwA4Ca9AIDAvAAAoLoAAB09AIAFvQDggD0AgAc8AAAGOwAAdj0AgG49AIBWPQDARj0AADw8AMAcPQAAHTwAYB29AAB6OwAgQr0AQDS9AIBUvAAAvjsAAKe7AIAZPQCAtDwAoDM9AMDEPAAAl7sAAIK8AEAqvQBgCj0AwI08AEDDPADA3TwAwKC8AGBXPQBQgT0AwKC8AAB/PAAAQ70A4Iu9AACivAAAYLwAwOA8AICFPABA4bwA4Bw9AMDSPACwr70AQEG9AOA2vQAgDz0AAOi6AEB4vQDAMj0AAAU8AMBJvQAAjbwAgAu8AIBnvQBgfb0A4CM9AAAivABQrj0AYEO9AAA+uwBgcr0AgFq9AEB5PQAgIb0A4IO9AGCnvQCALr0AAF88AICYPAAACDwAQNE8AGARPQAAsLsAAOw6AICdPABgAr0AgNI8ACBgPQAAcjsAYDg9AEDdPACAMb0AAHQ7ANCJPQAATjsAgCU8AAAUuwCAN7wAQJQ8AADCuwCgFj0AAK68AABMuwCAx7wAQKW8APCMvQAA0DwAAMI7ADC1vQDgXb0AAIy9AMCpvABApzwAgFI8AAA3PACAgjwAIKC9AMDIPADAzDwAgGs8AFCAPQAAvzsAIHe9AIDAvAAgCL0AAAG8AIA+PADgnL0AYFw9AACqvAAAgrwAAOy6AADHuwAAgjwAQKS8AIDnPAAAwLoAwGK9AAABvQCA2LwAAPg8AIB+vAAAYj0AgHa9ABCCvQAAlb0A4AG9ACAyPQBQvL0AAEQ8AAAyOwCAHr0AAEu8AMCpvAAARzwAAM88AKADPQAAkr0AAI87AEDDvAAAeLwAAAw9AHCfPQDAxDwA4DA9AMDzPADgWj0AAOc7AACkuwBAs7wAACI9AIDmvACAmrwA4Hi9AMAHvQAA8LkAANa8AIANvADgMT0A4Dw9AADQPACAKjwAIHc9AABCvADAoDwA0IA9AGBgvQCAyD0AQMO8AECBvQAAmrwAELO9AECevADgyz0A4Eg9AADbuwDwwT0AAA08AIBZvABAtLwAwAm9AAAkuwDAMT0AgNY8AACAuwDAfL0AgIy8AADiPADgZL0AQAu9AABnPACAID0A0OY9AACDPABwhD0AoDA9ACCKPQDgK70AAL27AJCxvQAAgDsAAIc7AAASvQDAzTwAAAU9AEDPPAAAZrsA4DI9AEDsvAAAdTwAQBK9ACAlvQDgWL0AIKu9AAAkOwCghb0AQBk+AACWvAAA+LoAgNa8AAACvQAgDz0AkKQ9AKCTPQAAt7sAgAG8ACBJvQDA57wAAPu7AKBPPQAA97sAAAW9AEDxvAAgjr0AAJU8AMCTPQAAdb0AwN48AABHPQCAhTwAwNE8AHCEvQBARz0AQBS9AICVPQCAuLwAgEe8AEBqPQDAtDwAAKi6AMDdPAAAtDwAcLy9AMDevADALb0AIOA9AADPvADgQD0AwJA8AKAPvQDAjbwAwGQ9AAB0PQCAX7wAAE69AMDePAAA2bwA8Jk9AECRPADgAb0A4DE9AAAtvADAdr0AAL87AACqvABARL0AgCo8AGAKvQAAm7wAIHq9AEDDvADgRT0AgNM9AED3vACANjwAwOw8AFDNvQBAcL0AoDk9AAA1PAAAL7wAwEa9AACfuwCgGL0AwB89AABvvADAojwAALi7APCSvQCAxbwAYIQ9AMDYvADoCr4A4Fa9AEDFvAAAQjsAAL48AACePABwAD4=","chunkHash":"406d59c6f7cd79651978581e629d23c8d54dc01f35ee40f8b287f99eef0a01ae"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\ndef get_lowres_contrastive_loaders(root_dir,\n                               batch_size=32,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(64, 64),\n                               sample_percent=100,\n                               z_window_size=5,\n                               z_stride=2,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n        class_csv_path (str, optional): Path to CSV file with class information.\n        filter_by_class (int or list, optional): Class ID(s) to include.\n        ignore_unclassified (bool): Whether to ignore unclassified samples.\n        target_size (tuple): Target image size (height, width).\n        sample_percent (int): Percentage of samples to load per class (1-100).\n        z_window_size (int): Size of each window along z-axis.\n        z_stride (int): Stride between windows along z-axis.\n    #...\n```","range":{"startLineNumber":260,"startColumn":0,"endLineNumber":267,"endColumn":0},"embedding":"AEDEPAAAbLwA4Dg9AOAEvQDAvTwAwG69AECBPABAgLwA4Lu9AAA5PACA8bwAwP08ACA4PQBgLr0AQMo8AMD+PABAIT0AAI87AFC8vQCgYD0AgCM9AADfvAAA6DwAoJq9AADhOwAATbwAAGy8AICcPABAYj0AACS9AKACvQAAsrwAQO68AADnOwCAR7wAgN68AIAHPAAwoD0AgHA8APCCvQBAKD0AILO9AABtPACAijwAoEk9AIAtPACASz0AwNy8AADnPAAAaDoAsIi9AIC+PQAAgTwAAAAAAAAWOwBQhT0AAJu8AIBbvADAgjwAQO68ACCYPQDgXL0AAHQ8AECEPAAAALgAAGG8AMANvQDArLwAQBC9AAAQvAAAlzsAAK28AAAHvADgob0A4AI9AECvPAAASrwAoGI9AKAxvQCA/7wAAF88AKBqPQDAvDwAwAw9AEAQvQBgvb0AACa9ABCbvQCA4TwAoFi9AABDPACAKDwAQDK9ACAOPQAAcbwAAA+8AICEPQAAPb0AQHE9AGBfPQAgPz0AACa7AIDBPACgAb0AAIi7AIDSvAAA9zsAsOK9AAC9vACAmz0AQAK9ACBdvQBAHz0AgLK8AKCVPQAgIb0AAA+9AIBivADgpb0AAHS8AMDUvQDAO70AAJs7AEDZPAAAm7sAAO67ABC0PQAA4LwAgGU8AMDQPACAOD0AQIW8AIBnPAAgzb0AgEi8AGDEvQAA9rsAABs9AMC4vACgdz0AYEi9AOBBPQAAPr0AwI68ACBxvQAAyTwAgJS8AFCWPQAAALgAIA09AGCKvQAASb0AgJm8AKAKvQCAs70AgEa9AAAzvADAcj0AAKy7AOBtvQAA6TwAACA6AOCDPQCAPDwAgAs8AKBRPQAApjwAwOO8AKC1vQAAsrwAsJ09AADOOwBAnTwAEIy9AACYugCgIT0AEM+9AAAyOwCAH70AYB+9AAAUOwAAEb0AAMk8AOBfvQCQmL0A4MC9AAAgOgCA0DwAYCm9AAAIuwCAIT0AYGg9AOAWvQDA0jwAQJo8AMCdvABAhD0AIFM9ACARPQDAXT0AwL+8AECaPQCADj0AAJS8AMDsvACQjb0AAGW8AAD+vACAC7wAgGW8AACOPADA2TwA4BA9AIC1PAAAyTsAwBC9AKBJvQBwkT0AQAo9AMDOPABAIz0AAC48AMAAPQBgNz0AgKG8AIBrPAAAFLwAQJ+9AADOvACgDb0AYCw9AABiuwCAjbwAQDA9AMDePACAWr0AQDm9AECBvQDAkjwAgLe8ACB1vQCghj0AQIY8AMCWvAAA1bsAAGS7AICGvQCg7r0AgJ48AABsuwBQjj0AgA69AAB+vABAvb0AADK9AICWPADANr0AgAi9AFCWvQAgS70AAKS7AGAAPQCAbLwAACi8AOAKPQCAdLwAACg6AACDPABgQL0AgCA8ANCDPQCA2DwAADs9AAAAAADgi70AACg7AMCIPQDA+DwAACk8AACYOgDAF70AgI48AAA8OwDAOT0AAEi8AADAuwCAHr0AAAs8AEBKvQCACDwAANi7ACB8vQBgIr0AULq9AECsvAAAkzsAgEK8AAAhPAAATDwAQHS9AICMPAAAvDoAADy7ACAjPQCASTwAQBS9AAC8ugAAUrwAACq7AADBPADgoL0AwOw8AADUuwAAYrsAgD88AIAhvACASTwAAMe8AMAiPQDAmrwAoGi9AIBjvQAAjrwAoJE9AEAQvQDARz0AcKy9AMBIvQBAprwAIAy9AABzPAAgnr0AALo8AABFPADAJL0AQIa8AIChvABARz0AAOo7AABfPQBQq70AgOY8AMAbvQCAcjwAYGY9AAAmPQDgFD0A4E89AMAVPQBA0jwAANI7AADLuwBgDL0AgGE9AADougCA2rwAoCC9AIBGvQAABLwAAOm7AAChuwBABD0AAJw9AMDQPACAKjwAMJY9AAC+vADAKj0AoE09AEAHvQCwzT0AwIu8AIBUvQCAMb0A0J69AIDGvAAgsj0AkJg9AAAcvABAuT0AALQ7AMCIPACAdbwA4Aq9AAASOwDADT0AAPY8AIBPPADg5L0AAJI7AACvOwAAWr0AAPI7AADLvADApzwAgJo9AEDUPABgWj0AQEI9AEBzPQDgMr0AwKa8AOCnvQCA57wAADa7AACxvAAArLwAgLs8AMCDPADA0rwAYCo9AMC4vACAyzwAID69AADqvAAgMb0A0Mi9AADVOwAgV70AiBk+AABfPACAqzwAAFi9AABOPAAAUjsAgM49AECJPQBAubwAAEq8ANCYvQAAvLwAgEK8AEDKPAAAhjsAAIi8AAAavQAAc70AgB49AFCmPQAAer0AAJA5AEBJPQAAODsAgCi8AOBzvQBgQj0AQAa9AKBiPQBA8LwAgO68AAAwPQAAh7wAANa7AEDtPAAAmjwA8KS9AKAcvQCAhb0AUO89AAAEvQBgPz0AgBc9AAA4vAAAFLwA4D89ALCiPQAAhrwAoGu9AEDwPACAFTwAAI49AGAvPQAAM7wAAOQ8AIDivACASr0AAJc8AIAGvAAgTL0AYC+9AIDRvADALL0AgI+9AAApvACgMT0AkAs+AADsOgCANjwAgG48ADDAvQBge70AQP08AECMPAAAXrwAwFG9AEDTvAAAF70AwLo8AABAuQAAVTwAgDC8APCfvQAAmLsAoIo9AAAfPAB4Br4AQDK9AADvvADAmDwAgPA8AADmuwBw+j0=","chunkHash":"da1aa579a3251246a0ba8179b33029dcdbf3def069c7ba470a042a1eb799432c"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\ndef get_lowres_contrastive_loaders(root_dir,\n                               batch_size=32,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(64, 64),\n                               sample_percent=100,\n                               z_window_size=5,\n                               z_stride=2,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n        validation_split (float): Fraction of data to use for validation.\n        seed (int): Random seed for reproducibility.\n        pin_memory (bool): Whether to pin memory for faster GPU transfer.\n        debug (bool): Whether to print debug information.\n        \n    Returns:\n        dict: {'train': train_loader, 'val': val_loader}\n    \"\"\"\n    # Create the full dataset\n    full_dataset = LowResContrastiveDataset(\n        root_dir=root_dir,\n        transforms=transforms,\n        transforms_sim=transforms_sim,\n        #...\n```","range":{"startLineNumber":267,"startColumn":0,"endLineNumber":280,"endColumn":0},"embedding":"AMCpPABAk7wAQL08AABNvQDAET0AoEC9AACgOgCAYDwAAMe9AECGPADgGr0AQOk8ACAyPQCwob0AQNU8AAACPAAAxzwAQIi8AOC8vQCgVD0AIDs9AKA2vQBgPz0AgKm9AICsPAAAVDwAQOu8AAAYuwDgBT0AAGq7AAA1vQDApbwAQDe9AIB5vAAAgbsAAJc8AGCDPQCgej0AALA8AACMvAAAYj0AILK9AIAJPAAgCz0AwPg8AIDZvABgHj0AAHG8AGAjPQAAcrsA4Fm9ANDDPQAAsLsAALy7AICdPACATT0AQLi8AEC0vAAAxbwAgBi9AABUPQBAK70AgDK8AADsOgAAHDwAIBW9AKA0vQAAeDwAoEq9AECgvAAAiLwAgDi9AAAkOwAAaL0AgD88AECxPAAAuTwAYI89AEAxvQAQhr0AgB48ANCKPQDA0zwAwLU8AEAAvQBg9L0AQF29AMCyvQDAJj0AMLW9AKAuPQDA37wAwJi8AKArPQCAD7wAoAS9ACA0PQCgBL0AYGw9APC1PQDAND0AAHm8AAByuwCAA70AgAu8AACYvAAASjsAsOe9AACevABgxD0AAHC9AOBivQDANj0AIDC9AMACPQCgbr0AIGC9AABDvADAZL0AAFS9ACCTvQBAW70AgOw8AAAAPACALDwAQP48ALC7PQAgIr0AQKi8AICCvACglD0AgMW8AMDIvADAnb0AgIm8AAA/vQDgWr0AgD08AEAsvQDAmDwA4B+9AICdPAAAXbwAgMu8ABCNvQAAYT0AgFG8AKCcPQCADrwAgFc9AFCcvQCAh7wAALY8AABCvAAAir0A4DW9AMClvACgcj0AAAw9AOCavQDA3TwAANk7ALCZPQAAs7sAQO88AOBJPQAAWbwA4Cq9ALCNvQBA6rwAoHw9AOBNPQBA7LwAsJe9AABcuwCAgDwAKAK+AECPPADAprwAgMa8AAAJvACATb0AAP08AABIvQDwg70AMLW9AABnPACAVLwAwBu9AABjvACADzwAYDc9AEAJvQDgBT0AwAA9AAAdvACgbT0A4II9ACBePQBATz0AALU7AOC+PQDAuDwAgJu8AICVvAAgEr0AwHe9AICovAAAJLwAAMq7AMCwPAAgTj0AwB89AGAEPQCgET0AwIm8AMA3vQBgZT0AAMo8AKBxPQDAGD0AAAA5AKBmPQAgSz0AgCI8AIAvPAAA4rwAkJa9ACAHvQCgBL0AoDc9AABUvACA+LwAwI08AECHPABgrr0AAEy7ACA0vQBAMj0AAMe7AOAmvQDA6zwAALm7AAB1vAAAvDoAAOi7AEBSvQBgw70AwKA8AIBEPABg6j0AAFS9AACKvACgOb0A4C29AMC8PACgNr0AoHy9AOCQvQBA+bwAAPS7AAAKPQCA4LwAACA7AAC+PACAcbwAACg6AABZPABAcL0AYBA9AKAIPQAAHDwAQBI9AADqOwBgS70AgAQ8AOAHPQCAmDwAAJY8AAAwuwCAULwAYCM9AIBuvAAgFj0AwIY8AIAlvADArbwAAAQ7AICavADAoTwAwKE8AKBbvQAAEb0A8JW9AIC8vAAAB7wAgLy8AAB6uwAAQTwAgMG9AAB2PAAAFDsAAO68AACvPAAAXrwAQM+8AABeOwAgFb0AAMG7AIBePABgab0AoAE9AIBavAAAgLoAABA8AACzPACA0jwAgN28AIAqPQCAUbwAMIu9ACBnvQAAU70AkJA9ACBDvQDgRT0AQNy9ACBHvQAwq70AQGG9AADyPADAqL0AAFE8AABQvACgSb0AAHu9AADqvAAAXbwAwJ48ACAzPQAAdb0AAAo8AEBEvQCAhTwAID09AFCyPQCgfj0AAJw9AIAdPAAA7jsAgB08AAD+uwAAbb0AACk9AECOvAAgDr0AAKW8AMBTvQCAUTwAgGW8AAAEPABAcD0AML89AABYPAAAQr0A0JU9AIAGvACAhz0AQC49AEDfvABw1T0AQAm9AACNvQCASbwAIJa9AACovADAyj0AYGk9AMC+vADgsj0AAJq7AMDNPACALrwAAHi8AADdOwCgLT0AgAs9AECoPAAwqL0AwIe8AICnPABws70AAAA5AACZOwDAujwAQKM9AABbPACAnj0A4Ck9AIBqPQCA8rwAADu8ACCMvQAA6rwAgAY9AOAiPQAAhjwAEIY9AGArPQDAk7wAoBY9AICaPAAAkzsAgHm9AAArPABA37wAcLu9AIDZPACgXb0AYP09AACQOwAASTwAwOe8AMDlvACAuzwA0MY9AIBFPQCAq7wAwGG9AOCKvQCAlLwAAES7AADrPAAAxbsAACC7AECZPACA3bwAgMg8AOARPQCAf70AwDw9AEDwPACAKzwAAJM8AFCDvQCAxjwAANI7AABAPQCAP7wAAKi8ACBdPQCAyjwAAMw8AIBIPACgPD0A4GG9AMAMvQDA+7wAEI49AABQOgAAFz0AAKQ7AEA6vQAATrwAwHo9AADyPAAAjjwAwDy9AECwvAAAgbwAYAY9AICPPABAorwAgF09AIDavACAGr0AAM67AIAhvACgRL0AgCy9AKAEvQCgd70AgFm9AABgvACgJT0AoKk9AADwOwAAuTsAAFi8ADDjvQAAOLwAIFE9AADTuwCAf7wAgBy9AIAVvADgpL0AABM8AMAKvQDAnzwAAPQ7AFCLvQAgG70A8JQ9AMDRvAD4Cb4AgLy8AGAqvQCAAjwAQCM9AECOvADA+T0=","chunkHash":"35d35c234cafd4dfbccc21cf56e0eadb5ec5e44ad1ec90de15e23d052f42293d"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\ndef get_lowres_contrastive_loaders(root_dir,\n                               batch_size=32,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(64, 64),\n                               sample_percent=100,\n                               z_window_size=5,\n                               z_stride=2,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n        sample_ids=sample_ids,\n        class_csv_path=class_csv_path,\n        filter_by_class=filter_by_class,\n        ignore_unclassified=ignore_unclassified,\n        target_size=target_size,\n        sample_percent=sample_percent,\n        z_window_size=z_window_size,\n        z_stride=z_stride,\n        predict=False,\n        debug=debug\n    )\n    \n    # Split into train and validation\n    num_samples = len(full_dataset)\n    indices = list(range(num_samples))\n    split = int(np.floor(validation_split * num_samples))\n    #...\n```","range":{"startLineNumber":280,"startColumn":0,"endLineNumber":296,"endColumn":0},"embedding":"AEADPQDAhbwAYFg9AOBovQDA8TwAwB69AAC5OwAAhzsAsJ29AMCGPACAFrwAgJ88AEAFPQAAc70AQNE8AEDhPADgQT0AgBW8AKDbvQBQgz0AoDM9AEDRvABARj0AIJm9AIDvPAAA3LoAAF28AADeOwBgQz0AIEa9AOA/vQAAprwAIBS9AABWvAAA2rsAAFK8AAD2PAAAmz0AgFk8AKAkvQBARz0A4Ly9AADcOwAA9jwAgDE9AACLuwDgQj0AABy9AMA7PQAA37sAcIe9AHC3PQAAUTwAQMU8AAC9uwDAkD0A4BO9AIBYvAAAtTsAQPu8ACBIPQDAdr0AgI08AEC4PAAA5LoAQJ28AGAtvQAA7rsAwAu9AICAvAAAOjsAQBG9AADHPACAiL0AgAI9AEAGPQAA0DsAgHA9AOAhvQBAQr0AAL88AIBEPQCAGTwAAM88AOAPvQAAv70AADS9AOCCvQAAzTwAIJa9AAByPAAA1jsAYGK9AIAbPQCAG7wAQMS8AKBNPQBAJL0AgGg9APCBPQBA9TwAgFU8AICwPACAj7wAQJm8AMDcvAAAITwAsMW9AACovABAnD0AoAC9AHCSvQBA3DwAwDe9ABCHPQAgM70AIA29AGAKvQBgbb0AAL28ALDEvQAgXb0AgHQ8AACKuwAAt7sAAAw8AOC/PQCAAb0AAFQ8AABiOwDgUD0AAIq8AACrOwDwrb0AAHu8AKCpvQCAjbwAQBU9AOAUvQAgnj0AIGW9AAAQPQCAL70AgBq8AABxvQBAvTwAACO8APCOPQAAqbsAIGE9AGCMvQDAJL0AACy7AMDzvABQlr0AAE29AADmuwDgYD0AAHY7AEBuvQAAMjwAAPk7APCDPQBAhzwAACS7ADCAPQAAVDwAABW9AJC6vQBAjLwAsJ49AICPPADApjwAkJq9AAACuwBA2zwAgNO9AIAnvACA7bwAYBu9AIDFvABgKr0A4Ak9AEBMvQAAmL0AIOq9AADMuwCAGTwAAEq9AADVOwCAJz0A4EQ9AECxvACgNj0AANw8AIDOvADgmj0AMIg9AMAEPQAAOT0AAFa8ANCcPQDA8DwAwK+8AAA7vABgTL0AwGW9AIAevQAAmrwAQKa8AEC3PAAA3TwA4D49AMD4PACA5TwAQPi8ABCJvQCAeT0A4Bc9AKAfPQBgWj0AAHy8AGAqPQCwhz0AAAY7AAAuPAAAzzsAQJq9ACAmvQDAzrwAQPU8AABlvACAAb0AABI9AEC5PABAYr0AQLG8AOAavQAAzjwAADG8AEBBvQCwmz0AAJE7AMDHvAAA9LsAAOG7AMB4vQAAwL0A4BY9AIASPABQuT0AoAu9AAARvADgmL0AgCu9AEAXPQDgQ70AgEO9AECOvQBAJL0AwJa8AIDCPAAAbrwAAPg7AEDOPACAV7wAgGs8AIDAPAAAPr0AAOI7AAAzPQAAszwAwF09AAA4PAAgbr0AAHC8AKB7PQBA2jwAgCA8AABbvAAAkbwAAG48AAArvADgMD0AwIQ8AAAtvABAKL0AgGI8AMA6vQBAnTwAAMg6ABCQvQAANb0AYIy9AACOuwCAGbwAgAS8AAAsPACAXzwAMK29AEC8PAAABLwAAAC8AIDoPAAAKbwAgHG9AADluwAAQrsAAN27AACvOwCQn70AICs9AAAkuwAAtDsAQBo9AACROwCAVTwAAB69AOBsPQDA47wAAJe9AKBYvQAA8LwAkKA9ACBQvQCAYD0AgKi9AEBmvQAArbwAAM+8AMCbPABQib0AgGI8AAA+PAAgSL0AANm8AEC7vACgIj0AAG08AOBTPQDArL0AgMs8ACACvQAA4rsAgF89AOBVPQDgej0A0IA9AMCFPADA8zwAABi7AIA3vABAI70A4B89AIARvABgBr0AAJK8AGBAvQAAQ7wAQO68AABAOgBAFj0AQKg9AOAWPQAAnDsAAJ49AECCvACAAT0AwE89AMD1vAAAwz0AAG28AACHvQBAJ70AsKO9AEAMvQCAqz0A0J89AACnvACQnj0AADY8AMD2PADAurwAQBq9AAC/OwAgWT0AgMs8AACEOwBAx70AADK8AAAiPACAgr0AAGI7AIBjvABA2jwAYIc9AICjPABwhD0AQDA9ALCNPQAA+rwAACy8AKCrvQAA07wAQK88AEC8PAAAHbwAgNg8AEDhPAAgM70A4C89AEABvQDAkzwAsIW9AAAIOwCgFr0A8K69AAC5PADA87wAoAY+AADZuwAAejwAQEO9AAAqOwAAYLkAYMk9ALCIPQAAp7wAACO9AHCKvQBAsbwAgKi8ACAFPQCAXTwAYCu9AABbvAAAQ70AYBs9AACUPQAAl70AALc7AIDHPACAbbwAgEW8ABCMvQCgST0AAKG8AGBHPQCAWLwAIAS9AOBdPQAAIrwAgGU8AAB2PACAOjwA0Ka9AEDuvABAU70AoNY9AAA+uwCgTj0AQLo8AAD2vAAAk7sAwFo9AOBvPQCAIzwAAFa9AIAuPAAACLsAYIQ9AMDKPADA1bwAQOc8AICSvABgHr0AAEQ7AABeOwCAHL0AoD+9AGAcvQCgVr0AsIS9AEC1vADAPD0AwAs+AADfOwAAoTwAAP67ADC0vQCgJL0AADM9AABpPABAgrwAIFy9AICUvAAgXb0AoAk9AMDhvACA3zwAAAC7ACBovQCA5rwAAJM9AMCXvABIBb4AQAe9AOA5vQDA1TwAYAw9AED8vAAQ9j0=","chunkHash":"606e0972f38f47b9d7c8d164468e103d433bec586e3d35a37c843d90f176e548"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\ndef get_lowres_contrastive_loaders(root_dir,\n                               batch_size=32,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(64, 64),\n                               sample_percent=100,\n                               z_window_size=5,\n                               z_stride=2,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n    # Set seed for reproducibility\n    np.random.seed(seed)\n    if shuffle:\n        np.random.shuffle(indices)\n    \n    train_indices, val_indices = indices[split:], indices[:split]\n    \n    # Create samplers\n    from torch.utils.data.sampler import SubsetRandomSampler\n    train_sampler = SubsetRandomSampler(train_indices)\n    val_sampler = SubsetRandomSampler(val_indices)\n    \n    # Create dataloaders\n    train_loader = DataLoader(\n        full_dataset,\n        batch_size=batch_size,\n        sampler=train_sampler,\n        #...\n```","range":{"startLineNumber":297,"startColumn":0,"endLineNumber":314,"endColumn":0},"embedding":"AID0PABgYL0AwIQ9AAASvQBgHT0AgBi9AAAQOwAA9bsA4KC9AIAtvAAARrsAwEU9AIDwPAAgS70AgAQ9AMCqPAAAnDwAgHq8AJDJvQDwhj0AwFc9AADYOgDAzTwAYIq9AIBvPACAmLwAAOu7AAA2OwDgKz0AQEa9AACwvAAAzrwAAL+8AAD7uwAAj7sAACm8AMDmPADAZD0AwIo8AAA3vQAA8TwAgNq9AAC/OwBgXj0AgGg9AADyOwCART0AoDq9ACAVPQAAhLsAwDy9AEDGPQAAXDsAAG67AACsOwBAaD0A4A29AACQOQAAgjwAwDW9AKAfPQDgab0AAHs8AEC4PACAbbwAQO+8AEBLvQAAU7wAQLm8AAD9OwAAyDoAAHu8AAAyPADQib0AYAc9AMDCPACAAbwAwHc9AKAfvQBAP70AAAc9APCNPQDAQj0AIDI9AAAfvQCQrr0AoCm9AIBxvQAgHj0AsJu9AMC+PAAAIDkA0IO9ACAdPQAAYLsAAPW8AMBrPQCgOr0AQJA9ANCFPQAAGT0AACo8AMDEPABAjbwAACA5AAAfvAAAljsAYMy9AEDRvACgmD0AQAW9AIBevQDgND0AgAu9ADCHPQAA/LwAQJS8AAAhvACgWL0AAHW8AECjvQBAVr0AAOA7AABqOwAAKbwAgBu8AGDUPQDgTL0AAGY8AIAFPACQoT0AwJu8AABAOwBA070AAAq7APCVvQCAO7wAgLI8AEABvQAgfj0A4Da9AAAaPQBA7rwAAPS6AAA6vQDA4TwAAAG9AEB/PQAAlLoAYEo9ABCfvQDAWr0AAGs8AMAWvQDgjr0AkJO9AIBEvACgVj0AAMo7ACAmvQCAbDwAAGM8ACBgPQDA1DwAALe8ADCFPQCAPzwAgEq9ABDBvQCgAb0A0Is9AAAHvAAAIjwAAHW9AABaOwAAoTwAwPa9AEDmvABA9LwAQDi9AAAEOwAA77wA4C49AAAvvQAgjL0AEOO9AAB8PAAABDsAACS9AEDVPAAAfDwAAHg9AMC2vABAQj0AAJU8AMCuvAAAqD0AIIQ9AGAtPQBgLz0AADc8AMDBPQDgFD0AQIq8AAAxvABwlL0AIFW9AABZvACAArwAQJC8AMDePABAhTwAAH48AMAePQAANTwAoAK9ACA0vQCwqD0AAFo8AIAyPQAAaj0AAHq7AGAYPQCAOD0AAGI8AMCnPAAAbjsAoIu9AIAHvQAAkrwAIAg9AACQOgCAUbwAQJ08AECYPABAcr0AgNa8AOBwvQCAAzwAAJi6AEBavQDAgT0AAEg8AIBnvQAAgbwAgD68AIBevQCgsr0AwNI8AADsuwAQnz0A4Bu9AADTuwAgar0A0I69AAC0PAAABL0AgOK8AOB9vQAASr0AgAa8AEDqPAAATbwAACS7AABIPADAEr0AALg6AAD+OwAAprwAAPg7AGAtPQCAWjwAgF89AAC5OwCAcb0AQNS8APCJPQCABDwAAMw6AEC8vAAAcbwAADo8AAA+OwAgTT0AAPW7AECvvAAA07wAACY8AMAqvQAA7DsAgHC8AKC5vQDAGr0AYI69AAC9uwAAsTsAALC6AACIPAAAoLsAoLi9AED2PACAU7wAAJw6AMCjPACAvjwAQG29AMCPvAAAXjsAgEY8AMCoPAAQhb0AQMg8AADMuwBAibwAYEA9AECpvADgGz0AwM28AJCGPQCAIrwAoGq9AKBpvQBA1bwAYJw9AGBsvQBAMD0AkJS9ACAovQBAmbwAgIG8AIAvPAAAib0AgNw8AECAPADAJ70AQJC8AAB2vABA4zwAgNw8AOBBPQDAq70AAK07AMCYvAAAtrwA4DI9AIBmPQAAmTwAYCE9AMCQPACAmjwAAO87AAAoPABAz7wAgD09AMDZvAAgEr0AAH+8AABOvQCAabwAALC7AAAnvADgVz0AMM89AEDGPACArzwAgHQ9AECvvABgEj0AIDI9AADnvABw3j0AwMK8AAAMvQBA6rwAsMS9AAB0vADQjz0AoHM9AIC/vADQoj0AAH48AEC/PAAA2LoAAMy8AADAOwCATT0A4Ew9AIAavADQ2b0AAFC8AACOPAAAa70AAAC5AICcvAAAMzwAwIU9AADhOwDgdz0A4C09APCBPQCARbwAAMG7AFCTvQCgD70AAJY8AMAIPQAAvLoAgCQ9ACAvPQBAOL0AwBc9AICxvADAyzwAIC29AACEOwBAU70A0La9AACqOwAA47wAyB4+AADQOgCASTwAYDC9AICOvAAAFjsAQPs9AABQPQAAxrwAIEm9AHChvQAA7rwAgK+8AMDaPADApzwAoCG9AACyOwBgf70A4Ck9ACCVPQDAq70AAAi8AMD4PABgDb0AAIC4AGCWvQAAuDwAwBe9AAA/PQAA5zsAACO9AOB4PQAAQbwAQIo8AECsPADADz0AkK69ACAHvQDgVb0A8LI9AMCGvADgPT0AQK48AABbvAAACLsAIIg9AOBmPQAABTwAQHu9AEA4PQCA5TwAwIY9AIALPAAA97wAgOI8AIARvQBgIb0AAEw8AACcOgDAxbwAQE69AEDJvADAIb0A4Ji9AAB4vADgfD0AyA0+AIA8PACArTwAAAi6ABCevQBAV70AYFs9AABSPAAAd7wAAMS8AKA7vQCAML0AgGg9AAC5vAAAKz0AAOA7APCQvQAgBb0AcJQ9AAC8OgCg/r0AoEe9AID7vAAAETwAwDU9AMClvACA+z0=","chunkHash":"ec55571bc8cf973d11bf38d58fa23d96525ffd0f0e8ec5847b1377dafc95c44b"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\ndef get_lowres_contrastive_loaders(root_dir,\n                               batch_size=32,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(64, 64),\n                               sample_percent=100,\n                               z_window_size=5,\n                               z_stride=2,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n        num_workers=num_workers,\n        collate_fn=collate_contrastive,\n        pin_memory=pin_memory\n    )\n    \n    val_loader = DataLoader(\n        full_dataset,\n        batch_size=batch_size,\n        sampler=val_sampler,\n        num_workers=num_workers,\n        collate_fn=collate_contrastive,\n        pin_memory=pin_memory\n    )\n    \n    return {\n        'train': train_loader,\n        'val': val_loader\n    }\n#...\n```","range":{"startLineNumber":314,"startColumn":0,"endLineNumber":331,"endColumn":5},"embedding":"AAD7PACAsrwAAD89AGA4vQDgBT0AYAi9AIBzPAAAUbwA8Iy9AIADvAAAtrwA4C49AEBCPQAAQ70AAAE8AADLOwCgDj0AAIa7ALCYvQAggD0AIAc9AAAQvQAAGj0A4Ey9AICBPAAATLsAoBO9AACbPADAqDwAoA69AMAkvQCA77wAgA+8AAA2uwAANLsAAI07AID/PADAqT0AQIM8AMBSvQDA6DwAkNG9AIBcPACA6zwAQCo9AAAOPACgPT0AQNO8AAC0PAAAyrsAAHa9AKCqPQAAlTsAABA6ACAHPQAASD0AwBi9AIC+vACAVjwAoEe9AKBvPQBgX70AANA6AMCIPACAF7wAYAa9AIB6vQCAlrwAQPK8AAB7vAAAzzsAAK28AECVPADATL0AAGM8AOAKPQCAIrwAYDE9AKAHvQDgBr0AgJc8AICXPQAADj0AAPs8AKAzvQDQ3b0AAEK9AGBtvQAAID0AYHW9AADMPAAASjsAIAy9AMADPQAA3zsAQMO8AIBsPQAAQb0AYCE9ACCFPQAgGT0AANK7AMDePAAAlrwAACI7AECGvABAqjwA8N29AEDTvAAQrD0AgCW9AKBlvQCgDj0AgCC8AMCMPQCA9LwA4BS9AACquwBQk70AQAy9ACDCvQDgYb0AwLk8AACkOgCAbbwAADc8AKC/PQCAD70AAIY7AAADvABAjT0AgOm8AAAUPACAl70AAPe7ADCcvQAA9rwAQOE8ACAFvQCgeT0A4A+9AIDHPADA6LwAACK7ALCAvQAA6jwAAHK8AKBgPQAAkDoA4DA9AECSvQAgLr0AAHw7AIDuvADAzb0AsIi9AIBDvADggj0AAJU8AMBMvQAA2TwAwJK8AMBSPQDgDz0AAFY7ACBePQCADjwAQB69AHC5vQAgE70A8KI9AIC3PAAABLwAQJW9AADDOwCAdDwAwM29AEC0vABAN70AgOe8AACvuwCAxrwAwCc9AGBYvQCAgb0AAMO9AAAGuwAApLoAYGO9AIBRPABAujwAQF89AAAAugCAHT0AQMQ8AMACvQBgij0AoHc9AOA3PQAARD0AwKK8ABC6PQBAyzwAABa8AICevABAPb0AgBm9AMDVvAAABLwAQKa8AABzPADASD0A4D49AAD1PAAApLsAQP68AOAXvQAgnj0AwNU8AID1PABwgj0AAPo7AMBMPQBggD0AAHq8AECaPAAA+rsAEMW9AAApvQAgDr0AAEg9AACjvAAAMLwAQMA8AAD0PACwiL0AQBy9AOBBvQCAXD0AQLa8AOB1vQBAfT0AgME8AEDavACAbLwAgCe8AGBvvQBArb0AwOc8AAC5OwCQnz0AgCO9AEChvADglr0A8Ie9AOASPQBAM70AIAi9AJCKvQDgHL0AAHe8AADrPAAAbrwAAFa7AIAePAAA2bwAAH47AADJOwDAN70AQMk8AGBKPQAAxDsAgGY9AAC4PABgab0AAEG8AFCJPQCAxzwAwLg8AIARvADAJr0AQPQ8AEDwvACAOj0AAPm7AIBQvAAgFr0AgB08AIAEvQCAZTwAADG8ACCtvQCAIL0AQKS9AIBkvACAUzwAAPi6AAAcOwBAojwAsKO9AIDWPACAJ7wAABi6AADLPAAAGLoAMJe9AMD7vAAAwLsAgEy8AADZOwDAcL0AIBs9AMCVvAAAEDoAQJ48AAAwvABAgTwAQJi8ACA7PQAAj7wA4Bm9AIBZvQAAv7wAIJo9AGBfvQDQiT0A4K69ALCHvQBAxbwAgH28AACIOgCgoL0AAOQ7AABCOwDgZL0AQOG8AIB8vAAAKD0AQOY8AEBCPQAQxb0AgAU8AGAEvQAA2bsA4II9AEBDPQAAPD0AYGk9AIC/PAAAFz0AAKM8AIBFvABA9LwAIEI9AICbvACAu7wAwOC8AOBzvQCACrwAAIo7AAA3PABgPD0A8Kw9AIDpPAAAtbsAgIQ9AAC3uwDA8jwAoII9AIBGvQAwxD0AAHW8AMBhvQCAUrwAkI29AADAvABQpj0AYJQ9AABBvADAuT0AgIc8AMDdPAAA8LkAAPi8AADROwAAUT0AgAs9AAC/OwCABr4AAG28AAC5OwCwgb0AAEk8AADuvABA3DwA8J09AIA7PACwmT0AYDA9AKCKPQBArLwAAPC7ABCVvQAALb0AgH88AACiPADA2bwAIAw9AMAvPQDgAb0AEIc9AIBQPADAvTwAoFe9AABouwCgJb0A8Ky9AECZPADADL0AaAM+AAChOwDAvTwAQNy8AAA4uwAAyjwAoNM9AABYPQDAJb0AYCS9AIDAvQDgI70AANW8AADoPAAAvDoAgNC8AABYugAAUL0AwIM9AKCQPQCwmL0AAOi6AGAYPQAAC7wAAGy8AACGvQBQhT0AAI+7AMBpPQCAdLwAAGC8AMAdPQAArDwAgLo8AKAfPQBAxTwAwH29ACAHvQCAbr0AUPE9AECGvADgYj0AwMc8ACAAvQCAHrwAwFE9ALCFPQAAZDwA4Gy9AMDAPAAAo7sAYH89AOAFPQCACb0AYCE9AECZvADAxbwAgBo8AACiuwBQgL0AwGW9AIDNvAAASL0AwDG9AAAWvQBADD0A+Ao+AACgOwCADTwAAJc8AGCjvQAA8LkAQPI8AEC1PACAj7wAIDu9AACxuwAgV70AQIM8AAC9uwCAZDwAgIi8APCYvQBgH70AAJ89AAB4OgCoC74A4By9AKAbvQDAijwA4Ag9AADAOgBg1D0=","chunkHash":"2cbf12acdf748b00f97311e529b1f6012ce92c063e473600abda368950140f13"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\nimport os\nimport glob\nimport numpy as np\nimport torch\nimport pandas as pd\nfrom torch.utils.data import Dataset, DataLoader\nfrom PIL import Image\nimport torchvision.transforms as transforms\nfrom tqdm import tqdm\nimport sys\nimport random\n\n\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\nfrom dataloader.contrastive_transforms import get_transforms_for_contrastive, collate_contrastive\n\n\nclass LowResContrastiveDataset(Dataset):\n    #...\ndef get_lowres_contrastive_loaders(root_dir,\n                               batch_size=32,\n                               shuffle=True,\n                               num_workers=4,\n                               transforms=None,\n                               transforms_sim=None,\n                               sample_ids=None,\n                               class_csv_path=None,\n                               filter_by_class=None,\n                               ignore_unclassified=True,\n                               target_size=(64, 64),\n                               sample_percent=100,\n                               z_window_size=5,\n                               z_stride=2,\n                               validation_split=0.2,\n                               seed=42,\n                               pin_memory=False,\n                               debug=False):\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":248,"endColumn":44},"embedding":"AMCKPACAu7wAYFo9AOBQvQDAYj0A4Be9AKAhPQBAkrwAQEe9AABoOgCAcrwAgGI8AACcPABAR70AoCA9AMD+PAAA9zsAAFo7AKBkvQAQjj0AIBc9AAA4OwAApLoAAIi9AECPPAAAdzwAADa7AADbPACgAz0AgBG8AMByvQCAI7wAoF+9AADFvACAu7wAAMA6AEAwPQDAkT0AALo7AMA9vQAgIz0AEKS9AIB9PAAAXDsAoA49AMDKvACANT0AwJC8AMAuPQAAoLkAoEm9ABCGPQAAsLkAAPQ6AAChuwAgIz0AAMO7AAC2uwAAnjwAwBq9AABsPQDAZL0AwMo8AABgOwDAq7wAANO8AMCJvQAAdrsAwMG8AIDZvAAAjLoAAMa7AIAPvAAQtb0AYDc9AMDYPAAA7DwAsK09AADKuwAAH70AAEo8ACBRPQDAyDwA4FQ9AIAyvAAgoL0AEMi9AICNvQAAPTwAoJG9AAB8OwAAkTwAALu8AMAGPQCAcTwAACa7AMC1PADgO70AQF09ACCyPQAgCz0AgEE8AIBMvACAazwAAIo8AADwvAAACLoAgBG+AIABvQAw5D0AgD+8AIAFvABAmjwAwII8AEBJPQAAIL0AAFy8AAAQvAAAHrwAwJC8ANCjvQAACb0AgDA8AMDZPAAAmjwAAHa7AFCPPQCgBr0AAN27AOANvQBgZT0AYEe9ACADPQAQ3L0AgHS8AADzvABgOL0AAPA5ACBCvQDQij0AwOK8AMAhPQCAJbwAAH+8AEBlvQAAtDoAgKC8AOB2PQCAELwA8II9ACBAvQAAa70AAAi7AACrvABgZb0A4F+9AAAzvAAwpj0AAKQ7AKBEvQAgNT0AwLK8AKA+PQCgAT0AAGo7AOB2PQCAnrwAwOa8AKCpvQCAFb0AQFQ9AIBmPAAAjLwAEIS9AACsuwCAdzwAUPW9AADBPABADb0AALu8AMDBvACgDr0AAIQ6AOBdvQBAtb0AkPq9AABVvACAJT0AACW9AKANPQAApjwAYFs9AAAqvQCgXj0AwKo8AAAAAADgij0A4FA9AAAOPAAAGT0AAFg8AADqPQBAuTwAgAq9AIA2vABAZb0AYEG9AOAjvQAAcLoAAPK8AEATPQAA+DoAQKU8AMAQPQCAjzwA0Ia9AECcvQDAcT0AgFE9AEDsPADgYj0AAFg6AAALPQCABj0AAKC7AMCVvADAv7wAEKS9AMDJvACAyLwAgLI8AICZvABgLL0AgHM8ALCAPQAgm70AgBa8AOBSvQCANjwAAH67AEBLvQAQlT0AADi8AMA0vQCAq7wAgBK8AOBBvQDApL0AABU9AIAGPADQyD0AgDy9AEDhvAAwqr0AQFq9AADYOgCAkb0AoGu9AKCmvQCATTwAwLa8ACA7PQAA67sAQIW8AGAtPQDAgLwAQI28AIDuPADAJb0AADU8AABQPQBAjzwAwGc9AADXPACgpr0AwNw8AAAUPQAA6DoAgLg8AIATvAAAz7wAgPk8AACIuwCAED0AALC8AADGOwBgeb0AADk8AFCqvQAAPLwAANK7AEDvvQAAK70AIEC9AACkuwAAhrsAgGm8AACAuQAAozsA0LO9AIB8PAAAiLwAAIA4AACdOwCAYLwAQMu8AECpPACAerwAgLy8AIC2PACgeb0AgHa8AKBEPQAAkbwAAOo7AAC8PAAA1zsAQIu9AMBmPQAAFLwAwDi9AKByvQDAPL0AcJQ9AACavQCAMj0AsKy9AMDLvAAAabwAYGu9AABkuwCgcb0AwBo9AKBAPQBAF70AQJu8AGAGvQCAHz0AALK7AEAhPQCww70AwIW8AIBSvABAgrwAIIg9AGBfPQDgQj0A0J09AABFPQDAgjwAgDA8AID1PACAeL0AkLE9AGCMvQAACzwAgA68AJCGvQAAfrwAQIs8AICGvADgNj0AoKc9AIB6PACA1LwAEII9AMCLvADgJz0AICM9AMChvABwqj0AQPW8AMDIvAAAyLoAwKa9AABuuwAAHj0AIDE9AIAivQDwkj0AAIk7AADTOwDA9DwAABO8AAAgOgBgWz0AIBU9AAAiuwBAtL0AgIa8AIBpPQAAab0AoCe9AABwOwAA8LkAUJk9AMCtvABgcT0AIGs9AKC6PQAAtTsAgBW9AGB/vQDgRb0AoBU9AAAjPAAAozwAgH89AMDCPAAgAr0AQPI8AIBuvAAA6LsAoBC9AICNvACA1LwAQJ+9AICIPADgJb0AcPQ9AAAYOgBA5DwAAAa9AMAPvQCAALwAgNo9AMBcPQBAP70AACC7AMBLvQAAPbwA4HS9AAC+OwAAEzwAwKW8AACwOgCgWb0AgIk9AICJPQCQjb0AAGE8AAAfPQAANLwAAGY7ACCQvQCAoDwAAPY7AMApPQAA+bwAQJK8AOBnPQAAWzwAAF48AID6PADgBz0AAJm9AMDjvABgkb0AwLw9AACdvACANT0AAOE7AAA+uwAACjwAMJM9AECNPQAAN7wAoH29AMDAPACAHbwAYJ49AIB4PQAAsLsAMJI9AKABvQBAD70AwPM8AICVvAAgTr0AwLS8AEAQPQAAbb0AwOW8AIBnvAAgdz0AMNE9AIB6vAAAnDsAAHs8APC0vQBAqLwAAEw9AAAZPQAAdrwAoCO9AACAvAAwt70AQJs8AGAuvQAArrsAAK67AEDkvACgDL0AoGA9AKAHPQBQjb0AAEW8AMB8vQAAhTsAoAw9AICcPACgCD4=","chunkHash":"66e33c32deab24cd74c28dbf736a43070c2ca17420931b9be3f0540c860b7d45"},{"text":"File: `dataloader/temp/lowres_contrastive_dataloader.py`\n```python\n#...\nif __name__ == \"__main__\":\n    # Example usage\n    loaders = get_lowres_contrastive_loaders(\n        root_dir=\"data/nuclei_sample_1a_v1\",\n        batch_size=16,\n        class_csv_path=\"chromatin_classes_and_samples.csv\",\n        z_window_size=5,\n        z_stride=2,\n        debug=True\n    )\n    \n    print(f\"Train dataset size: {len(loaders['train'].dataset)}\")\n    print(f\"Val dataset size: {len(loaders['val'].dataset)}\")\n    \n    # Test one batch\n    for inputs, targets in loaders['train']:\n        print(f\"Inputs shape: {inputs.shape}\")\n        print(f\"Targets shape: {targets.shape if isinstance(targets, torch.Tensor) else 'list of tensors'}\")\n        break \n```","range":{"startLineNumber":334,"startColumn":0,"endLineNumber":353,"endColumn":0},"embedding":"AIBKPADAw7wAQKw9AIBXvQBA8DwAgAm8AABEuwAAJ7wAgCO9AIBmvAAAj7wAoC09AACaOwBgY70AAKS7AMBOPQAAyLsAAHw9APCUvQDAcT0A4FA9AEAKvQDwgD0AUJC9AICRPAAAHLsAQPC8ACBIPQAAmjwAwOu8AIBIvQCgBr0AIE29AABgugAAArwAgLI8AKB+PQCwmD0AoA89AMBVvQAAwTwAYJS9AAC7PAAgAD0AAOY8AICSvAAA+DsAwPG8AAC5OwAgJz0AwIO9AMCtPQAA77sAgG68AADgOwCg0D0AACK7AIC6PAAATDsAICW9AJCbPQDgOL0AgEA9AIBovABABb0A4Gy9ACBOvQBA4rwAAIA8AIC3vACAezwAAMA6AIALvADAY70AwP88AABGuwDADz0AwBo9AICsvADAr7wAQME8ANDOPQDgDD0AALe7AAAzPADgpL0AoA+9AOAqvQCgLj0AgIO9AMDfPACAMDwAICC9AGACPQDA7TwAALC6AAC3PADQsb0AIGE9AIBTPQBAkDwAYEw9AADJuwAAVL0AAAe8AACAvACA9jwAAM+9AMCwvABAgz0AwCG9AAApvACQrz0AAC47AEBnPQDAd70AoHm9AGAXvQBAzbwAYFS9AMCRvABAjrwAgAU8AADIugCADDwAAOa7AICdPQBA2rwAgC88AIAPPAAQlT0A4Cm9AICKPACQkr0AgMK8AEBjvQDATL0AgE08AGAuvQAAtj0AAPA7AAC+OwAAwLoAAEo8AHCbvQAAYDwAQLK8ADCMPQAAsDoA8Kc9AEC9vABAobwAQOm8AABevQAAkr0AACa9AABqPABArDwAACC6ANCdvQCAAT0A4A29AOCDPQCA4DwAwKS8AMAKPQBQkb0AAOa8AHC1vQCAGL0AwDc9AIAoPQAAvLoAQJy9AAAJvABgHz0A4Li9AADGPABAPL0AYD+9AIBjvADALb0AQOs8AOA9vQAgsb0A8Ke9AADKvACAFbwAoF+9AABMvAAA4DkAYEE9AACHvAAA8DwAAKo7AABRvQCAsT0AICg9AIBWPADAAD0AANA6ABCkPQAAXjsAAPi8AACZuwDgdL0AQO28AABqOwAAubwAAJA7AADCPADAwTwAAFO8AMCDPACAvrwAAK+8ACAPvQBgwD0AYA09AGAKPQCgJD0AAHg6AABQPQAAoTwAADG9AIAOPADAkbwAcNK9AAC0OgBAML0AsJM9AIC6vACANLwAYAQ9AMD4PAAgtr0AwM08AMA6vQCAHj0AAB28AMAjvQCAJj0AAAK7AMCGvADAubwAAPa7AIAsvQAA2b0AYDE9AAAYOwBQ4j0AAPO8AACQvADA6r0AgFa9AEClPACA7bwAwLy8AGCAvQBAlLwAwCy9AABlPAAABr0AAIg8ACAyPQDAyrwAAMo8AAA3PABglL0AAG28ACAbPQBAqLwAwHE9AACgugAgUL0AwMs8AIDjPAAA9DoAgOM8AIA+vACA3LwAgMU8AMCtvABgZD0AALA7AADavACgY70AAA88AEAUvQAAfDsAgJu8AECEvQCAh7wAYIG9AECIvAAASDoAAH08AAAGOwAA4LkAEKi9ACAovQAALzwAALy7AAAqvACAhrwA4AS9AIBmPAAAJj0AABY7AIDlPADAcb0AgEQ9AIA2vAAAIjsA4EK9AECkvACAAzwAQPq8AGAuPQBgDT0AAE69AIBNvQAAoTwA8KE9AIBrvQDAQT0AwK+9ACAnvQDA07wAADu9AABUPACgfr0AYBM9AAC0OgCA3rwAAAA4AAAhvQAgXz0AAFg8AHCkPQBQ6r0AQIm8AMBevQDAAT0A4Fo9AMAkPQAgCD0AMJo9AMBdPQCAhjwAYAs9AABZPACAgLwAgG49AIByvAAAxLsAIDq9ACCTvQDAXT0AAKC6AAD3vACAczwAQJM9AIBCPACAV7wAwFM9AAB5vAAAjD0AwGc9AEBTvQAQ+j0AwNu8ACALvQCABjwA4HS9AAATvABAiD0AgFc9AIC0vABgaT0A4CG9AACzPACAyDwAQJO8AKAQPQAACD0AALM8AAAjPABgqL0AYBG9AMDtPABgPL0AgAq9AIDXvAAARjsA4G89AAAiPABwzj0AIHo9ADCkPQAAkLoAwCS9AICzvQBASL0AgGU8AEC5PAAAmDoAgL48AMDsPAAA1bwAAFo8AMDZPADAuTwAYCu9AEADvQCAGb0AgOC9AOC0PQBAzLwAgNo9AIA9vAAAzTsAgMi8AECnvACA27wAcOY9AMD1PAAA0LkAQPW8AEBhvQCASrwAAHQ7AIADvQBAKT0AgPC8AAAUvABAljwAMKM9AGCxPQAAG70AAB09AGAtPQAAvLoAAJU8AEBMvQBgTj0AgOW8AEBIPQAABDwAADu8AGBfPQBA7DwAABG8AMCZPAAAvTwAQBS9AID1vABgfr0AYOg9AAA8vAAgDj0AgG+8AIAnvQAAUrwAgEk8ANCOPQDgdj0AYEe9AABVPADAC70AEJA9AACMPAAAgrwAYA49AABpvAAAlbsAwMQ8AIBbPACwk70AoGW9AADMOgDAjrwAEIK9AIBDvABAXz0AMBU+AIAvvAAAorsAgKA8APCnvQAAxTsAAAI7AACgPACAc7wAwGi9AADEuwAQlL0AwKc8AIBOvAAA7jsAgJ88AMBJvQAAszwA0JM9AIB+vACA/r0A4AS9AECLvAAARjsA4CM9AAAzvAAQ0T0=","chunkHash":"4a9d300d09ac89b2ac468da9013847be90958fc575ef227a2979525b785d4eb8"}]},"file:///teamspace/studios/this_studio/dataloader/temp/nuclei_dataloader_masked.py":{"hash":"93d9a480dd42acc8d7f6a7a121a655bb2715cc3d46f3d842682173963c588779","entries":[{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        \"\"\"\n        Args:\n            root_dir (str): Root directory of the nuclei dataset.\n            transform (callable, optional): Transform to be applied on the raw volumes.\n            mask_transform (callable, optional): Transform to be applied on the mask volumes.\n            sample_ids (list, optional): List of sample IDs to include.\n            class_csv_path (str, optional): Path to CSV file containing chromatin class information.\n        #...\n```","range":{"startLineNumber":35,"startColumn":0,"endLineNumber":42,"endColumn":0},"embedding":"AADkOgBAozwA4F09AIBTvQCAh7wAQDK9AAAIugCA8jwAUJa9AOCAPQAABzwAAE68AMBoPQDANr0AAL88AIBmPQAAarsAQJA8AOCIvQDgHD0AgA49AKAOPQDA3TwAAFS9AACCuwAAFTwAIB69AIAzvADAeD0AAHA7AEDWvQCAFbwAMMO9AAAovADgZb0AgLA8ABCcPQDwkj0AAPW8AACXuwDQpD0A4Na9AADWOwBAbD0AAKk7AOAnvQDAzTwAoJm9AKCgPQAA+bsAAO67AHCCPQAA47sAACK7AIDdvACwsD0AwAi9AIAsPQDgl70AwOW8AGAqPQAgvb0AAOA6AECXPAAAOz0AAF08AGCXvQDAPr0AgDi9AAADvADgRj0AgE28AEDmvAAA9LoAICI9AGBSvQCgFb0AQMQ9ABDIvQAA4rwAAEA6AMDWPAAAQLkAACa7ACA8vQCAT70AYAe9AACKvABQnr0AAA69AECgPAAAYjwAgGe9AEBYPQAAC7wAIJk9AADRuwCAYr0AAFk9AGAEPQCA+jwAAKc8AACeOwCAsbwAgFK8AECFPACAijwAwG69AOBlvQDgNz0AgIA8ALCKvQCQgz0AgA69AIBtPAAAMLoAwKC8AAAouwCA6rwAAO87ACB3vQBgj70AYB89AABBPADAuLwA4Aq9ANDAPQBAB70AALe7AABCuwCghz0A4Fu9AMC1PACAZb0AQJC9AIADPACAOLwA0JI9AMAOvQBQlD0AYA+9AACTOwBwlj0AwC89AJCMvQAAhDoAQB+9AMgRPgAAnbsAcJ49AJCbvQAAOTwAgN08AADkugCAT70AABq7AABYvACgxj0AADA7AIBNvQAAjbsAAP47AIASPAAgCL0AgKa8AGAVPQCAQL0AACi9AOCHvQBgO70AgMM8AADvuwBANT0AwLC8AGCYvQAADL0A4FS9AMBSPQDghr0AoB29AAASuwCAprwAALe7AIC7vAAATb0AoBq9AMDzPADA2TwA4Hm9AABkPACAeD0AAPg6AAAuuwAAMjwA4A29AAC/OwCgUT0AQNg8AKAXPQAgCT0AYBe9AGBoPQCAN7wAwMK8AECUvACgFr0AIBG9AACavAAA5bwAAM87AABfPQCACjwAAHm8AACYugAADjwAQLI8AMB5vQBAm7wAAEU8AECyPADAAj0AANC5AIBkPAAAx7sAgOi8AACgPAAgdr0AALC7AKCQvQCArDwAAIM7AMBhvQCAgzwAgLQ8AICjvABAe70AAAa9AIAgvQBAxDwAwLA8AKCFvQAAlzsAwMe8AIB/PADgRT0AgJ08AABPvQBgzr0AoB49ACAwPQCQ1D0AgPg8AMC7PADAfb0AgDu9ACBoPQBwir0AwIg8ABCwvQCAYrwAAK88AED5vAAgNb0AgP28AICvPAAAAAAAAIw8AECFPAAA+jsAAPE7AFCDPQBAsjwAAGI8AKCRvQAQyb0AYGo9AABUOwBAbz0AADY9AIAKvADQpb0AACQ8AADXuwAAyTsAgCA8AAAgPABAhzwA4AQ9AJCwvQAAab0AALI8AACtvQBA+7wAQDa9AACuvACgcr0AAMc8AAAlvAAAyrsAEIK9AABlvACAAbwAQBu9AABGuwBgKr0AwJw8AMDqPACAEb0AADk9AAClOwAApbwAgAO8AMD/vADArDwAgEY9AAAquwAAyrwAACA6AIDhPACQpD0AoHu9AKC1vQCAg7wAgOE8AEDzvAAAUz0AgOy8AACxvAAAcLoAgMe9AMCIPABQrr0AAMA6AACXOwCgBD0AgF69AEBiPQCgP70AIG29AMDcPACQnr0AQKq8AMD8vADwir0AgDm8AKAJPQAARzwA4MY9AIBPPADgB70AwCO9AACiOwDgiL0AwIA8AADROwCASzwAgGW8AHCMvQDAuTwAACK9ACBVvQBgFj0AwL49AMAAPQAgJr0AAHO8AACDvADACj0AgFk8AADGvAAAJD0A0J29AAANPACAS70AwKu9AIDxvACQ5T0A4AA9ACA5vQDgHT0AgG49AMDtvAAA4bsAAKM8AACKPACABz0AALA5AIDPPABAbL0AAOY7AECqPADwgr0AgBa9AICqPACAcLwAIBo9AEA6PQCgDj0AQHQ9AEA3PQCA77wAAI47AMA6vQAABLsAgPg8AICPPABADj0AQFU9AACRPAAAq70AAG08AECzvADgcz0AwEM9AADLPAAALDsAMOO9AAAfPQCwpb0AwI88AIDlvACAorwAYCC9AGBVvQDA77wAAJY7AMBmPQAAkTwAQLY8AMD6PAAAYrwAAEA8AAAKPQCAezwAABM8AAC0vQCAIzwAQJA9AABwPACAlDwAANM7AICmvAAAwDsAwDM9AIDCvACArTwAwIo8AICUvAAAGb0AoJq9AMDGPABAX70AADE8AAAMPABQyj0AEO+9AAAKPQCAGTwAAJi6AOB3vQBAhj0AQIK8AACQPQBAPT0AQLS8AGAjPQBgRL0AIHe9AICQPAAgTL0AoHo9AIAwPAAA2TsAYHQ9AACGuwAAZr0AAAY9AIAoPACADjwAAPa8AAAIOgCAxLwAwHi9AECxPACgcD0A4AY+AOAivQAAwTsAUOY9APALvgDA2jwAQEs9AADyOwAAFbwAAC88AMARPQCgZb0AAMg6AIBLvAAAlLoAAKY8AIBlvADAqT0A4C49AIAgPAAQk70AQBW9AABRPAAAJrsAgOk8AIBhvACgIz0=","chunkHash":"40d107878af88d6b937f28dd4dd96ba98cccaeb1fbc9a6256cfe64d4124798a8"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n            filter_by_class (int or list, optional): Class ID or list of class IDs to include.\n            ignore_unclassified (bool): Whether to ignore unclassified samples.\n            load_volumes (bool): Whether to load 3D volumes (True by default).\n            crop_size (tuple): Size of each 3D cropped volume (depth, height, width).\n            target_size (tuple): Target size for the volumes (depth, height, width) for deep learning models.\n        #...\n```","range":{"startLineNumber":42,"startColumn":0,"endLineNumber":47,"endColumn":0},"embedding":"AMCMvAAAQDsAoDY9AKBmvQBgOL0AgCm9AACyvABADj0AYH69AIA+PQCAhjwAAAW9AKBbPQBA2bwAQAY9AGBXPQAAHDwAANU8AACgvQAAJD0AAP88AKBLPQBAID0AQIu9AIByPAAAqzsAAIC7AAD8OgBggj0AANw6ANDDvQAAjrwAYOO9AIA0vACgYr0AAH48ANCbPQDQjD0AIEK9AADcuwBQgD0A4M29AAAoOwCA7jwAAAM8AEDAvAAA4TwA4Jm9AKAlPQBArTwAgAe9ACBKPQBASr0AANo7AECZvAAAlT0AAJe7AIBHPQAAY70AABm9AKB7PQCggL0AADq7AIDwPADA9DwAgFS8AFCSvQBA/bwAQFu9AABnvACAJTwAAOO7AECyvAAA9bsAwGE9ACALvQCA97wA0Lo9AIC+vQDAFr0AgGE8AMDuPACAQ7wAAPw7AOBivQDgsL0AIHm9AACsuwDAs70A4Ci9AIAxvAAAhjwAwCa9AGBXPQAA1LoAkJ49AAAIOgDgbr0AMJc9AIDfPACAuTwAwKE8AABuOwAAp7wAAHm8AADiuwAAkTsAwFC9AIDSvADAsT0AYA89AIClvQBgYD0AQLK8AIATPQAAkLwAgJe8AAAFPACAVL0AgEq8AMBIvQBA8bwAwL48AED+vAAARbwAAMG8AHDFPQCgQ70AAJe7AABAOwAgJT0A4CC9ACBAPQAwsb0A4Jy9AMCTvAAAz7wAIJs9AEA+vQAARj0AgGq9AABqOwAwwj0A4Co9APDDvQCAs7wAwB29AAABPgAAkrwAIGY9AAB5vQAAiTwAQCE9AAAtvACwgL0AQA29AABQugAQvD0AwLM8AECFvQAArbwAQL88AGANPQAA5bsAAEW8AOBmPQAwkb0AoEu9ADCRvQAAj70AICo9AIABPADgYz0AgHa9AMDWvAAA5bwAwEa9AACMPQCAbr0AQKq9AICNvACA77wAAKC8AADCuwAATL0AAN28AEC2PADA6jwAoEy9AADgOgCgkD0AAEg8AIAlvAAANTwAAKc7AACxvACAbz0AAOw8AOAnPQCAozwA4BS9AGByPQAAgLwAgBa8AMCvPAAAML0AoCC9AIB5vAAAz7wAQMC8AKBaPQAAbjsAAIC6AEDAvAAAfDwAAMA4AEBdvQAAx7sAgBQ8AMAfPQBgTz0AwOc8AACfPAAAszsAAA68AIBqvADA7rwAgEG8AOCZvQAArDsAAIA4AIBkvQCAxDwAgFA8AAAYugAQjr0AQK68AACevQAADD0AQIU8AGAfvQCAkzwAAPi8AADVOwCgKD0AwPQ8AEA7vQAwor0AAL87AACFPQCg2D0AYA09AIBSPABghL0AwE69ANCGPQCgSL0AANE8AJDFvQCAIbwAAP47AIAlvACAZr0AAGy8AEAkPQAAA7wAAEi6AABYuwAAkLsAAME7AMBIPQAArjsAgHs8APCDvQCwob0AYGk9AACQPACgcD0A4C49AMDhvACAmb0AADY7AECdPAAAmjwAgHM8AABsuwAAIrwA4BQ9AMCCvQDwg70AgOQ8AJCmvQAAobsAQBK9AIBIvADAfr0AAA08AIARvAAAWLsAgE+9AACQOQAgKb0AoD69AAA4ugCQgb0AAOc8AIC1PACAR7wAoHQ9AADguQDAEr0AAKK7AIBevAAAyTsAQMY8AAB+uwCALLwAACC7AGBrPQAwgj0AwJq9AICNvQDArbwAgGs9AMBhvQAgCD0AcIC9AIAhvAAAyDoA8O+9AICFPABgLr0AwK28AAAiPAAAuDsAUJK9AICxPACA4bwAAI+9ACAhPQAg6b0AIBu9AMCJvACAcr0AAAAAAGAAPQAAZjsA4Mg9AEDQPAAgJb0AwC29AAAougDgCr0AAGo7AIAmPABAgjwAAOE7ALCsvQDgFD0AQO68AABrvQBA0DwAELk9AKA5PQDAQL0AQM68AIB4vACAjzwAAL+7AADgugDAaj0AIES9AIANvACgbr0AYH+9AIBuvQCAsz0AoDo9AGApvQDgAz0A4HA9AICavAAAxzsAgAA8AACwPABAZD0AABA9AMC/PADgor0AgC48AAASOwCQm70AAIe8AADUPABA7jwAwIU8AOAhPQCAwjwAYFQ9AGBsPQDADb0AgBY8AEDRvAAgEL0AgDk9ANCDPQDwiD0AQBU9AACqOwDAor0AAHg8AED+vACART0AAEA7AICXPACASzwAUM29AMBiPQDge70A4AQ9AABqvACgCb0A4Cu9AEBDvQDgDr0AAC48AIB1PQAAsDsAgK88AACEOwAAUrwAAKA5AGAEPQAAoDsAgBk8AKBXvQAA97sAYFE9AACRuwDAYD0AgHm8AMAKvQCAZLwAgOc8AACEuwAAdrsAALy7AIBsvAAgLL0AQH29AMD6PAAAUb0AAIY8AMCaPAAwpT0AgBa+AOANPQAACDoAADK7AIBuvQCgdT0AgC28ACBcPQCAHz0AYB+9AADfPACAKbwAID29AEDqPABAi7wA4Fk9AAC+uwAAjzwAADw9AAAoPAAgF70AoDY9AIDEPACApjwAgE68AIA/PACA9LwAwIK9AAAGPACQmD0AuAk+AAAPvQAA0TsAoLk9ALDRvQAAILsAgEs9AEBXPQAAWbwAAGq7AACdPABAnL0AALy8AAAAOQAA9DsAQC09AACTvABQkj0AwKo8AACAPAAgbb0AwAW9AACAOAAA07wAwDo9AEDsvAAgcj0=","chunkHash":"0ca64ccd02333b63667ade5300969a8e75dd4a4c55052b8d80ee5568a5733bb9"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n            sample_percent (int): Percentage of samples to load per class (1-100).\n            mask_threshold (float): Threshold for mask values to be considered \"masked\".\n            min_masked_ratio (float): Minimum ratio of masked voxels in a subvolume (0-1).\n            scan_step (int): Step size for scanning potential crop locations.\n            debug (bool): Whether to print debug statements during processing.\n        \"\"\"\n        self.root_dir = root_dir\n        #...\n```","range":{"startLineNumber":47,"startColumn":0,"endLineNumber":54,"endColumn":0},"embedding":"AAAwvABAwTwAICc9AKAjvQAgGL0AwPu8AADkuwCgAj0AIIG9AEBbPQAAbDwAYAS9ACBpPQAA5LwAYB49AMBAPQBAojwAIAQ9AOC5vQAA9zwAQEs9AABVPQCAAz0AYGO9AICEPACAOrwAAMi6AADruwAgeD0AgCy8AEDjvQCAs7wAkMS9AACYvADAmr0AAIA8AACsPQDgbz0AAPy8AICUvAAAjT0AsOO9AAB2OwCAKT0AwMs8AICtvAAAzTwAwLC9AOBWPQAAPLsAAN28AKBHPQBgUL0AAHG8AIDTvADghD0AAGe8AGA/PQDgV70A4Cm9AECVPQBAhb0AAFG8AIAXPQAgJT0AAMa7AGCBvQBgK70AoGe9AIAHvQCACDwAAAC5AEDNvACAI7wAIFo9AIAxvQDA27wAoNA9AAC7vQDA2rwAgGM8AEAkPQAACrwAgAs8AIAQvQBgpb0AUJK9AIBGvADwl70A4CO9AIABvACAGzwAQCi9AMBlPQAAMDoAoGQ9AMCPvACAV70AMJs9AABzPAAADD0AANo7AABCuwAA1bwAgCu8AADQuQAAUDoAQB29ACAIvQBwsz0A4Bw9AJCEvQBAUj0AwJy8AIBUPQAAHrwAgCm9AAB0uwAgML0AAHA6AGCMvQCgGb0AADQ7AIALvQAAiLsAAOK8AGC+PQBgF70AgAQ8AADuuwAgLT0AQBu9AEDMPACQur0A4KO9AADGuwAAGLoAgHk9AKAovQAgYj0AYG29AGALPQDwtj0AgFI9AJCzvQAA7LsA4Ea9ABANPgAAiLoAIHY9ACBuvQCAxTwAgCc9AAD8ugAgeb0AABm9AACAOADQvD0AACg6AAA8vQDA8rwAgIg8ACAdPQAAwLwAQIW8ACBePQAQgb0AUIa9ABCEvQAgWr0AYA09AECVvABAVz0AAI29AKAlvQCA6LwAAEi9AMBrPQCAi70AQGu9AIC4vAAAtbwAAIC6AABWuwCgGb0AgIe9AMCVPAAgKz0AwFu9AACNOwDwsD0AgEc8AIApvAAAILkAALC7AIC9vABgYj0AgI48AMAEPQAA0TwAAFq9AIBhPQAAnbsAQJO8AAASPACAMb0AwEO9AABmvACAJ7wAALy8AOBIPQAA7zsAAIa7AMCwvAAAdDwAADI8ACAdvQAAYzwAALA5AIDrPACgSj0AAN48AABgPACAyzwAAOM7AAAqPACA6LwAANS6AICevQAAELoAAOI7AGBVvQDAlzwAAII7AAD+OwAgXr0AgJu8AIB8vQAA5jwAAJQ8AGBLvQDA+jwAgJm8AAAAuQBAvDwAgLw8AGBVvQAAib0AgBQ8AABnPQCQxD0AwKI8AMCFPABQgr0AgGC9AOBpPQDgX70AgBI9ACCzvQAAAzwAAMA7AMCMvADgkr0AQNi8AEALPQAACjsAAEg8AIA9PAAAV7wAwJM8AKAoPQDAgTwAwAQ9AMCJvQBAlr0AYHg9ACAOPQBAaj0A4Ek9AECvvABQo70AAFo8AICiPACAojwAQJM8AAASvAAA8LoAAAo9ACA2vQBghr0AACI8AMCgvQAAgDoAgNW8AIDUvABAjL0AANM7AIC2vACAtrwAIJ29AICkPABgAL0AoFC9AAA2vADgX70AwMc8AOAdPQAAqrwAAEo9AAAaOwDgC70AABi8AMCQvAAAozwAgOQ8AAAgOQAAFDsAgJc8AGCLPQBAWj0AUKK9AHCSvQAABrwAoBs9AOBwvQBgEj0AMJu9AADnuwDAzTwAIMu9AECIPACgQ70AACi6AMDGPABApDwAEIy9AOApPQDA9bwA0IO9AKAMPQDQzr0AwD69AAC2vABQor0AADw7AMDwPAAApDsAsKs9AECYPAAARb0AoCq9AABhPAAA1LwAAGK7AIBFPADAoTwAAIc8AICgvQAA+jwAQOS8AOBDvQAA7DwA4Lk9AEACPQDgZL0AgGi8AADkugCATDwAAAg6AACnuwBAXD0AoIK9AACGuwCgBb0AQIG9AOCGvQDwvj0AYFU9ACAovQAAAj0AIGY9AIB1vAAAFjsAgCQ8AICzPABgPj0AwB09AOBBPQBwwb0AgCa8AIATPABgpb0AAM+8AIC6PABAjzwAwI48AID3PAAgND0A4DQ9AJCNPQCAxbwAgDI8AEAlvQCAWLwAwJw8AOCTPQBgLD0A4FA9AEC8PADQlb0AAH88AABLvQAgWz0AAEI7ACAaPQAADTwA8N69AIBtPQAwmb0AgEo8AABJvAAAnrwA4BO9AKAgvQDA1LwAYAE9AOADPQCACDwAQPw8AAAAOwAAYDoAAG28AEDnPAAAojwAAEg8AABjvQAAtLsA4BU9AIADPACgIz0AwJ68AABUvQAAubsAAFs8AAAUvAAA3DoAAEI8AECDvAAA/7wAYIi9AIDaPADgUb0AgIE8AICMPABgmD0AKBS+AMA0PQAAIrsAQIG8AEBUvQAAaD0AwLS8AOBQPQCAdj0AYDG9AECsPABApLwAgGu9AIC9PAAAuDsAAEE9AAB1vADAyTwAQEQ9AADAOACgIr0AQDg9AAC3PAAArzsAwNW8AAB4PACAN70AwFi9AIBpPADAmj0AOBA+AECnvAAAQTwAYKU9AGgCvgAA/LoAgG89ACAmPQCAdrwAAK67AADCPADAmr0AACC8AACWOwAAJjsAwLs8AACwOQCAiD0AAIg8AAAXPADgX70AAOy8AACCOwAAsrwAQDE9AIAKvQCATj0=","chunkHash":"b82b0071dfc66b04cc4b959ede04771e08df617518c9eb0ea57275f004678a8f"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n        self.transform = transform\n        self.mask_transform = mask_transform\n        self.load_volumes = load_volumes\n        self.crop_size = crop_size\n        self.target_size = target_size\n        self.debug = debug\n        self.sample_percent = min(max(1, sample_percent), 100)  \n        self.mask_threshold = mask_threshold\n        self.min_masked_ratio = min_masked_ratio\n        self.scan_step = scan_step\n        \n        \n        self.volume_cache = {}\n        #...\n```","range":{"startLineNumber":54,"startColumn":0,"endLineNumber":67,"endColumn":0},"embedding":"AAAAOwAA9zsA4Bw9AIA8vQBAUL0AwNO8AADNuwBAAT0AII+9AKAhPQCA7zwAwA29ACBvPQCAsLwAQDQ9AMBfPQDAoTwAwBM9ALCuvQDALz0A4DI9AGBAPQDgDj0AYFm9AIBmPAAARLsAgCW8AADIuwBgfT0AAA67ABDfvQAAm7wAsLK9AICevABAdL0AAMA8AACsPQCAij0AwC29AACHvAAAkD0A0NC9AABEOwCgHD0AAJU8AMDkvABA6TwA8La9AKBBPQAAHTwAQBm9AABzPQDgPb0AANw6AADtvAAghT0AgG28AEBNPQDgc70AQDm9AOB9PQCgYr0AAPC7AAAJPQDA+zwAACi8AFCLvQAA/bwAAFu9AICqvAAAijwAAIW7AAByvAAAYDsAoFI9AAD+vACAS7wAMMA9AEC2vQCAybwAAPU7AADYPAAAALwAAGg6ACAgvQCQlb0AQIu9AADEOgDgpb0AADe9AACUuwBAgzwAQGO9AMBfPQAAzzsAwIo9AIAxvACgdb0A0JM9AMDBPABgHj0AgAs8AICYPAAAlLwAgLy8AABhvAAAADkAgDO9AAAEvQAwvz0AIBE9AFCovQAgTz0AgKS8AABgPQAALrwAQK68AAAWPABAAr0AAOC7AKBfvQBAxLwAAEo8AOAPvQAA57sAAPC8ACC2PQCATb0AAMC6AACLvACAKD0AADa9AOABPQBwrr0A4KW9AABAvAAAbrwA4Ik9ACApvQCgXD0AoEu9AIAVPAAwxj0AoGM9ADC8vQDAprwAwCe9ACAEPgAAHrwA8I09AKA4vQAAmzwAQCE9AAAEvAAQhr0AYDC9AACQugDAwD0AgBU8AGA1vQAAhLwAgGo8AIDePAAAnbsAAOe8AEBrPQCQk70AAFy9AGCbvQDAcr0AoBE9AAB2uwAARj0AoFa9ACAvvQAgDr0AwEO9AGBrPQBAm70AkJS9AAC1vADA2bwAACQ7AADxuwBAFr0A4GS9AACpPABgLD0AQEe9AADkOgCghD0AAKI8AAA4ugAAvjsAAJE7AADevABgWT0AwAU9AMAOPQBAnjwAQDe9AAB4PQDAr7wAAOC8AABIPACgR70AAE69AABwvAAAr7wAwM68AMCAPQAA0zsAAGA6AIDavAAA7jwAACA6AIBUvQAAqjsAAME7AADaPACAWj0AwOE8AMCNPAAArzwAAIA6AAD1uwDAzrwAALy7AHDDvQAANLsAAA+8AGBwvQDAujwAACA7AAAQOgAAj70AgB28ANCAvQDA8jwAAOA8AKBLvQDACT0AwM68AAC0uwBA2DwAQJo8ACA0vQDQmL0AgHk8AKB9PQAAyD0A4AU9AIAwPACghb0A4Gi9AICKPQAgQb0AIAE9AHDHvQAA/TsAgDA8AICKvAAAT70AAJS8AIDQPACAkLwAwN88AABYOgDAlrwAwNg8AGAyPQAAlTwAgP08ACCEvQDAqr0AIII9AMCfPAAAeD0AADk9AAC0vADgr70AAAK8AICBPADAujwAAHY8AIAAvACAgrwAIBQ9ACCBvQCQlb0AgEE8AODAvQAAfLsAwIe8AACgvADAf70AAAo7AAB5vACAZ7wAQIS9AIBmPAAgKr0AwCy9AAC4ugDAYb0AgNo8AADpPABAgbwAoG09AADLOwBA97wAAHK8AIA0vABAkzwAwOo8AAD0OgAAUDoAAFg6AMCEPQCATT0AcK+9AJCOvQAABrwAIGY9AOCKvQDA4TwAgIK9AICFvABAqjwAMNu9AICYPACgNb0AAJ27AMDePAAAYjwAwKC9AIDmPAAAbrwA4H+9AIDqPABg1r0AoEK9AIBsvAAQjb0AAOA5AECqPAAA0DsAUME9AABfPABgLr0AQAW9AABJPAAA8rwAgEk8AIAuPAAAgjsAACw8AOCtvQAADj0AQMm8AOBKvQBA9TwA0LE9AGAEPQBAUb0AAF68AAChuwDAqTwAAIA4AAAgOgCAMz0AwFy9AADBuwDA8LwAYGG9AHCPvQBAsT0AAEA9AAApvQCAFz0AgGQ9AEC4vADAjDwAAMA5AIAEPQCgVD0AQBg9ACAxPQDwvb0AAGA5AABMuwAAs70AAFW8AAB4OgAAPzwAQIQ8AIC9PABAGz0AYDw9ACCLPQDAvrwAAPw7AADavABgDr0AAPA8AJCXPQAAKz0AYAw9AID4PABwkr0AQJM8AICLvABgfD0AACY8AKA4PQAAsTwA4Oe9ADCIPQDQmr0AAK48AIBPvADgGL0AIBm9AKA/vQCAA70AAFM8AKAfPQAAmrsAAMA8AADNOwAAfrsAABA7AIDwPADAiTwAAA88AEA1vQAAWDoAgB49AACYugDgMj0AgI68AABIvQCAybwAwKg8AAB+uwAAPDsAAKk7AACNvACgGr0AYHe9AIAOPQCAMb0AQMk8AIAMPABAiz0AWBG+AICmPAAAnLsAALo7AOBfvQDAdD0AAGy7AAB/PQAgfD0AAOi8AICfPAAAZrsAwGa9AAABPQCAfbwAQDc9AACkugCAbDwAwGg9AADwOwCAcrwAgEc9AMDuPAAAXjwAAAi9AABfPADAPr0AAEe9AAB8uwAgmT0AwAc+AIAbvAAAKTwAcM09AMDfvQCADDwAAGE9ACA8PQBAhbwAABO8AECFPADQlr0AAEu8AADfuwAAszsAgAE9AIALvADAaD0AwJw8AADxOwCAQ70AwOy8AACkOwCAVrwAQDY9AECxvADAWD0=","chunkHash":"b8988b0f3716b493171cb06536b74144f70ffafcc79a3ff7b032a16badbc9743"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n        self.max_cache_size = 10  \n        \n        \n        self.samples = []  \n        \n        if class_csv_path and os.path.exists(class_csv_path):\n            try:\n                \n                df = pd.read_csv(class_csv_path)\n                \n                \n                df = df[(df['class_name'] != 'Unclassified') & (df['class_id'] != 19)]\n                \n                \n                if filter_by_class is not None:\n                    if isinstance(filter_by_class, int):\n                        #...\n```","range":{"startLineNumber":67,"startColumn":0,"endLineNumber":83,"endColumn":0},"embedding":"AAAeOwAA2jsAIA89AMAlvQDAW70AQMe8AABZvACgFT0A4GG9AEAvPQAA3DwA4AW9AKBDPQCAnrwAoFY9AKBrPQDA3zwAwLg8AOCzvQBATT0A4EQ9AIBKPQDgFz0AQIa9AMDHPAAAILoAAKC6AABWuwCgTT0AAJA5AGDkvQCANbwAgLa9AAB6vAAgXL0AgPQ8ADCqPQCQkz0AQEe9AIDLvACAaj0AgMS9AIAcPACADT0AQPY8ACAmvQCgCj0AsLS9AABBPQAAnjsAQOW8ABCLPQDATb0AgCC8AOAQvQBgZT0AAJ28ACBrPQBAcr0AgEW9AICKPQAAW70AAKC5AKAIPQCA9jwAgE68ANCGvQBA4bwAQEK9AADDvAAAWTwAAIC7AADEOwAABbwAoEw9AIDVvAAAvLsA0KI9AOCrvQAAYrwAgFg8ACAaPQAA27sAAMk7AGAavQDAl70AQJm9AABKOwDwob0AQBC9AABkOwCA2zwAYG29AMBDPQAAWrsAoIk9AACIuwAgR70AQKk9AIDvPACgHj0AAN07AACMPAAAabwAwNS8AICsvACASrwAoCO9AIA5vQAQyz0AgFY9AFC6vQBAVT0AQIq8AOBPPQAAgLsAAOW8AIBJPAAA5bwAgAo8AIBGvQCA/rwAAME7AMAOvQAASLwAwO28AMClPQBgFr0AAPC6AICGvADARD0AADi9AGAbPQAgn70AAKe9AADbuwCAKbwAwGs9AKAmvQCgVz0AICm9AICBPABwzD0AYGs9AGC1vQBA7LwAwDa9ACD9PQAAsDoAsJk9AKBkvQAAWjwAwC09AAAYugBQl70AQEe9AAAGOwCQuj0AANU7AEATvQDA3LwAgDk8AMCgPAAAgrsAQKm8AIB1PQCglr0AQG69ABCOvQCAJL0AIBk9AAAauwDgVT0AoD69ACA1vQBAj7wA4Ee9AMCWPQCgkL0AgKi9AABsvABgGb0AAJw6AACCuwBAIr0AwHG9AIDkPABAAj0AAGS9AAAkOwBwmT0AgDg8AABeuwCAYzwAgA08AIDCvACgVD0AQBQ9AIAOPQCAkjwAQFi9AKBYPQCAq7wAgAa8AECwPABgFb0A4CK9AACbuwDAnLwAQOK8AMB2PQAAvzsAQK68AACzvACgBj0AACA5AAAnvQAASDsAgE88AIDHPAAASj0AwKA8AAAvPAAAejwAAKi7AAC7uwDA17wAAGo7AIDDvQAABDsAAP+7AICHvQBAoDwAAOi6AIAyPABgQb0AAAK8ABCFvQCgAT0AAPc8ACB3vQBAvTwAwOW8AADKuwCAyTwAAMU8AEAkvQAwj70AwJE8APCAPQAAuz0AgOA8AIAGPADQg70AEIS9AGB+PQAgQL0AQME8ANC8vQAAPjwAAMy6AICYvADgSr0AwIS8AECgPACAg7wAQPQ8AACguwAArrwAAPU8AEAUPQCAmDwAwOI8ACCMvQCwpr0AIHw9AIBoPABAfz0AQFk9AMDRvACwp70AAIG7AICiPACAeTwAAHk8AADvuwCAuLwAgO88ADCWvQBQpb0AAEE8ADDSvQCANLwAgFy8AIC8vAAgc70AABY7AMCnvACAK7wAwHO9AAAyOwBAE70AQC69AACZuwBghr0AwKg8AMDcPABAlrwAYHs9AABZPADgHL0AgLi8AADkuwCAvDwAgNc8AACBuwAAMLsAAJ+7AICVPQDgcz0AIKG9AGCLvQAAZLsAQFU9ACCtvQCgCz0A0Iq9AIB0vACgAT0A0Om9AACLPACgHr0AAHQ7AECQPACAATwAoJ29AAC+PADAobwAYIa9AEAQPQCgzL0AYCG9AIASvABQlr0AAOE7AICRPAAANjwAsMI9AIC7PAAgC70AACW9AEC/PACAhLwAAAA4AMDePAAAcjsAAN87ABC9vQAALD0AgMW8AOAmvQBAAD0AMKo9AAAEPQAgdb0AgLi8AIAMvABAujwAAAA4AACiuwBAWT0AgFi9AIBKPACAlbwAoF69ACB4vQAQlz0A4Bo9AEAVvQDgNj0AYHc9AIBuvAAA4jsAAKC7AIDSPADgUz0AgB09AKAPPQAAtL0AACC5AADAuABAvL0AAPI7AAB6OwAAsDsAABQ7AMCzPAAAMj0AYDQ9APCjPQCAwLwAAGg6AEDNvAAgLb0AQBM9APCbPQAgMD0AQPw8AACnPAAwmL0AgBM8AIBzvAAgcD0AgEA8AEAVPQCA4jwAsOi9APCTPQDwnL0AgLE8AADAuABAPr0AoBK9AGBGvQCA6bwAANs7AEAwPQAAiDoAgL48AACyOwCAALwAAKc7AMCRPABA+zwAAMi6AOAFvQAAcDsAYC49AACIOgDAHT0AQIS8AAASvQCA4LwAgPA8AABgvACAMjwAAOM7AIDivADgHr0AoFC9AOALPQDgXL0AQJE8AACoOwDglj0AOBW+AABEOwAAursAAKQ7AIBMvQCAfj0AAIC4ACBePQDASj0AgPC8AIAXPQAAe7wA4FG9AKBHPQAAe7wAQGE9AADMuwCApTwAQE49AAAsOwCAubwAgEk9AIDbPACAHzwAALO8AAAkPADAPb0AABq9AAA2OwDAgD0A+AY+AMC1vAAAuDsAwMA9ABDTvQAA3jsA4IA9AMBHPQCAfrwAgIq8AMClPACwir0AgAW8AACWOwAAWDoAwLc8AABYOgCAij0AAC48AICZPADgJb0A4AS9AACpuwDAnLwAgBE9AIAyvACQjj0=","chunkHash":"58e5527c326d3232cd73773e693967c6ab4eb0fdb34cedb48c638f68a73b8f18"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                        filter_by_class = [filter_by_class]\n                    df = df[df['class_id'].isin(filter_by_class)]\n                \n                \n                if sample_ids is not None:\n                    sample_ids = [str(sid).zfill(4) for sid in sample_ids]  \n                    df = df[df['sample_id'].astype(str).apply(lambda x: x.zfill(4)).isin(sample_ids)]\n                \n                \n                if self.sample_percent < 100:\n                    #...\n```","range":{"startLineNumber":83,"startColumn":0,"endLineNumber":93,"endColumn":0},"embedding":"AAA0uwAAUjsAQMs8AGAfvQAgRL0AgMy8AAA4vADAAD0AMIW9AOBQPQAgCj0AgOy8AABfPQAAOrwAIDc9AOBaPQCA1DwAQAM9AAC6vQDgYj0AgCE9AGBJPQDACj0AUIO9AEC3PAAAhLoAAPQ6AABJvADAVT0AAAC5AADZvQAA87sA4KW9AIDLvACAfb0AgLE8AGCaPQBgkT0AQD+9AECevACAhD0AoMm9AAAbPABA3TwAAL88AIDpvAAADj0A0Lm9AMBnPQCABjwAgOK8AKBtPQDAHr0AAMC6AICUvABghz0AQL68AMBrPQBAer0AoDK9AKCbPQCAc70AAJW7AEBEPQDA/zwAANC6AACPvQCAwLwAAEG9AECcvACAjTwAAPS7AIAwPAAAs7sAYFA9AMCzvAAAfLwAoJo9AECtvQDAj7wAgG88ACAiPQAA+LsAgAE8AIAwvQCwmb0AYJW9AAAMPADQo70AoAi9AAC4ugBAozwAoHC9AMA2PQAAaDoAEI49AAAovAAASL0AEKk9AIC3PAAgQD0AAOQ7AMChPACANbwAAMi8AIB0vAAAnLoAgDm9AIAjvQAQyT0AQGI9AGC7vQDAYT0AwIu8AEBGPQAA27sAgLe8AACIOwDAB70AAPk7AMBwvQCAML0AAIy6AAADvQCA0bwAgP68ADClPQAAWb0AAN+7AECXvADgST0AQEW9AMDaPACAib0AgKy9AAAguQCACrwAkIg9AMA4vQBAcj0A4FW9AEDkPADQyD0AYDo9AICavQBAxbwAQEy9ABAAPgAA+DoAQJk9ACBnvQCAfDwAQAw9AACIuwCwmb0AAB+9AABoOwBwsz0AgJQ8AMAUvQAA8rwAgJU8AACbPAAA2LoAgI+8AAAwPQDgir0AUIG9ADCOvQAAIL0AwNo8AAA6uwBAVz0AoDy9AGBPvQCAP7wA4DK9AOCYPQCQj70AYKy9AMCTvAAgA70AgCe8AAAauwCAKb0A0IC9AIDGPACgBD0AwBO9AAAgOwCAjT0AwKM8AADXuwCAjzwAAMA7AMCPvAAgUD0AAOo8AKAPPQCA1DwAoEC9ACBQPQCA9bwAAPy6AECRPAAA9bwAoAi9AABbvAAAx7wAQP28AKBhPQAAODsAAGe8AMCrvADACT0AgAM8AOAwvQAAMLsAQIM8AMCnPABgWj0AwJY8AIBnPADAnTwAgBS8AADEugCA1bwAAME7AFDKvQAAXjsAAKC7AMCBvQAA7jwAAPA6AADAOgCgTb0AQLW8AACDvQCA/DwAgKo8AECHvQAA9DwAgK+8AADkugAgBT0AwNY8AAAMvQDgkr0AAHE8AIB2PQDgsj0AAOk8AIByPACAh70AcIW9AECLPQDASb0AQO88ABC3vQAA1zsAAGq7AICmvABANr0AAKm8AACuPABAhLwAYAk9AACAuADAgrwAAO88AMAfPQDAvTwAgPk8AHCXvQCAn70AgE89AADdPACgkT0AwEY9AGAOvQDQmr0AACO8AMC+PADAtjwAADc8AAD8uwAAX7wAwPc8AGCVvQBQl70AAIQ7AJCvvQAAa7wAgK+8AACVvABgir0AABA7AECzvABAmLwAAIa9AADcOwBAFL0AoBu9AAAyuwCgc70AQKE8AEDMPACAX7wAQJQ9AADSOwCAFr0AwN28AAC7uwCgBj0AgAI9AABAugAAWrsAAJ27ABCGPQDgbj0AcLm9ACCFvQAAOLwA4D89ALCdvQDgAD0AgHy9AIBvvAAAxTwAIOe9AEDFPADAP70AALe7AMCUPACAMjwAUKq9AECTPADAobwAQH69AGAfPQAA0L0AIEK9AACJvABQk70AAOw6AAAUPAAABDwAEMk9AICNPACAHL0AIEe9AAAAPQAAYbwAgBS8AMC3PAAAPDsAACE8AOC9vQDgHz0AQLS8ACAzvQAgAz0AwK09AGAJPQBgh70AwPq8AAA/vAAAkzwAAHK7AIBAvADAfD0AAGq9AMCjPABAprwAgEi9ANCAvQAwnD0AYCA9ACATvQDALj0AoFg9AADquwAA6jsAAO67AEDJPAAgdD0AoAs9AGAaPQCAsb0AAJk7AADHuwBAyL0AACg6AIAiPAAAeDwAAKi7AMDMPADAST0AYD49AJCTPQAAkrwAAMo7AICtvADgIL0AgPo8AICWPQCgFj0AgAg9AIBKPACAmr0AANE7AEC2vABAfz0AgGs8AEAjPQBAlzwAoOq9ANCAPQBwj70AwKA8AACIOwAgKr0AAAW9AGBRvQCADL0AAHU8AGAAPQAAq7sAgLw8AACsOwAADLwAAOi6AEDwPABA1zwAALA5AGApvQAA1zsA4Dk9AABmOwAgKD0AgFq8AADovABAwLwAwNo8AEChvAAAHDsAADI8AAC5vADgJr0AQGC9AKACPQDAZL0AQOQ8AAALPADwmT0AGBa+AAAIOgAAzLoAAPw6AKA4vQCAZT0AAPC7AIBjPQBgfT0AAA69AOAaPQAAYbwAgFG9ACA1PQAAuLoAQDA9AABMuwDAozwAAEk9AADtOwDA57wAoG49AACFPABAojwAwKq8AACqOwBAU70AIBS9AIAsPACgez0AEAY+AEC0vAAAUjsA0LE9ALDVvQAAQjsAYFk9AGBMPQCAdbwAAIW8AICUPAAglb0AABa8AACvOwAAsrsAQOA8AACZOwBAcT0AQA89AIDHPACAO70AwAe9AAAMvADA9bwAYB09AMChvABQjj0=","chunkHash":"777e4d6096a000040df1ce48222bcab23b4cc47b759dbe9d76c61dc1eaa6c7b7"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                    sampled_df = pd.DataFrame()\n                    for class_id, group in df.groupby('class_id'):\n                        \n                        num_to_keep = max(1, int(len(group) * self.sample_percent / 100.0))\n                        \n                        random.seed(42)  \n                        sampled_group = group.sample(n=num_to_keep, random_state=42)\n                        sampled_df = pd.concat([sampled_df, sampled_group])\n                        #...\n```","range":{"startLineNumber":93,"startColumn":0,"endLineNumber":101,"endColumn":0},"embedding":"AABAOQAA0DoAQBU9AEDlvADgLr0AgFe8AIALvABA8jwAgGi9ACAkPQDA/zwAAMm8AOBUPQDAlrwAoCk9ACBLPQAAezwAQM88AECSvQCAVD0AgPY8ACA+PQCA7TwAcIu9AACxPAAA6LoAANw6AAA6uwDAUj0AAJQ7AHDlvQAAQrsA8LS9AIDMvADgjL0AgPU8AMChPQDQlz0AoGG9AADCvACghT0A0NG9AAAuPADA5zwAwPc8AOAhvQCgDz0A0Lu9AACSPQBAgjwAgM68AMB9PQDgXL0AQI+8AABSvADAgD0AAEu8AMBOPQBgO70AgCS9AKCYPQDgZ70AwIE8AOBcPQBAET0AAAq8AHCZvQAAzLwAgCG9AAAHvQAASjwAAF67AABQOwCAA7wAAC09AIARvAAA7bsAAHA9AADZvQCAC7wAAIM8AIAPPQAAiDoAgCg8AIA+vQAAu70AsIW9AABGOwAAnr0AAAG9AAB+OwBAszwAIHK9AABCPQCAPLwA0JM9AABOuwDgLb0A8Kc9AIDoPABAKz0AAD48AACvOwDAu7wAgN+8AIBNvACAVLwAoBS9AOBnvQCA7j0AcJA9AMC6vQCAPT0AAMW7AMBaPQAA+rsAgGi8AAAoPABAmLwAQMk8AEBzvQDADL0AAGq7AIAAvQCAlbwAwIK8ANCzPQDAcL0AALk7AAAYvAAgbD0AQDO9AAA+PACwib0AsKa9AECBvAAAsDkA4GM9AGBTvQDgNz0AICS9AIBtPADwvT0AQCg9ABChvQBA0rwAYFa9AOAAPgAARrwAAJY9AFCCvQAATTwAQMY8AACZOwBQjb0AIBW9AABCuwAQrD0AQJg8AIACvQAgBL0AAII8AIA6PACACTwAwJm8AOBPPQAQlL0A4IC9AJCBvQDgE70AAN48AMCavAAgTz0AIFy9ACBPvQBAzLwAoDS9ANCTPQAQiL0AYLS9AACjvABgI70AAJC8AACAOQDgLb0A8Iq9AGAFPQAABT0AACu9AADaOwAAkT0AQMU8AACLuwCAWzwAAEI8AMDpvACAfT0AwCE9AGAUPQDAtzwAgG69ACA4PQBA2LwAALq7AIDPPABA1LwAAC+9AAD0uwAAxbwAwN28AIBlPQAA9LsAgA28AOAFvQCACT0AAMs7AGAavQAAULsAADo8AEAUPQBAYz0AgJk8AAAwOwCAeDwAAEC5AACYOwDAwLwAAGI7AADHvQCAFDwAAKq7AOCHvQAA4TwAANy7AIAcPADgP70AgHC8ACBrvQCA4zwAAGU8AGBsvQAgBD0AAEa8AACeuwAA1TwAgO48AEDcvACAk70AgHM8AKCcPQBQqj0AwMk8AIA0PADwgb0AIHC9ACB3PQCAOr0AAO08ABClvQAAZDwAAH67AIBEvAAgVL0AwKG8AABfPADAkrwAQK88AAA4uwCAV7wAwAQ9AEC+PACAUDwAgHE8AIB+vQDQib0AoAY9AMDZPACwhz0AAPk8AKBXvQAwir0AABA6AEAAPQBAhjwAAMc8AIBPvACAVbwAIDM9AMCPvQAwg70AgAC8AKC9vQAAJrwAQNy8AICZvAAgir0AAHa7AADCvACAp7wAoHq9AAClOwBgJL0AwB+9AIAVPACAgb0AAHA8AADsPACACbwAgFU9AABVPAAA57wAgGm8AAAgOgDgGj0AAEY8AIAnPADAnjwAgHC8ALCSPQAAbT0AoK29ADCBvQAArzsAIEc9ACCfvQBA4TwAgH69AABBvAAgCz0AYPa9AACGPAAAJ70AAAA5AEDSPAAAWzwAULG9AAC/PAAgA70AEIW9AKASPQCQxL0AABW9AAAGuwDAtr0AAPc7AABXPACAWTwAoNs9AACqPADAJ70AYEm9AMDdPACAdLwAAMO7AMCPPACAbTwAACU8AJCuvQCAFj0AgMO8ACBYvQDACD0AwKk9AEDwPADQjb0AgFS8AAAoOwBAsjwAAEw7AIAdvABgcz0AQG+9AACSPACAlrwAwGS9AIBKvQCglz0AQEw9AAAZvQDgMD0AAG09AAD6uwCAFzwAAAS7AAAQPQAQlD0AIDg9AOA1PQCAnL0AAOG7AACVOwBQx70AAAw7AABYOwAAQDkAACo7AMCZPAAANz0AAD49ABCcPQCA1rwAAD48AMCEvADgIL0AAO08AECbPQDgLz0AAMs8AAC5PABglr0AABI7AIClvAAgWT0AAFA7AED7PACAsTwA0PG9ALCBPQCwjL0AAKM8AAAguQDgPr0A4A29AIAyvQCAB70AAKs8AADbPAAAADsAgFk8AABLPAAAmzsAALA6AIDmPADAmTwAAGQ8AMD5vAAAbDsAABM9AACQuwCgJT0AAKS7AGAOvQDgB70AwBo9AIAcvACALzwAAEU8AIAPvQBAMb0AIH69AAD2PADAdL0AALw8AACsOgAAmj0AqBu+AACyOwAAYrsAAJw7AIBavQCAaj0AAKi7AKBZPQCgcj0AAPK8ACAkPQAAYLwA4E69AKBNPQAAnDsAAFA9AAAEuwAA6zsAgEI9AAAJPABAy7wAAEY9AEDIPAAA3TwAgHG8AAB8OwDASb0AwNa8AIDAPADwiz0AaAM+AACIuwAARDwAcNg9ADDLvQAA6DoAYIA9ACBWPQAAfbwAgEK8AMCdPAAgWr0AALa7AAAvPACAD7wAQPs8AADQOgDgYz0AwNk8AEAEPQAACr0A4CK9AADSuwCA1bwAIAY9AIDzvADgfz0=","chunkHash":"4f4c4e70cdc9b8e12664459916c1f442c821ec9cce6db0efd9c8c5ce27c61575"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                        print(f\"Class {class_id}: Sampled {num_to_keep}/{len(group)} samples ({self.sample_percent}%)\")\n                    df = sampled_df\n                \n                \n                for _, row in df.iterrows():\n                    sample_id = str(row['sample_id']).zfill(4)  \n                    class_id = int(row['class_id'])\n                    class_name = row['class_name']\n                    \n                    \n                    if class_name == 'Unclassified' or class_id == 19:\n                        #...\n```","range":{"startLineNumber":101,"startColumn":0,"endLineNumber":112,"endColumn":0},"embedding":"AACkOgAAtjsAgIs8AEAZvQCgR70AQKW8AMDDvACAvzwAYFu9ACASPQBAsDwA4AO9AABjPQCAlbwAwCM9AGBcPQAAbDwAAMo8AICqvQDgdz0AoCA9AGBGPQCgID0AcIC9AIDwPAAAg7sAAKy6AAD3uwBASj0AAMQ7AHDWvQAAErwAcLC9AMCQvAAwn70AAMk8AOCZPQAgjD0AYFi9AIDzvACAjT0AoOK9AIDQPACAvTwAANY8AIDavAAABz0A4Me9AFCBPQAA9DsA4Aa9AEB5PQCgVL0AAN28AMCbvAAgdj0AgDS8ACBYPQBgM70AQES9ANCPPQBAbL0AgC88AKBWPQBA6DwAAIG7AMCMvQCAobwAgC29AAAQvQCAjTwAAJi7AAA4ugCACLwAYE89AMCEvAAASbwAAGk9ACDMvQBAnLwAQKU8ACA2PQCAD7wAAPE7AEAUvQCQpb0AUKW9AACauwBgnL0AQNm8AACgOgDA8jwAkIG9AAAxPQCAUbwAkII9AIBhvACgSL0AsKY9AEDaPACgTj0AgGU8AADIOwBAx7wAgNe8AADJvACALbwAQAy9ACBsvQDA1j0AEIs9AJDCvQBAbj0AANC5AIBqPQAAKLoAgL28AIAuPADA57wAQK08APCEvQCgLL0AgAG8AAAZvQCAkbwAwNi8ALClPQAgRr0AAAi6AIBevAAAQT0AADO9AAC9OwAwhL0AwKy9AIAfvAAA0zsAYGc9ACBCvQDAVD0AgCm9AAAmPADgvj0AoDg9AIB9vQAAxLwAcIK9AODyPQCAMrwAsJk9AMBAvQCAxzwAgJ88AABeOwCQmL0AACq9AADbOwDgoj0AAME7AMDjvADgI70AgMs8AEDrPAAAfDwAQMq8AID9PAAghb0AIIG9ALCQvQBgGL0AgPE8AADYuwCgVD0A4Ge9AGBNvQAAjrwAgBu9AMCWPQBQlL0A8La9AACZvADAHr0AgBC8AIBwvAAACL0AkJq9AKAYPQBgAT0AgCe9AADGOwBQoz0AQIU8AAACvACAKTwAACC6AACkvACAdj0AABk9AIApPQBA8zwAQHa9AGAbPQAA3bwAAIA4AMCrPABAo7wAQCa9AABtvACAz7wAAOW8AEBcPQAAlDoAgFe8AEDGvAAA3jwAQIQ8AEBNvQCAGzwAAJA8AACzPADAND0AgJQ8AABCPACAhjwAAL27AADMOgDAEL0AANo7AFDYvQAAjLoAAK87ACBivQAA9zwAAOQ6AAAiPABAHr0AgGe8AHCBvQCA2DwAQLU8AECKvQCA2jwAABG8AACCOwAA1TwAwLM8AADNvAAQrr0AwKo8AOCVPQBwpj0AgBY9AABoOwCQmr0AkIa9AHCNPQAAVr0AgMA8AKCQvQAAmjsAAFW8AICsvADgR70AgBG8AIAvPAAAR7wAYAM9AACgOgCAX7wAwOY8AMDAPAAA5jsAAIk8ADCHvQBAib0AgBU9AACoPAAwkz0AADA9AEBEvQDwj70AAJG7AMDLPAAAxDwAwIk8AIBBvAAA/LsAoA09AHCQvQCgf70AAEA7AACzvQBAmLwAQNq8AMDhvAAgjr0AAAs8AADVvACAfLwAQH29AAAYugDAB70AYAO9AAAeOwDwhb0AAP07AIDmPACALrwA4E49AACUugCgI70AgAO8AACUOgAArTwAgOo8AAAQvABAiDwAAIC7AJCaPQAghT0A8J+9AICEvQCAQDwAwDA9AICuvQDAFz0AgIm9AABWvADAJT0AsPS9AECNPABAQb0AAKQ6AICPPAAAuDwA4KO9AMCLPADAyrwAMI29AMBJPQBgxL0AQBq9AABGvABgqL0AALC7AIBXPAAANDwAMMY9AICIPAAgNr0A4D+9AEDTPAAAFbwAAAO8AECtPAAA5DsAgCg8AACmvQCgCj0AwJW8AMA6vQBACD0AwLo9AEAYPQDAdr0AgI+8AAChOwCAOjwAAMG7AMCPvACAZD0AYG69AECRPAAAtbwAQHa9AMBJvQBQlD0A4Fg9AAD7vAAgVT0A4E09AAAougAA5TsAANS7ACALPQAwlz0AwBg9AIAhPQCwqb0AAOA6AACQuQDgvL0AAFM8AAATPACACDwAAGi7AEDKPACAVj0AoEY9AMCUPQCAWrwAAKo7AECsvACADL0AgPE8APCgPQAgHD0AQMM8AECwPAAwh70AAJs7AEDjvABgaT0AABS7AOAWPQBAuDwAsOa9ABCCPQDwkr0AgIo8AAAgOgDgY70AAN28AIA2vQBAy7wAAK08AEDAPAAA47sAwOY8AACQugAAhzsAAGY7AIDaPACAvTwAAMA7AID6vAAAkDkAIAk9AADAuQDAFj0AAOy7AADWvAAAmrwA4BI9AICovAAA9TsAgAw8AIDivADATL0AQHK9AMC7PADgX70AgC88AAA0PADwkj0A+Bq+AIA9vAAA47sAAOC5AMB3vQBAYz0AAPi6AKBOPQBAaz0AYBu9AGAcPQBApLwAAFW9AEBqPQAANrsAQFM9AIAvvAAABjwAIEQ9AADMOwCAy7wAAC49AABtPAAAwTwAAKG8AIBEvACAVr0AoAS9AADzPABAgT0AAAA+AICRvAAANDwAsMM9AGC5vQCAObwAwHE9AMBSPQAAhLwAAJW8AADHPACAZ70AAM27AICPPACAJLwAgNg8AACcugCwiD0AwAM9AEANPQAALb0AAB69AAAGvADA6bwAQCA9AADLvABQlT0=","chunkHash":"76729bd39bf23c8696bbc33d6af174fa85e2f06d2e4fcf62e74ed483f1e8e67c"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                        continue\n                    \n                    \n                    padded_dir = os.path.join(root_dir, sample_id)\n                    unpadded_dir = os.path.join(root_dir, sample_id.lstrip('0'))\n                    \n                    sample_dir = None\n                    if os.path.isdir(padded_dir):\n                        sample_dir = padded_dir\n                    elif os.path.isdir(unpadded_dir) and sample_id.lstrip('0') != '':\n                        sample_dir = unpadded_dir\n                    \n                    if sample_dir is None:\n                        #...\n```","range":{"startLineNumber":112,"startColumn":0,"endLineNumber":125,"endColumn":0},"embedding":"AAD4OgAA3DoAgB09AKAIvQBgY70AAMK8AABeuwCA1DwAQIS9AKA4PQAAyDwAgLy8ANCCPQAgDL0AwDU9AMByPQAACD0AAN88AFDKvQCgUT0AYCQ9AOBHPQCA7TwA4Im9AICcPAAAEDoAgAq8AAAAvADAgz0AAMi7AMDdvQAAWbwA4MG9AIAJvAAAUr0AAOQ8ANCoPQAwhD0AgC69AECCvAAQlj0AEM+9AIBlPABA+TwAgJ48AACevAAA9jwAAK69AGB2PQAAxTsAwLm8AEB+PQCANb0AAFy7AEANvQCAaj0AgCm8ACBMPQCgeL0AgDm9AMCKPQCgT70AAD67ACAGPQDALT0AgAC8APCEvQCAl7wAoEi9AMCcvAAAmzwAAKy7AIAMvAAALrsAAFk9AEDEvADAobwAoK09AECpvQCA7LwAgIc8AID5PAAA7bsAAM07AEBAvQAQhr0A8Ja9AADwOwCAjb0AgBi9AAAFPACAqjwAIHy9AEBAPQAAkDkA8I09AACJvACgXr0AAKA9AED5PABAFj0AAMC5AECZPACA6bwAgLW8AICnvAAAoTsAQC+9ACBHvQAAxD0AgD49ACCxvQCATj0AADK7AICVPQAAjbsAgGi8AADuOwCAxrwAAPS6AOBjvQBgCL0AAJA7AADKvADAhbwAwNS8ABCdPQCgLL0AAGo8AIA0vADgMz0AoCS9AIDrPABQmL0AAJq9AADQuwAAerwAkIA9AGAVvQAASD0AYCy9AABDPACwtT0AgGA9ANC4vQCAgLwAICe9AKAFPgAAGjsAoJg9AABlvQAADjwAwDE9AABOOwBwg70A4DS9AIAVvADAsz0AgEo8AIAgvQDgBr0AwLY8ACAjPQAAjDoAQMe8AKByPQDgkL0AAHa9AMCkvQBAOL0AgBk9AACXuwDAQD0AYFC9ACBJvQAA0rwA4ES9AKCLPQBAk70AwIq9AICXvAAA2LwAAGA6AAAAuQAAEr0A4Gy9AEDlPAAgJz0AwEe9AAD0OwDQmz0AgFA8AAAouwAAUzwAAKS7AADhvACAZD0AwNk8AEDiPABApzwAAFK9AIB2PQCAvrwAABe8AADFOwAACL0AoD69AACFvACAh7wAQPW8AGBuPQAAnDoAACC7AICnvACACj0AALO7AAA7vQAA+DoAAKY7AIBlPADAMT0AAGs8AIAYPACA2TwAAJQ6AAAAvACA7rwAAHg6ANDFvQAApTsAABq8AEBjvQCAzDwAgBg8AACUOgAgUL0AAGW8AECdvQAAwzwAANE8AIAovQBAzjwAwJW8AAAGvAAAzDwAwIs8AIAgvQDwh70AABc8AMCBPQDwqz0AgBM9AIA1PADgeL0A4Fi9ALCTPQBARb0AQOI8ADDDvQAAUbwAgDk8AIBUvADgVb0AgIK8AIDVPACAEbwAQLM8AADkOwAAHLwAwKQ8AOAXPQAAozwAwJs8ACCBvQAwkL0AQIM9AIBHPAAAUz0AwBc9AID8vACQrr0AAF68AAAfPACAoTwAgKs8AACuuwDAhLwAgCI9AFCHvQDgkb0AAEs8APC/vQAAxrsAQJe8AIDKvADwj70AABg7AADXvACAdbwAMJK9AAA1PADgWL0AoAO9AACKuwDgXr0AgBA8AMDOPABAkrwAIEU9AACIugCgMb0AADm8AIATvAAAijwAwAI9AADJOwAAwrsAADY7AIBuPQCgaT0AoLK9AOCNvQCAULwAwDk9ACCavQBgPj0AAIS9AIBhvACgCj0AsL+9AIBYPACARr0AgA28AIDaPACAdTwA4Jm9AIAQPQAAlbwAgIS9AICtPABw2L0AgFW9AABtvADAmb0AAIq7AAAdPAAAHjwAQNQ9AECwPADgLb0AACK9AIDUPAAAlrwAALi7AMC8PACAMzwAALs7AOCzvQAAOT0AAMC8AGAmvQCA/zwAsKo9ACATPQAAab0AQIy8AAAuvADAtDwAAIK7AAC4OgBAYD0A4Fa9AADruwCA57wAQG69AABuvQBAoj0AwCM9AGAjvQCgJj0AgGY9AIBAvADAgTwAAAA8AMD/PADQgz0AgP08AABAPQAgt70AAEi6AABwuwAQtL0AACA5AAApPAAA8LkAAOM7AICvPABAAT0AgBk9AHCRPQAA+rwAANQ6AMAIvQDgGb0AQOI8ALChPQDARj0AQAc9AMD8PACwm70AAJs7AIDCvACAbj0AgLQ8AGAzPQAAtjwAkOi9AKCCPQDwlr0AwIM8AADNuwAgJ70AIBa9AGBjvQCgFb0AAN47AGAIPQAAGjsAQMQ8AIB1PAAAkDkAAFA6AMCiPACAuzwAAOA6AIBPvQAAvrsAIDA9AAB2uwBAKz0AgFm8AMBHvQBA1bwAIAg9AAC8vAAAwbsAACo7AEDsvAAAV70AgFa9AADxPABgXL0AwNQ8AAB5PACAsz0AEBe+AAAgugAAALsAALQ6AIBZvQBAlD0AAJe7AACFPQCgbT0AwBO9AMDuPAAAs7wAAFK9AAD8PACAELwAAG09AADmuwCAmTwAADo9AAA+uwCAzLwAYCY9AMC1PACACDwAIBy9AABsPAAgU70AYEy9AACEPADgkT0AMAo+AACxvACAojwAcL09ADDWvQCALrwAQF89AGA/PQCAf7wAAEG8AIC0PACwiL0AACG8AAAiOwCAXzwAANo8AADUugDgdD0AALE8AEDfPABAVL0AIDK9AIAQPACASrwAQB09AICPvAAgfT0=","chunkHash":"60d6a5e1c6fa31918f5b2acdb65f40592e657c14225f0198ccb8061adc822d8e"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                        print(f\"Warning: Sample directory not found: {padded_dir}\")\n                        continue\n                    \n                    \n                    raw_dir = os.path.join(sample_dir, 'raw')\n                    mask_dir = os.path.join(sample_dir, 'mask')\n                    \n                    if not (os.path.exists(raw_dir) and os.path.exists(mask_dir)):\n                        print(f\"Warning: Raw or mask directory not found for sample {sample_id}\")\n                        continue\n                    #...\n```","range":{"startLineNumber":125,"startColumn":0,"endLineNumber":135,"endColumn":0},"embedding":"AAAguwAAnTwAwCI9AIAZvQCgMr0AANO8AADHuwCAsDwAEIW9AEBUPQCAjzwAQAm9AKBsPQBgKL0AQCQ9AKB8PQCA6jwAYAA9AKDBvQCAYT0AwFY9AGBFPQBAED0AYGC9AMCFPAAALrsAADW8AIBNvACwkD0AAPs7AJDhvQCAprwAcMO9AACcOgAQir0AwKY8APDTPQBghT0A4Bu9AADMvABwqD0AMOW9AACUPADgOD0AgGI8AEDpvADAJz0A8L+9AKCMPQAAP7wAQPi8AMCEPQBgMr0AgKO8AAAnvQBAJT0AgHC8AKBYPQAger0AICy9ADCZPQCAcr0AAAm8AEDWPAAgRj0AwJS8ACBvvQCAlbwAYCi9AECivACAfjwAAL27AAAIvAAAebwAwAw9AMDrvACAVrwA8LY9ADDVvQAAJr0AgEM8AMApPQAAoLwAAIc7AGBevQCgj70A8Lm9AIBcvADgW70AAD69AACQugAAmTwAwDu9AKBNPQAATDsAIIQ9AIB+vABASL0AYKs9AEC5PACAwTwAgAM8AAC0PADA2LwAQIu8AAACvAAASzwAoC69AKB1vQDgpD0A4Dw9ALCRvQBAhj0AAA88ABCBPQCAHzwAAKQ6AACWOwDArrwAAPM7AIBwvQBA47wAAPG7AIC/vAAArrwAQLW8AFDHPQDAHr0AAAM8AACBuwAgRT0AgPy8AMDuPABQlL0AoGC9AACUugAAQjsAwFk9AGAWvQCAeD0AACu9AIB+PABAvj0AQFI9AMCxvQCAVbwAIDu9AHDmPQAA4DoA8Ks9ACBLvQAAbjwAwDA9AACsugBQgr0AgCa9AACPvACApj0AADK7AEAgvQDAr7wAQIw8AKAsPQAA4zsAwI68ACBYPQDAlL0AwHy9AFCIvQAAF70A4CU9AAD0ugCgaj0AQIK9AOAyvQCArbwAgDu9ADCBPQCAdb0A0IC9AICNvABAyLwAAO87AACEuwCgQb0AoGO9AEAFPQAAKD0AYC69AACnOwDAjz0AALk7AAD2uwAAYDsAAAI7AMCSvAAAXz0AAAA9AIAiPQDAhzwA4Gy9AMBuPQCAcLwAAFi7AADnuwAADr0AAFa9AADsvAAAgrwAwMu8AKBjPQAA9bsAACw7AIB8vADA9zwAAI47AKA3vQAACDoAAN47AIB9PAAADz0AgLA8AADDOwBA/jwAAI87AABUvADA9bwAABI7AMC3vQCAuzwAAB67AMA9vQDAzjwAAA48AABAuQDATr0AgI68ANCRvQCA2jwAQCk9AEBOvQAAcTwAgCa8AIBNPADgEz0AAIE8AGApvQDQpb0AgL08AMBoPQCQvj0AwBo9AECPPABgbr0AgDK9AMCTPQDgaL0AgKU8ADCyvQCAerwAAEQ7AICwvACgc70AAKK8AIDHPAAAP7wAAJA8AICKPADA77wAAOA8AIBQPQAAjDwAAMg8AABNvQDgg70AIJY9AMCSPADgWj0AYAw9AEDPvABgkr0AgA68AACNOwAA8DwAQJ08AACzuwDAsLwAgA09ACCDvQBgbr0AgFc8AMC3vQCAZLwAAOq7AAD8vADQl70AADc8AGAJvQAAirwA0IO9AADfOwDgWr0AIAO9AABmuwBgQr0AAOM7AEDdPAAA77wA4Eg9AAC9OwBA8bwAwIy8AABHvADAtzwAQCo9AACYugAAlLoAAGw7AMBQPQBgZj0A0Ka9AAC0vQBAjLwAAB09AHCPvQBgSz0AwEy9AAAwvACgQj0AUKm9AIBnPACAD70AALK7AAD3PACAyTwAIJu9AEB2PQAAibwAEIq9AIDVPAAAyL0AYDS9AECFvADgo70AAEi8AICpPAAANDwAsMQ9AAC6PAAAF70AgES9AEDuPAAAi7wAABy7AAAyPABAvTwAAEA5ACCgvQBgFD0AwNu8AGA6vQBAKz0AQLU9AAAuPQCAQb0AAN67AAAAAAAADDsAAFA6AACGOwBAaj0AIEm9AACSvABA/rwA0IS9AOBfvQBgsT0AQCg9AMDvvAAgED0AwCw9AIB+vAAACjsAAIC5AAARPQBQgz0AQLA8AEA9PQCgsr0AgHK8AIBtPADArb0AgF28AEDNPAAA47sAgL88AIBDPACgED0AYCk9ALCbPQCAwrwAAD67AOAVvQAAhLwAwPc8APCvPQCgTT0AgDo9AMDCPAAgr70AAF47AOAsvQDgaT0AANU7AED0PADAlzwAgN29ALCLPQBgwL0AgI08AAAlvADgJL0AYBu9AEArvQBAB70AAMg7AMDsPAAAJLsAwAc9AACsugAAkLsAAMK7AABoPABAMD0AAAi7AGB+vQCABLwAgLk8AIApvADgVj0AgGW8AOA0vQBAibwAoAg9AACJuwAArLoAgAA8AMABvQCgMb0AIFu9AACAPADggL0AgAI9AADZOwAwtz0AqAi+AIALPAAAU7wAgCO8AGBUvQBwmT0AAI47ACAyPQDgcj0AwC69AACBPABAsbwAwDy9AGADPQDAn7wA4F89AABqvADAgTwAQCA9AACZuwDAEr0A4Ec9AABdPAAAYLkAoDO9AADGPAAAGr0AQF29AADmPAAglz0A4O49AMC9vABA5DwAELY9AJDSvQAAsLwAYCw9AOA5PQAAcrwAgJC8AMDHPAAAlr0AAOe7AIA1PACAJzwAwLs8AACCuwCAdz0AAA88AIAOPAAAab0AQBa9AABuPAAACDsAgC89AGADvQDAhT0=","chunkHash":"b14cd49ff63c2c38e9e679b439487f183a62a8244e4e0de3bc4507ea7439e43c"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                    raw_files = sorted(glob.glob(os.path.join(raw_dir, '*.tif')))\n                    mask_files = sorted(glob.glob(os.path.join(mask_dir, '*.tif')))\n                    \n                    if not raw_files or not mask_files:\n                        print(f\"Warning: No raw or mask files found for sample {sample_id}\")\n                        continue\n                    \n                    \n                    try:\n                        \n                        first_img = np.array(Image.open(raw_files[0]))\n                        height, width = first_img.shape\n                        #...\n```","range":{"startLineNumber":137,"startColumn":0,"endLineNumber":149,"endColumn":0},"embedding":"AAD9uwCAajwAgCM9AEAfvQAASr0AIGq9AAAQvAAA+jwA4J69AKA3PQAAmDwAgPG8AGBZPQAAGL0AYBY9AGB6PQBgAT0AQPA8AEDXvQBghT0AgFM9AOAiPQCAojwAIHi9AIDHPAAATLsAAA47AADkuwBgjj0AwL48AFDsvQCAlrwAwMe9AIClvACAir0AwOc8AJCoPQCgqj0AIB29AADevACAjz0A0Lu9AIBrPACA/TwAAFk8AEA/vQAAVT0A0LO9AIBiPQAAK7wAANS8AOCCPQBgJL0AAJm8AGApvQDAbz0AgKO8AKB1PQDgV70AoDC9AOC0PQCAYb0AAIA8AGAZPQCA/TwAgIq8AOBmvQDA/rwAoAO9AMDovAAAwLkAAC47AAARvAAAOLwAwFM9AEDFvACAebwAcJk9APCpvQDgU70AAHg8AIA/PQCAa7wAwJI8AGA5vQAgfr0AIJe9AIDFvABAjr0AwB+9AADJvACgLj0AgEu9AMBdPQAA6bsA4G49AIBevAAAdr0AMJ49AAB3PADAnjwAAAI9AACqPACAlbwAwJa8AAAIvAAA/jsA4A29AEAjvQDAxj0A4Do9AHCovQBwkT0AAKw6AMCJPQAAILwAAHe8AABnPADAi7wAAGq7AIBHvQDA+7wAgKK8AGABvQDAsrwAQNa8AHC1PQCAJb0AALA6AMCGvABAWj0AQA69AIBgPQAQmL0AkIa9AIBCvADA1TwAQH09AABEvQAAbT0AIES9AECLPABgwT0A4E09AECuvQCA3bwA4HW9AEgEPgAAdDsA8KE9AID3vAAA+DsAAF09AIBpvADggb0AAEi9AAAbPAAAoz0AANM7AID2vACA+bwAwIE8AKAUPQDAjDwAwIm8AGBtPQDgb70AYFO9AICHvQCAQb0AgL48AIBOvADgYz0A4Ie9AAAnvQAAv7wA4Cy9AGBuPQDwk70A8JK9AICCvAAAq7wAQIS8AIAFvABgZb0AQG+9AEDlPADArzwAYD+9AACnPACAZD0AQJ48AAB6uwCAGzwAAJU8AIDvvABABD0AoEA9AAApPQDA4zwAoAC9AABjPQAAJLwAgAy8AAAcOwCgPr0AgB29AAC3uwDArbwAgNS8ACCAPQAAIrwAAPy7ACAcvQCAbjwAgAu8AMBSvQCAOrwAAC48AAARPQBgUD0AQPc8AADJOwDA0TwAwIy8AADGuwDA4LwAAMi6AIC4vQAAejsAgDq8AHCEvQDAgjwAAIy7AABgOgDgNb0AAKu7AFC1vQDAuzwAQP88AGAhvQAA+zwAgCK8AAAguQAAcTwAABw8AGAyvQAgeL0AAOw7ADCJPQBQqz0AAJ08AADTOwAgY70AoEO9AMCdPQDAOL0AANw8ACC7vQAAkLoAgAU8AACBvACAf70AAAC9AABPPACAALwAAKE8AACxPADArrwAwBk9AKAMPQDA9TwAAO47AGBkvQBAd70AQHU9AIBaPAAANz0AYC49AIC+vABAgb0AAIW7AADAuwAA4jwAAAU8AMCUvADALr0AAIo8AACJvQAgn70AQAQ9ABC+vQCAkLwAAGY7AIDWvAAgbr0AAIM7AECAvACAQ7wAgGm9AAAVvAAAfb0AQAO9AACfuwCgi70AACc8AIC/PABAAr0AYHE9AAA0PADgKr0AAOq8AIAjvAAAtTwAgAQ9AACOuwAADrsAADq8AFCQPQBwjT0AoJC9AJCavQAAVLsAgE09ALC3vQDAKT0AoG69AIARvADA7TwAANG9AADQOwDAhbwAAAi6AAC9PAAAcTwAYKW9AEDePABAlLwAMIC9AEDQPACQyL0AgFK9AIB7vAAAab0AAJ47AACyPACAMTwAkMc9AEDFPADgIr0AYBu9AIBCPQAAcrwAAGs8AAAyOwAAojwAALe7AMCmvQBAzTwAAGy8AIBhvQCgGD0AALs9AIAzPQAgMr0AQI+8AACwuwCgAD0AALS7AAADPACgZD0AYEW9AAAdvACA9LwAgGW9AFCAvQBwlT0AQAQ9AIDGvACA4DwAAGs9AIB1vAAAiDwAADS7AACTPAAAfz0AgAo9AMCtPADglb0AAIW7AEC0PAAwo70AgNW8AMC9PAAA6rsAAI07AMCLPABgJT0AwNc8AGCcPQAADbwAAGK7AEDHvABgAL0AwMg8AICgPQCAVD0AYDc9AEDPPADgx70AgGK8AOBBvQBAWz0AAPQ7AAA0PADAhjwAcN+9AMCNPQBg0r0AAPQ8AMC8vABA0rwAYDS9AAAwvQAAML0AAIw7AEDYPAAAZbwAIEU9AAAEvAAAvDoAAJW7AABwPAAgPz0AAIC6AMA8vQAA7zsAAMY8AADquwAggj0AQJC8ACApvQCADbwAAGI8AAA4OgAAgTwAAMS6AAAkuwAAHr0AoGW9AMDyPABgTL0AoCA9AAD0uwBAkz0AMAe+AAApPADApbwAAM27AOB9vQBAbz0AADq7ACBlPQCgaT0AACO9AIApPAAA17wAADO9AOAePQCAurwA0II9AIBTvACAjjwAYA49AADVOwBA/LwAIHc9AIAxPAAAnjsAoCm9AEDzPAAAR70AgFS9AACzOwCAfT0A4Pg9AECovAAAWLoAILo9AGDEvQBAprwAIFs9AIDmPACAcbwAQNa8AABKPADwj70AQMa8AAArvAAAALoAAK88AADwuwCgUD0AgAM8AACAOwBgRb0AAAy9AAAQOwAA4LsAwDE9AAAFvADwjD0=","chunkHash":"a90954d7b0d521ac523e1dfef2bfb980e5fbe0692db6e9c09c35dc768f0528a3"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                        depth = len(raw_files)\n                        \n                        \n                        \n                        num_slices_to_check = min(len(mask_files), 20)  \n                        slice_indices = np.linspace(0, len(mask_files)-1, num_slices_to_check, dtype=int)\n                        \n                        \n                        mask_presence = np.zeros((len(slice_indices), \n                                                  height // self.scan_step + 1, \n                                                  width // self.scan_step + 1), dtype=bool)\n                        \n                        for i, slice_idx in enumerate(slice_indices):\n                            #...\n```","range":{"startLineNumber":149,"startColumn":0,"endLineNumber":162,"endColumn":0},"embedding":"AACsOgCAWjwAwDk9AKBVvQCgP70AACS9AECzvADA+zwA8JK9AEAaPQDgAD0AQPO8ACBnPQCAM7wAwEg9AECLPQCgKT0AANg8AJC5vQDAMT0AID89AIBMPQAgDT0AgI69AAATPAAAFjsAAJS7AIBGvADAjj0AQJo8ABDlvQAA17wAUL29AICBvABgeL0AgDI8AICTPQBgmT0AgCO9AEDzvACghz0AMMW9AAB6uwDgDD0AQAY9AIAYvQDAHD0AcKO9AIBPPQAAWzwAwAy9ACCKPQCgUb0AAFg6AIC9vADwhz0AQJ28ACBAPQCggr0A4BG9AMCpPQDAYr0AALy6AAADPQAA6jwAAEm8AJCYvQBAnrwAgAa9AMAFvQCAYDwAAOg7AIBLvAAACDoAoEg9AIDKvAAA77sAQKA9ADChvQCATLwAgGQ8AOAdPQAAqbsAACa7AEAyvQDQgb0AEIy9AAC4OgDgt70AoCK9AMCPvABAqjwAYGq9AEBIPQBApjwAYGg9AIClvADAiL0AUKI9AIAdPACApjwAANY8AIBYPACACL0AAIu8AACZuwAAhDwAYCi9AEDEvADQsz0AgEg9ADCjvQBAfD0AQNu8AMCBPQAAnLoAgIy8AABAuwDA8rwAgKU8AEBYvQCA/LwAAIm7AADgvACAN7wAwOm8AJCzPQAANr0AAAC4AIC2vADAMT0AIA+9AAA1PQAQoL0AsJi9AAARvAAAfDsA8Jk9ACAgvQDAZz0AgFO9AACVOwDA2T0AQHQ9AOCvvQAANrwAQF+9ACDwPQAA3zsAQJk9AMD5vAAAEjwAIE89AAA0OwBgkr0AQCi9AABougCwnz0AgBw8AED/vABgCb0AwIQ8AEADPQAA1DsAQKi8AJCNPQBwiL0AAG+9AKCZvQAAZr0AgL88AAAAvADgbj0AIIC9ACAovQAAwrwAgDq9ACAzPQBQj70AsJ69AAC0vAAAtrwAACu8AAAHPABgV70AAF29AAD9PADA2jwAgHe9AIA/PACAhT0AgPE8AADcuwCAPDwAAIE7ACAsvQBgSD0AoCM9AKBYPQCAVzwA4EC9AABfPQBAzrwAAE+8AACHPADgJL0AABu9AADYuwDAubwAgGG8AEBRPQAArDsAAEy8AMAovQBAnTwAAIs7AGAAvQAATLsAANI8AKAzPQCAXD0AQJ88AAAtPACAyDwAAES8AAAUPAAAOrwAACY8ABCovQCALjwAAIi8AEBsvQDAnDwAAIE7AAD0OgBgPr0AAM+7AGChvQAAiDwAANA8AEArvQDAxTwAgLG8AACIOgCACj0AwMM8AGAQvQCgbr0AgFk8ACB9PQDgtz0AwJw8AIA6PACwib0AIHO9AFCHPQDAT70AwJ48AADAvQAAkTwAAJy6AMCBvABwir0AIBK9AACMPACAQLwAgAo9AABzPABAjbwAwL48AKAUPQBAyDwAwJQ8AGBUvQAwhL0AoCs9AMDKPAAARz0AABE9AACDvADwkr0AAOm7AAA/PAAAyjwAwLw8AADAOQAACL0AIAo9AOBnvQDQkb0AALg8AHC/vQAAjbsAAMS7AMCxvACAhr0AgFC8AIC+vABAlrwA4HW9AACFOwDATL0AQL28AADGuwCgXb0AgHc8AECGPABAw7wAoIc9AACjuwDgML0AAL28AIBtvACAjjwAgOI8AAC7uwAAFDwAAEy8AIB4PQAgcT0AsJ29AACYvQAA4bsAIFs9ALCyvQBAJz0AYGy9AABgOgAA9jwA0Pi9AECXPADAC70AAGC5AIApPAAAgDoAEMu9AIAxPQCAorwA4Hm9AOAHPQDgy70AIEW9AAA9vABgbr0AAOA7AMCCPAAAvTsA4MU9AAC6OwCgJ70AwBi9AIDmPABA6LwAAIQ7AACOPAAAzTsAALs7AKC2vQBgNT0AgHK8APCBvQDAID0AkKo9AABPPQDAHr0AQJu8AAB+OwDA4DwAAGO8AMC/PABAfD0A4EO9AACDuwDgC70AIE69AICBvQBgkT0AIC49AIA1vQBAtTwAQCA9AAB9vAAAgDwAABC8AACcPADAdD0AgAE9AOAuPQAgzb0AAPu7AADAOQDQrb0AAPs7AIBwPAAAtDsAgBC8AMD8PADAUz0AAB49ADCHPQCAP7wAAEo7AMDlvAAACL0AAMI8AHCjPQBgNT0AQCw9AEC6PAAwnL0AAF48AACRvAAggz0AALw7AMDePAAAgTwA4OG9ABChPQDgsb0AQK88AIA5vADA/7wAIEO9AKAWvQDA0LwAAEI8AMBFPQAAhDoA4CM9AIBYPABAibwAwJ28AOADPQDACT0AAIo7AMAZvQAArDsAgP88AAD5uwCAOj0AAIa8AAAJvQAAkrwAAH48AAASOwAAUDsAADg6AAA8vADAOL0AAIW9AIDXPADAbL0AQPk8AABYuwAwkz0ASAW+AAA0PAAAS7wAAIw7AGBevQDgoj0AAIk7AOBKPQBgPD0AgLO8AIDUPAAAZ7wAwHS9AOAaPQCAJLwAgH89AMCDvACAcjwA4B49AADBuwBA9LwAQAI9AEC2PAAAZzwAwPq8AABQPAAgGr0AAGS9AAAaOwBQxT0ASA8+AADMuwCABTwAwKg9ALCmvQCAC7wA4FU9AOApPQDAgrwAAL+7AAA4OwAgi70AAIy8AIBzvACAWDwAAN08AIA5vAAQmz0AAAw8AAD5OwCgSL0A4DK9AAD/OwAAlLwAwC49AACBvAAgkD0=","chunkHash":"3762d9a7f499a6e6c97e25ba0ddf56e5337803eab89bcda8eb1af0ac74124e53"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                            if slice_idx < len(mask_files):\n                                mask_img = np.array(Image.open(mask_files[slice_idx]))\n                                \n                                for h_idx in range(0, height, self.scan_step):\n                                    for w_idx in range(0, width, self.scan_step):\n                                        \n                                        h_end = min(h_idx + self.scan_step, height)\n                                        w_end = min(w_idx + self.scan_step, width)\n                                        region = mask_img[h_idx:h_end, w_idx:w_end]\n                                #...\n```","range":{"startLineNumber":162,"startColumn":0,"endLineNumber":171,"endColumn":0},"embedding":"AADwugAA9DsAQFI9AMBKvQAQjr0AgEq9AIAzvAAAED0A4Ja9AEAaPQAA4jwAAPu8AMA/PQBAwLwAABM9AICPPQBAJD0AgP88ADDJvQBgWT0AoDU9AIBIPQDAtjwAgIm9AEC0PACAGjwAADy7AAAGuwAwjz0AAAw8APDnvQBAm7wAYMK9AIAEvQBAi70AAIw8AEBwPQDQoj0AgAG9AMCVvABgZz0AQM29AADDuwDA7zwAwOc8AIASvQDA8jwAQK69AGBDPQAAmzsAANW8AMCKPQDgML0AAE+8ACARvQAgiT0AQJy8AGBzPQDgab0AoAq9APDDPQDAXL0AgAU8AOAJPQDA1DwAgFi8ANCAvQBA/LwAgNe8AAA+vQCAPDwAgFw8AAAzvAAAXDsAQFg9AMDvvAAAa7wAEKA9ANCJvQBAw7wAAA47AKAIPQAAl7sAAFI8AAAyvQCgT70A4Hq9AAB8OwCQrL0A4De9AMCtvACAAj0AgFG9AABSPQAAYLoAkI09AOAkvQBAfb0A0LM9AMCXPADAwzwAwJg8AEDYPACA67wAAFG8AIDLvACABDwAQL68AECUvACQ1T0AgEM9AECovQCgVz0AAHa8ABCHPQCAOLwAAPC8AAAiuwBA8LwAAG08AABSvQAAmLwAAFS8ACAFvQAAcLoAAOm8ANCePQAgFL0AAIy6AMDfvADAIz0AIB29AMAgPQCQp70AUKW9AIAhvACAdDwAwHQ9AGA2vQBAaz0A4CK9AAB0PAAgzT0AYF09AJCsvQCAXLwA0IC9ABgJPgAAQjsAEIY9AID5vAAAeDsAQDc9AAAouwCQkr0AYB69AADjuwAQmT0AgD08AMD1vAAgC70AwM88AOAbPQCAXjwAgJG8AKBHPQCgeb0AIFe9ANCXvQDgcL0AAKo8AAB4vACgUj0AgGu9AIAsvQCAdrwAIC29AAAvPQAQpL0A4Ka9AICdvAAAmrwAgCW8AADoOwDgMb0AIGu9AIDwPADApDwAIH+9AIAbPABAZT0AgKE8AAAGuwAA9jsAACg8AGAlvQDAFz0A4Dc9AAAwPQBAnDwAQP68AEBEPQBAgbwAQIe8AACZPADgQb0AwPy8AACQOwDAgrwAwOa8AMCIPQAAvDsAALc7AIBJvQAAUTwAgA68ACAgvQAAFrsAADo7AADsPAAgdD0AQO48AAAUPACAyjwAAHW8AAD4ugCAyrwAAGA5AFCxvQAAxDoAAEe8AKBXvQBAiTwAAPi6AADAOABgP70AABi7AECnvQAA/DsAANE7AMDyvACADT0AALO8AADYuwCAizwAQII8AADNvAAgPb0AAGI8ALCBPQAgtj0AAHE8AACYOwBgc70AQDG9AJCWPQBAPL0AAPY8AHDKvQAAOzwAgF08AIASvACAY70AgOO8AIDDPAAAELwAgIk8AECQPACARbwAwPg8AMDrPABA+jwAQJI8AABZvQAgXL0AIC49AEC7PAAAQT0AQOk8AIADvQAgiL0AAG67AABquwBAuzwAgIA8AIAJvACAFr0AwKg8ALCDvQCwp70AwOY8AFDPvQCATbwAAFK8AAB7vACASr0AgDS8AAD5vACAOrwA4G29AAC0OgAgWr0AYAK9AADvuwCAb70AQKU8AICwPACAdrwAIFo9AACiOwBgTb0AwNW8AIBuvAAANTwAwL88AACAuQAArDoAACS7ADCDPQAAfj0AkIq9AMBvvQAAhLoAAFI9ABCwvQBgIT0A0KK9AADvuwAAQTwAQPu9AMC4PABA2bwAAFA7AAAqOwAAaDsAgMS9AIBoPAAAfbwA4Jq9AEAAPQBAzL0AwHq9AAA4OwBgbL0AgHk8AADHOwAAGLoAENk9AIBQPABgNL0AACy9AMDdPACA4bwAAMk7AMChPAAAgLgAACA7AGC4vQCgCD0AAG28AMB2vQBgCD0AoLk9ACALPQAgTb0AQAC9AAA4PADA9zwAAOg6AID1PABgaD0AQFy9AABfvACA1rwAYEi9AGBdvQBAhz0AgAM9AMBDvQDAyDwA4C89AIBrvACAyzwAgDu8AECRPADAej0AgCU9AOAuPQBQr70AAJC6AIAAPADQsr0AABa7AICBPAAAkzsAAFg6ACAJPQCgOD0AwAU9APCdPQAAGLwAAGa7AEDdvACAA70AgIU8AICaPQBgST0AYFY9AACgPABwob0AAKw7AADhvACAdT0AAAs8AECxPABAlTwAcN+9ABCFPQDwt70AQAA9AECuvADgCb0AoB+9AAA2vQCA5rwAAL47AEAnPQAA4DkA4Bk9AACPOwBAibwAAEy8AMD5PAAgEz0AAIE7AGAcvQAAZjwAABY9AABAuQAgVD0AQLm8AOAfvQCAbbwAwIU8AABavACARTwAAAg7AIBVPAAgZb0AQEu9AIAzPQCAYL0A4EE9AABQOwDwmD0AyAy+AIBiPAAApbsAAHi7AGBlvQCgnj0AgDi8AHCSPQAgKz0AQOm8AAC/PACA1LwAwHi9AIADPQCAgrwAgIo9AAARvABAzzwAYB49AABsOwDAxbwA4Es9AAB3PAAAvzwAQOW8AIAwPAAgYr0AQFO9AAAVvABQpj0A4BE+AIBlvAAAILoAAMs9ANDGvQAAkbsA4Gw9AEDUPAAAeLwAABy8AAC3OwAwjr0AgGa8AACNvACAdjwAgM48AAACvABwhj0AAMg6AIAjPACABr0AQCW9AIAgPAAA17wAgCU9AAAzvACAiT0=","chunkHash":"297bb992716f68f12be90766a6cd9bcc557e41c8d884b3a942a0a53c79f994e7"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                                        if np.mean(region) > self.mask_threshold:\n                                            h_ds = h_idx // self.scan_step\n                                            w_ds = w_idx // self.scan_step\n                                            mask_presence[i, h_ds, w_ds] = True\n                        \n                        \n                        labeled_regions = label(mask_presence)\n                        regions = regionprops(labeled_regions)\n                        \n                        \n                        crop_positions = []\n                        \n                        \n                        for region in regions:\n                            if region.area > 3:  \n                                #...\n```","range":{"startLineNumber":171,"startColumn":0,"endLineNumber":186,"endColumn":0},"embedding":"AAAovAAAiTsAQEw9AMDSvAAAg70AALS8AIBavACAND0AYH+9AIAyPQDAqTwAAFm8AAAnPQAAOLwAALc8AOCHPQAAEj0AIBg9AKDPvQCgQz0AQOs8AAB8PQCA6DwAQFy9AAARPACAQzwAgAm8AAAkOwDAbj0AAPA6ADDavQBA7rwAEL69AABrvADAX70AgGc8AGB5PQAQqj0AICu9AABQuwBgTD0AEM+9AAA2OwAACD0AAGA8ACAYvQDA0TwAEK+9AMApPQAApDoAACi9AMA9PQBgMb0AABS7AAAmvQBAUT0AAFW8ABCZPQBAOr0AoDW9AMCFPQBger0AAEW8AEDPPADAyTwAgGu8APCYvQCgFb0AgDW9ACARvQAAIDkAAB28AADPOwAAaDsAgFg9AGBXvQCAlrwAoME9ABC3vQBACL0AAHS7AICBPAAAursAAJA7AAAmvQBAnr0AsJS9AADeOwDQqL0AYDa9AADDOwDgBj0AwBK9AMBOPQAARbwAQII9AIAMvQCAj70AQJ09AICQPADAyTwAAIm7AMDTPADA2bwAwPi8AADjuwAA4LkAgAC8AGACvQBgwj0AoGc9AHCJvQAAKD0AAEI7ACCHPQDAobwAAJ68AAAQvACAF7wAgMM8AGBZvQAA4rwAAF47AAAkvQAAXrwAwPm8ALCpPQCgE70AAMw7AADUOwBA1jwAwLO8ACAcPQCwrb0AELa9AAC5uwAAKLwAYEM9AOABvQAgGj0AANW8AIBZPABAxT0AQJY9ACCTvQDAwbwAgGK9ANAQPgAAUDoA0K09AADhvAAA6TsAAM08AADQOQDwi70AQDS9AAAxPABQkD0AAFM8AIAWvQDADr0AgMk8AAA+PQAAbzwAgA69AGBWPQAQor0AYIO9ALCnvQAgSr0AQNs8AADUvACgOj0A8Im9AEBVvQCAFrwAgL28AEBvPQDwlb0A0K29AMCevADAy7wAAMk7AMCIvACAEb0AoIS9AKA8PQBACj0AICe9AADKOwCAmD0AwNo8AICEPAAAijsAADc8AIAUvQBAaD0A4EE9ACAmPQAAWLsAYAC9AOBvPQAAl7wAABi8AADKOwBA5rwAADC9AIAmvACAp7wAwCi9ABCbPQAAmDoAAIG7AECkvAAAhTwAABY7AKBdvQAAHjwAQK48AADePACAAj0AQMA8AAAtPAAARzwAAEK8AAD3OwCAlLwAAAK7APC8vQAAFrwAALG7AGBPvQDAzzwAANA6AACguQBAhL0AADg7AGCcvQBA8jwAQD89AKABvQBA1zwAgJ28AECOvABAKj0AQIk8AIAkvAAgU70AQK08AMAlPQCAwT0AQPk8AABoPACgjL0AgHu9ALCZPQAgRb0A4BE9ANDLvQAAHDsAAP+7AAAwvADgYr0AwLm8AMDEPACApbwAoAY9AABSuwDAsLwAYAw9AECtPACAWTwAwBQ9AECAvQCAS70AQIM9AEC9PABAkz0AACE9AEC1vADAkL0AAIG8AADeuwCApzwAANy7AABMuwDAyLwAQLA8AECPvQDgdr0AwKE8APDKvQAAjDoAAEW8AICWvADAgL0AAAI7AEDnvADAorwAgFe9AABcPABgDb0AgC29AMDCvADQjb0AANQ7AEDIPABA2bwAwIw9AECiPAAAKr0AgLK8AIABPADAozwAAEg8AAAauwAAnDsAABc8AGB5PQDwiD0AsKm9AECSvQCABLwAADo9ALCWvQBA1TwAQIq9AMCLvABAszwAMNe9AADOPACAjrwAgAi8AAC9PAAAHzwAEKu9AACxPACAmbwAgJe9AAAOPQBgyr0AYEa9AACwOQBglL0AAI07AMCcPAAAtrsA8Lg9AAAyPABA77wAYGS9AMDiPAAAp7wAAGA6AAC4OwCAGDwAwMQ8AICVvQCgSD0AACg6AIB3vQDAwzwAsKA9AKAcPQCAgL0AAJy8AAAWuwCAbTwAAIC4AICiPAAQpD0AYGy9AECsvACApLwAQHi9AIBjvQAQpD0AYCU9ACBPvQAACT0AYH89AIAtvADAqDwAAFi6AKASPQCgWj0AIBY9AMAmPQCA0r0AgDe8AACaOwAQp70AAGK7AIBBPAAAWjsAAMq7AEDMPAAgCD0A4EM9ANClPQAACr0AQIQ8AABYvAAgXr0AYB89ANCtPQCA6zwA4FY9AADhPACwo70AgKw8AMAcvQBwiT0AwKo8AMA1PQAAxjwAMM29AOBIPQDQm70AwOQ8AACpOwCA27wAgPu8AIBLvQBA8LwAAKs8ACAHPQAA7LoAAPA8AAB8uwAA+LoAgJc8AMDYPACAljwAgHc8AEDovACAFTwAgD09AACYuwBgOz0AwIO8AGBNvQBAmLwAgKo8AIA3vAAAlzsAAOk7AACuvAAAhb0AwGe9AIAdPQAAFr0AoAY9AACgOwDgbT0ACAG+AADFOwCAUzwAAPi6AKBtvQAglT0AAL28AKBkPQDgRz0AQEO9AIASPQAAiLoAgHS9ACABPQCAibwAwF49AAB6OwDA6TwAwBA9AADoOgAARLwAoD49AMDbPACA6jwA4EW9AAAbPQCgQL0A4A29AABZvACAvT0AGAA+AEC+vACAiDwAEKQ9ADDevQAAoLsAoIE9AID0PADAirwAACi6AADwOQBgjr0AAEm8AACcOwAARTwAgC49AACMOgBgWz0AAPw7AIBdPACgB70AAOu8AAAPPAAA4rwAAAk9AABZvACgiD0=","chunkHash":"82a5017189c20cae665fa5f68047e0f732ce839f049c9fd5dd22f0f714223ccf"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                                min_d, min_h, min_w, max_d, max_h, max_w = region.bbox\n                                \n                                min_h *= self.scan_step\n                                min_w *= self.scan_step\n                                max_h *= self.scan_step\n                                max_w *= self.scan_step\n                                min_d = slice_indices[min_d]\n                                max_d = slice_indices[max_d-1] if max_d < len(slice_indices) else depth-1\n                                #...\n```","range":{"startLineNumber":187,"startColumn":0,"endLineNumber":195,"endColumn":0},"embedding":"AIAVvACAEzwAQH09AOArvQAgd70AQNO8AAAhvAAA5DwA8J29AEAiPQAAyDwAwMa8AOArPQAASbwAwEg9ACCDPQDA2DwAAJw8ABDGvQCAOj0AQCI9AIApPQCgKj0AMI29AADGPACAWzwAAPC6AAANvAAAkT0AACo7ABDovQBAprwAsMK9AEC8vACAY70AQKU8ACCCPQAAjT0AwC29AAD8uwCAjD0AEMm9AADhuwDAEj0AgLE8AKAIvQCAqTwA0KK9AABZPQBAmTwAgN28ACBvPQCAZb0AAG48AEAEvQDwkD0AAIu7AABoPQCAUr0AwCi9ALCOPQAgY70AAJ+7AIAGPQDA/zwAgDO8AFCJvQBgC70AIBS9AIDxvAAAsDsAgDO8AAAnvAAA6LoAwGA9AMAKvQCAS7wA4Kw9AFCzvQCAZLwAAK47AEDPPAAAADgAAEI7AGBNvQCAi70AQFa9AACSOwCAo70AQDi9AACQuQBAkTwAQEG9AKBOPQAA4DoAwIk9AMDLvADAfL0A8Io9AEDlPADA7DwAAMg7AIDOPAAACb0AgG+8AIAIvAAA7DsAAAq9AOARvQDA0T0AwCA9AICivQBARj0AgJG8AJCDPQAAE7wAQNi8AADtOwDAm7wAAGE8ACBRvQAAxrwAAKi6AMDAvACAb7wAwPS8ACC1PQAAL70AAMA4AADguQAgLD0A4Aq9ACAaPQBgnb0AILe9AAB6uwAAh7wAAII9AADrvAAANz0A4A69AMDfPAAQzj0AYEw9ABCnvQAAMLoAYDa9AKgPPgAALTwAMLA9AIA9vQAAHjwAABc9AADxuwAgYb0AoA29AACEOwCwkz0AgFU8ACARvQAA9rwAwLo8AADWPAAAALgAQOq8AKBlPQBgnr0AIGK9AKCjvQAANb0AYBg9AAB1vABAVT0AwGi9AOAxvQDAs7wAQCO9AOBxPQCAqb0A4I69AMCAvADAnrwAALA5AAD/OwDABr0AQFa9AED2PACA7jwAwFS9AACAugDAjT0AQKc8AIAOvAAAFDwAAM07AIAcvQBgXj0AgAs9AIAePQCAQjwAIBa9ACBYPQAAZrwAAHG8AACLOwBgHL0AYCu9AAAUuwAAobwAAOu8AMCCPQAAoDsAALi7AKAOvQDAyTwAAIQ6AMAWvQAAdjsAAI47AMDlPAAAMT0AgOM8AAASPAAAtjwAABK8AABOuwAAmLwAADQ7AMCvvQAAzDoAAK+7AGBwvQCAdTwAAC47AACauwCgZb0AgAe8AGCivQAAszwAANM8AAASvQAACj0AQMi8AADJuwDAAT0AgGY8AGApvQBAYL0AgDg8ACBbPQBAvD0AwNU8AIBYPAAAg70AAF+9AGCZPQAgY70AACk9AGDMvQAAsTsAANM7AECWvAAAZb0AwN+8AMALPQDAwLwAQP48AAAIPAAARLwAAHk8AOAPPQAAkjwAQPo8AICMvQAggr0AoG89AMCmPADgTz0AIAg9AID5vABwkr0AAAY7AADAOgBAqzwAgBU8AACHuwAAwbwAQPI8AABovQBAlr0AgHk8AJC8vQCAJbwAgHy8AMChvACwgr0AgAG8AMC0vABArbwAsIq9AACHOwDgRr0AYBC9AABXvACgdr0AQOs8AIDJPAAAnrsAYG89AACHPACARL0AgI28AIBBvADAhTwAwJ08AADDOwAAqTsAAAU8AKBQPQDAVj0AQJ+9AIChvQCAHLwAQEU9APCHvQCABz0A0JC9AMCTvAAAjzwA8Ou9AADxPACAKr0AAMu7AABKPAAApTsAkJi9AGAQPQAAkbwAEJ+9AMDSPADg0b0AIFK9AIAevACwlb0AAPU7AIC5PAAA4jsAcLc9AMCzPABgIr0AoE+9AABoPAAA6rwAAMS7AMCbPAAAoDoAAII8ANCkvQDgBj0AAAu8ABCJvQBAoTwAUK89AEDkPADATr0AAO28AACjuwAA1TwAALQ7AACXPADAVT0AAHq9AADXuwCA4rwAgDm9AOCFvQAgvD0A4Do9ACAzvQBAszwA4F49AICKvACAADwAAOy6AADMPABgOD0AwDM9AEBXPQDAy70AgFq8AAD8uwDApr0AADC6AECqPACAgjwAgDI8AMD3PACgHz0AoCw9ACCUPQCA1LwAAG47AMDRvABgL70AwMg8ANCbPQDgET0AAC49AIDIPABgoL0AACs8AEAQvQCggD0AAOY7AGAgPQCAiDwAcNu9AJCDPQCgpb0AgNI8AIA3vACAIb0AQCa9AMBXvQAAFb0AwJc8AMAGPQAA4TsAwBI9AABcPAAAELwAAMK7AAD0PADA+zwAAI07AAAqvQAAcLoAwCY9AACJuwCART0AgIC8AAA9vQAAYbwAAFc8AAD6uwAA2zsAAB48AACjvADgTb0AkIS9AKA+PQCgRb0A4AA9AIBWPAAQkT0AYAq+AAD1PAAAGDwAADo7AKBKvQCwhj0AAFi8AKBsPQCggj0AQA29AOAFPQAAC7wAoHS9AMDrPABAibwAQFg9AABQOgBAnjwAoEc9AADwuQAAjLwAIFI9AMCKPACAvzwAAAK9AICXPABAc70AoD69AAACuwAwyz0AeAY+AMCBvAAA9DoA0MM9AADcvQAAHDsAwF89AAAYPQBAg7wAAKA6AECiPACAkb0AAKA6AABquwCAqTwAYC09AACgOQBAjT0AAHY8AAA2PACgR70AwCq9AAA5PACApLwAQDU9AICQvACQhD0=","chunkHash":"89e356231476264441d1d01d267a42e54f30be3d9697ef5196effd7e7383d657"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                                max_d = min(max_d, depth-1)\n                                max_h = min(max_h, height-1)\n                                max_w = min(max_w, width-1)\n                                \n                                \n                                d_center = (min_d + max_d) // 2\n                                h_center = (min_h + max_h) // 2\n                                w_center = (min_w + max_w) // 2\n                                #...\n```","range":{"startLineNumber":197,"startColumn":0,"endLineNumber":205,"endColumn":0},"embedding":"AADluwCADTwAQHw9AOAMvQBAdr0AQLO8AIAwvABA/DwAgJi9AOAgPQBA5DwAAMC8AGAnPQBAkLwAgFw9AFCEPQBA4TwAwL88AGC1vQDAQz0AAAc9AGAcPQCAMD0AcIe9AMCzPABAhDwAAEy7AABGvAAwlj0AACI8AIDmvQBAgbwAEMS9AIDdvAAgZb0AwOw8AMCRPQDApD0AIDy9AACeuwAAcj0AEMO9AAAiuwAAET0AQI88AIAUvQAAhjwAwKi9ANCEPQCAWzwAgPC8AKB6PQBgNr0AgHs8AAAAvQBQkj0AAJC5ACBaPQCgU70AQFC9AFCUPQAgUr0AAHy7AMDiPABA5zwAADO8ADCOvQBAAr0AgAO9AAAKvQAA4DsAAFg6AADCuwCALbwAAFU9AOAMvQCAgrwAYKs9ANC3vQAAM7wAgBA8AADZPACACLwAALQ7ACBDvQDwlL0A4Eu9AACQOgDArr0AwDy9AACgOQCAazwAQDO9AABaPQAACjsA0IY9AAB4vAAgeL0AQH49AECZPABgAz0AAIU7AECOPABA47wAAJC8AABmvAAATrsAgBK9AOAevQDwyT0AIDY9AIC0vQAAHD0AAJm8ANCOPQAA67sAQNC8AIAaPAAA/7wAABQ7AIA1vQBA0LwAAAQ7AMDcvAAA0DoAwN28AICuPQAgUb0AACy7AADQugCgFD0AYAK9AADOPACgoL0AMKC9AABIvACAS7wAgIY9AMDwvADAFT0AABy9AADEPADQxj0A4Do9AGClvQAA47sAwEm9APgOPgAALDwAYJ09AIBgvQAA1TsAQCU9AACQuwCgY70AACK9AAC8OwCAnj0AABs8AEAPvQDABb0AgHs8AACcPAAAOLoAQKC8AMB/PQAwob0AwFG9AKCevQBgJr0A4AA9AIBAvADAUz0AgIC9AKAjvQDA57wAIDi9AMCNPQCAnb0AcJC9AIB4vABAxbwAAFY8AAC/uwAAGb0AYFC9AEDMPACgFz0AID+9AACYOgCQkD0AAD88AADUuwAAYDkAAB08AID7vADAaz0AQBE9AOAjPQCAgzwA4C+9AABzPQCAnLwAAN+8AACquwDgGb0AoCm9AADZuwBAhLwAQL28ACB5PQAAGDsAAN+7AADDvAAA2TwAAEo7AGAmvQAAvDoAAJo7AEDfPACgND0AAAI9AAA7PAAAoTwAADC8AAAUvAAASbwAAAQ7AKC1vQCAjzwAAAi7AGB9vQBApzwAAJg6AACOOwAgV70AADG8ABCZvQBA2DwAQMw8AAAhvQCAnjwAAL+8AAAMuwAAAj0AAIY8AEAivQBgXr0AAC88AIBgPQCg0j0AQM48AAC7OwBger0AgE29AGB+PQCAc70AoCI9AGDEvQAA2TsAAFI8AICIvABgc70AQKm8AEAePQAAx7wAwMw8AAC3OwAA3rwAQJ08AIAMPQCAezwAAPU8AJCJvQCgkL0AQFw9AECQPAAAdD0AwCU9AMAFvQCQkL0AAN87AACsOgDAtzwAgEY8AADAuQBAjbwAwAA9AIB8vQDApL0AQIE8ABDGvQCAH7wAANm8AIBivAAAjb0AACO8AEClvACAmrwAMI+9AAB4OgDANL0AwB+9AAAwvADAYr0AwOs8AGAPPQAANrsAAGI9AAD+OwCAIr0AgIW8AAAqvACAlDwAAH48AIAWPAAAUDsAAMQ7AEBfPQCANz0AQJK9APCnvQCAVbwAYEs9AHCOvQDgIT0AsIS9AICGvADAmDwAgOe9AIB0PADAI70AAPw6AADgOwAA5zsAMJi9AEDqPAAAprwA8Ju9AMDQPADw1L0AIGe9AAAavAAwlb0AgBU8AACgPAAA+DsAgMQ9AACLPABAG70AgGq9AAA0PACA1LwAAC47AAC4PAAAszsAgCY8AKCyvQBgFz0AgIi8AKB+vQBA0TwA8K09AIAMPQBgZL0AAI+8AADruwBAID0AAGY7AIARPABgMj0AQGG9AAA+vAAAu7wA4D29AEB0vQAQtz0AYCU9AIAtvQCAkDwAAIA9AECovAAAAjwAAJA5AIDXPADgTT0AwEk9AGBKPQBgxr0AAEW8AACLOwCAqL0AAMy7AMCAPAAAojsAAHw7AADgPACgIj0AwDc9ANCRPQCA/rwAAFq7AEDVvABgBb0AwNI8ABCePQAAFj0AgDA9AACzPADwkr0AAEU8AEC2vACAgD0AAPw6AMAIPQAAzjwAQOS9AJCMPQDArr0AQMY8AAB3vACAL70AAB69AMA4vQCgF70AACs8AKAmPQAAajwAQAE9AABrPAAAr7sAAJM7AOASPQBgHT0AACK7AIA4vQAAaDoAwBY9AIAKvACAQD0AQL28AGBOvQCAXrwAQJM8AIARvAAAHjsAAG48AMCUvABASb0AYGq9AKA/PQBAVr0AwPI8AIB5PADwnT0AEAm+AAC7PAAANDwAACA7AIBBvQDAfj0AAFG8AIBXPQAAfD0AAAC9AADuPAAAPLwAwGS9AICjPABAuLwAQE49AAA8uwCA2zwAwCs9AAAXPABAhrwAYEk9AMDrPAAAhzwAwAy9AICZPACAcL0AgFu9AAA+OwDQtT0AwAU+AICuvAAAQjsAoMU9AIDlvQAARDsAQFM9AKAlPQCAh7wAADG8AMCKPAAwkr0AAIy6AAAeuwDAiTwAYB89AIBRvADAmD0AgEU8AAB8PAAgQr0AYCC9AACBPAAAcrwAoFE9AMCdvABgez0=","chunkHash":"c07ad815ac6ea8bf3f0bdc4c5151f25008e79fc7f57b6af7934ef243850567ec"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                                d_start = max(0, d_center - self.crop_size[0] // 2)\n                                h_start = max(0, h_center - self.crop_size[1] // 2)\n                                w_start = max(0, w_center - self.crop_size[2] // 2)\n                                \n                                \n                                if d_start + self.crop_size[0] > depth:\n                                    d_start = max(0, depth - self.crop_size[0])\n                                #...\n```","range":{"startLineNumber":207,"startColumn":0,"endLineNumber":214,"endColumn":0},"embedding":"AADwugAADzwAoGM9AKAhvQDger0AgKe8AADkuwDAAz0A0Je9AOApPQAAyzwAAJe8AKAzPQAAs7wA4FA9AEBRPQCAwjwAgKU8AIC0vQCASz0AIEk9AMAqPQDAHD0AkIG9AIDiPAAAqjsAAOg6AAC1uwDQkD0AAAA6AFDtvQBAj7wAQMe9AMAdvQDAZb0AQL88AECkPQCAoz0AgEW9AADgugCAdD0AALy9AAD/uwAABj0AAMQ8AMD3vACAjTwAUJ69AOBvPQAALjwAQNi8AEBlPQDgQL0AgJ48AGATvQCAfT0AAK27AGA/PQCAdb0AQE+9AACZPQBAUb0AAIu7AACjPACArTwAAPG7AHCCvQDA2rwAABu9AMDrvAAAbjsAANg7AIB8vACAR7wAIEA9AGAWvQAAPbwAMJ89ACC6vQAA57sAAFI8AGAaPQAA3rsAgD48AGA9vQBglL0AYGS9AACsOwAQsr0AABa9AABEOwBA2jwAYBm9AEB8PQAACjwA4Is9AIBtvABAdr0AoIk9AIB5PAAA4DwAgAw8AMCUPADAx7wAgBy8AABKvAAAzDoAAOC8AEDUvAAgyT0AoFQ9AGCkvQBAMj0AgIG8ANCVPQCAC7wA4Aa9AIAvPACA1bwAAAS7AKA7vQBAobwAgA68AAAGvQAACDsAwLi8AJCnPQCgO70AABQ8AADPuwBA/zwAAPC8AACjPABwmL0AcKe9AACiuwAAe7wA4IY9AED0vABgLz0A4Ci9AADDPAAwyj0AoC49AOCpvQAA+LsAIGK9AFgSPgAAwDkAgJU9AKBdvQCAMzwAgPc8AABUuwDgab0AQA+9AAAsPADgnT0AAKY7AID/vAAACb0AwKM8AIDnPAAAeDoAALy8AEBwPQAwrL0AgEW9APCgvQAgJr0AwPA8AICIvADgNj0AEIG9AIAlvQCAtrwAQDa9AICEPQBwnL0AsJe9AECGvACAWLwAAIY8AABYugBA/bwAoFq9AADxPABgET0AwDq9AACeuwAwkj0AgGY8AABWvAAAFrwAwKk8AEAXvQDgZD0AQPw8ACBMPQCAqTwAYAC9ACBuPQAAerwAwK28AAAEuwBgRr0AoB69AABiuwAAi7wAgJq8AJCDPQCABzwAQIW8ACAGvQBAtDwAALU7AOARvQAAHLsAgBM8AMDmPABAOD0AgAg9AICLPAAApzwAAG67AACOvACAG7wAAF67APDAvQAAIzwAAIC4AKBrvQBAwTwAAJy6AABIOwBASr0AAFS8ACCZvQDA9TwAQOY8AAAzvQDA5jwAQAa9AAARvAAA9DwAgLs8AMA+vQDgdr0AAOM7AKBoPQAAxz0AYAE9AABauwBAc70AICm9AMCFPQCAYb0A4Bo9AKDAvQAArDsAALU7AABivACgf70AAFu8AOA5PQCAqbwAgNw8AIBZPADAyLwAgLg8AMDxPACAZTwA4CE9AOCJvQDQkL0AgDs9AACvPABAdD0A4CA9AAD6vACwlr0AAAC4AAD9OwCAnTwAAF88AABmuwAAtLwAgNw8AKBqvQDwo70AgHc8AHDMvQAA2LoAAPC8AECHvACQlr0AgFq8AADAvABAx7wAYI29AACzOwDAR70AQCK9AIALvAAASb0AwLA8AIDjPAAAJrwA4F89AIAhPADAQb0AACO8AACVvACAWzwAwL88AACKPAAAQDwAAPQ6AKBRPQCgJj0AgJO9AECjvQCAlLwAwFA9ACCLvQAAGj0AoH29AIB2vADAlDwAsOa9AAA7PADAKL0AADC6AAD8OwAAyTsAEJC9AAAnPQDgAL0AsIi9AMDzPADwzb0AwHG9AABQOwDwi70AAOM7AEChPAAAejsAMMs9AEChPABgIr0AwFK9AMCGPABA1LwAAC47AAAGPQAAvjsAAG08AOCpvQAgGj0AQLi8AKBmvQCA6TwAQJQ9ACAdPQAgV70AQIm8AAAIvACAED0AAFo7AECAPABASz0AgFa9AAA3vADA9LwAIFq9AOBfvQCQqz0A4Bw9AAAlvQBAzjwAQEA9AECdvAAAcDsAAKC7AIC9PAAgSD0AQFY9AMBFPQDw0L0AALC7AADTOwCwqb0AANa7AIA/PAAAoDoAAPg7AGAZPQAgNz0AoC49AICVPQAA6LwAAEy7ACAVvQAADL0AAL48ANCVPQBgJz0AYCc9AABbPACwgr0AgFM8AMDSvABghT0AACE8AADbPACA2DwAEOu9ALCNPQAwnr0AwLc8AACEvACgJb0AgAm9AGBSvQBgN70AgGQ8AEAVPQAAXjsAAAw9AIBBPAAAHrwAAPC5AID1PABA/TwAABC7AEBQvQAAiDoAwDM9AAADvADgSD0AQKi8AABavQAA57sAgCs8AACBvAAAwLgAgCM8AICLvACAhb0AwHe9AKBDPQBgXL0AwPY8AMCKPAAwoT0A0AW+AIDNPAAA0DoAAHA7AMA9vQAAcT0AgD28AABzPQCAiz0A4B69ACAPPQAADrwAIEm9AAB5PACAPLwAwGU9AADlOwCAtzwAAAU9AAClOwAAaLwAAE09AMDLPAAAGzwAYCe9AACWPACAXL0AgEC9AACVOwBQvT0AgAo+AECgvAAA2DsA8LI9ABDxvQCALDwAIGY9AEA2PQDAirwAACq8AMCOPAAwnb0AAKw6AACmuwCAtDwAQCQ9AAAGuwBQnD0AAK47AIBGPABAaL0AoC69AMCCPAAAjLwAYEc9AECfvABQiD0=","chunkHash":"7afd88b528d8f9cf1592eed1f562a1c8475d868381c73c3d08505b074cc27a9f"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                                if h_start + self.crop_size[1] > height:\n                                    h_start = max(0, height - self.crop_size[1])\n                                if w_start + self.crop_size[2] > width:\n                                    w_start = max(0, width - self.crop_size[2])\n                                \n                                crop_positions.append((d_start, h_start, w_start))\n                        \n                        \n                        if crop_positions:\n                            for crop_idx, crop_position in enumerate(crop_positions):\n                                #...\n```","range":{"startLineNumber":214,"startColumn":0,"endLineNumber":224,"endColumn":0},"embedding":"AADiuwAAUjsA4FQ9AEAivQBAZr0AAO68AABwuwAAGT0AcJO9AKBJPQDAvDwAALK8ACBIPQBAqbwAgDg9AKBRPQCAvDwAAPY8AFCzvQBgSz0AoEw9AMBaPQAAFz0AAH29AIDSPAAA3TsAAOm7AAC2uwCgiT0AgD28AGDmvQDAj7wAILi9AKAPvQDAg70AgHw8ACCcPQAArj0AQCC9AADAugAQhD0AILq9AADQOQAAozwAgOM8AGAJvQCApjwAQJm9AIBaPQAAMDwAQPS8AMBFPQAgRL0AgAM8AIAZvQAAVD0AAGm8AKBgPQBgWL0AAF69APChPQDgRr0AAEA7AACYPAAAujwAAIa7ANCEvQBA1rwAYCe9AMDuvAAA2DsAADg6AADDuwAAALsAIFg9AGAdvQAApLwAAJY9AGDDvQAAgrwAAKo7AOASPQAA7bsAAA48AEAavQAwj70AgFS9AIABPACgpr0AwBy9AAB4OwDgJj0AYAm9ACBzPQAAcLoAMJE9AABZvAAgib0AgJ89AABKPACABj0AAB88AIByPAAAiLwAwJC8AADeuwAALLsAQJm8AIC6vACAwz0A4FY9AGCdvQCAPT0AAGu8ACCbPQCAiLwAwM68AIBAPABA1bwAAKQ6AMA1vQDApLwAADG8AIAsvQAA47sAgK+8AECVPQDAHr0AgEM8AAA/vAAgED0AgPW8AIDjPAAQor0AwK+9AIAtvAAA87sAoHg9AAC+vABgRT0AABK9AABiPACwwj0AQEU9AHC4vQAAd7wAoIS9AKgPPgAAGLwAoKI9ACBGvQDAmDwA4AE9AACUugAAdL0AgCC9AABSOwCgpT0AgAk8AIASvQCAFr0AwIA8ACAJPQAALTwAAOq8AIBRPQCAo70AAEu9AIClvQAgLL0AgN88AABJvABANz0AoEq9AGA4vQCASbwAIC+9AFCGPQCQlr0AQJu9AECKvAAAobwAQIo8AAD9uwDA+7wAEIC9AEDoPACgBj0AgEK9AACAuwCgiT0AgJY8AIAWvAAAErsAQKo8ACAGvQDAST0AgNw8AOAuPQAAmTwAQA29ACB6PQAA57wAgIS8AADAOwDAOb0AACy9AAB6OwAAtrwAwKy8AGCKPQAAGzwAAG28AEDPvADA2TwAAOE7AOA9vQAAxDsAgAE8AIDtPABAPD0AwNw8AIBSPABAuDwAAPO7AIA9vACArLwAABK7APC9vQAAsTsAAA67AMB5vQCAHz0AAI+7AADlOwAgWr0AAN+7AACQvQBAwDwAQP48AMAuvQBA1DwAwPy8AIBUvABgFD0AgLU8AIA5vQBggL0AgFU8AMBwPQBgxj0AgOA8AACiuwDAZr0A4D69AMCMPQAAQ70AwP88APDDvQAA2jsAAN07AAAuvABgfL0AAOu7AOATPQCAVbwAQKM8AAB+uwDAyLwAgLM8AMC3PADAvjwAQNs8AECcvQDghb0AQDo9AICNPABAdj0AQBc9AAAYvQCQl70AgDi8AACxOwCAiTwAAHk8AABmvAAAuLwAAAo9AJCEvQAQoL0AgDw8AADZvQAAWDoAAPa8AMCrvADAer0AgBG8AIDAvACArLwAwI29AADAOgDALr0AwCa9AADKuwDAab0AQIA8AMCyPACAT7wA4Dw9AAApPAAgVL0AAMw6AIBSvACAFTwAAJY8AIA/PAAAuzsAADo7ACBRPQAAbT0AMKK9APCZvQAAlrwAgGI9AECTvQAAFT0A0Iq9AIAavAAAijwAkPm9AABnPAAALr0AAPa7AABCPAAA3DsAYHy9AEDWPADA6rwA4GG9AOAIPQDwv70AYIW9AADUOwCAmr0AgDw8AIApPAAAODsAUNg9AAAyPADAUL0AABy9AEDYPAAAmrwAgAA8AEDXPACASDwAAHk8AFCwvQBAHT0AANC8AABZvQBA9zwAsJQ9AIDNPAAALL0AgI+8AIAtvADADj0AAKQ6AIBCPAAgaD0AYFq9AECivACA2LwAQGi9AGBuvQCAoz0AoA89AKAzvQAgBz0AADw9AIB6vAAAJDwAAKy6AMCTPADAVT0AwEg9AOAtPQDgzr0AAFC7AADKOwCQsr0AAH67AADwOwAAKjsAAB47AMAVPQAgHz0AoB09AOCSPQDA5rwAgAy8AKAbvQBAHb0AgIQ8AECWPQBASj0AIC09AMCKPADgh70AAFU8AECjvADghj0AgJk8AADpPACA9zwAcPS9AJCAPQCgo70AwOY8AMC4vACgJL0AwAm9AKBJvQDARr0AgEA8AMATPQAAeDoAQNI8AEC6PAAAC7wAABw8AEDoPAAAtTwAAOw6AEAjvQAA2DsAIGc9AADoOgAgND0AwLu8AKBHvQCANLwAALs8AACfvAAAQDkAAHo8AABJvAAggL0AAG+9ACAkPQBgQ70AYB49AAD+OwCgpD0AWAW+AECMPACACLwAgFw8ACA/vQAAaD0AAEy8ACCGPQCgbj0AQCe9AEAPPQAAd7wAAFW9AMCuPAAAdbwAgHA9AADfOwAAuzwAwE49AACROwAAArwAgGI9AMDBPACAdzwAQCG9AACCPADgcr0AYGC9AACgOwBwkj0AYAs+AIB8vAAAqTsA8L09ANDhvQAAqzsAoHM9AEAiPQAAhLwAAFq8AMCIPABwlL0AAOa7AABpvAAAWzwAwP08AADAOgBQij0AAPk7AMClPACAb70AQEm9AMCSPADAu7wAQFY9AIB7vADwjD0=","chunkHash":"b8e1f0896a8f87b6ab1108845f4a2a77bba7993b90117e0f067405775caca608"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                                self.samples.append({\n                                    'sample_id': sample_id,\n                                    'class_id': class_id,\n                                    'class_name': class_name,\n                                    'raw_dir': raw_dir,\n                                    'mask_dir': mask_dir,\n                                    'crop_idx': crop_idx,\n                                    'crop_position': crop_position,\n                                    'depth': depth,\n                                    'height': height,\n                                    'width': width\n                                })\n                        else:\n                            #...\n```","range":{"startLineNumber":224,"startColumn":0,"endLineNumber":237,"endColumn":0},"embedding":"AAAEuwCAWTwAoAY9AKAjvQCARr0AQPy8AIBGvAAA6jwAYIS9AEA3PQCA6jwAgN68AKB8PQBA6LwAwCI9AIBvPQCA5zwAAOI8ADDDvQCAND0AADc9AIAkPQDgFj0AsIy9AICrPAAAgTsAgES8AICTvADgYz0AAI47AIDrvQCAm7wAEMe9AIBovADgf70AgK48AADAPQCAjz0AQDm9AAB1vABAjj0A4MK9AIAHPADA7TwAgH48AMDJvABA6zwAAKW9AIB1PQDAgzwAwKO8AEBuPQBgOL0AgFy8AEDtvABAbz0AAJO8AOBQPQBAdr0AoDG9ADCCPQCgU70AAIg6AOARPQAgAz0AAOy7AGCOvQCArLwAQGO9AADHvADAxzwAAE67AICQvAAAiDoAgDg9ACAIvQCAo7wAUKs9AFC/vQBAyLwAgBk8AKAIPQAAQrwAgAu8AGBfvQBgl70AUIO9AADquwDgkb0AwPK8AABaOwCAgzwAgEm9AGBIPQAAfjsAkI09AECEvACgY70AYJc9AICPPAAgBT0AADo8AACAPABAqbwAgJa8AABFvAAA0zsAQDe9AIA9vQCQtT0AwEA9AOCrvQDgfj0AAFa8AOCKPQAAgLkAgHa8AADNOwAAvrwAAEy7AOB6vQDA2bwAAB47AIC7vACAaLwAwN68AGC8PQDgPr0AALk7AAAXvADgCD0A4C29AIDwPAAAjr0AkJK9AACXuwAA4LsAkIk9AMDrvADgGz0AIDG9AAA9PADQxD0AYFs9AECcvQBA2LwAwFq9AHABPgAAkDkAkJs9AGA+vQBAiTwAQBs9AABAOwAAir0AQDG9AAAVvADQrT0AgA08AKAvvQCAZ7wAgE08AADyPAAAgLgAgNi8AKBnPQCwl70AwF+9AKCNvQDgS70AYAQ9AABeOwAgbz0AwGS9AEBKvQBA57wAICm9AJCHPQAQlL0AwI+9AMCzvAAA1bwAABa7AADgugBAEb0AAFq9AIDTPABgDD0AIEm9AAAOuwDQlj0AAF08AAC2uwAApLoAABM8AMDhvADAVD0AwDU9AIAjPQCAhjwAYEu9AACIPQBAqbwAgBq8AACFOwCAEr0AAEO9AABdvADAqbwAQLG8AKB6PQAATDsAALy7AACcvAAgCD0AACE8AKBAvQAAGrsAAPA7AMDuPABAND0AAJw8AIAfPABAgjwAgBG8AADCuwAA47wAAPC6AJCtvQAAG7wAgAy8AIBzvQCAzTwAAEC5AACsuwDAVL0AAO+7AKCUvQCAvDwAgOE8AIB8vQDApDwAgOS8AAAsPABAID0AALk8ACApvQAgkr0AgHI8AOBePQCAyz0AYCE9AACnOwDAj70AQFK9AGB7PQAAWL0AAPA8ABDKvQAAqLoAAIM8AICWvACgbL0AgHG8ACALPQAAWbwAgIA8AIBfPACAFrwAAPU8ACArPQAAoTwAQNU8AICDvQAQkL0AwF09AACmPAAgaj0AwBw9AECqvADgnr0AACW8AAA2PABAvTwAQKc8AAAXvACAh7wAoCA9AMBuvQCAj70AAIc8ALC2vQAAsbsAAOi8AAC1vADQib0AAIA4AMCyvAAAQrwAQIK9AIAuPABgVr0AwAW9AABuOwAAR70AgJc8AMCdPADAsbwAwGc9AADjOwDAF70AALG8AMCUvAAAyDwA4Ac9AACnOwAAhDoAAKM7AOBMPQCAaT0AkLW9ALCcvQAALrwA4D89AHCbvQCgBD0AkJG9AECovACA6DwAsNu9AACNPABgJL0AAJi7AAC8PACAnzwAwJW9AIAnPQCA0LwAsIW9AEDqPACg0L0AYFK9AIAovAAwgL0AAEq7AECrPACAQjwAYMo9AABNPACgKb0AoAa9AACoPAAA1rwAAEo7AACvPACAMzwAAP87ADCnvQCgFj0AQMu8AABpvQDAAj0A8KY9AIA+PQBAVr0AAFy8AACRuwAAmTwAALm7AADsOgCgTD0A4H29AACFuwBgBr0AgGa9AMCFvQDQrj0AADM9AABBvQCABT0A4FE9AABPvAAAujsAAF67AMD6PACATj0AYBQ9AKBKPQDwu70AAP27AADgOgCQu70AAGK7AIBQPAAALzwAACM8AMDXPAAACD0AoCU9APCSPQBgD70AALA5AADgvAAAA70AoAw9ADCoPQBAHD0AQCk9AMDKPACAmb0AAGY7AICVvACwgD0AgGQ8ACAPPQDAvDwAoOe9AJCOPQBQnr0AAIU8AADjuwCgE70AwPm8AMBavQAgEr0AgCU8AIDrPAAAkDoAgK48AICGPAAAsDkAAFK7AIC0PACArjwAAG47AIBMvQAA1bsAoCc9AIAJvAAgUj0AAA+8AOAhvQDAp7wAQNY8AACtuwAAUrsAAKk7AADCvACgT70A0JO9AMADPQBAUb0AAN48AIBEPACgvT0AQA6+AAD2OwAAiLsAAJO7AIB+vQAAez0AAEA6AMBvPQCAZj0AYBu9AADKPACAV7wAAE69AOAYPQCAjrwA4Fs9AAAgOwDAizwAIFA9AABmOwBA7bwAgEc9AAD2PAAAeTwAwOi8AMCDPACAOb0AIFC9AAAtPACAoT0AIAA+AMC7vACAITwAkMw9AEDbvQAAMrsA4D89AGA0PQCAcbwAAJW7AACuPADgmb0AgAa8AAClOwCAUjwAwOo8AACJuwDAhj0AgKg8AMCAPABAXL0AAB+9AADdOwAAWrwAwE49AICxvACgfD0=","chunkHash":"27e659c554012ca2f3b1077674c4ad69c28df59c554c5500c69cd36c0d89967b"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                            d_start = max(0, depth // 2 - self.crop_size[0] // 2)\n                            h_start = max(0, height // 2 - self.crop_size[1] // 2)\n                            w_start = max(0, width // 2 - self.crop_size[2] // 2)\n                            \n                            crop_position = (d_start, h_start, w_start)\n                            self.samples.append({\n                                'sample_id': sample_id,\n                            #...\n```","range":{"startLineNumber":239,"startColumn":0,"endLineNumber":246,"endColumn":0},"embedding":"AACguQAArDoAwEM9AEAbvQCgb70AwP+8AAAvvACA4DwAcJa9ACAqPQDA1zwAwNK8AKBhPQDAw7wAgEU9AABfPQAAlTwAQMo8ACC1vQAASj0AAEA9AEA8PQCgFT0AQIK9AEDmPAAAtLoAAIe7AIAsvABwiT0AABy8AFDtvQCAm7wAIMW9AED+vADAe70AQL08AGCuPQCgkD0AIDO9AIAtvACAgD0AUL69AACsOwAA2zwAwAo9AEDOvADArTwAYJu9AIBZPQAASjwAAK68AGBjPQCATr0AAIw7AMAEvQBgcz0AgCm8AMBUPQCAf70AYFq9AHCXPQAASb0AAB67AIDYPADAujwAACi7AECEvQCA27wAoC69AMDLvAAAHzwAANA7AACHvACAGbwAAEc9AOAMvQDAnrwAMJ49ADC+vQAAS7wAADk8AOAKPQAA57sAAFA7AMA/vQCAhb0AwGu9AADIOwAglr0AwNu8AAAqOwAAuTwAgCq9AIBZPQAArjsA4I49AABYvABAf70AoJA9AIB0PACAAj0AAGU8AIBoPACAmrwAQIm8AECDvAAA8DoAoBG9AAD0vABwxD0AAFE9AMCwvQAATj0AQJa8ACCWPQCAJrwAwMy8AECAPACA0LwAAKS7AMBnvQCA47wAAKu7AMDpvAAA6bsAwNq8ADChPQAAQr0AAEs8AADOuwDADD0AYAe9AEDIPACwl70AAKO9AAC8uwAAqLsA8IQ9AGAAvQBgHD0AADK9AACaPACwyT0A4EA9AJCmvQAAfLwAgHm9AAgSPgAAbLsAQJo9AKBIvQCAXDwAYAI9AAC8OgAAfr0AICW9AABeuwAwoD0AAGg7ACAYvQAA6bwAwK88AED4PAAAQLkAwOi8AEBZPQDQmb0AYEy9AOCjvQCgMr0A4Ak9AADauwBgVT0AYF29AAA6vQCAkrwAACa9ACCDPQAAlr0A4Je9AAC1vABAwrwAAFg8AACAuwBgEL0AAGe9AADgPACgCj0AQEK9AAA4vAAgmT0AgII8AIAyvAAA07sAQIM8AGAOvQBgVD0AQBk9AIApPQCAqTwAACq9ANCBPQDA67wAAHm8AACAOwCgQb0AwC29AACGuwCAp7wAgJW8AGB5PQAAATwAgIS8AADqvAAAzDwAgBQ8ACAuvQAASLoAgBk8AEDZPACgPT0AAMI8AACJPADAkDwAgAa8AIBLvABArLwAANQ7ANDKvQAATjsAAEi7AKB8vQCA7jwAAPA5AACkugAAT70AAEq8AHCXvQAApzwAAMg8AABJvQBAxDwAQP68AAC4uwCA5TwAwKw8AIA5vQAQhr0AAB08AMBoPQDgwT0AABY9AAAQugDger0AIDq9AFCIPQDgQ70A4Ag9AJDGvQAAKDoAADo8AABHvACgeb0AAPK7AOAWPQBAprwAgMI8AAAQPACAJbwAwLs8AEDyPACAjDwAgPY8AMCIvQAwjb0AQEc9AIC2PACAeT0AoBI9AED6vACgnr0AAHq7AACXOwBAqTwAQJY8AABLvABAk7wAwPM8AABdvQCAoL0AAFU8AFC/vQAAYrsA4Ai9AEDBvACgir0AgAW8AMCbvABAp7wAMJS9AIAnPADgQb0AgAu9AABIuwCgTL0AAJY8AMCQPACAUrwAQFc9AADpOwAAMb0AAP+7AMCPvACAeDwAgPQ8AIB9PACABjwAALg7AEBZPQDAUT0AkKe9AHCUvQAAerwA4FI9AACVvQAADj0AUIi9AABsvADAxDwAoOm9AAAhPACAN70AgEC8AIAkPACACDwAsJC9AMASPQCgD70A0IG9AIAYPQAA0b0AIGO9AACEugDAgr0AAOw6AMCPPAAAwTsA4M49AACJPACgTb0AIBq9AMCuPAAArLwAAMC6AADaPAAAvjsAgFQ8AGC4vQDACT0AwOW8AGBuvQCA9DwA4KE9AMAOPQBgO70AgHe8AABJvABAzzwAAK67AIBtPACgUT0AAGW9AABOvACAFL0AQFa9AOByvQDQqz0A4B89AIAnvQBgAz0AQDI9AIA2vAAAETwAACi6AMDiPAAAVD0AIFQ9AMBBPQDAzL0AAHC6AAD8ugBQs70AAAC5AAATPAAAkTsAAK87ACAGPQBgIj0AQCc9AHCQPQDgCL0AAPA5AMDWvAAAGr0AgLQ8ACCYPQAgMj0AICQ9AIDSPABgm70AgBg8AECivADAgz0AAEA8AAD2PABAzjwAEOq9AGCFPQBgkL0AgOQ8AEChvAAgOr0AIAW9AABcvQBALL0AABE8ACAFPQAAGLsAgMs8AACvPACAGrwAAIC4AADHPACAujwAAJg6AEA1vQAAlDoA4D09AACvuwBgPj0AgHK8AOA8vQAANLwAAKo8AIBlvAAAMrsAAJ87AMCIvAAAZL0AgHa9AIAzPQBAXL0AwOo8AAB0PAAwsD0A4Ay+AIAJPAAAIbwAAIw7AEBdvQCgZz0AAAu8AMCCPQAAgT0AoBy9AMAMPQDAh7wA4EK9AAC3PAAAJLwAIF89AABsOwAAtzwAoDI9AADMOgAAi7wAAFE9AECbPACAOjwAYAi9AMCDPABAZL0AYFq9AIAFPACgoT0A2Ag+AECXvAAA+DsAIMg9ADDtvQAACrsAgG49AIA6PQBAg7wAABm8AACYPACQi70AACS7AACxuwBAgTwAwAI9AADcugAwjT0AgIo8AABMPABgaL0AoEe9AABtPABAibwAoE09AADXvACQiD0=","chunkHash":"28a3ce67330d6bdd3f76ecb5d7c1eea26e61dca145385a0d54f8b9a8ca106a46"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                                'class_id': class_id,\n                                'class_name': class_name,\n                                'raw_dir': raw_dir,\n                                'mask_dir': mask_dir,\n                                'crop_idx': 0,\n                                'crop_position': crop_position,\n                                'depth': depth,\n                                'height': height,\n                                'width': width\n                            })\n                            \n                    except Exception as e:\n                        print(f\"Error processing sample {sample_id}: {e}\")\n                        import traceback\n                        traceback.print_exc()\n                        #...\n```","range":{"startLineNumber":246,"startColumn":0,"endLineNumber":261,"endColumn":0},"embedding":"AAAIOgCARTwAoCc9AEA5vQBgG70AwPe8AIB6vADA2jwAEJG9AOANPQBgHD0AQAa9AGBsPQAgEL0AwBQ9AKByPQCAwjwAAAY9AEDIvQCAWD0AYGY9AAAhPQCANT0AgGO9AAD6PAAA8DkAANK7AIBXvACQgD0AAAk8AHDRvQAAu7wAkLy9AIDNvAAghb0AgMA8AFC2PQBQhz0AwBy9AACcvADwuj0AQMS9AADJOwCA/jwAwKo8AICzvAAgBj0AQKm9AGByPQAA4jsAAJm8AKBuPQAAKL0AgEy8AIDDvABARD0AADu8AMBNPQDgab0AgD69AGCQPQCgb70AALS7AADZPAAAHT0AQJG8AICAvQDAG70AgGy9AIDCvACAdzwAAAi7AABmvAAArbsAQF49AED5vABAnbwAcKc9ADC/vQCA0bwAwIs8AOAsPQAAYbwAAJw6AAAbvQAAZ70AcJm9AIBlvACgdr0AAMu8AACkuwCAoTwAIBa9AOBCPQCAQDwAUJc9AIDQvABAcr0AII09AECePABAuDwAAEU8AIBUPAAAgLwAAF+8AMCivACANjwAYCa9AOBEvQDgpz0AYDA9AGC6vQCgOD0AALm7ACCVPQAAz7sAAI27AIAHPADA1bwAAPi6AEB8vQCAmLwAACq8AOAIvQCAwbwAwJW8APC/PQCgJr0AAOC7AACPuwBAGD0AwBe9AEDpPADwkL0AwH69AAAEvAAAiTsAUIQ9AEC9vABAHj0AwEy9AMCePADgwD0AQGg9AJCfvQBAhLwAYCi9AAAAPgAA/jsAMJ09ACAqvQCAUjwAYBo9AAAZvABghL0AQEe9AAC8ugAwrD0AACC5AMASvQCAeLwAAHo8AKAnPQAAHDwAIAG9AEBrPQCAkL0AQEG9AIB7vQDAN70AIA89AACQvABATj0AEIC9AOBCvQAA8rwAYB69AICVPQAglb0AkIi9AADKvAAAzrwAAPI7AAAkuwBA+LwAMIa9AEDIPABgDz0AADS9AIBcPACQlD0AAGw8AIAevACAVbwAgFg8AICQvACAWD0AIAE9AIAYPQAAmDwAIGu9AIBzPQAAeLsAABg6AADcugAgIL0A4EG9AECwvABArbwAwOa8ACBXPQAAIrwAgLe8AADLvACAuTwAAEs8ACA5vQAAKzwAAJ08AMDOPADgCj0AANw8AACSOwBAwjwAgGS8AACDuwDAp7wAAN+7AFDFvQAAnDsAAO67AGBcvQBgED0AAOQ6AAACuwDgNr0AADK8AHCevQBgCz0AwO08ADCDvQBAszwAgGO8AIAnPACACT0AANY8AIAIvQDQqr0AQL88AKBZPQAwyj0A4Bg9AACUOwAgnr0AID+9APCRPQCgab0AgP08AHDVvQCACLwAAI88AAA8vACAcL0AwIC8AACLPADA1bwAAPk8AACOPABAkrwAwJw8AGAjPQCAPDwAgB48AEB6vQBQkr0AIFA9AICAPACgaj0AAC49AKADvQBglr0AABa7AABTPAAA4TwAQI88AADIuwDAubwAAJI8AJCBvQDAh70AgE08AFCsvQDAjLwAAAi9AICNvABQi70AAD47AIBBvAAA5rsAoIK9AADCuwAgQb0AQPi8AADkugDgc70AwJU8AOABPQDAhrwAgIk9AACROwCASr0AAKO8AIBovABAiDwAYAo9AADgOQAAUjsAAFY7AAB0PQBgWD0AcJ69ABCcvQCAULwAYFk9AKChvQCARj0AMIK9AECWvACANj0AcLe9AIBaPACAPL0AAGS7AMARPQBgLD0AwIW9AKA0PQCAM7wAIF29AMDbPADgxr0A4DW9AIAKvAAAg70AALy6AEC7PACAdDwAkLM9AAAiOwAAQb0AYD69AABxPABA37wAAEa7AIC6PABAuTwAADA7ACCqvQDAzDwAwNO8AEBzvQBgFT0AsLw9AGBEPQDgGL0AACO8AABcuwAAzDsAAMG7AAA1vACgYD0AAH+9AIBOvACgJ70A4HK9APCDvQBwoz0AwDU9AMAXvQAAIj0AgFU9AACGuwAAsDoAACC7AEDvPACAfj0AoA49AAAdPQBwuL0AgDy8AACQPABQu70AgEa8AAAaPACAODwAAAg8AECgPACgEj0AIB89AACJPQDAn7wAALY7AMDCvADAxrwAIAU9AACkPQCACD0AQDg9AEDEPABgtb0AANg7AOAuvQBAYj0AAGY7AEAHPQAAgDwAMPO9ACCkPQCQs70AgBI8AAB+vAAABb0AgB69AAAzvQCgL70AgKY8AOABPQAAOrwAgOs8AAA9PAAAALoAgEC8AECBPAAAHz0AANA5AOAnvQAAFLwAQBQ9AIBDvADgLD0AgDC8AGBFvQAAQLwAQPM8AACouwAAbrsAALo7AEDLvADAXb0AQI69AKAxPQBgRL0AgNE8AIBoPABAqj0ACBO+AACeOwAAJ7wAgDi8AKBnvQAgZj0AAL87ACBXPQCAiz0AID+9ACAEPQAAZbwAoEO9AIADPQAArLwAgGc9AABuOwDAlDwAgNk8AACUOwCABr0A4FM9AMC1PAAAgLsAYAS9AAAvPACgKL0AQGK9AICePAAgmj0AAAo+AOAOvQCA1jwA0LQ9ALCzvQAA3rsAAEI9AKBAPQAAeLwAgLC8AADNPAAwnL0AADS8AIBFPAAA5TsAQJg8AADNuwBAiT0AwMY8AAByPADwhr0AgB69AADYOwAARLsAYDA9AICuvACAlj0=","chunkHash":"d7613dbefa86a6a3850b18d3458240b94a68912f90c014443b9c9495779be69d"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n                        continue\n                \n                print(f\"Total number of samples (crops) to process: {len(self.samples)}\")\n                \n            except Exception as e:\n                print(f\"Error loading class CSV: {e}\")\n                import traceback\n                traceback.print_exc()\n        else:\n            print(f\"Warning: Class CSV file not provided or not found: {class_csv_path}\")\n    #...\n```","range":{"startLineNumber":261,"startColumn":0,"endLineNumber":270,"endColumn":89},"embedding":"AACpuwBAnzwAAEM9AGAnvQDgM70AoBe9AECyvAAAID0AAIi9AABsPQBAyTwAQOu8AGA/PQBA47wAYBI9AGAvPQAAvDwAAB49AGCVvQBgHj0AAFo9AOBnPQAAEz0AAGC9AAC+PADArrwAAKK7AAC9OwCAQj0AADW8ABDPvQBAxbwAkLu9AAC6vACQgL0AAC47AIDJPQCAlT0AQCK9AEDavACAeD0AkMy9AIBIPAAgND0AQAE9AEDDvABgAT0AsKO9AKA2PQAAwTsAQOa8ALCMPQAgQb0AQKa8AGASvQCADj0AgKe8ACCDPQCgFb0AcI+9ABCwPQCATr0AANi7AOAUPQDgBT0AANq7AMBkvQAAIb0A4HO9AADCvAAAkLsAAOw6AICpvAAAsrsAIG09AIAxvQCAlrwAIJM9AGCkvQCA1rwAwJk8AAAwPQAArbwAQKg8AACUvABQob0AcKG9AABAvADggr0AAJy8AIAfvACA+DwAwM28AOAuPQAAmzwAAH89AECvvAAATb0A4Lg9AICiPAAAKT0AwJs8AABuOwCAR7wAgIe8AAD5uwCANjwAwEa9AOAdvQBwsT0AABY9ANCGvQAAgj0AAKO8ADCMPQAAwLkAYAG9AACFPAAA/LwAAIC6AGB9vQAA57wAAK67AOA5vQCATbwAwI68AOCWPQCgBb0AAMY8AIAfvADAOj0A4Be9AMAQPQBAi70AwK69AACfvAAAALgAUJ49AGATvQDgYT0AwBu9AADbPACAxj0AYGU9AEDNvQCA/LwAQEa9AAD4PQCAO7wAQIc9AIDIvADAvDwAgAc9AAAUvAAQl70AIGG9AABBvACQqj0AAKc7AEA8vQBAibwAAFc8AEBDPQAABLwAAKa8AEBTPQCAib0AIIa9AECAvQAAOr0A4Do9AEDvvACAYT0A4IW9AOBrvQAAtrwAwCa9AACEPQCAer0A0JG9AMDgvACgDL0AAAg6AABqvAAA/LwAEJ29AGA1PQAAqDwAIFy9AADOuwDglj0AAAw8AACYuwAAy7sAAAg7AED+vABARj0AIAM9AGAsPQBgUD0AAEm9ADCMPQCAULwAQKG8AICePADgSb0A4Ay9AECbvABA0bwAAHA6AIBpPQAAszsAANK8AABjvAAAjTwAwIM8AIDevADAtDwAgCw8AADwPACgUD0AgOE8AAAYOwDAtzwAAK87AACEOgBAg7wAAPS7AGDIvQAAdrsAALI7AOBAvQBA2TwAALu7AAAXPAAgbr0AgAO8AABfvQAArzsAQAM9AIByvQDAmTwAAMK7AAAbvACAoTwAwPo8ACBCvQDwpr0AANo7AGBuPQAAwj0AgCc9AACWPABwmb0AAGu9AEBmPQAgJb0AwP48ANDFvQAAjjsAANS6AABuvACwkb0AAMS6AAC0PAAAEbwAwJM8AADuuwDAiLwAwMc8AKBMPQDAhTwAIBc9AOBdvQAwp70AoEY9AABQPACQmj0AwGY9AOAmvQBApL0AALC5AABpPADA9TwA4A09AAB1vACAh7wA4As9AOA/vQBwmL0AAEg8ADC3vQAA0zsAgN+8AIDTvACASL0AANI7AIBJvACAxrwA0IC9AADIugBACr0AQBi9AECgvAAAZ70AAMA5AABUPAAAXrwAYE49AIAhPABARL0AANM7AADjvAAAXjwAwC89AIALvAAACjsAAMA6AICkPQDAXT0AkIm9AKCDvQAA8bsA8IQ9APCcvQBAPT0AEJ69AAAmuwAgBz0A4NO9AABsOwBADb0AABY7AMCoPACAXjwAgJy9AIAPPQCALrwAYC29AIAbPQCQur0AYCG9AAAyOwCwhb0AAH67AIBePAAAgDoAwNk9AECvPAAgOb0AwDa9AABHPAAArbwAAIU7AIB8PACAtDwAANC7AKCOvQCAJz0AgAq9AMAxvQDALz0AcKE9AIC8PADADb0AAEA5AACwugAAqzsAgA08AACXuwCAaz0AAD29AABhvABgNL0AgES9AGCTvQAQpz0AYBU9AKABvQAADz0AgFY9AACYugAA/LoAACq8AIB/PACgfD0AwCc9ACAKPQCgrr0AAEi6AABqPACgrb0AAEq8AADzuwAAfzwAAFg6AMCTPADgKz0AgCc9ANCOPQAAFbwAgHg8AEARvQCAjbwA4B89ALCrPQCA/jwAoDk9AACPPABwl70AAD88AMDhvADgdj0AAHg7AMDoPACATTwA6Ai+AKDAPQCgp70AgKw8AABSvACA1LwA4DC9AMDTvABgRL0AAH88AEAkPQAAyLwAwJc8AMCLPAAARbwAAEK7AAAaPACAIj0AABQ8AMAvvQCAJzwAAFI9AACOOwAAHj0AgAO8AEAkvQCALzwAoAg9AADcOgAA9DoAACq7AMCHvACgFL0AoEK9AGAiPQCQh70AAAg8AAAWPACggT0A+Am+AEDAPAAAxLwAgBM8AOBuvQCAgj0AANY7ACA2PQAgRz0AwCG9AMDfPABAo7wAICq9AMAZPQAA2LoAQJs9AABVvAAAorsAYB49AABYugCAzbwAIFM9AAD+PAAAxLsAIAe9AADQuwBAJr0AQGC9AMC/PAAATD0AiAE+AMCzvACAfTwAUMo9ANC2vQAAnbwA4GY9AKBpPQCAfrwAgAK9AEDMPACwtL0AAJC8AACpOwAA6rsAgF08AADXuwBQiz0AAIi7AIB3PABQiL0AQOm8AAC5OwAA0bsAQAg9AOANvQBAdT0=","chunkHash":"951d454984fc6a8b1f52fa9306befc87038887cc3dcc495556b724a99db44573"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __len__(self):\n        return len(self.samples)\n    #...\n```","range":{"startLineNumber":272,"startColumn":4,"endLineNumber":273,"endColumn":32},"embedding":"AAAtPQCAXTwAgGQ9AAD2vACA7LwAANE7AGBVvQBABj0AQG69AAB8PABAgjwAwCa9AMBmPQAA8LsAgC09AIArPQCAfrwAwLU8ACBjvQDAAD0AQAo9AMBPPQDgHD0AgGa9AABVPQAAvLsAwDe9AABMPABgfz0AAOM7ADDAvQDA6bwAwIS9AACUvAAQmb0AgAE9AKDRPQCAkz0AICG9AMDxvAAAYzwAEPq9AADQvABA6DwAoCQ9AABjvABAhDwA4Kq9AEBsPQAgCj0AgB+8AACwPQAAnr0AAFi8AADivADAVz0AgCE8AACEPQDAoLwAcMW9AMBDPQBAybwAwOK8AAACPQDAsTwAgEK8ACB3vQAAPLwA4Ea9AOAavQAA/zsAANQ7AGBAvQBAmDwAAPc7AACfuwAA2TsAAIs9ANCkvQCAyjwAAOC8AKAWPQCAlDwAAKC8AIAAvABQib0AoB29AACuOwDAc70AAPA7AAC2OwAApTsAwMS8AMC1PAAAKjsAQGk9AADLuwBARr0AIDk9AAAJPAAAnTwAwAE9AECJvABAvrwAQOO8AKAcPQDAojwAQGu9ACC2vQDAsj0AwFA9AECHvQCQoj0AAK+7AHCVPQCANzwAQJq8AIDIPABAyLwAAHg8AEAevQAAW7wAwNI8AGB9vQDAiLwAgD+8AIBiPQBAKL0AAN07AECnPABgVD0AAGm9AECpPAAgRb0AgJS9AAAoOgAAerwAoCA9AIDovACgOz0AAHS7AOAWPQBgvz0A4Kc9AICBvQAA37wAAIC9ANC2PQAAhDsA8N49AACAOACA3TwAwBw9AMAFPQDAnb0AAH69AABovAAgNj0AAO27AACZvAAALrsAAOA8AADtPAAAcDwAgJK8AGCPPQDgd70AwFe9ACAevQCAVb0AQEc9AICXPADAVj0AsLW9AABLvQAAu7sAgHm8AOCnPQBg2r0AwIC9AADpvADA57wAgHE8AACgOwAA7DoAEK69AGA3PQDAozwAwFa9AIB4vACQoj0AoBk9AMCoPACA+DwAAFG8AACSvQDgSz0AYBs9AEDxPAAAHDwAYK69AMCJPQAA/rwAAKU7AEDSPACAmrwA4Cq9AECLvAAAAb0AAEw7ACBLPQAAuTsAAIu8ACBvvQBA7jwAwA89AADFuwAAizsAwIQ8AEDtPABAeT0AQN48AAB3PAAgAT0AAKC5AACAuwCAHbwAwAg9AKDavQCAPrwAAKw7AKAnvQAAYjsAABm8AAAKvACAJr0AAAC6AIBlvQAAdLsAQKu8AOCAvQAAXjwAAKu7AAArPQBAkTwAwAE9AICRvABgHb0AQOs8AAB4ugAguT0AIAg9AABYOwAQmb0AsJK9AECWPQCgTb0AULw9ABCCvQAAPDwAgHO8AICsvACAXr0AQAm9AABXPAAAv7wAgPY8AAD0ugCAGTwAAKQ8AAACvACACbwAQOc8ADCVvQDAeL0AoFM9AIAFPABAfz0AYFg9AGBfvQBAjr0AAJC5AIA7PAAAPDsAYBc9AEBLvQAAsbsAICw9AIB2vABAb70AADk8AECgvQCAGTwAAFy7AMC9vADAbr0AAE08AIA3vAAgFb0AQJO9AAAoOgBAR70AwI28ACAevQBAlr0A4B89AEC3vABgdz0AAPw8AADrOwBAEr0AwBW9AJCMvQCA3zwAwOG8AAAFvQAAwrsAwJQ8AKDEPQDArTwAoFS9ACAOvQAA9zsAAPg8AFC8vQAgZz0A0J+9AICOvAAArDwAQO69AACCOwBAsrwAAP67AABqPABAvrwAAGS9AEBGPQAALDsAQFS9AEBiPQAAn70AgAy9AABAuwCgV70AALQ8AABvvABAvzwAsNA9AAAAOwCASr0AQAa9AABAugAAV7wAQCS9AAA2PACAf7wAAMQ8AEDHvQCAij0AgCi9ADCJvQAA3zsA0Lk9AGBOPQCAVb0AwLu8AACAuwCApjwAAPC7AABUPQAA6zsAgEC9AAASOwDAXb0AQOS8AAAjvQDgOD0AQGg9AKBAvQCAojwAgL88AMDhPADAwjwAQDi9AICNPQCgLz0AgKo8AABPPQDA170AwCy9AAD/vADghb0AoAc9AACguQAAgLsAgJC8AAC4PABgJD0AQMY8ACB3PQBAxrwAgAQ8AAAovAAA7LsA4Aw9AABWPQBgPj0AICQ9AIAvPQCAqLwAAKu7AAAgPAAAGT0AwJk8AICfPAAA/DsAkIe9ACDrPQDQgb0AgHi8AACcOwCgk70AADW9AMCZvACAIbwAAOc7AAApPAAAPLsAAI07AMC+PABgCL0AQL08AIBlPACA0zwAgNc8AADpvAAgAj0AMK89AAA5vQAAIzwAIBI9AMBjvQAAt7wAgBo9AADLOwAA0zsAQIO8ACA1vQAALjsAAM+8AOAwPQDgFb0AAO47AAC1OwAwnj0AkO69AEDKPAAAGzwAwJs8AFCrvQAghz0A4Ce9ACAQPQAAJD0AoCu9AMDuPACANrwAwB69ANCXPQDAHT0A0KM9AOApvQAAdTwA4DA9AMDGPAAAhLsA4BI9AIA8PQAAersAgFi8AMAKvQDAD70AwDK9AEDSPAAARz0AuAM+AIBvPAAABjsAANw9AKCuvQAANb0AQC49AICUPQBAgbwAgMu8AEBzPQCgEr0AQA29AIDfPADAp7wAAA67AADBvAAwlD0AgBs8AADMuwBA/7wA4Hi9AMCSPABgJb0AYBw9AKBjvQCghT0=","chunkHash":"7ca9cf716e8960ef6a0746a7b953d3b09f341e16fa0b1409d29517d6cebdfefa"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def _load_volume_slice(self, sample_metadata, crop_position):\n        \"\"\"\n        Load only the necessary slice of a 3D volume based on crop position.\n        \n        Args:\n            sample_metadata (dict): Sample metadata including directories\n            crop_position (tuple): (d_start, h_start, w_start) for the crop\n            \n        Returns:\n            tuple: (volume_crop, mask_crop) as numpy arrays\n        \"\"\"\n        d_start, h_start, w_start = crop_position\n        d_end = d_start + self.crop_size[0]\n        h_end = h_start + self.crop_size[1]\n        w_end = w_start + self.crop_size[2]\n        \n        \n        d_end = min(d_end, sample_metadata['depth'])\n        h_end = min(h_end, sample_metadata['height'])\n        w_end = min(w_end, sample_metadata['width'])\n        \n        \n        actual_crop_size = (d_end - d_start, h_end - h_start, w_end - w_start)\n        #...\n```","range":{"startLineNumber":276,"startColumn":0,"endLineNumber":298,"endColumn":0},"embedding":"AIDmPAAAiLoAAP08AJCevQAgS70AwL68AGAgvQCAKz0A4Ii9AIClPAAALrsAwLO8AMAOPQCgKj0AALw8AEBEPQBAibwAQKk8ACAHvQAgUz0AwF49AFCOPQBAMD0AQI+9AACtOwCA57wAQI88AICcPABAqD0AAOm7AGCdvQDA5LwAoBy9AIC4vQCw0b0AAOg7AECdPQAwwj0AIIm9AADxuwBAHj0AMKe9AIASvQAANTwAgOc9AAAeuwAAcTwAgNq8AIAVPQAAyTwAQM+8AABqPAAwiL0AAMC7AEC+vADAvjwAAAg7AIB7PACAOTwA4G29AOBIPQCAe70AAFC6AAByPQDAoTwAgFg9AGBrvQAAFjsA4By9AADyuwAAEr0AAIs8AIDKvAAAML0A4H09ABCcvQAAArwAgGA9AMDpvQAADrsAQMs8AAC6PAAAczwAACE8ALCMvQBAyr0AwOG8AICYPQAger0AAAC6AIBxPAAA27sAQB+9AEAPPQCAB7wAYKY9AECMvADAgb0AcJ49AHCgPQCgRb0AgP08AAA8vACA3bwAQE09AIBYPACQnj0AoAo9AADkPACgaz0A4Co9AIAnvQCQjj0AgC08AMDGPABANL0AAFG9AEARPQBA57wAADg8AOCRvQAAXzwAABy9AMB9vQAAhzsAAMw7AEAsPQAgfr0AAIC5AEDqPADAXj0AAOw6ALCJPQDQBr4A4Fy9AEChvABAPD0AAFM8AKBvvQCgpj0AwHW9AAAFPACYEz4AgCm8AFCjvQAA9DsAIFe9AICzPQAAobwAQN49AAAxvAAgDj0AIAk9ACBtvQDgPb0AoFm9AEDhPABAPj0AYCQ9AECHvABAur0AwCs9AIBKPACAGTwAIEq9AGA5PQBQlb0AgP88ABCKvQCAQL0AQLc8AAA8OwDAWT0AQHm9AADROwAASjsAgNy8AEAnPQAgAL0AgG28AGAZvQAA8rwAoE89AADhuwCAobwA4D29AMCXPACgaj0AAH29AAAWPAAABz0AgDc9AIAZvQAAvDsAQNG8AIDNvABA2DwAcKs9ACCQPQCALzwAwMa8ACCmPQAAnbwAwKy8AAC3PAAAKDoAQNS8AAAOuwCAD70AgDm8AMDMPAAAGLoAAOe7AAA+vQCAVzwAAD88AOA4vQAAsLoAgEQ8AICwPACgNj0AAOE8AAANvABAuzwAANm8AICPvAAA0rsAAPa8ALCJvQCAITwAgAc9AICqvACASDwAADg8AOABPQBA5bwAIFO9ANDCvQAAJj0AAAK7AACPOwAACjwAYEa9AKBHvQAgUj0AACK7AACLvAAgEr0AAH28AAD7PAAgzj0AQKs8AMDpvADwh70AoDW9AOBZPQDAOL0AMI49AKC1vQDA1jwAIAM9AMD2PADgGr0AQLs8AMCuPAAAzLoAwMU8AICkvAAAebwAAP07AAAavACAFj0A4BI9ADCRvQDwmb0AAIU8AEDJPACAXrwAwCs9AEDMvABgdb0AwKG8AIDTvAAAujsAAHc9AMDcvACAAb0AgAM9AAB0uwCgo70AgFE9AMD2vQAAvjwAYDu9AAB2OwBAgbwAAGu9AMDkvABAt7wA4G69AIBcvAAAKL0AYCw9AECcvACAODwAwMa8AIAdvAAA4zsAAD89AADougDA6bwAoC09AGBmvQAAIzwAADg7AAB+uwDA/jwAAIu8ACB8PQDgND0AAKe8APCOvQAAvbsAACc9AAD4ugDAgjwAoGe9AECZvADAlTwAmC6+AIDKvAAAh7wAwCS9AEBRvQAAqLsAwF29AOAvPQAALLwAICK9AEDcPACAjLwAgLm8AEDYvAAwwL0AwKI8AABiOwAAlDsAIIQ9AAC3PACAvr0AACC9AGAOvQAAeb0AgHe8AAAoPQAA7rsAgLg8AKBEvQAAjjsA4GC9AIC1vQAAizsAQHQ9AAD/OwAAqrsAwBu9AAAcPQAAOjwAgJq8AAAkOwAgvT0AQFe9AABcvQDAu7wAAE29AABpvADQiT0AIHk9AKAFvQAACrwAAGE8AABHvACANjwAwDA9AAA4OgBA4TwAAA48AOAJPQBgpL0AgFG8AMCMPABwrr0AwIE8ACALPQCAgDwAAAC8AEArPQAA1DsA4EE9AGAgPQAAa7wAQOo8AGABvQBgcL0AICG9AGBmPQCAQz0AQII8AIC1vABQp70AABI8AMC7vAAgQj0AwCE9AGAWPQBAyzwAgIG9AICAPQCABr0AAAo8AGAKvQCAEDwAANK8AAC1uwDA6rwAwLc8ACA9PQAAVjwAABc8AEC0PABAh7wAAMc8AACxPAAAsLwAgHG8AMCCvQCAcLwAYGo9AECxvACA/jwAgH68ADCXvQCgL70AACW8AACgOwAAWzwAgKk8AMDzvACQnr0AYCO9AKAGPQBAurwAICk9AMDIPAAggz0A8Aa+AICbPADAiL0AgF09ADCAvQBAVT0AgKY8AGAuPQBAqzwAwKm8AIAqPABAKT0AIAe9AMDrvABA7jwAIHE9AAC2OwAgDj0AoAE9AACwOQAABrsAgAG8AADOuwCApLwAADi9AGBYPQBAJr0AMLC9AIATPABAWT0AkI49AICdPAAAj7wAAKs9AMCsvQAAbzwAAPM8AEDHPACANLwAwLi8AED0PADAlL0AgBw9AECEPACgJj0AgFk9AAASvQDgWz0AgIO8AIDAvACAdr0AYHC9AMCfPAAAOL0AIGM9AAC3vACwqz0=","chunkHash":"cf153b17dcd1f64193fc7138ec2531fc38d567f25dbd9d5d8157cf92534e1609"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def _load_volume_slice(self, sample_metadata, crop_position):\n        #...\n        volume_crop = np.zeros(self.crop_size, dtype=np.float32)\n        mask_crop = np.zeros(self.crop_size, dtype=np.float32)\n        \n        \n        raw_files = sorted(glob.glob(os.path.join(sample_metadata['raw_dir'], '*.tif')))\n        mask_files = sorted(glob.glob(os.path.join(sample_metadata['mask_dir'], '*.tif')))\n        \n        for d_idx, d in enumerate(range(d_start, d_end)):\n            if d >= len(raw_files) or d >= len(mask_files):\n                continue\n            \n            \n            raw_img = np.array(Image.open(raw_files[d]))\n            mask_img = np.array(Image.open(mask_files[d]))\n            \n            \n            raw_slice = raw_img[h_start:h_end, w_start:w_end]\n            mask_slice = mask_img[h_start:h_end, w_start:w_end]\n            \n            \n            actual_h, actual_w = raw_slice.shape\n            volume_crop[d_idx, :actual_h, :actual_w] = raw_slice\n            #...\n```","range":{"startLineNumber":300,"startColumn":0,"endLineNumber":322,"endColumn":0},"embedding":"AAA0OwAAKDoAgMo8AMBQvQDgRr0AQMq8AACMOwAAxjwAwI+9AAB6PACA5zwAgAG8AOAaPQCAh7wAYAo9AHCWPQAAi7wAgAw9ALCzvQBgjD0AQCQ9AOA5PQDA3TwAYFC9AADQOwAAVLsAALC7AAAnPADQrj0AAMA7ALDjvQAAsbwAYHW9AABAvQCAfb0AQMs8AICZPQCgvj0AoEG9AIC1vABAZD0AUI+9AABrvAAA7zwAAIQ9AMAqvQBA0DwAEKC9AAB+PQAA0DsAAJq7AEBiPQBAnb0AwIu8AID2vACwgT0AAP47ACAAPQDA0LwAwIq9AOCKPQAAXr0AQLU8AED2PADApjwAAB08AACDvQAAEzwAQO+8AOATvQBA/7wAgKg8AICIvAAApDoA4Hw9AABwvQAA/LsA4D09AIDkvQDgJL0AAAW8AMBjPQAAn7sAAOw7AIDlvADghL0AAIG9AGAPPQBggb0AwI28AIAcvACgbj0AgBO9AKBMPQAAGDwAsIM9AECwvABwoL0AMK89AADbOwBAlbwAAEk9AABtPACAo7wAADs8AIBwvADgCz0AAJU7AACduwDwhz0AICM9ANCevQBgcD0AQO+8AKBqPQCAHr0AQJ68AMC8PADA/7wAgAo8AECAvQCAgDwAACO9AABevQAA77sAgNa8AICGPQCgg70AAHU8AIBcvABgjD0AgB29ACBQPQCw6L0AQG29AMCDvACALj0AgC89AJCEvQCggD0AwIm9AECBPABw+z0AwMA8ACDCvQAARbwAIG69AMD1PQCAM7wAYLg9AICyvACgBj0AoDE9AIDhvAAAVr0AkJC9AAClPABgST0AQKY8AMCsvADQgL0AwCE9AEDaPABADz0AYFq9AEBqPQCgmb0AAPO7ADCIvQAAi70AgCI8AECTvAAAED0AQLO9AEAKvQCAFLwAYAO9AKBWPQDgQb0AgEi9ACBTvQAAxrwAAIo7AAA4PACAP70AQFe9AMDiPABAHT0AQAO9AMCzPAAAAj0AQDU9AAAouwCARTwAAKE7ACAjvQBA7jwAEKk9AIBwPQDAlDwAALe7AECCPQCAr7wAYAe9AADhPACA+7wAQOi8AIClvAAA8LwAgN+8AOBvPQAAqbsAALY7AMBavQCAsTwAAGk8AIAyvQAANLsAgEI8AOAvPQAQhT0AoCU9AABgOwBAHz0AgOK8AIC4vACATrwAgLu8AACnvQAAdDsAgE48AOBHvQCALrwAgIa8AIAXvABAHL0AgJ28AGDNvQCgCD0AYAQ9AACBuwCgZT0AAAi8AIDyvAAAlTsAwLo8AID5vABgSr0AACQ7ACByPQCQnD0AANQ6AICIvADgUL0AYB+9AAB+PQDgVb0AgFg9AKCqvQCAnDwAQLU8AADtOwCger0AgBY8AKAaPQAAoDoAYB89AIBKPABAq7wAoAI9AABsuwCAHz0AgAM8AMBEvQCgSr0AIBs9AADHOwAAqDwAgCo9AABjvABAGr0AgD69AIDVvADgFD0AwJA8AECwvACAh70AQOE8AOAlvQAAsb0AADo9AOD3vQAA9rsAANC7AMCRvADAE70A4Cq9AEDBvADAmbwAwEm9AACEuwCgib0AADi6AAD6uwDAN70AANi6AACIOwCAQjwA0JM9AACIuwBAprwAAKA5AAAuuwAAnjwAAIg8AICFPADAlDwAAJ+8AICAPQDgbT0AYH29AMBnvQAAsDoAYCk9AOBmvQAgJT0A4EK9AABLvACAwzwASA6+AADnuwDAhTwAABS8AIBivAAAjLwAAK29AIDLPACAobwAgI+9AEABPQCgnr0AAFi9AACAvABgh70AgLc8AABDPADAyjwAsMg9AAB/PACgfr0AwCm9AICePACA/bwAwKU8AEAkPQAAvLsAgGE8AMCwvQAA7jsAgBi9ABCNvQAACj0AoLU9AKArPQCAxbwAIDm9AMCXPAAgBj0AAKi8AAAhPABgcj0AIBm9AED3vAAAMLwAUIC9AAAcvQCglD0AICc9AEAnvQAAqzsAIEA9AIAKPAAAKjwAAPA5AMCUPAAAYj0AwPY8ACBOPQCglb0AQIa8AADlOwAQoL0AgDK8AEDbPAAAEL0AgEm8AAC9PAAAljwAAP48AOCHPQAAnbwAwO08AKAHvQDAbL0AAGy7ANDNPQDQhT0AQDI9AAAZPABAp70AgC28AGAtvQDgMD0AwOo8AAACPQDA6zwAMNC9ALCnPQAwpb0AoAw9AOAQvQAA/bsAAAO9AEADvQDgKr0AgIo8AAC4OwAAbrwAAAU9AAAgOgBA3bwAQLI8AOADPQCAoDwAgGa8ACAdvQAAYjwAIAI9AACvvABAYj0AwJa8AMBvvQAAB70AAFg6AIDAvACAoTwAwJM8AAAfvADANb0AID69AOAVPQDAl7wAwGU9AIAfPACwhj0AGAO+AIAGPAAAFr0AgDg8AHCnvQCASD0AAL+7AIBOPQDAVz0AgEy8AACgPAAAcLsAIFC9AACnOwAA/DsAIFg9AICCPAAA5TwAgMA8AADMuwCAiLwAoBE9AAD0OwAA0bsAAC29AIDzPABAEL0AUIK9AIAUPADQjT0AiAA+AAAZvACAibwAEOs9AOCavQAAgLkA4CU9ACADPQAAe7wAwAu9AACvPACAmr0AAEy7AAAQOwAANLsA4Ak9AAC2vAAAOz0AQL+8AMCzvABA8LwAYD69AIBLPABgML0AgAE9AAAquwAwlD0=","chunkHash":"23f892a6be0754c5adf677fffe48b8e846cd661b995eb3d9925988e96a5a684e"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def _load_volume_slice(self, sample_metadata, crop_position):\n        #...\n            mask_crop[d_idx, :actual_h, :actual_w] = mask_slice\n        \n        \n        mask_ratio = np.mean(mask_crop > self.mask_threshold)\n        if mask_ratio < self.min_masked_ratio:\n            \n            \n            volume_crop = volume_crop * (mask_crop > self.mask_threshold)\n        \n        return volume_crop, mask_crop\n    #...\n```","range":{"startLineNumber":322,"startColumn":0,"endLineNumber":331,"endColumn":37},"embedding":"AACIOwBAlTwAAGo8AKAVvQAgLb0AwL68AAAwPADgEz0AgG29AIAQPAAARTwAAAW8AEARPQAAeDsAQPE8AOCEPQAA+7sAgMY8AKCavQBATD0AgNg8AOCSPQBASD0AQEa9AADYOwAAhrwAAKq7AADYPABAZD0AAMu7AJDmvQCAD70AIC29AMAEvQAQi70AAIG7AEClPQBgvT0AYDy9AADJvACAgD0AAK29AABeuwAASj0AcIA9AMCDvAAAxzsAUI+9AIB8PQDAgTwAACG8AOBNPQDgi70AAJu8AACpvABQjT0AAMo7AIAWPQCAmrwAQJG9AIBQPQAgc70AgAA8AAAKPQCgCD0AAIQ7AFCcvQAAsLwAgOa8AIABvQAAVbwAACo8AADkvAAARTwAwHg9AKBxvQAALrsAQH49AMDOvQAAWrwAgC28ACAwPQAApDsAABq8AIDwvADwvr0A8I69AGBLPQAArb0AAIm8AAAHvADArzwAwN+8AIAzPQAAwDoAcK89AICwvADwp70AQKc9AABSPAAAk7sAgCw9AACjuwDADr0AwKw8AAAEOwBAQT0AgDq8AIAOvABAqj0AIFI9ALCnvQCgez0AALK8AIBDPQCgQr0AAHi8AACsOwBAT70AwII8ANCsvQAABLwAAA+9AKBevQAAgDkAQJ28AMCGPQBQiL0AAMo7AACduwBAUj0AADG9AGBgPQBg4r0AwJO9AMCDvADA9jwAoFY9AGACvQDwpD0AIGC9AICGPACA8z0AICI9ALCvvQAAZ7wAwGS9AFDOPQAAsrsAMLs9AAC5vACA/jwAANU8AEDGvABgoL0AQGy9AGANPQDgST0AQJE8AAANvQCAVr0AYC89AMD1PABAhDwAYGS9AMB3PQCQzr0AAGG8AEBgvQDAZ70AAFY8AABXvADA6zwAoLW9AEARvQCAUbwAgA+9AGBnPQAAcb0AgLC8AIAGvQAAfbwAQN48AABQPABAo7wAkIC9AEC5PACAWT0AACW9AABdPADgMz0AAPQ8AIAsPADAijwAgK28AGAivQCAPT0AAK09AMAtPQAAhTwAwLG8AEB9PQBAzbwAgHG8ACAGPQBAj7wAwKm8AMDCvADgDr0AAJO8AOBaPQAAKDoAQJk8ACAxvQDA4zwAgHw8ACAHvQAAxDwAQIQ8AMD1PADgbD0AgBA9AIBuPAAAXTwAQIG8AADZvAAAMrsAgAW8AKCdvQAAGrsAQPc8AGAKvQDAkrwAAMe7AAA2OwCAdr0AwIe8AEClvQDA8TwAgNU8AICPvABAQT0AAFi8AACgvACAtzwAANA8AIDHvAAgcb0AANC5AGBXPQAgrz0AwN48AACRvABAjL0AQHW9AMBfPQDAc70AwI89APC9vQDA0DwAgIM8AABougAgar0AAIo7AAAJPQAAy7sAwN88AAC6uwBAhbwAgMc8AABSuwCAYTwAQCs9AIBivQCggr0A4AE9AIAwPABAMj0AYBk9AIAzvAAQj70AADK9AMCLvACA2jwAAJc8AECDvACgP70AgMg8ACAivQAQtr0AwA49AND8vQAABbwAADa7AAChuwDAzbwAAA+9AMAXvQAAYLwA4HC9AACfOwBAYb0AALc7AIDCvADAFr0AgB48AAA8vADAuDwAEIE9AADKuwDA4bwAAIE7AIBDvABgCj0AgCw8AADwOwCAnTwAgAO8AABlPQCAVD0AwFK9AKBFvQAAAjsAQOE8AKA6vQDgQz0AoEC9AMD5vABAIT0AEPe9AACeOwCAGLwAALm8AADCuwBA1rwAwIu9AMDtPAAAlbsAsIe9AMCTPACQk70AIGG9AADGvADAtL0AQN08AICevADA6jwAYKY9AAAoPABAaL0AICq9AAAAOQDABr0AAMw6AEA8PQAAmLoAwPQ8AEDJvQAAxjwAQBO9AOCuvQCAxzwAULI9AEAmPQCAnLwAwPG8AICuPAAAJjsAAPi7AAC4OgBgGD0AAE69ACATvQAApLwAwGq9AKBbvQDgeT0AQFE9AIArvQBAgTwAYCw9AADbvAAAqDoAABg6AECrPAAAgj0AwAc9AKBxPQDAur0AAMO8AAD5uwBArL0AAGS7AADePADArbwAALK7AMAvPQCgID0AYFs9ALCrPQCAybwAgNk8AADyvAAADr0AABC6AJCyPQDAZT0AIAA9AAAUPAAwir0AAPw6AIAAvQCAPz0AwOc8APCBPQCA3TwAYKe9AOCvPQAQkL0AAOk7AEC/vAAAcrwAALG8ACAkvQCAHr0AQIQ8AABFPAAAaLoAgFA8AACjuwCA6rwAQJU8AKAHPQAA8LoAAB88AIAZvQCADjwA4GI9AIAPvADAKj0AQLm8AMBAvQDADr0AAMK7AIBsvACACjwAQLA8AED8vACgVb0AQEu9AEAuPQAAYbwAwBs9AACWPACAhz0AcBa+AAAyPADAHL0AgEg8AOCJvQCAYT0AAM67AIBaPQDgJz0AQPW8ACAZPQAAljsAYGC9AIDRPAAAMzwAgG09AACBuwCAHz0AQC09AADKOwAAmrsAIAk9AEC7PAAAwDoAwPG8AEC4PAAAbrwA4GW9AACjPAAgsj0AkBE+AGADPQAAnLsAsMo9AHC0vQCAEjwAgAE9AEA9PQBAirwAwI+8AEAePQBAiL0AANY7AEDQPAAAWLoAwPo8AECTvAAAbj0AoBu9AMCQvAAA1LwAIEu9AICBPACAYr0AQEs9AACuuwCAWz0=","chunkHash":"3526e6c784afd82858401f0d4ba366f3886bb06f9f8b55f15368f77b0116e290"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        \"\"\"\n        Get a specific sample by index.\n        \n        Args:\n            idx (int): Index of the sample to retrieve\n            \n        Returns:\n            dict: Dictionary containing the sample data\n        \"\"\"\n        try:\n            \n            sample = self.samples[idx]\n            sample_id = sample['sample_id']\n            \n            \n            crop_position = sample['crop_position']\n            volume_crop, mask_crop = self._load_volume_slice(sample, crop_position)\n            \n            \n            if np.isnan(volume_crop).any() or np.isinf(volume_crop).any():\n                print(f\"WARNING: Found NaN or Inf values in volume for sample {sample_id}\")\n                volume_crop = np.nan_to_num(volume_crop, nan=0.0, posinf=0.0, neginf=0.0)\n            \n            \n            if self.transform is not None:\n                try:\n                    crop_tensor = self.transform(volume_crop)\n                    \n                    \n                    if crop_tensor.dim() != 5:\n                        if crop_tensor.dim() == 3:  \n                            #...\n```","range":{"startLineNumber":334,"startColumn":0,"endLineNumber":365,"endColumn":0},"embedding":"AID0PADAsrwAgIs8AMC7vABAWL0AYDy9AMBmvQBAMD0AIFi9AADUuwDAsTwAYAW9AIABPQCARb0AQCQ9AAAKOwAgL70AABo7ADCSvQCAET0AQJQ8ACCLPQAAGrsAwOK8ACBRPQAABLwAAK47AIAEvQAAsD0AAKg6ACC/vQAAj7wAgHW9AAArvQCgf70A4AY9AAC+PQBA5TwAUI+9AACmuwDgRz0AEPm9AACmuwCADzwAAH09AIDzvAAA3DsAkL+9AICFPAAQhD0AgEq8AEDnPADwtr0AgCM8AOARPQAAZDsAAAy9AGBiPQCA2zwAgKO8AABquwAAnL0AgBK8ABCyPQCAMTwAALC7AEDDvACA2zwAAB47AIB6PAAAPDsAgFY8AOAcvQAAcDwAQFs9AAB4PAAAsDoA4Co9AKgEvgDgS70AgA49AAAaOwCAQLwAAOM7ACB/vQCwqb0AoEe9ACAAPQAgNb0AAPq7AMDDvACAFLwAoDK9AAB/PACAKj0A4Eg9AGAWvQAgCr0AoAQ9AED8PACAWTwAYAY9AID5PABgXr0AAOs8AKAYPQCgQj0AQNU8AAAIvQDgND0AgKi8AJC9vQDgNj0AwAc9AAA/PABA8TwAwIa8AIDhvAAgTb0AABW8AACuvQCAnTwAAHO8AMBqvQCAo7wAQNq8AICUPQAgmr0AQC+9AACdPADAPD0AgEG9AICKPACAw7wAYKe9AMALvQAAlD0AgGo8AEBIvQAglj0AMLG9AACgOgBwqT0AoBQ9AMAGvQCAar0AAI69AIBbPQBA8zwAsCA+AICkPAAACrsAIBE9AADkvAAAbbwAQCu9AIAJvACAZDwAQBa9AAD3OwDAOr0AoDE9AACXvACAezwA4F29AKBiPQDAr70AAAO9AAAGvQAAersAgPk8AADoOwDAszwAAIq7AACKuwAATrwAABm9AKCnPQAgn70AwPy8ANCFvQBAvrwAAC+8AAC4OwDA1jwAkI+9AIA4PQAAxLwAYNK9AECMvADAwjwAQKI8AECJPABA6jwAgAW8AADWuwAgMz0AIAc9ANDNPQBAyrwAoOy9AKB3PQAAPLwAcJU9AECWPAAA2DwAgHm8AKBkPQAAYLkAQCC9ACBVPQBAA70AgEG8ACA7vQBAiTwAgOY8AMBPvQAAQbwAAIa7ACANPQAAgjwAoDU9AADvuwAgHj0AAOw8AKAGPQCAhjwAAJi7AACBvQAAprwAAJ+8AABgugDAAT0AAJC8AGAqPQAAQDsAQIq8AIBrvQDA6DwAwB69AHCHvQDAPL0AIAK9AEBGvQCAEz0AAJO7AAAZvAAwkr0AYAg9AOAaPQCgnD0AAI08AMACvQCQh70AAJq8AECAPQCA9bwAIGg9AKCWvQDAqzwAQKs8AECgPAAAYLwAgGE8AGA0vQCgPr0AALa7AAAiOwAgHL0AgOc8AMAgvQAADjwAoHE9AAC5vQDA0rwAAMS6AECaPADA2zwAIAo9AADtvACQub0AAPi8AIAWPAAA5rwAwFk9AAAUvQAAszsAgEG9AOATvQDgUL0AQIC8ADDcvQAAuzsAgJ+9AIDLPAAA6bwAAAK9AAC8uwAAxjwAwAS9AABcvABgPb0AAMM8AECAvAAAibsAIC+9AABIugAAfT0A4Fk9AADMOgCgDb0AANS6AEBivQAANT0AwJk8AABUvACQhj0AQKI8AMC8PACA2DwAwEy9AOAtvQAAFT0AQKU9AHCpvQDA9TwA8Ki9AKBAvQAA0DsAIPK9AAAYPQAAGL0AwGK9AICKvAAApDoAQL48AACXPQCASLwAAKK9AABOvACA5rwAAFy8AMDIvABQoL0AAKI7AMDQvAAA+LoAwFU9AIAyvQAQCr4AAAq8AIB0vAAARLsAgJM8AADzOwAARrwAQI88AABQvQBA2bwAwIS9AFCBvQAAjrwAUOc9AACwOQAA1DwAQIe8AMBOPQAAr7wAoCw9AIDKPAAAkT0AgIi8AACdPADAfr0AgJm8AAD+vACgEz0A4BQ9AIA8PQCwvz0AgKg8AMCCvADA1bwAYAO9AMBdPQAAbj0AQC09AADvOwCg4L0AAHy7AOAbvQDAob0AYBE9AABavAAAq7sAQJ08AMBjPQBgAD0AQPg8AGBRPQAAEjsAAIg6AMCivACgfL0AAGg7AMC0PAAAnDoA4HU9AABjPACwlb0AgBe8AABDvABgDD0AACC5AEAAPQAAHzwAYAe9AADKPQAAJb0AgMi8AGAkvQCgZr0AAJi7AECsvAAwlb0AADE8AED2PAAAqbsAACW8AIA5PADAwjwAABY8AECFvADA6rwAQNO8AGBPvQAAAz0AwFg9AAAguQAA+DsAQCS9ADCbvQCA7rwAgNQ8AICGPAAAoTwAoAk9AMBPvQAAxbsAAFK8AICjPADA+rwAIA89AEDAPACgBj0AcN+9AADfvAAgYb0AACQ8AKAHvQCAazwAQAu9AICWPQAAfzwAgDw8AIBZPAAAPDwAoIO9AEAdPQBA8zwAAMI8AAA/vQCAAzwAAIQ8AIAAvAAA/DsAgDs9AADvPAAAprwAgHm8AAAQugBgYb0AQKe9AAA4PAAgVD0AAAA9AABIPAAANDwAgLg9AGDSvQBQsb0AQCc9AJCHPQCAQbwAwMW8ADCAPQDAuTwAANo7AAD5PABADT0AAPA6AIA5PAAAAD0AQK09AKA2vQAgBL0AQAq9AMDxPADgb70AIKU9AEB1vQAw5z0=","chunkHash":"87d7ff835bbcd0dc3809bd4dc91b658c5286c92cc26d153f884ad7ce2428e563"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        #...\n                            crop_tensor = crop_tensor.unsqueeze(0).unsqueeze(0)  \n                        elif crop_tensor.dim() == 4:  \n                            crop_tensor = crop_tensor.unsqueeze(0)  \n                except Exception as e:\n                    print(f\"Error in transform for sample {sample_id}: {e}\")\n                    crop_tensor = torch.from_numpy(volume_crop).float().unsqueeze(0).unsqueeze(0)\n            else:\n                crop_tensor = torch.from_numpy(volume_crop).float().unsqueeze(0).unsqueeze(0)\n            \n            \n            if self.mask_transform is not None:\n                try:\n                    mask_tensor = self.mask_transform(mask_crop)\n                    \n                    \n                    if mask_tensor.dim() != 5:\n                        if mask_tensor.dim() == 3:  \n                            mask_tensor = mask_tensor.unsqueeze(0).unsqueeze(0)  \n                        elif mask_tensor.dim() == 4:  \n                            mask_tensor = mask_tensor.unsqueeze(0)  \n                except Exception as e:\n                    #...\n```","range":{"startLineNumber":365,"startColumn":0,"endLineNumber":386,"endColumn":0},"embedding":"AAAiOwAANLwAADo8AEAIvQAgBL0AYBm9AAA4uwCAPj0AcIW9AACVPAAAZzwAADA6AEBkPQAAf7wAgIg8AAA9PQAATjsAAIg6AAC1vQCgHz0AAKS6AEB7PQCgSz0AQGO9AAAmOwAAjLsAgNm8AAD9uwDQgz0AgCa8ANDJvQAAqbwAAIy9AKBwvQBAX70AAJc7AJC1PQCwnT0AgBC9AAAPvADQiD0AQJ69AMCavAAALT0AIH49AIDQvAAAgLoAYMG9AEBNPQAAhTwAAKO8AACEPQAAc70AAIQ6AEDmvAAALT0AAHK8AKBDPQCAebwAQDa9AABJPQAAdL0AgCo8AAASPABgCz0AAOk7ACCIvQDAm7wAIEe9AECYvABA8LwAAMM7AACUugAAtDsAoGw9AAAZvQDAirwAYEQ9AKC6vQDAobwAwJ88AABNPAAA7bsAwLA8AMDQvADwp70A8JW9AIA3PABQo70AwPy8AAA9vADgAD0AwOy8AMDmPAAAErsAELM9AACxvADwjL0A8Kk9AMCkPAAAAT0A4Bc9AMCWPAAANjwAgIc8AADQugAA/zwAgAq9AAD1vADQwz0AQO48AGCyvQAgBz0AgGs8AOB7PQDAgLwAQKW8AAASPACgX70AALS7ADCjvQAACbwAAIO7ACBEvQCABbwAwM+8AICyPQDAQL0AAHg7AAAeuwBgVD0AQCm9AIDrPAAwqr0AgJe9AIDivABAkzwAQIY9AIBovAAgZD0AEI29AAC6PACg7z0AYCc9AGCovQAA8bsAwAK9AND3PQAA8DoAoNc9AIANvQCAHzwAAA08AIBbvAAwh70AAFG9AABFPADgrT0AwKo8AKA/vQCAJ70AwLU8AEDiPABApjwAwFm9AIBCPQAws70AABy9ADCqvQBgjr0AgD88AIAdvACAhjwAEKm9ACBJvQBA97wAAOa8AIAxPQBwkb0AwCK9AIAivQAAXbwAAKk7AAAGOwAApLoAYFu9AGACPQAAFj0AkIS9AACjuwAgCj0AwMI8AAAWuwAApzwAAIg7AABivADAFj0AgDE9ACBKPQCAVDwAoAu9AGCXPQCAOLwAQKG8AKAePQBAxLwAwBe9AACSuwAA37wAAJy6ADCBPQCABzwAACq8AKALvQBAwTwAgAk8AGA9vQCAPDwAAHS7AAAZPQDAKT0AkJU9AABeOwCAuDwAALS6AIARvQAAZbwAgLy8AEDivQAAyLoAALu7AMAJvQBAtzwAAG28AMCXPAAAd70AAAA4AFCivQBAmDwAAG08AGBHvQAARzwAQK68AEDuvACAXjwAwAs9AADivADggr0AAA09ACA5PQAgnT0AIEc9AIDhvABAhL0AQHO9ALCCPQBAv7wAgIk9AICYvQAAUjwAAP48AADdOwBQi70AABe8AAC6PABArLwAgO48AIAXvAAAg7wAAAw9AIDAPABArTwAwII8ACCMvQAAk70A4Ck9AADbOwCgJz0AIBY9AAD8vACQpb0AABW9AAD0OgAAgDgA4AI9AMDavACAKLwAQPA8AABrvQBAw70AoB89APD9vQBApTwAADu8AAAbPABgPb0AAJy7AIC/vAAAwrwA4H29AIARPAAQh70A4CK9AIBXvACgTL0AgGU8AACEuwAAOzwAAJI9AAAcPADAIr0AAMS6AMCEvAAA/jwAAKw8AIALPADAxjwAwLK8AGB1PQCgez0AMKG9AKC0vQAgBb0AgHs9AIBRvQAA9jwAoI+9AEDHvAAArzwAEOi9AABcvADA+7wAAES8AABlPACAxbwAgH69AMD/PADAtrwAoIK9AADqOwAwqb0A8IC9AADIOgAQjb0AAJS7AAD8ugCAkjwAULQ9AACNOwDge70AgJG8AAASOwCAr7wAAJA5AECkPAAAHDwAgJE8AICivQDA4zwAgCO9AECJvQBAqjwA0Mo9ACACPQCA7rwAAOW8AEDdPABgET0AAHA8AAANvABASD0A4IW9AIB8vACgL70AwFe9AKCZvQAwqj0AwDk9AAC7vACAdz0AICQ9AMCDvAAA1TsAgCQ8AACzOwDgbD0AwCg9AIAmPQDArL0AAEi7AECHvADQ0r0AAKK8AACbOwAAmbsAgAo8ACAAPQAA7TwAAHI9AMCaPQAAg7wAwMI8AOASvQCAGb0AYCA9AIC6PQAgeD0AwCs9AIBTPACgWL0AAHA8AICtvACgQj0AgBY8AGBDPQBAgjwAAMe9AFCzPQBQrL0AQLc8AGBNvQCA1rwAAAq9AEAovQCgPL0AAAW8AACgPABAmbwAABc8AMDDPAAAEDsAgHy8AECwPAAACbwAgBI8AKBWvQCAaTwAIGA9AEDCvACgMD0AAFi7ACBOvQAAHL0AAJ87AIABPAAAUjsAAEI8AEDrvADgIL0A4Fa9AAAqPQDgLb0AIC89AMDJPAAAgj0ASAu+AIBgPADAobwAgFs8AKBSvQAgUj0AgPu8ACCNPQAA/zwAwI68AADiPAAA9bsAoCe9AIDCPAAAqTsAIGk9AADFOwAA1DwAYEc9AECJPACADbwAUJs9AECjPAAA0TsAAOO8AABAPAAgIL0AgJi9AIAgvACQpz0AEBg+AADGuwAAuTsAsKU9AOC1vQAAPLsAICA9AAC9PADAgLwAAAA4AEC8PADgfL0AAAC8AAAyPAAAyTsAAPw8AAAkOwDAQz0AAAg6AAAOuwDAtLwAAOG8AACxPAAAwrwAQBQ9AABkuwAAcz0=","chunkHash":"c75bc281de76ec0dfe0590055e209319c7274aea78841c3122cfeeb1a4dade04"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        #...\n                    print(f\"Error in mask transform for sample {sample_id}: {e}\")\n                    mask_tensor = torch.from_numpy(mask_crop).float().unsqueeze(0).unsqueeze(0)\n            else:\n                mask_tensor = torch.from_numpy(mask_crop).float().unsqueeze(0).unsqueeze(0)\n            \n            \n            assert crop_tensor.dim() == 5, f\"Expected 5D tensor for crop, got {crop_tensor.dim()}D with shape {crop_tensor.shape}\"\n            assert mask_tensor.dim() == 5, f\"Expected 5D tensor for mask, got {mask_tensor.dim()}D with shape {mask_tensor.shape}\"\n            \n            \n            metadata = {\n                'sample_id': sample_id,\n                'crop_idx': sample['crop_idx'], \n                'class_name': sample['class_name'],\n                'tensor_shape': crop_tensor.shape\n            }\n            \n            \n            return {\n                'volume': crop_tensor,\n                'mask': mask_tensor,\n                'label': sample['class_id'],\n                #...\n```","range":{"startLineNumber":386,"startColumn":0,"endLineNumber":408,"endColumn":0},"embedding":"AAB2OwCAqbwAQJM8AAA0vQDAybwAYDC9AAAOvACAKj0AIIu9AIDGPAAA/TsAgBy8AABTPQBA8bwAACA7AGBFPQAA67sAAAi6AACgvQCAJD0AwIc8AGBSPQBgMz0AIHC9AABVPACAObwAIBS9AABfvAAgmz0AgCk8AODXvQCAaLwAkIm9AGBOvQBglb0AAIC7AGC8PQCglj0AQJi8AACdvAAghz0AEIK9AABlvAAAuzwAwHg9ACAPvQAABjsAwLW9AIAvPQAAzjwAAH68ACCRPQCAh70AgFm8AEC8vABAHz0AAOO7AMBlPQCAb7wAYG+9AMBfPQBAL70AgDu8AIBNPABA1jwAAMM7AGB1vQAALrwAoAq9AMD0vACAj7wAADE8AICYvAAAWDsAwHA9ACBPvQDAA70AEIo9ALDAvQAA47wAALk7AIDnPAAAwLgAAJA7AACyuwAAkL0AILq9AABAOwAghL0AgDW8AACkuwDA0zwAAB28AAClPACAETwAEK89AEARvQAAe70A8KU9ACAOPQBAJj0AoAs9AMCDPAAAADkAAOS6AAAOPAAgHz0AYAK9AKAWvQDQrD0AAFw8AMCuvQAAEj0AQLE8AOCQPQAA/7sAAMe8AAAtPAAAKL0AADK7AKCsvQAAy7sAAIa7AOAcvQDAkbwAAI+8ANC0PQAgJb0AgEo8AABwugDgBT0A4De9AIAXPADQm70AkJ+9AICtvABAgDwAoE09AIAYvAAAQD0AYGq9AECVPABw4T0AwEA9AEDavQAAmrwAwEi9ACACPgAAYDkAcPE9AECZvAAAmjwAACA5AABuuwDgn70AoHq9AACUOwBwkD0AwI48AABLvQDADL0AAIw8AMCJPAAA8zwAQFO9ACAhPQCwsr0AwB+9ACCivQBAe70AgH08AAC8OgDApzwA0Jq9ADCVvQCAnLwAQPG8AMBZPQCAgb0AoCO9AIBzvQCAxbwAgFw8AIAuvAAA7TsAcJa9AAAhPQAAAD0A4Fa9AADtuwCgHD0AYBg9AIAJPACAaLwAALC6AMD1vACgUD0AAEs9AGBKPQAgHD0AgA29ABC0PQDAtbwAAHY7AAD1PAAA5LwAIFy9AECMvABgQ70AgHk8AIBiPQCADzwAAIm8AACsuwAAAT0AwJI8AOB1vQAApjsAwIC8AADIPABAHD0AgJw9AACFPAAAHDwAAJC8AKAQvQAAnLwAAEK7AODXvQCAnbwAACC6AOABvQAABj0AAD68AMC3PABAWr0AAHw8ABC1vQAAujsAANA8AEB0vQCAfTwAwKS8AECcvACAVDwAIAs9AACtvACgV70AICQ9AOAvPQDQoz0AQFU9AECdvABgrb0AwEy9AMBWPQDAvbwAIHg9APCMvQAAXTwAAP48AADMugAgoL0AALy6AACfPADAsrwAAG48AACqOwBAi7wAgP88AIAXPQDgFT0AAOY7AJCHvQBQhL0AoCQ9AAAouwDggD0AoCM9AMBWvQBQir0AAAS9AACYOwAANjsAQK88AIDnvACAjrwAALc7AGAqvQDArb0AgCc9AAANvgDAlzwAAIW8AEC+vABgXr0AACA6AMC+vABAhbwAQHy9AAB+OwDQir0AICO9AABivABgY70AgBk8AACcOgAAzTsAIHs9AADguQDAQL0AAOC7AADmvAAAvDwAgEQ8AADlOwCApDwAgJK8AKBCPQAQgD0AAJe9AICcvQBAjrwAAHg9AMCXvQBALz0A4K+9AEC0vACADz0AQNq9AAD5uwAgC70AwNW8AICrPAAA9bsAYB29ACABPQAAXbwAADG9AED3PAAwnr0AMJe9AACIuwBAe70AgFO8AACruwCAaTwA8KU9AAD4OgCAfb0AgFe8AACtPADgBL0AQJw8AAAFPADApDwAwI48AMCdvQAAxzwAYBq9ACCAvQDAqjwAkKo9AMAmPQBA3bwAgMm8AIAUPABgJT0AAEo8AECMvABA4jwAsIC9AEDevADgYb0AQDi9AFCIvQBAqz0AwEE9AIDKvADgdz0AwMs8AABgugAACDsAgBC8AAC2PABAZT0AABc9AAAZPQDgnr0AAMA4AIBHPABQ0L0AQLS8AABuvAAAFDsAwJY8AMANPQCAbTwA4HA9AKCdPQBAibwAABo8AIDxvADAC70AwBc9AMDPPQDAYz0A4EY9AIC0PAAAJL0AAAQ8AAC/vADgQj0AAJE7AKAYPQCATzwAINO9ALCgPQBAnL0AgJI8AOAxvQAA2bwAQBW9AEAyvQBgab0AABY8AAA6PABgBr0AAN07AKAjPQAAqLoAgEy8AAClPACAP7wAgFE8AKBTvQAAzDwAwHE9AIAdvQAgFT0AAPC6ACAsvQAAhbwAQKQ8AIAwvACAczwAgE08AMA5vQCAB70AIHe9ACBQPQCALb0AwCY9AAC2PACglT0ASA2+AIApPADA5LwAAEk8AIBgvQBAHz0AIAy9AABuPQAAQj0AAJa8AACePAAAn7sAgPO8AOAEPQAAiLoAIDs9AAAIOgDAhjwA4Fg9AAD7OwAAersA0KQ9AIBJPADAnDwAwNS8AACzPAAALr0A8KO9AABIOwAAcD0AGAc+AIBVvAAAZjsAYMo9ANCsvQCgBL0AIBk9AEDyPAAAfbwAACQ7AMChPACga70AgCK8AAAaOwAACrsAAEw8AAAQuwDACT0AgIM8AACHuwAAyLwAQIy8AEDiPAAA9rwAwBY9AIBvvAAgkT0=","chunkHash":"65405bbaafe47123c4e92f5aa6851956115234a584d303dab54b52525376e9c5"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        #...\n                'metadata': metadata\n            }\n            \n        except Exception as e:\n            print(f\"Error in __getitem__ for idx={idx}: {e}\")\n            import traceback\n            traceback.print_exc()\n            raise\n#...\n```","range":{"startLineNumber":408,"startColumn":0,"endLineNumber":415,"endColumn":17},"embedding":"AAApPABgDz0A4Bc9AIBZvQDA17wAAJ87AADruwCAfz0AQJi9AMCovAAgNT0AwO68AAAuPQBALL0AgCU8ACAzPQAAKDoAgCa8APDUvQBwiD0AYAI9ANCpPQCAPj0AYAa9AMCcPACAQjwAQBa9AIBaPACQkz0AgDU9AJDivQAA7bwAAN+8AIDGvACANr0AAMA4AIC8PQCgWz0AwBG9AGAsvQCAXz0AMN+9AADFuwCgbz0AAL+7AEDKvACAlDwAcI29ACCpPQCAITwAAIe7ALCHPQDgk70AQLK8AGArvQAgGz0AANC5AOB5PQDAmLwAYIm9AMAbPQBARL0AADq9AOAgPQBAvjwA4Ay9AOB5vQAARrwAgPC8AEDtvABAr7wAgBO8AABbvADAEz0A4BY9AOBRvQAAoTwAQNM9AODCvQDgQb0AACq8ACAtPQAAu7wAACw8AAAuvAAwjL0AwI+9AAAouwBge70AwBe9AED/vACAijwAICy9AECGPQDAizwA0NY9AKBJvQBwiL0AML49AAC/uwAAgrsAAIk8AIBDvADgDb0AAAS8AABIOgAAqjsAwK68AKBbvQBwkz0AAIC5AMB4vQCgDD0AABg6AKAyPQAA27sAYCS9AAD0OgAAKLoAQIg8ACBgvQAA+LoAgHe8AIAvvQBAJb0AQKS8AIBbPQBAR70AgA+9AICcvABgKD0AMIK9AIBwPAAAfb0AkI69AABEvACATbwAAOc8AAAovQDADD0AoF69AEDuPACAuD0AADU9ACClvQCAG7wAwN28AODcPQAgOj0AsP89AACDuwBA/TwA4EU9AAD7OwDgBL0A4Fq9AACRuwDgRD0AgOU8AECIvAAAXbwAwJw8AADtOwBAvLwAgHy8AOClPQCwtr0AAEm9AAC5vABALr0AgKs8AID0vABA3DwAQEu9AMCKvQBAo7wAAIS8AABSPQAgtb0AQFa9ACAovQAgWr0AAIA7AADWOwCAR7wAYJ69AIA1PQCA9DwAYFm9AEDTPABAqTwA4B49AIBxvAAAcDsAgBS8AEAbvQAAojwAQNo8AOAwPQAA7TsAIES9ALC0PQAAKbwAANc7AIDKPAAAx7sAIFm9AABguQDgGL0AwNC8AACCPQAAJrsAgG28AADYvAAwnj0AgE88AAC4vAAAiLwAAAK8AACuuwAAdD0AQN88AAAAvAAAmjsAgIo8AMCrvABAsLwAwL+8AKCOvQAAfDsAAH47AADKvAAAQD0AAAK7AAB1PABgLL0AAOi8AMDKvQAAyTwAQNc8AEDQvAAAqzwAQEe9AIBbvADAgTwA4Ao9AABouwDgSb0AwIA8AADtPADwtz0AgB89AACfvACAqb0AQF69AHCjPQBgPr0AALM9AICgvQCAGDwAANC7AAD6uwBgKL0AANG7AAB8PADAor0AQME8AIDevAAA5zsAAJA5AABUvAAAUzwAACk8AACYvQDAPL0AYFo9AMC/vADgIz0AwFE9AIBBvQAAe70AAPU7AEALPQAAtDoAgEY8AIDzvADgZ70AgLg8ACACvQBwjb0AAN07AHDsvQAAXjwAgBs8AADlvACQlb0AgFI8AOASvQDAEb0AoGe9AICwPAAAl70A4Ba9AMCtvAAgc70AgAc8AIA2PADgJz0AcJI9AAAkuwAAKL0AYDe9AKBFvQAgOT0AADw7AECFvAAAGDsAADg7AFCwPQDALT0AgJC9AOAvvQCADbwAgFM9ABCuvQDgYT0A0Lm9AAAtvAAAkrsAEMy9AABwuwAAXbwAADG8AKAgPQDAujwA4D29AOADPQCAJjwAAH+9AACAOQDAZ70AACq9AACRvAAQnL0AANk7AAC7vAAAYjsAkMY9AKAKvQBwlr0AIBu9AADGuwCgJb0AgI88AAD8uwAABjsAwLe8AFCyvQCgdD0AgO28AEBTvQAA+zsAIJk9AMC3PACAJrwAoCm9AICZPAAAzzsAANC6AMDFPAAA2DsAoHS9AGApvQAAibwAIAe9AMDAvACAez0AoBU9AIAnvQCANT0AwFA9AAAgOgAAnTwAgPm8AKBGPQAgSz0AwO48AIA2PABQwb0AgAO9AABaPACwmL0AgEq8AACbuwAAPLwAgJc8AICpPABA+jwAIFc9AJC2PQAAhbwAAAu8AAC0uwDADb0AACc9AOChPQAgGz0AoHM9AMDOPAAgSr0AABu8AECtvABASz0AAG49AICoPACA2zwAYNi9AFCjPQBApb0AAJk8AAC9OwAQgr0AAGC7AIA3vQDAPr0AAOU8AAAEPACgFL0AIDw9AABdvADA1LwAABy7AAC2uwAAzzwAYCc9AIASvQAgLz0AAIU9AEDAvADgFz0AgLW8AJCMvQCApLwAwEQ9AECTvAAA17sAgKE8AOAGvQDAtbwAYEK9AOBrPQCAtbwAwOA8AAB7vADArD0AAPC9AAApPQAAQLwAQIw8AMAgvQCgYD0AAIi8AMBKPQBQoj0AYBe9AADIugBAB70AQJ+8AGBXPQAAHLsAAHw9AIARPAAAJjsAAAw7AACgOwAA6jsAIFU9AKBXPQAAEDsAIAq9AIAGvADA0bwAwCC9AAAKPABArzwAYBs+AECzPAAA6jsAENo9ADCivQDAhbwAAGE9AKCKPQAAibwAgAm8AIBMPQCAOr0AoB+9AACWOwDAnbwAgDa8AADZuwDA9jwAgLc8AEC2vAAAljsAgGO8AAC/PAAAl7sAoC49AAD0uwCwpj0=","chunkHash":"f584172ef295f658aa0e41cf0cbf7099485f267a0760b2baaa2b1c1bd0ef9fa0"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\nclass MaskedNucleiDataset(Dataset):\n    \"\"\"\n    Dataset class for loading 3D nuclei volumes, extracting subvolumes only from masked areas.\n    This implementation uses true lazy loading and processes cells based on a CSV file.\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 transform=None,\n                 mask_transform=None,\n                 sample_ids=None,\n                 class_csv_path=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 load_volumes=True, \n                 crop_size=(80, 80, 80),  \n                 target_size=(80, 80, 80),\n                 sample_percent=100,  \n                 mask_threshold=0.5,  \n                 min_masked_ratio=0.5,  \n                 scan_step=40,  \n                 debug=False):\n        #...\n    def __len__(self):\n        #...\n    def _load_volume_slice(self, sample_metadata, crop_position):\n        #...\n    def __getitem__(self, idx):\n        #...\n```","range":{"startLineNumber":15,"startColumn":0,"endLineNumber":333,"endColumn":31},"embedding":"AAAouwDgHz0A4CA9AIDcvQCgc70AgBu8AACiuwBA1TwAoCi9AEAcPQDALj0AYAO9ABCEPQCAQrwAgOc8AOBMPQCAuDwAQAg9AABJvQDA0DwAIII9AGBrPQCgZD0A4JG9AADgOwDAvTwAAMU7AIAQPADgJz0AYBC9AMDHvQAATrwA8Km9AIArvABgPb0AQIA8AOClPQCQ5z0AcJS9AABcuwDAkD0AMKO9AAD0OgDAuTwAYB09AACtvACAxjwAwHO9AECoPADAvjwAQFS9AKA3PQBgEL0AQCm9AABivAAAMz0AAIu7AEBOPQDgBr0AQD29AEBKPQAAe70AwIq8AABIPQBAnDwAAL07AICJvQDA2LwAoKC9AGAnvQCAaTwAABa7AACHuwCAQ7wAgJA9AMAXvQAAlbsAUKM9ACDTvQCAV7wAAGy7AEC9PADA57wAgLI8AKBwvQAw170AYD+9AADAPABAf70AYDy9AACUuwAAlzsAgFi9AKB/PQAAiDwAYEw9AADIvAAgp70A8M49AABguQCAILwAQIY9AMDcPADA4LwAwJw8AMCBvAAAGzwAAPi8AADTvABAaD0AwJk8ACAPvQDAoj0AACW9AAD/OwDgBL0AgCc8AOANPQBgH70AgAc8AMC2vACAWTwAAIS6AEANvQCAEz0AwMi8ACDyPQDAg70AALU7AIBsvAAgLD0AQCK9AEAzPQCQu70A8IC9AACQuwAAELoAAOs8AMB8vQAAMj0A8I+9AECePACgGD4AoBE9ANCFvQCAtrwAQLu8AMDCPQCAX7wA4LI9ACCBvQCAcz0AAGs9AMAavQAQi70AQL68AABcOwBgtz0AoBk9AEArvQBgIb0AAB48AAAgOQCA8rwAAMC8ACCXPQDgo70AoAa9AMBUvQDgcr0AAIA9AIBSPADAuzwAoAG9AMDPvAAAgL0AwMa8AMC6PQBAA70AYH29AABnvADA9bwAACy7AAC9uwBAg7wAQKS8AABQOwAAbzwAIEK9AGAOPQBgCT0AgLM8AABVvACAtjwAgCm8AIBDvACAZj0AQEo9AKAWPQDAlTwA4G69ABClPQCgVr0AwHW9AABrPQAAmDoAoCq9AEDgvABA8rwAgEq8AMBaPQAA4jsAAGW8AADWOwAA4DsAAOa7AKAZvQBABT0AgCk8AECjPAAA4zwAwDg9AAC5uwCAoTwAQKO8AMCYvAAgFb0AAFW9AKA2vQDAAb0AAEo7ANCHvQAAy7sAACI8AAAwvQCwl70AAIS8AMCOvQAAAD0AwIo8AAAlPABAkTwAACS9AIA1vAAgDD0AAJy7AMAdvQDAZL0AAB67AIDhPAAw5D0AQIU8AICBPADQvL0A4Fe9AOCRPQAgib0AYDI9AKBnvQCApTwAAD+8AMCQvACgAb0AgCk8AKBWPQBAmTwAgGg8AAC1PAAARjwAYB09AEAOPQAAPLwAgPQ8ADDCvQDgSr0AgIQ9AIBBPABAmzwAQLg8AIAtvABAVb0AAMA8AACduwAATD0AwIo8AIC1PABAKb0AAEA9AIDqvADQrL0AgFE8AGDJvQCAhLwAAHS7AADAOQCAobwAAEO8AAAgugAgI70A4B69AAAUOwAA8LsAACK9AICYPABAKr0AoCY9AIB2vABAubwAQCk9AAAsvAAAFb0AAAk8AOAnvQAApDoAgEU8AACAvACAdrwAgI68AOBfPQAgND0AYCm9AKAAvQDAujwA4IU9AIAhvQBAsDwAcIa9AABJPAAAEjwAyAi+AEDLPAAAl7wAgEG8AIC1vADAkzwAkJy9AKBXPQAArbwAYCi9AEA+PQDg170AQKi8AMD8vABQjL0AAD67AACePAAA7TsAwPE9AEAvPQBgir0AcJy9AGAJvQBALr0AAGK8AICSPACABrwAAO47ABDAvQAAOz0AYCS9AEBivQDAhjwAsJk9AIAdPQDAQr0AQBW9AIAJPACgMj0AABq8AICTPACgOj0A4Ey9AAD2PADA47wA4HG9AMAXvQCQhj0AIGU9AEAYvQAAkbsAwE09AACeuwAAHDwAAMQ8AAC5OwBARD0AgBY8AADgPACQl70AAMG7AAB1PADwgb0AgFK8AEC/PABgFD0AAJ+8AAAiPAAAdrwAEIU9APCGPQBgIr0AANI8AABmvABArbwAwIY8AECCPQBQoz0AADk9AACTPACAib0AAEo8AIA9PABAMz0AgOA8AAD0PABgEj0AEPa9AOCFPQBAPb0AwPQ8AACYugCAk7wAAHy8AKBUvQAAgLwAgCo8AMAyPQAACTwAwOK8AACfuwCAuLwAgDw8AACkuwCAFj0AANk7AIAJvQAAUTwAIDE9AICyvACAnz0AABW8AKCDvQBAuLwAgD08AKAsPQAAgDkAAPU7AIDbvADAH70AYJe9AMCIPAAAebwAAK67AIAcPQBAVz0AcAy+AOAHPQBgFr0AAP+7ALCPvQAgUj0AADi6AABCOwAA2jwAwLu8AABsOwAA/LsAgLa8AIAbPACgfb0AUJQ9AAD8uwBApzwAQBw9AADAuADA0LwAwJS8AGAvPQCALLwAAIO8AIBJvACAOLwAIB+9AMDWPACgkz0AMLA9AADXuwAATrwA4OE9ABCyvQCAHj0AYF49AMAoPQCAO7wAgEK8AABKPABA0b0AALS7AMD8PAAAKDoAQCQ9AECQvACgYT0AACg7AEAKvQBwjL0AoH+9AABXPAAA9rwAwCA9AKADvQCAWT0=","chunkHash":"0c328affa7fe0d44d3b045b2930fec6863b0952a101f789ccc55004d0ef02597"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\ndef custom_collate_fn(batch):\n    \"\"\"\n    Custom collate function to handle samples of different sizes.\n    \n    Args:\n        batch (list): List of samples\n        \n    Returns:\n        dict: Dictionary containing batched samples\n    \"\"\"\n    \n    batch = [sample for sample in batch if sample is not None]\n    \n    if not batch:\n        return None\n    \n    \n    batched_samples = {\n        'volume': [],\n        'mask': [],\n        'label': [],\n        'metadata': []\n    }\n    \n    \n    for sample in batch:\n        batched_samples['volume'].append(sample['volume'])\n        batched_samples['mask'].append(sample['mask'])\n        batched_samples['label'].append(sample['label'])\n        batched_samples['metadata'].append(sample['metadata'])\n    \n    return batched_samples\n#...\n```","range":{"startLineNumber":417,"startColumn":0,"endLineNumber":448,"endColumn":26},"embedding":"AEAwPQAA57wAIDQ9AECQvADA5bwAsJG9AMCYvADga70AULe9AIAZvABADb0AAP67AMDVvABAobwAQK+8AAAwOgAAbrwAcJg9AABVPAAAK7wAAJu8AADcPACAaT0A4Eu9AIAOvACAGb0AgBG9AAAQOgCAfjwAAPA6AACfvACAF7wAwMW8AOAZvQBAU70AQLU8AGCTPQDghj0A4DW9AMAePQAA0zwAAPa9AAAeOwDgHb0AIDI9AADuvACwiD0A4AW9AABrPQAA+DwAYEQ9AOC+PQBgYb0AwOy8AIDaPAAADz0AIAK9AICkPABAQT0AQCy9AAAIPQDwtb0AYBs9AIAFPAAA47wAwJS8AKAmvQCwnb0AQPS8AAA4OwAgCj0AAIq8ALCqvQAABb0AYAi9ADCkvQCAKL0AkIE9ALCCvQBgHr0AgMe8AICvvADwrT0AQNY8AAAQuwCgor0AgAu9AIAmPACwiL0AwNm8AADuPABA2TwAIFG9AEBwPQCACbwAgH89AMDpPAAAVr0AAGw7AOAEvQDgRT0AAHk8AACbuwDAW70AgPE8AKAZvQAAXjwAANi8AEBbvQBA7jwAALi8AEClvQBgD70AgDG8AIAPvAAA5bwAQA89AAAbvADAh70AwIq8ACAUvQAA4bwAwJc8AIAFvAAA/7sAQAC9APCsPQAAUL0AQAW9AED5vAAACjwAoIK9AIAxvADACL0AkIu9AEDZvAAAHLsAADs8AEASvQAgOz0AAAG8AAD1OwAQqz0AgLm8AEDNvACA+DwAELq9AABaPACAXb0A8LA9AMAIvQCAe7wAAMy7AABuPQBAibwAICe9AACxPACgMT0AcKE9AAAcuwBAtzwAQJY8AAC9OwDAUj0AAKI7AID9vAAACbwAANO7AEBWvQCgDL0AYBc9AAD9uwAA7rwAAEg7AGAmvQAAmbsAwC69AAC4vAAAgr0AAAq8AADQuwBgC70AQGa9AICrvQAAJ70AwE69AMCjPACAuDwAgCa9AMD4PAAAYDsAAKA6AIA7PAAgCb0AAFg7ABCevQCQlD0AAKi7AEAwPQAAFr0AIEK9AIBCPABAgL0AgFM9AKAdPQCgc70AQPm8AMChvADAw7wAIJC9AGAyPQAgMD0AAIA5AMADPQAAHjsAgEO8AABkvQCgBT0AgOG8AMDzPABgZj0AQLw8AMDwPACwmz0A4GS9AACgOwAAJT0AANe9AICHvQAAnLwAgCC8AEBTvQBgIz0AAGy8AABzvACgPr0AoJC9AAAnvQAAqTwAQIm8AACQvQAAtzsAAPw6AAAGvACAiLwAABK7AMC6vABAurwAwDs9AECyPAAgLT0AgFG8AABBvABwyL0AsIW9AOCQPQAAs7wAAG67ACA7vQDgKj0AIIe9AABrvACAHL0AAJ87AICHPADA47wAwB29AABBPACAHTwAwLQ9AADXPACAXjwAgLg8AKCTvQAAD7wAgBw8AIAJvQAAmzwAwIc9AMDvvQAgyr0AAN67AMAUPQCA0LwAAPU8AOBmvQAAibwAIAK9AICnvABggb0AADw8AEDLvABAobwAAKO7AMC6vABgHr0AAMM7AABYOwAAaDwAAMS8ABDbvQAgF70AwCQ9AGCFPQCAEL0A4Fi9ABDDvQCADjwAAMo9AIC+PABgET0AAJs8AABsvQAAwLsAAEy8AIBOvAAAMDsAAEC7AAAoOwCgPj0AYBg9AFCXvQCgFj0AQIU8ADCYvQDAzDwAoHS9AIB9vQAA3TwAIIK9AIAYPAAAo70AALw6AADouwBAgLwAANs7APAAPgCAbT0AAPA7AMBBPQDwkb0AADC9AAAjvACwmr0AAHS7AMDrPAAAnT0AkL89ADCSvQBgT70AAP48AOBWPQCAxrwAAL+7AABfPQDA37wA4Hs9AMBYvQAAsDwAAFC8AAD7uwAAoLoAkMs9AACMugAAV70AgL48AMDlPAAApbwAQJ08AEC8PACAODwAACk8AABVvACAOb0AQEW9AEClvADwrz0AwLU9AADKOwDAIz0AQBE9AADAOQCAS7wAgHY8AFCkPQCQDj4AAPW7AEDyPAAgHL0AAC47AMDgvAAgEb0AMMY9AABlPAAAtLsAgBQ8AIAtPQBACD0AABk9ACBRPQDABD0AYDE9AAAZPAAAJL0AAMs8ACBHPQAAiDwAIFg9AKBiPQBAubwAgG08AACcOwBgID0AANu8AACOPAAAZbwAQM29AECDPQCgR70AgD68AKCGvQBA070AAM88AAAAAAAAUjsAYAA9AADguwAwpL0AAPA6AIC8vADAhr0AAFu8AAA+PQAA37wAgOg8AMAfvQAAQrsA4JU9AADAugBAhrwAcI69AACEPAAADLsAgIY8AABRvQDgQT0AwOm8AICjPAAAzjwAgKM8AICePAAA4zsA4Eo9AMBYPQDQqj0AgAK9AACfPAAA17sAIJ89AMDfvQCwCD4AQAW9AEBXPQBArTwA4AO9AKBxPQBAgrwAgHq8AAAJPQBwhT0AoII9AMCXPAAgND0A4KI9AIA/vAAAArsAgOA8ACBWPQCAfL0AACi8AICAPAAAC7wAgBE8AIAfvADArrwAkO09AADoOwBgA70AoNY9AMBgvQAAD7wAACU9AABUuwCAVrwAgBa8AKCJPQCAqjwAAPi7AADUPADAs7wAACq8AMA3vQDwsD0AgK48AKAYvQAwhj0AgFO9AADmuwCA5bwAwKM8AACpPABAtDw=","chunkHash":"9b8bcc26388af4feba57a962934fe91736205375b7ef98464ece590197844d70"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\ndef get_masked_nuclei_dataloader(root_dir, \n                                batch_size=8, \n                                shuffle=True, \n                                num_workers=4,\n                                transform=None,\n                                mask_transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                target_size=(80, 80, 80),\n                                load_volumes=True,\n                                sample_percent=100,  \n                                crop_size=(80, 80, 80),  \n                                mask_threshold=0,  \n                                min_masked_ratio=0.5,  \n                                scan_step=40,  \n                                pin_memory=False,  \n                                debug=False):\n    \"\"\"\n    Create a DataLoader for the nuclei dataset that only extracts subvolumes from masked areas.\n    \n    Args:\n        root_dir (str): Root directory of the nuclei dataset.\n        batch_size (int): Batch size for the DataLoader.\n        shuffle (bool): Whether to shuffle the dataset.\n        num_workers (int): Number of worker processes for data loading.\n        transform (callable, optional): Transform to be applied on the raw volumes.\n    #...\n```","range":{"startLineNumber":469,"startColumn":0,"endLineNumber":478,"endColumn":0},"embedding":"AACWPAAA8DsAoFw9AABgvQAgUb0AoCq9AADcuwDAOD0AoIa9AECuPABAlDwA4Ac9AMA4PQBAFb0AAF08AKAbPQAA7LoAAPy7ACAGvQBAkjwAwGw9AIDIPADAKj0AADS9AECzvAAAQDkAgOa8AIBFPADATD0AoAy9AMCnvQCAqbwAQKS8AMDgvABAxbwAAPu7AIDMPQDQAj4A4JC9AACeuwBAYT0AsCm+AICDvABAhj0A4EI9AIDQvAAA5zwAoJi9AKAmPQCgS70AgAe8AHCxPQCAKr0AAFW8AACouwBAFz0AAGC8AGBMPQAACjwAgLq8ACBEPQCQu70AAKe7AICMPABgKj0AACq7AAB1vQBgOr0AANe8AIA6vAAABD0AALe8AAA7vABgI70AoG09AKAbvQBAKL0AcKU9AJDqvQAAzLoAAJg7AABHPAAAUj0AgBU8ALCivQBgy70AwNe8AADeOwBgOr0AEIi9AGAAPQAAbrsAwDu9AKA9PQCACbwAwAE9AAAdPACAWb0AkLM9AMCkPAAARDsAAD08AECuPABAcL0AQPY8AAAzPAAAoTwAYE69AIB2vQCAnz0AAFk8ACBcvQDgfT0AgGa9AAD/PABAQL0AAAQ8AABYugCgP70AgAU8AECHvQAAUr0AABK7AACiuwDAi7wAgCS9AGDwPQAA+rwAgHk8AIAaPAAgpD0AQAa9AAAYPQDg4b0AwEy9AEDrvAAACrsAYCw9AIDivAAApz0AQF29AMCDPAAQqT0A4C09AOCNvQAAoDoAYBW9ANDYPQCAKrwA8Kk9ABDZvQAAwDsAgDQ8AACEOgCgBb0AQPO8AACUOgCApz0AACw7AIACvQBAurwAgJY8AIAavAAAF7wAAPa7AOCgPQAgjr0AwBG9ACB1vQAAJL0AIGc9AICqvADAXj0AgFO8AEAtvQDgIr0AIFO9AMADPQAgUb0AYBO9AACsvACAjLwAAJ48AMD+vACA/LwAQE+9AMAhPQAAmDwAQKC9AADUugBA/zwAwJQ8AOAFvQAABj0AACW8AOAMvQCQjz0AgJg8ANClPQCAAT0AgI+8AOATPQAAc7wAQLa8AAB1PAAAr7wAgOe8AADYuwDA0zwAAOq7AOAOPQDAwTwAALq7AAA/vAAAxzwAgJO8AIDOvAAAyLoAoAU9AKASPQAATz0AADY9AADBOwAgVz0AAKC8AICbPACAKbwAgCK9AGBwvQBgIT0AgP28ACAQvQAAgzsAACk8AIAhvABAdL0AwJ68ACCDvQCAyjwAYA89ACAjvQAA/DwAQNQ8AEA4vQAAgjwAgAW8AIAQvQCAKb0AAGa8AIDlPABQ2T0AAIE7AABcOwDAm70AoCy9AECNPQDQpb0AAAq7ACBkvQCAKzwAgOs8AMCzvADAL70AQJc8AED1PACAGjwAABg7AGBrPQCABj0AQLk8AAAQPQDAk7wAQKc8AHCIvQAgXL0AwMo8AIDVPACgDz0AwKU8AIAAvQDgTr0AAIs8AAD4uwAArDsAgGI8AICDvADArLwAAJ08AOA5vQBASL0AAMC4ALC+vQCAZ7wAAC08AICXvAAgU70AAGQ8AADIuwAArrsA4Ee9AICKPACA4bwAQAc9AMCxPACAorwAAI+8AABAugBAMr0AQEw9AADZuwAAJrwAwNs8AAAIvACAYzwAIDw9AACquwDAibwAAE47AECbPADA9zwAgB+9AAC6vQAAdjsAAPY7AIDEvAAAsz0AQA+9AOAHvQAgUr0AkM69AAArPADgd70AgA28AADNuwAAkrsAYI29AMCrPQCAHb0AgES8AGAqPQBAa70AAK87ACABvQBQ2b0AACw8AIBVPQDADz0AoBQ9AMCRPADA1LwAkJe9AACqOwDAlbwAAJm7AEAuPQCASDwAgNy8ANCMvQAA+TwAAIG8AICgvQAAFT0AkJs9AADsPAAAk7sAgJQ8AOAdPQBAYT0AgMU8AADRuwCQlz0AAP68AAAIvQDgJL0AIKi9AICsvACwyT0AQOw8AAB3vACgaD0AcLs9AMDYvACARrwAgK88AMD2vADgeD0A4BA9AECfPADQi70AYCS9AMBbPQBws70AgEi8AGAtPQBAprwAgFg8AAD3PAAAlTsAwKk8AIBBPQBAhrwAwLc8AGALvQAAMrwAAJ87AOAhPQBAij0AQEw9AIBMPABAh70AQDo9AMDUvACgTj0AwPA8AICUPAAAw7sAAK69ACBlPQCA+r0AIFc9AKAdvQBAwrwAAO68AMDyvABAxbwAANA6AKApPQDAyjwAABo7AIBPvADAEr0AAEq8AMDsPACAPzwAAK48ANCtvQDA7LwAIGE9AAC6PAAAvDsAwLI8AEDrvAAAg7sAwCY9AAArvQCA/jwAgHK8AMCyvACA57wAwL29AICoPABAVb0AIEQ9AICWPAAgGz0AWAm+AEDcPABAwLwAwG89ANCivQBQuz0AANy6AAAEPACAED0AADM8AOBaPQAAUL0A8Ie9AOB1PQAAAD0AgIY9AIBdvAAADjsAAEY9AADsuwBgXL0AYBa9AED5PAAAcDoAgP+8AACpvABAhbwAYI69AIASvABQlz0AqAs+AACguQDgEj0AMIw9ACDsvQBAgTwA4JU9AECcPACAPLwAACg8AIB5PADA7bwAAAA4AACwOwCALDwAAMG7AEAWvQAAhj0AAOg7AADWuwCgpL0AoGm9AIAjPABAlbwAgFE8AAD2uwDAXD0=","chunkHash":"461605ad3fe68fe31ac17ec63e0a05567c21115a8beb703df5a1e85505a477fd"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\ndef get_masked_nuclei_dataloader(root_dir, \n                                batch_size=8, \n                                shuffle=True, \n                                num_workers=4,\n                                transform=None,\n                                mask_transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                target_size=(80, 80, 80),\n                                load_volumes=True,\n                                sample_percent=100,  \n                                crop_size=(80, 80, 80),  \n                                mask_threshold=0,  \n                                min_masked_ratio=0.5,  \n                                scan_step=40,  \n                                pin_memory=False,  \n                                debug=False):\n    #...\n        mask_transform (callable, optional): Transform to be applied on the mask volumes.\n        sample_ids (list, optional): List of sample IDs to include.\n        class_csv_path (str, optional): Path to CSV file containing chromatin class information.\n        filter_by_class (int or list, optional): Class ID or list of class IDs to include.\n        ignore_unclassified (bool): Whether to ignore unclassified samples.\n    #...\n```","range":{"startLineNumber":478,"startColumn":0,"endLineNumber":483,"endColumn":0},"embedding":"AACkOgAAELoAoHE9AAD6uwAgF70AIJ+9AADROwCASjwAAMi9AADPOwCApzwAYBo9AACMPQAA6rwAgCQ8AADgPAAADrsAgDI8AOB+vQAgXz0AIDU9AAB0PQDA7TwAwMm8AMCQvADAp7wAANW8AADoOwDAmj0AwLG8APCyvQAA6rwAQHS9AAA9vAAAar0AAGS7AGAZPQAQuD0AgD69AEDhvAAAiD0AIPq9AAABPADgfj0AQOE8AAA2vADA0DwAQJa9AKBQPQCAD7wAQOe8AJC6PQCgSb0AgIc8AICVvABAjj0A4Cm9AAD2PABA2bwAAMG8AEBsPQAgo70AANs7AECtPACARzwAgOk8ABCcvQAARr0AwIi8AMDCvADgPz0AAFw7AEAovQBgGr0AAEI9AMD4vADAIb0AsLE9ANDQvQAAArwAAGA5AECtPACAYj0AACk8AIB8vQDQpb0AgEW9AIDsvACQrL0AID69AADuOwAA9TsAgJC9AOB1PQAAqrsAYFs9AICaPAAgc70A4Dk9AEC/PABgWj0AgCQ8AMAGPQDARb0AgCU8AIBVPACAWzwAEIC9AEBIvQDAuj0AQJo8ABC1vQBA9DwAANy6AABRPQAAw7sAgAa8AADoOwCQjb0AgMc8AFCsvQCQgb0AABE8AIBrvAAgGL0AYBC9ABDWPQAAKb0AwNs8AAAmuwAAZD0AIA+9AAAQPQAAn70AgHy9AMA3vQAALTwAoJk9AOAKvQBwjT0A4B29AAA+PABgQz0AQO48APCYvQAASLwAQBC9AAD3PQCAd7wAMJk9ACCgvQAAvLsAAGC5AADwOgCAZL0AAEy9AABgPADgvD0AALQ6AOAmvQCAbLwAQJY8AGAQPQAA4LkAAOU7AKBHPQDAibwAAE69AMCGvQDAOb0AgCA9AMDZvACAQj0AYAm9AIBwvQAAqbsAwFm9AIA9PQBgxL0AsIK9AIB+vAAABjsAgJQ8AICFvADQl70AAHG9AGBFPQDALz0AsIq9AACHPACApz0AgK08AIAtPAAAQLoAAPS7ACAkvQBwnj0AAEg8AKA6PQBAtDwAQA+9AMBjPQAAeDsAACi7AADQuwAAe70AAO07AIAEvQAA0LoAAFq7AMBQPQAA6zsAgA48AABqvACADTwAQKG8AKBxvQDA2jwAwPo8AOAOPQCgLT0AwP88AIBOPAAgeT0AAAG9AACNPAAAMDoAgM+8AJCxvQDAlDwAgBI8ACA1vQBAqjwAwJQ8AABCPACwjL0AgMm8AAB/vQDArDwAAOo7AGBWvQAA/zwAwMY8AIBEvACAvjwAAN87AABLvQCwwL0AALU8AMAbPQBgcj0AgDg8AIDCPADgj70A4GK9ADCdPQDAPb0AgIA8AIBkvQDA8rwAADQ8AABquwAgT70AgDK8AADAPABAirwAQIo8AMANPQAAPDsAADK7AEAQPQCAITwAALc8AECIvQAwt70AAP48AGAFPQBwkD0AYAs9AABhvAAQlr0AgMU8AADvOwAAHLsAAO47AIA+vAAA0DsAYC09AICYvQDQk70AAB47AICVvQCASrwAQGG9AEDgvABgJL0AALQ7AAAgvAAAPjwAIFy9AACZuwCgNb0AABk8AIBUPAAAVbwAAGA5AIAOvACgFL0AoGs9AAB4OwDgC70AAI08AACIOwAA4LkAoBU9AAD8uwAAvLsAAN47AKAWPQCAojwA4Ey9APCivQAAxDoAwEk9AKAmvQAQqj0AAD29ACAbvQBAmzwAIK29AAA2PADwjL0AgDS8AABxPAAAfDsA4CO9AAC3PAAA5LoAoDi9AECpPAAgv70AACo7AIAdvQBwh70AAAo8AEDXPAAAjjwAMIg9AADfPAAgAb0AoCq9AABqOwBAmbwAALM7AGAgPQAAYbwAQJC8AEAsvQCAmzwAgJy8AMBdvQAA1zwAgKg9AMAWPQCAHzwAAGo8AIBYvADA+jwAwN48AMCwvACwoD0AoAK9AADAuABAtL0AMJu9AEA+vQBwvj0AoGc9AIADvABglD0AgKQ9AOAIvQAAj7sAAA88AAANvABgHj0AAJ08AICuPAAAnr0AAHI7AEDvPABglL0AAFY7AIBQPAAA7LsAANA8ACA0PQAAMD0AgA09AGBOPQBApbwAgDs8ACBOvQAAabwAAAS8AIArPAAAoTsAQAo9AMCaPABwj70AIEo9AKAJvQBAXD0AAGQ8AAANPQAAaLwA8M29AAALPQAQ070AAGg9AADyvABgIr0AgE69AACAugCgAL0AgKc8AAB4PQAAWrsAYBk9AIA/vQAgV70AAEw7AID3PAAA4rsAAHM8ALCjvQCA1rwAIHQ9AADcPAAAMLwAgLS8AADQuwAADrwAgPQ8AKAXvQAASj0AYA69AAAGvACgG70AoKe9AAALPQAgUr0AwME8AKANPQDgeD0AWAy+AABIugAAKbwAoDc9ANCGvQBAbz0AAIA4AAA8PQAA1zwAAHy7AACUPQAgTr0AgIa9AHCsPQBALz0AgFc9AAA0PACASDwAoCs9AABaOwCAXr0AwOA8AABgOwAA+LoAABa9AECWvABA87wA0KS9AACVuwAwiT0AwBs+AADYOwAA+zwAELU9AMDSvQBAqLwAAEg9AIAMPABAgrwAABg6AACCOwDAC70AANi7AIBHPAAAUjsAAEI8AMDtvADgdT0AgHM8AECPPACgjL0AwCe9AACKPABAmbwAYBE9AIATvACABj0=","chunkHash":"b5b17989cfbc89a0432b99da63f30fe3b700602b082bd1cc7b6ee29e7a86930a"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\ndef get_masked_nuclei_dataloader(root_dir, \n                                batch_size=8, \n                                shuffle=True, \n                                num_workers=4,\n                                transform=None,\n                                mask_transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                target_size=(80, 80, 80),\n                                load_volumes=True,\n                                sample_percent=100,  \n                                crop_size=(80, 80, 80),  \n                                mask_threshold=0,  \n                                min_masked_ratio=0.5,  \n                                scan_step=40,  \n                                pin_memory=False,  \n                                debug=False):\n    #...\n        target_size (tuple): Target size for the volumes (depth, height, width) for deep learning models.\n        load_volumes (bool): Whether to load 3D volumes (True by default).\n        sample_percent (int): Percentage of samples to load per class (1-100).\n        crop_size (tuple): Size of each 3D cropped volume (depth, height, width).\n    #...\n```","range":{"startLineNumber":483,"startColumn":0,"endLineNumber":487,"endColumn":0},"embedding":"AMDDvAAAr7sAYH89AABauwCAPb0AoH69AIBVvACArDwAQMu9AAAQuwAANTwAACY9AAArPQDANb0AAHY7AIDyPAAAhbsAAFA7AJCAvQAA9DwAIDE9AABoPQDgUT0A4B+9AIAzPABAvbwAACS7AAACPADwzj0AALu8AMCNvQBAyLwAAIu9AECJvACAIL0AAMG8AOAcPQDgvT0AIDy9AMDSvABAkz0A+A6+AAAIugDgVj0AQJs8AIATvADAvTwA4JS9AIA1PQAAEzwAoA+9ABCjPQBAXb0AwPs8AABwOwDASz0AAOC5AADSPAAAmLsAgES8AGBiPQCwx70AAIi6AABIPABA9zwAADi6AJCSvQCgNb0AwJS8AMDUvAAA9jwAAA67AAApvQBgWr0AoHo9AACqvABAJr0AUKM9APDLvQDAgrwAgGQ8AMCOPACgFD0AgEY8AMCAvQDg1L0AYHK9AMDpvACAqb0AQDe9AACiuwAAVDsAoD+9AGBoPQAArbsA4D09AMDWPABwkb0AgHM9AABdPAAgBj0AgME8AED3PACgMr0AAIC6AIC9PACAFD0AEIq9AEDJvAAw3z0AgFw8ADCqvQDA+DwAAHO8AEAnPQAAu7wAAC08AECcPADglb0AAIo8ACCSvQBAM70AAPw6AIDbvAAAn7wAAAi9AODuPQBADL0AgNU8AEClPACA9TwAgPi8AAAwPQDwtb0AAHK9ALCDvQAAULsAUJk9AMD6vABwjD0AAGO9AICKPAAgLz0AALg8ABCqvQAAcjwAwBO9AADoPQDA7LwAQHM9APCpvQCAarwAADG8AACvuwBAZr0AYGO9AMDCPAAwsj0AgCQ8AGBXvQCAmLwAQIM8AGADPQAAxjsAgHk8AKCFPQAAHb0AwGq9AICEvQDwhL0AQEI9AEChvABgWz0AgGa9AADlvAAAMjsAYE69AIBDPQDwnr0AcIK9AAAGvQAAhjsAAOg6AIBBvABQhr0AANy8AEA5PQBgRT0AoG69AACoOwAAiz0AgLY8AADEOgAAIbwAAJg8ADCAvQBAnj0AACY8AAA4PQCA1DwAgKW8AKCCPQAARDwAADI7AAAMPAAgor0AACO8AEC1vAAA8DsAgCO8ACAiPQAAGzwAAKY8AOAevQAAPrsAALC8AMBEvQCA1jwAAJY8AEA0PQAgQD0AAFo9ACAEPQDgVj0AQCW9AABEOwAACrsAwAW9AGA3vQCAIDwAAP+7AGATvQBA2jwAwMc8AIBCPADAqr0AAOi8ANCZvQCAQzwAAG88AADPvACARz0AwO08AACgvAAAMjwAwIQ8AEBQvQCAlL0AAI07AMBkPQDQiT0AAHC6AIANPADwlr0AoCG9AMB+PQDAhb0AgJI8AEAlvQDA97wAANA8AABQOgBgXr0AALG7AAATPQAAhLwAAA47AADMPAAAjDsAALY7AOBJPQCAIbwAgA09AMBUvQBwi70AQLY8AMDpPADAgD0AgBo9AKAVvQDAQr0AoAk9AEC2PAAA4zsAAEg8AECcvAAAt7sA4Es9AOBpvQAwhb0AAHI7AMB2vQCAP7wAYD29AMCBvADgcb0AAHQ7AIAIvABAkTwAgHG9AAB2OwDgPL0AAAQ7AADePAAA2LwAgCy8AAAEvAAARLwAIHA9AABOuwAgQ70AwMU8AAAmPAAA7jsAgFU8AABQvACAETwAgBI8AAAmPQAA8DsAgEy9ALCsvQAAdLsAwEY9AIDwvACQiD0AQJ68AEDrvAAAXLsA0LS9AMChPAAgUb0AwOq8AADQOwCAUrwAwBS9AACxPAAAbLwAgAe9AEDdPADArr0AALG7AEDkvAAAab0AAAg8AIAjPQCAmjwAACs9ACBRPQDgJ70AwF69AADAuQBAkrwAAJc7AACYPAAAODoAAIq7AMBCvQBA2TwAQMW8AFCrvQAAvDsAIMc9AKA2PQAAFjsAAGI8AADZuwDAiTwAQK48AAAYugCgyD0AAJO7AAC4vABgwL0AkLO9AMBAvQDwzz0AQFY9AIDSvABghz0A8KU9ACACvQBAhLwAYAM9AIAovABALj0AAFE9AEC2PABApr0AAEa7AIDlPAAQm70AACq8AACxPAAAlzwAgKU8AKBUPQAAOD0AAP08AABQPQAAvLwAQK48AAA+vQAAWLwAANS6AGANPQCASD0AQBU9AACkOgDAqr0AIC89AOBBvQAAUT0AAPo7AMDXPADAiLwAEJS9AKATPQCQw70AkKE9AMAUvQDgRr0AMI29AACYugDAEL0A4BY9ABCNPQAArjsAABQ9AKBjvQCAHr0AgI28AGAHPQAAxbsAQK48AGCbvQDA+rwAoD89AIAyPAAAnjsAQLS8AACgvAAAqLsAgJg8AOAGvQDgMj0AwCK9AACYOwDA7bwAwJy9AIAmPQCAQL0AAEY8AAD/PACgSD0AUBW+AMDhPAAAwLoAYE49AIBivQCgbz0AAE28AIA7PAAABzwAAEA6AOBuPQAAB70AgGy9AHCLPQAAOj0A4Fg9AADQOQCAoTwAgLs8AABEPAAAYL0AAF88AICWPAAATrwAwKC8AICwvAAApbwAkNK9AAASOwCwlT0A6BA+AABiOwCA0jwA8JI9AJDCvQCgOr0AAFI9AEA/PQAAa7wAAB48AIA1PABA77wAAP+7AMCVPAAAfTwAQCA9AADgvAAgZz0AAM47AABFPACQlb0AwCS9AIBiPADAgbwA4EE9AADEvACAPD0=","chunkHash":"b9dbb7d6f2b55de17377ef0e3e7b6ec8babd04f26198d0e7c96de3b5ec868f44"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\ndef get_masked_nuclei_dataloader(root_dir, \n                                batch_size=8, \n                                shuffle=True, \n                                num_workers=4,\n                                transform=None,\n                                mask_transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                target_size=(80, 80, 80),\n                                load_volumes=True,\n                                sample_percent=100,  \n                                crop_size=(80, 80, 80),  \n                                mask_threshold=0,  \n                                min_masked_ratio=0.5,  \n                                scan_step=40,  \n                                pin_memory=False,  \n                                debug=False):\n    #...\n        mask_threshold (float): Threshold for mask values to be considered \"masked\".\n        min_masked_ratio (float): Minimum ratio of masked voxels in a subvolume (0-1).\n        scan_step (int): Step size for scanning potential crop locations.\n        pin_memory (bool): Whether to use pinned memory for faster CUDA transfers.\n        debug (bool): Whether to print debug statements during processing.\n        \n    Returns:\n    #...\n```","range":{"startLineNumber":487,"startColumn":0,"endLineNumber":494,"endColumn":0},"embedding":"AMCfvAAAo7sAAGE9AAB4OwDALr0AwFm9AAD4OwAAxDwA4Ke9AAAvPAAANDwAgFE9AOA4PQDgEL0AQII8AMADPQCANrwAgEE8AHCGvQCADT0AAEI9APCBPQDgOj0AYB29AIA5vAAAlbwAgJK8AIAzvACArz0AgJy8ADC6vQDAA70AwH+9AACkvAAgbr0AgAu8AOA/PQBQrT0AgF29AIDdvACAiD0AqAu+AABEuwAAWT0AQMA8AABrvAAAzDsAEK69AAAPPQCAOLwAgOe8ADCuPQDgU70AQDQ9AMChvADgLT0AAFa7AIDiPAAAADsAAPS8AKBwPQCgr70AAOC6AIB0PADAOT0AAIg6AGBlvQDAcL0AwIS8ACAtvQDA3jwAgJs8AIAAvQCAMr0A4Go9AIDPvACA9rwAQKg9AFDKvQAA9DsAgGM8AADUPADgaj0AAE48ACCHvQAQ3r0A4HG9AKAGvQCQqb0AYEy9AAAEOwAA4TsA4Bu9AICMPQAA/DoAIAI9AABIPAAAer0AgGk9AAD3OwBAJD0AANg6AEDTPABAgb0AQNE8AMAJPQDA9DwAAF29AMD0vACoAj4AgLk8AJCSvQCA5zwAANi7AGBPPQCAO7wAAPu7AABKPADgkb0AAJA8APCQvQBgV70AAJQ6AIC2vABACr0AgOu8AODrPQCAMb0AwBE9AIBDPACgCT0AQIy8AGA1PQCAsr0A8JO9AGAuvQCAlzwAYF49AACQvAAAbT0A4FS9AIB5PADgZT0AANQ8AKCJvQAApLoAoA29ANDyPQCAX7wAkJg9AACqvQAA/TsAALo7AACluwBggr0A4EC9AAClPACgvT0AAAA5AEALvQCgFr0AAKg6AMApPQAAKLsAgHQ8AKB2PQAgFr0AgH69AGB2vQDATr0AoG49AID0vADA/jwAgGi9AIC7vAAAL7wAQGC9AGAmPQBwq70AYHq9AADLvAAAnDoAAOw8AABcuwCAc70AIEC9AEA6PQDAOD0AkJa9AIBLPADQoz0AAN08AAAhvAAA8DkAwJg8AECGvQCQiz0AABA6AGAvPQBAnTwAIB69AKBJPQCASTwAACc8AAAOPABApr0AgDC8AEDAvAAAhTwAwIi8AMAbPQCAqjwAAO87AED3vAAAgDoAAHu8AIAfvQBgIz0AAK08AOAaPQCACz0AgGA9AADDOwCQjD0AAD68AIBgPAAAkLoAgNe8AGBivQCAdTwAgBa8AAAsvQCA6DwAAEQ8AECwPAAgi70AgFm8AJCWvQCAJzwAAOC6AIAOvQDgHz0AYBc9AIBMvACASDwAgBQ8AOAsvQBgb70AAAo7AMADPQAAPz0AAAA5AIA+PAAwgr0AwGC9AEByPQCgcr0AwKk8AIAOvQAAsbwAAFM8AICFvADAeb0AgIq8AEC5PACACDwAgGk8AEApPQCAKbwAgKw8AID2PAAACrsA4E49AMB8vQBQir0AQNs8AGAHPQCQlj0AgF89AEDpvADQgr0AgAA9AMCtPACAGjwAAN07AIDVvAAArjsAoCE9AIDFvABglr0AAPC7AICkvQCAM7wAQIu8AEDKvADAbr0AgHa8AMCJvACAPDwAsIS9AIA6PACA67wAAOS7AMCMPABAJ70AAO+7AABoOgAAjrwAQBQ9AAAbPACgdb0AAGc8AABjPACAdTwAwKo8AAC8ugCAhzwAANs7ACAxPQAAFrsAANG8ADCtvQAAUrsAgBw9AGBPvQAAmz0AAD29AED5vACAMDwAMKy9AIDSPADgKb0AAPC7AABcPABAlrwAIBq9AECiPAAAUrwA4BK9AAAquwBAl70AQKi8AIAfvQAAhL0AAEM8AMAmPQAAkjwAABU9AAA6PQDA4LwAwCO9AIBePAAA/LoAAKA5AMAaPQAAl7sAAP+7AKAevQCAsDwAgES8APCMvQCApTwAoKs9AIAzPQAA5TsAAE08AAB6uwAABT0AgNE8AADzuwDQvz0AwAa9AMDHvAAgfr0AUKq9AMBNvQAAxj0AIFc9AMCNvADgfD0AYLU9AAA3vQAARrwAoAY9AAAgOwBgHz0AMIA9AKARPQAwr70AQNO8AMAKPQDgqL0AAOK7AAC4PAAArDsAAAI9AGAXPQBAFD0AwNQ8AEB3PQCAk7wAgKo8AGBuvQAAv7wAwIm8AGAjPQAAyjwAABo9AIACPQDgd70AADw9AMBXvQBAJD0AAD28AKBePQBAw7wAENC9AGBBPQAQ7b0AIG49AMDyvABA6LwAcJK9AAD3OwBgJr0AYCk9AMA5PQCAKjwAIAo9AGBjvQCgAr0AQIm8AMDXPAAAcDsAgBc9AJCCvQCAFL0AoEM9AIARPAAA/zsAQO28AMDvvAAA+bsAgEE8ACA0vQBgTz0AgDm8AAAHvAAAfrwA0LO9AMApPQDAEr0AIBA9AMAXPQBALz0AqAu+AGAlPQAAaLoAIAM9AGAvvQDAcz0AYB+9AMCzPADA7DwAABa7AEByPQDARr0AQHa9AKCNPQAQgz0A4FQ9AACIOwBgAj0AADw9AAAkOwBwib0AQK08AICZPAAA9zsAQOW8AABEvADA7bwAcJq9AAAsPADQsz0AABk+AECtPADgOz0AAHo9AFDbvQAAG70AgGk9AECqPABAh7wAAI87AECEPACgCr0AAGA7AEC+PAAAiDsAANQ8AACdvADAiT0AAPw6AIBCPAAglb0AABu9AECNPABA97wAAGk9AAAAuABAIT0=","chunkHash":"f710e37aa9b4963c5b10e815b31a95003facb2e59f9dd9f063b06011b568bdd3"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\ndef get_masked_nuclei_dataloader(root_dir, \n                                batch_size=8, \n                                shuffle=True, \n                                num_workers=4,\n                                transform=None,\n                                mask_transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                target_size=(80, 80, 80),\n                                load_volumes=True,\n                                sample_percent=100,  \n                                crop_size=(80, 80, 80),  \n                                mask_threshold=0,  \n                                min_masked_ratio=0.5,  \n                                scan_step=40,  \n                                pin_memory=False,  \n                                debug=False):\n    #...\n        DataLoader: DataLoader for the nuclei dataset.\n    \"\"\"\n    dataset = MaskedNucleiDataset(\n        root_dir=root_dir,\n        transform=transform,\n        mask_transform=mask_transform,\n        sample_ids=sample_ids,\n        class_csv_path=class_csv_path,\n        filter_by_class=filter_by_class,\n        ignore_unclassified=ignore_unclassified,\n        load_volumes=load_volumes,\n        #...\n```","range":{"startLineNumber":494,"startColumn":0,"endLineNumber":505,"endColumn":0},"embedding":"AADgOgAACrsA4Bo9AMDVvAAAHL0AAA69AAAjvAAgMj0AMKy9AMDZPAAA/TsAQM88ANCLPQCAcb0AADg8AMDYPAAA8DkAACY7AKC9vQCAOz0AAEI9ACBrPQCgIj0A4Cy9AADvuwAAwDsAAL+8AIABvAAgnj0AAFC8ADDIvQAACrwA4G+9ACAMvQDAZb0AgAs8AMCUPQDQnz0AwPa8AABzvACgjj0A8Bi+AAASuwBgRz0AgH08AEAhvQCA+TwAcNS9ABCIPQCAfbwAAFS7AEC6PQAgQb0AADI8AECtvADgVD0AANA5AKBSPQCgFb0AwD69AOCBPQBgl70AwIu8AICIPADAFD0AAPE7AFCMvQBgAr0AIAC9AGAavQBAlDwAQIq8AAAYvABA5bwAgG49AEDJvABAmbwAALE9APDVvQAANLwAAAA8AACTPABgLT0AAAY7AGBTvQBg1r0AQEm9AMCsvABwhr0AwHC9AACAOAAAzLoAIEm9AMBXPQAABLwAoDw9AACMOgDgdr0AUL49AMD4PAAAEj0AgLE8AAC8OwCgB70AgKS8AIBqPAAAwTsAMIi9AIB1vQDAxz0AQJM8APCIvQBAET0AAIW8AGA7PQAAeDoAADE8AABgOwAgJr0AAIO7ACByvQAAUL0AgE08AADsvADAy7wAwN68APDoPQBgDr0AgD88AEC2vABAOj0AIEi9AIAOPADQor0AgF69AADSvAAAtDsAsJg9AIAivQAgdj0AYBy9AICIPAAgeD0A4EM9AAC3vQAAIDoAwPW8ABD0PQCAeLwAwKU9AKCRvQAA9LoAQMg8AIAMPAAAdr0AYDu9AAAkuwDgtj0AAIM7ACATvQCAyrwAgEA8AMCxPABAqbwAAPs7AJCwPQDgZL0AQHG9AGBLvQCgUL0AoC09AABpvADgOT0AgFS9AOBTvQAABbwAYFm9AMBIPQDAlL0AYEW9AADSvAAAJrwAwJY8AMCwvACgLL0A8Ia9AEAvPQBAmTwA8Je9AAAaOwDQiT0AANE8AIAivAAA/DsAAG67AABBvQDwlz0AAMU7AMBZPQDA+TwA4A29AAB5PQAAtbsAgEa8AIAAvAAAP70AIFG9AAC9vAAAODwAAMC6AEBPPQAAgzwAAMI7AIDhvAAA/jwAgEa8AMAdvQCAZjwAAPU7AAD6PADgbD0AACg9AECvPAAgaD0AgDu8AAAoOwAAdLwAgHa8AECWvQAAHDwAAJm8AEBbvQDA0DwAgCQ8AAC0OwAwm70AAKS8AMB9vQAAGDwAwKs8AGAtvQAA6zwAAGQ7AMDDvAAArTsAgG48AAAsvQCAc70AgBU8AMA/PQCAjz0AAIk7AAAAAABAjL0AYG69AECHPQCAbr0AAPo8AOBgvQCAFLwAAKM8AACDvADgW70AACC6AABVPAAA3rsAAH48AICoPAAAjLsAAGo8AOBJPQAAZzwAwIQ8AGBevQDAkb0AwBg9AADzOwDAjT0AIDI9AMDtvACgf70AAOw8AAAvPAAAQzwAgAM8AEDLvACAVrwAwOk8AGBwvQBgWb0AgCk8AICyvQAAoLsAAFS7AIDJvADgm70AwKg8AAD+uwBAtLwAkJ29AAB7PAAgTL0AAC68AADPOwAA+LwAAGS7AACJOwAAmrwAYDY9AACHOwCANL0AAK47AACGuwCAVzwAwO88AADjOwAAKDsAAK48AGBpPQCgMj0AYGG9AFCFvQCArLwAQEE9AKCZvQCwiD0AYFW9AIABvQCAJ7wA4JW9AEDHPABAXb0AQKK8AICzPACACLwAIC69AIDuPAAA87wAYCy9AMD8PADwur0AwMG8AEASvQDAx70AwJk8AIB7PAAAxTwAUIU9AIB0PAAgHr0A4De9AADvPAAA9bwAgIM8AICAPAAA2DsAALm8ANCYvQBAWj0AgAe9ACBavQAA1jwAAMw9AIAUPQBApbwAAAY8AADQOgDA+zwAgPw8AACHvACgjz0AgAq9AEDavACgir0A4Ke9AMAlvQBwvz0AYF49AOADvQAALD0AwJE9AMCIvAAABjsAADI8AADBuwDgTz0AQBI9AAAbPQDArL0AgIS8AEAqPQCwsr0AAJm7AAB8PAAA7DoAQKs8AAArPQDAJz0AQLs8AJCfPQCAgbwAwNs8AOANvQCASrwAAIc8AGB9PQDAIj0AQMc8AIBAPACgb70AYAY9AEDbvACgUj0AwIs8ACA8PQAAfLsA8Lu9ACBaPQBQ470AoHo9AIAxvABgML0AgCG9AICqvAAgCr0AIBE9AGBzPQAAiLoAAOk8AMD1vAAAmbwAgIK8AOADPQAAVjwAQKM8AKBevQAAkLwAIEU9AIAdvAAA2DoAAF28AIDqvAAAqLsA4Bc9AKAvvQDAJT0AAIO8AIAUvAAgFL0AQMO9AGADPQBgeb0A4CQ9AIDwPABAjz0AWAm+AIBJPAAArLoAIAU9ACCVvQAwjj0AAJO7AIA2PQCgHD0AAAm8ACAdPQAgMr0AQIm9AIBePQCA9TwAoBI9AAD3uwAAxzsAoEM9AADVuwBATr0AgL88AID0PAAAwLgAIAq9AECovAAAyLwAAJS9AADFvADQjD0AgAA+AABgOwCANjwAALA9AFDRvQAASDsAcI89ACAAPQCAfLwAAC28AAD9OwAAdL0AAOq8AABeOwAARTwAAAg8AIAXvQCgQD0AQNk8AABhvACAqr0AQDW9AACgOwAAOLwAQKc8AAAIvAAgUj0=","chunkHash":"3c98c61463a1a47680aff989c2c0761b554d080306a166b44601e13da339c807"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\ndef get_masked_nuclei_dataloader(root_dir, \n                                batch_size=8, \n                                shuffle=True, \n                                num_workers=4,\n                                transform=None,\n                                mask_transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                target_size=(80, 80, 80),\n                                load_volumes=True,\n                                sample_percent=100,  \n                                crop_size=(80, 80, 80),  \n                                mask_threshold=0,  \n                                min_masked_ratio=0.5,  \n                                scan_step=40,  \n                                pin_memory=False,  \n                                debug=False):\n    #...\n        crop_size=crop_size,\n        target_size=target_size,\n        sample_percent=sample_percent,\n        mask_threshold=mask_threshold,\n        min_masked_ratio=min_masked_ratio,\n        scan_step=scan_step,\n        debug=debug\n    )\n    \n    dataloader = DataLoader(\n        dataset,\n        batch_size=batch_size,\n        shuffle=shuffle,\n        num_workers=num_workers,\n        collate_fn=custom_collate_fn,\n        #...\n```","range":{"startLineNumber":505,"startColumn":0,"endLineNumber":520,"endColumn":0},"embedding":"AAAYOwAAkrsAcIA9AADRuwCgKb0AYDK9AABCuwCAZzwAELa9AIBdPAAAyzsAYDc9AMBwPQCAKb0AAOI7AAAoPAAAETwAAJQ8AMCdvQDAYz0A4GU9AECBPQCgSz0AQBW9AACpuwBA3bwAAAW8AACUugCgqj0AwMi8AEClvQAAu7wAwDW9AECfvAAAbr0AwLG8AABbPQBQqz0AQCi9AMDzvACAeT0AKBy+AAClOwDgVT0AQP88AEDxvABA7jwAIJi9AEBVPQAADLsAAKW8AJC/PQDAS70AYC49AADiuwCgRj0AQJ28AIDrPAAASrsAICq9ABCUPQBAi70AAD67AICXPADAtTwAANi7AHCcvQBAQL0AAM68AMDEvABA7jwAQIe8AIDhvABAD70AwHo9AMDNvAAgC70AYLw9ALCyvQAAaLsAAM47AKALPQCgMj0AAO27ACByvQCgxb0AYIO9AIDNvABAkL0AoIC9AAAKOwAAvjsA4DC9AMB6PQAAgDoAADA9AACFPAAwk70AUIE9AAC1PABAZz0AgBo8AMCkPABAN70AAGi6AAAGOwAAEjwAgGa9AEAEvQAA1T0AAMC5AMCPvQBAhzwAAHC8ACBhPQAAQbwAAEc8AAB+OwCgXr0AAGg8AACDvQAALL0AANC5AOAvvQBAsrwAwNW8AEDdPQAAM70AwMA8AICHvADgEz0AgA29ACAqPQAwtb0AYGu9AIBNvQAAujsAoHI9AAApvQDAbD0AoEa9AIAcPAAAcz0A4EM9AICsvQAArTsA4DW9ABDQPQCA9bwAYJY9ADCovQAAwLoAgA48AAC1uwCgY70A4ES9AIAqPABQqT0AAEc8AMC/vACAmbwAAGU8ACABPQAADzwAAIg7AIBfPQCA3rwAAFK9AJCcvQDAIr0AYD49ACAAvQBAKD0AwEi9AMAGvQAASLsA4E69AABaPQBwnL0AUIO9AMDIvABAg7wAQK48AICzvACgXb0AgI+9AOAZPQDADj0A4GS9AAD+OwAQkj0AwOY8AAARPAAAqrwAADg8AGCIvQAgoz0AAOg6AIATPQDAlDwAYB29AJCCPQAA5rsAAAy7AABwOgAAcL0AAPi8AACdvAAAdTwAALa8AIArPQCAFTwAAOY7AAB+vAAARTwAgAq8AIAGvQCgHz0AAH08AEAHPQBgiD0AIB49AKAaPQAwiT0A4BG9AABgOgAAFTwAAPO8ABCtvQCAhzwAgEm8ACBKvQDARD0AgAE8AAC7PADQj70AwMa8AOCevQCAajwAgIY8AGBSvQDgKj0AQNE8AEDpvACAHTwAgGA8AGAtvQAggb0AANQ7AMBBPQDQjz0AABI7AAC0ugBAo70A4Ha9ADCRPQDgO70AALw7AMB4vQBAobwAgGc8AABEvACAWb0AAKc7AACxPACAjLwAgFs8AECQPAAAsbsAAGU8AAA2PQAA8zsAAPU8AGBSvQBwiL0AgJM8AAD+PABAij0AIEo9AEAyvQBwhr0AgEo8AMCDPACAkzwAALC6AACfvAAA4LsAQJk8AIBHvQAASL0AALC6AHC0vQAASDoAgHy8AECyvACgaL0AAOA5AADKuwAAljsAQJi9AABdPACgV70AAFg6AIDhPADAsrwAALm8AAAUvAAA77sAIFA9AAAOvAAgVr0AQLk8AABDPAAASzwAYAA9AACfOwAANDsAgHs8AKAtPQAARzwAoGe9AECXvQAAJ7wAYCo9ANCWvQDQhj0A4Fe9AMDnvACAkDwAUJG9AECOPADQib0AADK8AABPPAAAI7wAQOG8AIC8PAAAzLoAAGe8AIDyPAAAyb0AAJe8AACkvABgj70AgA48AICbPADgBT0AgHA9AABcPACAFb0A4BK9AEDUPACABrwAgDo8AACLOwAA1LsAAN+7AJCEvQCgKj0AwJa8ACBVvQAAyDwA0Lw9AMDsPAAAKDsAgDI8AIB1vADAhTwAQAM9AIA7vAAQqj0AgB28AKAovQBglb0AMJy9AEBDvQBgrz0A4Ik9AEChvABgeT0AAKc9AECgvAAA1DoAQMg8AAAguQAgez0A4E09AACwPABAur0AAKO7AAD+PAAAs70AAFg7AICNPACAADwAwKI8AKBDPQAAYT0AAMc8ADCOPQAA0LkAgDQ8ACApvQAAuLwAQIk8ACBjPQBAAz0AgHQ8AADDPABAjL0AIDQ9AEDtvACAbz0AAMi6AEDDPAAAXLwAUPK9AIAQPQBwy70AkIQ9AMDEvAAAC70AIEu9AAAPvABgLr0AIDQ9AMBoPQCAH7wAwLI8AOBHvQAgKr0AgIi8AMAmPQAA8LoAQKo8AKBKvQAgBb0AYF49AICPPAAAObwAQOe8AIBhvAAAGLwAwOc8AID9vACATT0AgN68AIAlPABALL0AsJG9AIAcPQBAO70AQDg9AIAlPQDAYz0A8Aq+AACyOwCAhLwAYEs9AMB1vQDQlj0AADA6AACvPABA+jwAAFi7AIB7PQCAIL0AAI+9AKBwPQDwgj0AAD49AABBPACAKzwAgBE9AADAuQAgO70AQIU8AIDZPAAA67sAQEq9AACmvAAAu7wA0KK9AMCPvACgfz0AwBw+AICBPAAAUDwAwJ49AMCzvQBAyLwA0IU9AEBDPQBAj7wAAGa8AACNOwDALb0AAFi6AIBZPAAATzwAgHw8AAApvQAgXz0AwL48AAC3OwDAn70AEJC9AADEOwBAp7wAgAc9AABjvAAgbj0=","chunkHash":"4eacbcbccfe7d40de9f61dfab8959e4b04c58432b01db92bf1cce28ef6942d0a"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\n#...\ndef get_masked_nuclei_dataloader(root_dir, \n                                batch_size=8, \n                                shuffle=True, \n                                num_workers=4,\n                                transform=None,\n                                mask_transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                target_size=(80, 80, 80),\n                                load_volumes=True,\n                                sample_percent=100,  \n                                crop_size=(80, 80, 80),  \n                                mask_threshold=0,  \n                                min_masked_ratio=0.5,  \n                                scan_step=40,  \n                                pin_memory=False,  \n                                debug=False):\n    #...\n        pin_memory=pin_memory,\n        persistent_workers=True if num_workers > 0 else False\n    )\n    \n    \n    dataloader.collate_fn = custom_collate_fn\n    \n    \n    return dataloader \n```","range":{"startLineNumber":520,"startColumn":0,"endLineNumber":528,"endColumn":21},"embedding":"AAD4OwAASLoAkKQ9AAC+OwCAFL0AYCm9AAA6OwAA/LsAAMu9AIAtPAAASLsAwHA9AIBVPQDAKb0AAIS6AADXOwAA0TwAALg6ACAkvQCgVj0AoB89AAB/PQDAcz0AgM68AMCFvADAwbwAQKG8AIAHPADAnT0A4BK9AICpvQDA/rwAYAq9AABIvABAML0AQMC8AMBTPQDQtz0AgFm9AOAIvQDAaT0A0Bq+AADOOwCAWz0AgMw8AOATvQDA/jwAoH69ACBZPQDAqrwAABW8AHDKPQAAQL0AID49AABIOwDAKz0AAHK8AMCzPAAAILkA4Be9AFCCPQDQmb0AAGY7AADROwAAfTwAAM67APCSvQBgS70AwNG8AMDIvABAMD0AAF28AEBDvQAAKr0AYD89AKAMvQCgK70AcKU9AGDHvQAAYDkAAHA6AKAdPQCAbT0AgGm8AOBnvQAw0L0AgGu9AAA1vACAtb0AwDu9AIA4PADA0jwAgPi8ACBoPQAAVjsAoB89AICMPAAwh70AoEQ9AICEPADwhT0AABy7AICnPAAgUb0AgKY8AIBhPACAtTwAEJC9AEBPvQDQ7D0AAGi7AECKvQCATjwAAGu8AABqPQAAHLwAgKY8AAAzPAAAhr0AQM88AGCHvQCAdb0AAEc8ACAPvQCAmLwAQAW9AKDXPQDACr0AQOg8AIBuvABgAD0AgPa8AMA1PQCgir0AoGK9AGAhvQCAPDwA4Hc9AKBPvQCQgT0AwEK9AABEPADwgj0AoAw9AFCPvQDAhzwAQPm8ALCvPQBA/LwA0IM9AICZvQAA7LsAABS8AADJOwDQkr0AIGm9AMC+PAAwqj0AgE08AACLvACAebwAgFE8AADUPAAAAzwAgB88AIB0PQCAN7wAYGy9AHCDvQCANL0AgGA9AAD2vABAnTwAwDm9AIAGvQAApDoAwEy9AKA9PQAQs70AIHG9AEDevAAAOLwAQNQ8AACYvADglr0AEJK9AGAfPQDgJD0AoGq9AICvPADAlT0AgPM8AIAlPABAk7wAAIQ8AHCdvQAwoT0AAGQ7AKAmPQCAQjwAwK28AGB2PQAAJDsAwMo8AAD7OwDAT70AAEi8AEAHvQAANjwAgOW8AIAePQAAqzwAQL88AIClvAAA1DsAAMm8AMAovQCALj0AAGY8AMCePABgmj0AIEE9AADPPACAlz0AwA+9AADzOwCAfjwAADe9AGCtvQBAqjwAAMg7AOB4vQAAJj0AAEI8AIBFPADQkL0AYAa9AECjvQDA5jwAQMs8ACBivQBAJD0AYFc9AEDQvAAAkLsAAIQ6AMDCvACgT70AAAE8AIADPQBwgz0AAJi6AIAvPACwgL0AcJ69AHCLPQAgOL0AABg8AJCJvQCAuLwAgIY8AADluwBgRb0AALA6AIBPPADA6LwAANQ6AMChPAAAkDoAQPU8AIA3PQAANjsA4CE9AKAjvQBgjL0AgDY8AMC8PABAeD0A4EQ9AKBpvQDAiL0AgJI8AAD/OwCAbTwAAA+8AIBvvAAAeLsAACw7AMA9vQDggL0AgE28AFCnvQAAg7sAQIq8AAC4vADgeL0AAKQ7AADouwCAHDwAkJC9AAAouwDgc70AAGi6AMC4PABgB70AQAy9AIDmvAAA8LsAgG49AAA/vACgI70AAII8AAAkuwAAIDwAwOU8AAAdPAAAUrsAwJE8AGAOPQCARzwAwIy8AACevQAAQjsAwCg9AOCAvQDQpD0A4B+9AGAuvQCAlTwAIHG9AECTPAAAdr0AAH+8AMC4PADAybwAwKy8ACAYPQAAfrsAQOO8AEDvPABgtb0AQIO8AMCKvADAlr0AAJA7AMDpPACgIT0AIHE9AECsPABAI70A4Cm9AMDRPABAiLwAAGA8AEALPQAAtLsAACe8AOBTvQDA6jwAgHq8AABDvQCANjwAoJY9AAANPQAAVrsAANE8AACMuwCAdzwAgBk9AIBevAAwkj0AACq7AIDUvABgar0AwGi9AOA9vQBgqz0AwH09AABovABAhz0A8M89AKATvQAAg7sAAIE8AMCKPAAgjz0AID89AECQPACwmb0AAJw7AEDLPABwsL0AwLE8AIBKPAAAfTwAQIw8AMBAPQDAPj0AQPo8AKCXPQAALTwAgLA8AEDivABAx7wAAKE8AGBXPQAAMDwAAEw8AEDhPABgc70A4Ek9AACMvACAbT0AAKE7AGAZPQCA77wAINW9AEDUPABww70AYEo9AADYvADAML0AoBa9AIAKvABgHb0A4DM9AKBRPQBA6bwAQAM9AMCFvQDAQr0AgC28AAAjPQAAxTsAgNM8AGBKvQAgAb0AwJ89AIB0PAAAEbwAwBa9AACsuwAAkLwAAL48AEAivQDAdT0AQLq8AAATPAAA2bwAgHW9AIAgPQAACL0AYDU9ACBJPQCAFj0AcPm9AAC2OwAAmzsA8IU9AABxvQCwrj0AABk8AMCbPACA3DwAAJC7AKB3PQDAGL0AIHK9AHCCPQDwmT0A4FE9AAAUPACAcDwAwBM9AAD8OgAgN70AwJU8AIAaPQBAirwAAH+9AMDdvACA8LwAIGS9AABPvABgcD0A0DY+AABWPADA6zwAoLQ9AFCxvQCAYLwAgJA9AABGPQDAlrwAANO7AACsOwDgKb0AAFq7AIBSPAAATDsAAAw8AGAEvQAghD0AgDU8AAA9PAAAc70AUJ29AMCgPAAAwLwAYDM9AADcOwAAQj0=","chunkHash":"8bcfbd847f3a1198cf576e75c487a0c4867479ceef9bbeaeef7231bce51bfb75"},{"text":"File: `dataloader/temp/nuclei_dataloader_masked.py`\n```python\nimport os\nimport sys\nimport glob\nimport random\nimport numpy as np\nimport pandas as pd\nimport torch\nfrom torch.utils.data import Dataset, DataLoader\nfrom PIL import Image\nimport gc\nfrom tqdm import tqdm\nfrom scipy import ndimage\nfrom skimage.measure import label, regionprops\n\nclass MaskedNucleiDataset(Dataset):\n    #...\ndef custom_collate_fn(batch):\n    #...\ndef get_masked_nuclei_dataloader(root_dir, \n                                batch_size=8, \n                                shuffle=True, \n                                num_workers=4,\n                                transform=None,\n                                mask_transform=None,\n                                sample_ids=None,\n                                class_csv_path=None,\n                                filter_by_class=None,\n                                ignore_unclassified=True,\n                                target_size=(80, 80, 80),\n                                load_volumes=True,\n                                sample_percent=100,  \n                                crop_size=(80, 80, 80),  \n                                mask_threshold=0,  \n                                min_masked_ratio=0.5,  \n                                scan_step=40,  \n                                pin_memory=False,  \n                                debug=False):\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":468,"endColumn":45},"embedding":"AIBBvAAA4DkAwHI9AEAIvQDA47wAAI+8AAAPPAAAljsAAFi9AACQOQDAFz0AABw8AADqPAAgAL0AQNk8AIDyPAAAubsAoAw9ALCMvQCAVT0A4DI9AHCTPQCABT0AgGO9AABAugAAgLoAgCe8AABmPADAkD0AACC7AMDTvQAAYLkAsJG9AMDbvAAgbL0AAMc7ALCCPQCAnD0AAEy9AAAFvADgNj0AWAO+AACYuwCgTz0AAN87AKBtvQCATD0AoKm9AGBsPQAAnbsAgJw8ALCWPQBgkL0AAFo8AAAPvQDAjjwAQLu8AOBoPQCAUzwAoAq9AOCHPQAQlb0AwOg8AACoOwCAuDwAgNu8ABCTvQCAS70AgA68AABBvQAASbwAgEa8AGAEvQDgMb0AAC49AMDfvAAACrsAgM09ABCcvQCAhLwAAFS7AAACOwCASz0AwM48AMD4vADQvL0AsM69AABVvAAAyr0AoCO9AACDvADgGj0AAOu8AFCQPQAAQjsAIF89AAB+uwBQkL0AcK09AMCyPADAoTwAwKk8AIAUvAAAe7wAAOM8AIA9vADAjrwAQKS8ANCGvQBg1j0AgHU8AOBYvQAApDsAAPA6AMBJPQAAjbsAYBY9AACguQAAibsAAE08AEBdvQDA6LwAAKQ6AECqvAAASbwAQKK8AICdPQBgSL0AADI8AIA0vQAA1DwAEKW9AMAcPQAQrr0AEIi9AMAJvQAA1LoAQNk8AGBnvQAwgD0AAOm8AACpPABQgz0AwCw9AFCGvQDAy7wAYFq9AHDkPQCA0bwAUKQ9AIBivQCAJzwAgCY8AAAgOwBAB70AoFi9AACougAQrj0AwCQ9AAA8vACAYrwAAMA6AABSPACA6jwAAMW7AMCTPQAgNL0AwEy9AEBqvQBANb0AIGA9AAAovQBAoDwAgBK9AMBqvQAACLoAQB69ABCGPQAAwr0AIJ69AMBuvQDA8LwAAN67AKAUvQBgc70AMJS9AKBCPQBAxzwAsIu9AMBkPQCwhj0AoAA9AAAivADgIz0AQLs8AABovQCQhD0AQMQ8AICvPAAAobsAAO28ALCjPQAAkbwAAJ68AADVPACAUr0AwL28AIAhvQCAKTwAIFa9AJCEPQAAuLsAgCa8AACQOgCA0jwAwLy8ACAwvQBA5DwAwN08AEDqPADQsz0AYCo9AIA+PABAGD0AgLm8AAC7uwAAPDwAwCy9AGBLvQAAi7sAALO8AMAWvQAA7DoAgMe8AAARPQBAfb0AgJm8AFCbvQAAlLsAAAM8AIDpvADAfT0AAOU7AOBavQAA3jsAAIo7AADQvAAAXL0AAIa7ACA3PQBwlz0AwMy8AIA1vAAApL0AwDa9AMCAPQCAS70AwI+8AHCRvQBAEz0AwJm8AACHOwDgTr0AAH+8AABxPAAAZrsAAIS7AADAOwCAnzwAgJI8AACJPAAAjDwA4AI9ACA+vQDQkr0AAGk9AAAQOwDAKj0AwPU8AOBqvQAgYb0AgHY8AACfPACABzwAAM68AABpvADAubwAAF48AIBRvQDATr0AAMg6AJDOvQCAGLwAAG67AIBQvACAtr0AAKG7AAB4uwAA1rwAwH69AIBQvACgZr0AwNe8AECGPACAcr0AAJe7AMCZvAAAjbsAgB09AMCqPACgQL0AgKO8AABVPAAANrsAADI8AIAXPAAASrwAAKG7ABCmPQCAHzwAYE69AHCsvQAA8bsA4Fs9AEDOvQDAOj0AcIq9AIB0vAAA0TsAEK69AMDJPADgPb0AwMo8AKA6PQAAvLoAgDq9AEC+PAAA0DkAgFC9AIC9PACA0L0AwAu9AIAWPACA6r0AQM88AADOPADAGD0AYN49AAALPQBgAL0AwBS9ACBkPQAArbwAQP88AAAPvACAR7wAAK07AABtvQAA9DwAAAi8AIBgvQAAMT0AsIg9AAC+PAAAxrwAQJo8AAD0uwAA/TwAQJg8AKAIPQCgij0AANi8AAAbvADgW70AsKK9AEDUvACAZj0AgBk9AOADvQAAFj0AELs9AACWvAAA6jwAgDg8AIC0PABwhz0AkII9AAAnPAAglr0AQJ+8AGAePQBQl70AgFK8AACmPABgC70AABe8AABkPAAA1jwA4A09AKCXPQCAPDwAgKI8AAA4ugCA7bwAgCI9AJCePQCgXT0AYEU9AADCPAAwg70AgK08AADFvAAgMz0AgDE8AICiPAAAOrsAsMG9AMAaPQAAvb0AAF89AIAKvABAXr0AACe9AOA2vQDA3rwAwKA8AAAhPQAA4rwAgPk8AEAJvQDAAr0AoAa9AMCAPADAozwAAC49AOA0vQAAqLsA4Jc9AABkuwDA3jwAAJC8AAC5uwAALLwAYD09ACBtvQAAfzwAACG8AIDSvACAnbwAIG+9AMAKPQCgPb0AQO08AMDmPACgTj0AcOm9AEC/PACAxrwAYEQ9ADCYvQCwqz0AAMi6AMAUPQDA+DwAgAg8AMB7PQBAdL0AAG69AFCLPQDAYT0AoLY9AIBhPAAABjsAABM9AIBqvACgCb0AAOY8AADbPACAo7wAAMm8AOASPQDgP70AwJy8AADRuwCAYD0AoAk+AABYugAAlDoAwLo9AEDKvQAAs7wAwKg9AMBXPQDAnrwAAFi6AIBdPABggb0AACm8AIB3vACAYbwAgAs9AABBvABAqjwAAIA5AIDRPAAABrwAQFq9AABmOwAA9rwAwKg8AABsPADAaD0=","chunkHash":"095e82b010608d6e72c055edf027e3965d173ab0633d7da47a3aea42379bf988"}]},"file:///teamspace/studios/this_studio/dataloader/temp/test_deepgcn_compatibility.py":{"hash":"82b712b462452c3a01692da19772a1dc1cdc9b9e74d1fc3f970bbd37648097e5","entries":[{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef create_mock_deepgcn_model(in_channels=6, channels=64, out_channels=64):\n    #...\n    class MockDeepGCN(torch.nn.Module):\n        def __init__(self):\n            super().__init__()\n            self.conv1 = torch.nn.Conv2d(in_channels, channels, kernel_size=1)\n            self.pool = torch.nn.AdaptiveMaxPool2d(1)\n            self.fc = torch.nn.Linear(channels, out_channels)\n        #...\n```","range":{"startLineNumber":20,"startColumn":8,"endLineNumber":24,"endColumn":61},"embedding":"AADIuwBgbr0AAHY9AGA3vQAAL7wAwA+9AABcvAAAYzwAwC29AIADvQBA9zwAgPw8AMC+vABA4rwAgHI8AAAuPADABb0AAJQ8AIAdPQAAgjsAQOi8AGCpPQAAPzwAAAC9AICuvAAAbL0AQPe8AACjOwAAXj0A4Aq9AIBQPQDApLwAUL69AIAovABAKb0AAA67AADFOwCAhD0AIFe9AAB6PQDgAD0AcKe9AAAwOgDQhT0AgE+8AIC5PAAgIz0AgC48AECbPACAPbwAEKu9ACCePQAAkbwAgLS8AAA7vABAkD0AgBU8AACNvACAQLwAoBI9ABCVvQCwnb0AALK8AECEvQBgLr0AYAy9AAB9PAAA2TsAgCq8AEDCvADQs70AAPU7AMD7vACAurwAADW8AICIPADAtzwA8L49AIBpPACAg70AwLq8AGAfPQAAj7wAwIQ8AEAfvQBAcL0AAHC9AOAZvQAAqrsAgFS8AGB9PQAAkLoAoBO9AICZPABAmLwAwP+8AGAoPQBwu70AAIy7AACEOwAADjwAQDo9AMAEvQDgwD0AgOw8AEC/vAAALjsAgEy8AMAMvQDw5z0AgHs8AAB5vACAPbwAAIG7AAB0vACAfb0AIA09AMCsvADA3rwAQO48AMCEvQDATr0AoI89AJCovQCAGTwAABa8AIDPPQBAf70AILW9AOBpvQDA5jwAAFA8AIAoPQCAOzwAwCK9AIAfvQDgv70A8II9AEDWvAAAUTwAwBa9AAAMPAAgHT0AAOK7AABsvQCAoj0AwLW9AMCxPACAMr0AgGQ9AIB4vQBAnDwAAOu8AEDNvABgar0AADm9ALCBvQCgHj0AYIc9ANDzvQAAsDwAwF09AAABvACwnT0AgBK8AEDEPQBA470AAHo7ADCJvQDAtrwAkIU9AECaPQCABrwAgEo9AACtuwCA87wA8IC9ABDSvQBAZL0AAIW9AKApvQDgAT0AgAy8AADCvAAQkb0AAGW8AKAWPQAA6LwAwII8AAAgOwCAUTwAQL88AEB3PQBAw7wAgHQ8AOB/vQDAkj0AABi8AKAqPQCAs7wAgAg8APCJPQCARb0AoAa9ACBLPQCALL0AAA+9AABLPACgSr0AQJw8AABAPQBA6LwAQCs9AIDWvABgK70AgLi8AOCSvQAgc70AQNC8ACAePQAA7jwAYGU9AOATPQAAED0AwP68AADrOwAAjrsAsIW9AADxOwAA17sAgHQ8AEDdvACAQLwAICu9AAAEvABArb0AYAw9AAAouwAAsTsAAPo7AAB2uwCAbT0AAHy8AEDcvAAAqbwAgG88AMAQvQAAM70AQMs8AABAPACAWzwAoD09AMCZPAAQnb0AABE8AGAwPQAAXjwAIJ+9AAA6vQCAH7wAgKO8AAA0vACgHb0AgAc8AAD+uwAAILkAQCS9AAAzPACAAT0AAKQ8AOCqPQAASLoAsJ09AAAovQCATL0AAEA8AABGOwAgJj0AgFI9AEA+vQDAcb0AgC29AAALvABgOD0AALS6AICDPABAEr0AAJw8AACjvAAAYr0A4Go9AKAJvQAAZ7wAgNs8AEDwPABgIb0AgFS9ABCoPQBgAz0AkKy9AIDWPABAnjwAALO7AADmuwAACbwA4Eg9AACOuwBQmD0AMN09AABUuwCAyLwAYHM9AABUPABAojwAgFW8AACrPACAUb0AAIK7ALCfPQDgCD0AwJu9AIBbvADgWr0AgNu8AOBuvQDgPj0AYBg9AKCPvQCAGjwAADm8AABCPAAggL0AwJI8AICjvAAAQLwAQOS8AIAsvQDAiD0AAGS7AAB1PACAsb0AgAY8AGBfPQBAm7wAQHc9AMAwPQAAYDwAQLw8ALC+PQAAz7wAAMA5AIAqvQAAersAAKC8AECjPACAOTwAQM+8AADkugCAAj0AQBc9APCGvQDA1jwAUJU9AMCQvADAnDwAAHK8AADVOwDA5DwAoEm9AACVPADAAr0A4Gs9AMBzvQCAqTwAAJu9AEAevQDwhT0AABQ8AECWvAAAz7wAgPg8AECvvAAgSz0A4Ei9AADtOwCAbTwAAOe8AMBRvQCgpb0AAIE8AICZvABQjr0AgDC8AAA/PADAtDwAYDw9AMD2PAAA/rwAgIQ8AIBfPQAAGrwAQKm8AMAivQDAUj0AgCk9AIDtPAAAwT0AUIQ9AABdvABAlLwAwDk9AJCNvQAAjDoAQD69AAAjvAAgiL0AoAm9AGAhPQAAdrwAAC49AIAKPABgK70AQNm8AICDvACAIrwAQK08AABuOwAAXL0AQG09AMDBvABAQb0AYDm9AACAPABAyzwAgAc8AIDRPABA8bwAIDc9AMC/PAAgUr0AAGe8AABRPQAgLr0AYGu9ACB+vQCAFj0A4CO9AADcvABADb0AIDG9AAB3PADAf70AAPO7AOBXvQCAEz0AABy9APCUPQDgZD0A0MU9ABCDvQDAqT0AQNe9AKA5vQAA1zwAYAk9AKADPQDAmj0AwIM8AMC+PAAAlrsAgEE9AECMPAAAUrsA0JE9AIABvQAA4LwAcIk9AHDSPQAAeDsAYHO9AIDbPAAAbzwAgB28AADFuwAASD0AoEA+AEBKvQAACL0AQLi8AABOPQAAo70AgBI9AIAsPQCAYbwAAP88AMC1vACAcTwAgCc8AIBnvAAA1DwAQCq9AMC/vAAAWTwAgA88AABGPQAAtbwAAIe8AABGuwAAQLoAwA29AAD4vACwCT4=","chunkHash":"78e97b5f0ae5d96ff0fc18b05c30b112da10da0feaa8f9e9f1cb4e9530b877cd"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef create_mock_deepgcn_model(in_channels=6, channels=64, out_channels=64):\n    #...\n    class MockDeepGCN(torch.nn.Module):\n        #...\n        def forward(self, points, features):\n            \"\"\"\n            Args:\n                points: Point coordinates of shape [B, 3, N, 1]\n                features: Point features of shape [B, 6, N, 1]\n            \"\"\"\n            # Print shapes for verification\n            print(f\"Points shape: {points.shape}\")\n            print(f\"Features shape: {features.shape}\")\n            \n            # Simple forward pass to verify tensor dimensions\n            x = self.conv1(features)\n            x = self.pool(x)\n            x = x.view(x.size(0), -1)\n            x = self.fc(x)\n            return x, x  # Return two tensors like the real model\n    #...\n```","range":{"startLineNumber":26,"startColumn":8,"endLineNumber":41,"endColumn":65},"embedding":"AAAaPACAKr0AYHk9APCCvQAAaL0AcL69AMAOvQAAnLsAICC9AICRvACA5jwAoA09AADjvABADr0AAPE7AACqPACArLwAAAI9AKB7PQBAsTwAABu8AGDKPQCAZD0AQKm8AIA3vABAVr0AABG9AADeOwBQrD0AAKy7ABCOPQAAj7wAQMe9AECNvADANb0AwJ08AADHOwCgkD0AEIq9APCEPQDAtTwAgEi9AADSuwAAzzwAADm8AADluwDApjwAQJw8AMD/PAAAGD0AAJ29APDePQBA67wAgJ+8AIAcvABwhT0AAL08AIADvQAAvrwAADk9AEA1vQDw570AAOe8AEAzvQDgMr0AQE69AADcOwCAWTwAAFq8AIB2vACQhb0AwIs8AIC0vADAurwAALA8AEC3PAAAhTwAcMA9AADDOwCgmr0AgM28AMC4PAAAJjsAACE8AEBSvQBAFr0AQNy8AHCJvQAAqDoAAJ27AOAvPQAATbwAoBO9AOABPQCAQrwAAPW7AEDEPABAmr0AAK87AADROwAAPDsAwDU9AIDevABgyz0AAP88AABRvADgTD0AwNk8AKAKvQDQ5j0AgKc8AIAbPAAAiDwAAJA6AADpvABAT70A4Bo9AADRvAAAaLoAgJ88AAAwvQCACr0AgJU9AMCevQCAZrwAgFK8ADDnPQBwiL0A4Hu9AIAPvQDA/jwAAL67AEBgPQCAdzwAgGy9AKBCvQCgaL0AYDI9AECfvAAAHjsAALC6AECUPACAyjwAAN+8AKBfvQAAoj0AUN29AIC2PAAA8bwAUKw9ACBvvQCAsjwAAJs7AABCvQAgUL0AoGu9AMBQvQAAqDwAwDw9ANCwvQBAGz0AADw8AAA4uwDwuD0AgLO8AAB3PQBw4L0AAFg7AOChvQDwt70AALk8AMDvPAAAOLwAQMM9AABKvADA8LwAwI+9AGAXvgCACb0AoJm9ABCCvQDACj0AgJu8AIAhvQAgkr0AABY9AADpOwAAorwAAOc7AECzPAAAVLsAIEQ9AIA4PQBAE70AAM27APC3vQAAJj0AgHe8AEC/PAAAiLoAAIS6ABCrPQDA7bwAgL28AKALPQDATb0AAEq7AACYPAAQhb0AYBM9ACADPQCgAb0AgAc9AEDGvACASL0AAPS7ACDUvQAAdr0AYGa9AIBZPACA0DwAwEk9ACA5PQAAYjwAAIO8AMDuPACAZDwA4Gy9AABQPACAn7wAgDy8AEDnvAAAoLoAIAa9AACDuwAQgb0AgDM9AACSvAAA9LsAgE48AIA0vACgFD0AgAC9AMCkvABAlTwAgEU8AEAVvQAAAL0AwF09AABQOgDA2TwAQK48AMC2PABAdb0AQJY8AECQPACATDwAIHK9AKAFvQBAKL0AAMe7AABIvAAgUL0AQLA8AKAAvQAAQTwAgKG8AECoPABA+jwAANU7ACChPQAA6TsAMIA9AIAdvQBAMb0AAKE8AMDZvABgJz0A4Do9AKCevQBAMr0AQD69AAAhPAAAMT0AAJI7AECLvAAA7bwAAKC5AECxvACAs7wAAJU9AAAqvQDA/bwAwFQ9AADyPABAVr0AgCe9AHCwPQDglz0AsOO9AMDRPACANTwAAEQ7AAC/OwAACb0AgF49AIBfvABAPj0A0OA9AAA+vAAAZbwAQEQ9AAAzPAAA/7sAAGe8AAB5PABAxbwAQI48ACB8PQAAtzwAwGK9AAASvQCgab0AAAq9AMAevQDgSj0AQD89AMBpvQAAwDoAALC8AMDJvACAj70AAKK7AECKvACAS7wAwJ+8AJCGvQCgXz0AANQ7AMD5PACgxr0AgC68AABCPQAALr0A4Ak9AKBUPQAAbjwAgM08ALCrPQDAo7wAAPu7AMBhvQCAaTwAAIY7AACQPACAHbwAgCG9AACBvAAAeTwAwNU8ALCsvQAArTwAoKI9AABquwCAEzwAgGm8AAAaOwCAvjwAoGq9AAAHPACAk7wAwFQ9AECVvQCAxDwAwH29AOArvQBAnT0AACw7AOBtvQBACL0AAKw8AIABvQDwhT0AIBy9AADwuQBAwzwAABW8ACA/vQAQsb0AAL48AMAFvQDwjL0AAA+9AIA2PACAOj0AICg9AIBsPQAA67wAwJ88AAC0PABAtbwAgOK8AAB8vQCAyjwAgC89AMAPPQAw8D0AYEY9AABYuwCAezwAgIQ8AOBlvQAAeDwAwEK9AAAWuwAgN70AgMa8AADmPAAA7rsAoG89AABivAAA0LwAAI87AAB4OwAAA70AQJs8AIBfvAAAG7wAwH49AAC7uwDwjL0A4CS9AAAgugBAiDwAAPK7AIAJvAAgK70AAEs8AAAMPADA77wAAEy8AMDDPAAAAL0AgFO9AGAkvQCAijwAgNC8AMABvQAATbwA4FS9AIA/PADwjr0AANC7AGCYvQCAgTwAQCa9ADCsPQDAoD0A4Jo9AMBsvQCgmz0AsMK9AMDBvAAgUj0AAA47AIBGPQCASz0AwA49AIArPAAAeLsAgPo8AADPuwAA5rsAgFQ9AAAYuwAAlrsAIBM9AIDDPQBAMj0AYDK9AKA7PQBA/DwAAJW8AACtOwAQgz0AOAs+AIAOvQAA2bwAAGi8AFCLPQAAzr0AwK08AADFPAAAN7wAgFY9AMAEvQAAWTwAQIi8AAAyPAAA2TwAALS8AAAUuwCA9jwAwAE9AMAdPQAAjLwAgJS8AMCbPAAAmbsAwIK8ACAovQBYEj4=","chunkHash":"ab2060335d525f62b76a81fa7ae74c026af036c213fda5ce4632c3bc1cab6eab"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef create_mock_deepgcn_model(in_channels=6, channels=64, out_channels=64):\n    #...\n    class MockDeepGCN(torch.nn.Module):\n        def __init__(self):\n            #...\n        def forward(self, points, features):\n            #...\n```","range":{"startLineNumber":20,"startColumn":0,"endLineNumber":26,"endColumn":44},"embedding":"AAAWOwBAL70AgG09AIBcvQDgAb0AwFa9AIB1vAAAmTwAYDK9AEAGvQDA6zwA4A09AICMvAAgBb0AgJY8AAAQPACA4LwAAL88AIBXPQAAhDwAAF68AMDDPQCAJzwAQLy8AECtvACAWL0AwBS9AMCEPABwhj0AANy8AOBmPQCA8bwAYMS9AADXuwBgJb0AAOQ6AABXPAAAkj0AgGq9AOCEPQCA3jwAcKW9AIAqPADgMT0AAIm8AICOPABAwzwAAGE8AEC1PAAA/LoA8KO9AOCqPQAAobwAIAW9AICZvADggD0AABc8AMCLvACAVrwAgCI9AMB0vQCAt70AwPK8AMBuvQDgH70AYCu9AABsPACACjwAgMC8AIDyvABwqL0AAI88AADjvACAxrwAAHA6AAD4OwBAhDwAgMk9AIBxPADwjr0AgM68AKAqPQAAIbwAAJ48AKA7vQDASb0AACW9AKBlvQAAWDoAACa8AGB7PQAAprsAAPq8AIA9PABAhLwAwL28ACA8PQBwur0AAAq7AAAAAAAAJzwAoCU9AEAKvQDgxD0AYB89AADgvAAAfTwAAEW8AKAKvQAw+T0AgKw8AIBZvAAAOLwAAJe7AICgvADgiL0AQPU8AOAIvQAAULsAoAg9AOB6vQBARr0AIHY9ACCvvQAAeLoAgEa8AODdPQCgb70AkKC9AIBOvQCA3zwAAIY7AEApPQCAEzwAAEK9ACA2vQAwmL0AsIE9AICyvACAiDwAQOi8AIA1PAAgHT0AAOa7AEBjvQCwjj0AcMe9AED7PACAJr0AIIw9AGBzvQBAuDwAwIq8AIDevADQhb0AgDS9ACBYvQDgGD0AID89AEDfvQBgBz0AoCI9AACcugDgnj0AAB28AACePQBA1b0AALg6AHCDvQDgQr0AICY9AIB5PQAAz7sAQI09AAD7uwBA27wA4IG9AFDyvQAgRL0AoIy9AEAzvQAADj0AAE28AMDxvAAgfL0AAMm7AICgPAAAvbwAgAM8AIAyPACAcjwAwA49AIBtPQBAvbwAAFk8AHCLvQBQij0AAEO8AMCgPAAAfLwAAJm7AOCNPQAgOL0AALK8AGApPQCgF70AYAG9AECYPAAAhb0AwPg8AEAJPQBA37wAwBs9AEDvvAAALr0AAJO8AOChvQCgb70AQBC9AIDHPADA5zwAYFY9AGAePQAA9TwAgFe8AACUugAAALsAIF29AIBTPAAAZLwAgGQ8AIDzvAAA6LoA4Di9AABFvAAQpb0AYBY9AIBXvAAAArsAADc8AABYvACgSD0AgJS8AIDcvABAiLwAwLM8AEDwvACA4LwAQNk8AIB0PABAjDwAQEI9AMDkPABAmr0AgCY8AAAIPQAApTsAIIy9AKAtvQCAT7wAwKy8AIBgvAAgJb0AAPk7AECjvAAA3DoAAAS9AABsPABgCD0AgCo8ABCgPQAAsjsAIKc9AKA0vQBgZL0AgDY8AADqOwAAJT0AIHk9AKBSvQCAb70AQDK9AADCuwDALj0AgAy8AIAFPABADr0AQMY8AIC4vACAL70A4Ig9AIARvQDA1LwAIBo9AADqPACgTb0AgEq9AIC3PQBAEj0AMNu9AKAIPQCAHjwAAEC7AIBxvAAArbwA4II9AABlvACAaT0AIOw9AIAXvAAASbwAAG89AIB6PACAYDwAAHe8AIBxPAAATL0AAGA6AACrPQAA+DwAIIm9AIDivABga70AQNa8AGBhvQAgdj0AYC89ADCQvQCACDwAgHG8AADcuwBgib0AAKg7AAAdvAAAL7wAQIW8AOBsvQCAjD0AAGK7AAAkPADQx70AAEM8AOBbPQDAFb0AYGM9AOBDPQAAPDsAwLk8AICnPQAA1LwAAHC7AGAwvQAAwTsAwIK8AECIPAAA0LsAQPa8AABlvAAABj0AgB89AACIvQDAEj0AkI49AEDLvACASDwAgHK8AAC7uwBAlDwAgG69AIBtPADA0rwAAEc9ANCTvQDAmzwAoHW9ACAPvQCQhj0AAJo7AMDgvADA1LwAQI48AEDCvACAXj0AQEa9AAD4ugBAxDwAQJu8AMBdvQCwub0AgMc8AACevABAab0AgFS8AIBJPABA1DwAQDs9AAA1PQDAorwAQIo8AEBEPQAAtLwAQI28AMBFvQAgTD0AYD89AADrPADg0D0AAF89AECavAAABLwA4C49AMB6vQAAuTsAIDm9AIBhvABwgb0AgBq9AMDrPADAjbwAoCE9AADjOwAAQb0AQKK8AAA7vACAPrwAQOQ8AAC0uwAgG70AcIo9AIBkvACwgb0AYF+9AIAVPABAnTwAACI7AACkPABgDr0AwBY9AABtPAAgMb0AgAK8AEAVPQAgA70AAHC9AKBzvQAAsDwAYBO9AEC3vABA37wAwEy9AIB0PADAlb0AwIW8AGCCvQCA4zwAoC+9AACaPQAgfj0A0Lk9AMBNvQAQoD0AMNO9AKAYvQDgMj0AAIA8AIDcPAAglj0AwPY8AAC9PAAAfLsAYFw9AIAFPACADLwA4H49AMCxvADAjbwAgHI9ALDcPQAAmTsAIGu9AEDDPACA8zwAAFG8AAAAuADAYz0AkD4+AMAUvQAACb0AAIq8AMBYPQBQvr0AICU9AGAxPQAAXrwAgDI9AED3vABAnTwAAAo8AAAuOwDA3TwA4EK9AIA/vAAAqjwAAK07AMAbPQDAkbwAABq8AACHOwAAwDkAQOa8ACAOvQCgDD4=","chunkHash":"c414b06ec1d2cf2314d9131484fe2b9d539d501964be13de96bffeee333ae2cc"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef create_mock_deepgcn_model(in_channels=6, channels=64, out_channels=64):\n    \"\"\"\n    Create a mock DeepGCN model with the same input interface as the real one\n    for testing data compatibility without requiring the actual model.\n    \"\"\"\n    class MockDeepGCN(torch.nn.Module):\n        #...\n    return MockDeepGCN()\n#...\n```","range":{"startLineNumber":15,"startColumn":0,"endLineNumber":43,"endColumn":24},"embedding":"AAC5OwDgRL0AQOI8ALCGvQCAzrwAgNm8AACPvAAA+jsAgDu9AMAYvQAAazwAgPA8AADZuwBAwbwAAKA6AIASvACACr0AAE88AGAWPQAAbDwAAD68AMCtPQCAPjwAQL+8AACGPABQhb0AgFu8AMCKPAAgVz0AgJW8ALCEPQCAsLwA4L69AIBTvABA+rwAAAQ7AACEPADgWz0AQFu9ACCOPQDAjzwAcJe9AICUPACglT0AAM+8AADbPADgOz0AgG88AIA/PACA7LwA4E29AKCUPQAA17wAMIu9AACdOwCAaD0AAC68AACNvAAANjwAoA89ADCjvQBAlb0AwO68AGBKvQAAYb0AYG29AMD0PAAARzwAAAG9AAAyvABgn70AAJ48AIASvQCA3LwAwIG8AIC2PAAAjTsAgOc9AEARPQAgj70AAA29AMBqPQAAzrsAALy6AEBdvQDgDL0AoGa9AGADvQCAljwAAIq7ADCMPQAAJDwAIBy9AIC2PAAAibsAAOW8AEDpPACwqr0AADc8AADXPAAAijsAoD89AEDIvACwyz0AgCE9AIAYvADA0DwAAOO7AEAKvQAQ0z0AYCw9AACsvAAA0LkAgJK8AEDvvADglb0AAIA7AKBZvQAA57wAgKA8AECVvQBgPL0AsKM9ANCkvQCAfDwAwJm8AGC3PQCAQ70AQL69AKBcvQBApjwAABY7AKAIPQAA0bsAwOO8ACAIvQAA1b0AYCQ9AAANvQCAaDwAgEC9AAAUuwAgHj0AAK27AEDovACgvT0AIKG9AIC6PADgEr0AMIY9AGAIvQCA/TwAAL+8AEBgvQDAXr0AAKq8AOBNvQAA2jwAQJM9APD7vQDADT0A4Ek9AEDkvADAtz0AAOu8AODOPQDw2b0AAPs7AABvvQAAUrsA0IU9AODOPQAAhjsA4Ek9AAB6uwCA4rwAAE69AODsvQCgAb0AgF29AMDsvADA0DwAQKI8AICNvACgUb0AgM68AACiPADgLL0AAFW8AIB4vAAANrsAQME8AOAsPQAAzzsAAFc8AKCHvQAgpj0AAGg6AKCDPQAAW7wAgCY8AABAPQAALr0AgA29AKBcPQAArbwAgLu8AMDRPABwkr0AYA49AMDPPAAASrwAgAA9AIB/vACA27wA4By9APCevQBAc70AAAq7AAAOPQDAzzwA4Dk9AGAuPQAAAD0AABG9AACnOwAAtbsAQG69AAD+OwDAkbwAAKU8AIAQvACARbwAADy8AAA4PACQkL0AQBM9AABivABAszwAAJ27AAClOwBgeT0AgBe9AOA6vQDAvrwAAFY7AIDyvADgg70AAIE8AAAPPAAAyjwAAMs8AMDoPADwqL0AAPs7AABYPQAAsLkAgGW9AMA3vQCAzDwAAMS8AID5vADA5LwA4AM9AIARvACAJTwAgCC9AIA+PACARDwAAHA8AFC7PQAAlbsAgJM9AIAMvQBgPr0AgFo8AADnOwDARz0AADY9AIA9vQBAhL0AADW9AIBYvACgMD0AgF28AGAJPQDALb0AAEI8AGAAvQBQkL0AAB09AABHvQAAJ7wAwOU8AMDqPACAG70A4CW9AECsPQCgED0AgMO9AACYPACAXTwAAEi7AIAkvACA47wAICY9AACBvACAmT0AAMQ9AMCLPADA0bwA4H49AACvuwAA5TwAADA8AIBXPAAABb0AAPG7AGBePQDgPD0AEIe9AACCvABAab0AQPK8AIBfvQDAeD0AgAU9ACCavQAAGzwAAMW7AABZvAAAIb0AgBI8AICavAAALrsAABC8AKBPvQBAfT0AAOO7AIDZPAAgpb0AoDQ9AIAwPQBgAr0AYF09AEAOPQBAhLwAAEU8AFCjPQAAIL0AABI7ACBdvQCABjwAAEm8AAADPQDApzwAgEG9AIBuPABgJT0A4BU9AOB7vQAAgjwAEIs9AIChvACA5DwAwLG8AIBMPADgTT0AIIS9AACbuwAAw7wA8Io9AMCAvQAAvzsAoIO9AOA/vQCgcT0AgJM8AAAEOwCAmrwAACC6AEDbvABAPj0A4DG9AAAauwAAWzwAgPG8APCYvQAQl70AwKc8AABuuwCQkr0AAEy7AAAyPAAAuzsAAFs9AIAJPQCA/rwAALE8AEBXPQAAyLoAQKO8ACBDvQAAMT0AgKM8AAAmPQCwsD0AgC89AICGvAAA0DoAADg9AABgvQAA7LsAgHe8AADBuwDAj70AAIO8AKAJPQCAaTwAACQ8AABzPADAeL0AAPS6AMD1vADA17wAAKk7AABwOgCA/7wAcIs9AAAuvQAgbb0AQDC9AADFOwCA0DwAAOA5AOArPQAAk7wAgNc8AOBGPQDgM70AwLS8APCFPQAA/7wAIEm9AICJvQDABz0AADO9AOA7vQAAubwAgAC9AABNPAAgWL0AAHC8ACCEvQDAWT0A4Da9AEBePQDATT0AoNo9AACDvQAAsT0A0OW9AIB8vQDASD0A4Cc9AMCXPAAAuT0AAE08AICdPACAobwAwDU9AABjvABAmDwA0IU9AMCNvAAAjbsAIGg9AICnPQAAaLoAYIm9AGAIPQAAQTwAgE68AAA2PACQhT0ASDk+AOBevQCAEL0AYBC9AMBSPQDwir0AADk9AOAsPQAAULwAYI89AMAgvQDAxjwAwLM8AMCWvACgHz0AIAS9AACNuwDAjDwAgM08AEC+PADA9LwAIFG9AIASPACATLwAgEy8AEC9vABg+j0=","chunkHash":"10b7ff03f8af2f673a16fcc160cf315fe333166d5d551c19793ba053d44fbc90"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef test_with_model(dataloader):\n    \"\"\"\n    Test if the dataloader outputs can be correctly processed by the DeepGCN model.\n    \n    Args:\n        dataloader: PyTorch dataloader that provides batches of mesh data\n    \"\"\"\n    # Create mock model\n    model = create_mock_deepgcn_model()\n    model.eval()\n    \n    # Process a single batch\n    with torch.no_grad():\n        for batch in dataloader:\n            if 'points' not in batch or 'features' not in batch:\n                print(\"Error: Batch does not contain 'points' and 'features' keys required by DeepGCN\")\n                print(f\"Available keys: {list(batch.keys())}\")\n                return False\n            \n            try:\n                # Try to pass data through the model\n                out, h = model(batch['points'], batch['features'])\n                print(\"Success! Data format is compatible with DeepGCN\")\n                print(f\"Model output shapes: {out.shape}, {h.shape}\")\n                return True\n            except Exception as e:\n                #...\n```","range":{"startLineNumber":46,"startColumn":0,"endLineNumber":71,"endColumn":0},"embedding":"AGBCPQAgLb0AcNg9AMBOvQBAnbwAgJK8AOAqvQBAzTwAwLq8AACIugAAyTwAYBo9AFCFvQBgFr0AIEu9AAAHPQDwnL0A4EA9AIA9PADAdz0AwKM9AECePQCABT0AAAs8AIAKPAAAYb0AABQ8AEBlPQDAVD0AQM+8AMACPQCAirwAkOm9AACQugAAu70AQI08AMBBPQBg8T0AgFq9AIClPADgFj0A4J29AED8vAAggz0AALA6AAAbPAAgGz0AgEa8AADhuwAAfrwAgEy9AOATPgAA4TsA4Da9AICzvACART0AgC48ACBQvQCABDwAwMO8AGA1vQCAcL0AAJ68AAAZvACAVL0A8KW9AACnOwBAlbwAQDW9AIBvvABA8rwAwLi8AMC3PACwrL0AABu8AOBXvQDQkD0AMIw9AMD9vADAML0AAFi8ACBoPQAAEbwAgBK9AKBHvQAANbwAsKu9AEBAvQAAkDoAgDu9ADCXPQAA9zwAgHW8AAB5PAAgAD0AQIe8AABHPABAxr0AAFk8AADAOgCABDwAYAA9AAA5vABA5DwAAEk8AIBTvQAAFLwAgNU8ACAVvQDAhTwAAJW8AAAgugAA4zsAAB09AACMuwDQnL0AAFI9AMCjvAAA6rwAAFo8AEA6vQAAdbwAANS6AMDxvQAgK70AAEc8ADD+PQAgjr0AUKG9AAB5vAAA3LsAAEs8AIDJPABgJL0AYEG9AJCFvQCAwL0AgLy8AMAovQAABzwAgMq8AMD+PAAABjwAQJw8AKCTvQDA1zwAwIG8AADFOwCAdr0AgD89AECvvAAAsTwAAIC7AABivQAAp7wAAA29AIBBvQCgED0AYHA9ALCKvQBgFT0AYDQ9AIARPADwkD0AAJA6ADCFPQAgf70AAME8AICSvACQor0AAFo9AOBSPQCAQL0AAGi7AABIugDAUb0AUKK9APCPvQAAw7sA4Ai+AKAMvQDAzTwAAIg7AKAuvQBgur0AwNa8AIAaPAAAFDwAAF28AABoOwAAyLoAwGY9AEDxPACARL0AAFs8ALCVvQDQxj0AwJe8AMD+PAAAH70AAE28AGA8PQAAF7wAAPi8AEA/PQDA+LwAAAS8AOA2PQCwhr0AAFe8AAD4OgAAgDkAIEq9AADqvABAmrwAAFk8AAAMvQAAdrsAAG48AKABPQAARDwA8Js9AACBvACAKDwAgGe8AAAOuwBABj0AMIe9AACHPAAAZzwAQOC8AEAAvQAAaTwAALW7AOAtPQDg9b0AgCo8ACBTvQAAIrwAwJM9AKA7vQDwkT0AAFY8AABnvACAgjwAgEm8AMDFvACgG70AALS6AAApPACgFz0AAOC6AECKPACAv70AQPO8AAB6vAAAUL0AAMO8AKAGvQBAD70AgKm8AKBUPQBgBL0AQKU8AID5vACgLb0AgEI9AMBUvQCABb0AwL+8AGBSPQAA4LsA4Jk9AIDrvACwkL0AAKQ8AMCFvABAuzwAQBA9AOBavQDALL0AIBe9AEBjPQCAUT0AwLO8AABeOwBQsb0AAGu8AMAbvQAAarsAAIM7AFCGvQAgLz0AwAs9AMDuPACAo7wAgGq9AICpPQBAgrwAQL+9AAAsvQDgDj0AAGo7AMCGPACAfzwAAPi7ACA1vQDgdz0AIHE9ACArPQBAhL0AAGK7AICsPAAANDwAANm7AADVuwDgFL0AACg8AMCfPQCAzDwAoE69AIB0PAAAxLwAAOk7AGBVvQDwhj0AgOk8AGAIvQAAmDsAwPo8AAC8uwAAOrwAIAw9AADUOwBgFb0AEJw9AKBLvQBwgj0AwFI9AAA8PQAQpr0AgII8AAAsPQBAorwAANw6AMBQPQCAkbwAoDM9AMBnPQBAML0AAG68ACBfvQBA2bwAAPc8AACtOwAAQLoAsIy9AADIuwCACj0AAN+7AIDBvACgaz0A4Fc9AMCyPABAkjwAgGk8AIBKvQAAxDwAAHW8AAAbvAAAsLoA4JI9AAD1vABAzDwA8I+9AACMvAAAlTwAAFU8AICcvABA7DwAQEM9AOAOPQAAUjwAAGe9AAAvPAAgIz0A4CC9ABCzvQCAYb0AgIM8AICPPAAgmb0AcJa9AIARvAAA8LoAgGo9AEAvPQAAnbwAkIs9AADmPACAobwA4Ci9AGAzvQCAPDwAkLc9AIBNPQBgAj0AwGI9AADwuQAAgDgAoCA9AAD1vABA/zwAQBO9AACDOwAgT70AwHq9AGBzPQBApLwAgOg8AIANPADA77wA4Gm9AACUOwBAIr0AoGY9AIDHPAAAwbwAACW8AACEvQBgz70AAJS8AIC+PAAAgTwAAC47AEDmPAAAKDoAYBw9AACVOwCgwL0AAMs8AEAYvQAAUbwAAOu8AMCMvAAA1DoAgGK9AMCPvAAA8bwAQMe8AIBCPQAgLb0AgKI8ACBQvQDAnLwA0Je9AEDqPAAAHj0AcLI9ACB9vQDgSz0A0NO9AGCUvQAAmTwAwJI8AKAvPQBQhj0AAGq7AGBePQAAF7wAgEM8AIAGPAAAYrsAwC29AABHPAAgVr0AAMY8AHCQPQAA2DoAAD69AAAAuAAAnzwAIEG9AOA8vQAwoT0AaBo+AKAQvQAAgDgAgG68AMBTPQCgZb0AAO88AMAgPQCAQrwAALw8AECjvADgST0AAPs7AGABPQBAsjwAgFy9AAC5vAAArz0AgI08AMDlvACAVb0AgA29AADpuwBA77wAYD69AIBWvAAA9z0=","chunkHash":"aec88f1527a7edc6e2c0f066ad0c0f000f0afe54a8689e75518a157c19821a62"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef test_with_model(dataloader):\n    #...\n                print(f\"Error: Failed to process batch with mock DeepGCN model: {e}\")\n                return False\n#...\n```","range":{"startLineNumber":71,"startColumn":0,"endLineNumber":72,"endColumn":28},"embedding":"AACMugDgQr0A4N89AGBVvQBA27wAgGo8AEAGvQCgCj0AgCi9AAC7vACAfDwAgA+8AACZvQBAw7wAYAu9AACuPABwgb0AQOY8AICOPAAAxjwAwHw9AOCgPQAAdzwAgCW8AABguQBAcr0AAEa7AGBLPQDAHz0AwKK8AEAxPQAA+LwAANm9AEASvQBwgr0AAJM8AGAUPQCgfz0AgAW9AAD9OwDgCz0AIPC9AICbvADQuj0AAMQ7AMDQPABAUz0AgE48AICRPACA87wA4Fm9ALCmPQAA7LoAAPK8AMB1vQCAZT0AgO+8AAB+vAAAoLsAwKG8AOApvQBASb0A4Bq9AACpuwBgbr0AYL69AACLPAAAxrwAYGy9AED+vAAgar0AQNo8ACABPQAANr0AgKy8AKA0vQDgmD0A4Po9AIDUvABwib0AwOG8AABVPQAA9LwAAB08AIAovQAgdL0AgPa9AMB4vQCAQbwAQMi8AACRPQAAUDwAQIU8AIAAPADA2jwAgKI8AIBFPACAw70AwKq8AIBLPAAAkDkAwAE9AABLvACQmj0AAPI8AMCOvAAAprwAIA29AECHvAAgSj0AQIa8AAB/vAAA6bwAwPE8AACVvADAg70AQC49ACA8vQBgLL0AAJQ7AMA9vQAAzTsA4Bs9AKDXvQAA4bwAAJc8ALCyPQCAl70AcKS9AAAYvQCgB70AAD88AOBLPQBAwLwAQIy8AMBpvQBAqr0AAPU8AOA1vQBgXz0AgD69AEAIPQAA3LsAQLQ8AKCbvQBwlT0AgFu8AMALPQDAoLwAAEA8AECwvAAAfzwAQMi8AEDHvAAgeL0AgAy9ACAKvQCgUj0AsKE9AFCsvQAAzjsAAKY9AAAguQDAdT0AgFG8AACiPQCgZL0AgC68AMDcvACAyrwAoKc9AJCCPQBglr0AAN27AADAugDgML0AYBq9AMB7vQBATr0A8L69AOAMvQDArTwAwI68AMAgvQAQlL0AoDq9AKBMPQBACD0AgFu8AECuPACA6TwA4BY9ACBYPQDwjr0AQN48AIA5vQDghD0AID69AEAePQAAfrsAABm8AJCFPQAAcDsAgAC9ACB8PQDAI70AwKG8AIBRPABgdr0AgGK8AEAvPQAAPrwAAP28AAC8vACAhLwAALG7AOAnvQBgS70AgAA9AGAbPQBApTwAMIc9AADnPADAtzwAwDe9AIDovACAUjwAYJq9AEDOvACAoTwAgAw8AMBqvQAA9zsAAGo7AMCUPQDwsr0AQKI8AMA4vQCAkDwAgBE9AMC6vAAAST0AgDo8AECKvAAAjDoAgJw8AAAYOwAgdb0AAAM8AOAlPQDApzwAANs8AABdPABQ2L0AAMI7AOA0PQDA3rwAYDe9AAD3vAAAJrwAQEO9AAD9PAAAa7wAAPy6AACJvACA77wAYCA9AACKvQAApLoAoFC9AOCBPQAA97sAoGI9AIAyvQCgV70A4Dk9AAACuwAgMz0AQNU8ACAbvQDALb0AwPi8AAABPQBgUT0AAKO8AMCdPABAwb0AAE47AMANvQAA7rsAQLQ8AGCWvQAAHD0AAMQ8ACAPPQCgY70A4Ae9AEBOPQAgA70AQJu9AMCYvAAA2jwAAEy8AACwuwAAOrwAAM07AMCEvACgNj0AMIw9ACBHPQAgzb0AgAG8AMD5PADgDD0AwK08AABNvACAP70AwLg8AHDMPQBAijwAgD69AAABvADAQb0AgF88ANCmvQDAaT0AgDW8AMA3vQAASDwAIDI9ACAdvQCAVDwAgEg8AACiOwCAAjwAYBA9AAD7vAAQuD0A4Bk9AGAqPQBQ770AAJm7AKASPQBAKr0AAI08AMCGPAAAFLsAYBk9ABCHPQDA/7wAAHa8AMAvvQCAIDwAAHC6AABiuwAAk7sA4CO9AIASvQDggj0AAK47AABgOwCgAT0AkKY9AIDIPACAfDwAAMU7AACpvABAwrwAwJy8AMDVPACA5LwAIFU9ACAPvQAAaDwAYFy9AAAFvACALj0AIAM9AABXPADA3jwAYII9AECgPAAAKDoAgHq9AAAwOgCAZT0AwC69AFCpvQBQhb0AQNe8AMA2PQCgv70AoBW9AEC1vAAAA7wAIEw9AKBxPQDAhjwAoIg9AIBoPACACLwAwFK9AIBxvACAaj0AQJ89AMBFPQDAAD0A4Ec9AAB2vACAGrwAIA09AMDqvADApzwA4Gy9AMC+vABwnb0AgES9ACChPQCA+zwAoBA9AACWuwDAx7wAYCO9AECGPAAAY7wA4GQ9AGAIPQBgaL0AYD49AKCEvQBgeb0AgBW9AIARPAAA4DwAgBY9AIDRPAAAkrsAANk8AMC+PABglr0AAOS7AMCNPACAirwAgLG8AGAcvQAAbjsAgKe9AIAdvADgEr0AALw6AEDGPACAs70AAKC7AMAbvQAAbDsAwD+9AEBUPQAACLoAQPw9ACBMvQDAlD0AwIW9AABgvQAAuzwAAHw7ACAxPQAwjD0AgGE8AACvPAAAiLsAQNM8AAAAugAAxDsAgCy8AICbPADAybwAwCw9AKBoPQAA/LsAwHi9AAB+OwCAED0AAP+8AMCmvABAST0AsDE+AEDQvAAAirsAgLC8AOAVPQCgGL0AABA9AGBaPQCAhLwA4DY9AACyuwCgJD0AQJa8AMCFPACAYjwAwKO9AMA+vQBgVz0AAJ67AAAHvQDgNb0AAPE7AIB3vACA1zwAoDO9AIA9vABw2D0=","chunkHash":"414f47818583cc2c2f8a1b25f21ce05e7f569ba921bc1bfd5cc54f7fcfc3a288"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef visualize_processed_data(batch):\n    \"\"\"\n    Visualize the data in the MorphoFeatures format.\n    \n    Args:\n        batch (dict): Batch data from the dataloader\n    \"\"\"\n    # Get sample IDs for visualization\n    sample_ids = batch['metadata']['sample_id']\n    \n    # Check if we have the required data\n    if 'points' not in batch or 'features' not in batch:\n        print(\"Error: Batch does not contain both 'points' and 'features' keys\")\n        return\n    \n    # Visualize first few samples\n    for i in range(min(3, len(sample_ids))):\n        sample_id = sample_ids[i]\n        \n        # Create a figure with two subplots\n        fig = plt.figure(figsize=(15, 7))\n        \n        # Plot points (3D coordinates)\n        ax1 = fig.add_subplot(1, 2, 1, projection='3d')\n        points = batch['points'][i].permute(1, 0, 2).squeeze().cpu().numpy()  # Convert to [N, 3]\n        #...\n```","range":{"startLineNumber":75,"startColumn":0,"endLineNumber":99,"endColumn":0},"embedding":"AOAzPQAAMDwAQGU9AIApvQAgYr0AgIi9AMDsvAAAjjwAYFy9AADDvACQlT0AgP88AMDQvACAiL0AAAS8AKBzPQCAJb0AQKQ9AKAhPQAAbj0AAPc8AABsPAAAWLoA4CC9AAAMvACA17wAAIS8ACCAPQAwkD0AAAE8AAAougAAcLsA0J29AAA0vAAgWL0AANC5AAD8uwAgRD0AQFm9AIBnvAAwhj0AsKu9AAC3OwDAhT0AIGk9AADiPACAez0AAGi8ACCPPQCALz0AYEG9AMACPgDAqTwAAHC7AIAzvABwxz0AgBq8AAAsvACAHbwAgMC8AIAbPABgLb0AoCw9AACzOwAAub0AgC+8ANCLvQCAPLwAAOs8AAASOwAA3bsAQI08AEAKvQAgSL0AAPC8AHCbvQCA4bwAYC89AJCNvQCAsb0AAD47AAAxPABAKL0AAKo8AIBVvQAAFr0AANq8ACARvQAAhzwAAD69AMBnPQBA5DwAMM+9AADUOwAAcrsAoEQ9AACcugCQ/L0AAOy7AMCcvACAizwAoHs9AGAHvQBAkjwAgH48AOBuvQAAqzwAQPc8AAApvACgJD0AgOG8AIA6vQCADj0AgCM9AEDoPACALbwAIDQ9AECwvAAAIjsAADQ7ADAGvgDAkTwAQD69AMAdvQDAB70AACi6AGBFPQBgir0AAEA6AIATvAAABrsAQJS8AABVPACwzr0AQHS9AOD2vQDgB70AYCI9AIAnPADAhzwAAMA7AIDZPAAAqT0AwOW8AABCvQDggz0AQH29AECFPQAAS70AoDw9AIAZvQAAYLoAwDQ9AEB5vQDA9bwAgOe8AMDwPABApzwAgAI8AAC4vAAgDT0AgFe8AADVPABAOz0AgGC8AKCMPQBQoL0AgPU8APCbvQBglr0AAIi6AAAjvAAAp7sAIBq9AICDPADAn7wAwNW8ALCrvQBAt7wAMK69AGAJvQCAZzwAABu8AACvuwAwkr0AgOC8AEDbPADAWj0AAAq8AMAUPQAAbLsA4Cs9AACJuwCAx7wAwJQ8AHDKvQDwjT0AAMC8AACVOwBAsbwAAHa7AED3PAAAOrsAADm8AIDjPADgVL0AwKg8AACrvADwg70AAFU8AIAEPADggT0AABs8AECePADA47wAALY7AGAGvQAArDsAAJu7AICKPAAAQTwAAMc7AAD8PAAgfz0AAPe8AMDxvAAASDwAMJK9AEAqPQAA/rwAAE47AEARvQBA2jwAAHg9AID9PABgcr0AgAA8ACBwvQAAlDsAgLQ9AABovABAhj0AADg7AAB1PAAA6TwAAGg7ACB3vQBgLL0AQI08AIDPPAAARjsAADC8AABwPAAw8b0AwBC9AADOuwCgnb0AQK68AAB0vQDAuDwAADA8AMBLPQDwsL0AoBs9AMCjPABAAb0AABc8AGAGvQDAIb0AwB89AMBhPQAAfbwAgKg9AAAwOgDQsr0AwFA9AMCAvAAADz0AoDY9AIBgvACAH7wAAJw7APCSPQAA2TwAQEW9AIBwvADAkb0AACa8AKABvQDAe70AAEs8AAAAPADA5zwAgAa8AAAnvADA+7wAABi9ACDCPQAA6jsAIKK9AABpvQDga70AgAo9AKBQPQBAmbwAAIk8AKCAvQAANDsAUIw9AADhPAAgaL0AoJG9AIB7PQAAkLoAAHK9AAADPACAPj0AgK08AED/PAAAqLsAMM+9AAAeuwBAkzwAAP47AABHvQDAmrwAQLm8AMBCvQBgVz0AAAM9AAAoPADgFr0AAEg6AID6PAAAOLwAYAo9AECpPAAARz0AwNw8AMDHvADAKL4AgBW9AACcugCgKb0AgME8AID2PAAAhjsAQFo9AADWuwAwh70AMIS9AAATvQCANzwAgGk9AMDZPAAA/zsAYCG9AABvvABA3jwAgMc8AMD8vADgHj0A4Gk9AIC3PAAAOrsAgCY8AEAsvQCABz0AAA08AIA6PACAjDwAAPS8AIDkvACASbwAYLa9AEAOvQAAPD0AQJE8AKAjvQAAeDwAgKc8AAC8uwBA1TwAwNC8AABMuwCA3DwAAKy8AABmuwCARb0AoA89AICNPADANb0AQLw8AAB2vAAAeDwAoIA9AIDKPAAAZrsAwDE9AEC8PACAirwAIBW9AACWvACAdbwAgBA9ABCCPQCAoTwAAN48AICyPADA4zwAYEk9ALCsvQCA1rwAEO29AIA4vABAD70AcAC+AADHPACA9LwAkLI9AAAVPABAtrwAwDy9AADMOgCQh70AEJo9AED7PACAAb0AAKo7AIBevADAir0AAFG8AKBwPQAAIDwAAOs8AIBCvAAAxTsAADc8AMCePACAuL0AgNK8AABXvQCAmjwAQCO9AABDvQAAvzwAoB69AIC/PABALD0AoM29AACEPQCAsTwAAJq8AOBSvQAAILoA4Du9AADEuwAA9bsAwFQ9AJClvQAQsz0AwAK9AGBovQBgOT0AYLu9AIANPQCAX7wAwN+8ACBzPQCAFbwA8Lc9AAByPAAAnbwAwNY8AOAbvQAAAb0AgC88AJCNPQCAGr0AAGw7AMCVPQAA+zwA0OC9AACWuwDghz0A2Ak+AAAhvAAAFL0AwMS8AIDkPADAfr0AAH08AADHvAAAYrwAADC6AACCuwCwor0AQMe8AIBBPQAAizsAQKi8AABTvAAQrD0AAIS8AEDJPAAAbLwAADe8AAAwOwDA8LwAwOo8AGAgPQCwpD0=","chunkHash":"69c503ee86456c1d3652c86650879e4a69131b98a62d60331bcd66dfac0f7efa"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef visualize_processed_data(batch):\n    #...\n        ax1.scatter(points[:, 0], points[:, 1], points[:, 2], c='b', s=1, alpha=0.5)\n        ax1.set_title(f\"Sample {sample_id} - Points\")\n        ax1.set_xlabel('X')\n        ax1.set_ylabel('Y')\n        ax1.set_zlabel('Z')\n        \n        # Plot features (using first 3 dimensions of features for visualization)\n        ax2 = fig.add_subplot(1, 2, 2, projection='3d')\n        features = batch['features'][i].squeeze().cpu().numpy()  # Get all features\n        \n        # Use first 3 dimensions of features for 3D visualization\n        feature_coords = features[:3].transpose(1, 0)  # Convert to [N, 3]\n        \n        # Calculate color based on remaining feature dimensions (e.g., normals)\n        if features.shape[0] > 3:\n            #...\n```","range":{"startLineNumber":100,"startColumn":0,"endLineNumber":115,"endColumn":0},"embedding":"AAB6uwDQjb0A8Nk9AIAlvQCgkr0AULO9AAC0vAAALLsAQDq9AIBNvABAXj0A4Gg9AKAwvQCgeb0AAMQ6APCjPQAQgr0AsJA9AABPPADAET0AAOE8AADfPAAgEj0AQGG9AICXvADgEb0AgBA8AGBVPQCAbz0AALS8AAAYOwDAlLwAANi9AECvvADgX70AgDM8AABEuwBATj0A4Ce9AAAguwDATj0AwEC9AAB+PABwgD0AIBU9AECLPACASDwAwM+8AKAuPQBASj0AYDi9AJDcPQCAFzwAAGA6AOB6vQBwkz0AAAa9AADgOQCAWjwAgGm8AABIPAAgWb0AAMC6AIBnvADApb0AQPu8AIADPAAAjLoAAEA7AEClvADAAb0AgDw8AIBrPADgWL0AgBq8AMA0vQCAGDwAIGU9AGBhvQAwi70AgGC8AABgPAAA5rwAwKY8AOCAvQAAl70AIF69AOB/vQDA2DwAAPq8AIDnPAAAODwAgKe9ACAFPQAAsrwAgFI9AMAFPQBw5r0AAI+8AIC/vACAWbwAQEc9AIA9vAAAlTwAgIU8AMAjvQAARbwAgLo8AIA3vABAVj0AAKC7AECCvAAA8LkAkIM9AADvuwCgHL0AIAQ9AGA6vQAAOrsAACC8APDdvQBAjzwAwO+8ALCYvQDAJb0AAL28ANC8PQBgvL0AAJO8AADPvAAAFDsAgCi8AAC+PABQs70AYA29AODBvQAgOb0A0Ik9AMCRPACAUDwAALg7AAB+PQCgND0AgEq9ACAvvQDwmT0AQJu9AAA6PQAAyrwAICQ9AAAhvQDgMT0AAM87AECuvQCgNL0AYBe9AGBkPQDAEz0AAH48AMBdvQAAszwAgAI8AAChPADgXD0AAEG8AMA/PQAwr70AAH68AHC0vQBgpL0AAJg8AIDbvAAA27sAQIy8AEA9PQAA+bsAABa9ADCWvQDA7LwAAMq9AGAGvQDAh7wAACC5AOAEvQCQsb0AANC7AAD/PAAAijwAAES8AOAAPQAA3TsA4Do9AADUugDAsLwAYAg9AEDLvQDAXj0AQN28AEDWvAAAj7wAgCK8AAALPQDAlrwAACA8AIACPABQiL0AAEc9AIARvADQjb0AACa7AEDDPAAA3TwAAPS7AAACOwDAQb0AAKI7AEC7vACAUzwAgDm8AEAMPQAAbbwAwCQ9AMDuPADgZj0AoB+9AMAIvQBAHD0AgG+9AMBRPQCgOr0AQLW8AOAQvQCABjwAQPE8AIDMPACQgr0AoAA9AKBWvQAAaLwAEKg9AGAqvQCAcz0AAPS6AIArPADAZD0AgAG8ADCDvQAAeL0AADI9AIBNPABAqbwAAMm7AMDfvADQ770AgKa8AOAVvQDAML0AEI+9AGAjvQAA7LoAQOi8AMAiPQDgk70AAJw7AIApPAAAGjsAoEk9AEAEvQCgWL0AAIM8AKDLPQAAizwAwJY9AICcvACge70A4HU9AIBQvADAGD0AAGM9AAAEvQCgFr0AAPg7AEBhPQCAaT0AgK+8AADFvAAQt70AgG08AIAkvACQgL0AQC09AEDTvABA+zwA4C89AEC3PACgHr0A4D+9AICkPQCAu7wAQMu9AMA0vQDAsbwAAD47AOCoPQCgBr0AQIU8AKAUvQAA4zwAgGY9AIABPQBgW70AwBO9ABClPQCAH7wAIFu9AACHuwDApTwAgFc8AMCpPAAAV7wAIHa9AOAivQBAjDwAgJo8AABZvQAAL7wAABW8AEAYvQDgRj0AAHI7AABhPABA7LwAgDc8AIChPABAnrwAAHY8AAAquwCAST0AANM7AIAuvACQFL4AwCK9AIBgPABgD70A4EE9AACoPACATDwAIFQ9AICdPABAfr0AAN28AIBUvQAA/LsAQLA8AMBePQAgAr0AYBW9AOA/vQCAPTwAAMk8AADUvACALj0A4Jc9AADZuwCAHLwAAJA8AAAkvQAAAjsAAPA7AID0PAAAAzwAAOQ6AIBAvQAAYLwAILi9ACAfvQBwuD0AIAI9AEByvQAAnjsAAMg7AIAVPAAgGj0A4CG9AAAkuwDAIz0AAOK7AIAnvABgR70AAEI8AAA2vABAqr0AwJa8AAAiuwDgGz0AQPs8AMB2PQAAiLoAgCc9AADfuwCA9bwAIBm9AADXvADADL0AADw9AOCdPQBAGz0AAGs9AACYOwAAGjsAYCw9AACNvQCAabwAwOW9AABBvADAsrwAQJ+9AICUPACAYL0AgLk9AAD0ugAACDwAIEC9AABvvACgZ70AUI89AADUPABADr0AAHg7AMDBvAAAcr0AALC6AIDJPABgTD0AAGg7AACuOwBA5bwAAGg7AABWPABQhL0AoC69AMAGvQCgDL0AwGq9AMBovQAAhDsA4F29AIAcPAAADLsAgB29AEB6PQBA5LwAQMW8AMCzvAAArTsAAIy9AIAtPAAAJjsAUIY9AIAqvQBAhj0AADG9ACCIvQDwlD0AQIG9AEDLPAAA0zwAAJO7AOBnPQAAQjsAwH49AAA0PQAAcDwAADS8AMDUvACAwLwAgFw8AKCVPQBgKb0AQPy8ADCMPQBgIT0AILi9AECSvACQ2z0AiBw+AICfPACA2bwAwFS9AOAMPQAgn70AAP87AAC4OgAAf7wAADo7AIAWvADwkb0AQOi8AJCFPQCA8jwAgEy8AMCOvACgUj0AwOK8AGAbPQAAwLwAAG28AACUugAAuLsAAD67AGAVPQDA0z0=","chunkHash":"31c221cf2e156aa1fbacfd00b6a70738bca030c145c839d222d6b34d61cf7cb6"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef visualize_processed_data(batch):\n    #...\n            normals = features[3:].transpose(1, 0)  # Get normals or other features\n            colors = np.abs(normals)  # Use normals as RGB values\n        else:\n            colors = 'r'\n            \n        ax2.scatter(feature_coords[:, 0], feature_coords[:, 1], feature_coords[:, 2], \n                   c=colors if isinstance(colors, str) else colors[:, 0], \n                   s=1, alpha=0.5)\n        ax2.set_title(f\"Sample {sample_id} - Features\")\n        ax2.set_xlabel('X')\n        ax2.set_ylabel('Y')\n        ax2.set_zlabel('Z')\n        \n        plt.tight_layout()\n        plt.show()\n#...\n```","range":{"startLineNumber":115,"startColumn":0,"endLineNumber":129,"endColumn":18},"embedding":"AIAtPADgZ70A8Kw9AGALvQDgVL0AIIq9AIBjvAAAarsAoAa9AADsOgAgWz0A4Ho9AKALvQDga70AgCg8ALCYPQAAaL0A8KQ9AACkOgCAHD0AAHM8AAAGuwBApTwAYFy9AABiuwDA87wAAKk7AKBZPQCAiT0AgIG8AADPuwCAl7wAoKy9AECUvACAgb0AgDi8AADLOwDAtjwAIDq9AIBovAAgJT0AoEq9AEAUPQDgpj0AAEs9AEDwPADA6zwAQMO8ACBgPQDgSD0AQBy9AIDCPQAA9DwAgBE8AIBBvQAgsz0AwNu8AADyuwAACDoAgFC8AMCVPABAKr0AAIM7AICvvACgl70AAPa8AAA5vACAVLwAgKk8AICUvAAA4bwAgAg8AIASPADgIL0AAIe7AADYvACAazwA0JE9AOAsvQBQm70AgLu8AICUPAAAW70AAFs8ANCCvQBQjb0AoG69AOAnvQBgDz0AAK68ACA+PQAATDsAEKy9AEAEPQAANbwAUIw9AAADPQAA870AACW8AED8vAAA9LwA4Ds9AADVuwAAuTwAgC08AID6vAAAo7sAADk8AAAmvAAAXD0AABa8AABpvAAAxjsAIEs9AICOPACA/LwAwNQ8AAAZvQCAHzwAQIS8AGDXvQAACD0AgAm9AOCLvQAAXL0AAOy6AJCmPQAgy70AoBq9ACASvQAArrsAwIS8AACnOwBAj70AgKO8AMCmvQAgVb0AYHc9AAC3OwAAnjsAAJA6AEB2PQDASj0AgCm9AEBZvQAQmz0AMLS9ACBlPQCAhbwAQEE9AIAOvQAAST0AAB+8APCJvQBgXb0AwBm9APCSPQCAFz0AAGk8ANCHvQDgDD0AwIQ8AADOOwBAVD0AwLO8AEDnPACgl70AQJK8AOCXvQAQk70AQJg8AACNvACAfDwAwL+8AABtPQAAKrsAwMS8AEBqvQCgG70A8KC9AAD5vABAurwAAE28AACxvAAgzL0AgIS8AEDyPAAA3rsAADa7AOANPQAAAzwAgNQ8AABxPACA0LwAgPY8ADDHvQBAfD0AYBG9AMCVvACAWbwAgGO8AEDrPAAA5DsAgFc8AAAquwAQir0AgBw9AAB4ugAAa70AAI27AEDiPABANT0AgOG8AACQOQDAX70AgCQ8AAClOwCAmDwAgBs8AMDvPAAAgLsAgAg9AMAnPQDgOz0AQEu9AIDKvADgOj0AwG29AEASPQDgPb0AAMq7AIA+vAAARDsAAB48AIAbPADwlb0AwLI8AOAjvQAASLsA0Mg9AIA0vQDAQD0AAKw7AAAMPACAVj0AAHC7AABrvQCAXL0AwB89AABOPABACL0AgD08AIDevACwEb4AAPa8AGAPvQCgaL0AsJi9AOBZvQCABjwAQJa8AIBKPQCwmL0AACi6AADDPAAACbwAgAM9ACAgvQAAXr0AAOw8AJDWPQBAijwAsIk9AIAyvABgZ70AwGQ9AICBvABgPj0AMIQ9AAB4vACAjrwAALA7AOANPQCgdD0AQB+9AIA8vADwnb0AAI88AMCQvABwnL0A4CE9AEAAvQDAED0AAKE8AABQOgAAxrwAwB29ALCvPQCA6rwAMNK9AEAxvQBgE70AAPU7AKCTPQCAy7wAQJc8AMD7vACAFD0AoH89AABNPADAHL0A4Fa9AKCpPQAAHrsAQF+9AAA3PABALj0AwJg8AIAHPQAAOrsAYIi9AKA1vQDAlTwAANs7ACBFvQAAsLsAgC28AOAuvQAgRD0AACg7AIAYPACgPb0AQIA8AECNPAAAEjsAgAU8AADOOwCgRT0AAF+8ACAQvQBgCb4AwCW9AEDmPACAebwAQF89AAD4OwAAxTwAwDw9AECbPADANL0AAHG8AEAnvQCARzwAwBg9AMD9PABgEr0AICm9AEADvQAA4DkAoAQ9AEDNvABAdj0AYIM9AACwuwAAfDsAAFQ8AOApvQCA9jwAAGw8AEAsPQAAwDsAAPS7AIBHvQCAX7wAgMK9AMAAvQDAwj0AwOw8AGBzvQAA4DoAgGc8AIAcPABgED0AoE29AIAwPADArjwAgDu8AEDIvABA9bwAwJU8AAAQvACgs70AgEm8AABDPABgID0AIDU9AABbPQAAsjsAgLo8AICmPACA8rwAIFG9AECPvABA4LwAAHA9ANCSPQCABTwAgG49AIBwPAAAKjwAICg9AJCVvQCATrwAkMO9AACYvADABL0AQJa9AED+PACQgL0AkMM9AABKOwBAtrwAwD69AEAJvQCgbr0AkJU9AAB0OwBA8rwAAIa7AIDMvADAGr0AQKu8AAAmPAAAeD0AwP88AACCOwCAw7wAAMy6AMDzPACQmL0AQB29AACuvADgJb0A4D29AIA+vQCAMDwAIHO9AACpuwBAirwAIGm9ALCMPQCAC7wAQB+9AEDyvAAALzwAQI+9AABHvACAOLwAQIE9AMBgvQCgcz0A4B+9AABFvQCwlT0AMLW9AIBFPACALTwAAJm8AFCcPQAAGjsAwDg9AGAsPQBgHT0AAAW8ACAevQBAzrwAoBM9AECyPQBgkr0AYEO9AACqPQCARz0AQL29AADKvACQ2T0A4CI+AADJOwCAv7wAQIS9ACAVPQAAmb0AQJM8AIBWPABAgbwAACo7AIDuvACARb0AwJC8AEBsPQAApzwAAHq7AIBBvQAAPz0AwM+8ACB+PQDAxLwAALc7AACCOwAAMjsAAIO7AOAfPQBg1D0=","chunkHash":"048bead1b57e6d26a8dc13fffc05a21befdb5b2308bd9f99fd401a528b11f82a"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef main():\n    parser = argparse.ArgumentParser(description=\"Test compatibility with DeepGCN model\")\n    parser.add_argument(\"--root_dir\", type=str, default=\"data\", \n                        help=\"Root directory containing the samples\")\n    parser.add_argument(\"--class_csv\", type=str, default=\"chromatin_classes_and_samples.csv\",\n                        help=\"Path to CSV file with class information\")\n    parser.add_argument(\"--precomputed_dir\", type=str, default=None,\n                        help=\"Directory with pre-processed meshes\")\n    parser.add_argument(\"--sample_id\", type=int, default=None,\n                        help=\"Specific sample ID to process\")\n    parser.add_argument(\"--num_points\", type=int, default=1024,\n                        help=\"Number of points to sample from each mesh\")\n    parser.add_argument(\"--batch_size\", type=int, default=2,\n                        help=\"Batch size\")\n    parser.add_argument(\"--visualize\", action=\"store_true\",\n                        help=\"Visualize the processed data\")\n    \n    args = parser.parse_args()\n    \n    # Prepare sample IDs if specified\n    sample_ids = [args.sample_id] if args.sample_id is not None else None\n    #...\n```","range":{"startLineNumber":132,"startColumn":0,"endLineNumber":152,"endColumn":0},"embedding":"AICUPAAgEr0ASAo+AKCCvQDgOL0AoBe9AIBYvQAAELoAQGa9AACbvABAqzwAwIo8AACQvAAAXL0AAPC7ACBPPQDQgb0AQAs9AEAqPQCAkz0AYK49AMAyPQCAuzwAwCK9AAB9PAAAO70AAEA5AOA2PQBQhz0AgJm9AEDbPACAhrwAUKC9AEDXPACwqL0AAF47ACAePQBgZD0AQFq9AAB4uwBAVD0AENq9AADXOwAAgT0AALC8AIBjvAAA4TsAQJe8AGAzPQCA3bwAANa8AFDLPQBA37wAQMm8AICuvADgfz0AgIi8AICKvABAqLwAAEG8AICcvADgNb0AgM+8AIA5vAAgT70AACa9AIDTPACAQjwAgDC9AIBAvABgSb0AAN67AIChvACQzb0AgI+8AMDTvAAAr7sA4IE9AMDAvACQpr0AAPQ6AKA0PQAAZDwAAAG8ACAqvQDgGL0AEIm9AMAkvQAAWDwAAEa8AEA/PQDAjDwAQIi9AAAPPQAAnTwAgEO8AIAOPQBAwL0AAHG8AIA9PQAAiDoAwAg9AECvvAAAJTwAAEA8AKBivQAAHjsAADw7AMApvQAAGT0AgAC8AED2vADAozwAAMc7AICdPABAa70AAAY8ACAIvQDAnbwAAHg6AFC4vQAA0rwAAFc8AKB1vQCAKL0AAAA7AKAAPgBAXb0A0Iy9AACNvAAAnTwAoAa9AIBwPQDgUL0AoEK9AIA/vQCA2L0AAOY8AED4vACgGD0AgEy8AGBXPQAAMTwAgHc8AABdvQDQvD0A4KC9AMCaPQAgob0AACE9ACAkvQBAhjwAAFa8AFCavQDAvLwAAMu8AECtvACAcj0AoD09AFC2vQCAzzwAEJM9AAD8PACgMD0AAJS6AIB3PQBglL0AwKU8AGCRvQAAxbwAoFo9AAClOwCAGrwAQK48AAD8ugAAHb0A4Hq9AIDJvAAAc70AcKO9AMBIvQAAarwAgDC8AADJuwAQ2b0AQJy8AIAiPAAAsDsAgL28AAAvPABAID0AgBA9AEDLPADgDL0AgJ48AGA8vQCw7D0AICC9AACTvADAgDwAgHG8AIAKPQAAt7sAgDe8AADgOgAQk70AQII8AABSOwCA5LwAABo7AACOOwAAnLsAAPG7AABFvABAQL0AAHa8AGBNvQDgDL0AACw8AAB4PQAAbTwAwJc8AMCZPAAgbz0AAGi8AIBlvAAAAD0AwEO9AIAUPAAABDsAABQ8AABLvADAmrwAgD08AMDRPAAgpL0AIFU9AABcvQAAhbsAsKI9AECUvQCgqz0AAB08AAD0uwCAxjwAAI+7AIAEvQAw3r0A4A49AADIPAAAErwAgLI8AMA1PQAQ9L0AAKG8AIBevACAG70AAHO9AECGvQDAibwAID29AIC8PAAAELsAgBC8AIAVvAAAPzwAAKs8AAC4uwBA/bwAwCy9AGCtPQAAFLsAkIo9ACAbvQAQwb0A4F49AIBKvABAdD0AIFs9AICkvACAh70AgJK8AKAzPQAgZD0AAFU8AGBDPQCQir0AAJc8AIAPvQDA5bwAAPs7AED2vAAAGD0AAMQ7AADAOQAAer0AoCe9AHC1PQAARrwA8PO9AAAWvAAAsDwAADq7AIC0PAAAmDwAgAq8AOAzvQDgLj0AIG09AIA9PQCAmL0AgBW8AADhPACAorwAACC7AAAPvAAApLwAgKQ8AMCNPQCgID0AgMC8AGArvQCAHTwAAJg7APCTvQAghD0AoBI9AAA2vQAAxzwAAJ08AIBKPQCgAr0AAHE8AIDPPABgHD0AgIM8AMCSPAAwhT0AACg6AMAcPQBg2r0AgG68AECfPAAA4DwAgFc8AKCtPQAA7LsA4FA9ADCxPQDAbL0AAPY7AEApvQCgGr0AgAK8AKBsPQAA0rsA4KK9AAB7vAAAUj0AAKM7AIBgvQDgED0AQFY9AIC7vABgGj0AgDM8AICNvQCAITwAAOC6AOANPQAAGLoAYII9AAAAuAAAILsAUMy9AECUvACAEz0AYEQ9AEDWvACAXzwAgGA8AICdPAAALjsA8JC9AICKPACATjwAADK8AICYvAAQjL0AAAM8AIAQPQCAv70AALq7AIANvAAABLsAgBI9ADCvPQCAXbwAoEg9AAD0OwCAdLwAAC67AKBqvQAA+TsAgFo9AOA0PQDgWj0AkLk9AIBiPABABL0A4AM9AGA5vQBA4TwAwIO9AIB3PADQh70AsL29AADePACAHTwAAMc8AAAFPQAAMDsA8MW9AECxvABA4LwAgFk9AEDJPACAar0AYCE9AMC4vADAGb0AgEY8AACfPABwmj0AAJo7AADEuwAAcrwAQB49AACnPAAAZr0AADm8AACWuwCAjLwAgGc8AKBPvQAAJrwAwEm9AADkOwDAG70A4CS9AIBQPQAASr0AADA7AAAMvQCAnjwAQD69ALCiPQAANLsAYNo9AOAbvQBAoz0A4GG9APDBvQCA3zwAICu9AIAmPQBAgj0AIB09AOALPQDA8rwAIBI9AICkPABA9bwAICy9AIAkvQAgU70AgAU9AEBAPQBA0LwAwBa9AECVPAAAPjsAgJi8AMCJPABQgj0AMBk+AABLvQAAjDsAALO8AIAXPQCwpb0AwOc8ACA9PQCAhrwAQAc9AEDIPAAAT7wAQCK9AABwuwCgAT0AQAm9AACWPACATD0AADU9AAD9OwAwj70AAJS7AADcugAAkDsA4CW9AECTvACwjj0=","chunkHash":"a22ff988c24091f0f3ca72361eb7878b99bbfcdfd4a469b90ef2f0e47e555148"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef main():\n    #...\n    print(f\"Loading data from {args.root_dir}\")\n    \n    # Create dataloader\n    loader = get_mesh_dataloader_v2(\n        root_dir=args.root_dir,\n        class_csv_path=args.class_csv,\n        precomputed_dir=args.precomputed_dir,\n        sample_ids=sample_ids,\n        batch_size=args.batch_size,\n        return_type='pointcloud',  # We need pointcloud data for the model\n        num_points=args.num_points,\n        cache_dir=\"data/mesh_cache\",\n        num_workers=0,\n        debug=True\n    )\n    \n    print(f\"Dataset contains {len(loader.dataset)} samples\")\n    \n    # Process a batch\n    for batch in loader:\n        # Display batch information\n        print(\"\\nBatch contents:\")\n        for key, value in batch.items():\n            if isinstance(value, torch.Tensor):\n                print(f\"  {key}: {value.shape}\")\n            elif isinstance(value, dict):\n                print(f\"  {key}:\")\n                for sub_key, sub_value in value.items():\n                    print(f\"    {sub_key}: {sub_value}\")\n        #...\n```","range":{"startLineNumber":153,"startColumn":0,"endLineNumber":182,"endColumn":0},"embedding":"AAD+PADA4rwAwA4+AKCIvQDgar0AgO+8AADNvACABD0AQIy8AACivAAAdLsAgHI9AEAwvQAAi70AYAq9ABCmPQBAOr0AwPs8AECLPABAdz0AMJ09AGBnPQDAKj0AAMS8AICEvADAubwAAIu7AEB0PQBAej0AMKi9AIBBPAAArrwAILS9AMBAPQAAe70AgCg8AGBrPQBgST0AAO28ACAnvQBgcj0AcJe9AMCSPADgPz0AgGO8AOBtvQAAIbwAALi7AICiPAAAELwAAPS7AJCvPQCAgbwA4Ce9AIDbvAAAGj0AALC6AIBFvAAAm7wAQLe8AECrvACAarwAoEW9AADLuwAA9LwAoJC9AOA9PQCAHLwAIHy9AADEuwCgIL0AAB08AMDZvABAvr0AgHa8AHCRvQDA2zwA4F49AAAGvQDgcL0AABy7ACBaPQDAnTwAQOC8AAA9vQDAUb0AkIi9AIB8vQCA0jwAwBa9AIDGPAAAkDwAwEW9AEBcPQAAoTwAALK8AOAPPQBg6b0AgGq8AMDWPAAA2DwAwPo8AIBIvACAOLwAgGo8AGAuvQCAPjwAAB+8AADeuwCARj0AAA+9AICzvADA9jwAoAI9AACDOwAAKLsAQHE9AEC5vAAAiLwAgNG8AIDMvQDAubwAAPo7AHCPvQCgVb0AAMC5AHDXPQAAXr0AgDy9AMCovAAAujsAwMW8AIA7PQBAbL0A4Aa9AACGvQCwiL0AQJU8AABMPADA7jwAgBW8AMBCPQCAHz0AAJG7AGCpvQBgaT0AwFW9AIBFPQDAYr0AQJo8AAAUvQAAbTwAgDg8AABfvQCAOLwAQPa8AACIOgAAZT0A4BI9AIC0vQCAlDwAoCs9AAAKuwAApTsAAAW8AOAjPQDwkb0AAJW8AHCmvQDASr0AYGY9AABePADAi7wAAPI7AACbuwCAq7wAMJO9ACA7vQAgI70AYOm9AIAivQAAqLoAwLo8AACBvABw4r0AgKO8AADKOwBA1jwAADO9AMDjPACAQjwAMJU9AMCDPAAAT70AALY7AKBXvQBgwT0AQKu8AADsOwAAPTwAgGg8AMA5PQAAmDwAAPK7AED2PADwi70AANq7AEDgPAAAdL0AAPW7AAB9PAAAAj0AQMC8AIATvADgJ70AAGU8AKAvvQAAXDsAAOG7AEBDPQDAkjwAMIc9AKBBPQDAWj0AQIq8AABCuwCANzwA4Hu9AABMPQAAgTsAABg6AOBXvQCAe7wAAKo7AIBCPAAwl70AgP48AABVvQAA4rwAUMI9AMCSvQDgjj0AQL88AABNvABAnzwAgFe8AEDLvAAgjb0AgCM9AIAZvACAgTwAAO67AGApPQCwzb0AwNO8AEBKvQBA1bwAYD69AEDfvAAAOLoAMJm9AECKPAAgMr0AgFw8AICNPAAAtLwAwLs8AACFvAAAlrwAgKy8ACCvPQAAFrsAsLo9ACAPvQCgh70AwE49AIBmvADgdD0A0J49AIAZvQBAA70AgAC9AMC2PAAQkD0AgGc8AIAVPAAwm70AALc8AADYvADAy7wAAOE7AGBgvQAAYTwA4AE9AACevABgJb0AgDG9AKCfPQAA/LsA0M29AOBRvQAArLsAAPC6AEAKPQCA/TwAwAa9AIA/vQDAeT0AAEk9AICxPABwnr0AgEu8AMCQPACALDwAgMi8AABMPAAAybsAgEE9ABCKPQAAmDoAgOG8AIApvABAgLwAgBa8AKCyvQAA9TwAQPM8AHCIvQCAsTwAAEO8AGAMPQBgCL0AAAI9AEC1PADAvjwAANo8AICVPABApT0AgJs8AAA+PACgp70AAJi7AAAquwAAZjsAwAw9ACA7PQAA0zsAIBU9AABDPQCAXb0AgDe8AKAXvQAA87wAAEY8AEATPQAAmzsAAPO8AEBwvQBgqT0AAKu7AMALvQAA9jwA8JM9AIDfvABArrwAQCs9AGBYvQCgRD0AAOI7AIBlPAAAnjsA0KI9AMDwvAAAETwAcAW+AMCFvABgaD0AQAo9AICbvAAASDwAQFE9AMCFPAAAVrsAgBG9AABSPACAAj0AgN+8AADSvACwlb0AAI27AGBOPQAwu70AANq7AADIOgCALjwAIHE9AHCHPQAAl7wAYDo9AIAuPAAAVzwAAKS7AEAevQDAxTwAoEw9ACA2PQDAKz0AQGA9AACsugAAr7sAYFE9ACBkvQBA0DwAoJi9AACDOwAgdr0A4M69AEAvPQDAIr0AoDI9AECrPACAbLwA4LC9AAAmvADgGb0AMKY9AOAZPQCgP70AgEY8AAAwvQBwlb0AwAO9AEDVPADAwT0AABQ7AIB8PAAA67wAYDw9AOAuPQDQg70AAMi7AABcvAAAVbwAwKu8AOAvvQCAwrwAABK9AIC4PABAh7wA4CG9ABCQPQDAorwAAKI8AABMvQCAkzwAQEm9AMCPPAAAkLoA0Mc9AIBOvQCwlT0AIGK9AACpvQCAWDwAoDi9AADKPADQlT0AQAQ9AEBnPQCAnrwA4EY9AAAPPQAAw7wAQJm8AMA2vQAAdr0AwJY8AABIPQCgIb0AgHu8AOA6PQBA5zwAoKW9AACOuwCggD0AmB0+AIC7vABAyTwAIAS9AAA2PQCQy70AgAc9AGB/PQCAZbwAQPo8AACpuwCAKr0AAKu8AIDFPABAzjwAYBq9AAD+OwDADj0AwPw8AECZPACwk70AAIe8AICZvADAqDwAwE69AIAdvADg3T0=","chunkHash":"639ba9005c4809449d9bbfb9b40ef4cb386ff6d816933b8e82a33537d4d328b1"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\n#...\ndef main():\n    #...\n        # Test compatibility with DeepGCN model\n        print(\"\\nTesting compatibility with DeepGCN model...\")\n        is_compatible = test_with_model(loader)\n        \n        if is_compatible and args.visualize:\n            print(\"\\nVisualizing processed data...\")\n            visualize_processed_data(batch)\n        \n        break  # Only process one batch\n#...\n```","range":{"startLineNumber":183,"startColumn":0,"endLineNumber":191,"endColumn":39},"embedding":"AABzPAAgUb0AQN49AKByvQDgRL0AgCO8AICNvACA1TwAIGK9AECFvAAgKD0AQDA9AGAwvQBgKr0AQDW9AADjPAAQor0AQHE9AGAHPQBgGj0AEI49AEBnPQAA/DwAACC8AOBIPQCAYb0AAJc7AECqPQBgTj0AQCO9ACANPQDA37wAYM+9AAB+OwAQor0AgHY8AIDWPADgDj0AoA29AMCyPAAABz0AUL69AIA3PAAQmT0AgKC8AEDXPABAxzwAAJw6AACfPAAAoDoAoFy9ANCOPQAAGjwAAOq8AAAVvQCgPz0AgJO8AADxvACAS7wAAF67AOAdvQCArrwAgC68AMDBvABgj70A4IO9AICdPAAAPDsAYDO9AGAPvQDAab0AAMI7AADMugBAfr0AgNi8AOAuvQCgQj0AUIc9AAApvACAob0AQPa8AIBzPQAA/LsAAKg6ACA1vQBA/LwAEIm9AABpvQAAWjsAAMy8AGArPQCAmjwAAEe9AGAOPQAAsjwAAMU7AGAXPQDQ3L0AAFK8AAA0PACAhLwAQOs8AEBEvQBAozwAAEM8AIBkvAAA2rsAAOA5AMDcvAAgRj0AoBC9AADEugAAMjwAwDc9AACtvABAZr0AAGI9AGBpvQAA2bsAgFu8AKCbvQAAaDoAADg6AKCmvQBgOb0AgHE8AGDUPQAwiL0AsIW9AMC/vAAA8LkAAKC6AIAvPQDAFr0AwB69AMCavQDQp70AQPw8AKBfvQCAQj0AAGq8AMCSPAAAJrsAAGy7AMBLvQBQmj0AwEu9AOAiPQAAfL0AAF48AABavABgDz0AQKu8AFCGvQCwjb0AQLm8AMCVvAAAcT0AEKI9AHC7vQAA1DwAADg9AIBKPACgdD0AwK28ADCWPQDgeb0AQL08AABBvQCACrwAULw9AAAtPQAQpL0AAIO8AAAXPQCgML0AMJy9ABCRvQAAHb0AoJq9AIC2vAAAQDkAAKC7AADRvABw770AACK8AECVPACAYbwAwBq9AAD8uwAASDoAoHM9ACBWPQDArbwAQBw9AKBdvQDwsD0AQG+9AIBIPADAmrwAgL68ACBGPQCAiDwAAF+8AIA1PQDQqr0AwIc8AMA1PQAATb0AADg6AIC+PAAAejsAAMe8AMClvAAAZrwAgL28AMA3vQDAobwAAPI8AOBIPQAAVLsAwGI9AIBTPABA1jwAAKm8AACguwDA6zwAIF69AAA2PQBAxbwAAO87AOAMvQCALLwAgBU8AIAlPQBw7r0AAK48AOANvQAAvjsAIHc9AGALvQDgxT0AAEU8AKAGvQAAmTsAwO28AICEvADQo70AAAO8AICiPAAAgDkAAGS8AIB1PACAyr0AAKe7AIA9PADA1LwA4Ii9AAASvQAA97sAIA69AIBWPAAAgLgAQMW8AEDUvACAgDwA4CY9AAAIvQCAAb0AwL28ABDUPQDAibwAUJk9AAClvAAQjb0AYB09AABPPADAPD0AQFw9AMBavQAAXr0AAHi8AOBjPQAAaj0AgLS8AACtPADwrr0AwKQ8AKACvQBAmbwAwOM8AACwvACgJz0AgIE8AICMPAAA3bwAgBC8ACCuPQAABbwAQLa9ACAuvQBgND0AwIS8AIAXPQCAFrwAAHA7AOB4vQCwhz0AYDQ9AKBGPQAwnL0AQJe8AABhPQAAJjsAwPq8AIBrvAAgNr0AYB89AABDPQCACjwAAIG7AIBivAAAADsAgGg8ANCQvQAANz0AAFg8AAA9vQAAXDwAgCo9AKAPPQAAnrwAgPs8AMDtPAAA6jsA4CM9AMCzvACwrj0AAKQ8AICSPACQDL4AAJC6AICFPACAarwAQKA8AOAKPQAAgDsAAEE9ABCbPQDAa70AAEk8ALCKvQDgOr0AgE48AAAVPQAAsLkAgEu9AOAMvQDAfz0AwLk8AACkvABgKz0AQDo9AADkOgAAarsAAMw6AOBRvQAAFzwAADG8AIDrPABAurwA4Jc9AACxuwBAjzwAcMK9AABRvAAArzwAgCI8AIDlvAAAKLsAANs8AECXPACAlzwAMIG9AAAGOwDgPz0AQM+8AKBcvQBQgr0AAHW8AOAfPQAA6L0AgD+9AAAjvAAArTsAwOA8AMCYPQAAKbwAoIo9AAC3OwAAQrsAADm8AIAXvQCAsTwAgD89AGBoPQAgOD0A4CI9AAAUvACAdzwA4DA9AMBwvQCAVDwA4H+9AACIuwCQgr0AIDK9ADCFPQAgKj0AQCU9AACgPAAAmrwA4GG9ACAjvQBA6bwAADE9AECoPAAAib0AgBs8ACBkvQBgbL0AgFQ8AADLPAAgLj0AwA09AIASPQAA5bsA4G49AEC3PABQlb0AQJm8AADwuwAAgrsAYBu9AGCCvQAABzwAYH+9AIA5PABA0LwAAGa8AEAnPQAAAr0AABG9AABkvQAAhbwAYDi9AHCYPQDAtbwAkOA9AMD9vADglj0A8K29ALDbvQCAIT0AABO8AIAdPQDAmz0AAN47AGAhPQAAHLwAQC09AEARPQAAKrsAAJG8AADZvADAPL0AAFi7ABCbPQBgLL0AQGa9AIAQPAAgDz0AgE69AACZvABAUz0AcD8+AEAUvQAAyLoAQFW9AAAqPQAgQr0AYCo9ACAAPQBAmrwAwK88AAA/vACAVLwAwMG8AAAnPADAuTwAwFC9AABwPAAAcj0AAD28AICYPACQk70AANK7AABOOwCAUTwA4A+9AACuuwDgmD0=","chunkHash":"c68b6b009961c5650350f114f01426efbf28100fab55b63e251b0abd61eb7c73"},{"text":"File: `dataloader/temp/test_deepgcn_compatibility.py`\n```python\nimport os\nimport sys\nimport torch\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom mpl_toolkits.mplot3d import Axes3D\nimport argparse\n\n# Add the parent directory to the path to import mesh_dataloader\nsys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))\n\n# Import dataloader\nfrom mesh_dataloader import get_mesh_dataloader_v2\n\ndef create_mock_deepgcn_model(in_channels=6, channels=64, out_channels=64):\n    #...\ndef test_with_model(dataloader):\n    #...\ndef visualize_processed_data(batch):\n    #...\ndef main():\n    #...\nif __name__ == \"__main__\":\n    main() \n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":195,"endColumn":0},"embedding":"AMDFPAAA9LwAwMg9AEBlvQAgJ70AABG8AIDEvAAAh7wAwKC8AIC7vACgLz0AwD09AIBovABwlb0AAL07ALCHPQDgbb0AgLw8AADPPABgJD0AoAs9AKCzPQBADj0AwBK9AMDmvADAP70AAAw7AOBIPQBwkT0AgB28AABwugAAKLsAAL+9AAADPAAwj70AAEq7AMChPABAOD0AYA69AEDQPACgSz0AUL69AACvPABgxT0AABw7AMCavACAcDwAQMu8AOBuPQAAD70AwMq8AKCMPQAAmLoAgHC8AKAUvQAgNj0AAJS6AIDevACARTwAQNW8AMAovQCQib0AwAG9AICxvADAGr0AoHS9AABNPAAAEbwAAC28AMC5vADAp70AgDU9AADhuwAwv70AAN47AGBCvQAApTsAgMc9AOAEvQCAS70AgO28AOBVPQAA5jsAYAQ9AOByvQDgML0AAJu9AAB8vAAA/bsA4D+9AOAGPQCAErwAoFu9ACA1PQCAtzwAQKY8AAAlPADgwr0AgLg8AABGuwAADzwAgAQ9AIAWvADAqj0AYBM9AEAAvQAAZDwAgDI8AMCjvABwpz0AAGC7AABWuwCAejwAgAw8AEChvACAGr0AoI49AADyvAAA1DwAwOM8AJCavQAASjsAYEY9ABC9vQCAALwAAGw7AECzPQAgar0AwCW9AEAOvQAAIDwAAIE7AEAQPQDgj70AoAm9AOAzvQAAgL0AgAk8AIChvACQtj0AABS9AEDiPACAcjwAgHi8AEA9vQBAOT0AQBi9AKBiPQBAorwAYGg9AABovQDABz0AgJk8AIDjvAAAgLkAoGu9AADGvADANj0AwD49APCbvQAAUz0AoIg9AIB3vABgdz0AAKc7AGDmPQDAx70AQIW8ACCBvQDAHr0AgFQ9AIDMPAAAfLsA4Eu9AMBEPQBAAr0AIHi9AOB5vQDAR70AgK+9AGBLvQCAyjwAALC7AMD0vADgo70AgKO8AEAuPQDAnzwAQJg8AKBCPQDAtTwAwAo9ACA/PQCgM70AgIo8AMBbvQDgvj0AALS8AIClPACAjLwAACs8AGCOPQDA2DwAgB29AADiPABAj7wA4Dm9AACauwAABr0AgJC8AKAXPQAAgLsAAGw7AAADPADAprwAgMG8ACB4vQAA3rsAAGS7AKAEPQBAJj0AYEA9AADOPAAAFDwAAHC8AACduwBAmDwAwE+9AECfPAAALjsAwIe8AADHvAAAgLwAACI8AIACPQBggL0AALe7AICAvAAAJ7wAwFA9AACzvACAaj0AgCk8AIB3vADAujwAAC88AMDgvADwk70AAKc7AADAOgBA8zwAAKI8AADUPACQtb0AgFq8AAB9PABASL0AgGe9AIAtvQAACjsAoE+9AIC2PACgDr0AgJA8AABiOwAAALkAAAO8AADbuwAAPDsAwNe8ACDgPQAAw7sA0IM9AACPOwAAwL0AgO88AACjvADA9DwAsIg9AMCUvABgCL0AAAW8AICfPABgaz0AgNK8AICuPABgc70AIA09AIDNvABgRr0AwIk8AEBUvQBAhrwAAO27AEAMPQDgab0AAAq9AMCmPQAAvrsAELC9AACFuwCAWzwAwJw8AIC/vAAAejsAABy8AABSOwCwoz0AUJA9AECDPADQib0AABA8AMDWPADAgDwAADC7AICKPAAAg7wAwIM8AHCZPQBAiDwAYGe9AMArvQAga70AgBG8AHC/vQBwhz0AwIw8ACBDvQAAdjsAgAM8AECmPADAlL0AUIU9AICMPAAART0AACs8AADwugCAjT0AAKI8AABgugCgzL0AAGe8AAAeOwAgLr0AYFU9AOADPQAApTwAwPQ8AHCQPQBAwrwAADy8AAACvQAA7LoAgBO8AEDpPADA0jwAgAK9AKBkvQDgXz0AwIs8AOBBvQCgQz0AcIM9AACXuwAAGDwAAKI8AIBLvACgTD0AQKC9AMALPQAA3TwAoCE9AABovQBAhzwAgMa9AIByvABQoj0AAJo7AACJvAAAwbwAIAA9AIB7vABgCj0AgHq9AIAMvACAdzwAAGw7AHCEvQDAbL0AwKw8AGBnPQBQh70AYA29AOANPQCAWDwAAOQ7AFCGPQAALbwAgEI9AIDOPAAA/DoAAGC8AGBlvQBgNj0AgFo9ACB5PQBQmj0AIJc9AMCpvAAA2bwAIEU9ACDKvQBgDD0AQIm9AMCTPADAmL0AYFy9ACAcPQDAGr0AgFM9AAAEuwBA+rwAANO7AAD7vACgNr0AYGo9AKA6PQCAoL0AIFw9ACBkvQBAar0AgFG9AABQugBQnT0AAGo7AAAAOwCAz7wAgIY9AGAfPQAAVr0AAJA6AIC5PACAfLwAoCC9AFCQvQAAlLsAoDO9AADsOwDA2LwAgA+9AOBtPQDwuL0AAFi6AMBLvQBAJj0AQAi9AIDcPABA1DwAIGY9AGA2vQCgjz0A8K29AIAivQBgAT0AwK48AABKPQCAND0AADe8AIDyPADAwbwAsJo9AACgugBAn7wAIAs9AEC/vADgM70AgIw8AIBPPQAgMb0AMJ29AHCZPQBAnjwAIFa9AIBWPABggD0AEFU+AADdvAAAoDoAABa8AIDzPADgx70AIEU9AMCqPQBAjrwAAMg8AMC9vAAAsLwAAHA7AEC9vABA7TwAoDe9AIAbvADALj0AAHc8AIApPQAAFL0AQP68AAAqvADAyzwAQLa8AAAXvACYAj4=","chunkHash":"39a36055d842978d0fc81b0be746236ad13bb4334ed58936cfed6d1c254fe325"}]},"file:///teamspace/studios/this_studio/model/shape_encoder.py":{"hash":"f54f6255fc5dfafd9139e108d590dd87f45edfaa9950609ddbf5e8f4678523be","entries":[{"text":"File: `model/shape_encoder.py`\n```python\n#...\nclass ShapeEncoder(nn.Module):\n    #...\n    def __init__(self, in_channels=6, hidden_channels=64, num_layers=3, output_dim=80):\n        super(ShapeEncoder, self).__init__()\n        \n        # Initial convolution\n        self.conv_in = GENConv(in_channels, hidden_channels)\n        \n        # 3 × GENConv blocks (DeepGCN)\n        self.layers = nn.ModuleList()\n        for i in range(num_layers):\n            self.layers.append(\n                DeepGCNLayer(\n                    GENConv(hidden_channels, hidden_channels),\n                    dropout=0.1,\n                    act='relu'\n                )\n            )\n        \n        # Global max pooling\n        self.pool = gnn.global_max_pool\n        \n        # 2-layer MLP for final embedding\n        self.mlp = nn.Sequential(\n            nn.Linear(hidden_channels, hidden_channels),\n            nn.ReLU(),\n            nn.Linear(hidden_channels, output_dim)\n        )\n    #...\n```","range":{"startLineNumber":11,"startColumn":4,"endLineNumber":36,"endColumn":9},"embedding":"AADIuwBQhb0AAMS6AMCWvAAAwjwAAOY8AKCPPQDwmz0AgH69AABiuwBAjjwAwBw9AGAEvQCA3bwAgJi8AAAnvAAAdT0AQDI9AADyuwBAoTwAICW9AMCKvAAAVD0AgPw8AAAZPAAAULsAwO88AAAzvABAMD0AgMg8AADouwBgBL0AEJS9AMC0vABAt70AAIm9AABougCAtzwAgHO8ANC8PQBQzD0A4KG9AADGvAAAAbwAABE9AADfOwCAD70AoBm9AIBIvAAAvz0AACa7ALCLPQAAMDsAwNu8AID1vABAdz0AgGI8AMCIvADArLwAAD08AMDIPACAj70AgGI8AGA2vQBAvTwAANm7AHC2vQBAqj0AgMA8AABsOwBA+rwAQA29AAD9uwAAFbwAICY9AMB9PQDgAr0A4J89AADAuwAAdrsAAIE7AACXOwAAkDsAgPE8AOA/vQAAjTsAwOK8AEDrvABgSL0AAN68AECRvABgNb0A4Km9AAA1PQAAFjsAgNg8AGBjPQCAKL0AoDw9AACYOgAgJD0AgHE9AAChuwAAEzwA4FG9AACPvQDQtb0AAPC7ACB6vQAAOj0AwAo9AIA8vACA0jwAALc7AMD1PADANr0AIEg9AIBePQDALr0AQLU8AADCOwCgNb0AADk8AIANvADgEL0AAAC5AADkugDAAT0AAHA6AECSvQAAxDsAIAU9AAA2PQBAib0AwLm8APCjvQDA3bwAEKU9AIAtvACAqrwAgDy8AAB0uwAgLz0AgDg8AIBCvQDAWz0AcNa9AABauwAAILoAgP88AEARvQCAZzwAgPc8AIDXvADQrL0AkL29AMDfvQBABz0A0Jo9AECYvQAAGDsAYBQ9AAC8uwDAxzwAwLO8AEC/PQAws70AAOg7ANCDvQCAjr0AwHs9AAD9OwCANbwAALY7AIAevABAH70AAP68AGAJvgBQtb0AYDK9ALCkvQBgHD0AcJS9AOA/PQDAFL0AIK89AIC3PQAAOLoAsMw9AAA7PAAAM70A4CI9AIBPPQCA1TwAQP88AFCGvQDQoj0AMMO9AKATPQBgRr0AgBq8AMANPQBA/7wA4Du9AMCBPQDw0r0AAJw6AADrvADAdL0AAEC5AIAbPADA0bwAoJY9AEDFvACASb0AQHg9AIDSvACAXbwAAHa7AEAsPQAAEj0AAHO8AECsvABgiD0A4Au9AGATvQAA1rwA4Ie9AIDZPAAAnzwAAL47AADAvAAAQTwAgDC8AIBkvQBA1LwAQIs8AACeOwBgAT0AAOw8AIC0vABAij0A0IU9AIANPABA3TwAYFk9AAD4OwCgRL0AwJs8AICNPABAAT0AQDY9AABUvABAE70AQOy8AAD6PABA2jwAgF+8AOAavQBgF70AcJQ9AACeuwDAvLwAgMk8AAB9PADASr0AwBi9AAASOwDgbj0AAAS9AGCAPQBAyr0AQJa8AGAIPQCAJ7wAQI+8AACfOwAA5DwAIBQ9AEChvQDQi70AQMO8AOAMPQCwpT0AAIG7AOArvQCgbz0AAFo8AECPvQAgU70AAGM9ACAjvQAAPb0AAIA5AABKuwCAALwAAIy6ANCSPQDglj0AwDm9AICDvABgFr0AACA7AMA3PQAgx70AUIQ9AEApvQCAMD0AMKM9AABIvABA2jwAoCA9AEAYPQDA3TwAACy8AAAkuwDAXL0AwMU8AAA6PQCAvbwAgLa8AMDKvACAqLwAIFq9AAC7vADAfj0AANC6AICEPAAAMrsAoBK9AADYugBgIL0AgE88AADQvAAA57sAIEi9AICGvQBgQz0AAG88AABHPACAj7wAgKQ8AMCjvADAYT0AAKe8ABgTPgCAeDwAkIw9AICnPQAAFDwAAOq7AMDsvAAgBb0AADg6AGAYPQAAC7wAAMo7AOA8vQAA3bsAAKC6AICfvQAAXzwAQNE8AABBPABgC70AAAAAAABWPAAAKDoAAJo7AAC8OgDAtTwAwKa8AKA6vQDAoTwA8IS9ACBdvQCAdj0AwJQ8AGBlvQCAAb0AoFw9AIDavABgpz0AgJq8AIAjvAAAzzsAAAo9AIBdPADALr0AoEw9AEDqvADAXr0AAGc8AIAgPABw2z0A4CO9AEBoPQAAV70AACm8AHC7PQBAkLwAgAW9AAAHPQAAp7sAgAC8AAB0vADQ4z0AAAQ9AIAQPQAApDsAgEk9ABCOvQCAD7wAYA29AADnuwAA8bwAAEC6AMA1vQDgWL0AAGk8AEClvACA47wAoD29AAA6uwAAq7sAAPO8AIDkPADQmr0AALy8AMAcvQAA5zsAQL88AACVuwDAhrwAgEQ8AOASvQAwjr0AgPQ8AEARvQAAPjsA4Ea9AGAXPQCgPL0AoHC9AADqvACgNL0AYAK9AGApPQBger0AgEe8ACA9vQBQk70A4HM9AACGOwCAHTwAAFK9ALDuPQDgiD0AgGo9AID5vADAFj0AAEO9AIB3vADABj0AAMO8AAAfvACAmb0AYEW9AMCevAAAfLwAAEo8AADwuwCgBj0AYBA9AICJvAAAtbwAwOa8AABOPADAjzwAIGu9AACguQCA3bwAwDe9AADGuwBAWL0A0M09AMB2vQDQ070AQJA9AACfPACAE70AAA88AACAuQAADLwAAEy7ACCnvQCgt70AYDO9AECXvAAA9rsAMKM9AIBRvAAA87sAACO8AAAAuQCgOr0AAIY7AAAMOwAwrL0AANK7AABQvQAgrz0=","chunkHash":"7a5a89612abc12fd54e8682a7b2ed0ee89230d1df563634b28ed1ce2ffd6fb1c"},{"text":"File: `model/shape_encoder.py`\n```python\n#...\nclass ShapeEncoder(nn.Module):\n    #...\n    def forward(self, x, edge_index, batch=None):\n        # Initial convolution\n        x = self.conv_in(x, edge_index)\n        x = torch.relu(x)\n        \n        # DeepGCN layers\n        for layer in self.layers:\n            x = layer(x, edge_index)\n        \n        # Global max pooling\n        x = self.pool(x, batch)\n        \n        # MLP to get final embedding\n        x = self.mlp(x)\n        \n        return x\n\n```","range":{"startLineNumber":38,"startColumn":4,"endLineNumber":53,"endColumn":16},"embedding":"AECwPADwtr0AALA6AAC6vABAjrwAgB09ADCBPQCg4T0AQCi9AABEvAAA2TsAAIg8ACA7vQBA4rwAQC+9AAD7OwBAxDwAAAU9AIBgvADAmzwAwPe8AACsvABgLj0A4AY9AIAavQBAmzwAoHE9AAD2uwAgvj0AANA8AECCvABAFL0AwI+9AEAkvQDQ1r0AAKi8AADfuwBArzwAwJe8ACC1PQDA5D0AoNu9AMBxvQBAizwAgNk8AGA0vQDgGr0AQCO9AIBgvABw6T0AgE08AHCBPQCAsjwAAKS8AECZvADA7zwAgAM9AMDQPADAHb0A4E49AADyPABgbr0AgBQ8AKAVvQBgNj0AAOW7ANCBvQDAqz0AAP87AIAHPACAabwAgGS9AACAOgAAxrsAACw7AIDkPABA8LwAoOM9AADqPADA67wAgLo8AEA/vQAAVDsAgJ88AACyvADA4bwAQCa9AIDNvAAgdL0AQOY8AABEvAAAeL0A4AG9AGBPPQAAmjwAEKU9AIATPQCA9rwAsKc9AIBevAAA7DsAADE9AADhuwAABrwAAAC9AECFvQCQzb0AQLq8AMBtvQAgFD0AACy8AMBPvQAAFj0AgNY8AIClPADgY70AYBs9AEB4PQBAgL0AgLQ8AABguQAAqTsAoGu9AACxuwDgar0AgJg8AAC0OwBgCD0AgMe8ACBIvQAAbDsAAJO8AOAVPQAgGr0AAFO8AADFvQDAj7wAAI89AICzvACAAL0AALO7AACQvACACbwAADU8AECCvQDgcz0AQKq9AADJOwCAGbwAwKs8AAB8uwAAyTwAQJW8AMAzvQAwpb0AgKG9APCnvQCAQD0AMIs9AKCGvQDAljwAgAQ9AIAWPAAAqDwAQJa8ADCSPQCwzL0AAGi7AEC6vAAwrb0AYBg9AADnuwAgAL0AQIe8AABOPACAurwAQFa9ALATvgBwkb0A4Ge9ACBgvQCgPD0AwNC9ACAtPQBA5LwAwGA9AKB/PQCgED0AwCM9AICcvADgLb0A0J09AOATPQAgjD0AQI48AMDuvACAYz0AQOG9AGByPQDAd70AAOe7AEABPQDAIb0AgEG8AKCfPQAw170AAKu7AACGPABgXb0AAMK8AIA3PACArbwAoEw9ACBUvQDAGb0AwI09ACAFPQAASLsAAA28AABZPQCgMj0AAJO8AABGvADgJj0AQEa9AIA6vQAAh7sA0Om9AAA1PAAAlrsAgPK8AIDxvAAAqTsAgHu9AEBuvQDAyrwAQLQ8AGAPvQAAMz0AIC49ACCgvQBgHT0AQFU9AIDrvACALDwAQAs9AIBdPABAaL0A4A49AICYPQAAxjsAAGU9AACDOwBAorwAAJC8AAAuvADAGL0AYBu9AABVvAAgQ70AQKo9AACnuwAAd7wAIA+9ACBhPQBA+LwAoBq9AMDwvADAAD0AADi8AACzPAAQlb0AoAe9ACA8PQCgFL0AAKA7AIBHvADA+zwAoCc9AFCJvQCgEb0A4Dq9AJCTPQCA7zwAAGA6AFCJvQAA97sAAOi7AABavQDAZ70AkIA9AIAEvABAxrwAAKW7AIARPADAzDwAQKW8AACOPQDwij0A4F+9AIDxPACAHrwAAO07AMD9PAAA2L0AALA7AGBbvQBADD0AYE09AEDvPAAAWr0AgBQ8AICDPQCAsTwAAPu8AAAtPACAHbwAAPU8AAByPADAzbwAwMO8AABYOwCADDwAYHW9AADeuwCAJj0AgBU8AMBaPQDA8TwAgBW9AABnvAAAKjwAAJI7AABavAAArLwAgIm8AEAKvQBATj0AAFo8AADEugCAf70AgE+8AACSPABA6jwAgNe8AIDGPQAAOLoAsJw9AMBgPQAgAL0AACy9AIBZvAAAQLoAwE09AIA0PQAAE70AADC9ACBYvQCANzwAwAK9AOCovQCgNb0A4BM9AMDRPACAk7wAAM27AIAKvAAAjjsAAE09AGAbPQAA6TsAgKw8ACArvQDAmrwAIGq9AGAsvQCA2TwAAB49AIAOvQCAqrwAIDE9AAANvQCgCT0AIFi9AADpOwAA9DsAQJk8AABEOwDQlL0AIFQ9ACCDvQCgs70AgLw8AACsvADArD0AwLe8AMBxPQAghb0AAAI8AJCtPQDAVL0AoBa9AMBHPQBgK70AAJ87AACCOwAgXz0AgC09AADJuwBgNj0AABY9AOA6vQAAYrwAoFe9AIAZvABASL0AAJg6AKBkvQAAALwAwJ88AAAIvADAujwAgIS9AMCcPAAACjsAAEm8AAC0ugBwh70AAHq8AAAeuwAATDwAoAw9AAC4ugCAQr0AwBM9AGAjvQAAx7wAQFU9AAAjPABAprwAgCu9AMCUPAAgc70AoBm9AGAyvQDASr0AYBq9AID0PACA270AgIo8AECOvABgTr0AYJY9AMDUvAAA5rsAQIW9AKAFPgBAYD0A0JI9AACAuACA7jwAoCO9AADguQAASLoAgKi8AAAJPQCgZ70AwA69AMAIPQCAVTwAAIy7AIACvABADz0AAD28AIDDvAAAF7wAANm8AACgOgAA/jsAQIq8AMC4vABAjLwAIF+9AIAePAAAN70AAO49AKA+vQBwlL0AgBo9AAAbPQBAgLwAgFw8AMCOvAAAKLwAANE8AID4vQAgob0AAJe7AABuvAAA8bwAQBs9AAAmPQAAILkAQKm8AMCMvABA4rwAAAw8AAAZPQAgrL0AAFS9AMCRvADglT0=","chunkHash":"c0e4adb2c7fdef24a8c060406081af18c59af462e4e48a990570829ffda063fb"},{"text":"File: `model/shape_encoder.py`\n```python\n#...\nclass ShapeEncoder(nn.Module):\n    \"\"\"\n    Shape encoder following MorphoFeatures paper specs:\n    3 × GENConv blocks (DeepGCN) + global-max-pool + 2-layer MLP\n    Output: 80-dimensional feature vector\n    \"\"\"\n    def __init__(self, in_channels=6, hidden_channels=64, num_layers=3, output_dim=80):\n        #...\n    def forward(self, x, edge_index, batch=None):\n        #...\n```","range":{"startLineNumber":6,"startColumn":0,"endLineNumber":38,"endColumn":49},"embedding":"AKBGPQCAqrwAAAQ8AAAgvQAgBz0AAGK7AMATPQDgtz0AQES9AIB6PAAAKrsAACC5AOARvQAAu7sAgCm9AMDIPADQtD0AAC09AIDwPABgID0AIDW9AACoOwCAnT0AAB48AADvuwAAz7wAoEM9AABkPABQmj0AAPg7AAClvACAF70AcJu9AKAhvQCg970AQAG9AADsOgAAYD0AICi9ACCmPQBgxD0AsMe9AMBLvQCAL7wAIBU9ABCNvQAAIDsAgO68AMDAPADwqD0AQKI8ADCOPQAAAz0AAHA6AIBzPABgBz0AwDg9AEAHvQAgUr0AQOE8AEDoPACQu70AAAg8ACATvQAgHj0AwAQ9AMDPvQCQjT0AoA89AMCfPACAf7wAACi7AABsuwDA8zwAACA8AICsPACgYL0AsMY9AIBGvAAAXjsAAJI7AIBwvAAAeLwAAPo7ACA1vQBAvLwAAB67AABFvQBAdL0AQJa8AAACvABAM70AIJ29AKASPQAAGz0AIIo9AACYuwBgY70AAIU9ACAwvQDA7TwAYIQ9AAC/vACAHzwAQNe8ACAwvQAQor0AYCK9AMC9vADALz0AAGg7AMDyvACAMz0A4AM9AIDBPACABr0AICo9ACCLPQBgJ70AEIM9AADTuwAA17sAYEG9AIBQvABgFL0AAO87AECdvADAo7wAwLC8AKAfvQAA+LsAgMU8AABTPQCAlr0AgCa9AIAFvgAgK70A4F09AABQOwDAtDwAAJW7AIBJPADA1zwAQIA8AEBVvQBgrD0AwJ+9AIASPAAA0rwAgC49AAAcvAAA3zsAQO08AIB2vACQgr0AIG+9AEBbvQDgDT0AQOk8AOArvQAA/DsA4A89AEABvQBA8DwAwJY8AHC0PQA4Cb4AwI88AMBkvQBwtb0AgCU9AICgvABAzbwAwJy8AABQOgAAGr0AAA48APgDvgDwxr0AYCm9AMANvQCgcz0A8Ki9ACB3PQAA9bwAgO08AACGPQBgfD0AUNM9AMD6PADA8LwAcLM9AMCjPAAAirsAgEo8AHCgvQBwmz0AgMO9ACBrPQCgf70AQAO9AIBFPQCALb0AgLa8AOAJPQBA3L0AAA88AABLPACws70AAA47AAAYPABA2DwAgBM9AAC4OgCAPr0A4Ec9AMCgPADAi7wAgBs8AMDxPAAACz0AMI29AACUugCQlT0AQJS8AGBEvQAA9bsAcMG9AMDFPAAAv7sAAD67AIDYvACgBz0AgFc8AAA0vQCAVLwAAOk7AIBhvAAAvTsAQI88AADKvABAKj0AoCY9AIAvPABAHT0AgE49AIAVvADgAr0AADa7AEDuPABAhjwAYAI9AIBdvAAAd7wAAP67AAAcPACAmrwAgNQ8AOBFvQDAv7wAENw9AACeOwAAYrwAgEY8AABQPABAU70AAFu9AAAiuwBgED0AAIm8AADdPABwmr0AAHq8AIBMPABwlL0AAH88AECGvACAJTwAgKo8AOBWvQCAYbwAAJQ6AMBePQDAST0AQNa8AADtvACASTwAAA49ADCPvQCgZL0AQFM9AAAZPADgEL0A4AW9AAB9vADAnzwAgHw8AOB1PQCAKz0AYKu9AIC2PADA0LwAwD09AABeuwBgyb0AAHs9AOCFvQBA2DwAAHg9AEC6vACAMb0AAO27AEC0PAAAzbsAAC29AIAtvACAcDwAwKM8AGAZPQAAxrwAMJa9AACJuwAAiDoAkK29AKAPPQDASz0AAFK8AAABPQAA1TsAAAi6AMCYvAAArLwAgGK8AACAvACA3LwAYEi9AKAqvQAQjz0AALK8AACMugBQ2b0AAAK8AEDfvADAkjwAIEq9APCtPQAAPDsAgIE9AKCXPQAAhDwAIFq9AECYvADgCT0AQJA8AACZOwDAGr0AYC29AIDAvADAg7wAgHK8ACBtvQAAFDsAQPI8AOAzPQAAzjsAAOA7AIAXvAAAsDkAQJw8AACCPAAAQbwAgC+8APCUvQAAp7wAIIW9ACBJvQAA4DwAIEA9AMDwvADwgb0AkI89ACAevQBgZD0AIDe9AECxvAAAajsA4Ag9AAB3PAAgYb0A4Ek9AIC6vAAAPL0AgMU8AMCiPAAgvj0AgLG8AGCePQBAbb0AANQ8AJC7PQAAZ70AQEO9AGA0PQCAFj0AgK28AAC9OwDAkD0AQN48AMDEPABgIj0AIBs9AAC5vQBgBb0AwL28AAAyuwDgX70AAMm7AADdvAAAlLsAQIA8AIAPPAAA6rwAwDC9AADMOwDAorwAQDa9AAAVvACAY70AAGc8AACRvAAAqjwAAMO8AIByPACAdL0AgPY8AOAkvQCAxbwAAAw9AADVuwDAmrwAAPi7ACAzPQBA8bwAgKW8AACIOgDA77wAAJq8AMDaPACgfb0AYAa9AMALvQCgQb0AgPA8AMDovACA0TwAYC29AIgMPgCgLj0AAKY9AIDHvADAZD0AwBO9AACQOgAAEr0AgH69AADCOwCQor0AgJC8AABYugBAijwAgLY8AABFvACAFDwAIEQ9AECyPAAAxLwAgLS8AICLPABAEj0AgMG8AADAugAADDwAAE69AACWPABQk70AMP89ACBZvQBQvL0AQPE8AEBlPQAALrsAAAA4AAC0uwCALLwAIDs9AHCNvQBwub0AwD+9AAAYPACgEr0A4Fw9AACIOgAAgDkAANy7AEBavQCgM70AAMw6AEA6PQAgrL0AQGO9AAAXvQBQiD0=","chunkHash":"4fd959500feaf74fa071189df5bec4a607ffd6111412684d9d838b5ddcb883cc"},{"text":"File: `model/shape_encoder.py`\n```python\nimport torch\nimport torch.nn as nn\nfrom torch_geometric.nn import DeepGCNLayer, GENConv\nimport torch_geometric.nn as gnn\n\nclass ShapeEncoder(nn.Module):\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":5,"endColumn":30},"embedding":"AAC1vABwnr0AgCW8AECwvABAwzwAoFA9AEBJPQBwiD0AIFa9AIDtvAAAZTwA4CY9AADjOwCAcLwAAPw7AIA7PAAAtzsAYC49AAAiuwBgET0AgB08AMADPQAgQT0AgMY8AIAxPADAoTwA4Ck9AABGPQAQrD0AgCY8AACiuwDgKb0AUIm9AADQvABg1r0A4F69AAADPQCAtDwAAJc7ABCvPQCQgT0AYL69AACTuwDA1DwAgCs8AOA6vQCgEr0AgFm9AECqvABgbD0AACg8AEAjPQAA2DsAoHG9AGAYvQCgGj0AgIM8AABuOwAAuLsA4Fc9AADzuwAANL0AwO68AACRvADA3TwAAKm8ADCpvQCwhj0AIAa9AMBMvQCAfbwAAB69AABguwCQl70AABE8AID5PAAAEb0AsA8+AEDyPAAApDoAgOs8AABwvACALjwAoBw9AEDjvACAk7wAUK29AIBKvQAAp7wAgH48AIASPACAEL0AAPq8AHCePQAAtzsAwGg9ALCZPQAANzwAcJc9AID/vACA/jwA8Io9AAAyuwAgOj0AwEm9AKAYvQBATb0AwHy9APCavQCwoD0AAM+8AMALvQBAFD0AAKM8AADkPADAWr0AEJc9AHCXPQBAzrwAANQ7AADQuwAwj70AgCW8ANCNvQCAorwAAC48AECpvAAAQT0AABY8AKAbvQCAQr0AAN28AADTPACgTb0AAMa8AKDDvQDQgr0AYCI9AMCWvAAADjwAwAG9AAD1uwAA/bsAgMc8APCOvQDALj0AgOu9AECSPAAAZb0AgCk9AACLvAAAYzwAgEu8AGAqvQBQlr0A0IW9AKDEvQBgVD0AANk8AAA4vQCAqTwAMII9AAB8OwCgDD0AALS8AHCePQAg0b0AgFw8AADTvAAAdL0AwDU9AACwuwCAP7wAgDA8AACxOwAAIrsAcJK9AADmvQAgu70AUI69AMBjvQBAST0AoHS9ACACPQCAs7wAkI49ABCgPQAgFD0AUIQ9AIAYvQDAXb0AYCc9AOAXPQAAZjwAIDI9AECnvAAQgT0AcKS9AEBTPQCA0rwA4AQ9AGABPQCASL0AwCO9AADwPABAsr0AAKw6AAAAOwBwg70AIAC9AAB2uwBA0LwA4D49AGBevQBABL0AoDg9AEDtPACAOLwAAMq7AOBnPQBAHz0AQOG8AKBPvQDAFT0AAA69AFCDvQCA9LwAgL29AKBXPQCAnDwAAD28AADAugAAiDoAQCe9AIBNvQBAJb0AgLc8AADcuwCAUjwAIHI9AIA1vQCwkT0AwG89AADmuwAAvjsAoCg9AABVPACwlr0AoCc9ALCCPQDA8jwAYAc9AADhuwCAdTwAwKO8AACQOgAAX70AwBG9AIBWPAAgX70AEKI9ACAwvQBA9TwAAO07AMCkvABgCL0AYBC9AEBAvQCA9DwA4BO9AEDYPQCAZ70AABS8AIBaPQAQor0AADY7AMCJvACAUT0AAD49AEC9vQDgEL0AAMW7AIBcPQCA3DwAQI28AAAzPACAyjwAIHU9ACB6vQBgS70AIHc9AADVvAAAXr0AgIK8AAB7PACAiDwA4Ag9AHCFPQBATj0AYHe9AIDBvAAAWLoAgMK8AIB1PACgs70AwNQ8AABkvQBA0zwAsJ09AAByuwAAh7sAQNU8AIBFPQAAZrsAAHK8AABAvQDgKL0AgIk8AEC+PAAAErsAwLi8AEAovQAAvrsAAF69AIA+vQAwBT4AAOw8AED8PAAAGDoAICy9AMCaPAAAarsAgDs9AADdPACgBz0AAAC6ACARvQCgfz0AgG88AADIPACAjrwAgBg8AIBCPQDwmT0AgMq8AKDJPQBAhDwAoGo9AOAxPQDA1TwAAAo7AAB6uwDATr0AwMg8AAD+OwBAh7wAAAy7AAD7vACALz0AAJW7ACDsvQAgBz0AgHk9AECsPADA5LwAgGw8AMDPvACAPrwAgBm8AAA6OwAAcjsAgAG8AKBYvQAAwjsAUKS9AEBNvQCAQzwAwAw9AEAsvQBAzLwAwLA8AKAkvQBART0AUIm9AMC4vAAACL0AAGM8AADSvACgMr0AYFY9AACoOwCgcL0AANo8AIAbPAAQpz0AAMo7AOC4PQCwjL0AgFc8AFCpPQAAG70AgA+9AEC/PACgGr0AAKg6AECwPACAvT0AUIk9AAAAOgDgDz0AMKo9AADOvQAAm7wAAMe7AAB/vACwpL0AAB67AMAOvQAAk7sAAOM7AMCpvACA9bwAUJG9AADNOwCAybwAwJK8AIAmPABgX70AADM8AMAsvQAAh7wAALO8AMDLvAAA8TsAgCQ9AADsOwBARL0AIEU9AECrPAAA3LsA4Gy9AMBKPQCAI70AoC+9AIAEvQDwlb0AgFq9AAC9uwBgMr0AAKM7AABYvABQlr0AwBU9ACA7vQCARjwAYAy9AADUPQBgXj0AsII9AEADvQBgND0AEIK9AEBbvQAAnrsAANS8AABgOQDARL0AgHO9AAB2vAAA5LoAAMk7AIAbPQCAYLwAAFm8AAA6OwAAwrsAABc8AACKuwAAD7wAwMe8AKAHvQAAtDsAgDy9AIClPADAwrwAAPE9AOANvQDAXL0AIGg9AAAIPAAAzrwAgHU8AIA5PACAKrwAAD48AEBJvQDwnr0AwEO9AOAgvQCAPb0AQBg9AAAVvACAFbwAIAe9AMCAvABAI70A4AI9AAC/PACgXr0AgEq8AABqvACQpz0=","chunkHash":"13af1787c0ed92f804c7d2b4dc7b7ab9b801b050d9bf4d8bd51a9b5bf7e6268d"}]},"file:///teamspace/studios/this_studio/model/texture_encoder.py":{"hash":"ef0e9a1e1dc97afa6a4d9ad958de196fd15f32ce26a74e70025559e90da95017","entries":[{"text":"File: `model/texture_encoder.py`\n```python\n#...\nclass TextureEncoder(nn.Module):\n    #...\n    def __init__(self, in_channels=1, output_dim=80):\n        super(TextureEncoder, self).__init__()\n        \n        # Encoder pathway with exact feature maps as per paper\n        self.enc1 = nn.Sequential(\n            nn.Conv3d(in_channels, 64, kernel_size=3, padding=1),\n            nn.BatchNorm3d(64),\n            nn.ReLU(inplace=True),\n            nn.Conv3d(64, 64, kernel_size=3, padding=1),\n            nn.BatchNorm3d(64),\n            nn.ReLU(inplace=True)\n        )\n        \n        self.enc2 = nn.Sequential(\n            nn.Conv3d(64, 128, kernel_size=3, padding=1),\n            nn.BatchNorm3d(128),\n            nn.ReLU(inplace=True),\n            nn.Conv3d(128, 128, kernel_size=3, padding=1),\n            nn.BatchNorm3d(128),\n            nn.ReLU(inplace=True)\n        )\n        \n        self.enc3 = nn.Sequential(\n            nn.Conv3d(128, 256, kernel_size=3, padding=1),\n            #...\n```","range":{"startLineNumber":12,"startColumn":0,"endLineNumber":35,"endColumn":0},"embedding":"ACBuPQDgYL0AQOs8AMBLvQDgFr0AgFk8ADADPgAAQDkAkIK9AAAtPAAAFzwAABs9AMCnvAAATrwAAOS7AACNOwAAoT0AIBI9AMCjPAAAiTwAAAO9ACAavQCAEz0AgHq8ACBGPQAgSr0AAAy7AAD3uwDgaj0AQMO8AMBWvQCAG70AwHa9APCVvQDw+70AAJe7AACbOwBA9zwAAJm7AAAXPQDAlD0AQLS8APCYvQCAvDwAQIS8AAD1uwAgjb0AwNQ8AIDPvADQnj0AwG89ABCdPQAAArsAYDO9AKAPvQAAyjsAAFK8AMC4vACAML0AAFK7ACBLPQCgcb0AAEw8ACBovQBA3jwAQJm8AGB1vQBgaT0AAKk8AIAKPQCA5LwAQHe9AGADvQAA4LoA4MY9AOA3PQAAmrwAQIw9AICMvAAA4bsAgDS8AADFPABAlLwAgPW8AICTvQAALrsAAFg7ACAOvQAAmbsAwI+8AIB8PAAgAz0AYL29AOAcPQCA1TwAAJ48AIDPPABghr0A4Bc9AECjPAAAMDwAYCE9AAAkOwAA0DkAAEY7AOAmvQDAeb0AgCO9AICBvQCASTwAoE09ACALvQCAqTwAwAk9ALCWPQCgh70AAMa7AIAePQCAWDwAACM8AICpvADgDb0AQI68AGB6vQAAEL0AABk8AADLPACAIb0AkJ49AGBcvQBAPj0AACQ7AIASPAAAwLkAwGy9AACbvQCgNb0AYGc9AGBGPQCA1zwAIBW9AECIvAAAXrsAAKC5AABoOwBA8jwAEIm9AACzvACAHj0AgD88ALCDvQAAODwAAFE9AOC4vQAAMr0AAJq9AABVvQCAtj0AYDI9AABdvQAAm7wAAK27AADmOwCADjwAYDy9AECgPABwyb0AAGM8AMCavQAAILwAQOk8AADlOwBA0DwA8IO9ANCJPQBgML0A4Ag9ANAIvgDgbr0AQPa8AEAivQDAcT0AMIK9AEBVPQAAYzwAYFg9AODhPQAA67sAAEA9AAAIOgAwp70A0J49AKBKPQAAHj0AYFk9AOA3vQCAQD0AoBu9AECkvAAgob0AgCS9AMAEPQCA0LwAAPi7AADwPADAc70AAEe8AACqOwDQwb0AACQ8AIBEPABAlTwAYG49AAD6vACgKL0AAEg8AIAWvAAA6zwAgNm8AADJOwDgLz0AsIK9AICpvAAwpT0AAEU8AAB2OwBgWL0AEIq9ALCPPQAAGLoAgAC9AACmvADADD0AgDe8ABCKvQCAxbwAABA9AEDmPAAATTwAQL88AKASvQBAET0AoDM9AIBUPAAA6DoA4Ak9AADXuwDAO70AgIk8AIAkPAAA/jwAIH89AEDZvADgSb0AgCA8AMCfPADA57wAIGY9AEDlvAAAqbsAkOQ9AIBsPQDgmr0AgLA8AIA6PQCA07wAAPO7AADKuwBA6TwAoAK9AMCNPQDwrb0AACY7AAD8uwBgRL0AAIY7AIDcPACAybwAQPQ8AACTOwDAGb0AAFO9AIDZPAAghj0AAF+8AKBYvQAAHTwAAEo8AFCRvQCAhr0AkIk9AAA6vQCAjL0AQLG8AEDqvAAAED0AwPG8ACA3PQCAej0AICO9AADAuQAQrr0AgLE8AADKvADwrb0A4H49AACEugDANz0AYNk9AACbOwDgCz0AIAs9AIA4vAAAhTwAQOs8AADNOwAADjsAgFm8ANDcPQDAmTwAwCK9ABCnvQCAQbwAgEe8AEDQPADgRT0AgJa8AHCKPQAAcbwAACS7AADivAAAvbsAIA89AACQOQBgOb0AANK7AIAOvQDgdD0AQKQ8AMCMvACgS70AAL07APCOvQCARDwAQME8APgKPgAAJj0AEJ49ACCHPQCAmzwAAD68AACwOQAAzjsAQJa8AADvvAAAELwAADK7AAAMOwCAMr0AgAa8AGBbvQCA9TwAADY9AACMOgDgmb0AgC68AMDAvACAzDwAAEc8AAAKuwDgCj0AAJg8AJCdvQCAzzwAsI+9AABBvQAgfT0AwN08AGBxvQBgOL0AACA8AIB5PQCwiT0AgHq9AAAeuwDAjLwAoHE9AACCuwBAY70AwBY9AEDCvAAAe70AAAi9AFCmPQAwzz0AAFg7ACASPQCAgrwAAJg7AGCvPQAAx7sAwLk8AIB/vABArrwAYAG9AIDwPADAfT0AoBc9AJCAPQCgEz0AgA88AODpvQBAiLwAIEC9AIAZvQAgR70AQIQ8AABrvABgeb0AgAo9AIBbPACAuTwA4Ai9AABaPAAAATwAgAG9AADDPAAgob0AAJc7AACZPAAAkzwAQAA9AEAMvQDA+jwAADq8AIAZvQCAYr0AAEk8AAALvACANLwA4Ce9AEC8PABwir0AoFS9AADwuwCgRb0AwCm9AIBAPQBAR70AAEI8AAByvQAAYb0AAJG8AAABvAAAoTsAAN68ADCePQCg1D0AAI47AAC6OwBAPj0A4I29AADwOwAA/DoAgEe8AACwOgCAjrwAgGe8AABFvAAAmbsAAAA4AIA9PQCAgTwAwMg8AAAqPADAMr0AAOi7AMCxPADAkbwAoEm9AEDnPADApLwAMKC9AIAlPACAMb0AuAQ+ADCgvQCA2b0AAOU7ACAzPQBgK70AAKI7AACTuwCALbwAAMS7AOC9vQCQgr0AAM67AACbvACgML0AwBE9AAAQugAAFDwAAPi8AIBWPQAgJb0AAKu7AADCuwAA7r0AwMK8AEDEvADAPz0=","chunkHash":"1f42173fdc77c82d0257883e5bc1f4c4fd615632c016c2ec957c3617f15ed7aa"},{"text":"File: `model/texture_encoder.py`\n```python\n#...\nclass TextureEncoder(nn.Module):\n    #...\n    def __init__(self, in_channels=1, output_dim=80):\n        #...\n            nn.BatchNorm3d(256),\n            nn.ReLU(inplace=True),\n            nn.Conv3d(256, 256, kernel_size=3, padding=1),\n            nn.BatchNorm3d(256),\n            nn.ReLU(inplace=True)\n        )\n        \n        # Pooling operations\n        self.pool = nn.MaxPool3d(kernel_size=2, stride=2)\n        \n        # Global Average Pooling\n        self.gap = nn.AdaptiveAvgPool3d(1)\n        \n        # Final linear layer to get to 80-D\n        self.fc = nn.Linear(256, output_dim)\n    #...\n```","range":{"startLineNumber":35,"startColumn":0,"endLineNumber":49,"endColumn":44},"embedding":"AIAMPQAAe70AgHI8AAD2vAAAYrwAgG08ACDGPQAA7jwAwDK9AABSOwAAHrsA4BQ9AOA0vQCAWrwAABK7AADIOwBwkj0AgLk8AACcuwAAH7wAgBK9AMDZvABgFD0AAKA8AGCYPQAAsLwAAMI8AEC9vABA5jwAIBO9AEBzvQAAI70AYDa9AKB4vQBQt70AgLW8AIAqvABgJT0AAIy6AMCmPAAwkz0AACm9AFCLvQAAgTsAADo8AADwuQAgbr0AQJA8AADWuwAQhj0AQP48ANCOPQAAbTwAADu9AEA/vQBABj0AgCS8AADaOwAAK70AAOU7AOABPQDgYr0AAJY8AOAXvQBAEz0AgAg8ALCQvQDAaT0AgDs8ACA8PQBArbwA0IK9AMDfvABAiTwAAFs9AKBiPQDA17wAgF09AADRuwAA8jsAwIO8AIBXPABAyrwAALi7ACBjvQCAoDwAAEW8AED5vAAALzwAgBo8AAAEuwBgCj0AsLS9AAA0PQAAfjwAAKo7AIDLPAAQq70AIBI9AIBwPAAAIDsAoKE9AACHPAAAfjsAwKS8AOBxvQAwjb0AQN+8AICcvQAASzwAwIo8AADAuwCAKjwAgEA9ANCJPQCwkr0AAK87AEA9PQCAALwAAOq7AGAMvQDA0bwAQNy8AKB2vQAgM70AgKc8AADOPAAAzrsAoCM9AKB1vQDgHD0AAMA5AMCMPAAAk7wAgGi9AHCMvQCAUr0AcIE9AKBWPQCACzwAAC+9AMDRvAAAlzsAAH88AACsuwCAYzwAQJq9AIC6vABgHj0AgLg8AFCCvQAABLwAABQ9ANCAvQCAVL0AwMa9ALCKvQAAnj0AQHQ9AOB1vQCAhbwAAMM7AEC7PAAAqTwA4Hm9AKByPQAw1L0AALs8ALCJvQCABLwAAGQ9AAAwOwAAsbsA0IG9AIDMPAAA5bwAwLs8ADDivQDgZb0AgKe8ABCIvQAgXD0AgG+9AABdPAAAsDkAwPI8APCzPQAAuLsAoG49AABCuwBw0b0AEIM9AMCaPQCAOz0AwFI9AEA3vQBAfj0AYIC9AADbOwAgXr0AgAC8AEBiPQDgAL0AABq9ACAKPQBQu70AQPS8AECmPABAz70AgHo8AAAuPAAAersAgE09AMCcvQAgIb0AwAw9AACYuwAgCD0AALu8AIB9PAAAuTwAIAS9AEDNvAAAoD0AgEK8AABEvADgRL0AAHi9AMB0PQAAGTwAQBK9ACA4vQBA1zwAwPa8AMBmvQCAC70AgBg9AADLPAAAeLoAAL48ACBpvQDgMD0AYC89AED0PACAPbwAYAk9AIBJPACAZb0AwBc9AGA4PQAAUjsAAFc9AMB+vQAAML0AAH47AKARPQAAebwAgKY8AAATvQDAu7wAQPI9AIAaPQDgoL0AwKo8AGAtPQAgH70AQKq8AICwvACA8DwAQIa8AHC0PQBA7L0AADI8AIApvABAB70AAHo8AADYPACA+7wAABw9AADpOwCQgb0AwEO9AOAnPQAwjD0AQKq8AKAjvQAAyTsAAJW7AGAjvQAAUb0A8IE9AEAsvQCAnL0AAJG8AAA+OwAAyDwAYAe9AMBEPQCQkD0AQD29AAAgOQDwqr0AgBE9AEDovAAApb0AoHU9AIB+PAAQhD0AIO49AICXvABA/TwA4Bo9AIDSPACAgDwAwMA8AEDkPAAAjLwAAFi6APC7PQCAZzwAQO+8AHCTvQAAKLsAQCS9AACSPAAgGj0AAJK8AEB4PQAAH7wAAES7AAAVvADADL0AALQ8AADOuwCAmrwAwLa8AEATvQCgXD0AALg8AABevACAqLwAgEk8AFCIvQBAGz0AQBU9AHD/PQCAmzwAQMc9AJCHPQCAXzwAAFC8AACWuwAAgLwAgJu8AICxvAAAGrsAgFs8AIBvPACgdL0AAJG7AKChvQAAVDsAEIY9AIDOPADgcr0AgBY8AEDivACASTwAABI9AAA9vAAAszwAANg8AABZvQDgAz0AgIC9AKBBvQAAgD0A4Bw9ALCtvQDgC70AYCI9APCRPQBglj0AwHy9AMCgvACAfLwAoDA9AIBSPACgWb0A4CA9AEC4vADgp70AYDq9AGBHPQAw1j0AAIi7AOAOPQDgJ70AAOW7AIB6PQAAPDsAgLg8AMCtPAAAW7wAgKS8AADJuwAART0AwD49AHCEPQAAILsAwK08AGDrvQAAYLwAwAa9AMAbvQCgLb0AAM08AABavACAbr0A4FA9AACgOgCAWT0AgAK9AAC+OwCAiTwAwLC8AECrPACgc70AQIK8AADBPABgED0AQNA8AAB/vAAA9TwAAKg7AMDsvACATb0AIH89AECFPAAAObwAIH29AMDVPAAAmb0AIFW9AACVvAAgHb0AYDC9AKAFPQCgar0AAJC6ANCDvQAAF70AAFg6AACjOwAAaTwA4Ai9AACbPQBQvD0AAD67AIBMPADALT0AIHW9AEDcPACAH7wAwLe8AECKPACAPLwAwJi8AMDDvACAerwAAKa8AMBhPQDgIj0AQLc8AABDPADAB70AAP07AADEugAABLsAQEy9AACbPACAG70AQKK9AECdPACgdb0AgBs+AMCAvQAQ070AgCy8AECXPAAAVr0AAIC7AADHPACACrwAgH+8ABCCvQBQuL0AADi6AABTvACgXb0AgPg8AACWPAAAKjsAgCi8AHCLPQAgBb0AQN88AICJvADw/70AwBW9AICtvAAQhT0=","chunkHash":"f22d541b36223877798e059ee2cd377c3f6af84f45e8e6211d3d61ba22824fd4"},{"text":"File: `model/texture_encoder.py`\n```python\n#...\nclass TextureEncoder(nn.Module):\n    #...\n    def forward(self, x):\n        # Encoder pathway\n        x1 = self.enc1(x)\n        x = self.pool(x1)\n        \n        x2 = self.enc2(x)\n        x = self.pool(x2)\n        \n        x3 = self.enc3(x)\n        \n        # Global Average Pooling\n        x = self.gap(x3)\n        x = x.view(x.size(0), -1)\n        \n        # Project to 80-D\n        x = self.fc(x)\n        \n        return x\n\n```","range":{"startLineNumber":51,"startColumn":4,"endLineNumber":68,"endColumn":16},"embedding":"AGAtPQCAp70AAKI8AMAtvQCAMrwAADE8AGDYPQBAVT0AIAG9AIBKvAAA8LwAgDY8AACEvQBgR70A4Ee9AACAOQBAHz0AgD49AACxvACAmjwAAD68ACARvQAAfDwAQLQ8AGAvPQAArLoAgEQ9AAAMuwAANz0AQCC9AKBMvQDAT70AACO9AIDCvABw1L0AAJk8AMCZvABgaz0AAN48AAAdPADIBz4AkJ+9AEDVvQAAiLsAAAk9AAC8vACgj70AAHi7AMDDPABQtz0AYHg9AAA3PQAAgDwAoBS9ACAyvQBAyzwA4AG9AACWuwAgeL0AACi6AOAMPQDAY70AADY7AOBQvQDAgj0AYAE9AOBpvQDgTT0AgB08AEA6PQAAobwAgIG9AAD2OwBAkDwAgFk9AICbPAAANLwAIH89AACcOgCAZLwAAMQ6AADnOwAAAL0AAIG7AKANvQCA5rwAACC8AACovACArrwAgCQ9AIBmvAAAkDsAcI29AMBbPQBAnTwAAGk8AAB3vADgN70AIIY9AAASuwCAgLwAIIo9AACgPACAWLwAAIy6AMB2vQDQkL0AQJm8ABCRvQCAjLwAAGC6AACTvABAjTwAoCQ9ACCzPQDgKr0AAFI7AIBhPQBgJb0AAPC6AMDzvACAATwAgFy9ABCOvQDgg70AANA5AECIPAAA6LsAQMs8ACArvQBAqTwA4Cy9AIChPACAHbwAgEK9APChvQAgGb0AYD49AADmOwBA2TwAIBu9AADGvAAgFL0AoBI9AIBnvAAA0TwAwIG9AAAcPAAAqDwAwLo8AGBTvQAADrsAQMk8AHCFvQDAab0AQM29AECsvQCA6j0AIEE9AIBAvQDAlrwAQIM8AIBWPAAADjwAIJC9AGAOPQAgzb0AwKg8AKBSvQAAUb0AwBY9AIATvAAAlDoAsJG9AAATPQCgbb0AQAM9AKDPvQDAWr0AwJG8AABXvQDQhz0AwHa9AABsOwCAAT0AwMw8AMCdPQAA4jsAgCo9AABquwBAhr0A0MU9AFDDPQAAYj0AwIM8AECqvABgYD0AIHm9AICiPACgIb0AAL+8AAAiPQCAFr0AAPG8AKAcPQAAxL0AAOu8AECfPABA270AAFA8AECKPABgD70AAN88AKCVvQBAjbwAQOY8AEDuPAAgHz0AgIm8AEANPQCgQD0AAFO8AEC8vAAgTz0AAAu8AECwvADADr0AkJ+9AAAsPQAAfrsAAN+8AICBvACAUTwAIE29AADnuwDAYr0AAMA7AIAQvAAA+jsAYIE9ACA4vQBAGj0AgJ88AIDBPAAAS7wAQMA8AADDuwDgbr0AIAQ9AKB9PQAAlrsAoA49AECAvQAAIrwAQJE8AADoOwDAOr0AAFg8AEBevQDAB70AIOg9AEA2PQAAYr0AACY7AOCDPQBgAL0AADm8AOBJvQAAHzwAAOg6AJCCPQCQmb0AAPC6AAAaPAAgOr0AABg9AOAaPQAAMjsAALc8AMDNPABAKb0AAGW9ADDGPQAATz0AAKO8AGBpvQAAQDoAAJA7AKA7vQDAJr0AQFk9AIDDvABgcL0AgDy9AACjuwCgaT0AwLC8AIAFPAAwiD0AAPi8AABsPADgQL0AADo8AABCvABQor0AwAQ9AAAEuwBAqjwA8M09AIBYPACAPjwA4DQ9AGAZPQAAGrwAgL88AGBAPQAASDoAAJ27AIBxPQDApDwAgG+9AKBRvQAA+jsAgG69AIBWPADA8TwAgDC8ACC+PQDAyLwAAPs7AIA3vAAAgLsAIDI9AMDcvAAAz7wAACy8AOAvvQCgVz0AQO48AAB3vABQl70AgFm8AGA8vQAAHD0AgKU8AIDTPQCAUDwAMMM9AOBIPQAAWLwAAOO8AADBuwCAp7wAgFA8AIBXvAAAxbwAQOq8AIAXvACgc70AoBe9AMCSvQAAQrsAwC89AACFPABALL0AAEQ8AIC9vACAZbwAkIA9AAAgOgAAwDkAoG09ANCivQDAiTwAgGW9AIAOvQBgNT0AAP08ABCgvQAAnzsAoA89AABGPQCgaj0A4Km9AIAIvAAAtzsA4DE9AACQOgCgXb0AwIQ8AADyvACg0L0AYCy9AMDzPAAwkT0AALY7ACBVPQAAprwAAJA7AMB5PQDgIb0AAJA6AACkOgDgBr0AgPm8AMCKPAAAzjwAICY9ACAtPQDApzwAAL27ADCxvQAAKLsAoEC9AABAOwAgML0AwGI9AICuvAAAtbwAgFM8AEC8PABQ0T0AABu9AACbuwDgFT0AALG8AIAxvADwir0AgB28AMCUPABA8jwAIBQ9AAC8ugCAkTwAABI7AJCDvQCAgrwAsIs9AIAHPQCAPrwAwCa9AECEPAAQnb0AgPG8AEAXvQCAmL0AQPW8AEDVPABArb0AwIU8ACBTvQAAArwAAIE8AACPOwAA4DwAQLG8AJDcPQBQpT0AgCI8AACDPAAAZz0AQDO9AIDWPADA57wAQKq8AADCOwAAx7wAAGu8AACoOwBA3zwAwD29AGBkPQBgMT0AAA68AACguwCAF7wAAOC5AEC0vAAAtLoAgO+8AIBHPACAUL0A4Me9AMD/vACgm70A+Cg+ADCEvQCwnL0AQIi8AAByPAAAgLkAgAS8AACxPACAIbwAgE68ADDLvQCgyr0AAAq7AADtvACgGr0AgEc8AOBIPQAAl7sAAK47AFCBPQCAK70AwPE8AIADPABw670AQOC8AEDYPACASj0=","chunkHash":"95caa9521227056342e410b47d48253f4c68d30a6b79f731737ef6f3601ae56e"},{"text":"File: `model/texture_encoder.py`\n```python\n#...\nclass TextureEncoder(nn.Module):\n    \"\"\"\n    Texture encoder following MorphoFeatures paper specs:\n    3-block 3-D UNet encoder (64→128→256 fm) + Global Average Pooling\n    Output: 80-dimensional feature vector\n    Weights shared between cytoplasm & nucleus\n    \"\"\"\n    def __init__(self, in_channels=1, output_dim=80):\n        #...\n    def forward(self, x):\n        #...\n```","range":{"startLineNumber":5,"startColumn":0,"endLineNumber":51,"endColumn":25},"embedding":"AJC7PQBA3LwAoB49AGA/vQAASjsAwN+8AGCrPQDgFj0AQD+9AACrOwCAr7wAQIs8AFCWvQAAaDoAwO+8AMDBPAAAtT0AYC49AGAfPQAAlDoAAIu8AEDKvABASj0AACi6AKAAPQBgbb0AYBQ9AIBQPABgVz0A4CG9AOBlvQBAQb0AgC+9ACB9vQBA5L0AgDe8AADouwAgtD0AYAq9AIAcPQBQpD0AgL+9AMB9vQAAi7wAgAi8AEBRvQAAvrwAACa8AMAfPQCAhj0AIGQ9AGCDPQAAYrsAAMC8AIAnvADAizwAACU8AEC/vAAAw70AAJS6AIBQPABAhr0AAH08AGBKvQCgWz0AgAI9AECPvQCAaD0AwIU8AOBTPQAARbwAAJ28AIArPACA3DwAAOg8AAAWOwAgZ70A4EE9AMCPvAAAQDsAgKa8AACgPADAqrwAQJK8AOAUvQBAAb0AgEU8AEDwvADAzrwAwL88AAAvPACALjwAILC9AIDzPADgJT0AAJ88AACgvACwnL0A0I09AAACvQAAErwAQFo9AAArvAAADbwAACo8AKA2vQAgg70AwHa9AIBqvQDA2jwAABi8AADHuwCA4DwAwFU9AOByPQAgTr0AAKy7AIDtPAAARLsAoE09AABXvAAA5rsAQPG8AADDvAAAsrwAAPy7AADTOwDA0LwAAKU8AEDcvADgTT0AgHm8AMC0PACAtLwAwFa9AOCrvQAAYb0AoGE9AMAoPQCAtTwAAN27AAD3OwAA8rsAABg8AID2vAAAIz0AwKu9AEDlPAAASDsA4AE9ACA7vQCA2LwA4HE9AKBDvQCA27wA4Ji9AEBcvQAwvT0AgHs8AMARvQAAVLsAABQ8AICnvAAAljwAACA5AJCkPQCQCL4AAPA7AGB9vQCAJb0AAMQ8AIBpvAAAXDsAYFy9AAA2PACgab0AgCA9ABCuvQAAjL0AQKC8AICsvABAbT0AIAm9AAAvPQAA7LsAgPO8ALC8PQAgFD0AsI49AMC1PAAAkL0AUNQ9AOAePQAA0DsAABc8AMAMvQDQmz0AgHe9AECjPACA5bwAIHO9AABSPQBgK70AAHi8AEDgPACwu70AgBq8AOAIPQBIA74AYG89AAB+OwAASj0AAJk7ACAqvQDgEL0AICc9AIDcPAAAMjwAANC7AICPPAAgLz0AIHm9AAABvABwkT0AQKu8AAD6vACAnLwAoH69AKAsPQAAzLsAgD68AAAkvAAAcLsAAGA7AGA4vQCAqbwAADc8AIBpvAAAcLsAAKs8AMAxvQAAUjwAAC08AADZPABAkTwAgAU9AABsvAAAJ70AAKw7AMDcPAAA0DkAgBo9AGBJvQAgCr0AwIE8AOAdPQBAhbwAIAk9AGBZvQAADLwAYPU9AKAIPQAAmb0AAAU9AMAqPQCAFr0AABC9AABkuwAAqLsAgIy8AMCvPAAAj70AANk7AOAjvQDwsb0AQEI9AABRvADAy7wAQOg8AOA+PQDAFL0A4By9AGB/PQCgaz0AABa9AMAkvQAA0LoAADA9AKB2vQDgGb0AwIE9AIAqPACgAr0AwPK8AIBTPADA5zwAwIG8AKAPPQCAGDwA0Ii9AIDBPAAQnL0A4Fo9AGADvQDQs70A8KQ9AEDovABA6jwAsNw9AAB5vAAAn7sAANY7AADMuwCAprwAAHg6AIBBPQCgCT0AAMQ6ACCVPQDAND0AgCO9AKAEvQCgBz0AwDq9AEB/PQBgHj0AwFK9AGA2PQAAw7wAANg7AMCZvAAAd7wAwPY8AMAuvQBAHL0AwFC9AIAGvADgWz0AgFC8AMCjvABwkb0AQPq8AICPvQAA3TsAQMc8AFCvPQCgCj0A8M09AOCvPQAAwzsAAA29AADQOQBgDD0AACK8AIBQvADAVL0AQBm9AMCmPABgJ70AAC67AGCdvQCArzwA8II9ACACPQDAgbwAAHy7AMCHvADA9DwAgLI8AIAVvAAgE70AgGs8ANDKvQCAAjwA4Ji9AIAHvACAKj0AQHY9AAA4vQDgbL0AQFw9AGBsPQBAYT0A0I29AEDvvAAA/rsA4G09AABUuwBA/7wAALA8AADvvAAAJ70AIDC9ACBhPQDgpj0AALC7ACC2PQBgX70AAH08ABCSPQDgK70AgIo8AIC7PACApDwAwFq9AADsPADgWT0AgJg8AAB4PQDAhjwAgBs8AKDMvQAA6bwAAKq8AABfvABggr0AAL88AAAUuwBgI70AgCk9AABzPADgOD0AoB+9AECbvAAAcLoAgFO9AADYuwDgnb0AgHM8AAAcPQCgGT0AAK67AADoOgAA1LwAAJQ6AOA6vQDAj7wAwDs9AIBfvABANL0AQIS8AKAVPQDAi70AAKe8AAD4uwCAE70AQIa8AOBCPQDgir0AYBG9AEBjvQDAPr0AAM87AMCWvAAAoTwAIFa9ABgBPgDwmj0AAFk9AMChvADgjz0AYHi9ACBPPQCgGb0AgBC9AACguQDA3rwAAAi6AICDPAAAfDwAwJA8ACAGPQAAXTwAQAM9AADwPABAer0AAIU7AACoOgAAHDwAwKm8AADaPAAAhrsAsIm9AIAZPADAuL0AgB4+AKBZvQCwzb0AgAU8AMAwPQAAILoAAAC6AAB4PAAAMLwAADY8AHCJvQAAsL0AwBy9AADQOQDAgb0AICM9AMDFPAAAOLwAgKG8AAANPADAVL0AgCY8AECjPAAA/L0AwHO9AAAIugDASj0=","chunkHash":"2a63e55f6f92027527feb96c32ac00f0d2cd73a1456c0160b9570c46a06b8933"},{"text":"File: `model/texture_encoder.py`\n```python\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\n\nclass TextureEncoder(nn.Module):\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":4,"endColumn":32},"embedding":"AOABPQAAlL0AAIe7ALCdvQBADb0A4EU9AGCUPQAAmTwA4DC9AEDtvAAAdjsAAAc9AIA6vAAAybwAAAA5AADEPACgOD0AYDo9AABYOwAA8LoAQAU9AOAOvQAAdDwAAPI7AIBjPQBAvLwAgGY9AIBOvAAADj0AIB+9AABqvQBQmr0AgIW8ACBpvQDwyb0AAGq7AIBTPQAA4jwAwNE8AEARPQBgcD0AYCy9AGApvQDA3DwAAK87AGAZvQCAfL0AAOA6AGBSvQDwmD0AAAA9AACUOwAAPLwAIJK9AOCXvQAAKT0AgA29AABBPAAAn7wAgDo9AIBoPAAgJb0AoAm9AEAFvQBAGD0AAPg8APCxvQDA1DwAwAO9AIAXPAAAJL0AkLm9AEAPvQAABrwAAG89AADDOwCAF7wAIHs9AIB3vAAAyrsAgDc8AAAaPQAAP7wAwPO8AACwvAAArLoAwGm9AIAjvQCAW7wAgHK8AACoPAAAA7wAAIW9APCYPQCA4DwAIEw9AIBJvABAxLwAIEo9AIBBvAAAILwAIIA9AAChOwDAsjwAAFg6AIAOvADAir0AULa9AHCsvQAATj0AYB+9AIAIvAAAzzwAwIQ9AKA/PQBAmL0AgHE8AIBdPQCABrwAAKC8AAA+vQAAhrsAACK8AIBDvQCAML0AgCU8AIALPAAAtrsAIHY9ACAXvQAAALkAAHi8AADMOgAAsjsAgBG9AABKvQBAurwAAAk9AIC6PAAAMjwAYGa9AHCavQBgGr0AwCI9AKANvQCAhjwAAJW9AACfvAAgPz0AgFI8AEAfvQDAobwAgP88AOBkvQBAZL0A4Cq9AMB7vQAAiT0AQN88AAA0vQDA7rwAQDc9AAAfPADAiLwA8K29AGANPQDA3L0AANI8AIDJvAAAsDoAIGM9AIAIPACAn7wAYAS9AEDOPACgSb0AAGC6ABClvQDAXr0AgBW9AECMvQDwuj0AAJO8AIADPQCAqjwAgBw8AFCmPQAAoDsAAD09AMAgvQBglb0AoJM9AKB9PQBgPD0AgNo8AMB/PQAQpD0AwF29AAC/uwDAgDwAAP+8AKCUPQAAobwAAG67AEBWPQBgTL0AoFS9AIAAPQBwzr0AAHI8AACHOwCAnTwAoEc9AAAzvQCgWr0AwNc8AAA0OwCgGD0AoAe9AMDMPADA4jwAAJS6AADgvABAhT0AgF08AEAnvQBQmr0AgAC9AJCcPQAAPz0AgIC9AIAOvQCARLwAoAy9AEDXvADgPr0AAM47AACfPAAAZjsAgGA9AGAJvQDAzjwAgK48AIAdvAAAyrsA4Ac9AEDPPAAANr0AsL49ADChPQBAJD0AoGE9AIAXvQCAeLwAAKI7AIAQPABAJ70AgKw8AABnvAAAy7sAAHM9AIAyPQDAjb0AoDo9AIBUPQCAq7wAQLO8AIBZvQAAIT0AAG68ABC2PQBgWb0AwIo8AMCCvAAAXb0AAKS7ANCYPQDAhzwAAHM9AEDVvAAgGb0AwOO8AAD+PADA8DwAAGy9AOAPvQAAjDsAwIs8AOBpvQAAAr0AQLU8AOCBvQDgir0AYHK9AMAcvQDgij0AQMI8AMCsPADAlz0AADi7AEAovQDAWb0AACe9AECCvADAj70AwIs8AICJvACAXj0AsL49AEAevQCAGzwAoEg9AKAzPQAA9LsAYDY9ACATPQAAvjsAALG8AGBHPQCAQDwAgBy8ALDUvQDAnzwAIAe9AMCxvADAUT0AAMA6AADlPQDAz7wAgJe8AID6vAAAiLoAIIo9AACFuwCAjzwAYBg9AMDlvADwuD0AQO88AACIvABABb0AgA29AOBxvQCAdD0AAD48AID/PQCAeDwAAEI9AADKPABAnTwAAFA6ACBePQCA1LwAID+9AOB6vQAAhb0AQKA8AEDsvADA3LwAwK28AMCHvQBAzTwA4Eo9AADCOwBAQ70AAA48AOANvQAAyrsAAPs7AIA2vAAAwTsAAPI7AADPuwAAET0AEMC9AAD3uwBgHz0AQKo8AOCOvQCArbwAIAA9AOBKPQAARD0AgHy9AIArvQBA17wAYDM9AIALvQCAAbwAwJY9AADlOwBwq70AAEu8AABxPQBgfD0AACE9AOCQPQAANbwAAAC6AIDrPAAAqjsAAH89AEDBPACAMLwAIAu9AEDZPABAZD0AoIQ9AAAdPQBgAT0AQDk9AHgJvgDA6rwAAIW8AABZvACgiL0AADA6AKApvQCgNb0AAPs7AIB5vABAhz0AIDy9AIB7PAAAELoAoE+9AACVPADwoL0AABy8AGALPQAARjwAAIs7AGBgvQCgUz0AAI27ACCHvQAAkrwA4GQ9AEC6PAAAADsAwB29AABTPQAgD70AoBu9AICPvQBgQb0AwI+9AADDPAAAKb0AwLk8AECKvQAgl70AgBG8AABzvABgDD0AACm9AHDSPQCQnz0AAPA7AADeuwDghz0AgG+9AACoPADA1LwAQNy8AAA3vADAs7wAAAw7AIBOPAAA8LsAQII8ANDMPQAAqTsAAD47AICwPAAgHb0AABA7AABgvAAgV70AAMS8AIAxPACAAzwAsKm9AABwugBQob0AuBQ+AKAEvQBgW70AAA48AADQOwCAo7wAAG28AABCvACAA7wAAAC8ANCzvQBAjr0AwMu8AED1vADgjL0AgBk8AIBPPADgE70AAIw7ACAPPQAAM7wAwGI9AACAOQD4FL4AAFe8AGACPQAggD0=","chunkHash":"a0a0b71d3fde3cbeef2d12f2b77da7138012d054bef873c730415196f6ba7017"}]},"file:///teamspace/studios/this_studio/chromatin_classes_and_samples.csv":{"hash":"a230117b4d6e59667461abef7d5638890bedb171828e91ef0484c6b919b49819","entries":[{"text":"File: `chromatin_classes_and_samples.csv`\n```csv\nclass_id,class_name,sample_id\n1,Glia,0011\n2,L-shaped,1515\n2,L-shaped,1543\n2,L-shaped,1594\n19,Unclassified,0378\n\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":6,"endColumn":0},"embedding":"AMCZvADAlbwA0LQ9AACqvACAmzwAgGS9AGAAvQDw3b0AQLm9AAASuwDAozwAgBY8ACCBPQAA9DsAALO7AID9PAAAJDsAwIc8AAC1uwBw7D0AAHU8AAAwugAARD0AYBG9AICDPAAAI70AIEq9AABGOwCAajwAwIK8AECpPACAvLwAgGw8AMCfPABAur0AQLk8AAD7uwBgAz0AAA28AMCHvAAA4LoAQJi8AAAWPQAA7zwAQKM8AABovAAAeLsAoC29AABwOwCAxjwAALu8AOAmPQBAFb0A4BA9APCVvQAgFz0AkJS9AOBmPQAAOLwAUIy9AECOPADAgLwAIIQ9AACnPADArzwAIBU9AOCevQAATr0AACE8AADYvABAaj0AwBa9AIBVvQAAbzwAAKg7AIAnPACgA74AYEO9AICjPABAAr0AgOk8AGB9PQBgIT0AgH+8AIBbPAAALbwAQJm8AIBrPADgPr0AAOu8AIDXvABA6bwAMKK9AEC3PAAAITwAABu8AMCVvACQgb0AwGO9AICdPADAHj0AwJc8AECtPAAAGDoAgIG8AIA6vQAAcjsAAGG9AGDjvQAAhjsAAPk8AMBtvQCgMz0AgIc8AEBdPQAA5LoAYD69AADkugAAXr0AAPs8AJDCvQCAkLwAoEE9AODBvQBgF70AQCC9AEAKPQCAJLwAAJq7AGBdvQAgbD0AgPu8AICjPAAAoTsAAE69AACJuwCA77wAACo9AAAavQAAoDwAAFw7AACZvABgPj0AwA89AAD7PAAAF7wAQIi9AECDPQDAhLwAwCY9AFCUPQAQqD0AAE+9AACsOwAgK70A4CS9AECgPADgCD0A8IW9AIC1vABghj0AwLU8ACAhPQBAyDwAsIW9AADJPAAAg7wAQNC8AEBDvQBA0bwAAGw7AMCYPAAAszwAwAW9AMCZvQDgJj0AQJ28AIASPQCg+L0AAPq8AIBTvAAANDwAAKW8AKBGvQAA7DsAIAq9AFCAPQBA77wAAAy7AICQPAAAWT0AABe9AKBwPQAAnDwAAJG8AABmOwCwlD0AAAC7AMCEvACgIj0AgKy9AAC4PQDAKL0AwIS8AOA2vQDgCb0AAOe7AGB/vQCARr0AgBW8AIBcPAAAM70AADK9AKApPQBAqr0AAKo8ACBNvQBAVT0AIFs9AIClPAAA+jsAwM68AKALPQAgkD0AgH69AAC+vACAujwA4De9AOABvQCgLL0A0IA9AAD8uwAAQrsAoDy9AIBnvAAAGrwAIGI9AIBLvACAnzwAYD69AACGvQDAkrwAQKY8ABCrPQDQqj0AADC7AAAtvABIGr4AoFo9AADmPAAALjsAQKs9AMABPQDAt70AYBO9AEAbPQDAx7wAAC48AIAbPAAwsb0AoFK9AAByOwBApr0AQMc8AIBrPACAfL0AwAM9AADMugDAyLwAIAi9AECxvACAXbwAgPc8AGB/vQBgkr0AACG9AOABvQCQgz0A4BU9AIAbPAAwi70AYCE9AMAlvQBgCz0AAAu8AADuPAAAiTwAoB09AJCBvQCAab0AAOw6AACiuwCAqTwAQJC9AAA0vQDADz0AwGM9AEDVPABAlDwAAES8AADpuwBAnrwAAJQ7AABcOwAAOL0AoC49AAD8vACABrwAIDM9AECCPACAH70AAI+8AKBzPQAAWrsAALq8AKBHvQBA0zwAQLE8AMBDPQDgZj0AgBG8AAAPvQBA2T0AQA09AFCdvQCA1jwAAIW9AADfuwDQvj0AoNu9AICCPAAgfr0AgGc8AICZPADw2D0AQNq8AKAEvQBQkz0AMJm9AOB8PQDQn70AgCA8AOB+vQCwqT0A4Ca9AMC7vAAAX7wAQM89AAAHvABgSL0AANW8AAAAugDQjL0AADA7AGAnPQBgCL0AIIO9AIDovACAAT0AACE9AIDtvAAAqjwAgDw9AAAcuwCQmj0AgIs8ACB5vQCAZ7wAgOE8AID2vAAAvDsA8M69AHCCPQDgi70AEIq9AAAmvAAA8zsAgD89AIAwPACAhj0AAHS8AIBIPQAA0DkAgMW9AICBPAAA5rwAACm8ACBbPQCAerwAAGc8AID0PACAVrwAkKk9AEDcvABwg70AgJE8AIDqPADAXz0AwPs8AOAnvQBAnDwAENW9AABWuwCA4LwAgL88AIADvQAAELwAwHs9AEAbPQBAXb0AwOu8ACAoPQAAED0AAIG8AAD4OwAAsbsAEIq9AMByPQDArLwAABo9AIC+PACAMrwAIHW9AKByPQAACb0AwC49ACADPQAAG70AwDM9AECCPACALLwAYLA9AMDPvAAAejsAgL68AMBJvQAA7jwAgGe8AAC2PABAJr0AAA47AMAFPQBAgjwAgCw9AADjuwCASTwAgP+8AAB+vADAiLwAgI68AOA4PQDACL0AIAK9AGAwPQDAqD0A4E+9AKBcvQCgYL0AUK09AOCZvQAAZ7wAAGU9AACxPABAkDwAQAm9AADZuwDA1bwAYFa9ACC+PQBgsL0AQM88AABHPAAA7jsAAJA8AABePQBAw7wAoFQ9AGA3vQCAPDwAEKi9AAD4OwCAG7wAAFu9ADCOPQBAtrwAQLQ9AAD6vABAar0AkJA9AMBfvQAAF7wAAMk7AACXOwAAerwAwPy8AACHPACAurwAABm9AICIPAAAqb0AAJ08AABXvABAtTwAMIw9AIDTPABAZ70AACC9AADNvAAAKbwAYEg9AMDDPADAMT0=","chunkHash":"c5ea1d82252f89e6ed4f2ebe25e9b178bbe386c242a1baf122e71d075918acbc"}]},"file:///teamspace/studios/this_studio/dataloader/mesh_dataloader.py":{"hash":"f6989c94538be342ddae10e55282ddf8d1fcaab44b486ba854555d94367fdb68","entries":[{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        \"\"\"\n        Args:\n            root_dir (str): Root directory containing the samples.\n            class_csv_path (str, optional): Path to CSV file with class information.\n            sample_ids (list, optional): List of sample IDs to include.\n            filter_by_class (int or list, optional): Class ID(s) to include.\n            ignore_unclassified (bool): Whether to ignore unclassified samples.\n            precomputed_dir (str, optional): Directory with pre-processed meshes.\n        #...\n```","range":{"startLineNumber":40,"startColumn":0,"endLineNumber":48,"endColumn":0},"embedding":"AECDPACAnTwAIJc9AIBWvQAAIb0AAA29AMBYvQCAfbwAwOy8AOCiPQAgJL0AIFe9AAD9PAAQkr0AAF+8AHCWPQDAiLwAQJC8AAAuvQAAsDsAcKo9AKBzPQBglT0AYJu9AOAfvQCgUz0AAKS8AABOOwAAlz0AgOa8AEB5vQAAQLwAcJi9AACUOwBAWr0AQDM9AMCJPQDAID0AAEw7AKAfvQCgez0AUIi9AID5PACAETwAALs7AHCUvQCAxbwAoE+9ACDPPQAA6bwAgDe8AKCAPQCAOzwAgMi8AIC4vAAAGjwAgMK8AOAWvQCgCr0AkIa9ANCBPQBAmLwAoEq9AAB2OwBAWj0AgCW8AABgPABAq7wAAIG9AIAAvQCAojwAwLS8AABEPACQir0AgAI8AKCMvQAAwbwAAKU9APCjvQBwk70AAN+7AKBxPQAAG7wAAOw6AAA6vQDwhr0A4IW9AGBTvQCA17wAwMu8AIAjPAAAorwAgG+9ACBhPQDgFT0AgLk8AACaPAAQgL0AwIs8AECGPAAAPDsAAFM8AAAKvAAgHb0AwOW8AGCHvQAAY7wAIHK9AMD0vAAAirsAQLm8AED0vABQqj0AAO47AMAyPQAAOjsAgGU8AGBZPQCwir0AAFO9AGCvvQCATLwAwOY8AIBbvAAAErwAAPQ6AADgPACAgrwAwNO8AAD7PAAAITwAQIC8AAAIOwCQnr0AAPg6AEANvQBgCL0AAOA8AACsuwCANT0AwNq8AGBEPQDgXz0AgFY9AMA7vQCACrwAYDG9ACDYPQCAOTwAAEA5ABC6vQCA4jwAsJ49AMDlvABAsDwAwJU8AOABvQDgzD0AQKG8AGAuvQBgFD0AAO48AEAqPQAANb0AQIE8AICNPAAACb0AQDa9AOAyvQCgML0AwFU9AICmvACguj0AgBC9AACiPAAA+7sAQGe9AMAoPQAAiLwAMNC9AADYOwAAcrwAwIK8AOAtvQDAHb0AgJK8AEAMPQBAfj0AgB88AADIOwAAdD0AgES8AEC4vABAJr0AAEY8AACfOwCgRT0AQM+8AABQPADA1LwAgAm9AECZPACAgbwAwLm8AECevAAAcLoAwFW9AAD8OgAAfLwAAIq7AIAtPADAvzwAYB69AGAKPQAAHLwAgDs9AEAMvQBgST0AAOm7AECgPACAzDwAgCq8AIDOPAAA+DsAAJ07AGAqvQCAfr0AADi8AMB9vQAAWDwAANW7APCKvQAAxbwAAN07AAC/vADAu7wAoGa9ACBovQAAfDsAwN88AFCNvQBA/DwAYAy9AEDwPACgVz0AIG49AMAcvQBQi70A4Dk9AIClPABw6j0AAKw6AOBpPQCgxb0AALW7AMDevAAQib0AQLS8AECKvQDAjTwAgOe8AADAPADAmrwAAJw8AMCrPQDAET0AALA6AED8vACArzwAAEa8AAA/PQDA5DwAgGy8AEAqvQBA7r0AYNg9AIB7vABgkz0AoIs9AEDdPAAgQr0AACi9AIDTPACg2T0AgBE8AICtvABAqTwAAAQ9AOA0vQAABbwAANA7ACCDvQCAZb0AQEC9AIC2vAAgCL0AADa8AMCgPAAAXbwAoEW9AABRPAAA27sAIA+9AIBZvACAajwAwAK9AACrOwBAzbwAYD09AID4vABAdL0AAIy8AACIvQAAvjsA4AU9AIAPPAAAcDoAAF89AOC4PQCgDj0AAEK9AADougCAT7wAAGS7AMCzvQCANzwAgCm9ACA0vQAA+LwA0Jy9AGAyPQBgor0AoBY9AABgOwAg3D0AgKK8AMBnPQAAbjsAwD+9AAC4OwDAlL0AAGC7AABQvQAARzwAgCK8AGCDPQAAr7sAEOg9AIADvQAAQLoAQLW8AEDCvADAdL0AQJ28AACLOwAAoTsA4Ai9APCwvQBANz0A4EW9AIDSvACgWD0AAPM8AAAPPACAYjwA4Ao9AIAovQCgGD0AQOG8AECgvABArTwAAA47AGANvQAAzLwAUI29AIALvQDQtD0AwHg9AGBsvQAAhj0AANw8AECRPAAAfr0AwFu9AEDKPACAJDwAAPe8AKAFPQDgsb0A4Bw9AED2PABAwrwAgGm8AIA2PQCgfz0AAHg8AOAUPQAAtLsAgLY8AMADPQCAPbwAwAC9AOByvQAAMDoAgNg8AEA9PQDAeT0AwGo9AAAPPQCgA70AAAi7AFCRvQDAEz0AAD47AABrvQBA6bwA4NW9AECqvACge70AQJ48AADKPAAA1zwAoEW9AACHvACgBL0A4JA9AMCtPQCAVTwAAGu9AEDVPABgAb0AAJW7AEBpPQBgjj0AAKm7AHDZvQCAWLwAgPU8AAASPQBA3bwAAIw7AIAWPABADj0A4EY9AACYvAAgZL0AAMA7AAAeOwBAF70AQHW9AACDOwCgUb0AgDY9AECMvACIAD4AsJq9AABvPADAurwAACi6ACAUvQBgAT0AAK48AEBQPQAAZDsAwDC9AMCuPADArjwAQBW9AICxPACgVL0AIAI9AEDmPAAAcLsAAA68AIB1vAD4Bb4AAOY8AIDsvACAKz0AgBS8AIB1PQCASrwAILu9ACBkPQDAvrwAUMk9AACjvQAApbsAUJo9ABCjvQAgrb0AwKU8AOBFPQAAkrsAgGO8AEC2PAAgbb0AgOG8AMBEPQAAhjsAgHI8AABhPACgHD0A8IE9AMC/vAAA8LwAYEq9AGBUvQBADz0AgCy8AIBfvQAwrD0=","chunkHash":"fd45346f19487e0b6f117bb9a7fb3c6d4d77d04e6861281ce76230cb066206c6"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n            generate_on_load (bool): Whether to generate meshes on load if not cached/precomputed.\n            return_type (str): Type of data to return - 'mesh', 'pointcloud', or 'both'.\n            voxel_size (tuple): Size of each voxel (dz, dy, dx) for mesh generation.\n            smooth_iterations (int): Number of Taubin smoothing iterations.\n            decimate_target (int): Target number of faces after decimation.\n        #...\n```","range":{"startLineNumber":48,"startColumn":0,"endLineNumber":53,"endColumn":0},"embedding":"AABBPAAAhzwAQKE9AKAYvQCAT70AgGC8AIA7vQBArbwAgEa8AOAuPQDAFb0AAHq9AEDyPABgXr0AgAw8ADCXPQAAdjsAwNi8AGBVvQAANjwAgGw9AGAxPQBAXD0AIJ+9AABrvQCggj0AgJO8AAD9OwDgQT0A4AS9AMC6vQDAkLwAwMu9AIASPAAQj70AYB09AIByPQDANz0AANQ7AMAXvQAAWT0A0Ka9AGAkPQAAYLsAAKG7ALCOvQBAxrwAUIq9ADCzPQAAuzsAQAm9AIBhPQAAWrwAQFu9AEDCvADAhzwAwIi8AAAlvQCgNr0AcIe9ADCRPQBAjjwAYCK9AIAqPABgPj0AABO9AECOPAAAMrsAoHi9AOBivQAA2DoAACG8AECQPAAgcr0AAMC5AGBHvQAA2rwAgKE9APC/vQDgNL0AAFg6AHCKPQAAtrwAgGs8AGArvQDAmL0AcKK9AGBPvQAAu7wAgLO8AMDyvAAAZTwAIFe9AKBjPQCAJz0AAAA4AMCgPADAlr0AQEk9AIA8PACAV7wAgIA8AACuOwBAkrwAwIO8ANCsvQAgbb0AgCa9AECuvABAwTwAQOi8AADMvADgrz0AALM8ACBnPQBAtLwAgFI8AKAdPQAgkL0AgCG9AOBpvQAA0jwAADQ8AGA3vQAA3DsAAFw8AECTPAAA9rwAIBK9AMDTPABAwjwAAM+7AACquwCg0r0AQMW8AIA6vQBAFL0AwKQ8AIAdvACADj0AIEa9ACAqPQCgUj0AQPo8AACQvQAgH70AYB69AIDBPQAAszsAgE88APCKvQBA0TwAwM09AIDpvADArzwAAG+8AADYvAAQ8T0AwOy8AOADvQAAXTwAwPQ8AMCLPACAnbwAAM07AID0PADgi70AQIu9AIBrvQDgaL0AAFk9AAAxvADgVD0A4AO9AMCxPADAsrwAwC29AAAGPACA1rwAENO9AAAyPAAA3DsAAPy8AAAxvQCAwrwAwNu8AAABPQBgnz0AgPo8AADeOwAgGT0AgN88AECAvABAO70AgHo8AICHvACgUD0AwKm8AAAQPAAgG70AAIi7AECAPAAATLwAgPm8AAB8vAAAwDoAAIm9AABuuwAAzbwAALe8AABQOgAA1TwAwLO8AIChPAAAALwAAAU8AGAsvQCgCT0AgA+8AKBNPQAAKT0AgG48AABwPAAAWLsAgJ88AAApvQBAZb0AgIG8AEBLvQAALTwAAHS7AICUvQBAzbwAAFK7AIDzvADAO70A4By9AHCQvQAA0LkAIFA9AMBZvQBA1zwA4Iu9AIC/PADAND0AgHc9ACAvvQCAj70AgB49AICWPACwqD0AACI7AEBNPQDQob0AQMu8AKACvQDAeL0AgG48AGCWvQDAID0AwNK8AACzPACQg70AgFE9ACB5PQAApDwAAJs8AKCLvQAAobsAgAO8AADvPACgDz0AABC7AEAZvQDgAL4AgL89AMCgvAAAWD0AYJI9AMC6PABgWb0AYBO9AMCXPABA1j0AwLQ8AICfvAAA3rwAQBw9AIBovADgEb0AgMk8APCOvQCgcL0AQKy8AMCyvADA/bwAQIu8AABAOgAAarsAQIu9AOAcPQDAQr0AQPG8AKAxvQCAK7wAQKi8AEDePAAALjsA4Fo9AIAMPABAhr0AAO+8AKBsvQAADrsAACO8ACA6PQAABj0A4Co9ALC/PQAABrwAIHG9AABAugAAZrwAwN08ANDVvQAA3jsA8Ie9ABCEvQAA3rwAQIm9AEDHPADgDr0AYAU9AADpPABAnz0AAAq9AIDRPAAALTwAAD+9AMDqPAAg3b0AwJO8AGBqvQAAdDsAwPc8AJCdPQDAzjwAoPI9AIATvQAAC70AgHg8AIDNvAAA67wAAJS7AACiOwAAQjwAAKA5ALAMvgDAGD0AwAS9AMCWvAAgdT0AYCc9AIBAPACgD70AYBY9AIDMvACgfT0AAJm8AACkuwCAeDwAAKM7AKA5vQAAUTwAQLm8AEBivQBQpj0AwIQ9ACBUvQDgXT0AgCU9AGAxPQDgLr0AwKK9AECmPACAkTwAAFW8AIDmPADgq70AAAE9AMCdPACAiLwAgO28AIDxPADAmj0AAKw8AABePABA1LwAwLs8AEDgPAAA1LwA4AK9AMD+vAAAFrsAQK88ABDNPQAAYD0A4AE9AGBqPQAAfLwAAMI7AEBqvQAADT0AwJS8AIDIvACANrwAML69AECsvADgOL0AgIA9AABGuwBA2zwA4DC9AOAEvQDA8LwAEKQ9AABGPQDAvzwAoAK9AOAnPQCAgrwAgEK8ACBjPQAgPz0AAJG8APCMvQAA/LsAAOw6AECLPQBAnLwAALG8AIA1PADAtTwAIBQ9AADTvAAASr0AADI7AIAePABArLwA0J29AAChuwDgJb0AADI9AIAEvABQrz0AcJe9AACmOwBACr0AQBI9AACivAAgEj0AAE67AGAaPQCAKDwAQDC9AAALvAAQlT0AQP+8AACWPADAg70AAPo8AADqOwBAtDwAAAq8AABwvACgtL0AIGE9AADsuwCAVD0AAMM7AECCPQCARb0A8KW9AKARPQAAsLoACAg+AMAevQCAJLwAwCY9AAB7vQBgo70AgLM8ACCaPQAARrwAAC47AAACOwBQrb0AQL+8AIBxPAAAxDoAAPU7AAC0uwAAuzsAwFo9AIC8vABA4bwAgDO8AOBcvQCgAD0AAP87AGBnvQDgqz0=","chunkHash":"7dbba4fd0fc0ea1853da923562b2bb7b100afee9bcc3aa9b7f301d8818de6ecd"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n            num_points (int): Number of points to sample from mesh surfaces.\n            sample_percent (int): Percentage of samples to load per class (1-100).\n            cache_dir (str, optional): Directory to cache processed meshes.\n            debug (bool): Whether to print debug information.\n        \"\"\"\n        self.root_dir = root_dir\n        self.return_type = return_type\n        self.voxel_size = voxel_size\n        self.smooth_iterations = smooth_iterations\n        #...\n```","range":{"startLineNumber":53,"startColumn":0,"endLineNumber":62,"endColumn":0},"embedding":"AAB6PACAwzwAgIk9AGApvQAgNL0AAKy8AOBAvQCATrwAgFy8AEAzPQCANb0AcIK9AEAXPQDAiL0AADY7AMCRPQAAzDsAAKS8AEBZvQAAFjsAQJs9AIBkPQBgZj0AYIG9AIAxvQAAdD0AgDO8AMCAPABgZD0AQPK8ADCYvQBAnrwAMKu9AADUugCgiL0AYCo9AMByPQAgBj0AAEC5AIAAvQDAfz0AUKq9AID4PAAAsLkAADA6ALCDvQCAx7wAoHC9AKC3PQAA5DoAQN+8ACBkPQAATrsAwEW9AAD0uwBAhTwAAEy8AAAGvQBgFL0AYH+9AECmPQAAo7sAwDq9AABIOwAgTz0AAO+8AMDYPAAAl7sAAHW9AIBOvQCAGDwAANy6AABkPAAgpL0AgEY8ADCEvQCAuLwAkKg9ANDUvQAgQL0AAKq7AGBvPQCAlbwAAOS6AKARvQAAkr0A4Jm9AEBhvQAA4bwAQLS8AEC9vAAAoLkAAHu9AKBWPQBgKz0AgG48AADiOwCQlr0AgDk9AIB2PAAARrsAQKY8AACpuwCAW7wAIA+9ACCmvQDAOb0AwDa9AIC1vAAAdjwAwLi8AECwvADgkz0AAHU8AABZPQAAmbwAANY7AEAAPQCQmL0AIAe9ANCXvQBAwTwAAOo7AABKvQAAODwAAAI7AMChPACAk7wAYCm9AMC6PAAAnjwAwLm8AAC4OgAA270AAIA4AEBGvQBgBL0AgCg8AIA6vACAsjwAgEq9AMBYPQCAPT0AYD49AABrvQCAnrwAgCO9AMDJPQAAHDsAAPU7APCUvQAgBD0AELw9AAC2vACAaTwAAFq8AMDGvACwAD4AQPm8AGATvQBAjDwAwJQ8AIDUPADgF70AgA48AMAEPQAwj70AIIi9AABSvQDgXb0AgFQ9AICivACwhT0AgFe9AECQPADAkbwAIBu9AMDvPADAE70AkKm9AAC0ugAAXDsAQKy8AEAKvQDA0bwAAAm9AIDIPADAnD0AQJs8AAA0OwAAMT0AQLg8AIDIvADAL70AQMM8AAA5vACgbT0AICW9AABCuwBAGb0AALq8AMDoPAAAKDoAQNW8AAAsvAAAxLoAkJ69AAB4uwDA1rwAgIS8AADqOwAA0zwAwJm8AIB1PAAAkDoAQJ88AMDrvACgAz0AgJW8AEAdPQAAAD0AAFI8AICvPAAABTwAAA89AAALvQDAQb0AgC28AGByvQAA9DsAQKO8ABCPvQCA2rwAgHG8AABKvAAAEr0AIES9AICBvQAANDsAAEQ9AOBSvQDgAT0AAHq9AACLPAAgMT0AYFU9ACAwvQDAcr0AQCE9AADoPAAAtT0AADA7ACAzPQAAtb0AQLC8AOA1vQBAgb0AgD08AKBtvQBAizwAwLm8AMDhPAAwg70AYCU9ANCXPQAAhTwAAKI8AAA5vQAA5DsAAOa7AMACPQCgDj0AAKS7AMDavADA+L0A0Ng9AACDvAAgiz0A4G89AECjPACARb0AAKa8AEDUPACA0z0AgLw8AEAFvQAAP7wAgDc9AIBrvAAgBb0AACs8AEBxvQBgRL0AQOG8AADxvABgLL0AgA68AAA2PAAARrwAsJ+9AKAsPQBgAr0AYAO9AMAfvQAAqrsAANq8AMDzPAAAVDsAoE49AAASvABwjr0AANK8AIBkvQAAVTwAAL47AIATPQDA+TwAYEU9AJDhPQAAlbsAoIq9AACtOwCAa7wAYA89ABDFvQAAQLkAgHy9AOB3vQCAt7wA8Iu9AMAQPQBgLb0AANM8AMC6PACgrz0A4B69AIAaPQAAELsAoBi9AIDPPACwp70AgB28AABkvQAAijsAwPs8AACkPQCAKDwAIO49AAD/vABAH70AABY7AMDxvADAAr0AABa8AADyuwAABTwAAFC6AND5vQBgHT0AoCa9AMDuvABgUj0A4GU9AAAWOwCgFL0AAEY9AIBavACgVT0AgGq8AIAlvADAnjwAgFQ8AOAmvQAAVzwAYBK9AIBbvQDgoz0AgIg9AMCIvQBgYD0AoDY9AAAUPQCAE70AUIa9AEDtPACAlTwAAA28AAAGPQAwxb0AwO48AIBpPACAnLwAQKS8AKAJPQDwxD0AgLc8AMC6PAAAOLwAQOA8AIAbPQAAxLwAIAO9AIAZvQCAHjwAgOQ8AFCxPQBgiD0AIBg9AEBbPQCAdbwAAIk7AECQvQBA1TwAQLa8AAAJvQCA1bwAIN29AECXvABgTb0AYD09AMCKPABA2zwAQBi9AIAqvABAvrwAwNk9AIBGPQBAqjwAYCW9AEDHPAAAsLwAgK28AGBVPQDQjD0AgIm8AFCfvQAAnbsAAIW7AKBrPQDAsbwAgKG8AAC0vAAApDwAwKs8AABCvAAAZr0AgIW8AACnPAAAXLwAMJa9AAAoOwCAYr0AYDw9AABFvAAQsT0AgMe9AAAXPAAAnrwAAEc8AIC9vAAA+TwAADo8AADsPACAAjwAAP68AADwuQAAYz0AYCS9AABBPACgb70AgLc8AACAOgDAijwAAEi8AECpvAAQ170AYFE9AAC/uwDACj0AAEi7ACBSPQAgS70AYK29AADtPAAAALwAAAE+AOAivQAAbLsA4Ck9AOCIvQAQsb0AYAo9AMCQPQAAILwAgI+8AAC3OwCApr0AgOq8AACkOgAAvzsAgAw8AADpuwAAz7sAgIA9AADjvABA07wAgJO8AGBrvQDA9zwAAAA4AICHvQBwsj0=","chunkHash":"eec5749440aaabdbec1ddcfca84aea496e7800489d6e4aa68ff91c349132c8dd"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n        self.decimate_target = decimate_target\n        self.num_points = num_points\n        self.debug = debug\n        self.sample_percent = min(max(1, sample_percent), 100)\n        self.cache_dir = cache_dir\n        self.precomputed_dir = precomputed_dir\n        self.generate_on_load = generate_on_load\n        \n        # Create cache directory if needed\n        if self.cache_dir:\n            os.makedirs(self.cache_dir, exist_ok=True)\n            #...\n```","range":{"startLineNumber":62,"startColumn":0,"endLineNumber":73,"endColumn":0},"embedding":"AABFPACAODwAEII9AEAUvQCgb70AgHu8AEAYvQCAcLwAADi8AKA9PQBA9LwAYF69AMDKPAAgdL0AgBE8AHCZPQAAazwAwOq8AGBrvQAAaDwAMJE9AEBJPQBwgz0A4IO9AGBVvQAgcz0AAHy8AADjOwCAVT0AYAe9APCdvQAAnrwAUL29AIAAPADAgb0AIG49AOBIPQDgGz0AgC+8AAAMvQAQlT0AMJW9AKAaPQAAADgAAK87AACNvQBAoLwAIHW9ANCrPQAALjsAgB+9AGB/PQAAzbsAgH29AACgvAAAFTwAwLG8ACADvQCgHL0AQGW9AMCRPQAAkTsAgDe9AACTOwBADj0AgCW9AADgPAAAqrsAYHK9AEBgvQCAMDwAAC47AIClPACwjr0AAFg7APCAvQCAs7wAQJ89AMC8vQDAOL0AAGq7AOBnPQCAgbwAgB68AOBMvQDwl70AsK29AGAdvQDgAr0AgMC8AECFvACADDwA0JS9AKBEPQDgEz0AAC08AICKPAAQjL0AQHo9AIBIPAAAhLoAgAQ8AIBvPAAAuLwAoBO9ACDDvQAgdr0AAD69AIAuvABAzTwAQKG8AMDxvACglD0AADU8AKBRPQCAqrwAQLM8AMAWPQCAgb0AQDq9AHCAvQBA7TwAAAC5AABavQAAcTwAABI8AEACPQAAv7wAoB29AMCpPAAA0DwAAHK8AABIOgBA170AAGW8AABCvQAALL0AAGc8AACmuwCA7TwAgAe9AOAYPQDAdz0AADk9AECJvQDgJ70AgB69AJDWPQCAMDwAAB88AKCFvQAANjwA8ME9AADgvAAAMDwAQJW8AIC6vAAg+T0AQNa8AAA8vQDAlzwAwI88AEDcPADAp7wAgAU8AEDGPACQmb0AoG69AGCUvQDAdb0AYDo9AMCAvABAaj0AwP+8AIDfPADA3LwAIBG9AICtPAAAt7wAUL29AACUOgCAGjwAgBy8AGAGvQDAlbwAgMu8ACAPPQCwpD0AgMg8AMCQPADgBj0AwII8AMCHvACgPL0AwPM8AACPvAAAcj0AgJ28AAASuwBABb0AQLm8AMDDPAAAg7wAwBG9AACROwAAhLwAQKi9AABmuwAA5bwAQIi8AACpOwBA4jwAAOy7AIAVPACADrwAADi6AMAlvQCACT0AgG68AAAKPQBA+zwAQIk8AADdPAAAEDwAQOU8AKBLvQAgYr0AwIe8AOBuvQAA6DsAgKq8ACCkvQAA1rwAAES8AADdvAAgO70AYA29AKBjvQAAjDsAgGY9ACB0vQBA1zwAQF+9AACEPACASj0AoFE9AEBRvQDQib0AgC09AIDfPABwxj0AwKI8AMBgPQCAn70AAJG8AMASvQDAbb0AAIw6AGCYvQAAxTwAoAi9AICkPACAdL0AIFg9AIChPQAA9DsAwJ48AAA0vQAAnDoAAJk7AEATPQAAKT0AACE8AIATvQAg+70AgOA9AMCMvADgdz0AQIk9AMCjPABAVb0AYAK9AECtPAAg0T0A4BY9AAB3vADAuLwAoEM9AEC6vABgGb0AwIY8AMCfvQBAZ70AgAu8AADAvACADr0AQOG8AAAIOgAANrsAcIq9AKAgPQCAJr0AgAO9AMAJvQBAkbwAgLq8AIAaPQAAq7sAoCo9AACsugAgYL0AQJG8AMAmvQAAzjsAAGA7AAAiPQDAyzwAAA09AKDHPQAAIDkA4Iq9AICovACAP7wAwLc8AKDevQAAgLoAIGW9AFCAvQDArbwAgG+9AEATPQDAAr0AYAU9AEC6PABgpj0A4Dq9AIDKPAAACzwAYAC9AIByPADwyL0AwLm8AGBavQAALjwAALw8AHCZPQAAZjwAUP89AACWvABgE70AAGC6AIDHvADAMb0AgA68AACIOwAAdjsAAFo7ABAIvgCgID0AoBW9AECPvAAAaz0AQDw9AACCOwBgJr0A4CY9AADIvADgTz0AACC8AAD+OwCAXTwAAAU8AKBUvQCAETwA4C29AMBevQBQqT0AoII9AMB1vQAAQz0AwCw9AIAAPQAgAb0A4JG9AED/PAAAgDwAAGC8AKARPQAg070AgCY9AMDVPABAyrwAAH+8AECtPABQrD0AAPo8AECSPABA4rwAAKc8AEATPQBAx7wAQOu8AIDEvAAApLoAQMo8AIDHPQBgXj0AYBk9AABXPQCAdrwAAAQ7AMA+vQBA9jwAwK68AIC3vAAADLwA0Ni9AECBvACAbL0AYFM9AMDDPAAAtzwAYA+9AMD6vADA6LwAEL49AGBDPQAAXzwA4By9AEDmPACAz7wAQO68AGBtPQDQgD0AIA+9AICCvQBAvrwAAOa7AMBgPQCAk7wAQL28AACrvAAAEzwAwMU8AIC7vABgTb0AAIC7AAD4OwDAu7wAIE69AAB+PAAAUL0AQIA9AABSuwDAzj0AUKu9AADYOgAA6rwAQPw8AICRvACgLz0AQMk8AEAJPQCASTwAQOm8AMCCvABQgj0AwMC8AABCPAAghL0AwNc8AACYPAAAYjsAAHa7AIBUvADgsL0AoCg9AIAAvABgSD0AgFG8AIB2PQBAM70AEIy9AEC/PAAAILsAsPE9AGAdvQAAaLoA4CI9AACCvQAwpb0AQPs8ANCMPQCASrwAABO8AABYOgDgpb0AgFC8AECcPAAAUDwAgEQ8AADZuwAANbwAAGA9AEALvQDAtbwAALm8AAB9vQBAGT0AAAA4ACBFvQDgsz0=","chunkHash":"12988ea36572c948c662c8507743908e6b143b61c220730db67ede3927df07df"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n            os.makedirs(os.path.join(self.cache_dir, \"meshes\"), exist_ok=True)\n            os.makedirs(os.path.join(self.cache_dir, \"pointclouds\"), exist_ok=True)\n        \n        # Initialize empty sample list\n        self.samples = []\n        \n        # Load class information from CSV if provided\n        if class_csv_path and os.path.exists(class_csv_path):\n            try:\n                # Read the CSV file\n                df = pd.read_csv(class_csv_path)\n                #...\n```","range":{"startLineNumber":73,"startColumn":0,"endLineNumber":84,"endColumn":0},"embedding":"AIC2PADAgjwA0I49AEACvQBgbb0AAN28AOABvQCAhrwAAM67AOBhPQAgCb0A4Fa9AEDjPABAVr0AAFY8APCTPQAAEDwAwPO8AOBxvQAAjTwAoKg9AABOPQCAMz0AwIy9ACBpvQDAMz0AQIq8AICRPAAgHz0AAOm8AACcvQCASrwAkMu9AAAGPQAARL0AgHw9AIBOPQAgQz0AAEa8AIA5vQDwij0A8Iq9AMAQPQAAVLsAwJQ8AJCbvQAAgrsAAGK9AOClPQAAwDgAAAC9AGB0PQAA9LoAoKy9AIByvAAAzDoAgMK8ACAFvQCgM70AMIi9AMCWPQDAyzwAgCu9AAA4uwBgLj0AAPy8ACACPQCACbwAIF+9AEA1vQAA+TsAAOC7AICxPACgn70AANs7ADCEvQAAvrwAsKE9AGDFvQDgIr0AABC6AABuPQCAjLwAALQ6AMBJvQCQhL0AcKq9AOARvQDAw7wAwJK8AACCvAAAgjsA4Iu9AGAXPQCATD0AgEo8AAA7PAAAir0AgH09AECbPAAAq7sAAH48AICbPAAAOLwAABS9AGDMvQAAVb0AoDC9AAB6vAAAsjwAwL28AAAIvQAglj0AgFg8AMBRPQAAQ7wAAJI7AGA1PQAgb70AYAG9ADCkvQDA7jwAAIi6AKA6vQAABzwAAPk7AICNPABAmrwAYCq9AICjPAAAyDwAgHC8AABoPACAz70AAL28ACAMvQAAOr0AAFQ7AADTuwBA7zwAwK28AEDwPACgVj0AgC89ABCLvQDgUb0AAB+9ABDOPQAAXDwAgF48AGBtvQAAwTwAAM89AADkvAAAgjsAAKy8AIDZvACA5j0AwLK8AEAZvQBA1zwAgJI8AGABPQAAbrwAAFA6AADGPACAoL0AUJG9ACBzvQDAgb0AgHk9AADtuwDgTj0AYAW9AECsPABAvLwAQC69AAC4PADA6bwAgM+9AIAoPAAAVLsAwIG8AMAEvQAA9LwAgKG8AKAxPQCgrD0AgLY8AAAlPAAgIz0AAKs8AIDTvADgN70AAM88AMCUvAAAXz0AAA+8AADqOwCgLb0AQPW8AID2PAAACbwAgPe8AACBuwCAmLwAUJG9AAA2uwCgDb0AgCu8AABePABAtzwAwKC8AABPPAAApzsAAIY7AKAavQAAOD0AAB68AMD9PADApjwAANg8AIDrPACAEzwAgLk8AGBAvQDgUb0AAKm7AOBmvQAAhLoAAJO8AECsvQAgC70AgEW8AMD0vACAF70AQCa9AABavQAAqLoAIGs9AGBwvQBAsDwAwEO9AMCHPADAbj0A4EA9AAApvQBge70A4E89AADHPACQvj0AAKg8AEBNPQCAnL0AANe8AACgvABgfr0AAMa7AJCnvQAAGzwAAPe8AMDYPACgfr0AwEM9AGB/PQCABTwAgJ88AOBDvQAAjDoAgBY8AKAJPQBgPT0AAJI7AKAKvQBw+r0AYNM9AIDfvAAQlT0AcI09AEDTPAAAZb0AgOK8AECePABQxz0AwAk9AMCEvADA7bwAYFo9AEDwvAAgM70AwJI8ABCkvQDAXb0AgEi8AIBkvABA2rwAAJ28AACAOgAAajsAYIC9AMAzPQDgDb0AgKS8AGAAvQBAgrwAwO+8AEDoPAAAF7wAoGs9AAD+OwAAcL0AgCK8AMAUvQAAPzwAAK87AKADPQAA8zwAQB49AMDVPQAA6rsAAHi9AMCFvACAALwAwLI8AKDpvQAA6LoAQIO9AKByvQDAkLwAAIq9AADlPACABL0A4Bo9AECmPADAoj0AIGO9AMAPPQAArzsAQO+8AEDGPADgwr0AgBK8AIAYvQCATTwAwJU8AKCoPQAAyjsAWAU+AICpvABAyLwAAAAAAOAcvQAACb0AgI+8AAClOwAAHLsAANS6APgBvgCALT0AgC+9AMCHvACgYD0AQCs9AADxOwBgBr0AIBo9AACPvABASz0AgLK8AADWOwAAyTwAAJo7AOArvQCARDwAgOe8AIBdvQAgkD0AQH89APCHvQBAfD0AgBg9AKAJPQCADL0A8IK9AIADPQAAcjwAAJu8AAD0PACAw70AgCg9AMDrPAAAwbwAAL+7AEDqPABwoT0AAIo8AECBPABA7LwAwMk8AGAJPQBA77wAoBG9AAADvQAAmDoAQOg8AOCsPQBgZT0AgCo9AIAoPQAAN7wAALE7AGAuvQBA9TwAgMW8AIDqvAAAJrwA8OC9AIAzvAAASr0AIFw9AADZPAAANDwAAB29AEDDvADAEb0A0Lo9ALCAPQAApzsAgAO9AADhPADgN70AAGK8AKBYPQBwjj0AALu8AEBtvQCAGLwAALS7AIAfPQBAmLwAAMq7AACivACAIjwAQPI8AABHvADAer0AALG8AADuOwAAgbwAYFi9AACqPADAk70AoH09AAAjvACgyD0AYJa9AMCqvABA9bwAAMQ8AIC0vABA1zwAACA9AID+PACAGjwAwJq8AADEOgCggj0A4Ae9AAASPQDAiL0AAP88AIBbPACAPDwAAIA5AECuvADgu70AwCg9AAAVvACgFz0AAIw7ACBiPQCgQ70AcIi9AIC9PAAAmTsAQPY9AKBZvQAAcDsAoFo9AOBuvQBAvL0AgBo9AJCHPQCAO7wAQKG8AACAuQAgmr0AAMK8AACoPAAAATwAAPc7AAD0ugAA3LoA4GQ9AEDhvACAprwAgOi8AACKvQAA2jwAAOo7ACBQvQBAwD0=","chunkHash":"94a1a6b5c9163f9d3a9814606dae32ddbe7943606e91f776300797ccc02ce3a4"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n                # Filter out unclassified samples if requested\n                if ignore_unclassified:\n                    df = df[(df['class_name'] != 'Unclassified') & (df['class_id'] != 19)]\n                \n                # Filter by class if specified\n                if filter_by_class is not None:\n                    if isinstance(filter_by_class, int):\n                        filter_by_class = [filter_by_class]\n                    df = df[df['class_id'].isin(filter_by_class)]\n                #...\n```","range":{"startLineNumber":85,"startColumn":0,"endLineNumber":94,"endColumn":0},"embedding":"AABQOwCAkjwAIFY9AEAsvQDgY70AAIC8AIA5vQAAYbwAAMg6AACBPQDAwLwAQE+9AIBePACAFr0AgH88ACCOPQDAyzwAQLW8AKB8vQBA0zwAgJs9AMBMPQDAhT0AgIy9AKA/vQAgaz0AAOK7AAA6uwCAET0AwMq8AMCUvQAA77sAgK29AABPPABgc70AYDM9AIAuPQAgZT0AgHm8AKA7vQCAZT0AoHy9AAAZPQAAuLsAAGE8AOCgvQCAYLwAoG69AECiPQCAGrwAYC29AMCBPQCABrwAMIu9AAB8vAAADzwAYCC9AID9vADA5rwAAGa9ANCYPQAApjsA4CK9AAC4PACA3DwAoBK9AICiPAAAMDsAQDy9ACBevQCAqDwAgE28AMAGPQCgm70AACA8AMBMvQCAMLwAIJU9ACDEvQAgKr0AAJa7AEB6PQAAb7wAAJw7AABKvQBQlL0A4LK9AAAfvQAAK70AgPa8AICqvAAApDsAcJ+9AOA4PQBAGz0AAIE8AICkPACAfr0AgGw9AEC9PAAATDsAAF88AABLPABAqbwAoBi9ANDZvQBQhr0AICu9AMCGvADgAj0AAAY7AAAivQDQpT0AQJs8AGA/PQCALLwAAE88AGBCPQDggb0AQPS8AACTvQCAaDwAAKm7AKB5vQAAEjsAAKM7AECqPABAtrwAACq9AADEPAAA/zwAgDi8AAD4OgCgu70AQLy8AEAAvQBAJb0AQIQ8AABjvACAST0AIBC9AOBBPQCAbD0AgAw9AKBqvQBASL0AQD29AMC9PQAAcTwAgE08AMCBvQBAiTwAQLA9AIC+vAAA6jsAAJ28AAASvADQ8D0AAKK8AKAevQCATzwAwKk8AMDJPABAjrwAwIM8AAChPACwjb0AcI29ADCBvQDgRr0AQFE9AABfvADAfD0AYAK9AACFPACABLwAIBy9AAAMPQBAzrwAcPC9AABcPAAADrwAAEa8AIAsvQCgA70AQPe8ACAhPQDgnT0AwKU8AACaOwAAWT0AwOA8AICpvABgEL0A4BU9AACYugDAbj0AAIe8AAC7OwAAFr0AANe8AECePACAr7wAADO8AADmOwAAEbwAkIK9AAA4PACA7LwAANW8AAB6PACA1TwAIA+9AIBwPAAAu7sAAHI7AOA3vQDgKT0AAJy7AGAYPQDAHT0AADo8AICgPAAAUDsAAJE7AAAnvQDAHL0AAFG8AOCOvQAAcjsAgC68ALCjvQAA1LwAACC8AECBvACgXL0AQDS9AOBwvQAAFjwAQIM9AJCTvQAAuDwAIFC9AACdPACAWz0AgFM9AOAbvQDglL0AQDY9AIAEPQCAtz0AAIQ7AKAyPQBgq70AAAe9AACbvABAar0AgBy8AICJvQBA8zwA4Fe9AECxPADAZr0AAEo9AFCUPQCANDwAwP88AGBbvQAAELsAAOQ7AEDhPABgJz0AAMs7AGAsvQDAB74AsLc9AABdvACAlz0A8I89AADeOwAAaL0AoAK9AAD4PACAzT0AYAY9AICbvADAyLwA4Cs9ACAQvQBgF70AgI48ANCVvQAAYb0AgIO8AMDrvACgBL0AAEO8AADEOgAAHzwAEJS9AADIPABgAL0AQLS8AMAGvQCAeLwAwLS8AGAkPQCAhrwAAEU9AABUuwBwgL0AAMO8AOAQvQBAnTwAAIC4AIDoPACAvzwAgP88ACDOPQAAGTwAUJS9AABzvACAbrwAgHw8ALDrvQAAFjwAAIi9APCBvQDAprwAEKK9AADYPACgJr0AgAc9AMCBPACAqz0AoGG9AACCPACARzwA4DC9AADmPADQtb0AwI68AOBlvQAASLoAgMY8AHCAPQCAOTwAeAA+AICAvABAw7wAAPu7AIBevAAAs7wAgGG8AAB+PAAAPLsAANS6APD9vQAATT0AYAK9AABxvAAAWD0AoFA9AAB8OwAAKb0AQJw8AMD0vABAZD0AQKK8AIB3vABgCz0AAPA7AABWvABAgTwAQC69AIBjvQBgiT0AAIM9AOBAvQDQhD0AoDQ9AGAiPQCgLr0AQKC9AICVPAAAUDwAgGS8AMDePABgy70AgEg9AICGPAAA5rwAAGA5AADVPACQrD0AABo8AMDdPACAX7wAQNo8AGAuPQCAGbwAgNi8AGAGvQAAC7wAAME8ABC2PQDAQD0AAMI8AEACPQCAQbwAALA7AABDvQCgEj0AgLW8AKAJvQAA7bsAoNS9AAA8vACAh70A4EQ9AIAmPQAAOjwAgAG9AMCXvAAA3LwAYLQ9AIB4PQCALzwA4Cu9AABMPACgOb0AQJ28AEBoPQDghz0AgNa8AIBuvQCAsbwAAGg8AKBfPQCAGbwAAKm8AACnuwAARzwAQOs8AADSvACAOb0AACS8AADTOwDAtLwAgFm9AAD1OwCgb70AgF49AACYvACwyj0A0MO9AEC1vACAAL0AABA9AABGvABADD0AgOg8AMDPPAAAFDsAwO+8AIBDPABgUj0AwBe9AKAUPQBgYb0A4As9AEC0PAAAjDwAAEg6AAC0ugDwur0AwEo9AMDOvABATT0AANk7AIBcPQDAXb0AkIi9AMC/PACALrwA0Ps9AEBOvQAAuLsAwCc9AOBUvQCwmr0A4AQ9AGCQPQAARrwAgES8AAAIugAwqr0AgMm8AMDTPAAASrsAgAE8AAABvAAAgzsAwF89AIDIvAAApLwAQLe8AICtvQAAozwAACa7ACAovQAQ0T0=","chunkHash":"043a343efdc2b9551eaed829c2a6b23b2dbe254dad68b8eeb174c35ca2a86f07"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n                # Filter by sample ID if specified\n                if sample_ids is not None:\n                    sample_ids = [str(sid).zfill(4) for sid in sample_ids]\n                    df = df[df['sample_id'].astype(str).apply(lambda x: x.zfill(4)).isin(sample_ids)]\n                \n                # Sample a percentage of each class if requested\n                if self.sample_percent < 100:\n                    sampled_df = pd.DataFrame()\n                    #...\n```","range":{"startLineNumber":95,"startColumn":0,"endLineNumber":103,"endColumn":0},"embedding":"AACZOwCAbTwAAGQ9AEDivACAVb0AAMO8AAAovQCAI7wAAIK7AECDPQCAt7wAQGi9AIC3PAAgGL0AAGQ8ACCdPQCApjwAgK+8AEBbvQBA6jwAkJY9ACBRPQAgWj0A0IC9AKA1vQAgUD0AAMm7AACpOwBAID0AwOS8AICTvQAAx7sAUKy9AADQOwBgjr0AoEE9AGAcPQBgXj0AAF68AEArvQDgeT0AwH29AIA0PQCAYbwAgC88AACYvQAAwrsAIG+9ABC7PQAA9LsA4A69AEBwPQAAz7sAgIa9AAAQugAAhTwAwBq9AAD7vABAGb0AQHy9ABCZPQAAcDoAgOm8AMCZPADAEz0AgOC8AICoPAAAoDkAoCm9AKBYvQAAwDwAgBu8AADdPAAgk70AAFU8AABHvQCAlbwAoIw9AHDVvQAgML0AAGg6ABCFPQAANLwAAIW7AMBjvQAgjr0AALW9AKAAvQAgCL0AwOe8AMCovAAAwLoAoJ+9AGASPQAgJj0AAHg8AIBDPACQiL0AIG49AMDpPAAAAzwAwI08AIB+PAAAkrwAwBu9AFDFvQCgVL0AwE29AEC/vADAxTwAAMo7AGA0vQDgmj0AwI08AOAxPQCAbLwAgJs8AEAqPQBghr0AgPy8ABCqvQAAfjwAgA+8AEBAvQAAQDoAAEg6AABaPAAAC70AADW9AOALPQBAzzwAQIm8AAB8uwDAwb0AgFe8ACAXvQAAH70AgIE8AMCDvADgPD0AIAy9AABPPQBgXj0AQP08AMBlvQBgY70AQFa9AADBPQAAIzwAgKE8ABCAvQCAlTwAQKk9AMDLvACAgzwAgAK8AECpvADQ4T0AgMq8AGAEvQCAPjwAgJc8AMCHPAAAU7wAAGE8AAArPABwkr0AgJy9AGCJvQDgQr0A4Dk9AEDlvAAQgD0AgOe8AIBUPACARLwAYAC9AIAkPQBA57wAUN+9AACoOwAApLoAwL+8AKAqvQDA57wAABa9AADqPADwmD0AwOU8AADLOwDAKz0AAOI8AIDGvACgCL0AwLY8AAD6uwAAaD0AgHG8AICMPADAA70AgPW8AADgPADAk7wAgFC8AAAkOwAAzbsA0IW9AADAuwAgB70AgMa8AABgPABAmDwAQLS8AACuOwAAILkAAL87AEBBvQDAHD0AANQ6AIAoPQDgBj0AgH48AIDNPAAAgTsAAEw7AEA+vQBgHr0AAN27AOCVvQAAmDsAADi8ACCivQDA77wAAPq7AIChvABgOb0AgFC9AMBlvQAAADkAoEE9AKCVvQDA+zwAgEy9AMCOPADAWz0AQF09AAAVvQBQoL0AADs9AED1PADwpz0AALU7AIA4PQAQsb0AwPC8AEC0vABghL0AABq7AICHvQCAmjwAwCe9AGAHPQBAbb0AoDs9AJCUPQAAkTsA4AA9ACBrvQAAjDoAAE48AIDjPABAMz0AADo8AMAjvQC4AL4AUKo9AADSuwAwlz0AYHg9AECKPACAYL0AoBW9AMD5PADgzT0AgAM9AECZvACAb7wAoBo9AAAOvQDAHL0AANM7AACFvQAAVb0AwMi8AECovAAA6bwAgFy8AIASPACAHjwAkI+9AADWPABADb0AwJC8AMD5vACAJLwAwNi8AKANPQBAjbwAIGY9AIADvAAwi70AAMm8ACAZvQDA0zwAAFC7AAAMPQBADz0AgNc8AFDfPQAAWLoAYKK9AACAuwCAT7wAgEA8AODnvQAAALsAwHW9ADCNvQBAtrwAUKC9AIAQPQAAH70AgP88AIB4PACApD0AwFq9AMDjPAAAOjsA4CK9AEDuPAAQsb0AAJq8AKBcvQAAsrsAAK08AOBsPQAALzwAiAA+AIBOvACABb0AACe8AAATvACA77wAAKy8AABTPAAADjsAAAY7AIgFvgAAJj0AgCC9AACEvACATD0AgGA9AADgOwBgJ70AwNc8AMChvABgUj0AwL+8AABSvADAFj0AACU8AMCNvADAjDwAAA69AKBhvQCghz0AAIY9ACBqvQAwjT0AQB09AKBDPQBgHr0AQJ29AAC8PADAnDwAAGK8AMAHPQCAwb0AoDw9AIBXPABgCr0AAP27AIDdPACgmj0AADA6AADmPAAAabwAAPk8AKAiPQCAm7wAQI28AMDVvACAC7wAQJA8APCzPQCAUj0AgNo8AGAIPQAA3bwAAP07AIB2vQCAAz0AAIy8AAAYvQCAFbwAwN29AIA/vACATL0AQFI9AMD5PACAYTwAYAi9AIC1vACgAb0AAMk9AEBOPQAADTwAoEu9AMDSPACgHb0AQI+8ADCEPQCQiD0AwLq8ABCCvQAAU7wAgEQ8AKB5PQBAm7wAwLW8AIAcvABAgTwAIAw9AAD1vADAU70AgAi8AACrOwDAm7wAAHW9AIAYPADgi70AAGs9AACbuwBg0j0AEL69AEDpvACADL0AQAo9AIApvABgAz0AwOs8AMDhPAAAxzsAQOK8AIBCPACAeT0AQCK9AEAbPQBgQ70AQMA8AACaPACAXzwAANS6AAALvABAzb0AYEs9AIDMvAAgQT0AAKk7ACBUPQAAYr0AwI69AMAEPQAAqLsAMPo9AIBOvQAA5LsAACQ9AFCAvQAwrb0AQAk9AOCJPQAAPrwAgHu8AABAugCQnr0AQMS8AADwPAAAVrsAAEw8AAAUuwAA8LoAAJE9AECpvABAkLwAAIq8AECfvQBAojwAAAA5AABivQCAxj0=","chunkHash":"d31a94381c71b8e07ac99df80c6a385ead937f9b575205d0c100df49cd22fc8e"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n                    for class_id, group in df.groupby('class_id'):\n                        num_to_keep = max(1, int(len(group) * self.sample_percent / 100.0))\n                        sampled_group = group.sample(n=num_to_keep, random_state=42)\n                        sampled_df = pd.concat([sampled_df, sampled_group])\n                        if self.debug:\n                            #...\n```","range":{"startLineNumber":103,"startColumn":0,"endLineNumber":108,"endColumn":0},"embedding":"AICbPACAkDwAIHo9AECFvABgRr0AAMq7AEAcvQDAnLwAABA7AMBLPQBAsbwAQCu9AAA6PABALr0AAFE8ALCbPQAAETwAIAe9AEA3vQCAvjwAgI49ACBJPQDgbT0AAI69AMAgvQDgcz0AgEW8AADEOwBgDD0AgOa8ACC2vQAAwLkAIJ+9AAATvABQp70AIFQ9AOA7PQAAWj0AwNm8AABFvQCglT0AcIi9AKAoPQAA1bsAwMM8AICcvQCAM7wA4Im9AODZPQAA1DoAwPC8AABxPQCAc7wAoIG9AAAGOwAATTwAgOe8ACAEvQCA2bwAAGS9AMCnPQAAMLsAgOW8AECLPAAAHz0AAOS8AMCAPAAA5zsAoDC9ADCGvQCAdjwAgE68AIDwPADQqb0AgBk8AGAHvQAAw7sAQEk9AJDYvQAA37wAAHA7AECHPQAA+bsAABi6AEBVvQCwnb0A4Kq9AGATvQBA+7wAAJe8AIAGvAAAPDsAQJW9AMAoPQAgDz0AwKM8AECdPACAZ70AoGU9AIDuPAAAhDoAgJw8AAAnPADAgrwAgD+9AGCtvQAgeL0AwC69AEDQvABAXj0AwJg8ACAyvQBAfz0AgJ08ACBAPQDAirwAgK08AMA3PQCgXL0AANu7AKCovQAAhTwAACu8AOBpvQAAEDsAgCQ8AACIPADAEr0AQCq9AID+PADACT0AgF28AECDvADwx70AAE68AMApvQCgGb0AgIU8AEC+vABAHz0AQPO8AIAkPQCgWz0AgM08AOBcvQDAM70A4HC9AEDTPQCAMTwAQIw8AACcvQDAjzwAcJY9AABhvAAAtzsAACi7AICwvABA5j0AQKe8AOACvQAAqDoAQLs8AIBuPAAAHjsAQI08AIBYPABAqr0AQJO9AKBrvQBAPr0AQFk9AOAGvQAgYD0A4Ce9AIBXPADAtrwAwBe9AKA6PQCA/rwA8NO9AABMPAAAKLwA4Aq9AMD0vABgFb0AIDS9AEAkPQAwoD0A4AE9AAB0PAAgKT0AoBU9AMCNvAAAEr0AQEs9AIAgvADQhD0AABK8AIA9PADgB70AQAq9AABuPAAAErwAAMy7AAAjPAAAYDoAAJq9AADLOwCAGL0AQPW8AIAQPABAvTwAwKi8AIAHvAAAuDoAgB48AMATvQDAAD0AAHI7ACA9PQBAHz0AAHI8AAB+PAAABDsAADQ8AMDRvADADr0AAIu8AIChvQAADDwAgJK8ALDHvQDA3rwAwI68AAAevAAAMr0AwDe9AGAtvQCANTwA4DA9ANCPvQBgBT0AYB69AAB5PACgPz0AwHk9AADQvABQjb0AADg9AGBIPQDAoz0AAOA7AGBEPQCwtL0AAOa8AIDnvAAwgr0AgAE8AFCFvQDABT0AIBy9AOAWPQAAZb0AoEY9AGB8PQAA/jsAwOk8ACBMvQAA7DsAAPo7AIB/PABAAT0AAJw7AIDAvADQ670A0I89AADkuwDAjT0AQGQ9AAAQOgDgNL0AgK28AMApPQBgxz0AYCY9AMCQvAAA5rsAMIA9AMAqvQCAoLwAAPq7ABCSvQCgVb0AgGi8AECWvADA6LwAwPW8AAChuwAAkDkAYJe9AECGPABAxrwAgNa8AAC9vACAt7wAwBa9AKAIPQAAn7sAwDA9AABAOwAgXr0AgKW8AIDhvABgOD0AwIu8AOAUPQBgRz0AQJY8AJDdPQAAJjsA4Jm9AABcvAAADLwAwIA8AEDovQAAaLoAIFW9AECLvQBAmbwAILa9AIDuPADgO70AwBA9AIDBPAAwmT0AwGO9AIC8PAAAB7wAwBG9AADiPACQrr0AAAi8AOAlvQAAc7wAAMs8AKBjPQDAjDwAwAU+AECFvADAz7wAgBu8AABCvAAAubwAQJi8AABfPAAA9jsAALc7ADAAvgAgGD0AYCu9AACdvABAgj0AYFE9AACnOwAgg70AYDM9AIBMvABAbj0AwLC8AAA+vABAIz0AAEC5AMCNvADA4jwAQB+9AOBEvQBAjD0AIIw9AGBjvQAQij0AwCE9ACAiPQDgNL0AUIq9AADnPABA5TwAgA28AOAsPQDAs70AYA09AICdPAAgDb0AAKS7AIChPAAwmz0AALc7AMABPQAAEjwAIA09AMBGPQAAZbwAgMG8AADTvAAAobsAALM8ABDKPQDARj0AQOU8AAAYPQCANLwAAJg6AGA9vQDA+zwAQOu8AKAFvQAAcbwAcPm9AIBivACARL0A4Fk9AOADPQAAdzwAICa9AMCAvADA2rwAANw9ACAtPQCAHjwAwDu9AMCaPADAE70AAEy8AFCUPQDAfD0AAHC8AMA8vQDAprwAALg7AGBXPQBA0rwAACC7AABkvAAA2TsAgO88AMCyvACAIL0AACy7AADIugAAwLwAsIe9AADwOwBAjL0A4GM9AMCXvAAQ3T0A0M69AIC9vABgCb0A4B09AIAovAAA4zwAQOE8AIDXPACAGzwAQJ28AMDMPACAVj0AAB29AIAMPQBAFb0AABI9AECYPAAAwDsAANS6AABGOwCQvr0AABY9AEDEvADgPT0AADQ8AMAtPQDgRb0AoHy9ACAtPQAAgLkAsPw9AMAgvQBAh7wAYFw9AIBxvQAgrb0AQCc9APCmPQAARbwAAFK8AAAcOwBAYb0AAKS8ACAVPQAA/bsAgHQ8AAC3OwAArLsAAHU9AIA+vACAS7wAQOO8ADCsvQAAUDwAgIC8ACByvQBA1T0=","chunkHash":"956b368e961b1199ba38604b437c3275dd4b7661568b50aaf4cee17b87665754"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n                            print(f\"Class {class_id}: Sampled {num_to_keep}/{len(group)} samples ({self.sample_percent}%)\")\n                    df = sampled_df\n                \n                # Create sample entries for each valid sample\n                for _, row in df.iterrows():\n                    sample_id = str(row['sample_id']).zfill(4)\n                    class_id = int(row['class_id'])\n                    class_name = row['class_name']\n                    \n                    # Skip unclassified samples if requested\n                    #...\n```","range":{"startLineNumber":108,"startColumn":0,"endLineNumber":118,"endColumn":0},"embedding":"AEDNPAAAjjwA4FM9AADIvABAUr0AAHO8ACBQvQAA0rwAAPS7AABIPQAA6LwAgHi9AMCpPAAAQr0AAJ+7ABCSPQAAvLoAgPC8AEBUvQCA4DwA8JE9AAAqPQBgcT0AUIC9AGACvQAATD0AAM+7AADYugAAIj0AoAG9AOCYvQAAMrwAgLS9AAD7OwBAsr0AIF49AGBWPQDAOT0AgKe8AOBbvQDwhj0AAJ29AMBLPQAAcLwAgGY8ABCUvQAAELwAwJK9AODFPQAAwrsAYB29ADCFPQDAobwA4Jq9AADmuwAAWzwAQNu8AEDbvABAx7wAwJK9ANCbPQAAFDsAgJC8AIDmPACA/jwAAMm8AIBhPAAAgzsAgCq9AAB8vQDAqTwAAFS8AACGPACglr0AAAM8AOA1vQAA9LsAYGE9ABDkvQCAM70AAJI7AGCJPQAANbwAAP67AKBKvQBQir0A4LG9AOAhvQCAv7wAAEO8AICMvAAAajwAYI29AEAZPQCgGj0AAIY8AAB6OwDwgb0AYHk9AEC9PAAAMDwAwMg8AAAKPACA1rwAYAu9AODFvQCAbL0AYD+9ACAOvQCALz0AAHI8AMBAvQAgmT0AgPE8AMCBPQAAirwAgLg8AOAxPQDgXb0AAPm7AKCovQDAgTwAwI+8AMBpvQAAADoAAOo7AAC1PADgC70AQBu9AGALPQBAzjwAgEi8AICbvAAQs70AwK28AGAbvQCA8rwAgBo8AABrvABgAT0AgNi8AEAlPQDAVz0AYAA9AGAovQDgWL0AQIe9ADDDPQAA+jsAgE48AGB5vQAA2TwA0JM9AIAzvAAA9zsAgCC8AEClvABg0z0AAPS8AADbvAAAtDoAQMw8AMDgPAAAizsAwIQ8AACMuwAgjb0A8Iu9ALCIvQBgX70AYGo9AECwvACgZz0AADi9AABhPAAAwbwAgNC8AGAOPQCAD70AcN69AACMuwAAILwAQLe8AIAxvQBAh7wAoFq9AMAVPQCAoj0AANk8AAAgOwCgNT0AwOc8AMDTvAAgK70AgMc8AAA6vADgfj0AAJ67AIDpPACgFr0AIBq9AABEPACAvrwAADO8AAC6OwAAGzwAcJe9AIAgvAAAFb0AQK28AACaPABAqDwAQKm8AADfuwAAprsAwIQ8AIBDvQBgKT0AAK67AKA7PQAAxTwAAHQ8AICVPAAAIjsAACo8AKAbvQAAQ70AAMK7AFCrvQAAILoAwIu8ACCmvQCA2rwAAHq8AIAlvAAgLr0AgC69AMBZvQAAg7sAIGQ9ACCZvQBA/zwAQPa8AEDGPADgYD0AwC89AGAFvQAApb0AQGM9AAAZPQBwoT0AwIc8AOA0PQAQt70AAPm8AABHvABwgb0AAPy7ACBmvQAAgTwAADe9AMCtPACAUr0A4Fw9ACCDPQCAbzwAAOs8AKAwvQAADDwAAJQ7AIAlPABADD0AAII7AGAavQAA870AsJU9AECDvABgkT0AAGs9AACAOQAgP70AgOm8AADqPABgvD0AACM9AICevAAA+LsAwD89ACACvQCAvLwAAEC5AOCOvQCgcr0AQNG8AICfvADgEr0AgFC8AABMOwAAIjsAUKG9AEDNPADgBr0AwKe8AED2vAAAYLwAoB29AGAcPQAA37sAADg9AAA1vADgYb0AgDO8AIDivABAgzwAAKG7AADyPAAgQj0AwAs9AKDZPQAAyTsA0Jm9AAAJvAAAjTsAAF48AMD2vQAAQLoAYHW9AGCPvQCABrwAoLS9AIAMPQAAOb0AYAQ9AIBjPACAtD0AAGK9AEDlPAAAiLoA4D69ACA2PQDAu70AgHe8AEAyvQAA3LsAQIo8AAB6PQAAFDwAIPs9AECBvAAgAb0AAFO8AICYvACAx7wAwLW8AMCoPAAAbjsAAA88ALD5vQDADD0AoBO9AIBXvAAgXj0AIHA9AICdPAAgQr0AAB09AIAVvACgSj0AAM68AECMvACgAz0AAK07AADcvAAAmDwAYB29AIAyvQDQlT0AcJs9ACAwvQAAlz0AQPk8AIBBPQAgHL0AkJ29AGAHPQCgGj0AADa8AEAQPQCQub0AwDs9AIBXPADAAb0AAFw7AADhPACAoj0AABU8AADgPACAA7wA4AY9AEA/PQAAwrsAgL68AAD2vAAApLsAgJU8ACC8PQBgNz0AwN88AABFPQCAILwAAFY7AOB6vQCA8DwAQB69AIDjvAAAhrsA4Oa9AAAJvAAAVr0AYCw9AAD0PAAAwDgAwAe9AIAnvABAxrwAMMc9AGApPQAAILsAADy9AMC0PABAyLwAwJK8APCBPQDAhT0AwK28AIB0vQCAnrwAAHa7AMBFPQAA7LwAAG68AAAlvAAADzwA4Ak9AMC6vABAXL0AAIO7AAD8OgCAtLwAoHK9AIAUPADwk70AwE89AABdvADwyj0AENO9AMD3vABAFb0AgNA8AEDsvADAgTwAgJ48AIDZPACALTwAAKu8AABFPAAASz0AYBK9AMBIPQDAM70AQAA9AAAJPAAA2DoAAOI7AAD9uwAQw70AoBo9AMDUvACAYz0AABQ7AKAXPQAAUr0AEIi9ACA2PQAAKLoAIPM9ACAXvQAArrsAgEE9AKBIvQCAyb0AYBk9ABCEPQAAS7wAAKC8AACSuwAge70AgLC8AAAiPQAAp7sAgC08AABQuwAAoLoAMIo9AECDvACAr7wA4AG9ALCZvQAApDwAAFq8AKB5vQDAxT0=","chunkHash":"312f9e66eeb9804772091bad17598b413d09ca5480d0d6267b2391eaf9d8cddb"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n                    if ignore_unclassified and (class_name == 'Unclassified' or class_id == 19):\n                        continue\n                    \n                    # Find the sample directory\n                    sample_dir = os.path.join(root_dir, sample_id)\n                    \n                    # Check if mask directory exists or if we have precomputed data\n                    mask_dir = os.path.join(sample_dir, 'mask')\n                    \n                    # Check for precomputed mesh\n                    precomputed_mesh = None\n                    precomputed_pc = None\n                    #...\n```","range":{"startLineNumber":118,"startColumn":0,"endLineNumber":130,"endColumn":0},"embedding":"AIBjPACAWDwAgIQ9AEAJvQDgUb0AAE28AEAkvQDAmrwAAPi7AOBBPQDAvLwAIGu9ACACPQAgf70AwKM8AJCZPQAAJDwAwM28AFCMvQBAxTwAEKM9AGAyPQCAbj0A8Je9AKBIvQAQgz0AgDm8AACgOgDgWj0AwOu8AACvvQCAYLwAYLq9AECIPADgZb0AwHs9AABWPQDAHz0AgCW8AMAzvQCgYz0AcJe9AMARPQAAGjsAAIC4ABCYvQCAh7wAYHW9AACvPQDAiLwAoAu9AMCDPQAA87sAgHe9AIC8vAAA5jsAwPK8AAD9vACgFr0AIHa9ACCUPQCAeDwAgDK9AADiOwAAJj0AwCC9AEDSPAAAYLoAIG69AOBovQAAgLoAABq7AEDHPACAib0AAJQ7ACBgvQAAkbwA0LQ9AIDBvQAgNr0AgAO8AIBaPQCABLwAAFC7AKBLvQDwi70A8La9AIAmvQAgD70AQKi8AIAMvAAABDwAUKC9ACA8PQDADT0AAGs8AABgPACQhb0AoIU9AADoPAAAQjsAgBY8AIBXPABA67wAQP+8AIC4vQCAPb0AQAS9AMDGvADAyjwAQIW8AMAdvQAgqD0AwO88AHCGPQAAVDsAgKo8ACAFPQCgdL0AQAa9ABCavQBAqDwAANA5AMBCvQAAhzsAgAE8AMDUPACAtbwAYAO9AEDlPABAzzwAgH+8AADgOQCAzr0AgIC8AEDwvAAgJ70AAGA8AADKuwAAMD0AICe9AGAyPQCgbz0AQGg9AICPvQAgMb0AwAu9AKDDPQAApjwAgCc8ANCGvQAAgDoAULk9AIDkvAAA1zsAgHG8AED2vABQ3T0AANi8AMASvQAAJTwAAO48AOAnPQDAl7wAAGk8AIABPQDghr0AQH29AKB4vQDAeb0A4Gc9AIBAvABQhT0AYFu9AADFPACAS7wAIDa9AEAyPQBAlLwAQNG9AACtOwAALrsAALC6AEAXvQBAAb0AgOa8AGAqPQCgtT0AADY8AAD8OwBgUT0AAP07AABGvADAE70AgPs8AIBNvADQgj0AgGK8AADCOwDATL0AwBm9AIBrPAAAoLwAwIW8AAAAuwAAcLwAgH69AADQugDAg7wAQIa8AIAHPADA9jwAwIq8AMCJPAAA27sAAHi7AOA+vQCAPT0AAL+7ACAVPQDgCD0AgLU8AEC9PACALjwAgPo8ACBEvQAAWL0AANu7AKB6vQCAbTwAgD28ABCVvQDAwbwAAMA4AEDSvACAVr0AADC9AHCIvQCAAzwA8Iw9AABYvQCAjDwA4DK9AADBPABAOT0AADM9AEA4vQDwib0AICE9AKAJPQBwxj0AAEY8AMA+PQCAn70AQKK8AIBsvADwjL0AAMK7AMCUvQDAvzwAYDe9AIDmPACQhr0AIE49AACLPQDAhzwAAJE8AOAlvQAALLsAAFK7AIDTPABAIT0AAA08AEAJvQCQ/L0AEMc9AMDjvAAQhT0AAIk9AAA6PAAgYb0AgPK8AAA9PAAAwz0AQBQ9AIACvACAubwAACw9AEDcvACgE70AAOI8AGCYvQDAUb0AABG8AIDHvADAMb0AgJS8AADRuwAAIDkAEIS9AIAePQDgKb0AwLa8AED9vAAAU7wAwO28AED0PAAAvbsAAB09AACOuwDgcr0AAFa8AGAYvQAAFTwAgEo8AEDqPAAAyjwA4CQ9AAC9PQAAEjsAkIW9AICovAAAaLwAwMQ8ABDpvQBAkDwAMIy9AKBwvQAAFrsAMIO9AIDTPAAADb0AwBQ9AABqPACwsj0AgBi9AAD7PACAsDwAYBu9AECnPABAyL0AAKu8AIBKvQAAmDsAQIQ8APCLPQAAJjsA4AY+AABpvAAA1rwAACC5AMDbvACA6bwAAIe8AADxOwAAXDsAAPC6AKD9vQBAZT0AACK9AACvuwBAZT0AoEA9AMCjPADAC70AgOA8AMCrvABgbz0AQLa8AAAquwBAwTwAAAQ8AAADvQAAtzsAADO9AMBkvQBgmD0A0JA9AMBKvQDAdj0AoE89AADVPABABr0A4Ki9AKAAPQBAyzwAAJy8AICzPACwy70AwA49AECzPAAA/LwAALo7AOAEPQBwkz0AAFk8AECHPABAy7wAAJM8AIATPQBAybwAwP+8AMDwvAAArDsAwNw8AKC4PQCATD0AQAM9AGA+PQAAWbwAgCE8AABkvQCA3DwAAKm8AAC6vAAAFjsAQMy9AAA+vAAAlL0AACY9AADYPAAA/TsAgAq9AMDKvAAA8rwAAKI9AHCAPQAASjsAIBS9AACWPACAC70AALy8AABqPQBAoj0AQKa8AGBsvQDA0bwAACg6AOA/PQCADbwAwI68AABcuwAAnjsAgNg8AMD0vADgY70AAGq8AAAguwBAy7wAQDC9AIA8PADQhr0AkJA9AADjuwAQxz0AwLi9AAAPvABA+rwAAME8AIChvADgDT0AgPw8AOAdPQAA0jsAoAC9AIA9PADgMz0AYBi9AIDWPABASL0AIDQ9AIAaPAAAxDwAANy7AIBDvADgrL0AwCg9AIAwvABgBj0AAAg6AIBmPQCgSL0A0IK9AAD9PAAAZzwAMAA+AIBAvQAAGTwAYFs9AOBxvQDgqL0AQAY9AICCPQCARrwAgJq8AADEOwBwp70AQK28AMC7PAAAtzwAACU8AABEvAAAIzwAgE09AABFvAAAiLwAoBy9APCBvQBgEj0AAA28AGAovQDAxz0=","chunkHash":"5b904da6f0ddff36e1aca78992cc701f72be83adcadb941d1013bbe2220679c8"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n                    if self.precomputed_dir:\n                        # Format ID with 6 digits for precomputed files (MorphoFeatures format)\n                        precomputed_id = sample_id.zfill(6)\n                        \n                        # Check for precomputed mesh\n                        mesh_path = os.path.join(self.precomputed_dir, \"meshes\", f\"{precomputed_id}_mesh.ply\")\n                        if os.path.exists(mesh_path):\n                            precomputed_mesh = mesh_path\n                        \n                        # Check for precomputed point cloud\n                        #...\n```","range":{"startLineNumber":131,"startColumn":0,"endLineNumber":141,"endColumn":0},"embedding":"AMDcPADAqzwAQH09AEARvQBgJr0A4AG9AAAlvQAA7LsAgEG8AAAePQBACL0AYIO9AMATPQBwg70AAIg6ABCiPQAAkTwAAOy8AKB2vQBA3TwAEKA9AIBPPQBgQT0A4J29AOBhvQDgdz0AAOO8AAB2OwAAXT0AABy9ABCYvQAAf7wAUMK9AIBIPABAbr0AoF89ACAuPQCAQT0AgC28AKANvQAgdj0AUJa9AED9PAAA37sAAIg6AMCWvQCAKbwAYE+9ADDJPQAAgDsAQA29AMCEPQAAoLkAgGO9AABkvAAA+zsAAF28AEAAvQAAQ70AIHS9AFCnPQCAPDwAwN68AABAuwAADz0AgMq8AICiPACAH7wA4Eq9AGAovQAAQjsAAM07AIBnPADgjL0AAMw6AKBqvQDgDL0AkLA9AJCzvQDgWr0AAJy6AKBjPQAAL7wAAPC6ACBDvQBgg70AEKS9AAAyvQCAEL0AgOO8AMDRvACACjwAQJm9AIAnPQBgMT0AQMM8AACMOgDgmb0AYEg9AIDBPAAA7DoAAM48AAANPABAnbwA4AO9AMCovQDAP70AgC29AABCvACA7TwAgGO8AED8vADQmj0AAH48AGCBPQCAE7wAQJw8AOASPQCwgL0AQAy9ABCnvQAAfzwAAKS7AAA7vQAAwLsAAJU7AIBBPACA1LwAAPW8AABIPAAAsTwAAFW8AIBtPAAQ2L0AgB28AAAUvQAgLb0AAN07AAAHPAAAwTwA4Ae9AEAZPQDgjD0AgEg9AHCJvQAgAb0AoAq9AKDgPQAA2DoAwJI8AHCEvQAAJjwAgMI9AABqvAAAHzwAAHi6AECivADg0z0AgL+8AGANvQAAUDwAwLs8AIADPQCASbwAADw8AEABPQDglr0AAIC9AHCJvQCwib0AYFQ9AAAPvABQgD0AgDa9AICWPABAtLwAgDe9AECxPADgBb0AkMi9AADYugAAtrsAQMe8AEDZvACA2bwAQKu8AOAtPQDAqD0AgLk8AAB8PADALT0AgCs8AIBKvAAgLb0AQMg8AIDqvAAgej0AwNu8AADhuwBALL0AgA+9AACsPABAlbwAwJ+8AAA4ugDAkbwAkIm9AACFuwCgEb0AABC8AADvOwBgHT0AAJ67AIBJPAAA4jsAAIy6AOAqvQCAPz0AgB68AIDbPADAyjwAAGg8AMAHPQAAJjwAQNc8AIA8vQDgR70AACS8AIBwvQAAfjsAAD+8AFCpvQAA5LwAAIC5AIDtvABAI70AIDS9AMB5vQAAnDsA4JY9AGBavQAAuDwAoGa9AACrPABAYT0AgHA9AOA9vQBgS70AQCI9AIDDPAAgsj0AgKE8AOBQPQDAor0AAI28AGADvQAQjL0AAJs7AJChvQCAQjwAABq9AEARPQDgjL0AwEk9AEB7PQAAcTwAQOA8AGAxvQAAnLsAAPi6AIDVPABgHj0AAEI7ACAhvQA4BL4AMM49AMDbvABgiz0AUJM9AIC4PACgWL0AYAq9AAAUPAAAzz0AwPk8AACIuwAA6bwAIDQ9AEDJvAAgUr0AAN47ADCEvQBgNr0AAC68AMCxvACgAb0AwOu8AACkOgAA87sAoJu9AKAyPQDALL0AAKu8AED/vACAgbwAgKe8AAAtPACAIbwAQDg9AIAVvAAgfL0AgLa8AIAtvQAAEDsAAKA7AAAtPQDABT0AQCw9ANDSPQAAIDkAUIm9AAA6vAAA0LsAgMc8AADNvQCAPDwAUJa9AIB1vQAA4rsAwEa9AMD/PACAFr0AgP48AIBtPAAApj0AwDy9AGAQPQAApDwAYC+9AECgPABwxr0AgKe8AMBQvQCAfzwAAKw7AACoPQAApLoAwAg+AIDKvADAAb0AAAAAAMDEvABA47wAgDO8AABmuwAAjLsAAPO7AHD5vQBgWT0AgB29AICDvADgYT0AgDk9AECsPAAgK70AoCs9AEDcvADgQD0AQOi8AAAqPACALzwAABc8ACATvQAALTwAQNe8AOBhvQAgkD0AoJs9AEBpvQCwgT0A4EU9AAAZPQCA1bwA0JW9AICnPADAqDwAAEm8AKAYPQDw0r0AIBw9AIDiPAAAq7wAAOw6AEDoPACAbD0AgFo8AICePABA5LwAAGI8AGAFPQBABL0AwCC9AMAAvQAAgjsAAPA8ALC6PQDgQz0AYCg9AMAzPQAA5LoAAPA7AMBDvQCA5TwAgKS8AEDdvAAA17sAcOa9AIB2vADAab0AYFY9AIDvPACAiTwAYDq9AABRvACAFb0AMKw9ACBiPQAABLsAgAC9AADKPAAAH70AgJG8AOB9PQBwnT0AAPe7ANCFvQCAgLwAAPq7AABMPQCAXbwAAMy8AAC7uwAAhDwAgMQ8AACfvAAgb70AgBS8AIA4PAAgBr0A8Ia9AACUOgBgXr0AMIk9AMCxvADA2D0AYKC9AMCAvADA1bwAQNM8AECvvABAGT0AANQ8AOAJPQAAQDsAwBW9AAAfvAAANz0AANu8AMC3PAAgd70AoA09AIAEPACApjwAAKK7AIB1vADAor0AQPg8AACwOgAA8TwAAJi6AABvPQAgLr0AUIm9AAD8PAAAQjsAWAQ+AMA8vQAAwrsAAC49AIBJvQDgrL0AwNo8AACaPQCASLwAAIO8AACIOgCQuL0AQBK9AMCtPADAijwAgBE8AAD0ugAANLsAwGo9AEDCvADAhrwAQPi8AECFvQDA/TwAgE68ACASvQAAvD0=","chunkHash":"b8cb290b39c876f2820f4ea701e5a8471a8f3f9f95b54801e56aa5bee440e3b2"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n                        pc_path = os.path.join(self.precomputed_dir, \"pointclouds\", f\"{precomputed_id}_pc.npy\")\n                        if os.path.exists(pc_path):\n                            precomputed_pc = pc_path\n                    \n                    # If we need raw data and no precomputed mesh, verify mask directory\n                    if not precomputed_mesh and not precomputed_pc and not os.path.exists(mask_dir):\n                        if self.debug:\n                            print(f\"Warning: Mask directory not found for sample {sample_id}\")\n                        #...\n```","range":{"startLineNumber":141,"startColumn":0,"endLineNumber":149,"endColumn":0},"embedding":"AIAkPACAszwAcIo9AEDnvACgNL0AwK28AGAtvQAAvrsAACo7AGAYPQAAxrwAwHC9AOAXPQCgdb0AABM8ABCGPQAAbDwAwJq8AICOvQAAkTwAgKc9AKA9PQCgaz0AUJi9AEB4vQAghD0AABu8AAAmuwCgZz0AgLC8AKCqvQBAjLwAoLG9AABoPACAbL0AsIQ9AEBIPQAgLj0AAIm8AID3vABAZj0AwKy9AGAAPQAAWDsAgAE8AKClvQAARbwAgGK9ANDCPQAASDoAwBy9AJCBPQAAnrsAYIK9AECpvAAAxjsAAIq8AMC/vABgKr0AIHK9AJCpPQAAsjwAYDu9AABqOwDAIj0AoAG9AMDGPAAArLoAoIO9AEA0vQAAZLsAAP27AAAOPABAb70AAIY7ACBxvQBAA70A8LE9AAC2vQDgX70AgAi8APCDPQAAvLsAAN27ACA1vQBwiL0A4MO9AKAsvQAA2bwAAGC8AICXvAAA4TsAoJm9AMD9PACgHD0AQNY8AAAuOwAAkb0AQGo9AAClPAAAvTsAAK07AAAaPADAyrwA4A+9ACCavQAgQ70AAMe8AECbvABA2jwAgDy8AIDhvAAQqT0AANA8AIByPQAA0DkAoBo9AGAQPQAgc70AgPy8AOCgvQCAuTwAAM27AAA6vQAA/DsAwL88AICFPABA/LwAQPm8AICFPACAzTwAQIW8AIARPACAvL0AgDG8AKABvQBA5LwAACA8AAAougDAAD0AABC9AEBJPQAAcz0AAEc9AKCgvQBAJr0AQOu8ALDCPQCAljwAAJM8AEBvvQAA3DsAILo9AIDTvAAACTwAALu7AIBgvADwzT0AwNu8AOBAvQAA3jsAQOE8AADtPABAmbwAAJY8AEDbPADAlb0AUIi9AEByvQBAbb0AIFE9AAA0vAAAXj0AYEO9AEC+PACAv7wAgEG9AMDsPACA37wAoN29AACSOwAAKrsAALq7AED9vAAA6LwAwMi8ACA0PQDQpj0AAHA8AABwPABAPj0AALU8AIALvABgJL0AgJ48AED8vACgZD0AQNC8AACGOwDgZ70AANy8AMDMPACAerwAANK7AACjuwCAHLwAMI29AADkuwAAhrwAAKG7AAAeOwDACT0AgBm8AIADPAAAsLoAgBi8AKBAvQBAQD0AgCa8AEDXPADA8jwAwP08AGAPPQCAAjwAQO88AIAlvQAAPL0AAGG8ACB8vQAAszsAALC7AKCjvQCAybwAAEo7AAClvACALr0AgBC9AICMvQAAYDsA8Ic9AGBsvQDA0DwAIFW9AECkPAAgZz0AAFk9AKBGvQDAgr0AwCY9AAD7PABQzj0AgCM8AIAnPQCAi70AgKu8AAByvADgf70AAKi7AECMvQAAWDwAoDO9AOAUPQCAi70AIEg9AMB5PQCAkjwAgBg8AKBCvQAAkDoAAEQ8AMAWPQAAYT0AAEY8AID7vACw/b0AYMQ9AIC9vADQjD0AsIM9AAB3PACAkr0A4Aa9AADhOwCA2T0AgAM9AACbuwDA1LwAwEs9ACALvQDAGb0AAGg8AHCUvQAAar0AACi6AACDuwDgIr0AwB29AIA3vAAAQLkAAIG9AGAbPQBgQ70AgLO8AMABvQDAk7wAAPu8AECuPAAAzDoAABQ9AIAJvACghb0AQN28AMAovQCAJDwAAOA7AEAhPQBA4jwAQBs9AIDGPQAACLsA0Ii9AABnvAAAybwAgLk8APDwvQDAjDwAEIO9ACBqvQAAqTsA4IG9AEDZPAAA87wAgOY8AIAiPADgpz0AwCy9AMAcPQAALzwAwDa9AMCXPABQvL0AAJ28AMBVvQCAPjwAALM8AICcPQAATjsAEAs+AABmvAAgBL0AABY7AAD5vABAi7wAgKS8AIAuPAAAtzsAAM27AKAJvgCAbD0AgDe9AIBXvADgVj0AIEk9AMCoPABALL0AwB49AADjvABgUT0AgK+8AABIOgCAljwAAO47AMDsvAAApTwAoBG9AAB6vQDAkj0AYHI9AGBFvQBAWz0AQEU9AGAiPQDAC70AoJm9AMDDPACACj0AgIe8AICvPABgy70AwMs8AIDHPABA87wAADm8AADqPACgej0AAEY8AACAPACAm7wAAM87AAAZPQAAM70AwLW8AAD2vAAAyjsAgOI8AMCzPQCAVD0AACQ9AKAvPQAAjbsAgBo8AGBcvQCA5zwAAFe8AMCjvAAAXrsAkNO9AIA7vACAi70AoFI9AED4PAAAljsAwCa9AADwuwCAH70AoKM9AMA+PQAAoDoAwBO9AEDSPADgC70AgPq8AOBNPQBAsz0AgAm8AEBwvQCAubwAAFa7ACA9PQAAdLsAQLy8AAB2vAAAsDoAwM08AADYvAAAZ70AgGG8AABYOwCA0LwAoFy9AACrOwAwgb0AoIE9AIBuvACA0j0A4Ju9AIBSvAAAGb0AAEM8AIBmvABgaT0AgNI8AMDlPAAA5jsA4Bu9AAAMvACAOD0AQPe8AACLPADAG70AoA49AAAYOgAAQjwAAAe8AADvuwBArL0AQB89AAApvADAiTwAAEC8AMCJPQCAM70AAJO9AMAUPQAAKDwAaAQ+AEAivQAAlDoAoD89AGBRvQCQxb0AAPY8ACCfPQAAQ7wAgKa8AAAQOwDQpr0AwMy8AACHPABApzwAAAY8AACXOwAAJDsAwDI9AIBkvACAV7wAAOO8AIBwvQCA7jwAAM+7AKAzvQAg1j0=","chunkHash":"9096e90f1980112df5aa27b98610f5ff80aa6c1a61bddaa5591c22d2132b20ad"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n                        continue\n                    \n                    # Add sample to the list\n                    self.samples.append({\n                        'sample_id': sample_id,\n                        'class_id': class_id,\n                        'class_name': class_name,\n                        'mask_dir': mask_dir,\n                        'precomputed_mesh': precomputed_mesh,\n                        'precomputed_pc': precomputed_pc\n                    })\n                \n                print(f\"Total number of samples to process: {len(self.samples)}\")\n                \n            except Exception as e:\n                #...\n```","range":{"startLineNumber":149,"startColumn":0,"endLineNumber":164,"endColumn":0},"embedding":"AEDdPACAOzwAsJE9AGAAvQCgZL0AALa8AGByvQCATLwAAD+8AABDPQAAj7wAgHe9AACDPADAer0AAOw6APCTPQCABDwAgJC8AABjvQBAnDwAwJc9AOBNPQCAkD0AgH69AAAyvQCAbj0AAEO8AACdOwCAIT0AAD29AGCVvQBApbwAAMO9AACsugCgm70AQIA9AMBxPQAgIT0AgGe8AOAjvQCgfz0AMJm9AID1PAAAyDoAAEU8AIBxvQAAgbwAQI29AACyPQAAZDsAAKO8AACYPQAAO7wAMIK9AADvuwAAjLoAQAC9AIC+vADgB70AcIu9ANCqPQAAljsAANi8AIADPAAAvzwAAOi8AIC2PACAF7wAsIS9AABkvQAAaDsAAPA5AAAEPAAAer0AgCU8ACBvvQDAv7wAgIc9ADC2vQAAFb0AACi6AIB9PQCAQ7wAgCy8AMArvQDgZr0AcLa9AEA1vQCAqLwAgH+8AIBMvAAA3DsA0IC9AMAUPQAgNj0AgLI8AAAfPAAAYL0AoEc9AIDlPAAAKzwAgC88AADEOgCAwrwAQCm9AMC3vQDgBr0AoDa9AADMvADAgzwAAMy6AAAnvQBAkD0AAEE8AACNPQAAIDkAoBU9ACBOPQCQhr0AgOu8AKCuvQCA7TwAAKk7AMB3vQAAALsAAJ87AAClPABA7rwAAOm8AGAQPQCAvTwAAHa8AACxOwAQtr0AALu7AEA9vQBA5rwAQMs8AAAAOABAID0AwP28AAA3PQDAZj0AAFY9APCAvQCAT70AoEC9AEDFPQDAwTwAAB88ACBTvQDAqDwAcLs9AAA4vACAWDwAgJ28AMD0vACg5z0AgAO9AGAEvQAAEjwAgIY8AMACPQCAYLwAAIs8AEDcPADAjL0A4Iq9AEB3vQCgbb0AMJc9AAABvQBwiD0AgGe9AEClPADAs7wAgAS9AGAJPQAAt7wAIL29AIAbvAAAgLsAgJu8AMCrvAAAsrwA4DK9AIA0PQAgkz0AgC48AAB8OwBgXz0AQKg8AIB5vADAGr0AAOw8AIDGvADAfD0AAFO8AIAEPACgJ70A4CC9AADhPAAArrsAAIS8AACMOwAA2rwAkJa9AACfuwDAw7wAgCO8AIBUPAAgIz0AgCm8AAAQOwCAOLwAAHw8AOBMvQAgTj0AAII7AGAKPQBA3jwAANc8AICJPAAAQTwAQLM8AEDevADgKb0AAPC7AMCgvQAAMDwAAJ28AGCsvQBAzrwAAGW8AICvvADAM70AgOS8AABhvQCAKbwAYFk9AIB/vQAAMDwAAA69AIDLPACgPD0AoGc9AKAuvQCwg70AADc9AKACPQAAxT0AABQ8AGBQPQBQq70AgJ+8AMCzvAAgT70AAD48AOCXvQBAxjwAgOW8AIANPQDgir0AwEA9ALCLPQDAszwAAOk8AKApvQAAojwAAJw7AMDbPAAgED0AAPw7AKAWvQBQ670AALg9AACuvAAgoz0AsIU9AADMOgBgZb0AwL68AECFPAAwzT0AYFU9AMDIvACAP7wAYEc9AICvvAAgJb0AgBs8AOB5vQDgPL0AgI+8AAAmvADA6bwAgD+8AAA+PAAAGrwA0IK9AMDLPACAA70AQKW8AKASvQCARLwAAAS9AAClPAAA6LsA4D09AABUuwBAcr0AAJ+8AGBCvQAAXzwAgJ08AADuPADA/DwA4Eo9ANDMPQAAAjsAoF+9AAB8uwCAZLwAYAk9AADkvQAAHzwAIJC9AACCvQAA0DoAgIe9AMDOPACA/LwAQAk9AAA+PACArD0A4EG9AAAcPQAAnzsAAOy8AAABPQBAsb0AAF28AKAjvQAAJjsAQKU8ABCrPQAA9DsA0AE+AICJvADA+bwAAJc7AMATvQDA47wAAKm8AICHPAAAPLsAAMG7ABD6vQBgLD0A4FW9AABqvABggT0AwG09AIBaPACgD70AACw9AAA3vACgLD0AwLi8AAB4OgAAwzwAAE48AIDjvAAArTsAIBm9ANCRvQDwkT0AwIQ9AGBVvQCAdD0AgCM9AEBKPQCgKL0AEJ29AEDFPABAFD0AQN+8AIDUPACAzr0AQNg8AIDmPAAgEr0AAOy7AIC6PAAgvT0AAKI7AEDVPAAAGLwAAIk8AIAhPQDA67wAgNG8AEDtvACAULwAgO48ANDGPQBANT0AgEA9AIB2PQAAVLwAAPs7AEBWvQAA8jwAwJe8AEDcvAAARrsAkO69AIBsPABAfL0AoAE9AACaPADAnTwA4C+9AACduwBgFL0AsKE9AOBQPQAAKDsAYEO9AEArPQAAMb0AANS8AEBbPQDQrT0AQJm8ACBlvQCAp7wAgD08ACBGPQBAwLwAAG+8AIDAvACAijwAoCM9AECBvABgd70AwKe8AABmPACAW7wAoC+9AABxPADQkL0AwF49AADFuwBA0D0AkLu9AIBmvABA5bwAgL08AADvvAAgNj0AAMQ8AIC8PAAAt7sAIBi9AABguQAAPj0AwM68AMDuPADAW70AwB49AAC0ugAAnzsAANm7AAAxvACQz70AICQ9AAC/uwCA+DwAAPo7ACAqPQBANL0A0Iu9AOAVPQCAQ7wAgOw9AEBEvQAA2DoAAGY9AGA4vQAwrb0AgAQ9ACChPQAAPbwAwMK8AICCPADArL0AQPK8AIDxPACACzwAAIw6AIAVvAAACjwAoDc9AEDyvADAzbwAQLO8AMCGvQAgJj0AAKA5AEBYvQBApD0=","chunkHash":"aa534678a4998843c4e3ca44b501d78e359efc499c8d780bfe6a239f3f28e14c"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n                print(f\"Error loading class CSV: {e}\")\n                import traceback\n                traceback.print_exc()\n        else:\n            print(f\"Warning: Class CSV file not provided or not found: {class_csv_path}\")\n    #...\n```","range":{"startLineNumber":164,"startColumn":0,"endLineNumber":168,"endColumn":89},"embedding":"AADMOwCA3zwAIHs9AMD4vADAYb0AAGm8ACBHvQCAkbwAgKC8AABcPQCA57wAQD69AIDVPAAgB70AgBg8ABCgPQCAyjwAABG8AKB1vQDAgjwAYJU9AIByPQCgVz0AoFe9AOAUvQAARD0AgIq8AECWPADgMT0AwKC8AABsvQAAT7wA8LK9AEDgPADAU70AQBc9AIBjPQCAaz0AANq7AEBsvQBgdz0AEIq9AKATPQAA+DsAAIk8AFCEvQAAqLoAwDy9AHCdPQAALrwAgAG9AOCHPQAAijsAwGm9AED9vAAAKbwAAJa8AIB1vADgAL0AYK+9ANCWPQAADjwAwIC9AADfOwCgZz0AYAa9AEASPQDAu7wAAGG9AOBNvQAA1LsAANi7AMAQPQBQk70AgCs8AHCcvQAA7LwAgLs9AHCdvQCgSb0AAPg6AECUPQBAIb0AgBA8AKA4vQDgcr0AcMC9AEBKvQAAdLsAIAu9AACPvAAAMDoAAE+9ACAkPQBgbz0AAN08AAD7OwDAq70AgIs9AAApPAAAFbwA4CE9AACSPACASLwA4AO9AMDSvQAAEr0AAG+9AIBYvACAyjwAwMq8AICEvAAAjz0AAEI8AOBxPQAAs7sAAIQ6AAA0PQAAa70AQNi8ABCqvQBA8zwAAJC7ACB9vQAAQLsAADw8AIATPAAACbwAAOq8AACiPAAAQTwAAHq8AAAcOwAAyb0AAIG8AOAmvQDgWL0AwMI8AIANvACANj0AACi9ACBLPQDAVz0AgLo8AHCWvQAgFb0AgJ+8ACC5PQAAkjsAAEy7AIAsvQAgBT0AoL49AIDIvAAANDsAgCm8AIC6vABg7D0AwMe8AEBHvQCAqTwAwAY9AMBIPQAA+7wAAME8AIBdPAAwk70AoJ69AIBEvQDAeb0A4HY9AIDEvAAALT0AwDK9AACsOwCAzLwA4Ae9AAA0PACAzrwAEMq9AACCPAAAELoAAM47AAApvQCAprwAgNC8ACAVPQDwlj0AgBc9AADYOwCADD0AAD88AMC0vABAYr0AQJ88AAD8uwCAVT0AgJS8AABYOgAAY7wAIAW9AMD6PAAAHDsAgBC9AADOuwCAArwAQIG9AADMugBgIL0AABo7AIBrPADAnzwAQCW9AMCCPAAALjwAAOw7AACCuwAgST0AADi8AEC/PAAA9jwAAOE8AAA9PAAAlzsAAB88AABovQCA8bwAQLC8AECOvQAAtTwAAEC5ALCWvQAAO7wAAJG8AMCDvAAgR70A4De9AOBKvQAAgbwA0Ik9ACBwvQBACT0AQAe9AAB+PABAHz0AYHQ9ACAcvQBAi70AAFQ9AOAPPQDguD0A4Co9ACBxPQDwrL0AABK9AMDNvADAgb0AAIE7AKCOvQCABLwAgOq8AAD3PACgiL0AYI49AKBMPQCAdLwAwL48AHCEvQAA6DoAAJI7AMBHPQDABj0AAOk7AMDxvAAQAb4A8MI9AADhvAAgnj0AIKE9AKAbPQBgRL0AADe8AADhOwAA8j0AwIM8AIBhvADA/bwAQAc9ACAWvQCgM70AAIA8APCfvQCgPL0AAEW8AGAkvQCAl7wAwI28AABwugCAY7wAgJG9AIC/PABACr0AgOS8AAAAvQAAsbsAAP+8AMDmPAAAkrwAYHQ9AAAgOgAQsL0AgBW8AGBIvQCAUTwAABI8AMCPPAAAqzwAgJs8ABDxPQAAi7sAwIK9AABvvADA1LwAgOM8APDnvQCAujwAIIe9AIAxvQAACbwAgHG9AACbOwAgIb0AQOk8AIBUPADQrz0AwFe9AMALPQAAwjwAgLa8AMCOPADQor0AAFu8AABNvQAAxjwAAEg8AIAtPQAAYLkAAAM+AIDLvACAsLwAQLu8AAD/vAAgCL0AAGa8AAChuwCAmjwAgOy8AADfvQAgUj0AYC29AMClvAAAZT0AAKk8AABguQCAI7wAQC89AEC0vABgHj0AgFe8AEDzvADAhTwAgCk8AMBcvQCAbTwAwPO8AHCGvQCwlj0AoGo9AOAsvQDAUD0AIEY9AEAZPQBAEr0AQJi9AECaPAAAHjwAABi8AADdPADAtb0AYAI9AIDNPAAASbwAQBa9AAApPADgjT0AABo8AADTPADA3rwAAPs8AEAjPQAA+rsAwAO9AAALvQCgDD0A4AM9AJCfPQBgWT0A4DU9AIDqPAAAqrwAAKg6AABXvQAgCj0AAIa7AMARvQAAlbwAwOu9AADVuwAgiL0AIIU9AADEPABAvjwAYD+9AIBNPABgAr0AAKw9AJCJPQCARbwAAJ68AICsPADgJL0AoBC9AEAzPQBQrT0AAPi7AIB0vQAAALgAABA6ACA+PQAASbwAYAa9AIASvACgCj0AgNo8AAAqOwCge70AQLW8AIBYPACAVLwAIHC9AADdPAAwmb0AAGY9AADDvAAQpz0AwKS9AAAmvABgSL0AQMs8AACrvAAA2DwAABU9AICKPAAAUTwA4BG9AACguQBgaD0AoAm9ACAOPQBAZL0AAPE8AADiOwAAxzsAwIe8AACHuwDwor0AgEo9AECzvACADj0AAAK8AOA6PQBgDL0AUKa9AICAPAAAELsAUAM+AOByvQAADbwAACs9ACA+vQBgsb0AAMQ8APCEPQAAM7wAQOW8AADwugDQr70AgCK9AAABPQAAK7wAAFy7AMCMvAAAmDsAoAo9AMDZvACgDb0AAJS8AGB6vQDARz0AAF68AEBkvQCwwD0=","chunkHash":"cef01e37f4e477a120722cfd93b58e7ff976c9d0352d1257302b81b74fd3d3c8"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __len__(self):\n        return len(self.samples)\n    #...\n```","range":{"startLineNumber":170,"startColumn":4,"endLineNumber":171,"endColumn":32},"embedding":"ACDAPQCAsTwAwJg9AMCdvAAALLwAgAA8AMC3vQBAibwAwNG8AMDFPABgIb0AAIa9AABXPACgDb0AgHY8AGBDPQCA2LwAgBC8AICfvABAijwA4HQ9AEAfPQCgXT0AYCC9AAAdPQBgIT0AkIS9AAB8OwCAlDwAgHm8AGAevQAAFrwA4IK9AADxuwDgPb0AgCE9ACCIPQAAHT0AgAU8AABivQAA5zsAQJW9AEDevAAAo7sAgB89AMBkvQCAZrwAwJ28AFDIPQDA9DwAQBW9AOCqPQCAmLwAAEa9AAC5OwAAkDwAAH47AACROwAAlDwAkP+9AACBPQAgGj0AgDW9AACEOgAAsDkAANK8AACHPACAmjwAIBW9AMCAvQAAYDwAAKA5AID/vADAOL0AgKy8AOAVvQAAKLsAQDw9AKCTvQBAOj0AQHa9AKBQPQAAoDsAYAK9AIAbPABAJL0AQFi9AOA+vQCALbwAgBM8AAArPAAAx7wAgNq8AAACOwAAQj0AALg6AADLPACA+rwAANC7AAAOPACADTwAYEU9AIA8vAAAoDkA4GK9AIC2vAAArjsA8I69AIArvQBAHT0AQKC8AMAcvQCAsj0AQKg8AMB8PQDA/DwAgOk8AMBOPQBQlL0AAKk7APCEvQAgDT0AAPA8AACyvQCALzwAAC08AADYvABA3bwAgNq8ACCtPQAgCT0AIA29AAA2vAAAxb0AADa7ACADvQDAkL0AgMS8AMD3PACAGz0AAGQ7AKB4PQBgfz0AsJk9AADdvADgRb0A4Ce9AEBuPQDA+DwAoCo9AACWvABAzzwAgJA9AEDuPAAA7rsAQDS9AACXvADgNT0AQPG8AADfuwAA6zwAQNI8AABtPAAA+jwAAAS8AIACPQBAaL0AgFO9AKAqvQDQjr0AUJY9AEC0PABQjz0A4AK+AEDJPABA4rwAAOA6AOBRPQDgcL0A4JC9AAAfvAAAQLsAAIY7AACkvABA/zwAAJW9AJCCPQAwjD0AACA5AMDPvACgVz0AEJ89AADHOwAABrwAAOO7ADCEvQBASz0AAEw8AADpPACAtbwAQIO9AMA9PQDAmbwAwMm8AAD1OwDAuLwAMLO9AAA4vADAZr0AgNI8AIAhPQAAwjwAgLe8AABSvQAAzjsAoDw9AAADPADAOD0AAKq7AKA9PQCAIz0AYDA9AMD/PABAojwAgAI8AAADvAAA/rsAgLk8ALCzvQAAoDoAQL28AJCRvQCgL70AQOm8AACUOwDAVb0AQNa8AIAZvADgIr0AAGG8AEBEvQAA0DkAADS8AOCVPQDA5TwAYFM9AABBvADAm7wAwEM9AIDXvAAAxT0AgKI8AGBHPQCwrr0AgFO9AACkuwCgZr0A4HA9AAAnvQAAgDwAwJ68AKALPQDQsb0AQJg8AMB6PQCAzzwAYDg9AEAZvQAgET0AABY7AAAsvADAmDwAAOk8AMDkvACgmL0AoIA9AAD+uwBQij0AAJM9AACEOgAA7LwAAGq8AADyOwBgLT0AUJ49AABfvQBgDT0AgEA9AEDNPACAj7wAAHo8AOAZvQCAELwAALa7AMCEvAAAFLsAgCa8AADhOwAA0bwAEIS9AADEOwBgRb0AAAi6AEA8vQBADr0AAMa7AAA+vACA3TwAALg8AIA5vAAgOL0AQPK8ADCpvQBA3DwAAKi8AADsOwDA5TwA8IQ9AND1PQCA47wAgFS9AMCdPAAAlbsAAPo7AADnvQCAaLwA4K29AKBhvQDgCr0A4My9AAC/PADAt7wAQKg8AACwuwDgTj0AAL28AIBWPQAAyzwAgJe8AABzPQDgX70AAHC6AMAfvQBA+zwAgL08AIDMPADALT0AYO49AAAQvQDgBr0AgKw8AAA+vQBADr0AAEm9AIC+vABA3bwAgPA8AIDuvQAwgj0AgKe9ACBPvQCAkjwAMJw9AAA4PQCAfL0AwB49AICHvADgaj0AIA+9AAA0PQCAfrwAADA6AIAmvQBAnbwAgG08AKAkvQAgBz0AoIM9AGCgvQAAeD0AAIE7AOCdPQAA8rsAcN29AOCAPQCAzzwAgBa9AKBFPQDw2r0AAPY7AOAGvQAA3LwAQPw8AADgOQCQmT0AAG+9ACAwPQCAEbwAAPo7AADZOwCAI7wAwN68AIDGvAAAbDwA4CM9AMB1PQCALj0AwAw9AGClPQBgKD0AgEc8AIATvAAAyTsAAKu8AEA5vQDgDb0AsIS9ACB5PQDA+LwAwOe8AIBZPAAAi7sAoEK9AKARPQAAyDsAkMM9AMBHPQBArDwAwHW9AOAKPQAAg70AADQ8AECWPQCglz0AAJQ6AICuvADAAj0AQPU8AADRuwAQpr0AQEc9AACAvQCADTwAQNE8AAB3PAAA7rwAABS9AIAWPAAADz0AAP+8AGA/PQDgc70AADM8AAA7vADAlz0AAFG9AACEvAAAIjwAAC89AEBGvQCAFD0AAKW7AACWuwAAe7wA4EK9AAArvACAYz0A4BG9AACWPQAA5DoAYCQ9AKA9vQCAFzwAgIY8AAB7PAAgVr0AAAC4AICSvAAAVTwAQJk8AAB2OwBgVb0AcNi9AADGPAAAELsA8N89AAAavQDAmLwAUJk9AEBHvQCQ+r0AAKI8APDNPQAA2bsA4D29AMBPPQBgQr0AICG9AMDNPAAA5bsAABK8AAA9vQDAwTwAgD89AIAXvQCAyrwAQD69AMA6vQAAVrsAAEK8AICavQCQmT0=","chunkHash":"68f1f5c61a8ed3aead0075c01573a4289e015623523b8e263f8958d8d4d891e3"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def _load_or_generate_mesh(self, sample):\n        \"\"\"\n        Load a precomputed mesh or generate it from the mask volume.\n        \n        Args:\n            sample (dict): Sample information\n            \n        Returns:\n            trimesh.Trimesh: Mesh object\n        \"\"\"\n        sample_id = sample['sample_id']\n        mask_dir = sample['mask_dir']\n        precomputed_mesh = sample.get('precomputed_mesh')\n        \n        # Check if precomputed mesh exists\n        if precomputed_mesh and os.path.exists(precomputed_mesh):\n            try:\n                if self.debug:\n                    print(f\"Loading precomputed mesh for sample {sample_id}: {precomputed_mesh}\")\n                import trimesh\n                return trimesh.load(precomputed_mesh)\n            except Exception as e:\n                print(f\"Error loading precomputed mesh: {e}\")\n                # If loading fails, fall through to generation\n        \n        # Check if cached mesh exists\n        cache_file = None\n        if self.cache_dir:\n            #...\n```","range":{"startLineNumber":174,"startColumn":0,"endLineNumber":201,"endColumn":0},"embedding":"AABKPQCABTwAQNA8AAAxvAAAz7sAYDe9AIBbvAAA5LoAAIS7AICXvADgm70AYDe9APCUPQBA5rwAALe8AAAGuwAACr0AIEy9AMAJvQAAIj0AAJI9AOBOPQAAVD0AUI29ACAYvQDgSD0AwBG9AIB7PADgUT0AgDi9AKDSvQCAirwA4MS9AEDevABAVb0AII49AEDwPADAST0A4Ai9AOCGvQAALz0AELS9AAAyPQDAVT0AoCg9AABcvQCgDr0A8Ji9AKC4PQCAYDwAAKC8AMA4PQCAS70AQFW9AECPvABgJL0AwG+9AEB4vQAgWL0AwKy8ACBlPQAAXDwAwMm8AIDWPACQjz0AYDc9AED8PACAVDwAsIm9AACBvAAgZb0AgGY8AADuPAAAhb0AgPS8AEAJvQBAqLwA4FU9ABDhvQCARbwAAHg7AECaPACAqTwAgBI8AECCvQDAIb0AMIm9AIAIPAAA8rsAIAa9AAAUPQAAvjsAQGu9ACCGPQDA4TwA4Fc9AABoOgCAYr0AwFI9AMCXPQAAQjsAUJM9AACYOgCAZDwAwLg8AADxvAAAO7wAAFa8AACxuwCAWjwAAME8AGCnvQCQ4D0AQK48AIBqPACAdzwAQPo8AAAhPQBA/70AgEy8AIDSvQAAarwAwNg8AIDyvAAAFrwAAAi8AIBXPAAAgb0AQAK9AGBDPQAAkzsAgA88AIDOvADAqb0AAME7AAAIuwCABLwA4BW9AABbvACgOT0AoEW9AAArPQAgFz0A4DU9AEDrvAAAt7wAgDk8AOBqPQAABjwAwOg8AABGvQAALTwAgCM9AGB7vQAAYDkAoG+9AKA4vQDQhj0A4CS9AOBWvQDwlL0AcI09AOADPQAAUzwAoAU9AGANPQBwsr0AgE69AIAWvQAQm70AMIA9AED1PAAAQT0AMIm9AABAPQBAgLwAoB+9AGAUPQAAz7sA4C+9AMBhvQDAlzwAgFq8AAAgOgDgOT0AgKG9AMADPQBQiz0AAAw9AGBsPQAAzDwAAAM8AMCYPAAAB70AAIg6AMA9vQDQvz0AAEo7ACAXPQBwib0AAIC7AAAzvQAAwLwAAIU7AABhvAAARDsAAEK7AIA8vADAu7wAAIA6AGAIPQAAibsAgGM8AAAZvQAAGjwAwMs8AAAIOwDA7DwAwL28AICfPQAAXDwA0IY9AICVPAAAMDwAgCw8AIBMvQDgGb0AACi9AABGvQCAXD0AALA7AKAbvQAwk70AQB+9AACQOwDA4rwAYEe9AKANvQAgAz0AANU8AIBFvAAAtzwAQJm8AADuOwCghj0AAE09AFCivQDQkr0AIIM9AMBSPQBwgz0AgK68AMBmPQCAP70AACS8AAAOPAAA8L0AwOo8AFDAvQDgdj0AAPg7AIAYPQCA9rwA4Cw9AEDSPAAACD0AgDc9ACAhvQDAyTwAQMo8AACrPACAlLwAAJ67ADCLvQDQxb0AgBU9AACfOwCwkD0AYHI9AOB1PQAgTr0AAIK8AAAvvQAgGj0AgEI9AICMvAAAEbwAgLs8AIAvvQAAjr0AgNA8AEBYvQCglb0AAJi7AMAqPQCA67wAwGC9AABkvQCgW70AIGm9AAAlvAAALb0AAPs7AACMOgAgFL0AYDe9AADSvADAiTwAwLo9AADXuwCAPrwAAG48AKB8vQDAgbwAQBA9AGALPQAgzj0A4C49AICFPQBgDL0AwKO8AAAWuwAAJj0AAEO8ADCBvQBA3zwAEJG9AOBsvQDALD0AwAC+AAAxPAAALbwAQJ48ANCgvQDgKD0AAGM8AJC0PQAATzwAoGO9AICHPABgpb0AgIa8AED6vABA7rwAAF68AOCEPQDA0jwA4P49AAC/uwAgPr0AQOw8AOBuvQAANrsAQPq8AECBvAAAeLoAwOw8AID1vQAA6LsAEMS9AOBYvQDAJD0AAK88ACAUPQAAHr0AcI09AGBcPQDwpD0AgHS8AIB+vAAgDr0AAGo7AAD/uwBAjjwA4Ea9ALDXvQBwjz0AkL09AACUvABw2T0AAHA6AIApvADAJr0AMLa9AACDPABA0zwAQDa9AIA5PQDA0rwAAOA6AAC4PABASb0AwPC8ACCSPQAAKTwAAMQ6AAAwPAAAkLkAgKq8AMD0PADArbwAADG8AACcvACANbwAgMc8AEAIPQAAuDwAQIs8AICEPQAAubwAQNs8AAAPvAAABTwAoGW9AICZPABgBT0AALK7AAAuPACAGr0AIAK9AGBBvQBAwLwAAMa7AABeOwAwhr0AAL07AACGPAAAv7wAYAS9AOARPQAAT7wAwNC8AKA9PQDgdz0AoEc9AAAhvQCAMzwAAIW7AMC1PAAAvrwAAPi8AECrvAAAsTwAACA5AACQOwAAVjsAgOu8AAATvADAGL0AABS9AECvPACgMb0AwJU9AABJPAAAwz0AcJq9AAByvACAVrwAQI08AICIvAAAuTwAADS7AGBjPQCAAjwAoDC9AICoPADgYj0AQNe8AGAFPQCAETwAIBu9AIBevACAqz0AAAG8AAAZPAAA/LwAQIc9AABIvAAA4DkAAPQ6AJCJPQCA1bwAoAe9AMArPQBAtjwAgNY9AGAmvQAA7TsA0Kg9AIBpvQAwib0AgDg8AEBNPQCAPbwAgCe8AED7PABgjL0AAOY7AMALPQCAAjwAAJ67AEB2vQAAAjwAgJ+8AABgOgCAizwAoBO9AIDNPADA0jwAAHY7ANCOvQDAozw=","chunkHash":"7c6a2591bd5bfeafee0a023ffd5d7f5df413e2eab7b9f95556aacca52b657ceb"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def _load_or_generate_mesh(self, sample):\n        #...\n            cache_file = os.path.join(self.cache_dir, \"meshes\", f\"{sample_id}_mesh.ply\")\n            if os.path.exists(cache_file):\n                try:\n                    if self.debug:\n                        print(f\"Loading cached mesh for sample {sample_id}\")\n                    import trimesh\n                    return trimesh.load(cache_file)\n                except Exception as e:\n                    print(f\"Error loading cached mesh: {e}\")\n                    # If loading fails, fall through to generation\n        \n        # Generate mesh if we should generate on load and have a mask directory\n        if self.generate_on_load and os.path.exists(mask_dir):\n            try:\n                # Load the mask volume\n                mask_volume = load_mask_volume(mask_dir)\n                \n                # Create mesh\n                mesh = create_mesh_from_mask(\n                    mask_volume, \n                    threshold=0.5, \n                    voxel_size=self.voxel_size,\n                    smooth_iterations=self.smooth_iterations,\n                    decimate_target=self.decimate_target\n                )\n                \n                # Cache the mesh\n                #...\n```","range":{"startLineNumber":201,"startColumn":0,"endLineNumber":228,"endColumn":0},"embedding":"AGBOPQAAVzwAAC49AMDxvAAAP7wAALm7AABRvADAwbwAAMG7AADwuwAAHb0A4C+9AGAvPQCgTb0AgGu8ACBpPQAAlrsAkI69AJCnvQAAojwAYJo9AEAxPQAgMD0AYFG9AMAivQBgET0AYBe9AIAHPABAGz0AIBa9APCivQCAGbwAEN29AACROwCAUb0AEJs9AABTPQDARj0AgBO8AGBDvQCglT0AsM+9AICFPABgEj0AQLU8AAA1vQAAAAAAkLi9AKC1PQAAv7sAADe9AMANPQBA2LwAUI69AAC+vACAe7wAQMm8AOAgvQCASb0AgGS9AECAPQDA9zwAwBq9AIAwPABQiz0AAKk8AICmPABgJT0AwIS9AMANvQCAZbwAAJI7AMDCPADQwb0AAFy8AGAdvQAA3bsA4Dk9AFCwvQAA17wAAHE8AGAyPQAgJ70AgCI8AIApvQBQir0AgNy9AAAAAAAAjbwAAMu8AAAdvAAAZDsAcKq9AOApPQCADD0AYCc9AACAOgAAWL0A0IY9AGA5PQAAhzsAwGM9AAAgvAAANjsAgBG8AOCqvQAgAL0AABS8AEC1vACAjTwAQAi9AEB3vQDApD0AIDs9AKADPQAAADoAoA09AEB9PQCwmb0AAN27AHDBvQDAuDwAAMM7AGA9vQAAibsAAJQ6AACcPAAA5rwAoC+9ACAEPQBArDwAAPG7AACwuwBQ1b0AAPs7AACEOwDgDL0AwKG8AACgOgDAHz0AoHe9AAAWPQCAOz0AIHo9AAAzvQAgCr0AAN07ACCRPQBAOj0AgBs9AOA7vQCAbTwAsIs9AMDYvABAiTwAUJu9AMADvQCA2T0AAD29AOAIvQCgWr0AYF09AMCLPAAAtDoAgMo8AABgPQCAvb0A8JG9AKCMvQCAfr0AwHs9AABmvACAzTwAgEi9AOAEPQDgL70AoHq9AMCEPABgIr0AwEK9AEAKvQCAlTwAgNq8AICuvAAAED0AgHu9AGB1PQAQhz0AAJw8AMAiPQCAtjwAgB49AABZvADAH70AgJw8AEA9vQAwnD0AABU8AMDXPABAEL0AAAi9AADJOwAAMrwA4DC9AIA5vAAAZDsAoGG9AECtvABgAL0AAB08AMDTPABgFT0AgKQ8AAAZvQCAErwAgIM8AACXvADAID0AAF67AOCAPQAAsjwAYII9AIC7PAAAETwAoDg9AIDbvADwoL0AgPq8AOAwvQBAJT0AAMy7AACEvQBAM70A4FS9AABAvABAAb0A4FO9AMBEvQAAA7wAQCE9AEC0vACgIT0A4DO9AAAiOwAAfj0AwDo9AHCHvQAgoL0A0Io9AECGPAAgkT0AAOY7AIAhPQAgY70AgJS8AICLvAAAjL0AgHc8ABDDvQDgJT0AAGM8AOAwPQBQhL0AoEs9AIAYPQDAkTwAoFs9ACAavQAA/zsAAGC6AECePAAALjwAAMu7AEBrvQAgkb0AYHM9AAAivAAgLT0AQJ09ACBdPQCAZL0AAEq8AMDmPAAgdz0AoEU9AIATvACAbLwAQEc9AECjvADAfb0AgK88AEBnvQDQnb0AgDy8AECVPAAAiLwAYCu9AADMvACAd7wAQDC9AAABPQDgbL0AAGu8AADbvAAAb7wA4B+9AADhOwAA6zsAcKQ9AACYugAAxLwAIAS9AKAWvQBA6LwAoB09AAAzPQBgmj0AwEY9ADDBPQCA/bwAQO+8AAAdvADAljwAACC8AGC6vQAAi7sAgI+9AGCIvQCAoDwAEMC9AIDfPAAAprsAQMI8AADnuwBAlD0AgMW8AFCfPQAACrsAgDS9AICCPAAgAr4AAAK7AEAavQAAUrwAAN87AECuPQBA9zwASAQ+AADtOwAArbwAQKo8AMBmvQDgC70AAKy6AADevAAAqrwAANA6AGAMvgCAGjwA0Iy9AKBVvQAATj0AIDk9AEApPQAAE70AgF89AAC7PADAqT0AwMS8AEC6PAAAYrwAABM8AEAevQAADjwAgHG8AMBPvQCAfz0AwJA9AED9vACAqz0AAJo7AEC+PAAAHLwAoMa9AOAuPQCAOzwAICy9AEDRPAAwm70AAJY7AACuPACgJr0AIEC9AMAnPQCgLD0AgFO8AAAEOwDAvLwAgOU8AOAWPQAAobwAgLm8AMADvQAAg7sAQPE8AFC4PQAgHj0AoBs9ACCFPQDArbwAQJQ8AIDjvAAAQzwAAF+9AAB0OwAA+bsAwAS9AIAHPAAAXL0AAFY8AECQvAAAHL0AANO7AIARvQAAkrwAwHU9AECuPAAAkzsAANa8AIAWPQAgLr0AgKS8AIAaPQDQjD0AAPC6ABCNvQAAEzwAwMe8AED5PABANb0AQJy8AKBIvQAACDoA4AU9AECLvACAQL0AQMO8AABeuwBAlLwAAAS9AACTPADgM70AgF09AACbuwDA7T0AAJS9AAA9vACAQ7wAgIc8AIBAvADgSz0AAM88AGAvPQAA8DkAgPm8AAArvACAfT0AoBy9AOAsPQCAHb0AgO+8AAB6vAAgMz0AAPw6AADAuwCgZb0AgIA9AADdvADATT0AANe7AFCNPQAA57wAMIG9AIAiPQBA5TwAEOs9AIANvQCAXjwAgEk9AMByvQAghr0AwNk8AOCsPQCAWrwAgAC9AIBlPADghr0AABy8AMCZPAAAkDsAAEC7AIBPvABAsrwAYBQ9AIDHvAAAxrsAwMq8AADDuwBAwzwAAFG8APCgvQDgdz0=","chunkHash":"bb9fc6bea90da5517691e5d17163cac586cff301ffef4b771b21bda31dd1a9cf"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def _load_or_generate_mesh(self, sample):\n        #...\n                if cache_file:\n                    mesh.export(cache_file)\n                    if self.debug:\n                        print(f\"Cached mesh for sample {sample_id}\")\n                \n                return mesh\n            \n            except Exception as e:\n                print(f\"Error generating mesh for sample {sample_id}: {e}\")\n                import traceback\n                traceback.print_exc()\n        \n        # If we get here, we couldn't load or generate a mesh\n        print(f\"Could not load or generate mesh for sample {sample_id}\")\n        return None\n    #...\n```","range":{"startLineNumber":228,"startColumn":0,"endLineNumber":242,"endColumn":19},"embedding":"AOB6PQAAeLwAQCs9AMDavACA+7wAoBG9AEAfvQDgDL0AAIE7AIDdvACgGb0AwEm9AIDMPABgRb0AoA69APCHPQAAR7wA4IW9AFDFvQAAGTwA0K89AKBQPQBgIz0AwOW8AIBzvADABD0AwCy9AACVOwDAFD0AgJa8AFCKvQCAhbwAkKq9AIAhPABQhb0AcIo9AKA7PQDARj0AgAA8AMBQvQDwlD0AoOy9AEA2PQAAsDwAgDA9AOBLvQAAXrsAEJO9ANCmPQBAhbwAABe9AMDIPACAZbwAEIi9AIArvAAAaDsAgKW8AMDZvADAf70AcKO9ANCqPQDAIj0AAFu9AAALPAAAVT0AgCq8AAA1PABAsTwAAD69AABOvAAAyrsAACw7AEA5PQDgxr0AAL28AKBvvQCADzwA4AQ9ADC+vQAAqrwAAJK7ADCsPQAAzrwAAIQ6AAACuwDQlr0AUMm9AABaOwAAQrsAANS8AACtuwAA5TsAUIO9AADZPACgPD0A4Eg9AACwuQCAJL0AoF89AEDaPAAAO7wAQDw9AADYOgAAWDwAAL68AGDPvQDAOL0AAMm8AACovAAApTwAAKu8AACkvQBQhD0AQGo9AIAEPAAAQjsAoAc9AABbPQBgXb0AALu7AGCkvQCgMj0AACG8AKCZvQAAybsAgJw8AAD+OwCAubwAYBa9AIAlPQDgNj0AgE68AADuuwBA1b0AgJO8AACVOwBAWr0AQPC8AAAEuwAAIz0AwFy9AIASPQAAHj0AgG89AKCGvQAgD70AgFc8AHCfPQDghT0AQNk8AIBivAAAfTwAYGg9AECxvABA0zwAUIi9AKAGvQCwmD0A4Dq9AMBFvQAABL0A4CQ9AEDTPAAAJ7wAAKc7AMDTPACwxb0A4KO9ADCBvQAgYL0AUIg9AABUvACArDwAQEK9AAC9PADAOb0AAN28AAAcPAAA0rsAoGa9AECwvAAASjwAAFK8AAA8vACgOj0AwK69AAB2PQCwgj0AIDQ9ACASPQCAPzwAwL08AIAovACAeL0AAAA6AKAZvQBgjj0AAGy7AKBAPQCgFb0AICm9AADIuwCAPjwA4Dq9AACcOgAA6DoAQIu9AICJvACA3LwAALA7AADlPAAAwDwAgFa8AIBxvAAALDwAgIa8AAAAOgBgIj0AABq7AEB/PQAAwzsAEJc9AACNPAAAODsAQLk8AMAVvQBQob0AgD+9AHCYvQDACj0AgF+8AOCpvQCgCL0AYDO9AEDhPAAA2LsAIBi9AMAhvQAAdbwAAMA8AECjvACA6TwAIEW9AABqPADAQD0AMIc9AGA3vQDQmL0AcIs9AADwuQAgSD0AAFY7AACUPQBwmL0AwLi8AICLvACAUr0AgGk8ANCvvQAA6LsAAHU8AEC8PABgBL0AIGM9ACA7PQAAArwAgCI9ACBYvQAAILwAAJS6AAAyPAAA7zsAgBW8AMBqvQCgmb0A4Dk9AADGvABgaT0AMIw9AABWPQDAfb0AAFo7AMCfPADwnT0AQLY8AMAFvQBAFb0AAOA8AKAgvQAAJr0AQCo9AAB2vQCAjL0AwMy8AIBrPABAyLwAALa8AIAavAAAqbwAALy8AMCIPACQgr0AAJm8AOACvQDAmbwAQEu9AACgOQAAGLsAkKw9AIBbPABgUb0AgNO8AGAzvQAAgTsAAMQ7AOBGPQAAXD0AwJs8AKDoPQBA7LwAwFa9AADwuQCAjDwAADm8ALDgvQAAfLsAYIy9AEA3vQAAnrsAYCi9AACBOwBAhLwAQOs8AICyvADQxT0AQCK9ABCYPQAAzjsAQAy9AIBIPACYAb4AQKY8AOAIvQAABDwAQKc8AMCQPQCA0jwA2BE+AABivADAdL0AwJU8AKAmvQBAvLwAgEm8AMCpvAAAJTwAAOa7AFAPvgDAhzwAIJC9AOBPvQCgZj0A4F89AACnPAAAwrsAYEE9AIC8PADgej0AABK7AAAIugDAurwAQMw8APCAvQCAnjwAADi8AIBSvQCgcz0AIIA9AMCivAAwtT0AANm7ACBcPQCA/bwAkLq9AMA+PQDAED0A4Am9AABGPABws70AgOk8AADIOwDgQL0AAAi9AICNPADgYD0AgAY8AACNPACAzrwAgPM8AICxPAAAgLsAgA29AABAvAAAuLoAAOM8AOCnPQBgET0AYBA9AGB1PQAAKbwAIBM9AIDgvAAA8DsAoCy9AIAJvADA77wAwPe8AABjPAAADL0AwNQ8AIA8vADAML0AAGg7AACDuwDAlLwA8Ic9AGAUPQAA1zsAADC8AECTPABAP70AIAK9AADPOwDAoj0AADy7AKABvQAASDwAALi7AMCqPAAwiL0AQFG9AKA5vQDApbwAgD09AACRuwBAtrwA4D29AABXPAAA07sAoDO9AOAgPQCgg70AQCY9AECwvABAuj0AEIi9AMD3vAAAbrwAQMk8AACHvABgDj0AoGc9AABFPQAA8TsAIB+9AAD0ugAwkT0AADu8AOAXPQAAEb0AAD28AAC7uwAA5TwAQII8AAD2uwBgq70AIHw9AGAavQDA0jwAAKa8AKCMPQAAvrwA0J29AAAeuwCAgTwAAPQ9AACZvAAATDsAIEs9AGBsvQAQhr0AAMI7AOCuPQAAUbwAwKS8AEDUPAAAlL0AwJa8ACAQPQBA2DwAQJW8AGAVvQDA9bwAwB49AMBAvQDgBL0AAMm8AAAauwBA7TwAgMO8AKALvQCQ0D0=","chunkHash":"047c5d552ac34af580550d1d5fa8524d7009b3ee835ec646d13f810b65fd652b"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def _load_or_generate_pointcloud(self, sample, mesh=None):\n        \"\"\"\n        Load a precomputed point cloud or generate it from the mesh.\n        \n        Args:\n            sample (dict): Sample information\n            mesh (trimesh.Trimesh, optional): Mesh to sample from if not precomputed\n            \n        Returns:\n            torch.Tensor: Point cloud tensor of shape (N, 3) or (N, 6) with normals\n        \"\"\"\n        sample_id = sample['sample_id']\n        precomputed_pc = sample.get('precomputed_pc')\n        \n        # Check if precomputed point cloud exists\n        if precomputed_pc and os.path.exists(precomputed_pc):\n            try:\n                if self.debug:\n                    print(f\"Loading precomputed point cloud for sample {sample_id}: {precomputed_pc}\")\n                pc = np.load(precomputed_pc)\n                return torch.tensor(pc, dtype=torch.float32)\n            except Exception as e:\n                print(f\"Error loading precomputed point cloud: {e}\")\n                # If loading fails, fall through to generation\n        #...\n```","range":{"startLineNumber":245,"startColumn":0,"endLineNumber":268,"endColumn":0},"embedding":"AICvPACAH7wAIHE9AAATvAAAtLsAwFm9AGADvQAAobsAYAw9AIC8vACAxr0AAH+8ACAcPQDgVb0AQPi8AAASPAAAEr0A0IW9ACATvQAgLz0AACQ9AKCCPQAQiT0AoIe9AECxvQDwlT0AAM+7AMD8PACgiD0AID29AHCnvQBAvrwA0Ly9AMDQvABgj70AwHo9AACrOwCghz0AAEK9AABTvADAvjwAYKC9AGBlPQAAo7sAYAM9AAClvQCAAb0AwGa9ADCWPQCgTz0AgDm8AOAhPQCA27wAIMO9AIDYvABAw7wAgPu8AIAHvQAAM70AgE68AICVPQDAaD0AYCC9AEDoPAAgRj0AgNO8AEDaPAAA2jsAsJW9AAA2vACA37wAAO48AMDCPADAlL0AYB69AAAyvABA6LwAgCk9AMDLvQBACr0AQKQ8AIAkPQAAFrsAgDA8AABguQDQir0A8IW9AADnOwBArDwAALI7AEAaPQAA0jsAIE29AMDAPAAA0zsAYCA9AACkOgAgTb0AAHE9AOA7PQCAXrwAQM88AABAuwAAmTsAAMQ6AMAevQBA0LwAAOg6AECJvACAwzwAALQ7AMD0vACgTD0AYJw9AADzOwBAuTwAIEg9AIBBPQAgnb0AgPO8AGCdvQAAuLsAwN88AABwvAAAJbwAgNU8AAADvADwkb0AACW8AMBEPQDgHz0AgHG8AABEvADgob0AACi8AMCNvAAA8DkAsKK9AAC+uwCAiDwAAMi6AMDDPAAAiDsAAF49ABDFvQDgL70AgF+9AOC6PQAAFDsA4FA9AMB1vQAAWrwAIC89AAA8vQAAUzwAQH69AMDivACAkD0A8I29AJCbvQCAg7wAgBI8AAA9PAAA97sAADg7AECRPABArr0A4B29AMBlvQCA4L0AwM88AABSPACAijwAgKC8AIBiPQCAJjwAICy9AADgOgCAFDwAwKC9AMADvQCAWDwAAKW8AACpvAAA/jsAQIG8AICoPABQxD0AACg7AAChPQAAp7sAoAc9AACKOwAgSr0AAM27AABYvQAgtj0AgG28AADiPADwxb0AAHi7AACkvACALDwAwPg8AADoOgBApDwAAGA6AAAuuwAgEL0AAAg6AACAuQCAlTwAABW9AAALPABAIb0AQAW9AIAPvABgTD0AAG+9AGCVPQAAnLsA4Hg9AIB7PQAAKjsAAOA8ACADvQBAR70AAEG8AADauwBgaj0AAN87AGBLvQCAqr0AQMq8AIBXvACAMjwAAD68AMAvvQAAZbwAQIs8AGBXvQAAuTwAIHi9AAD4OgBgmT0AoCE9AOBUvQAAHbwAYKU9AIAsPACgCT0AwPi8AOBIPQBgNr0AgBu8AIBhvQCQo70AQLU8ANCsvQCAtTwAAAU8AOBJPQAga70AAGA8AAC6PACgMz0AAPE7AEB/vQAAKLwAYCw9AAC4PAAAkTsAQJ+8AKB3vQDgxr0AYI89AIBgvQAAez0AQHs9AIBZPACgmb0AsKa9AGAVvQBAjz0AgM08AMAbvQAAhLwAAJc7AABIuwDAfL0AwO88AFCzvQCwq70AgAI8AABSPACAc7wAcIq9AMADvQAAX7wAoDW9AABvvADAqb0AALg7AMDdvACAfLwAgEO8AIAzvAAAvzwA4Hk9AADsuwBA9rwAQN48AGA2vQAAUDoAwN+8ALCWPQCwjj0AgIQ9ALCRPQAAr7wAAK+7AIAAvAAAjLoAwNQ8AHDfvQBALz0AoDO9ADCnvQCgQz0AYIy9AACAugAAJrsAQMw8AAD/vADAhj0AgDG8AOCBPQAAx7wAwGq9AAAKuwBAx70AAOC8AAAwuwDgBL0AAMc8APDVPQDA+zwACA0+AGAAPQBQo70AAKE7AJCevQAAFTwAwLy8AMChvACATDwAAIu7AGAMvgCAlDwAYJy9AABivQAAhjwAAAg8AIACvADABL0AAI09AABZPADAgz0AABW9AKAlvQBgE70AAHw8AADePABA0zwAoA+9ANC0vQBwrD0AoJ09AICrvACgmT0AAKw6AACougBAGL0AwJe9AIB6PAAA6TwAQLi8AABdPAAAqrwAQKU8AIBiPQDwnr0AYBq9AAAAPQCA0TwA4C49AIA+vACAdrwAwIS8AAA8uwBQib0AAPg6AABbvACADb0AwCI9AIChPACA9jwAwJw8AEAkPQBAtLwAAEw8AIARvAAAgLoAADK9AAArvAAA2zsAAPk7AIBFvADgMb0AABK7ACBDvQAAj7sAAKi7AECjvAAgnb0AQG49AICDPAAA4jsAgAc8AFCaPQAAILwAwMO8AIB9PADQhD0A4FU9AOBjvQAA+DsAAAa7AEAvPQCA97wAQLm8AIA7vQCA4bwAACa7AABEOwAAEb0AAPu7AADavAAALLsAoAy9AACLOwBA67wAYJ09AIA2vACgXj0AUJe9AEAMvQBA8rwAYDU9AACOuwAAnDwAgHk8AKBAPQAAlLoAAFW9AIAdPAAAXz0AoA49AAC/PAAAIjsAAB47AAD2uwBAhD0AAIm8AAB4ugAAN70AEN49AIA0PABAJj0AAPu8AGCdPQDAv7wAwMe8AIDLPAAAKDwAgOE9AAAYvACAUDwAgFA9AMDbvABw/L0AgBk8AJDEPQAAG7wAgAo8AIAivACAN70AANc7AEBMPQAAizwAQB69AADBvAAANLwAgAE8AEAAvQCAZDwAwJ28AADROwAAs7sAAFG8ACBnvQDQrD0=","chunkHash":"fdb93799fb29308a56462c49bc4b154cf7635b4ceb58e8d2f240bb59ad8254a7"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def _load_or_generate_pointcloud(self, sample, mesh=None):\n        #...\n        # Check if cached point cloud exists\n        cache_file = None\n        if self.cache_dir:\n            cache_file = os.path.join(self.cache_dir, \"pointclouds\", f\"{sample_id}_pc.npy\")\n            if os.path.exists(cache_file):\n                try:\n                    if self.debug:\n                        print(f\"Loading cached point cloud for sample {sample_id}\")\n                    pc = np.load(cache_file)\n                    return torch.tensor(pc, dtype=torch.float32)\n                except Exception as e:\n                    print(f\"Error loading cached point cloud: {e}\")\n                    # If loading fails, fall through to generation\n        \n        # Generate point cloud from mesh if we have one\n        if mesh is not None:\n            try:\n                # Sample point cloud from mesh\n                pc = sample_points_from_mesh(\n                    mesh, \n                    n_points=self.num_points,\n                    include_normals=True\n                )\n                \n                # Cache the point cloud\n                if cache_file:\n                    np.save(cache_file, pc)\n                    #...\n```","range":{"startLineNumber":269,"startColumn":0,"endLineNumber":296,"endColumn":0},"embedding":"AABcPAAA/LsA8Jk9AIDWvADAQr0AQMm8AMDwvAAACrwAICM9AACKvABgW70AAKe8AIBzPACgNb0AANO8AMBfPQAAjbwAYHq9ACCVvQAAOrsAgHc9ABCIPQAgYz0AoDi9AJC2vQBAOz0AABi8AED2PADgdj0AABg7AGBpvQCA3rwA4LW9AIAZPABQh70AwI89AAAHPQCAfT0AoEC9AICWvABggT0AkLa9AGBgPQAAtrsAAAA9AFCjvQAA1DoAoFG9ACCHPQDAkjwAQNC8AIBRPQAAfbwAgNm9AADyvAAAGLoAAHC8AACHuwCgKL0AYB69APCZPQAAUT0A4Em9ACAEPQCAWj0AgC29AADEPACAHDwA0Li9AOAEvQBAibwAwJ08AMCkPABAsL0AACk8AKA1vQAAYLsAAOs8ALDUvQDA0bwAQMw8ACBtPQDgPL0AAMA4AAAeOwBQo70AcMC9AADOuwCAgbwAALw6AIAAPAAA4TwAMJq9AABIPADAkDwA4Bg9AIAgPABgI70AsKM9AMDAPAAAvDsAANS7AACbuwAASDsAQIW8ALCwvQDAFL0AgHI8AACRvADgCD0AgOe8AEAxvQCAwDwA8Lg9AIA8PAAAwDoAIFk9AEDaPAAgML0AABi8AACJvQDALD0AAGC8AMDYvACAFzwAwPo8AICIPADASb0AAGK8AICCPAAgdj0AwKK8AIBCPABQp70AQCy9AAAivQAATLwAgDG9AADQOwAAGjwAQJW8AIBuPAAA8jwAIHc9ANDOvQDggb0AoA29AECwPQCgTD0AAGA9AOB9vQAAYLoAoIY9AIC8vAAAMTwAsMG9AIBVvABgoj0A4Iu9ACBYvQCAp7wAAMw7AIBWPACAGbwAAAO8AID1PACwvL0AQEe9ANCUvQBQyb0AwNM8AIDFvADAijwAANy8AIBgPQDAgrwAYEq9AACEvAAAFLsAYJ+9AACCvABA+zwAAFq7AKAXvQAACTwAAEq7AGBRPQAQsz0AgGk8AIBYPQAAbLsAoEw9AMCHvAAgAL0AAPk7AGBpvQAAfT0AAIG7AIC/PABQsb0AANe8AAAzPACAUDwAAKu8AACNPAAADTwAQBW9AADsOgDgTb0AANI7AAAYOwBAID0AAG68AABLvACAF70AgKK8AAC8vACAXj0A4C+9AGBnPQAASDoA8Jc9ACAQPQAAZzwAIH49AADOvAAgUL0AgPO8AIDkvADA5TwAgFq8AACKvQDARr0AQNG8AAClOwCAjjwAAIm7AAAdvQCgSb0AAAI9AEAvvQBA1TwAYFa9AADiuwDQij0A4A89ACA0vQAAu7wAcKE9AADmuwCAdz0AABO8ACBOPQAgTb0AABG8AMBhvQBA77wAgAc8AGCCvQAALrwAAOE7AEAyPQCAk70AQBY9AMD/PAAAUzwAALs7ABCGvQDgGb0AACE9AMDdPADgBT0AAJo7AOBMvQDQsL0A0IM9AGArvQDADz0AQEg9AMDhPACgpr0AgEq9AAB6OwDwkD0AgPc8AGAbvQCA87wAgE08AIA2vABgZL0AIE89AIDdvQBApL0AAIs8AIBCPAAAV7wA4DG9AAB3vADAnTwAwMe8AACLOwBwxb0AQIi8AIABvQAA4rsAwN+8AACaPACAKz0AwDA9AAAIOgCgXr0AwL68AMDZvAAA97sAQPW8AJCBPQAALj0AwFo9ALDWPQBAk7wAwPK8AKAPvQCAPLwAAHo8AIgOvgAA6jsAoF69AMCcvQAAvTwAkIO9AICMPAAAqjsAAAw9AABRPABAeT0AIA69AABGPQAAD7wAwEu9AMCOvACA370AANW7AADVvADgG70AYGY9AHC8PQBArDwAeAk+AADiPACQiL0AACi7AKCPvQAArLoAAK07AADcOwDApzwAALm7AIAVvgBAlDwAAGe9AKBFvQDA+TwAwC49AADkuwDAPb0AwFo9AIB1vACAcz0AgKW8AIBgvACAZrwAwM08AIDjvABA0zwAgMO8ACAwvQCAgT0AQDo9AMDwvADgZD0AYAI9AEDcPADgIL0AsJK9AKAiPQCgLj0AAGK7AADDOwCwrr0AwIk8AMAIPQBQi70AwOS8AAA0OwDgHD0AgMU8AADkuwDAC70AgG88AIBXPAAAir0AAMA7AICivADAhLwAYD89AGB/PQDAVT0AgI88ACAWPQBAq7wAAHE8AAAZvAAAPDsAADS9AABguQCAELwAwFC9AIApPABASr0AoAQ9AMCKvACAaLwAgCW8AMCJvABA47wAYJc9AMDtPACgFj0AAG88AIAjPQCgQb0AYD29AACCOwBgZD0AwIm8AKBivQAAgLgAAKA5AOBTPQDAHL0AANG8ACBuvQDAf70AAKk8AIBevACASL0AACa8AIALvACAKjwAQIq8AMCqvADAMr0AsIM9AICNvACAaz0AID+9AIBcvADAnrwAQDs9AAC/uwDAPD0AYBo9AID1PAAAoDsAgN28AACTuwBAkz0AACI7AMDqPACA1LwAALo7AAAgvAAAiDwAgAw8AACIuwAwjb0AILY9AABDPAAASz0AwLy8APCwPQAAxjsAYGi9AEC3PADArDwAUAQ+AAA/PAAATzwAYBo9AMDIvABg270AAJw8APDBPQAAV7wAAAy8AABNvABgbr0AgBA8AKAKPQAAqjsAgOe8AIAAPAAAyLsAgAs9ACAmvQCAKrwAgKG8AIA8vAAAMjsAAAq9AABBvQDgAD4=","chunkHash":"656c3e8a364b7454c393c8eb45327bac71b01ed45c91a863f74c17038fc11082"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def _load_or_generate_pointcloud(self, sample, mesh=None):\n        #...\n                    if self.debug:\n                        print(f\"Cached point cloud for sample {sample_id}\")\n                \n                return torch.tensor(pc, dtype=torch.float32)\n            \n            except Exception as e:\n                print(f\"Error generating point cloud for sample {sample_id}: {e}\")\n                import traceback\n                traceback.print_exc()\n        \n        # If we get here, we couldn't load or generate a point cloud\n        # print(f\"Could not load or generate point cloud for sample {sample_id}\")\n        return torch.zeros((0, 6), dtype=torch.float32)\n    #...\n```","range":{"startLineNumber":296,"startColumn":0,"endLineNumber":308,"endColumn":55},"embedding":"AMDWPACAdrwA0Ig9AIBYvADgLb0AABq9AOAfvQCAd7wAYDA9AADFvACger0AQNO8AAA/PACgLb0AAIa7AOBEPQAA97sAgFu9AMC5vQAAeTwAoC89ADCCPQBAYT0AAOW8AAC0vQAAeT0AgAK8AMCRPACQjT0AAAE8AEBCvQDACb0AMLO9AAAKvABwmL0A0II9AIAdPQAAgz0AICG9AIC5vACQiT0A8L29AMByPQAAlTsA4Ac9AAClvQAAGrwAYHG9AKCRPQAAFTwAANG8AAAjPQDAu7wAILu9AADbvAAAN7wAQKm8AAA5PACgEr0A4Fi9ABC1PQDALD0AQHG9AIBPPADwiT0AgDi9AMD4PAAAmLoAMLO9AOAMvQBAsLwAAH48AECyPADgk70AAMQ7AABMvQAA9rsAwB49AGDtvQCAH70AQJ88ACCwPQBgBL0AgEI8AAAPPADgk70AgMq9AABuvAAAkjsAALK7AACfOwBAnDwAQEy9AAAEuwCAdTwAANM8AADIOwAAY70AsIk9AACaPAAAOLoAACa8AIBivAAAMjsAwK68AKCsvQAAtLwAAI+8AECfvABAJT0AYAG9AOAavQDAwTwA8ME9AAD0ugAAbrsAgII9AAD4PADgcr0AABi7AACIvQAgRj0AQJW8AIACvQAA2DsAgB89AACYugCgOL0AgGy8AEDlPADgST0AANq8AACougAQib0AwLm8ACBFvQAAwLwAAAe9AADLuwDAgTwAAKi8ACAxPQBA2DwAgEc9APDDvQCQhL0AgJy8ACC/PQAAMD0AoEU9AECGvQDAirwAgF49AKAVvQAA3TsA4K+9AIALvAAwsT0AYJK9AGB4vQBAurwAAGQ8ACAKPQCAa7wAQMG8AID4PAAAsr0A4CW9AECKvQBg1b0AwLE8AADmvACAPzwAgBG9AIDVPABAhbwA4BW9AAB4uwAA+DsAoKy9AECLvADAIT0AAL87AOACvQDApzwAAJG8AOAXPQCgrz0AYAc9AABaPQAAdrsAADw9AABUvADALr0AAEQ7AMCGvQCAdD0AAAC7AAB1PACAaL0AwBK9AIDOPADAujwAAMG7AIAuPAAA5TsAAGS9AAAmOwAgM70AAM47AACAOgCACDwAQNq8AABQvABADr0AALW8AIBjvAAgNj0AAB69AEBCPQAAoLkAwLE9AMAXPQCAMjwAAGA9AECfvACAVb0AQBm9AEAJvQCAKD0AAEA6AICZvQAgFb0AgJ28AACwOwAALrsAAIQ6AKAvvQDARr0AgAc8AOAdvQDAqjwAQEy9AECAvADAbD0AIG09ACAGvQAA57wAEIs9AADkOgDgYD0AgGO8AEAzPQCgKb0AgBu8AMDTvACA5LwAADk8AEB3vQCAvbwAgAU8AMBYPQBgub0AgC09AADRPAAA27sAgFw8AOCPvQAADr0AgOs8AIDaPAAgFT0AAOw7AKBLvQBQw70A4HU9AKAkvQCgPj0AIC89AADfPAAwj70AYAu9AIB7vADQvT0AIBY9AGAkvQCAO7wAgFM8AIAGvACABr0A4IE9AIDPvQDQkr0AAD88AADyOwAArLwAoB+9AIAPvAAAmjsAYDO9AABUOwCQv70AwNO8AMA1vQAAMrsAQOS8AADXPACABD0AAD89AADiOwDARb0AQAe9AADHvAAAxLoAgO+8AAA3PQBAHz0AADs9AEDVPQDALb0AQB+9AAD0vABAj7wAAG08ABgJvgCAcjwAwEq9AKB3vQAgLz0AIHS9AABWuwDAgTwAwKo8AABaOwDgQz0AoBO9ACAjPQAAWrwAYF+9AIAFvADg7b0AAAS7AIC+vADA37wAYHs9ALC/PQBAxDwA4Os9AAC7PACwq70AwKi8APCbvQAA0DkAgA+8AAAAOABA6jwAAHK8AMgQvgDA2TwAgGm9AGAovQBgIz0AYEA9AICavACAHr0A4FE9AACfvADgPD0AAG28AIDMvACAF7wAQPQ8AECsvACAujwAwNO8AGBFvQAwiz0AYD09AEAGvQDwgz0AYAo9AADxPAAAKb0A8JK9AOA5PQAgPz0AgAm8AAA+OwCwmL0AgJI8ACAUPQBAfr0AwB69AADtuwBAPz0AAOw8AAAWvADA1bwAQIw8AAA1PADAk70AAHQ8AAByvAAATjsAQCI9ACBnPQCAdD0AACw8AAAoPQBAxbwAAMA8AICKvAAAwTsAACO9AIA2vADgA70AYAG9AACIOwAARr0AwCs9AEDWvAAAsLsAAAC7AAAwugDA+7wA4KI9AADfPADAAD0AAP87AIBVPQBAIL0AoB+9AABMuwCAZj0AAMi6AEBVvQAAu7sAAKi7AEBPPQBAw7wAwA+9AIBwvQDAPL0AgDk8AAAavACgab0AACC6AABcuwCAyzwAwKS8AADNuwDAeL0AIFY9AEDCvAAAVD0AAGi9AIAQvADAAb0AgAk9AACYuwDgKj0AoAs9AACvPAAA+DsAIC+9AACvuwAgXz0AAJo7AICbPABA7LwAgJc8AAA0vAAA5jwAAMo7AIAAPAAQpL0AYLc9AAATPAAgIj0AIDO9AMB/PQAAv7sA8IG9AMD6PACAgzwAyCg+AAC8uwAAGDwAoAc9AACXvADw4b0AwI08ANC0PQAAX7wAAEw7AAAMOwDQlL0AAAs8AIAmPQAAOjsAgMi8AAD7uwCAXbwAQAg9AIAZvQAAL7wAwLS8AIBhvAAAPjsA4AK9AGAxvQDoAD4=","chunkHash":"65e54785445afafb9763c25d267e1952508c91cdad9af5f6a5d68463a9355c22"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        \"\"\"\n        Get a sample by index.\n        \n        Args:\n            idx (int): Index\n            \n        Returns:\n            dict: Sample dictionary with mesh/point cloud data, label, and metadata\n        \"\"\"\n        try:\n            sample = self.samples[idx]\n            sample_id = sample['sample_id']\n            \n            # Base metadata for all return types\n            metadata = {\n                'sample_id': sample_id,\n                'class_name': sample['class_name']\n            }\n            \n            # Return data based on the requested type\n            if self.return_type == 'mesh' or self.return_type == 'both':\n                # Load or generate mesh\n                mesh = self._load_or_generate_mesh(sample)\n                \n                if mesh is None:\n                    # Fallback with empty data\n                    metadata['num_vertices'] = 0\n                    metadata['num_faces'] = 0\n                    vertices = torch.zeros((0, 3), dtype=torch.float32)\n                    faces = torch.zeros((0, 3), dtype=torch.long)\n                else:\n                    #...\n```","range":{"startLineNumber":311,"startColumn":0,"endLineNumber":342,"endColumn":0},"embedding":"AGCLPQCALrwAYIQ9AAA4vQAgCL0AIGS9AACBvQDAkTwAADk8AADAOQAA4rwAYIa9AAAAugAgkL0AANQ7AAAIOwCgH70AwFq9AOBkvQAACT0AAOI7ACBaPQDArjwAAI28AACAuQAgMD0AgHC8AACOvQCgsD0AAIs7AIA1vQBAh7wA4Ce9AACZuwCApbwAgKg9ACBSPQAAYjwAoBe9AOAKvQAADz0AIKa9AMCKPACAA70AgMQ8AABlvQAAV7wAYHG9AEBUPQAgpT0AAAW9ACBSPQCgTL0AwPu8AECEPQCAFL0AQGG9AACNOwCA5TwAQLy8AAB+PAAA/bwAQJ+8AICmPQCAcDwAALG8AMA7PQBARD0AgLw8AECRvACAjjwAQNk8AAAGvADAl7wAAAW8AECOvAAALjwAQJg8AEAcvgAAM70AQM08AIBpPADAv7wAAHa8AAC3vAAAjL0AgG+9AADDvAAAPbwA4AC9AAC7vAAA8bwAwGW9AIBwPADgpj0AAIY8AEALvQAA1zsAgEE8AIDHPAAAaTwAgH08AIBPPADga70AgCU8AED3vACAhzwAQMY8AACtuwBA+jwAQGu9AKBrvQCAvzwAYF49AABJPADgUj0AwKw8AACkOgDgYr0AgAm9APDRvQDAgT0AQJE8AABQvQAAf7wAABe8AECRPACggr0AwIm9AECIPQAAdz0AIAG9ACANvQBAJ70AQP+8AGCYvQBAQT0A4Da9AADmvAAAFz0AID+9AADOuwDA5zwAwOY8AACjvACgnr0AIIS9AGCMPQCgTD0AOAI+AIAkPACAd7wAYEw9AAAyuwCAjT0AgF+9AIB8vACARDwA4Iu9AEADPQCANTwAgLQ8AIDvvAAAFbwAQDu9AIDYPABAqb0AwFC9AMDGvAAAsbwAgNY8AAAGOwBgfT0AgDS8AEDaPAAA8bsAQPy8AEA5PQCAKb0AoEq9AAAivQAAmjwAAO+8AACROwDALj0AgCi9AKAaPQCAFT0AwIC9AABgPACgEb0AwBw9AIAOvQBA+LwAgAW9AIAKvAAAhz0AANS7ALDDPQBgM70AENK9ACAjPQAAijsAIAA9AAAuuwCgQT0AwDC9AEBCPQCAd7wAQMm8AIAaPQBAu7wAAF+9AACIvQAARLwAALY8AABfvQAAnDsA4B+9AEARPQAAHDsAwF09AACePAAAmDwAgDs9AAA8OwAArLoAwMe8AMDEvACAr7wAYEW9AACsugAAgDkAQCu9AIAbPQAAqjwAQJG8AKAYvQCAYLwAIFS9AOA3vQDgGb0AQI29AKAHvQDglj0AgBc8AAAOPADgSr0AAIk9AED0PADAhz0AANi6AAD1uwCgm70AAIs7AIBpPACAdrwAYCw9AED/vAAA9DoAALs7AADEPAAAuLwAYIE9AACCvABgQb0AADk8AMB9vQAAGL0AAI47AOBGvQDAqTwAAHE8AAA4vQAAP70AwPQ8AAAzPAAApjwAYEM9AABLPAAgD70AgG+9AACbOwAA0DwAgJI9AGCRvQAA+rsAwF29AOABPQBAkbwAALk7AKBAvQAAgbwA4KG9AMCBPABAqrwAYEa9AAAMPACALTwA4Hm9AADgOQAAmL0AgB49AIBbvAAASDwAIK+9AAA6PABgaz0AADE9AACevAAAobwAAFI7AIBjvQCgMj0AgHQ8AICwPAAwxT0AoGU9AGBTPQCAgLwAQJO9AIArvAAAkT0AQI89APDsvQDAhDwAgJG9ADDFvQBAIr0A0NW9AACPPQAADLwA4Ee9AECSvACAvj0AYE49ABDYPQDAyrwAgIW9AACAuwAgB70AALM8AKBLvQCgCb0AgCy8ACBCPQAAuTsA4K09AGBKvQDw+b0AAK67AMCjvQBAp7wAgN08AACguwCAa7wAABy7AOCdvQBAlrwAYIy9AICKvQCAmLwAILc9AIDXvAAAJz0AYBY9AIBIPAAACDwAABQ8AECKPAAAPj0A4EE9AAA/vADgA70AQJE8AMAvvQBANz0AwCc9AKAqPQAw4z0AgBw8AAAcOwAgUr0A4JS9AABoPQBgIz0AAPk7AABQOwCQz70AgPY8AEAWvQAgQr0AAH67AADduwDghz0AQPE8AACdPQAAqDwAAOU7AIBUPACA/rwAgJS8AIDOvAAgc70AAIy7AMAdPQAAarsAAFg9AGBePQAAXLwAAPQ6AIDZvAAAiDwAAPu8AMAHvQAAJjsA4Aa9AIAXPQAgBb0AAH48AIBivACAKr0AAA67AIDWPACAi70AsM49AIAyPQAAMjwAAI+8AADtOwAAxLsAAO67AABdPADAszwAADy8AIB8vQDA2zwAwIM8AEDXPABAK70AAHy8ABDDvQBgE70AgPo8AECdPACgOb0AABK7AICFvADAAT0AwA69AAAQOgBAM70AADo9AIB8PAAAEz0AwE+9AMBVvQDAOr0AQCU9AACdPACAVr0AwKe8AKAmPQAAUDoAgHc8AICZvACAUT0AwB69AGBRPQAAgLoAQJC8AMCfvAAA5DsAAGe8AIBuvADgJ70AgHI9AMAZPQAAvjsAgL88AADtPACggb0AMMO9AABSOwAA0rsA4Ds9AACtOwAAvTsAIHg9AKCmvQCAKb4AAOY8ADD7PQCACLwAgF+8AAACPAAAZjsAAAE8AADgOwCANTwAQJm8AMCFPADAvLwA0PA9AACfvQAAwjsAAAa7AACYuwAAs7sAAHE8AOCavQBw9T0=","chunkHash":"51c2de44d0312cbb1f0e4ec2da27553d664d5d8b87204ae7160438481fe496aa"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        #...\n                    # Extract mesh data\n                    metadata['num_vertices'] = len(mesh.vertices)\n                    metadata['num_faces'] = len(mesh.faces)\n                    vertices = torch.tensor(mesh.vertices, dtype=torch.float32)\n                    faces = torch.tensor(mesh.faces, dtype=torch.long)\n            \n            if self.return_type == 'pointcloud' or self.return_type == 'both':\n                # For point cloud, we might need the mesh if not precomputed/cached\n                if self.return_type == 'both' and 'mesh' in locals():\n                    # We already have the mesh from above, use it\n                    pc = self._load_or_generate_pointcloud(sample, mesh=mesh)\n                else:\n                    # Either we're only returning pointcloud, or we couldn't load a mesh above\n                    # Try to load the precomputed or cached point cloud first\n                    pc = self._load_or_generate_pointcloud(sample)\n                    \n                    # If that failed and we need to generate it, load mesh temporarily\n                    #...\n```","range":{"startLineNumber":342,"startColumn":0,"endLineNumber":359,"endColumn":0},"embedding":"AMDBPAAAITwAYH09AIAovQAAWLsAAGG8AGALvQAAfjwAgGO8AACMOgBgLr0A4Hy9AAC7PADgd70AAHO8AGA9PQAA6bsAUJC9ACC7vQAAEj0AQGI9AKBUPQCghz0AYIa9AMCGvQCgaj0A4Da9AACLOwDASz0AACO8AKCXvQBAmrwAEK69AIBmPACgEr0AkIA9AMDgPADAeD0AAHu8ACAZvQCATT0AwIq9AECpPAAAoDkAQI28ACCwvQAAuLwAgFq9AICtPQCgJT0AIB29AKA6PQCAp7wAEIG9AECLPADAsjwAwJy8AECivACACr0AwE69AEAYPQAAuTwAgMm8AIA/PAAAXDwAQPy8AICFPADAwDwAIH29AMBevQAAwLoAAH08AKAXPQDAl70AgAc8ACBBvQAA0DoAUIk9AADlvQCAT70AQJq8AKA2PQDA2bwAAPQ6AIA8vACAm70AoMK9AAAVvQCAHrwAAIG8AAAfvAAAQDoAQE+9AEC5PACgRD0AABE9AIBfvACAKr0AIBg9AOAKPQAArrsAwA09AAC2OwDAmLwAwMa8AGC+vQCgGL0AAGe8AIBcvACAED0AYFS9ACBIvQCgNT0AIHU9AEAiPQCArzwAQI48ACAmPQDgb70AQLu8AKCRvQAgMj0AAEA5AEA8vQDAhzwAwLY8AADZOwCAQb0AAOm8AKBFPQBgST0AAO68AABGvAAQrr0AoA69AABPvQBgEb0AQNu8AADIuwCAADwAoDq9AACgOQDAQj0AIEo9AICtvQDgRL0AAL67AMC6PQCATz0AwHw9AABOvQAA1TwAYJ89AADwvABAKj0A4C29AAAUuwBghj0AwJK8AOAWvQAAo7sAAEC6AABuOwAAiTsAgEG8AIBBPQAw4r0AcIy9AGBZvQBwyr0AwCQ9AABWOwCAvDwAICu9AIC5PABgLb0AALy8AABoOwAAZrwAAJK9AAAGvQAAQbwAAPy6AMDovAAAhLsAQAK9AEA8PQCg6D0AAG68AEDBPAAArDsAoG89AOAHvQAAMb0AACa7AIAlvQBAHj0AgAK8ACACPQDgkL0AAPG8AIBNPQAAWLsAwCS9AAC/OwAAxLoAAJW9AACXOwDAQL0AgAq8AMCHPABgAT0AIDC9AABmvACAuTwAgGU8AIDKvAAASD0AAMa8AEDlPABAqTwAcIU9AICiPAAAa7wA4Dc9AAC1vADABb0AIBS9AGAZvQCAgbwAoAG9ACCbvQDgS70AoAy9AIBkPAAAH70AwOW8APCMvQBAx7wAAP48AAAJvQAAkzwA0Iu9AAD6OwDAgj0AYD09AEAJvQDgAL0AoHY9AAB2PAAQrD0AAMe7AIA4PQAgyL0AQO28AOAvvQAga70AQBw9APCPvQCgED0AAGC8ACB3PQDgfL0AQD09AABoPQAAWDoAAPC6ABCPvQBAiLwAADg6AABIOwCALj0AQJo8AEBCvQDw370AIGw9AMD7vACgMz0A8J09AAAUPAAAP70AQOW8AAAXPADgeD0A4Cs9AEA4vQDA8LwAAB48AACJOwDA57wAgNE8AJCWvQAAg7wAAL87AABYPADA8bwAICi9AIA2vAAATrsAoDi9AMDjPABwg70AACS7AMClvABAxLwAACS9AAAAPACA4jwAABc9AADBuwAAV70AICO9AEBbvQBAwjwAAPm8ACB6PQAAZj0AACg9AGDPPQCAU7wAgCe9AIC3vAAAZrwAQC09AGDIvQAA2TsAQIu9AOCNvQDgFb0AUK+9AAC3OwAAMTwA4AY9AACLvAAwgD0AAIu8AICMPAAADrsAQHe9AABTvAAAm70AgFC8AMAQvQAAlDoAwO08AMDBPQAA9TsAaBk+AMAdvQBQ1L0AgDI8AFCJvQDgFL0AAFg7AIATvABAzjwAANy7ABAMvgAAYj0AgHy9AOABvQCA6TwA4Dg9AAALvADApbwAAKc8AIBOvAAgnD0AwMG8AADguwAAhTsAAJe7AAAevQDA2zwAAM+7ACB0vQAgaT0AYFk9AMCXvQBgjT0A4CU9AMBHPQAAPLwAQMK9AACiPAAA6TwAwMW8AIA+PABwtr0AAGk8AAClPAAgAb0AAMq8AADUuwAQgz0AACw7AEDiPADA6LwAAKU8AIDLPACgGL0AwCC9AMDivACgOb0AIFs9AGC3PQAAbj0AQPA8AOBTPQAAVDwAwLs8AKACvQCAPDwAADS8AIDNvAAA9jsAEIm9AECNPADAab0AQLg8AAAlPAAAVjsAQMq8AABRvADga70AgMU9AMBjPQCAazwAYEu9AECyPADgqb0AQO+8AICCPQDwlT0AANa7AKAgvQCAtjwAAHQ8AEANPQCA1rwAwLS8AGCbvQDAkbwAAMU8AECXvABgF70AAII7AMCRPAAAYDkAQEm9ACA1PQCA7rwAcJA9AADOOwBAcz0AQHe9AECrvADA7LwAgDI9AIC4PACAODwAQJ48AED6PAAAA7wAgOC8AAA3vABgaj0AABC7AKBRPQBgQ70AAOi6AMCXPAAA5LoAgHe8AAAAuQCAh70AQFw9AABNPABAozwAAKA5AKA7PQDgFr0AcMe9AABYugAATDwAYOE9AAD8OwAAITwAgLs9AKBuvQAAz70AAEk8AJCrPQAALrwAAOg6AABsPADAor0A4Bm9AADCPAAAFjsAgAi8AACwugAADLsA0IM9AABtvQAApjsAALw6AICYvAAAUjwAgG68AMDovAAg0z0=","chunkHash":"0a3aca7f10590cac543bf1f69ce3412a3960cdeb7f95c7f35b7d682f8148853f"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        #...\n                    if pc.shape[0] == 0 and self.generate_on_load:\n                        temp_mesh = self._load_or_generate_mesh(sample)\n                        if temp_mesh is not None:\n                            pc = self._load_or_generate_pointcloud(sample, mesh=temp_mesh)\n                \n                metadata['num_points'] = pc.shape[0]\n            \n            # Construct the return dictionary based on the requested type\n            result = {\n                'label': sample['class_id'],\n                'metadata': metadata\n            }\n            \n            if self.return_type == 'mesh':\n                result['vertices'] = vertices\n                result['faces'] = faces\n            elif self.return_type == 'pointcloud':\n                # Split the point cloud into positions and normals if available\n                if pc.shape[1] == 6:  # Has normals\n                    result['points'] = pc[:, :3]\n                    result['normals'] = pc[:, 3:]\n                else:\n                    result['points'] = pc\n            else:  # 'both'\n                #...\n```","range":{"startLineNumber":359,"startColumn":0,"endLineNumber":383,"endColumn":0},"embedding":"AKALPQAAxjsAYJA9AKAxvQCAL70AQKe8AEA3vQAAqLoAwKU8AIAtPADANL0AIIu9AAC5PACgPL0AgGC8AIBCPQCADjwAoDG9AACevQCACz0AwPg8AGAmPQDAdT0AAEe9APCHvQAwlD0AwOC8AABbPAAgID0AAIu7AEBovQCAwbwAYHC9AACwOwCgJr0AcIc9AGA2PQDAfz0AwOa8AADguwDgET0AUIe9AOAjPQCAFrwAAMI7ANCovQCAmbwAABS9AICvPQCAVD0A4BC9AHCBPQCAMLwAULG9AABwugCgAz0A4AK9AAA4vACAJbwAIG29AOCDPQAAXDwAYAO9AECrPAAAQjsAwBO9AAC8OgDAAz0AUI+9ACBlvQAASrsAAKw8AACLPADQjL0AAAa7AAAwvQAARLwAIGA9AADuvQBAFr0AAEq8ADCHPQAAHr0AAEY8AACauwCArb0AgLe9AKAcvQAAa7wAACm8AIAdvAAAWLsA8JG9AMAXPQCgAT0AAHc8AABZvABAL70AQNA8AMCDPAAAkrsAAOM7AACQugAAzLoAgAy9APDIvQBAM70AQIs8AADxuwBAizwAAFm9AKBLvQCAIT0AwJg9AAAzPQAA7TsAQIE8AMAFPQCQgr0AwKW8AHCpvQBAdT0AAAi7AKBPvQAAIzwAQJU8AIALPACQkb0AQBa9AKAOPQDgHj0AQIi8AMDEvABAdL0AYAS9AMBJvQAANLwAAGm9AMDNvAAAqDsAADK9AGAkPQCA5zwAQPg8ANCmvQDgRb0AgN+8AACzPQAgLj0A0Ic9AOAhvQAAIrsAgJg9AACnuwAAHj0AgHi9AABOuwAgsj0AAN+8AOAGvQAA0LkAAHC7AADKuwCAbrwAAPy7AMDsPABA0b0AQES9ACBWvQDgor0AQK08AMC9vAAAKDsAQDe9AAAwPACAN70AQJu8AIApvABA77wAENi9AMCjvAAAGrsAgDq8AIAWvQAA0DkA4C29AACqPAAwsT0AgBI8AADkPABAijwAQGU9AAC6uwDARL0AAIC6AKB3vQBA9jwAABK8AABNPAAgq70AwNu8AOATPQAAijsAQLy8AECAvABAszwAYK29AAAwuwAAcLwAwKy8AIB7PAAA1jwAgHC8AIAbvAAAXLsAAKS7AFCNvQBA4DwAgAe9AAAZPQCAuzwA4Ew9AAADPQAA2DsAgHA8AICzvABgSr0AoAG9ACADvQDAKr0AwMS8AKAqvQAAbrsAgOq8AACUuwDgKL0AgFW8ACBtvQDAFr0AACs9AMDNvADANz0AgLS9AIAmvACAjj0AQDQ9AMAgvQAAFr0AoIs9AABauwCwnD0AAOo7AMDSPACAk70AQMq8AEC0vACAib0AgJo8AEBWvQAA7TsAQKe8ACBUPQDQsL0AAH09AMDxPAAAJjwAALC6AKCGvQAAEbwAgGA8AAClOwBggj0AgEc8AEDNvACgv70AQJM9ACAavQAAEj0AoDM9AAC6OwBQgL0AYGO9AACDPACArz0AID89AKAavQAAEL0AIBw9AIBEPABgRr0A4GE9ABCKvQAACb0AAJQ6AECgPACgEr0AwD+9AABzvADAlTwAAA69AMC9PABgwr0AgCK8AIC5vABAhrwA4Em9AMDNPAAAzjwAQCU9AEDVvACAH70AIEi9AEALvQCAFjwAAAi9AIBGPQDAiz0AgPw8AEC6PQCA07wAEIi9AICbvAAACDsAQBU9AMgEvgAA2zsAUIq9ALCuvQAA+zsAwKW9AECMPAAAg7sAgCI8AIAjPACQij0AwCq9AOAhPQAAr7wA8J69AADeuwBws70AAI87AEDbvAAAB7wAYDY9AIBxPQDA+DwAOBA+AID8vACAv70AAOQ8AAClvQCAlrwAgJs8AADMPAAAajsAgIE8AFgQvgAAxjwAIIW9AACBvACALD0AoJo9AAAAOwAAK70AALw8AIDAvACgYT0AQOa8AACKOwCAVrwAAIY7AMBdvQCAzzwAADw7AHCevQCwhz0AwH89AIB+vQAQjz0AoFU9AGAdPQBAzrwAMKm9ACA7PQCgFj0AgJO8AACMOwBwmr0AwIU8AADrOwCgbr0AoAS9AADoOgBgkD0AACw8AMCoPACgEL0AAPY7AIC5PAAws70AgHy8AACAuwAA/rwA4Ac9AECWPQCgRD0AwBY9AICYPQAA3zsAIBE9ACAcvQDAxzwAAOQ6AMDevAAAo7wAsIq9AAA6OwDACr0AICY9AAAEPAAAsLkAQJS8AMCavADAh7wA4Mk9AACiPADAID0AwCW9AOAUPQBgM70AgMG8AKAdPQAAVD0AAIC5AOCQvQDAjDwAAPg6AMBBPQAA9LsAAKm7AABgvQAAOr0AgCA9AABtvAAgc70AAF28AIAUvAAAULsAsIO9AIASPADAgrwAwDk9AACAOgDgWD0AgDS9AMDUvABgWL0AAAc9AABAPABABz0AQLY8AIArPQAArjsAAEy9AAAGvABgLD0AAA68AADdPADAOr0AgDG8AIA+PABAszwAAD08AACuOwCgY70AYKg9AADxuwCAGD0AgDq8AOCCPQBgKL0AEIG9AACqOwAA0LoA2Bw+AACIOwCAPzwAIDw9AOAqvQDwz70AgBY9AICvPQAARrwAAE68AAC4ugCAhr0AgBq8AAAgPAAAwDgAAHI7AADnuwCAs7wAQHc9AEDbvAAAAjwAAF88AADvvAAA1LoAAOG7ACA9vQBg+D0=","chunkHash":"633773d4bf32b19ecea90a4bd855f082da0d788eb6e29f506c9a0b55d4b18a2d"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        #...\n                result['vertices'] = vertices\n                result['faces'] = faces\n                if pc.shape[1] == 6:  # Has normals\n                    result['points'] = pc[:, :3]\n                    result['normals'] = pc[:, 3:]\n                else:\n                    result['points'] = pc\n            \n            return result\n            \n        except Exception as e:\n            print(f\"Error in __getitem__ for idx={idx}: {e}\")\n            import traceback\n            traceback.print_exc()\n            raise\n#...\n```","range":{"startLineNumber":383,"startColumn":0,"endLineNumber":397,"endColumn":17},"embedding":"AAC3OwBAzDwAgH89AEC4vADAt7wAgOi8AKARvQAAEj0AgNU8AAAdPAAAN7wAoB69AABgPABwhL0AABy7AGBWPQDA/zwAgNS8AMDAvQDAKT0AQI48AMAfPQBgpj0AwD+9ACBXvQBA5D0AAJc7AICZvACgNz0AAO27AIAfvQAApLwAQAy9AEDTvACgML0AACE9AEDPPACgej0AYBi9AICCvABAUD0AgGS9AACrOwAAEzwAAPA7AHCQvQAAkTsAgB68ACDMPQAALz0AgJW8AKCHPQCAYzwAQCK9AAAbvACArTwAQKy8AIBTvAAAArwAYJ29AOB8PQCAgLwAUIi9AAAAuAAAAAAAYA69AED1vABAqTwA4Au9ACBOvQAAq7wAAAg7AGAbPQCABL0AAJE8AAAbvQDA1TwAEKs9ADCfvQBgK70AAOa8AMBoPQCgcL0A4BQ9AIAQvACgkr0AgMi9AMAyvQAAR7wAYEO9AIBOvAAA/LoAoDm9AMDKPABgRT0A4Ek9AACvvAAA4rwAoD89AECQvACAwbwAwJ48AAC4PAAA4TsAAAi6AICCvQDA47wAQKO8AAAqvAAAvzsAQGO9AEDEvAAAOj0AwCI9AECHPQCAPTwAgIY8AAAoOwAAPr0A4AG9AMBivQAgij0AAAm8ABCZvQCAMrwAAC09AAAAOQAQw70AAFS9AACTOwBgGj0AIAS9AABwOgCAR70AAPa8AADJuwBA3LwAgCi8AACbOwAA7DwAIB29ANCnPQAADD0AQCM9AGA4vQCgAL0AAOi8ANDtPQDgyD0AcL49AADZvAAAADsAwGU9AAD9uwDAzjwAoC69AEDHPADwmz0AQIq8AKAevQAAs7sAAJy8AABVPABAorwAABQ7ACBNPQCw+L0AAEu9AIDDvAAg270AgIM8AOCOvQAA/TsAwBe9AIATvABgir0AwMi8AACUOwCQjb0AsOC9AICUvABA4rwAAL07AACjuwBAkbwAgF69AECZPADART0AgBm8AOAmPQCAajwAADk9AMC0vAAgX70AwBo9AKBJvQAA9jwAQO28AICAPQBgM70AoBa9AOA/PQCA6TwAAKC8AMCjvABgBb0AYJ69AAAoPQBAirwAgKu8AEDEPAAAijwAgGS8AIBOvADAqDwAgFO8AED4vABAoTwAAO67AIDvPAAgGD0A8Ig9AAA8PQCAZDwAwO08AEB1vQDA5TwA4CG9ACA7vQAAIDoAgCK9AGAVvQAAuzwA4Dm9AACIugCAvL0AAL+8AAA5vACATL0AYLk9AADQvAAgFz0A4ES9AIBCvADAfz0AQN88AADvuwDAE70AIIE9AICpPAAwmT0AgIw8ACAbPQBQjL0AwOu8AABuvABApr0AgDi8AKBTvQCAqTwAgM+8AABbPQAgpb0AwFU9AADLPACgFb0AwMu8ABCMvQDAhDwAANy6AADNPADgUj0AwAI9AKAFvQDQmL0AgBs9AGBWvQCgdT0AYIc9AMAPPQDgAr0AgBq8AMAsPQCwpz0AgHw8ACAAvQBAWL0AMJQ9AAC/uwBALL0AQBc9ANCTvQBA1bwAAGI7AEANPQCAebwAoFa9AABovAAAdDwAoFa9AIDbPACwpL0AgNS8AAAfPACAQrwAgN28AAAhPQAA/zsAoHU9AAD/uwBgdb0AAGe9AMCHvAAAxjwAAOS8AACCPAAAPz0AgDs9AGDfPQAAELwAMLO9AED7vABALr0AwDk9AND7vQAAnTsAML69AMAuvQCAFr0AIMS9AIBrPACAfb0AgBO8AAAGvABgqT0AAAO9AADQuwAAjDwAoEq9AAAZvAAwzr0AgE88AIAFPAAA3DwAwIY8AEBIPQCAXzwAAP49AAB6vQBAkr0AwOM8AGAOvQDAs7wAAH08AACkOgAALLsAQPG8AMDqvQCA2DwAwFe9AIALvQDAhzwAIDA9ACAmPQCAj7wAgFA8AAADvADwuj0A4Ca9AADoPAAArDoAAPC5AGBMvQAgQT0AgBY8APCFvQCAXT0AwPQ8AECKvQBAVj0AEIA9AIDEPABA+bwAoLi9AOAQPQAASrwAAKk7AAB8uwDwgL0AALM7AACOOwBADb0AgP+8AECBvAAQoD0AAKm8ALCTPQCAs7wAAJu7AMBTPQCgNb0AALW8AADAugAgPb0A4Cs9AKB6PQAgEj0A4Fs9AGA5PQDgAT0AAO08AKBOvQBAxDwAAE08AAAVvQDgA70AoF69AADhvAAAl70AwC09ACAEPQCAJDwAAB69AGAEvQBAaL0AsNI9AIB3PADA7TwAQBC9AAD7uwDgJL0AYCa9AKBtPQCAuD0AgJg8ACBEvQAAnDwAAMI7AADaPACAfrwAAP28AEBnvQAAtrsA4Ck9AAAMPAAAlr0AgH+8AABFvAAAsrsAsK69AACOPQDgG70AwPY8AABIOgDwhz0AYEm9AAAAuwDgHL0AwLI8AMCFPACALD0AALA7AACHPABAvjwAwE+9AIAIvABALz0AAFi6AGAJPQCAbbwAgBa8AABOPADAvjwAAAQ8AAC4OgBAAL0A4GA9AACmPAAAnzsAgIi8AGB/PQCAPLwAQJq9AIDSvAAAtDsAYCI+AIBqPAAAGLsAwMs8AADWuwBAub0AwFY9AECKPQCAO7wAACS7AABNPAAA57wAQAC9AAAjvAAArjsAwOY8AIClvAAgBr0AICM9AAC4OwBAjTwAgHs8AACLvADAK70AwIs8AOAPvQCgAj4=","chunkHash":"9d2e69de0ec9b24b926be19cadc6abadf12ae6374d52da12db4c219f91982f1d"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    \"\"\"\n    Dataset for loading and processing 3D meshes from mask volumes.\n    \n    This dataset can:\n    1. Generate and cache meshes on-the-fly\n    2. Load pre-processed meshes from disk\n    3. Generate point clouds sampled from mesh surfaces\n    \"\"\"\n    def __init__(self, \n                 root_dir,\n                 class_csv_path=None,\n                 sample_ids=None,\n                 filter_by_class=None,\n                 ignore_unclassified=True,\n                 precomputed_dir=None,\n                 generate_on_load=True,\n                 return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                 voxel_size=(1.0, 1.0, 1.0),\n                 \n                 smooth_iterations=10,\n                 decimate_target=5000,\n                 num_points=1024,\n                 sample_percent=100,\n                 cache_dir=None,\n                 debug=False):\n        #...\n    def __len__(self):\n        #...\n    def _load_or_generate_mesh(self, sample):\n        #...\n    def _load_or_generate_pointcloud(self, sample, mesh=None):\n        #...\n```","range":{"startLineNumber":15,"startColumn":0,"endLineNumber":244,"endColumn":62},"embedding":"AICvPABgBD0A4Do9AJCTvQBgSL0AAEO8AMDKvAAAHjsAADg6AMDBPAAAE70AAD69AAArPQCATr0AgGa8AAA0PQAAYDkAANo7AABavQAALLsAYKM9AFCePQDgfz0AQH69AGAlvQCgSj0AAHS7AACYPABAxzwAABi9AFCuvQDAlbwAAPS9AADouwAgf70A4FY9AGAHPQDQvD0AwMu8AACiuwCgrT0AwGa9AKAKPQAA2rsAwMY8AIBwvQAAo7sAkJq9AAARPQAAOTwAIBC9AICbPQCAm7wAcLm9AAA8OwBAnjwAwOW8AKBmvQAgdL0AYEy9AOCAPQAAwDoAADq9AAB5PACAID0AQK28AIDRPACAx7wAsKi9ADClvQAAPLsAAHQ8AADiPAAAgL0AACQ9AECYvQAA07sAIDI9ABDovQBABb0AANu8AEBtPQAABb0AAIE8AHCAvQAAWr0AoFS9AIB/vAAAar0AQJ28AACpvAAACLsAID29AHCFPQCALz0AAAg6AICNvAAAn70AEIo9AECwPADA37wAoFo9AIA7PADAoLwAANO7AICPvQAAlLsAgEG9AIALvAAAlLoAANC6AABWOwAQxz0AAFI8AACHOwAA5DsAgA89AKAuPQBgi70AwDG9AGBuvQAAoTwAACA6AEAsvQCAJj0AANQ6AECVPQBAUr0AgKu8AAC5OwBAEj0AgK+8AAAmOwDIC74AgA28AMDbvAAAC7wAAFy8AOA4vQCA2TwAwI69AEDBPABQ0D0A4D09AEAevQAAHL0AACy8ADC2PQAA0DsAIAU9ALCxvQAAdz0AIK09AICvvACAErwAAO68AMC7vACQyj0AAMs7AEAdvQAAjDsAAIK7AMDiPADACb0AAFU8AECSPQAAu70A4Ay9AGAHvQCgqb0AcL89AACLuwAAhDwAwG+9AMBLPQAAKL0AQEy9AABoPQAAJbwAYHq9AAAAuQCAczwAAGy8AABGvAAAu7sAAHK7AAAlPABAoz0AgCg8AED6PAAAgjwAgCI9AMCHvAAA0rwAAJM8AIACvQCgTz0AAGI7AIBDPADgQL0AYAS9AAC2PAAAlrwAwJu9AIDoPACAWjwAULm9AABMvAAAKb0AoAG9AACHPACAojwAAO67AACvPAAA8bsAAGo8AGAWvQDgPT0AAOe7AKBDPQAA3DoAsIU9AIAGPQAADLsAAF48AAAkvQBgcL0AAIi9AADkvACAKbwAAAC7AACwvQCQg70AAJi8AKA0vQAA77wA4Dm9AMBCvQDA5TwAwE89AABMuwAAkDwAgFu9AABtPABgfD0AQCY9AAD1vADAdL0AICs9AAAXPAAw1z0AAGQ7AMC+PADAab0AgH68AAAtvADgyL0AwAQ9AMCHvQBgaT0AAPm8AADyPACgDb0AYCI9AIAvPQDgHT0AAJw7AEAFvQDA1DwAAPU7AKBxPQDA7DwAANC5AGBMvQAQx70AwLM9AGAKvQDAID0AoBc9AIBxPABAgLwAANe7AIDiPABAsz0AAPc8AIA7PAAAZrwAQBM9AIBmvADAab0AAGC5ACDJvQAgEL0AALG7AMCKPAAAQ7wAABI8AAApvAAAO70AAPq8AGA9PQAAALgAwB29AADUOgCgFb0AAPg7AMAMvQAAlrsAYGc9AIB3vABgJL0AgH08AOBlvQAAzrwAgIW8AMAfPQAAUTwAQEE9AACIPQBAv7wAQFK9AECAPAAAHDwAQAk9ACCjvQAApbsAQJy9AKAGvQAAxLsAML+9AEDAPAAAbLsAwMA8AIASvABgLz0AACO9ACCIPQCArbwAoBK9AAB2PADIC74AgLG8AFCQvQDAubwAQKS8ADCGPQAAiTsAcAk+AAAbPACgtL0AAFi8AGBMvQAAZr0AoA+9AIBtvAAAiDwAgAk8ALAJvgAgVT0A4JG9AIDKvADAaj0AIDQ9AAClOwCgNr0A4AE9AICFvABgXj0AQBu9AADoOgBADT0AAEm8AIAjvAAAUjsAwDu9AMBAvQBAej0A4KY9AMBmvQBA8zwAQD49AAATPQCgMr0AQFW9AADgOgCAETwAgMa8AED3PABAo70AAL48AGAAPQBA27wAgL28AMBrPQDgsD0AgCm8AEC8PABALL0AAKI8AMA4PQDgMr0AgA+8AIBXvAAA/DoAQOc8APCCPQAwmj0AIGU9AOA2PQCAeLwAAJg8AIADvQAAgDwAgHy8AADOOwBAnDwA4LO9AAD6PABAA70AANg7AACQOgAAQ7wAAGW8AACWvAAAQLoAIKc9AEBgPQAAzjsA0JC9AADOPADA9rwAAFC8AABoPADwyj0AQOK8AIDEvAAAoDoAALK7AMCzPAAAsTsAgJW8AABsvQAAgbsAwIQ8AIC8PABggb0AQJK8AACWOwCAa7wAQIe9AADEPAAgE70AQMA8AECePADgaT0A4M+9AADYOgAAo7sAAF+8AACfuwAA0jwAAM67AACkPACAG7wAICW9AACwOgBAZz0AgAy8AABfPADgnr0AAMY8AABkuwAA4jwAAKQ7AABFvADgi70AAFi7AIBuPADAvDwAgC28AIBsPQCAnLwAYHq9AMA8PQDAFT0AQKc9AECYvAAAaDsA8Mw9AOAIvQCAwLwAgE89AKBdPQAAIrwAAMQ7AEAcPQCg2b0AQCS9ACAQPQCAEDwAAJs8AMCPvACAqjwAQOM8AEBmvQAAx7wAQDW9AEDJvAAgBz0AAFo8AMD4vADgYj0=","chunkHash":"018dd17e0bece7ac5dc334bdd33273f4107fd64c70455b1434ef3788d58a9ddb"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\nclass MeshDataset(Dataset):\n    #...\n    def __getitem__(self, idx):\n        #...\n```","range":{"startLineNumber":310,"startColumn":0,"endLineNumber":310,"endColumn":31},"embedding":"AECePABAFT0AIDI9AADevABAnrwAQAW9AAAcvQCgDj0AAM28AIDvvACAb7wAgDy9AAC0PACAbL0AgF68AIDFPACAQzwAYKi9AFDJvQAALz0AgIQ8ABCJPQBAKj0AoA+9AAD2uwAgsD0AQMW8AMCfvAAAoTsAALo7ADCIvQBAsbwAgJ28ACAdvQAgF70AgKA8AIANPQCgUz0AAAm8ACBEvQAAMT0AcIm9AIBPvAAAtDoAgDO8AJCFvQCAG7wAAD+9AMD1PQBAlTwAYBO9AMB+PQAAc7wAwDe9AADJPADA5zwAQOy8AAAMPABAmjwAwLu9AIBlPAAA3rsAICG9AACXuwCAsDwAAOG8AEAfPQAAGj0AgCa8AKBwvQCA1rwAQLK8AIBLPACAD70AwLY8AOAzvQAAlDoA0Jk9ABDQvQBA2LwAwDG9AHCFPQAQnb0AAJ+7AAAkPAAAQL0AcJK9AOBDvQAAJbwAYHi9ACAXvQBAAr0AIBS9AEAYPQBgRj0AgGk9AIDuvABgVr0AgO08AIAVvACAT7wAoBs9AOAVPQAA2rwAAI28ANCVvQBA/LwAAOm8AABsOwAARDwAUJK9AGBKvQBgPT0AIEw9AEByPQAAADwAgGM8AMCfPACAGL0AgBK8APCGvQCgSD0AQJW8ABCYvQCATbwAABg8AACfuwAQir0AcI+9AMD1PACAEDwAgAi9AGADvQBwiL0AAPA5ACAivQAA/bwAAKq7AAAIvABgLj0AMJi9AKBJPQAAST0AQPc8AKA3vQDA5rwAAG68AJCVPQBAuz0AMI09AICkvACAlzwAAKw9AIA8PAAAnDwAAF67AMCOvABgYz0AANg6AACAOwAAj7sAAOI7AIABvAAAPrwAgB+8AIBuPQBQ0r0AUIi9AEDivAAwlL0AwCA9ACBUvQCALjwAIHS9AMCkvACAPb0AAEK7AICwPABgsL0A4Ea9AIAkvACAqrwAAI67AABrvABABj0AMIq9AOAvPQDgcT0AgFy8AAAaOwAAizsAsIQ9AEC8vABAHb0AwN88AECAvACAjzwAADC6AJCXPQDgC70AACK9AFCdPQAAELsAgMW8AADxuwAAKrwAqAG+AKAVPQDAN70AgEC8AMBcPQAAwzwAAGW8AMAbvQDgbT0AAI67AADiuwAAJT0AgPW8AGAPPQCgBj0A4FI9AIANvACAVLwAgDc8AOAuvQCAojwAICa9AOA8vQAA8bsAIC+9AEBZvQAASzwA4C+9AACFPADgW70A8I29AAAgvQAA07wAANc8AOBmvQAAh7sAYG29AIAzvABAST0AwLE8AAAmOwAA+LwAkJM9AADouwAgaD0AACA9AMAEPQBg470AgKG8AAAwPAAAL70AQBM9AMBOvQCAoTwAwOC8AGBmPQBgD70AAFg9AIBGPQBAibwAAJo7APCGvQAAVT0AwIW8AAA0vADAQD0AQIk8AOAjvQAAV70AALI7AMDEvACAfj0AAPU8AOAPPQBAJr0AAEu8AOByPQDAtjwAACI9AHCFvQCgE70AAB09AAA/vAAAOr0AgGa8ANC+vQCAZTwAAFy8AIAqPAAAezwAYDe9AIAwvQDArbwAQDG9ANCKPQAgc70AAHa7AMAEvQAAy7wAADG9AADEOwDgFj0AEJo9AIDuvABgrb0AACG9AABavQDA6zwAACK8AAAJPQAgWD0A8L49ANDPPQAA17sAYKS9AAABPACA4rwAIAs9ADDTvQAA9DsAIN29AEBJvQBwjb0AwKy9AKADPQAAL70AAEk8AABoPABgrj0AADQ7AOAiPQAA8TwA4GS9AIDvvAAgab0AAM07AAD5vAAAcrwAQMc8AACLPAAAgbsAIPA9ALDLvQCg3L0AAEy7AAAFvQDQjb0AgEi8AMAQvQCAibwAALy7ANALvgBA7DwAkIm9AIDRvAAAjDwA0Jo9AACPPAAAETwAAOA8AADiOwAgIj0AYBy9AAB1PQBAlTwAgAK8ALCcvQCAsjwAABS7AEC+vACAoDwAgC89AHCDvQBApz0AgA89AKAYPQAAMbwAAOW9AKAgPQAAdrsAAJS6AECCPAAg570AQMo8AMCrvACAjbwAAPi8AICRvABAFz0AgIa8AJCZPQDgE70AQIg8ACA0PQBA6LwAIAe9AIAUvACAJr0AAIU8AMBwPQBAtDwAQDA9AIBRPQDACz0AAIk8AIBkvAAAIj0AwAY9AOAPvQAAXbwAkMS9AACougDAX70AQPQ8AADaPABAQ70AAGK7AMC2vAAgML0AkNg9AKAcPQAAfLwAgCO9AADzuwAA67wAQAK9AGBePQAANz0AgHA8AOA1vQCAOj0AgH88AADlPAAgBL0AgAy8ALCdvQAAgDoAwO88AIAUvADA/7wAAKE7AIAuvACAd7wAgC29AGBLPQCgHb0AAEk9AICnvADAuj0AgGq9AABgOgAgU70A4DI9AIDoPAAAeLsAgEK8AABJPQAAQrsAAP28AADJvACAED0AgK+8AAAsPQDADr0AAOc8AIBCPACAbDwAACO8AIAivADAtLwAwJ48AABQPAAABzwAAKq7AIAxPQCA5bwAgK+9AIAtvAAASjwAMBQ+AIBSvAAA/LsAcIo9ACBpvQCAsb0AYDc9AAC7PQCAGLwAgMC8AAALPQCAlLwAAGi9AACBOwAARrsA4CW9AIBLvACgDL0AsJ49AACBvQBAzjwAAMC4AECUvACAJTwAAC28AIC6vADA3D0=","chunkHash":"ed30c58c39562c5d4f77e041b8fca3d5970bbed7418a2fc286ecac8f68611f4e"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\ndef custom_collate_fn(batch):\n    \"\"\"Modified collate function to match MorphoFeatures format\"\"\"\n    if not batch:\n        return {}\n    \n    result = {}\n    keys = batch[0].keys()\n    \n    for key in keys:\n        if key == 'metadata':\n            # Handle metadata dictionary\n            result[key] = {}\n            metadata_keys = batch[0][key].keys()\n            \n            for metadata_key in metadata_keys:\n                result[key][metadata_key] = [sample[key][metadata_key] for sample in batch]\n        \n        elif key == 'label':\n            # Convert labels to tensor\n            result[key] = torch.tensor([sample[key] for sample in batch])\n        \n        elif key == 'vertices':\n            # Handle vertices with padding\n            max_vertices = max([sample[key].shape[0] for sample in batch])\n            batch_size = len(batch)\n            \n            padded_vertices = torch.zeros(batch_size, max_vertices, 3)\n            vertex_masks = torch.zeros(batch_size, max_vertices)\n            \n            for i, sample in enumerate(batch):\n                num_vertices = sample[key].shape[0]\n                #...\n```","range":{"startLineNumber":402,"startColumn":0,"endLineNumber":431,"endColumn":0},"embedding":"AGCCPQCAxzwAkJ89AKAavQBAnrwAIHy9AECsvADAjr0A4Fi9AABqvABgCL0AgGG8ACADvQAA+zsAADi9ACAPPQDgBD0AwJA8AABeuwAAHrsAQCG9AAC4OgBgfz0AgMm8AMAxvQAAbjsAoCm9AED6vABA3DwAAKO7AAA3PAAAJDsAwMK8AEC/vADAJb0AAOw6AABSPACAkz0AQDC9AIBAvABAqTwAIN29AKAhvQAA7bwAQPk8ACBsvQDgoj0AQNO8AECrPQDA6zwA4BI9AMCQPQCAWbwAABC6AAAxPABAtTwAAPm8AAABvQBAIT0AoCm9AKAUPQAgm70AoFc9AGAPvQAQjb0AQL88AIBavQAAAr0AQDc9AAAEOwBAqjwAAEa8AEBFvQBANr0AAE69APDpvQBAjLwAMKI9ACACvQAABjsAAGK8AAB/vACgiD0AAME8AABovABgGr0AID69AIAxvADQkb0AoHG9AAB4PACAxTwAoKe9AAAAPQBAAj0AgOg8AEC3vADgir0AgB08AAAgOwAgbD0AgGA8AIBNPADAwLwAAPI8ADClvQAAJjsAQLO8AECAPADA8DwAsIi9AECbvQBAH70AgHI8AMCWPACA2bwAwPM8AKBDPQDgpb0AAGi6AKC5vQCANjwAAM07AOBMvQAASDoAAGm8AMDoPABAfb0AwFC9AICFvABAmDwAQLe8AACbOwBgKL0AQJK9AHCivQCA7LwAAPi6AAB6PADAHz0AQDK9AABOOwDAZj0AAD+8AEAXvQBA7jwAYJq9AEAoPQAARL0A8Jo9AGCUvQBgDL0AgKQ8AKCqPQBA0TwAoA69AEAoPQAgNT0AwE89AKABPQBgUj0AAE48AADyuwDgXz0A4Aw9AMCvvABgRr0AgBo8AODGvQBglr0AQBo9AMBzvQAAjbsAgBu9AIAHvQAAFjsAIAW9APDUvQCgS70AAAO9AABIOwAA0DoAQEe9ACBavQCgT70AwAS9AAD8OwCwwz0AAOc7AKCMPQCAPDwAoA09AADHOwDgCL0AQJE8AJChvQDApz0AAP68AADWuwCwgL0AAFu9AEDZPACAM7wAAAq7AACMOwDgR70AwBW9AABUvABgU70AABy9AAAtPQAAhD0AwJu8ACB+PQAAGjsAAIq8AAAtvQAABD0AAB68AADEuwAAbD0AAIC6AABNPQBgmD0AYAm9AECovAAAejwAAMy9ALCEvQDAwzwAALA5ACBVvQDA2TwAgEu8AECyvACgF70AwMi9AIAvvQAA8LoAQO88AICOvQAAfTwAABe8AADXOwDABL0AoDU9AIC+vACAOLwAQBs9AIAWPAAgfz0AAH88AABNvADA970AAG+9AADEPAAgiL0AAFg7AOAAvQBAFD0AoAG9AECTPABwgr0AAN08AOA3PQCAbrwAAKS6AACauwBgAj0AgE89AABMuwDAYT0AwNc8ACARvQDgSL0AwLU8AIAuvQCAdT0AAJ09AGBMvQDAPL0AAHC7AMBLPQAADjsAAEK7AED7vAAAsrwAwNI8AICAPACgb70AAAg6AADbuwAA7zsAgKK8AKAfvQCAsbwAANS8AABuOwDAkDwAACG9AOCGvQAAybwAYA09AECVPACADLwA4Ca9AICtvQAAhrwAsJw9AAAUOwCAHjwAwOa8AGBjvQBgK70AgGy8AABwOgDA6DwAwNk8AMC3PAAgSz0AgFA8AHClvQAAkbsAAKy6AABBvQCAGDwAYD29AFCRvQDA3TwAAAg6AECiPAAA2L0AgDI9AMAKvQAAADgAACw9AGC9PQAwyj0AQPQ8AAB8uwAg3L0AoGC9AIBKPAAA6bwAgNe8ACBTPQAAjD0A8Og9AACxvQDAsbwAAJU8AEBfPQAATDwAQAY9ACBfPQCACbwAoHc9AMDJvAAAIT0AAFu8AAB7PAAA4jwAMIE9AABkPACAOLwAAFA8AICYPABA/jwAAGG8AADguwCA0bwAwCE9AEALvQCAgbwAIAK9AIDYvADAoD0AcLQ9AABQOwBAJz0AQK09AABjPACAg7wAAKO7AKBTPQBgvz0AAFI7AABeuwCwrL0AAEQ9AEDYvADAjDwAcJA9AECiPAAACD0AAKu7AIBVPQAAgDgAgA89AMCUPQDAkTwAAI87AIAivQCAhLwAwKg8AICmPQAAL7wAYJg9AABhPQBgRz0AYBg9AACovAAAXD0AEIW9AECrvABgQb0AoIm9AIC6PABAa70AgJ48AMA/vQDgCr0AIAo9AAAoPACAPb0AIHo9AADSOwCAQb0AgAU8AMAXvQAgrr0AIFW9APDCPQAA/LwAgKw8AOAlvQAgMr0AYIc9AAAhPABgP70AkNi9AACjPAAAqzwAQAO9AGBpvQDAwTwAAE68AABqPQCAWDwA4Ba9AMD1vAAACjsAUIc9AIBcPADgkT0AANe7AAAEuwAAwrsAkNc9APC6vQAg8T0AgOq8ACA0PQBAP70AgLm8AKCFPQAA1bsAQPa8AADgOQCApDwAAGM9AKAMPQDgGz0AQIo9AABxvAAgCb0AwAs9AICQPAAA4LsAgEa8ABCXPQDAyrwAALq7AAAyvAAAWLwAMCc+AEAvvQBAhb0AIDI9AACxvAAARDsA4AE9AADXuwBAkLwAACo8AAAJPQCAwrwAwMS8AAAbPQAAE70AADo7AADovADQhj0AAOA8AMDgvAAgQj0AgFy8AIC2vAAAhbwAgC48AMD4PAAAxTw=","chunkHash":"b4eb4b9c9fbec768c4893ad218cabe71fbb3a2da501d295bfd6f9c50189419ef"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\ndef custom_collate_fn(batch):\n    \"\"\"Modified collate function to match MorphoFeatures format\"\"\"\n    #...\n                padded_vertices[i, :num_vertices, :] = sample[key]\n                vertex_masks[i, :num_vertices] = 1  # Mask to identify real vertices\n            \n            result[key] = padded_vertices\n            result['vertex_masks'] = vertex_masks\n        \n        elif key == 'faces':\n            # Handle faces with padding and adjustment for vertex indices\n            max_faces = max([sample[key].shape[0] for sample in batch])\n            batch_size = len(batch)\n            \n            padded_faces = torch.ones(batch_size, max_faces, 3, dtype=torch.long) * -1  # -1 for invalid indices\n            face_masks = torch.zeros(batch_size, max_faces)\n            \n            for i, sample in enumerate(batch):\n                num_faces = sample[key].shape[0]\n                padded_faces[i, :num_faces, :] = sample[key]\n                face_masks[i, :num_faces] = 1  # Mask to identify real faces\n            \n            result[key] = padded_faces\n            #...\n```","range":{"startLineNumber":431,"startColumn":0,"endLineNumber":451,"endColumn":0},"embedding":"ACB/PQCANTwA8Kc9AADBvAAAeLoAEIe9AICvvAAwnr0AQC29AAA/vAAA37wAgGy8AMCrvAAA3DoAQE69AIAiPQCALz0AgGg8AAA+uwAAhrwAAEu9AIADvACAXj0AwO28AEAsvQCACTwAQAe9AKAsvQDgED0AAGa8AADkOwAAErsA4Ae9AMAVvQBgML0AgAY8AACbOwCgpT0AgC69AAAQOgCA9zwA4O29AIA5vQAAo7wAgPs8AMAuvQAgtT0AgLa8AFCWPQAgCD0A4Ao9AICQPQDArLwAAMY7AICgPACAiDwAALm8AMD7vAAA+jwAQPe8AMAHPQCAqb0AoEA9AOAbvQBAab0AQIw8AKBivQCAf7wAoDk9AADXOwAAeTwAgHO8AAA0vQCgNL0AoEW9AEDIvQAAsbsA4J89AICxvAAAqLoAAM27AIBEvADgej0AgJs8AACwuQCALL0AIGm9AABkuwBgqr0AoHq9AABEPABAlTwAgKO9AIAPPQAArDwAYDU9AIDBvAAQhr0AACM8AADAOgAAlT0AgG48AECAPAAAgbwAgCc9AACbvQAAzrsAQOG8AACwOwAgAD0AQGG9AOCYvQCA87wAAGI8AECuPAAA0bwAQAA9AIAaPQCwqL0AAPS7AJCyvQBAsjwAAHo7AMAlvQAA4DoAgJi8AAAiPQAAl70AwEe9AMC/vACAcjwAQOC8AIABPACA+7wAUIa9AKCJvQAAEbwAACw8AACZOwCgJj0A4CC9AAAYugDAPT0AgFe8AAAMvQDgNj0AcJa9AMA9PQBgDb0AYIs9ADCevQDAOb0AAMI8ACCuPQDApTwAABq9AOAcPQBgOj0AAFc9AMDLPADgJD0AgDU8AACcuwBARj0AQO88AAAovAAgcL0AALI7APC/vQAAl70AoA89ACBovQAAADoA4A29AEC1vACAErwAYA69AACvvQCAjL0AIBy9AABQugAA1zsAoFm9AAAcvQAAXr0AABq9AECEPACwrz0AgAA8ADCBPQAAfzwAgOc8AADQuQBgI70AwM08ANCvvQDQsD0AgEW9AABguQBgXr0AwH+9AMCXPAAA9LsAALi7AIAdPACgN70AwBC9AADbuwAAUb0AgCm9AGATPQDglD0AAD28ACB0PQAA1LsAAD68AKArvQDAMz0AwLG8AABIuwCgRT0AABi7ACBjPQAQpj0AgAC9AICJvABAlTwAwLa9ANCRvQAAxzwAAEA8AIBdvQAA0DwAgMa8AIBuvACgNb0AULq9ACA8vQAAXLsAQLY8AKCivQAAuTwAAEi7AIAHPAAgHL0AoCU9AMAdvQCALrwAoDw9AADxOwAghT0AQJ08AIAZvABw+L0AoHm9AECxPADAZL0AAME7AID2vADA6jwAAM68AMCWPADAb70AAJA8AAAxPQAA7bsAALy7AIAfvACAxTwAYEU9AIA7PABgiT0AgAA9AIDHvADgIb0AAEU8AIAfvQBgaj0AkIg9AABWvQAgG70AACK7AABtPQAAwLoAAAi8ACAPvQCAurwAQNA8AAB9PACwhr0AABy8AIAEvAAAMLoAwJC8AMDIvACAdbwAgCS9AACfuwDAnTwAYCW9AEB8vQBgEL0AAMw8AECJPAAA97sAwB69AACxvQAARrsAsKo9AACougAAIDsAQO68AEBcvQCAIb0AgAi8AAD4ugDgDz0AIBs9AICqPADgWj0AAB68ANCuvQAAQ7wAAHA7ACBNvQCAUjwAYCe9AACGvQCACD0AAAy7AECiPACQ6r0AIBk9AEAovQAArLsA4Co9AHC5PQBAxj0AwMg8AABguwAQ/L0A4Eu9AIBMPABAIb0AQNG8AKBSPQBwmT0A4PE9ALCsvQAAqbwAgFM8ALCLPQAA/jwA4Ak9AOCGPQCAkbwAoHo9AIDXvADAHT0AAEm8AAAaPAAA/zwAQHE9AMC3PADAl7wAgIQ8AMCZPADgGj0AgGy8AACruwAgA70AIGY9AOAWvQCA1rwAAOy8AADsvABAlD0AULw9AECrPAAgKz0AwJo9AEDSPAAAerwAAOA6AKBnPQAQvT0AACg8AADMuwAQqL0AAC49AIAJvQCAFzwA8Ik9AIC8PADAojwAAD28AABpPQAAMDoAAA89AHCXPQDAojwAACA6AAAZvQBAz7wAgNE8AMCIPQCAFrwAMIs9AMAuPQDgQz0AIA49AAC3vABgTT0AsJO9AMDPvACgS70AIGi9AEDtPABQmr0AwK08AGBFvQAgLb0AQAI9AADDOwAACb0AkJU9AAAWuwCAIL0AAGg6AEAMvQAwnr0AoEW9AJDKPQDAA70AgLY8AKA2vQAgB70AwJE9AAA6OwCgR70AING9AIC1PABAtjwAwNK8ACBvvQCAnzwAgIi8AMBGPQAA5LsAwO+8AKAavQAAMzwAIJI9AIBIPAAQij0AgGe8AACZOwAA0rsAIMg9APCrvQDA+j0AwCC9AAAzPQBA+LwAQPe8AHCYPQAAlDoAoBC9AADAugDA1DwAYBQ9AAD4PABAKD0AsIw9AECAvABA87wAYAY9AECAPADAp7wAgEK8AMCaPQAAWbwAAJe7AAB1vAAAmDsAgCY+AGAOvQCAir0AYD49AICuvAAA57sAQNo8AACduwCAjbwAAKA8ACAcPQAAwLoAAN28AKBQPQAAyLwAAAo7AEDBvACggT0AwO08AEACvQBgLj0AQJe8AABuvABA3rwAwI88AADhPADA9jw=","chunkHash":"477ccb860f6aea06f96a974598f44716dba2f7fcfe1e4d88478ed5b7f99474b4"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\ndef custom_collate_fn(batch):\n    \"\"\"Modified collate function to match MorphoFeatures format\"\"\"\n    #...\n            result['face_masks'] = face_masks\n        \n        elif key == 'points' or key == 'normals':\n            # Handle point data with padding\n            max_points = max([sample[key].shape[0] for sample in batch])\n            batch_size = len(batch)\n            feature_dim = batch[0][key].shape[1]\n            \n            padded_data = torch.zeros(batch_size, max_points, feature_dim)\n            data_masks = torch.zeros(batch_size, max_points)\n            \n            for i, sample in enumerate(batch):\n                num_points = sample[key].shape[0]\n                padded_data[i, :num_points, :] = sample[key]\n                data_masks[i, :num_points] = 1  # Mask to identify real points\n            \n            result[key] = padded_data\n            \n            # Create masks only once if they don't exist yet\n            if 'point_masks' not in result:\n                result['point_masks'] = data_masks\n    \n    # Add reshaping for MorphoFeatures compatibility\n    #...\n```","range":{"startLineNumber":451,"startColumn":0,"endLineNumber":474,"endColumn":0},"embedding":"ANCEPQAA9DwAUI89AEDPvAAAk7wA4JG9AMDAvABAVr0A4Ey9AIC1vAAA9rwAAHq8AGAVvQCAJjwA4GO9AMD6PABgNz0AgCo8AAA4OwAAiLsAYD69AAAnPACgLD0AQOS8AGBgvQBAhjwAIA+9AICdvAAA0TwAAKM7AAC0OgAA3rsAgO28AEDJvABgGb0AAMI7AIAjPADgrD0AAEe9AAC8ugCADD0AOAG+AOAgvQBABb0AQBc9ACBMvQDQvT0AQLy8AMCnPQAAGT0AQMg8ABCXPQAA4rsAwJ+8AMCaPACAzTwAgKC8AGAEvQCA2zwAIDW9ACBGPQDQlr0AgCg9AAAsvQDAZb0AAIM8AKBpvQBgI70AABA9AAB2PADAwTwAAGa7AEA8vQAgLr0A4B29AKDUvQCAVLwA0L09ACAfvQAAojsAwLG8AECLvACgUz0AAJ88AABEuwAgI70AAIW9AAAavABwoL0AwGC9AADCuwCAjzwAcKK9AMDYPAAAijwAIAU9ACBBvQCAeL0AQIY8AACZOwDwlj0AAO07AACpPABAs7wAACc9APCavQAATLsAgMG8AAAWuwDA8zwAYDm9AECYvQBA6rwAgDw8AECfPABAx7wAICM9AMDlPACwmr0AAHA7AMCnvQDAmjwAAJA7AMAxvQAAjLoAgK28AABdPQBgk70AoCy9AADPvAAAJjwAgOu8AADQuQBgIr0AQJ29AKBrvQBAgLwAgBA8AICBvAAAIT0AAJC8AACAOABAPz0AgEu8ACA7vQCADj0AkKK9AKBHPQCgBr0AAIY9AGCTvQCANr0AgPg8ADCyPQAApTsAIEe9AAAZPQDgNT0AwEs9AAChPADALj0AAJg6AMCzvACgSz0AwKU8AABQOwDgU70AgAk8AHCtvQDQlL0AQME8ACBPvQAAqbwAgJm8AKAVvQAAAjsAIE69ALC+vQAQmL0AQOa8AACGuwAAkzsAAJG9AABFvQBgb70AgMu8AAC9uwAgxj0AgDI8AFCJPQDAjzwAwPk8AACougCAD70AgIk8AACmvQCQpD0A4GO9AABwuwCAVr0AsIC9AAB2PAAA4LkAgEU8AAA/PACAIr0AwAO9AABkuwAAYL0AYB+9ACAFPQCwoT0AgFe8ABCCPQCAYLwAAJ28AKBYvQBgCT0AAB28AADTOwCAVD0AAKg7AICQPQCwlz0AwKO8AEDivAAA5DwAsMO9AJCfvQCANDwAAKs8AGBYvQAA6zwAgFi8AACcvACAY70AYNm9AKBqvQAAcDsAQOg8AOCjvQAAwjwAAEA5AECsPADAzrwAwAQ9AOAfvQAA1LsAQBo9AACWOwCAlD0AAEU8AECtPAAQ8b0AcIS9AABAPABASr0AwJw8AMD3vACA7TwAIBm9AAC0OwAAYb0AQKo8AKAqPQBAgbwAQJa8AAD0uwCAzDwAwGI9AMCSPABAZT0AQEM9AMCXvACgM70AgKY8AAAvvQCgWD0AYG09ALCcvQBAU70AgHa8AGB7PQAAdrwAAEu8AGAXvQAA9bwAALM8AAD3OwBAgb0AAJu7AMC9vAAA9LsAADe8AED6vAAAdbwAADq9AADpuwAAfzwAIDq9AMBtvQBgFr0AQMk8AAC1PAAAP7wAoBS9ANCavQCAl7wAgLQ9AIA+PAAAtLoAwOW8AKA+vQAgN70AgHq8AICLPADA9zwA4Dw9AMCNPAAAQz0AAN+7AJCpvQAAnrwAAB68AMA5vQDAszwAAE+9ANCUvQCA2jwAAAI8AEDCPACA8b0AABA9AEAhvQAAfLsA4BM9ANCGPQCgqj0AoDE9AAD0OwAg5b0AoG29AAAeuwDAKb0AQJW8AKAWPQCQiD0AIN49AACjvQCAb7wAAHQ7ACCOPQDAmDwAQO48AAA/PQAACbwAoFI9ACAFvQCASD0AADS7AIBYPACAKj0AADA9AIBGPADA0rwAwLo8AADZOwDgAj0AQLO8AADhuwAAf7wAgDw9AEAgvQDAjbwA4Aq9AADNuwBQpT0AULA9AAAzPAAAKz0AELE9AACWPACACrwAAI+7AID4PAAwyj0AwII8AAC7uwCgtL0AICo9AMDrvADAhTwA0Ig9AECMPAAA6jwAAMA4AIBTPQAARjsA4BU9AGCHPQAAgLkAABC6AEDtvABAh7wAANY8AGB8PQAAerwA8JQ9AEAePQDgTD0AALs8AIBOvADgYT0A0Ji9AMC/vAAAGb0AQIm9AECoPADwj70AQI08AKAMvQAAQb0AQBA9AIAKPADgJb0AAKE9AAC8ugBA4rwAgHk8AKAFvQBgtb0AgGy9AGC0PQCA37wAALo8AOAzvQAABL0AYJQ9AAA4PAAATr0AoNK9AAAIPQDA9TwAgL+8AKBTvQCAKzwAQJO8AMBCPQAA5LsAgF+8AKAdvQAAXDsAAIE9AIAoPABwgT0AwJy8AADqOwAA5rsAAMo9AHCrvQC4BT4AwDm9AGBVPQAAoLwAoC29AOCOPQAAjDoAgMG8AABsOwAA1DwAwCI9AICGPABgCT0AcKY9AADCuwCATrwA4As9AAAqPAAA5bsAAPW7ANCHPQCAEbwAANC6AIB9vAAA/TsA0B0+AAB9vABghb0AADs9AADOvAAA+bsA4BQ9AABAvACAjbwAAHY8AMC4PAAAFjsAwPy8ACAFPQCAubwAAGa7AAAKvQAQkj0AoBQ9AICXvABAfz0AwJK8AACfvAAA57wAgMg8AADvPACAEz0=","chunkHash":"bd10b06f2584f9b7f69713c33248027a7a1304ce0bf429151e83beea5425a3d3"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\ndef custom_collate_fn(batch):\n    \"\"\"Modified collate function to match MorphoFeatures format\"\"\"\n    #...\n    if 'points' in result and 'normals' in result:\n        points = result['points']  # Shape: [B, N, 3]\n        normals = result['normals']  # Shape: [B, N, 3]\n        \n        # Reshape points to [B, 3, N, 1]\n        points_reshaped = points.transpose(1, 2).unsqueeze(-1)\n        result['points'] = points_reshaped\n        \n        # Combine points and normals for features: [B, 6, N, 1]\n        features = torch.cat([points, normals], dim=2).transpose(1, 2).unsqueeze(-1)\n        result['features'] = features\n    \n    return result\n#...\n```","range":{"startLineNumber":474,"startColumn":0,"endLineNumber":486,"endColumn":17},"embedding":"AECIPQDAwjwAcKE9AOAjvQBA1rwA0J29ACACvQAAeL0AwGe9AABhvACgHL0AwM+8AIAmvQAAazwA4Ci9AKAjPQAgOT0AAII8AABSPAAAHDwAoDK9AAB8OwDgUj0AwLC8AGB3vQCAsjwAwL68AACDuwCA5jwAAEA7AAAPPAAA+bsAgLi8AIDCvACgN70AAOQ6AADlOwCwuz0AICu9AAAGuwBA3TwA4LK9AKAGvQCgQb0AYAo9AIBNvQDAtz0AQLK8ADDHPQDgQD0AQO48APCcPQAAfLsAAAK7AADYOwAApjwAAIS8ACANvQCA/TwA4E+9AGBYPQBwor0A4Dg9AEDnvACAaL0AAEQ8AGBqvQBAGr0AIG89AABHPACAgTwAAIs7AAAZvQAAIr0AwPK8AODRvQAAerwAULM9AADkvAAAursA4Ai9AIBEvABgaD0AgMA8AAAovAAgDr0AwBW9AAASvADQob0AMIG9AACBuwAAiTsAMJi9AAABPQCApjwAgOI8AKAFvQCwjL0AAC08AABAOQCgXj0AQIY8AEDuPACAGrwAgM08AJCAvQAAx7wAgLO8AIAEPADA7zwAwDm9AGBQvQBAzbwAgOs8AICoPAAA47wAQPc8AEANPQCQjr0AwIk8AFCXvQBArzwAALw6AIAgvQAATLsAAKy6AIAOPQDglr0AICa9AMDIvADAjDwAgN+8AAAQOgDARr0AYL29AHCLvQDAzbwAAGA7AABMuwBgSz0AAOi8AIA8PADgTj0AwK28ACAEvQAgFj0AIKK9ACBJPQBA8LwA8Ig9ACCQvQDgSL0AQIE8ADC1PQCAhTwA4DW9AEArPQDAOT0AgDw9AABZPACgdT0AAPO7AMC7vACgZT0AwPk8AIBjvABAh70AAGY7AIC7vQBQqL0AAO07AIBrvQBA4LwAALi8AID4vAAAUDsAAFW9AFDjvQAgaL0AABi9AABUOwAAHDwAUIC9ABCRvQDANr0AwLq8AIAzvADQrD0AAEY8AFClPQAAhzwAICQ9AIBfPACACb0AgOE8AHCxvQDwqT0AID69AAAcuwDAP70AQCa9AED7PAAADzwAADM8AADtuwAgLb0AQBa9AAAQOgBQir0AABa9AGAjPQDAmD0AAHa8ABCNPQCAIbwAwOq8AKBvvQCALD0AwJO8AAAYOwDQgT0AgC+8AOB6PQAAhT0AgM+8AEDpvABAOT0AUMW9AGBWvQAAyzwAAMC4AIA7vQAACT0AgLK8AMCZvAAgSL0AAMO9AMAdvQAA5LsAwOE8AKCRvQDArTwAAEQ7AEC1PACAMrwAgPU8AECJvAAAt7sAwDQ9AIANPAAQkz0AAHk8AAA+PABQ7r0AYGu9AAAYOwDgjb0AgB88AIDWvACAjzwAIBi9AMCfPAAgdb0AoAk9AAD0PACA67wAAG68AIBSvADAxTwAwBU9AADaOwAgIT0A4Bk9AKAEvQAAS70AwL88AOB/vQAASz0AwG09AOCPvQDAQr0AABu8AIBiPQAAgLsAAK+8AMA7vQDAG70AwMw8AECGPAAAb70AAGA7AEDkvADAhbwAAMC6AMArvQCAv7wAQKi8AACPuwBAsjwAACS9AJCVvQCgOL0AIBg9AIADPQDAoLwAwPa8AECsvQAAxbwAMLo9AADxOwAADrsAwKG8AIBEvQDARb0AwKq8AICNPABAmTwAwAs9AEDpPAAgYz0AAJ47AMCnvQAAI7wAAF88AGAsvQAAdDwAQFG9AOCTvQCAZjwAADs8AECOPADw970AAO08AEAevQAA+LoAoBA9ACBwPQBwpz0AIBU9AAAiOwCQ3r0AQB+9AABWPACAE70AQJW8AGBFPQBAaj0AoNg9AMCzvQCAXLwAgGk8AGBePQAAtTwAwDM9AGArPQAAADsAIEE9AECYvACgID0AACI7AABouwDAnzwAgHE9AIDFPADA57wAQN48AACwOgDAJT0AgOe8AAAfvABAp7wAgBI9ACAAvQCALbwAAOC8AICMvACgmD0AYJ89AADNuwCAPz0AkMM9AACxOwCAmLwAAIq8AEDuPACAyT0AgCg8AACPOwDQkL0AoEk9AID+vAAAEzwAMJg9AMCYPADAzjwAAFK7AKBkPQAAQTwAgBk9AMBcPQAAbjsAAH28AAAYvQCA6rwAABA9ABCcPQAAx7sAwH09AIBOPQBAbD0AwKQ8AADtuwAwgj0AMKW9AADZvAAAFr0AEIS9AIB4PAAggb0AgOU8AKAuvQDAz7wAgDo9AADrOwDgM70AwGY9AAAGuwAAvbwAAD08AGAavQBQxL0AkIC9AOCxPQCA5LwAQIc8AIAuvQCAHb0A8Ig9AIBLPAAgYr0AgMq9ACARPQDA5DwAAAi9AMAJvQDAhzwAAN28AMBdPQAAgLoAQPW8AIDkvAAAXjsAgIc9AAB0PADAbD0AwJ68AABCPAAAoDkAgNg9AKCbvQAoAD4AIC69AKBJPQCA87wA4F+9AKB5PQAAGDwAACa8AADLOwCAJTwAAHE9AIBoPADAPj0A8Kg9AAAUuwAAATwAwA09AACVPACAPTwAgJS8APCfPQCAJLwAACy8AEDdvAAAsDoAACU+AAAEvAAgoL0AQN88AIAQvACAHTwAAOI8AACuvADAlLwAAEg8AADjPAAA87sAAPC8AMDePAAAEL0AgBe8AKAbvQCAkz0AwIw8AADtuwBgVj0AAIu7AAAJvQBA4rwAAAc8AAAOPQAATT0=","chunkHash":"cddf69ece957ad3c77a0757f144ad0fcd5cf32af29809eb421dd235d26020f6b"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\ndef get_mesh_dataloader_v2(root_dir,\n                           batch_size=8,\n                           shuffle=True,\n                           num_workers=4,\n                           class_csv_path=None,\n                           sample_ids=None,\n                           filter_by_class=None,\n                           ignore_unclassified=True,\n                           precomputed_dir=None,\n                           generate_on_load=True,\n                           return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                           voxel_size=(1.0, 1.0, 1.0),\n                           smooth_iterations=10,\n                           decimate_target=5000,\n                           num_points=1024,\n                           sample_percent=100,\n                           cache_dir=None,\n                           pin_memory=False,\n                           debug=False):\n    \"\"\"\n    Create a DataLoader for the mesh dataset.\n    \n    Args:\n        root_dir (str): Root directory containing the samples.\n        batch_size (int): Batch size.\n        shuffle (bool): Whether to shuffle the dataset.\n        num_workers (int): Number of worker processes.\n        class_csv_path (str, optional): Path to CSV file with class information.\n        sample_ids (list, optional): List of sample IDs to include.\n    #...\n```","range":{"startLineNumber":489,"startColumn":0,"endLineNumber":518,"endColumn":0},"embedding":"AABMPQAAsLsAIJ89AACHvQCgYL0A4Cy9AICrvACA3zwAICa9AEA2PQCgT70A4As9AKAXPQCQvb0AIDC9AMCxPAAACbwAIDK9AMCYvAAAMjwAgBQ9AGB2PQDARD0AgBy9AGCNvQAAEDoAgIe8AABZPABABD0AkIG9AEBrvQAASbwAQCK9AAA2PABAKL0AgEI8AEBzPQDgez0AwMK8AECxvADgQD0AIAa+ACA7PQBAzzwAAJQ8AMC4vQAAm7sAoEG9AKCJPQAAQ70AgCq8AICpPQCgMb0AgMK8AADMugAAp7sAAPy6AICqvACASbwAgHm9ACCKPQCAirwAwNu8AIADPAAwjz0AwNu8AAArPAAAgLwA4C29AIAwvQAAxDwAQJ68AMD7PADgzb0AQKQ8AOCJvQCAsb0AQHE9ANDgvQDAsLwAwBu9AMDpPACgCD0AAPg6ACCgvQCAvr0A4Fi9AEBTvQCAoDwAQH+9AADFPABAnrwAICe9AGBUPQBgIj0AACW8AADyOwBAZ70AgCo9AAD4PAAAhLsAAKU8AMCwPAAAJL0AAA+9AAAzvQAA/7sAQCe9AMDAvACAYzwAQF29AAAoOgDAkD0AgGu8AAA3PQAA+bwAAIc9ACAYPQAwgb0AYCm9AJCMvQAAb7wA4AQ9AMCqvADAk7wAAIS6AECZPACA27wAALK7AAByPQBgAz0AgBI8AACLPACwC74AAAE8ABCBvQCAW70AAIi8AAD+uwBATT0A4Ey9AIDxPAAgMj0AAFU9AGArvQDAlLwAwPq8ABCsPQAASTwAgK48AMgFvgCAFD0A0Kc9AAC2uwAAyjwAAAu8AED7vABwkj0AABg7AADavAAALj0AwCo9AKAcPQDArbwAQM48AEDtPADAbr0AoFO9AIBsvQDgR70AML09AIAHvAAQoT0A4E+9AEC1PACAT7wAoF+9AMDTPADAhrwAoKK9AACPuwBAhLwAgKQ8AIB2vQAAV7wAwJu8AKBjPQAgUj0AACA6AICRvABAzTwAYAM9AKAtvQAAYLwAAOU8AEDrvADgsz0AgM28APCWPQAASrwAAJy8AACQuwCAnbwAwCm9AACgOQAADLsAQEm9AADTvACAAz0AgFO8AAAmOwAgWD0AADG8AABbPAAAxLoAAF+8AICSvAAgLj0AAC08AIAuPQDAED0AIGE9AIAlPABgMz0AAAw7AIBCvADA5LwAAFK9AEBhvQAAyzwA4Fa9APCDvQDA+rwAgDC8AMCePABA2rwAQDC9AEDXvACAG7wAcIU9AGAjvQCgDj0AAO+7AACEPACASj0AAPg7AICuvADAR70AQOM8AADPOwCApT0AIAG9AIDCPACwr70AgIG8AICyvACgnr0AgIe8AIBwvACAhjwAgDw8AIDQPABgG70AkLo9ANCEPQCAlDwAAKw6AADWuwCAwTwAAAA6AIBgPACA2LwAgE+8AACgvAAwoL0AoBo9AIAxvADAbz0AsIc9ACAGPQAAH70AgC28AAAaPADAnz0AgMg8AIAtvACAlDwAwJ08AEAhvQBAoLwAAJC8AKCCvQCgor0AwL+8AMDHvAAArLoAgJI8AOABPQAA+bsAABi9AGAcPQAAU7wAgJg8AADWOwBABD0A4Ea9AIB2vACARL0AoF49AECnvACgM70AgMM8AAB/vQAAOrsAQBQ9AED0PAAAlzsAQG09AKAZPQAAibwAgB29AICwvAAAOLoAAL67AACmvQBgaz0AQEG9ABCWvQCAf70A8Ki9AIDhPAAwkL0AgJM8AIBTvADA5jwAgEm8AHCrPQCASrwAgGo8AACxPACAeb0AQIc8AKBovQCAobwAAMS6AFChPQCAuDwA4Hw9AACZvACAbTwAgBu9AMC8vABADr0AAEi8AECfPAAArDsAoEG9ANDEvQAAqT0AgCO9AECCvQDwij0AgFw9AED0PAAAUzwAUIU9AMDLvABAZT0AANS7AAC4vACAOT0AoAU9AFChvQAAzbwAwGa9AADkvAAg3j0AoJA9AAD7vAAwkj0AIHw9AAAiPAAgPL0AoFG9AACFvADgSj0AQLg8AEC8PACgib0AADS8AECQPQAA5rwAACg7AMBsPQAA3DwAAJw7AGBFPQCADL0AAKg8AEArPQCAPbwAYD+9AJCEvQAAJLwAgFI8AIBxPQCwiz0AoCQ9ACB0PQAAKrsAAFM8AGBTvQBgBz0AAFQ8AMDpvAAAhLsAoKK9AACcugCw4L0AEI89AIA+vACAGDwAQPe8AMCOvAAA1rsAQFs9ANCBPQDAyTwAQGK9AAChOwAAeb0AAAy8AKDMPQAgZj0AwIC8AOCYvQBgVL0AAIC6AGCRPQBgcr0AgA48AACjPABgRT0A8IA9AEBHvQDA2LwA4Am9AIC2PAAAULoAQJS9AADZPADgm70AgKM9AAAwuwAAxz0AoLG9AAAzvQAASLsAwLM8AKARvQAgSz0AAM+8AAD1uwDA0LwAAGy7AADcPAAA4TsAwAS9APCAPQAA/zsAoDo9AAAwPAAAfLwAAGA6AGAZvQBgtb0AQJS8AECVvACAiDwAAJE7AID5PAAA+rsA0NK9AADAuwCAibwAQNc9AICnvABA3jwAgD89AIByvQDAW70AUIA9ANCSPQAA17sAAFq7AACBPAAA3bwAQMm8ACAePQCgDj0AAPS6AAClvAAA+TwAIHI9AMARvQDARb0AYEq9AIALvQDA/DwAQA+9AKAPvQAAxj0=","chunkHash":"402cab555fcb9ca823ef4f4e3c82a718ebdb1c021b52c23a4847d4916a3ee9e1"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\n        filter_by_class (int or list, optional): Class ID(s) to include.\n        ignore_unclassified (bool): Whether to ignore unclassified samples.\n        precomputed_dir (str, optional): Directory with pre-processed meshes.\n        generate_on_load (bool): Whether to generate meshes on load if not cached/precomputed.\n        return_type (str): Type of data to return - 'mesh', 'pointcloud', or 'both'.\n        voxel_size (tuple): Size of each voxel (dz, dy, dx) for mesh generation.\n        smooth_iterations (int): Number of Taubin smoothing iterations.\n        decimate_target (int): Target number of faces after decimation.\n        num_points (int): Number of points to sample from mesh surfaces.\n        sample_percent (int): Percentage of samples to load per class (1-100).\n        cache_dir (str, optional): Directory to cache processed meshes.\n        pin_memory (bool): Whether to pin memory for faster GPU transfer.\n        debug (bool): Whether to print debug information.\n        \n    Returns:\n        torch.utils.data.DataLoader: DataLoader for the mesh dataset.\n    #...\n```","range":{"startLineNumber":518,"startColumn":0,"endLineNumber":534,"endColumn":0},"embedding":"AIAJPAAAvzwAQIc9AKBQvQCAIrwAwIi8AEAbvQCAW7wAgIO8AABouwCAab0AAEy8AAAhPAAAeb0AQBC9AGBMPQAApDoAgBC9AOACvQDAtjwAgFk9ANC0PQCgCz0AgEq9AMCIvQCA2zwAABy8AECdPAAgMz0AgMW8AFCCvQAAobwAkIW9AADVPADwhL0AADO8AEB6PQCAPj0AgGq8AOAbvQAA7TwAEAK+AICSPAAA3bwAAJe8AGCCvQAARLwAgA69AIBHPQAArDoAIBy9AHCEPQBQm70AABq8AACrvABAgjwAADU8AIBnvAAANrsA4EW9AIBcPQAAQzwAoHS9AICcPADgjT0AQL68AECBvAAARbwAQIy9AMADvQBAJT0AIAO9AIBGvADwj70AwO48AGAlvQAA6bwAYLw9ABDOvQDA4LwAwL+8AICsPQAApjsAwL88AEDqvACQmb0AYHG9ACBrvQCAhDwAAEK9AIBBvAAAxDwAYCK9AOA3PQBgJz0AQJu8AADXOwBAjb0AQK88AECzPAAAWjwAADw7AECjvABAy7wAgEu8ALCovQDgEr0AAFW9AGAmvQAAOD0AICq9AAAkPABAXT0AoJE9AECOPAAAljwAgFk9APCAPQDgWr0AgDg8AFCFvQAAkDkAAAC4ACBjvQCgGr0AQIE8AMAnPQCAfr0AQMq8AGBuPQAADj0AAN87AADpOwAQyb0AANG7APCVvQCgFb0AAI07AOAKvQDgUD0A4Ei9AADCPAAgGT0AQHM9AKBPvQAAOr0AAL28AICSPQAAnDsAwNk8APCUvQAATT0AANI9AMAIvQAAAjwA4Iy9AEC6vAAQzz0AgBu9ACBPvQBAhjwAAJY8AKAEPQBAmLwAwIY8AKBzPQAACr0AoJK9AKCHvQBgg70A8L49AAAZvAAggj0AQJS8AABuOwAARjwAoEu9AIB9vABASr0AoCK+AIAMvAAANTwAQJW8AIBsvQCAab0AoDW9AICaPABQnz0AAIU7AIAkPQDAFz0AYGE9AAChvAAAD70AAEU8AAAyPAAAEz0AgCO9AADYPADgOb0AAKi8AOAfPQBAIz0AAPq8AADUOgAA5DoAAIS8AAC9OwAAizsAQNO8AIAWvADAAT0AALi7AIBGPABAn7wAABG8AMAovQAQmj0AQK08AGBoPQAgSj0AYIc9AACvOwDA0rwAgG28AADyvADAML0A4EG9AACCvQDAaD0AQOw8AABUvQBgAr0AgMe8AIAKPACgYr0AgJm8AEC8vQCAGzwAwKI8AECHvQDgLD0AYE69AACQPAAA8DwAABo9AACNuwDQj70AgCI9AMCzPABgsj0AgC69AEDUPABQqb0AwEW9AABgvADAWb0AYBc9AACVuwAA5DsAAEY8AMDVPACA+bwAAGQ9AGBxPQDAFD0AgEc8AGAyvQBAhLwAwKq8AMAfPQDAv7wAAEo8AMCmvABw4r0AcIo9AICMPACAPj0AYGk9AADPOwBgJb0AADK9AEBfPQBAnD0AgDw8AACbOwAA1rsAAO47AMDXvABAx7wAAEg8AKBBvQAwlL0AABu9AIDnvABAljwAAIe7AMDOPAAAAzwAoFC9AAByPACANL0AACY7AKBNvQDAkDwAANA5AADIOgAAmrsAsIQ9AMCLvABgkb0AAIi8AOAPvQAASDsAAJS7AEBCPQCAtjwA4G49AGCSPQAA2bsA4AK9AADGOwCAObwAAAc8AECBvQDAgD0AEJS9AIBzvQDAJr0AcJ+9AGAPPQAA/7wAQDM9AID7PACgeD0AAF88AAB2PACAHjwAwJW8AEChPAAw470AgHC8AOBPvQCA1bwAAOI8ADC/PQCAHjwAMIY9AOAhvQCAvLwAAN67AMAyvQCAODwAABO8AADwuwCAGzwAAOS8AGAIvgDgAz0AAFi8AMBIvQCAED0AwIc9AABaOwCAOTwAYFc9AAD/uwDAbj0AoB69AOBuvQCA2DwAAN88AADBuwAAILsAQCe9AMBJvQCgST0AoLY9AAD1vADwqD0A4Hs9AIAcPQCATLwAoC+9AMCgPAAAljwAwJ08ACASvQAAu70AAGE8AIC6PACAw7wAAF68ACAOPQDAfD0AAOc8AABYOwAAkbwAABI7AKAGPQCAobwAALi8AMBrvQAAorwAAPA6AAAUPQCQpT0AAL07AECRPQAA1bsAgAQ9ABC1vQAAizwAAL+8AABKvQCA9rwAUM29AIArvADgob0AACQ9AIBNvADAND0A4Cy9AMCfPACgL70AQG09AKCwPQDA0DwAQA69AAC0OwDgYr0AQIe8AADNPACgjD0AADU8AMCrvQBAurwAADA9AKCbPQBgYL0AIFy9AABWOwCAhjwAADM9AEAevQAgP70AABi6AABePAAAgrsA4J29AAAmOwDAlbwAwCc9AMDwPABgCz0AoMG9ACAHvQDAuLwAgCc8AEDXvABAFD0AQCG9AABcuwAADr0AYEC9AEDIPADQkD0AgPO8AMCDPQAATjsAgKg8AABAOgAAPjsAAAA5AABIugCw0r0AgAY9AACluwDA3zwAQJM8AMAnPQAgCL0AUNS9AIAQvAAATrsA4PU9AACOvACAJjwAQCk9AADtvACwzr0AICM9AFDUPQAAKbwAAJI7AAAuPACAmL0AYEe9AIBJPADAl7wAANQ6AMCwvAAgOD0AIAk9AIDvvACAarwAQJc8AEC9vACAC7wAgJg8AMBRvQAgnD0=","chunkHash":"d432b5feb6c8449366f19731e72251dd8ca5da1523f4009f6a032003889a0f6d"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\n    \"\"\"\n    dataset = MeshDataset(\n        root_dir=root_dir,\n        class_csv_path=class_csv_path,\n        sample_ids=sample_ids,\n        filter_by_class=filter_by_class,\n        ignore_unclassified=ignore_unclassified,\n        precomputed_dir=precomputed_dir,\n        generate_on_load=generate_on_load,\n        return_type=return_type,\n        voxel_size=voxel_size,\n        smooth_iterations=smooth_iterations,\n        decimate_target=decimate_target,\n        num_points=num_points,\n        sample_percent=sample_percent,\n        cache_dir=cache_dir,\n        debug=debug\n    )\n    \n    dataloader = DataLoader(\n        dataset,\n        batch_size=batch_size,\n        shuffle=shuffle,\n        num_workers=num_workers,\n        collate_fn=custom_collate_fn,\n        pin_memory=pin_memory\n    )\n    \n    return dataloader\n#...\n```","range":{"startLineNumber":534,"startColumn":0,"endLineNumber":562,"endColumn":21},"embedding":"AIAcPQAA2bsAoG49AIADvQCADL0AQJS8AIBTvQAAhjsAgKS8AABXPABgHb0AIAm9AACcPADwlL0AAHi6AEAzPQAAtjwAANO7AAA7vQAA2zwAQIU9AKCRPQAQgD0AICO9ACBdvQAALD0AgKi8AACROwBAdz0AID29ADC0vQCAVLwA0Ky9AACMOgDgm70AgIU8AEBmPQDA+DwAgHA8AAASvQDgNT0AgL29AAACOwAABTwAwLm8AHC0vQCAbLwAwES9ACDKPQBAxbwAAK67APCSPQCATrwAAOw6AOAAPQDgGD0AgBU8AOBIvQBAuLwAEJi9AIA1PQAAzzsAoEa9AACbPAAAPz0AwLq8AACwuwAAjLsAMJa9AGAlvQBACD0AAJy8AAD3OwCgW70AAFo8ADCJvQBgJb0A4Gs9ADDYvQBgFb0AQJO8AOAwPQBAzTwAgOO8AMBSvQAAb70AIH29AKACvQBA3bwAYFq9AIBxvAAAErsAYE+9AGBXPQDAKT0AgGg8AADDOwAgh70AwFg9ACAPPQCA4TwAQMU8AECIvAAAtbwAAN+8AHCMvQCA1LwAgF+9AIBCvACAWTwAYEm9AAAEvABAfT0AgJg8APCBPQAAz7sAIIc9AADxPABAUr0AQAS9APCevQAAuTsAwOI8AOCjvQBAjbwAAHM8AOAOPQCAr7wAoB+9AEDRPAAAIDsAQJu8AIBrvACw4b0AAAC4AMBAvQBgZ70AAOc8AABYvABA/DwA4Fy9AIAxPQDghT0AgDU9AMBJvQBAsbwAgAm8AAA8PQAA37sAAK08ACBDvQAA4zwAkMA9AMDYvAAA+DsAwNG8AIArvADAvj0AAHS8AAA5vAAAaTwAAMs8AABSPAAA17sAAAw9AGBZPQDgf70AwH69AMBkvQAwi70AMJU9AMCgvADAMj0AQE69AIAlPAAA2bwAAFy9AABKPQAAtbwAsM+9AABqOwAAILsAAOK7ACA6vQBAkrwAEIG9AEABPQBgXj0AAII8AMCsvACAhzwA4CM9AECQvACgXL0AAK48AED4vADQlj0AgFe8AAAYPQBgO70AAGi8AGA7PQDAibwAAMe8AIBhvAAAiLoAcIm9AAAAOADAr7wAQKG8AIBjPACgLj0AgBg8AAAhPAAA1zsAAI+7AOAVvQBAaD0AAMG7AKBIPQAgSj0AwGI9AIBrPAAAujwAAAI9AIAXvQBgQL0AgDK9AOB1vQAA9zwAgPG8AHC4vQAA6LsAgD68AADvvADARL0AYDG9AMCRvQAAgDkAADM9AMAmvQBA+TwAgEO8AECePACgOT0AQNw8AMCMvAAAf70AYBA9AKAjPQBwqz0AAL27AABhPQBAvb0AQOK8AEAvvQBQrb0AgAk8AOAsvQDAjjwAAA+8AGAoPQDgf70AkJc9AFCAPQAARzwAACo8AGACvQCAjDwAAPi7AIAZPQBApDwAQN88AOAhvQBw1b0AoFo9AMCTvADgjz0AMJ89AACCPACABL0AwJa8AMC3PABA3j0AwO08AEDSvAAAEjsAgLU8AEDbvAAAnbwAAMI7AICCvQAgh70A4BG9AICevABA/rwAAFo7AMDvPAAA/LoAoHi9AGAPPQAAYb0AAM67AMDcvAAAeLsAADq9AIDrPAAAmjsAoEI9AECNvABgjr0AwPe8AIDvvAAAczwAIDE9AIA5PQDA1TwAwEw9AFCrPQBAh7wAIGq9AACkOwDAt7wAoBg9AADTvQAAQjsAQB+9AICHvQDgj70AIIW9AEBFPQBAPL0AAKA8ACAyPQAghz0AAMY7ACA5PQAArDoAQKe8AAD8PABwo70AAMQ7AMBcvQDAx7wAAIU7AEB1PQBgHD0AoN89AMAxvQCgAr0AgCY8AAASuwBAOL0AADq7AAAOPAAAQrwAALe8AKgTvgBAdT0AQCy9AEC8vAAgND0AQJk9AIDVPABAzrwAoFs9AICGvAAgVD0AAE48AIBcvABA/jwAAEM8AKCGvQAANDsAAPq8AGCSvQAgsT0AYFw9AKCSvQDgLj0A0JY9ACAEPQBAt7wAQDi9AIAEPQCA/jwAgAa8AED9PABAmr0AgN48AMDAPADgDL0AAIg6AAAYPQAAjz0AAKA8AGBQPQCAmLwAgFY8AMBOPQAAYDsAwAW9AECjvAAALLwAID49AJDDPQAAaD0AADo7AIAzPQCAL7wAQPE8AIBTvQAAjTwAQJW8AAAAOQCAjbwAUNm9AACGvAAwib0AQPY8AICgPACAZDwAQC69AACvvABA17wAINs9AABmPQAAODsAQEe9AADwuwAgNL0AQKi8AHCLPQDAkT0AAMO7AIBnvQBA1LwAQIE8ACA2PQAAQ70AACK7AADROwAAHrwAoDE9AECevADAyrwAAJu7AMAiPQAAtLsA0Iq9AEDiPACgQb0A8J49AABEOwCguj0AoLG9AAAxvAAAgrwAgBQ8AICwvADgUj0AgAs8AIDfPAAAUrwAgIe8AABwugDAPz0AYHG9AACZPADAxrwAgB48AIBgPAAAArsAwIO8AIDPvAAQ2r0AgAc9AMCpvADAyjwAANu7AAAePQAA+LwAkNq9AAC2OwCANjwA4P89AACvvACAM7wAAIM9AKAqvQBgh70AYE09AOCxPQAAIrwAAMO8AIAfvABQqr0AQP+8AADfuwDAzTwAAH67AIC3vAAAnLsAMLY9AMDHvABgTr0AgAa9AKB9vQCAxjwAAFy7AOBlvQAgrz0=","chunkHash":"167d2ced45db520dbae3628c29b2334b22f21f290e17a364753ccfb31a0f7810"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\nimport os\nimport glob\nimport numpy as np\nimport torch\nimport pandas as pd\nfrom torch.utils.data import Dataset, DataLoader\nimport sys\nfrom tqdm import tqdm\n\nsys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..')))\nimport config\nfrom utils.mesh_utils import create_mesh_from_mask, sample_points_from_mesh\nfrom utils.pointcloud import load_mask_volume\n\nclass MeshDataset(Dataset):\n    #...\ndef custom_collate_fn(batch):\n    \"\"\"Modified collate function to match MorphoFeatures format\"\"\"\n    #...\ndef get_mesh_dataloader_v2(root_dir,\n                           batch_size=8,\n                           shuffle=True,\n                           num_workers=4,\n                           class_csv_path=None,\n                           sample_ids=None,\n                           filter_by_class=None,\n                           ignore_unclassified=True,\n                           precomputed_dir=None,\n                           generate_on_load=True,\n                           return_type='mesh',  # 'mesh', 'pointcloud', or 'both'\n                           voxel_size=(1.0, 1.0, 1.0),\n                           smooth_iterations=10,\n                           decimate_target=5000,\n                           num_points=1024,\n                           #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":504,"endColumn":0},"embedding":"AOB4PQCAPj0AkN09ACB5vQCATbwAQEe9AADCvACA37wAAIC6AAC2uwCAM7wAQIq8AAD+uwDgDr0AQKG8AAAwPQAAtTwAAPE7AACouwCArjwAgMA8AIC/PQBgPD0A4C+9AOBRvQAgBj0AAPO8AADSPACA8jwAgLW8AKAEvQCAQjwAIFq9AICtPABgI70AALo8AGA0PQCQpz0AQAK9AADUuwCALz0AIOi9AACOOwCALzwAwOw8ALCzvQBgLT0AICG9AKC/PQAAFj0AYBU9AICFPQAA97wAgOS8AIBZPAAApjsAoAS9AIDPvAAABTwA4FG9AOBdPQBgMr0AACY8AICavACAQzwAAJK8ALCLvQCgTr0AQKe8AID+vAAAUjsAwL08AEAqvQBgvb0AAOQ8AJCtvQAARrwAIK49APCNvQAAcDsAAGK8AADYugCA9TwAQJQ8AGA9vQBwnr0AoM+9AIDivACQiL0AYDa9AACAvAAAfjsAQHO9AGBGPQCgWz0AAJi7AMCtvACgm70AIEI9AMADPQBgKD0AgHA8AACTuwAAwjsAgK48AMBTvQCAazwA4EC9AADwvACgbD0A4FS9AMDZvAAAmrsAAKE7AEDEPAAAfDsAwKA9AECNPAAALb0AgBg9ANCyvQAAlDsAAFI8AMDSvACAGDwAAN27AOAuPQCAVb0A4B69AECSvACAITwAIDS9AAAxPQAwxr0AgDO9AMBNvQCgBL0AAIA4AADouwCAcT0AwDa9AADRPAAAST0AAHg7AICNvQAgAL0AQG69AACePQBAC70AQFc9AGC+vQCAPrwAIHg9AACEPQAAbDwAgCi9AACXuwBQpT0AgB48AIAnPACAHT0AALi6AACRvABAPz0AwJc8AECtPABwhL0AgMW8AHCbvQAQzL0AID49AEBvvQAARjwAABG9AAARPAAA4bwAkIS9AABxPACgBr0AwAi9AMAEvQBAiDwAwI+8ABCOvQDAF70AQEC9AACuOwAQzT0AgFG8AECwPQDgFD0AgA89AAAxvAAA4zsAwKg8ACACvQAAqT0AAAA6AAD0ugDgP70AgIS8AGBZPQCAKrwAgBG9AACavADA47wAACi9AMCtvABAJb0A4Ha9AIApPQCAaD0AgGS8AEBjPQAAUDsAAIi8AEBxvQCgOD0AgDg8AIA/PQCglT0AwBA9ACA0PQBALT0AAA88AMC5vAAAYLsAwKK9AFCgvQBA0DwAAAa8AGBbvQDAH70AgLC8AMDuPAAAR70A0IC9ACBkvQAA5LwAYEw9AIBPvQAA6jwAwLa8AAC3uwAA+TwAQNE8AMCrvADAPr0AwAU9AACEPACQpD0AgA+9AECPPADwuL0AACG9AADmvADAwr0AQJK8AAAZvQCAaD0AAKS8AABOPAAAnr0AoF09AIA+PQAgKj0AAKQ6AABWuwCA/jwAwKU8AICcPACA7jwAAFM9AABIugCAwL0AIFU9AOAQvQAAOj0AQH49AOAXvQAAN70AICG9AMCoPAAAHLsAAGA5AAAavABA2rwAYC89AMDgvACgJL0AADI7ABCXvQCAQL0AAEq7AAAIOwDgJL0AwNa8AACQugAA97sAUKS9AEDBvAAA7rwAANW7AIAqvAAAqLsAgOG8ACAsvQAAoLwAIDo9AIB3vABA0LwAAPq8AEC9vAAATLwAAPO7AADgPADAijwAIAM9AIC9PQAAoDoAAHy8AABdvQBgC70AoAE9AJCrvQCgNz0A4GC9ALCpvQAA1zsAYES9AACLPAAQyL0A4F09AADbOwBAkDwAgDc8AEBqPQCgJD0AANq7AIDMPAAYAr4AoAm9ACAKvQCQjb0AwK08AMBAPQDwhD0AINw9AKAXvQAA1LwAAKI7AEACPQDAKL0A4AI9AAAxPACAGzwAQAc9APC6vQDAez0AANi8AECcvAAQgT0A4IE9AMDTPAAAhrwAQIw9AMAhvQDAkj0AoEG9AADiuwBgDz0AALc8AID1vAAAkbsAYF29AADEuwBQiD0AcKs9AMCovAAgZj0AQO89AAAKuwAAgrwAALy6AAAwugBgjD0AAJI8AMCOPAAwnL0AAH88AKAgPQAAbLwAgKM8ACAIPQBABz0AAIe8AEBHPQDAwrwAQDI9ABCDPQDA3TwAgEm8AIC5vACAYrwA4BA9ACCuPQCALj0AMJg9AMAHPQAAt7wAwOI8ACBBvQAAwDwAoAS9AMAKvQAAy7wAQKu9AIAVPACAe70AQBI9AKAHvQBA57wAAFG8AABoOgCAyrwA8Lc9AADmPADAqbwAAI+8AMCrvACwrb0AQHm9AECpPQDAqzwAgHk8AABWvQAAAL0AYHY9ACA/PQBAG70AoG29AAAePACANz0AALs8AHCIvQCAArwAgEM8AADjPAAADjsAwI29AADQugDAAL0AQGk9AECHPACwhz0AUIq9AACMuwAACL0AoL09AEBfvQBwnj0AANu7AEDUPABAu7wAACI7AOBkPQCAWzwAwAe9AEAqPQAATjwAMJs9AABkPAAAbzwAIGc9AADivADgbL0AgEo8AAD8ugAADjsAAKC5AAChPQBgAr0A4EK9AIBzPADgNT0AeBI+AEAuvQBA7LwAYHs9AADZvACgU70AYIY9AKCGPQDAh7wAAGy7AABvPADge70AQNi8AEDCPADAmrwAAMq7AMCIvAAAkDoAwO08AAAXvAAAQDwAgNu8AEB+vQCAZLwAAEA7AIABPAAAez0=","chunkHash":"a26a7b1b6194089956d6ae51c0e5dce15491b7c86e92e1c8bf31fba0267c0eae"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\n                           sample_percent=100,\n                           cache_dir=None,\n                           pin_memory=False,\n                           debug=False):\n    #...\nif __name__ == \"__main__\":\n    # Example usage\n    import argparse\n    \n    parser = argparse.ArgumentParser(description=\"Test the mesh dataloader\")\n    parser.add_argument(\"--root_dir\", type=str, default=\"data/nuclei_sample_1a_v1\", \n                        help=\"Root directory containing the samples\")\n    parser.add_argument(\"--class_csv\", type=str, default=\"chromatin_classes_and_samples.csv\",\n                        help=\"Path to CSV file with class information\")\n    parser.add_argument(\"--precomputed_dir\", type=str, default=None,\n                        help=\"Directory with pre-processed meshes\")\n    parser.add_argument(\"--return_type\", type=str, default=\"both\", choices=[\"mesh\", \"pointcloud\", \"both\"],\n                        help=\"Type of data to return\")\n    parser.add_argument(\"--sample_id\", type=int, default=None,\n                        help=\"Specific sample ID to process\")\n    parser.add_argument(\"--batch_size\", type=int, default=2,\n                        help=\"Batch size\")\n    \n    args = parser.parse_args()\n    #...\n```","range":{"startLineNumber":504,"startColumn":0,"endLineNumber":584,"endColumn":0},"embedding":"AIDVPADA3zwAkOo9AACUvAAARLwAgBm9AECMvACAn7wAwOK8AACXOwCALL0AABo8AICRPABgUb0AgAa9AMBTPQCA27wA4Au9AECMvAAgMz0AYLc9AOBZPQDAujwAABy8ACAZvQAAADoAYAK9AAA7PQDQgT0A0Iy9AACSvQAgHL0AwP28AABQPACgh70AAKo7AMA+PQDgIz0AgEe8ADCAvQDAUj0AMNu9AIC2PADANz0AgAQ8ANCCvQDADr0AwFy9AJCFPQCgBb0AALK7ACCgPQCA4LwAAHy8AACZvACAYz0AACi8AAAMvADAnLwAoFm9AGBrPQDAVb0AgPq8AACtuwCA2DwAwO68AABqvACAFb0AYEW9AAAuOwAAJD0AwIa8AECUvACAt70AADi7AGCbvQCgZL0A4LI9AADQvQAA1rsAwOK8ADCxPQAABT0AwMO8AIBOvABgZb0AgDC9AMANvQDA2LwAgDy9AMAYPQBAzTwAMKy9AABrPQCAVT0AoCY9AAANvADAv70AgEE8AIAOPQCA3TwAAKg8AADCPAAA47wAAJY7AABMvQCAELwAYBS9AICtvABgEj0AADC6AMChvADA7TwAQOQ8AKBZPQAAcLsAoBU9AAADPQAgb70AAEi7AECovQBAkjwAACi7AHCtvQDA4LwAwJE8AAAIPQCgUr0AAJ47AFCRPQAAQj0AAIw6AIDwPAAgrr0AAKW8AEAHvQBgPL0AAOi6AAAJvQDAxT0AoCu9AMBWPQAA4DwAIHs9ACAuvQAAA7wA4FG9ANCwPQCAvTwAgAQ9AIBUvQDgBD0AQLo8ACAPvQCADj0AQIC8AABYOwAAjz0AADK9AAAAvACAiDwAwII8AMATPQCAjbwAANs8AAC9PACAor0AQGa9AKCqvQAger0AQPc8ACAGvQBwgD0AAE+9AIDBPAAAVLwAIBG9AEAAPQCgF70AIMO9AMCOvAAAo7sAAIc7ACAnvQCgKr0AkKC9AEAVPQAgrz0AAOm8AOBFPQAAIj0AYEo9AACuuwDA+bwAQKm8ACAVvQCw3T0AwBC9AID0PAAAubwAACy8AICaPADANj0AgJ68ACAZvQAA9bsAQLO8AICMvAAA2bsAoBG9AADPOwCAJT0AAE28AACfuwCATb0AgKC8AIAivQCQoD0AgGc8AADOPABA8TwAgII8AACQPABgNz0AgFa8AABdvAAA4DoAQCe9AEAJvQBgIT0AQJw8AKA4vQCAlrwAQI48AEAYPQCAcbwAAOW8AKCOvQAA6TsAgE89AEBuvQCgXz0AgIQ8AIAdPADgGD0AQAM9AOAivQCgub0A4D49AADAPABAND0AgMM8AEA3PQAQDr4AwG69AIA8vABwhr0AgNs8AOBFvQAA5LsAAKW8AIDcPADA7LwAsJo9AMByPQAASrwAgJc8AAB+vACAFL0AgIC9AED+PAAAlrsAgNc8AACwvABg0r0AUKU9AMCMPABAXz0AQEM9AIBPPQCgYL0AgKy8AIAJPQCgjz0AAIO7AACcuwCApbwAAAC4AIACvQDAUr0AABe9AEB0vQAgDr0A4BC9AAAwOgAAILwAwBi9AID3PAAApbwAwH69AAC4uwCgF70AgMk8AOArvQBA1DwAIC+9AMDZvACAFjwAAH49AAAnPAAAnr0AwKQ8AOAOvQBgAD0AAPC7AGALPQBgPT0AQBw9ABDcPQDACz0AwPO8AAAlvQCAUDwAwKM8AJCXvQCAez0AQFe9AIAjvQCAVzwAwPO8ACAhPQBAP70AoHQ9AADquwDAlT0AwKw8ACApPQDgAD0AQPa8AECcPADwr70AAHI8AOBAvQCAjzwAwIw8AFCePQCAiDwAEM09AAA6uwAgQL0AgOy8AIDAvAAAg7wAADi6AMBsPQAANDsAwFC9AGC8vQAALz0AANG8AGBcvQDAuDwAwOE8AAAwOgCAWz0AcJg9AAAuvABA2zwAAIA7AIAgvADA0zwAQLk8AEC9vAAAnbsAgFm9AIBzvQBQgD0AgKg9AMCXvACgfT0AoFo9AKAKPQBA67wAwE69AADDPABgAz0AwAU9AAAEPACgm70AAFA6AKBgPQDA27wAgBA8AIBJPAAAsLkAAHA8AKAlPQBAjjwAwMk8AMCGPAAAMLsAwLu8AECpvQBgC70AAKc8AIBvPQAAtzsAALo7AICIPQAgIL0AIFc9AHClvQAAYz0AAAw8AMACvQAgIb0AsN69AAAbPABgo70AAB49AICSPACAxzwA8Jy9AMCDPAAAZb0AMOI9AECKPQAAsbwAgC48AGAEvQBAOr0AALw6AMD9PAAwyD0AAOs8ALCuvQCAL7wAQFE9AIApPQCgqr0AAHS7AIBlvAAAYTwAoGI9AKBEvQCALLwAgG69AIBuPAAAurwAMIu9AKAiPQCgo70AQBk9AABhPABgjT0AIJ+9AABIPAAAabwAAOo8AACZvABABz0AAIA8AAAWOwAAWrwAwD69AOAIPQDAVT0AwKS8AKBqPQAAEjsAgBQ9AADpuwAAojsAQAK9AMC3vACAzb0AQK08AACYugAATrsAQCa9AAB0PQBA67wAwH+9AABIPAAAALgAQBo+AGA3vQDAsDwAAAM9AOBxvQAQh70AgCI9ANC0PQCAcbwAgI+8AID5PACA/7wAAN+7AIBfPAAAEzwAABI7AMCpPADgQD0AYEk9AIBwPADAM70AAB+9AIAYvACAGLwAwJ68AEAJvQBwhj0=","chunkHash":"fbf998ce473692dea6c9548ce64dee13ffc3faced1d109fcd560df883bf91096"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\n    # Prepare sample IDs if specified\n    sample_ids = [args.sample_id] if args.sample_id is not None else None\n    \n    # Create dataloader\n    loader = get_mesh_dataloader_v2(\n        root_dir=args.root_dir,\n        class_csv_path=args.class_csv,\n        precomputed_dir=args.precomputed_dir,\n        sample_ids=sample_ids,\n        batch_size=args.batch_size,\n        return_type=args.return_type,\n        cache_dir=\"data/mesh_cache\",\n        num_workers=0,\n        debug=True\n    )\n    \n    print(f\"Dataset contains {len(loader.dataset)} samples\")\n    \n    # Process one batch and display information\n    for batch in loader:\n        print(\"\\nBatch contents:\")\n        for key, value in batch.items():\n            if isinstance(value, torch.Tensor):\n                print(f\"  {key}: {value.shape}\")\n            elif isinstance(value, dict):\n                print(f\"  {key}:\")\n                for sub_key, sub_value in value.items():\n                    print(f\"    {sub_key}: {sub_value}\")\n            else:\n                print(f\"  {key}: {value}\")\n        #...\n```","range":{"startLineNumber":585,"startColumn":0,"endLineNumber":615,"endColumn":0},"embedding":"AABtPQCAC70AkME9AAAMvQBAJb0AQDu9ACASvQAA4DoAwAO9AIAVPAAAWrsAAPk7AEC5PABgmr0AAGy7AICXPQAgJL0AgLW8AOAvvQBAJj0AsI89ALCFPQAgTz0AgHU8AIClvAAARzwAIAG9AABUPADgVz0AQI+9AOBzvQDA67wA4Fu9AAA8OwCwjb0AQOQ8AGB/PQDA2TwAgD08AKAOvQBAgT0A8Ka9AID9PADgET0AwDc9APCdvQCAMbwAYHG9ALCSPQCAsrwAAIE7ABC7PQDAyLwAABY7AABAuQAA5DwAgJO8AIC3vACAnbwA4Ki9AMBaPQAAtjsAAAe8AAD9PAAAET0AwBW9AIBQvAAAorsAQMe8AMCqvAAgOT0AAAi7AACQugAgwL0AwBU9ADCAvQDAWb0AYCc9AOCZvQAAAjwAANC6AGBJPQAAODwAgBO9ACARvQDARb0AQEy9AMA3vQAAADgA4IC9AADqOwDAhjwAEKG9AGBdPQBQmT0AAJA8AAA2uwBwkL0AAIA6AKAfPQDAFT0AAJc8AABAuwDAxbwAgF+8AMCCvQAAeLsAgHm8AECGvQCAXzwAABS9AMCbvABAjz0AwBY9AIBWPQAAUDwAsLI9AMDCPADge70AYBK9AKC6vQAAHbwAQMy8AJCnvQDAtbwAABI7AED9PACAG70AAGS8ACBdPQAAPzwAANg7AACWPACAor0AAOA7ABCKvQCA47wAAJm7AICoPADgZz0AYB+9AMAQPQCAPD0AwJQ9AOBYvQBAF70AwM+8AOCLPQDAnjwAAHQ7AABUvQCA9jwAAKY8AAC/vACACDwAgE68AADbuwAgej0AAHS7AADUvAAAsjsAANI7AMD6PADAnjwAAO27AMAUPQCAkb0AAIK9AIDLvQAQu70AkJA9AECevADgCD0AoJq9AIASvAAAnjsAAEC9AED/PAAA8bsAEOK9AIAdvACAdrwAAHc8AEDkvAAgFr0AsIq9AOBIPQAArDwAAJ+8AAAPPADgLT0AgCM9AACMOgDAN70AAGC6AIBuvQBAoD0AgLa8AGAMPQAATjwAAJy6AED4PACAKDwAALC8AAASPQAAH70AIC+9AAAQPAAAejsAIGG9AEDsPADAFz0AAEu8AABZPAAAX7wAAM88AAA9vQAAvT0AAOE7AEDePACAPTwAQJE9AIBTPACAMjwAwJS8AADouwCArrwAAE+9AGB7vQCAJz0AQDO9AMC2vQAAkzsAQPW8AIBTPAAA17sA4Gm9AOBLvQBAyLwAgOM8AABVvACA7TwAwNQ8AAAqOwCgXT0AAIE7AMDfvAAQpL0AwFQ9AAD0OwAQmT0AwJu8AGA0PQAw/r0AIAq9AAD8ugBAO70AgPw8AAD1uwAA1LsAQKW8ACBfPQBQnL0AAJ09AABgPQAA+bsAgBg9AADZuwCAyDwAIDO9AGAEPQAALTwA4AU9AIDCvADgzr0AgEA9AACluwDgbj0A4F89AIC3PAAA5rwAQDe9AABKPQBAYD0AwBo9AEBbvQAA/jsAQKc8AOBhvQCAmbwAACq7ACBXvQBAyLwAgPe8AIBNvAAAYLoAANw7AEClPAAAV7wAQBu9AIDLvABgfL0AgFg8AACyuwAA7DoAcJi9AADQvAAAxzwAIEM9AAA0uwAgoL0AANi7AMA7vQAA5DsAAE48AEDdPACARzwAAIA9AMDZPQAAHbwAADy9AECDvAAAVTwAQMM8AODLvQAA0rsAIEK9AOA7vQCAPjwAYD69AID9PABANr0AoFk9AACkOgBAiT0AAAU8AMBSPQBAKz0AwOS8AMCCPABwkL0AgCw8AACpvQAADbwAACu9AKBzPQDAtjwA4Lc9AGAIvQAAvLwAADU8AABQvABA5LwAwP28AAAxPAAA2rwAADI7AFDTvQDAlD0AQDK9AMDSvABgNz0AEKc9AADQPAAAszsAYKY9AACQuwBgXz0AgOo8AECGvAAgMT0AQBw9AMA2vQAA2LoAAGe9AIBxvQAgMz0A8I89AMCvvABgXz0A4B09AACVPAAAG70AoE29AACHOwBAND0AACC7AAD0OgBArr0AwLY8AMDlPAAgZL0AALe7AID2PAAAVTwAAGs8AEDDPACAHLwAoCo9AOAcPQDA0DwAAEy8AAAcvQCA27wAwL88AECOPQCAaTwAgIg8AIB9PQAAhDoAoBU9AIAuvQBAgDwAAD69AMCuvAAAlLwAwMu9ACB3PQCAxb0AQGs9AABAOQAAULsAoGe9AGAPPQAAc70AsLg9AGCIPQDAnbwAEIS9AICavADgxb0AgGC8AIAmPQAg6T0AAHi7AGAhvQBABb0AwKM8AGBCPQBAib0AAKK7AIA/vAAAirwAAAE9AEDSvAAAkLwAwEm9AADZOwAARLsA0J69AIB9PQAgcL0AIHg9AACYOwBgqz0AwJe9ACBmvQAA7bsAwLQ8AECmvAAAVj0AgBE8AAAkPABgBL0AAFK7AAAyOwAA6jwAAO68AICfPQAAiDsA4DQ9AAAsPAAA3LwAQLY8AEAVvQBw070AgAQ9ACAVvQAAqDoAgAW8ACBEPQDAAD0AsOq9AOARPQDAtzwA6Bc+AIBrvAAASTwAgHY9AGAYvQDAtL0AgMQ8AHCTPQAAQrwAALK8AACFPAAAZL0AAB67AEADPQAAhTwAgEO8AIAAPAAgLz0AkJM9AACSPADAXb0A4CO9AAD+vAAAqDwAAIq8AABVvQCwrT0=","chunkHash":"8cefbb7ba5db787ee53f4f0ebc1df3d980d6fb74e9eef5d089f5aa3888a6c295"},{"text":"File: `dataloader/mesh_dataloader.py`\n```python\n#...\n        print(\"\\nSample IDs:\", batch['metadata']['sample_id'])\n        \n        break  # Only process one batch \n```","range":{"startLineNumber":616,"startColumn":0,"endLineNumber":619,"endColumn":0},"embedding":"ACCGPQAgar0A4K89AIBSvACA9LwAcJi9AOAwvQAAybsA4I69AKAIvQAAQjsAQKC8AADEvABgkb0AAHm8ACCwPQDA/7wAIDA9AEBJvQDgPz0AEJQ9ANC+PQBAhzwAAKQ6AECsPACA2DwAICO9AAD2uwBAUT0AALc8AOARvQDA0rwAIBm9AICjPAAgjb0AoC49AAAivADA5jwAQLy8AED4vADAcz0AgIG9AIA9PQBA6DwAoAg9AABGPACAuzwA4He9AACyPQAA1rsAAGC8AEDJPQCAlbwAAEc8AIAoPACA9TwAgDe8AICivAAAaTwAsKm9AKCJPQAAvrwAgPw8AIAZPQDgAz0AAMM7AADPvAAArLoAgEE8AIAnvACAejwAACK7AGAGvQCwr70AgF88AGCOvQBAQb0AgL48AOCkvQDAn7wAAIK7AGA9PQAAfbwA4A29AEC8vACAPbwAYLi9AIA/vQAA0rsAgMC8AABCuwAAVLsAMOe9AKAZPQDAdz0AQAk9AECQvAAgv70AANg6AIBHPQCAirwAAM48AABguwAgAL0AwIm9AMCgvQAAKrwAAJA8AKAnvQAAuLsA4DC9AIB4vQCgKD0AYEs9AABiPQAAjTsAAE49AKBaPQCgI70AQIC8ALD/vQDACj0AQJC9ADCMvQCwvr0AQIa8AOBUPQAgNr0AALC6AID3PACAFD0AgEq8AADbOwAgsb0AQJI8APDEvQCAaTwAAGm8AIAgPQCARz0AwAu9AKAmPQCA7zwAQDo9AAAtPAAAJr0AwKa9AEDAPQBAWz0AgPk8AAAIvQAAnTwAgDA8AGAJvQCAET0AQA69AECkPACAWD0AwLK8AAB4PQAAxrsAAFC8ACCkPQAgMT0AgBu8AIDHPACAurwA4Bu9AMCKvQAgDb0AUJs9AAAivQAASLoAgN29AMAAvQAAmzwAAMW8AIB2vADgFr0AsKy9ACAFPQAAgzwAAAO8AABguwCAT7wAIIy9AIDLPAAAyzwAgLu8AIAQPQBAqDwAwDg9AABougAAmbwAIC09AMB3vQCgYT0AwBu9AADhOwDAz7wAICm9AEDZPABAoTwAwLM8AAA+PABggr0AwEm9AMD9vAAAi7sAQHa9AEDJPADA6DwAAAu9AADIvAAADrwAgAC8AEDIvADgmj0AwOw8AEDDPACAqTwAwOU8AABcvADAvTwAgAG8AICYvAAAKT0AQFO9APCEvQAAFDwAQMW8AKBQvQAgRT0AANK7AAAUPQCAqjwAcKS9ADCAvQCA8bwAgFa8AMAHvQCATTwAAO27AIBuPAAA7jwAAJW7AAAUuwCAMb0AAAw7AMCoPACAuTwAgG88ACAKPQCw/b0AwO28AADGPADgHL0AQDo9AAAJvAAA4LsAALQ6AIByPQBgab0AkJ49AADYugDAzLwAMJs9AADIOwCgRz0AAIq9AKCCvQAAajsAgHY8AKBHvQAgbL0AoCI9AICIPAAAkTwAwBM9AEC7vACAFL0AgGW8AACAPQCAXzwAIEQ9AMB/vQCAobwAAJQ7AABEOwDAC70A4Ba9AICGvADAqbwAIE+9AADwOgAAODwAgI88AKAcPQAAArwAwEm9ACA5vQBgE70AQCw9AAAHvQDA/LwAMIe9AACHvQAAILsAkIA9AECwPABQjb0AAA28AIA1vQCAITwAQDc9AABIvAAAcbwAQGI9ACCxPQAAfrsAgDi9AOBPvQAAKbwAYCY9AOCwvQCAILwAwEq9ABCBvQBgJj0AAKK7AMDCPAAAwrwAgLc8AKAqPQAgST0AAFU8AKBWPQDASj0AgJO8AECTPAAARb0AAMS7AACdvAAAITwAAOm8AAB/PAAA0zwAAKk9AIA7vQBASL0AAKC5AMCqvADAhrwAgAe8AEC4vACAe7wAADy7AIDGvQCA2DwAADe9AGAOvQAgQz0AUJM9AEA5PQAACT0AgCw8AICmvABAmrwAgAe9AEAqPQDgUz0AAHu8AIAwvAAARLsAwAa9AGAGvQAAkTsAENg9AADoOgAgdz0AwPQ8AGAZPQBAybwAgEe9AMC1vADAnj0AwIq8AIBcPACA1r0AADS7AMAhPQCgIL0AwPU8AICJvADgGj0AgHO8AIA1PABAjzwAAGM8AMDTPACgBL0AgM68AECYvAAA/LsAAKU7ACB2PQCAtrwAgK48AMDlPQDAhDwAgCI9ACBnvQAAwDkAgD28AGAuvQAA9TsAwN29AKBBPQBAv70AYEI9AAArvQAALbwAIAS9AMBhPQCgeb0AcOw9ACBUPQCgGL0AAEi8AADDuwCwur0AAKC7ACAhPQDAgz0AAHM8AAC7vAAACb0AoAQ9AIBHPABQ9b0AgL68AKBdvQBADD0AgGo9AKBkvQDAyrwA4IS9AEDIPABAmTwAwI+9AOAkPQCwr70AwOE8AAB6uwAgWD0AoGC9AIDFvAAAOb0AgAc9AICFvAAgID0AAHC6ACBsPQCAcDwAwAe9AGAsPQCATzwAIAi9AFClPQAA+DsA4D49AAD7OwCAVbwAQM88AAATvQBAxb0AAJ07AMDPPADAvbwAAPC5AMAGPQCA/TwAYM69AKBlPQBAn7wAkCw+AIAgvAAAujwAAFE8AAABvQAAsL0AwBk9ACDBPQBAhLwAMIq9AAAaPABAlbwAoA+9AOBZPQAA0DoAgBy9AMCEPADQkD0AAHI9AAAOOwAAR70AoF+9AMCpvABApzwAAHg6AIBSPABwhj0=","chunkHash":"a98a17fb4c07c372a22c06f3207ae782d1d4e7fa8f15ab0737d738788f93f8e0"}]},"file:///teamspace/studios/this_studio/.vscode-server/cli/servers/Stable-848b80aeb52026648a8ff9f7c45a9b0a80641e2e/log.txt":{"hash":"6ea872403755eec08d307814003397daac50a99caae3250c18bcaa45259d59f5","entries":[{"text":"File: `...scode-server/cli/servers/Stable-848b80aeb52026648a8ff9f7c45a9b0a80641e2e/log.txt`\n```text\n*\n* Visual Studio Code Server\n*\n* By using the software, you agree to\n* the Visual Studio Code Server License Terms (https://aka.ms/vscode-server-license) and\n* the Microsoft Privacy Statement (https://privacy.microsoft.com/en-US/privacystatement).\n*\nServer bound to /tmp/code-3a6af830-c537-468b-ac83-31cf9943feb0\nExtension host agent listening on /tmp/code-3a6af830-c537-468b-ac83-31cf9943feb0\n\n[10:01:59] \n\n\n\n\n[10:01:59] Extension host agent started.\n[10:02:00] [<unknown>][3873c023][ExtensionHostConnection] New connection established.\n[10:02:00] [<unknown>][25f88d0a][ManagementConnection] New connection established.\n...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":18,"endColumn":0},"embedding":"AMBHvQAARzwA8OI9AOBfvQAAGDsAAMk7AAA+OwBA5LwAQA29ACCOvQAgOD0AoBA9AAAUuwAAzr0AAAi8ANCBPQCA3rwAwC89AIBkvQBAMj0AQH49AMAUvQDgbT0AwJE8AAATvAAA+DwA0Ji9AAA4PQBA/bwAIBi9AIBWvACARL0A4BA9AOAvPQBAnzwAwNw9AGBdPQBgRb0AgPM8AIDfvABAPb0AYKW9AAC4PAAAYjsAAP+8AEC/vABAt70AwEM9AAA0PQAAELsAAMm8AJDYvQCAljwAgLU8AICHvACAhbwAAJ88ADCGPQCATzwAgCe9AABoPQDgCj0AgAO8AAA5PQCATz0AAFg8AEAEvQDQiT0AgPq8AABLPQAADbwAAH88ACAevQCgiL0AAIS7AIAzvADAGb0AAI48AIBxvAAAbr0AAKC6AJCCPQDANL0AACc8AACTvAAAwDsA8KS9AABsvAAA/bsAIGc9AGAFvQDgcj0AQIA8AAB0uwCgDD4AQJw8AOAEvQAArrsAQEG9AAAvvADATj0AYGO9AADvvACgPL0AAOs8AMA6PQAwvT0AAIa8ACAgvQDA87wAwLu9AICqvACgE70AYBy9AKAnPQBAWL0A4Bs9AEArvQDA7TwAAHI7AACkvABAcz0AACY7AMD0PACAJT0AwBA9AEAevQAAOrwA4FI9AOACvQBgRD0AADi9ABCXPQDAKr0AgIo8AIAyPAAgd70AAEK7AKBZvQCA1j0AgEM8AICRvQAAdrwAwBA9AMDYvABACD0AcLS9AAABPAAwu70AALi8AIDmvACgND0AgEy8AIDsPAAAJDwAwC29AAANPQAAADsAwH29AACuuwAAvrwAoIU9AECYPACADDwAwJs8AGAivQAw1D0AgAA8AKAOvQDwgr0AIIM9AAB4vQDAlTwAAOI8AFCLPQDAz7wAgB48AADMvAAArDoAAAe9AIBEvADA/LwAgFQ8AEDQPAAgc70AQFq9AABaPQAAbz0AQN08AACUPACgB70AADO9AOAaPQAghj0AgAU9ALCdvQCAsjwAYEK9AIAaPAAABLsAAPA5AAD6uwAAyzwAAAA6AEAzvQBgeL0AIAY9AACAuQAAqLwAAFc8AKABPQAAczwAAPu7AABzvACw7L0AgPK8AIAcPAAAYjwAAK+8ABCNvQDA+7wAwBY9AED6PACAe7wA4Ho9AAD3PACwnz0AAGe9APC1PQDA3DwAwNi8AIBhvQAATb0AoFe9AIAIPQAAMbwAYDW9AAAhPQDAQD0AALe7AADauwBgFb0AQJc9AIBoPACAHz0AQLC8AMD/vAAghb0AAAA5AFCEPQAAsLkAgMI8AMClvAAgJr0AgPE8AMCkvADQuL0AgHi8AEBDPQAwob0AgGy8ACBSvQCg0L0AYDu9AMCPPABAurwAQA4+AID6vADgXr0AgDK8APCPPQCgbb0A4Nk9AKB0vQCgGr0AACK9AMCXvABglj0AAFo7AACZPADgEb0AgP28AMAEvQAgmj0AYHW9AMCuPABgsb0AALC5AAA9PAAAdDsAAOA8AND4PQCAErwAYAa9AAAlPADgJj0AALM7AKCLPQAAybsA4A89AACyPADAnDwAAEE8AABSvAAAoLkAQJA8ANCEPQCAerwAICc9AKCLvQCAOL0AYA+9AIBCvQAAhTsAQEE9AOADvQBglT0AAM27AEAQPQAAI7wAwMI8AADNvQCgFD0AoCI9AAAgvQBADz0AADY9AEAGPQBAPz0AsMU9AEAEPQCAdr0AwI08AIBGPABwrT0AAJG8AGCevQAghT0AQKY8AABJPQAAAL0AAAM8AAB5vQBAhTwAADu8AOBLPQDgOL0AgDq8AADmPAAA0LsAgC+8AAASvQCAArwAAC69AIDFPAAAFzwAAEs8AADKvAAAGL0AAPy6AAARvADgdD0AAMs8AEDQvAAAEDsAgDU9AMByvQAAYLkAQBc9AABmvAAAnz0AAMw8AEBAvQAgO70AwIm8AABYOwAAvDwAwE89AABMuwAgkz0AIEo9AKAUPQBAFT0AANY8AEB3PQCApzwAkJ69AEDFPQBA/LwAQM08AECYPQBAgbwAgDm8AADzvAAAPrwAoD09AIB6vABA2bwAgHg8AAAAugBAqDwAgP+8AMAsvQDgPj0AANC5AIDEvAAAqDsAADw8AACHOwAA6LwAQFM9AACnvACAnrwAIAW9AECLPADA0LwAAIu8AAAqvADAFD0AwJU9AADIugBAzbwAYC+9AADguQAA47sAALI7AID0PACAurwAQMU9AMAyvQCADj0AAGY7AAA+PACA/TwAAMS6AGCyvQAAfbwAQLu8AAAdvACADjwAkK29AICbvAAg370AgOQ8AADEuwAgi70AQMS8AGAivQDAAT0AoLs9AAA4ugBAybwAwE+9AMDSPADgS70A4EW9AADouwCAcTwAYAw9AIDoPACggb0AAOM8ANC9vQCgPj0A4AS9AKBWvQAAoDsAAKA5AGAJvQDAHb0AMJQ9AAB2OwAAJ7wAQPC8AACqvACAbL0AILM9AAC/vAAArTsAAEW8AAC8PAAAf7wAgJM8AADNuwDgAb0A0Ok9AIDVvAAAdT0AgIO8AOCmPQAAcLsAgEs8AABYOgCAm7wAAPw8AAC4OwCQmb0AQGO9AHCtvQAAybsAwLK8AIBIvAAAqL0AgHw8AIBYPAAA27sAYBA9AIAJvABgCT0AQDq9AOCCPQAQoz0=","chunkHash":"dcae287558175924a3b51259bf9ba4a8182f10d50d6263dd885cf569dca27b37"},{"text":"File: `...scode-server/cli/servers/Stable-848b80aeb52026648a8ff9f7c45a9b0a80641e2e/log.txt`\n```text\n...\n[10:02:00] [<unknown>][3873c023][ExtensionHostConnection] <10761> Launched Extension Host Process.\n[10:02:00] ComputeTargetPlatform: linux-x64\n[10:02:05] ComputeTargetPlatform: linux-x64\nNew EH opened, aborting shutdown\n[10:06:59] New EH opened, aborting shutdown\n\n```","range":{"startLineNumber":18,"startColumn":0,"endLineNumber":23,"endColumn":0},"embedding":"AAAUvQAAtzwAIPk9AGBAvQBgS70AgGg8AKAivQAQoz0AYCG9AGBdvQDARz0AAKg7AMBLvQAAD70AgJG8AGC3PQDgFr0AQGs9AMC6vABA3T0AwMk9AGAKvQDAFT0AAEq8AAA8PAAAbz0AoBq9AADbuwCA9jwAAGW9AMDSPAAAGL0A4Cg9AIAQPAAA5bsAwPo8AMDLvACARb0AwL48AIC1PAAA2bsAwNq9AADTvADAj7wAUI29AEAbvQDQhr0AAPc7ACDOPQAAlrsAQP48AIBdvQDA8zwAQGk9AID/vABALb0AgIc9AGA8PQAArLsAwDC9AEBYPQCgKz0AAPY8AAAYOgAA4DwAYCO9AICuvACA/jwAANe7AIClPACgmL0AgDi8ACBAvQDAOL0AwAA9AMAOvQCAy7wAAOS8AMDUPADAwbwAABO8AEAcPQBgc70AAKM7AMBFPQAAST0AYBC+AICsvACA8rwAAM87AMCjvAAggT0AAGg9AIBIvQDAgT0AQO68AIAXPAAA4bwAAJG8AMDVPAAgCz0AAD69AIDwvABwm70AwKA8AAA+PAAg0z0AAEc8AAAzvABA2zwAoDa9AOADvQCgcr0AAOQ7AAA2uwBgKL0AwIs9AEDJvAAAxTsAAIg8AIBqvABgkD0AADK9AMCpPAAAEbwAgG68AACNvAAAYDoAoFU9AKABvQAASTwAQNW8AECqPABAKL0AgGY9AEDePACAc7wA4As9AACOOwBQkD0AwBK9AADgvADAIj0AAJQ7ADC6vQBgdj0AEIW9AAAUvACAqb0AABK7AAAIvAAAKbwAAMK7AEDVPABgTj0AgCa9AADguQBART0AwD29AAAtvAAAEb0AoH09AIBuPABgJj0AgN+8AAD6OwA4Cj4AACg6APCuvQBws70AgGI8AAB5vQDAGj0AAMA5AADfuwAAijwAQIs8AMDTvADAnbwAgGq8AIABvADAhjwAQOA8AACcPAAAy70AQFC9AMDQPACALTwAABU8AACgvABAc70AAO67AECnPACgJz0AYCA9ACBFvQAAKj0AANi8AOAsPQDAn7wAQE69AIDSvADgBj0AwBu9AECfvAAAybsAAKm7AAAhPADAWL0AQAi9AEBQPQAAW7wAgCQ8AACFOwAAUr0AQPm8AABGvAAAULoAAJg7AOBYvQAA+rsA4Dg9AIBzPACAf7wAEJA9ACAQPQDgeD0AoIG9AABjPQAApz0AIAO9AEACvQBACL0AAKW8AIBSPAAAGLsAYJq9AAAJPAAABTwAgBG9AIDWvACA3LwAcIo9AIDRvAAA8zwAwMq8AIApPABAzr0AoCe9AOCePQAAhrwAQJo8AADpPADAAL0AALk8AGCLvQBA8LwAwP68AIAwvADAG70AgGy9AMBFvQBwi70AYA69AABUOwDAubwAULo9AGAxvQBglb0AAN+8AOA+PQAAkDkAAG89AABWvACA7rwAAKy8AADqOwCAKT0AQIG8AIBhvAAgL70AgPO8AGBbvQCgCD0AAEC8AABoPADAQr0AgMI8AACvPAAAEDwAwLo8AEA7PQCArbwAgEa9AAB0PAAAqTsAAGq7AOBQPQBAGr0AAPa7AECsPABAjTwAwKg8AMAjvQAA9jsAgGi8ADCuPQAAcjwAAHa7AEDRPADAR70AsKG9AADougAAQT0AwMo8AEBkvQAAajwAgME8AACCPABgDb0AAE09ADAOvgAAmjwAAJQ6AIB2vABgTD0AUKQ9AEAnPQAA/jwAgM08AACYOwBgNL0AAE47AIAgvACgwT0AAJy7AOB8vQCwtD0AYDc9AADIOgAAXrsAAGw7AIDAvAAAATwAAIm7AEDJvAAAkDsAAFy7AICAPQCAJz0AEJu9AACOuwCgYL0AgDm9AACtPAAAzLoAAJM9ACAKvQAAxTwAAJM9AEAzPQCgPD0AACa7AIAxvACAhj0AAB49ACCJvQAA+rsAAFo9AIChvABA2D0AABi7AIAFPADAurwA4H69AADQuwCABr0AQOg8AMD4PADgwj0A8IQ9AAC6PAAAMbwAgC08ACAYvQDAFz0A8MG9ALDAPQDAgb0AAPk7AAD0PQAAhDoAgBM8AADsugAAorsAAF88AECpvACAtjwAAN67AACAvAAATDsA8Ie9AIDwvAAAdrsAIC49AIDAvABA5jwAwCA9AACMugBgYL0AAH49AABZvADAHD0AYJa9AEAlPQDAmb0A4ES9AECAvAAAILwAQFg9AEBzvQCA87wAUKe9AAC4PAAAsbwAAA67AAA6PACAj70AsP89AKA1vQCgGT0AQKG8AACiuwAAJz0AgNE8AAB9vQDAsb0AgCO8AACvvABA+jwAEKi9AICgPACAtLwAAKA7AAB3vQAQob0AAO28AAAsvQAAFzwA8Jw9AAD6OwDAJL0AYCC9AAC8OgAAUr0AcIW9AKApPQAAKLwAQN08AGBbPQAAHrsAABO8AIAhvQAAKT0AoE+9AEDYvAAAkDkAgPU8AAA7vABA1rwAoCc9AECsvACADjwAwAa9AIAovQCA9bwA8IA9AACWOwAA/DwAwNk8AACvPAAA5LwAgGI8AADTOwAAvTsA0Ns9ALCLvQDAcD0AgPe8AHgFPgCAFT0AAGI8AECkvACAs7wAAIC8AIB3PABAXb0AALi9ACB1vQAAFjsAwLO8AAACvADQz70AAJe8AAAzPQAADDsAYDE9AAAUvQAAc7wAcOG9ANDPPQBALT0=","chunkHash":"2283c262c683ae83934c571f8d12e8d8e4c5d0678192cde84561aa23430ace6e"}]},"file:///teamspace/studios/this_studio/MorphoFeatures/morphofeatures/shape/network/deepgcn.py":{"hash":"de56eb36c8efcf96a4a73a180faab2e81f032ad4839db9500b12cbe7c8e79a92","entries":[{"text":"File: `MorphoFeatures/morphofeatures/shape/network/deepgcn.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        super().__init__()\n        c_growth = channels\n        self.n_blocks = n_blocks\n\n        self.knn = DilatedKnnGraph(k, 1, stochastic, epsilon)\n        self.head = GraphConv2d(\n            in_channels, channels, conv, act, norm, bias=False\n        )\n\n        if use_dilation:\n            self.backbone = Seq(\n                #...\n```","range":{"startLineNumber":30,"startColumn":0,"endLineNumber":41,"endColumn":0},"embedding":"AAACOwDAJr0AABM9AACPOwAA3TsAAKS7AADnOwBgNj0AwNC9AACtPAAAFDwAANI7AACUOgAAFL0AwJk9AADyOwAAZLsAwOo8AABIPAAA4TwAgME8AMACPQCgCz0AoEe9AABAugCAD7wAAOQ7AIB5PAAAeD0AgGa8AEA8PQAAnbsA0Ly9AOAjvQCAk70AAKQ6AAD5vAAgoD0AIFS9ACC/PQAAVD0AcAy+ACB0vQAAwzwAgF68AKAevQAAMLsAwOA8AEBAPQCAaj0AYEq9AMBAPQAAJrwAAGk8AMBwvQBAXz0AYGE9AMDGvACgM70AYFM9AAAkOwDgj70AACq8AMDovAAAHLwAAEo7ACCVvQCATjwAgFG8AAAgvABAbr0AAAy7AAAAvQCAXr0AAIA7AAB4OgCgdb0AwD49AABgOgBALL0AgCw9AACEOgCgG70AgBG8AOAtvQDAzr0AEJy9AGBRvQBgbr0AAMC7APCbPQCAkTwAAFe9AIDRPAAAmzsAQGY9AJCgPQAAr7wA4C89AACVuwAAFjwAIGY9AGAzvQAALD0AgIy8AMD3vAAAg70AAK27AADPuwAQjz0AAPG8AAByuwBARD0AAJQ8AJCAPQBQqL0AgHO8AACgOwBABr0AIAE9AIBovQAA7rwAAA88AEA2vQAAdDsAQP48AED1PADA1jwAoIG9AECkvAAAzLsAgA08AACwOQCgEr0AUIm9AIBRvQBQhL0AAMQ9AMCnPACgJL0AAG28AAA7PQCwgD0AABi6ACCevQBQ2j0AEK+9ALCQPQCQ1L0AgOA8AMCJvADAFD0AwOY8AMBxvQCwo70AwFu9ACBzvQAgKj0AgAU9AABpvADA5zwAAGM8AIDtPADAnz0AAGq7AFCUPQAADb4AgCY9AGBHvQBASb0AwAQ9AEDQvAAAhrwAAPI8AAC9uwAAwrsAYEy9APDEvQCAXL0AsJi9AMCIvABANj0A4Cq9AIAtPABAX70AQPY8AMBvPQCAhzwAgDA9AACougBAnLwAAFk9AACDPACA4bwAIG49AODRvQCAqj0AADC9AABdvACAR7wAgBW8AABtPAAAqbwAwOS8AEAVPQBA0r0AAJg6AMAevQBAX70AgNI8AIAdPAAAdLwAgM08AMDnPAAgXL0AgNQ8AAC5vAAAfLwAgJK8AKBmPQBgbj0AQMe8AICCPADAhDwAYDM9AOAFvQCAGrwAIL+9AAAqvADgJb0AQKo8AABuuwAAjLoAAOW7AFCMvQDgG70AgJ48AACsvAAAdzwAQNo8AMDnvADgHD0AQM+8AKAcPQAAIz0A4Bk9AEBovQDgTL0AAFa7AEDnPAAA7zsAAJU9AACguQDQmL0AAEw7AABhPABAjTwAAFa9AACAvQCwhr0AYJA9AAC4PACAabwAgOm8AADquwBgPb0A4Aq9AABAuQAAhTsAwMe8AAA5PADQmL0AEJ89AIAevQBgRr0AgIM8ANCYvQAgaT0AYDQ9APCGvQBgIb0AAPc8AOCEPQAAgDwAIBC9AADJPABAMr0AwMg8AIA+vQCger0AoKE9AECyvAAAlDoAwNc8AAAZvABAkL0A4DW9AKDQPQBgbj0AIJa9AAAaPAAAsDsAALq7AECAvACwir0AUJE9AADyPACgBT0AcJI9AADjvACAabwAQK28AGB3PQAAljwAYCq9AIAcPQCgEz0AQFK9ALCAPQCAlbwAoDW9AMBrvQCAwDwAwN68AECHvABgOD0AIEw9AMCHPAAAs7sAwIW8AABtPQBAhLwAAKk8AIDFPADAm7wAAJc7AIBJPADgMz0AIAe9AIBNPABgsr0AwL48AEAyPQAAODoAQA09AFD4PQCAJDwAgMA8AFDPPQAAEz0AQKu8AAASvQAAMDwAoE49ACBHPQBAq7wAAMA5ACADPQDQjT0AoEo9AOCMvQAAKbwAgFQ9AKAGvQDAlLwAAM87AOB3vQAgAz0AACa8AMAkPQDgDr0A4Ds9AIBgvQAACLwAgGq9AEBKvQAAKz0AQEo9AAAUvQAAwbsAICI9AMAdvQCAUzwAgBq9AABAvAAARb0AwC89AEDdvADQv70AABU9AAAsvADglL0AALs8AACOOwAAyTsAQDC9AOCnPQAAIDoA4D49AHDGPQDgJL0AoF+9AAAUPAAATbwAQDE9AMCHPQAQ1j0A4BA9AADxOwBAkzwAIBA9AFCPvQAAeLsAoFu9AMCHvABAb70AQEu9AAAAPQCAITwAYG49AAC5PABA9zwAoD29AIAxvQAAvrsAwI48AACDuwAAHjsAoC89AACXvACAXjwAgLE8AAAwuwAA0LkAAKi8AADiOwCAo7wAADk9AAAEvACA0bwAwOK8AADIPAAAjb0AAO28AABwuwCA7jwAAI28AEDwvABA+bwAoCa9AAABvABAML0AAHY8AADQuwAA+zsAYBe9ABAXPgDAoj0AwH89AJCNvQDgqj0A4HO9AKBGvQAAwDkAoEW9AECcPAAAJDwAwNe8AMDaPACgCr0AYCA9AADKPAAAnbwAgEw8AIDEPACAn7wAwJE9AADaOwCAQTwAACo7AKAEPQAAFj0AAFa8AECHvACgNT0A0Nc9ACBBvQDAv7wAQOQ8AOBhPQAAlzsAAF48AEAJPQCAfrwAYCE9ACBJvQAAub0AICG9AAAIuwBAh7wAsIo9AABPvACACrwAQMq8AADuOwBA+bwAAPE7AAA4ugBgH70AgGu8AGABvQAAwj0=","chunkHash":"192c798bc97394b9b112c9448bd7d6893e9f1b2470af40c369bef8c8046c5fae"},{"text":"File: `MorphoFeatures/morphofeatures/shape/network/deepgcn.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n                *[ResDynBlock2d(channels, k, i+1, conv, act, norm, bias, stochastic, epsilon, knn)\n                  for i in range(self.n_blocks - 1)]\n            )\n        else:\n            self.backbone = Seq(\n                *[ResDynBlock2d(channels, k, 1, conv, act, norm, bias, stochastic, epsilon, knn)\n                  #...\n```","range":{"startLineNumber":41,"startColumn":0,"endLineNumber":47,"endColumn":0},"embedding":"AAAbPADgLb0AwOk8AACCuwAAajwAANW7AACgOwAgFD0AEOS9AMCsPACATTwAAC47AACEugAA37wAIIw9AIBZPAAArzsAQKc8AAAePACAvzwAALY8AECVPAAgAD0AgDy9AACUugAAQLkAAIY7AECvPAAASz0AAMi8AEBPPQAA8LsAgJ+9AGAgvQBwm70AAJ47AIC6vABgnj0AoES9AJC6PQAwhT0A2Ae+AABvvQCA9TwAAB+8AMAQvQAAyLoAgKA8AKA3PQDgUj0AoA29AKBXPQAAYbwAAMU8AACFvQBAQT0AADk9AMCxvAAAbL0AAHk9AABIOwAgZ70AAMa8AEDrvACAcLwAAO07ADC/vQAALDwAAKW8AIAIvADQhb0AAOQ6AICmvAAgSL0AAJC6AABSOwBgUb0AQHY9AADNOwBgE70AoDY9AABDPACABr0AgDW8AOBFvQBQxb0A4Ly9AOBTvQDgUr0AgFG8AHCJPQAAczwAoJ+9AIDdPAAApTwAoGM9AIBsPQDAvbwAwEs9AADwuwAA2zsAgCw9AMAyvQBA7jwAALK7AEAivQBger0AANy7AICovACwgT0AgLW8AADouwAgTj0AAFs8ALCEPQDwnr0AgEu8AIBZPABAFr0AAAw9AMBYvQDAJb0AAOg6AGBOvQAAorsAgJA8AMDaPACAbzwAQJy9AIDCvAAAgzsAQIg8AAAAugDgH70AQIy9AIBcvQCQi70AQLk9AEDMPADAU70AAD+8AKBEPQBAST0AAEq8AHCgvQDIAD4AUKq9AOCQPQBAwL0AgNw8AABEvABgPj0AwAA9AIBSvQBAnr0AAFu9AIByvQDAPj0AwC89AICnvAAAwzwAgJ88AAD6PAAAoz0AABC7AABvPQAACb4AwDs9AMBFvQBAUb0AwBY9AICdvAAA0rwAAAM9AAAoOgDAg7wAIF69ADDMvQAgW70AcJi9AADduwBAJj0AoC+9AIBXPAAgPr0AoCE9ANCIPQAAIDwA4EQ9AAAKOwAAVLwA8Is9AECwPAAAp7wAIH89AAC7vQAwjT0AoBW9AADnuwCA47wAwLG8AADsOwBAEL0AgPO8AOAKPQDAub0AAMi7AIDpvAAgRb0AAM88AADIOwAAL7wAwPE8AIDVPAAAVb0AAFc8AIDevACAhrwAQPC8ACBVPQDAkj0AwK+8AMCdPAAAxTwAABc9AIAVvQCAQ7wAkLW9AACQugCAQb0AAH48AAAguQAAjzsAAHW8AIBgvQBAIr0AAHU8AAClvAAAYjwAAPg8AECyvADAKT0AQAO9AOA2PQCgFT0AwMA8AIBcvQCgIr0AAMg7AOAOPQCATTwAQKE9AACTOwDwjL0AAIC5AABwPADAljwAQEW9AJCCvQBQiL0AAEY9AEDyPACANLwAgHO8AIBIvAAAar0AALq8AAAzPAAAhjsAYAq9AABMPABgmb0AsJ49AOAmvQDgVL0AgMM8AGCUvQCAVD0AAEI9AOBBvQAA4bwAQLs8ABCKPQCAnjwAQDG9AAB+PACgcb0AwEI9AABCvQDgiL0AcKA9AADDuwAAL7wAgOY8AABmvABQhb0AQEy9AFC3PQBAlj0AMKC9AMCHPAAAj7sAAMg7AAB+vABAbb0AAFg9AAARPQCABT0AQJw9AADUvACApbwAIAK9AEBzPQAAajsAAB29AIBzPACgFD0AgG29ACCWPQCAfbwAgHm9ACB7vQAA1zwAgIO8AAAfvACgRz0AQDA9AACGPAAATrsAAOq7AIBZPQCAubwAgKA8AEACPQDAobwAgD68AADcugAAVz0AYEa9AIBGPAAQub0AgAQ9AOA7PQAAzDsAwOA8AID7PQAAqjsAAM88AEC2PQBApTwAwIG8AEApvQAAWLoAIA09AOBGPQAAAb0AAJW7AGA3PQCgfz0AIEA9AMCHvQAAlDoAAHI9AMDQvACAGrwAADA8AIBXvQAA4zwAAJu7AAAlPQDgEb0AQC89AECUvQAADrsAoHW9AEA6vQDgaj0AoGs9AKAGvQAA3bsAIC49AGABvQAA3DwA4Ge9AADmuwCgNL0AgAY9AIAivQDgxL0AYBg9AIBhvABAlL0AwOQ8AABgOwCAMjwA4D29AKCUPQAACjsAoDI9AEC5PQBgFL0AYFa9AIBsPABAmrwAoCs9AGBlPQBAyD0AwP88AACyOwAAMjwA4BU9AACbvQAA2bsAgD+9AIAavACAkr0AIEO9AAC2PAAASjwAgJQ9AIDkPAAAzzwAgEy9AKAfvQAAgjsAgMI8AADzuwAAsrsAADE9AECFvACALjwAALg8AABAuQAAODoAAIy8AABGPADA37wAQDY9AACSuwAA7LwAAF68AEDFPADQi70AAK68AICCvAAAqDwAgJK8AOAFvQCAlrwAQAa9AACPuwCAMb0AAD08AADMOgCAiDwAoDm9AAggPgDAsj0AQE49AGBtvQBQvz0AAHi9AEBTvQAA9DoA4G29AIA3PAAARzwAwOC8AEAjPQBAF70AQBQ9AMDkPAAAVLsAAM07AMDAPADAh7wAgIw9AAA4OwAAbDsAAFo8AADEPACgBj0AgHq8AECtvAAgET0AkOo9AAA2vQAAyrwAgKk8AOBJPQAA3zsAADk8AMDtPACAfbwAgCc9AMBrvQAwpb0AgFO9AIBlvAAAsLwAEI89AADwuwCASbwAQMm8AAAQPAAA7rwAAIE8AACbOwAgAb0AgCu8AMD8vAAQvz0=","chunkHash":"e9caee256929e643e21132a10b8b0adf6ee7063cf8277e81dbe4aec0ec601f90"},{"text":"File: `MorphoFeatures/morphofeatures/shape/network/deepgcn.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n                  for _ in range(self.n_blocks - 1)]\n            )\n        fusion_dims = int(channels + c_growth * (self.n_blocks - 1))\n\n        self.fusion_block = BasicConv(\n            [fusion_dims, emb_dims], 'leakyrelu', norm, bias=False\n        )\n        # 2-layer MLP as per paper\n        self.prediction = Seq(\n            #...\n```","range":{"startLineNumber":47,"startColumn":0,"endLineNumber":56,"endColumn":0},"embedding":"AADgOgAANb0AQM08AAD4uwAAgDwAAPS7AADGOwAgTD0A0M+9AIC4PAAAyLsAgLG8AACgOwDAybwAAFo9AAB1PAAAyzsAQMo8AACSOwDAxTwAAE47AAB8PABA3jwAoFm9AAAqOwDAkbwAALo7AIDTPAAgRz0AgGG8AMBYPQAA/LoAgLS9AOA/vQDQqb0AAIA4AECDvACAtD0AwF29ABDOPQAAND0AWBe+ANCOvQCA7zwAAAa8AEAGvQAAgDkAgJE8AKAoPQCAcj0AICC9AMAsPQAAmrwAQCg9AMCNvQBATT0AgGQ9AMDjvADAQ70AwFE9AACluwDAiL0AACa7AED9vAAAADgAgCi8AHChvQCAwzwAAJC5AAAAuwDwkb0AABm8AABYvACgJr0AABi7AIAZPAAAe70AYHE9AADNuwBA5rwAIC89AADHuwCgDr0AgG+8AMD7vAAwwb0A0J+9AKBXvQCgib0AAPa7ANCEPQCAaDwAgJG9AIARPQCAbzwAQGQ9ADCGPQCAjbwAYFk9AIAnPAAAtjsAwEQ9AKAZvQAA6jwAgKW8AEAXvQBAb70AgEK8AIBCvADgjT0AgIG8AAC+uwCgWT0AgII8AIBAPQCAnr0AACI7AIAyPACgDL0AgCI9AIB0vQBgIL0AgAY8AKBLvQAATDwAwMc8AKAJPQAAmDsAYHS9AIDnvAAAyDoAAOQ6AAC9OwDgGL0AwGq9AGBjvQCgLL0AsMc9AACHPAAAKb0AgEu8AOA/PQBAVT0AAKq7ALCnvQBA9T0AAKS9AMB3PQCQx70AQN48AIATvADAET0AALg8AICGvQDAl70A4IO9AKA/vQCAfD0AwBQ9AKAxvQCAGz0AgLw8AEDzPABggz0AAEU8AGCMPQCIDr4AoCI9ACBPvQAAUL0AwLk8AICXvADAnrwAAPw8AECavABAubwAgE+9ACDhvQBgWL0A8J29AMC6vADAbD0AYCu9AIBPPACggL0AQOc8AIBiPQBA5zwAwCg9AACRuwAAPrwAYH49AACIPADA+rwAwHo9ANC4vQAwvD0A4EO9AADvuwDAnbwAgAu8AIDVPADAsLwAgOm8AKAbPQBg1L0AAIC6AOAdvQDAcL0AQAc9AACUOwAAnDoAgPo8AEASPQDgh70AAK08AOATvQBAgbwAwMK8AIBfPQAAjj0AQL+8AMC/PAAAIzwAQJo8AAD+vAAAsLsAIM+9AIA3vACgAb0AQI48AAAVvAAA0bsAwMK8AAApvQBAHb0AwMQ8AAB6vAAA5DsAgLI8AAA8vABAXj0AQPa8AMD+PADgED0AIAY9AGBAvQBAHr0AwIo8AMDgPACAdzwAgIc9AACgOwBwjr0AAGg6AIAhPACgED0AQDm9AIBtvQDAe70AAFo9AEC9PACAl7wAAOe8AABEvAAATL0AwAy9AAACOwDAgTwAYCG9AADYOgCgoL0A4JQ9AAABvQCAUr0AACo8AGCevQBgYj0AoAk9AAAsvQAA+LwAQNA8AGCKPQCAwjwAQP68AMDZPAAAJL0AQIk8AMBlvQAgcL0AIGU9AEChvACAdLwAwJ88AADgugDAU70AICe9APDDPQBAeT0AUIK9AMC/PACAcjwAAAS8AMDNvADgi70AcIA9AIDgPACAFD0AoI09AOACvQCA1LwAwAC9ADCGPQAAiDsAgAm9AMAAPQAAfDwAIE69AGB/PQAA57wA4BK9AABXvQDA9DwA4AG9AIAXvADAWT0A4Dg9AABZPAAA9LoAgKW8ALCOPQAAULwAgDM8AIDBPADA/LwAANa7AAAPPACAPz0AABu9AABCPADAsL0AwNw8AADpPAAAeLsAwIQ8AIDwPQAARjwAgLE8AFD2PQCADT0AQO+8AMC4vACAKTwAAA49AKBDPQAA5LwAAAi6ACACPQCQmj0AAFM9AOCevQAAkLkAQGk9AADLvAAAa7wAgEY8AEBXvQCAJj0AANa7AGAePQBAGr0AgCI9AIBSvQAAjLoAIGK9AOAqvQBgDT0AgGQ9AIDBvADAmLwAYDI9AIDEvACAKTwAgCK9AMCEvACANL0AAA09AOADvQAApL0AwCs9AABpvACgqL0AgLU8AAC4OgAAgDgAYCm9AEC0PQAAVbwAQEc9ALC7PQCgUL0AYGe9AIBEPADAh7wAgAY9ADCBPQBQ6T0AYBU9AECgPACAMzwAYBk9ABChvQCAdbwAADu9AICQvADAer0AQDy9ACAFPQAAjzsAQFc9AID8PAAA0jwAAEi9AIDBvAAAQDsAAIM7AAChOwAA7LsAIBE9AECKvAAArzsAAOs7AAChuwAA/7sAQIW8AACOPACAu7wAwEY9AEDevAAA47wAAMO8AMDDPAAgjr0A4AK9AABSvAAAozwAgB+8AMAtvQCAk7wAwO28AACYuwBgPL0AwP88AAAouwAA5LoAICW9AIgbPgAwqT0AIJE9AAB/vQBgvj0AgFK9AAA8vQAAprsAgC29AAA8PAAAsjsAQN28ACALPQDA9rwAQCg9AMDRPACAaLwAQNM8AID7PADAirwAAIg9AAChOwCAojwAAIS6AKA9PQAgTD0AAOS7AADWvABgGD0AAOU9AOA3vQBAzLwAAFU8AKBXPQCA3TwAAAk8AAAKPQAAd7wAQNA8AECJvQCQpL0AoEG9AACCuwAAyrsAIIU9AADruwBAl7wAwOO8AAAEOwAAzbwAgC88AADqOwAAF70AgHi8AMAcvQCgxj0=","chunkHash":"ec10b86eecfedb3536ad0187a2266996e343f1a48c1bd569532069ef555a7cd0"},{"text":"File: `MorphoFeatures/morphofeatures/shape/network/deepgcn.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n            *[BasicConv([emb_dims, 256], 'leakyrelu', norm, drop=dropout),\n              BasicConv([256, out_channels], None, None)]\n        )\n        if projection_head:\n            self.projection_head = nn.Linear(out_channels, 64)\n        else:\n            self.projection_head = None\n        self.model_init()\n    #...\n```","range":{"startLineNumber":56,"startColumn":0,"endLineNumber":63,"endColumn":25},"embedding":"AAAyvACgJb0A4BU9AADsuwAALDsAAIu7AAC8OwBgTD0AQNK9AMDBPAAAWjsAALG7AAAXPABAobwAgG09AAA4uwAAWDoAYAM9AIBtPADA+jwAQKc8AMCpPADAiDwAABy9AABSuwCAWLwAAIQ7AICcPABAbD0AAMC6AMBNPQCAQ7wA8Li9AMBDvQCQq70AAIg6AIAevACQkT0AoGG9AGC1PQBAYj0AgPW9ACBXvQBAtjwAAFC6AIDjvABAlTwAgFY8AMApPQAgbj0AwCe9AAAvPQAA0bsAgNc8AMBBvQAAUz0AQEo9AMD9vADAcb0A4F89AABAOQDAk70AgEe8AADrvACAKbwAACS8AMCfvQCAbjwAgDC8AACyuwDwmL0AAAm8AAB1vAAAQL0AAIa7AADgOQDQgb0AoHo9AIAivAAA7bwAgFI9AACPOwCA5rwAACi8AGBOvQBguL0A8Le9ACBlvQBAV70AABI7AMArPQAAGjsAcJG9AEC3PACAeDwAYE49AAB0PQCAorwA0IM9AADkOwAAJjsA4DA9AKAfvQAgQD0AgGe8AGAfvQCgdb0AAEC8AACQugDAkz0AwJa8AAAqvADgbT0AQII8AEAhPQDgkL0AAGm8AACTPAAgAL0AgPA8AOBCvQAA6rwAAPE7AKBsvQAACDsAgM88AIDhPAAATTwAkI69AEDFvAAAnjsAABk8AIB9PABAIL0AcJG9APCCvQCgXr0AQLg9AIBVPAAgOL0AgGi8AIASPQAAQT0AABy7ABCbvQCw5T0A0JK9ACB5PQCQwr0AQOE8AECWvAAAAj0AABM9AIBQvQBgmL0AgHC9AIBtvQCAYz0AIB89AKALvQDgGT0AwLI8ACACPQAwpT0AAK87AACCPQDYC74AQF09ACAovQCAcr0AgN08AMCWvACAnbwAgNU8AADnuwAA0bwAAEa9AKDhvQAgTL0AgLK9AEC/vACASj0AQBe9AAC+PAAAYb0AAAU9AACMPQCAhDwAAEk9AACKOwCAYLwAwG89AGAMPQBA8bwAYGY9AFCxvQBAlz0AIDe9AAC2uwAAA70AwMu8AIBTPAAAj7wAgFO8AMD/PAAguL0AAHE8AKAFvQDAaL0AwPg8AACAOQAA9bsA4A09AACyPACge70AgJY8AMClvABAsbwAAI68AGBGPQCQnD0AAJC8AECrPAAAazwAQCc9AIDwvACAHLwAYM+9AACPuwAAIr0AwIo8AADduwAAuTsAgI+8AKBWvQAgQr0AgIY8AACXvAAAwTwA4Ak9AACNvABgNj0AoC29AGAVPQBgFD0AwAc9ACBCvQAgK70AADM8AKAIPQCAYzwA0Kk9AAAqOwCAkL0AAMc7AAChPAAAgTwAQEq9APCdvQDArb0AYHk9AIAtPAAAHLwAwJS8AIAtvABgWb0AwBm9AAAAOgAAxLsAQBG9AIBuPACwsb0A0K49AMDZvAAgar0AAN48AOCTvQDAbj0AYD09AICHvQBA2rwAAFc8AEBaPQCA5TwAAAG9AMDBPACATL0AIAE9AOBsvQCgmb0AwJY9AIC0vAAAKbwAAIY8AAC0uwAAcr0A4Ai9ABC+PQCQhD0AEKW9AMCePAAAXDwAAIe7AMCAvACwkb0AMI49AEA9PQBA8DwAIL09AGAPvQCAyrwAgP+8AKCHPQAANDwAIA29AICcPABA1TwAwAG9AGB4PQCADLwAYG+9AICNvQAAszwAwL68AAAXvAAgcT0AAC89AAD/OwAASDsAAGa7APCGPQBAtrwAgEg8AADTPAAAibsAgCu8AADRuwBgMj0AQNu8AAASPAAQwb0AwNM8AIA4PQAAiDwAgJc8AKgCPgCAGTwAQJA8AODKPQBA8zwAQNq8AIAVvQAAeLoAID89AGBYPQDA+bwAgDc8AMAjPQDghD0AIFU9AICJvQAAmDsAoF49AICEvACAVLwAgBc8AOBYvQDAtzwAgDO8ACAHPQCA37wAoCU9AKCAvQAA1DoAIIe9AEBQvQDgKD0A8IA9AEDvvADAi7wAgF09AEDkvAAAfTwAYG+9AAAmuwAgYr0AoA89AAAjvQCQqL0AQBU9AAB8uwAAl70AQLc8AACpuwAARDwAoAW9ALCiPQAA67sAACU9ABCqPQDAJL0AIEe9AIBIPAAAjrwAAAk9AJCDPQCQ5T0AQB49AIBfPAAAiDwAQB49AGCgvQAAqLsA4De9AMC9vABwmr0AACS9AMC8PACAWTwA0IQ9AGARPQAAuzwAIC69AMDdvAAA+DoAAFk8AAAwOgCAGbwAwPs8AIDsvACACjwAANE7AABYugAAcLoAgFi8AACxOwBAnbwAYCE9AIA7vACAlrwAwK68AICsPACgd70AoBi9AADFOwBAiTwAAK28AAC8vADAvbwAQOG8AECLvADAX70AQIQ8AACwOgAA+zsAYFG9ANAjPgDwtD0AIHk9ACCPvQCArT0AIGm9AAA3vQAAUjsAQFu9AMCcPAAAijsAQPW8AED9PABA17wAoAY9AADPPAAAnjsAgAY8AOAMPQAATLwAEIM9AAAsuwAAbjwAAIS7AGAUPQDA8TwAAF+8AACZvABA0zwAoNM9AOBevQDA3LwAgAU8AGBcPQAADzwAAPA7AEDzPAAAfLwAYCk9AMBcvQBgqr0AoBq9AACguQBAjLwAQH09AEChvACALLwAAJu8AAAHPACA6bwAAKw8AAB6OwDAC70AgGy8AGAHvQBwzj0=","chunkHash":"6eaa220605d32b319de8e1533a4aba824b0d79fc38d4052e3c3e7ff3718578b4"},{"text":"File: `MorphoFeatures/morphofeatures/shape/network/deepgcn.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def model_init(self):\n        for m in self.modules():\n            if isinstance(m, torch.nn.Conv2d):\n                torch.nn.init.kaiming_normal_(m.weight)\n                m.weight.requires_grad = True\n                if m.bias is not None:\n                    m.bias.data.zero_()\n                    m.bias.requires_grad = True\n    #...\n```","range":{"startLineNumber":65,"startColumn":4,"endLineNumber":72,"endColumn":47},"embedding":"AADUugAA/LsAgDg8AMCqvACAaTwAABA6AMCYPADAuz0AsLO9AMDPPAAAWLoAQIk8AAAQvADAjrwAAAY9AIA2PADAmLwAgP88AEDkPACAMz0AAIk8ACABPQAAgrwAQK28AACWuwAA3TsAgEg8AICLPAAwlz0AAGA6AEClPQAAnLwAcMe9AADoOgCAZr0AgIm8AAD0OwCQqT0A4GK9AKBkPQAgOD0AcPe9AMDFvAAAu7sAgHG8AAA6vQBArDwAAJQ6AMC9PABAPD0AIIi9AMDYPAAA1jsAAEK7AOCCvQBgGD0AgFw9AAC+vADAfL0AsIA9AACQuQCgl70AADa7AACIvAAA8DsAgGi8APCJvQAACbwAQLC8AMDOvACQnb0AAFi8AABmuwCQqb0AAJa8AADHuwCgab0A4Kk9AADKOwDA67wAwBw9AIAiPABAuLwAQMq8AIDJvACw0L0AsKq9AAC0vAAgWL0AwIQ8AAAwPQAApDsA4Dq9AKAfPQAAZjsAoGs9AAB1PQAAGrwAoDo9AIC3vAAApLoA4II9AGAfvQCwgD0AQNq8AAAhvQBgbL0AwJq8AMCfvAAw2T0AIEK9AACRvABQmj0AAGg8AAD2OwBwhr0AQKK8AIDUPADAz7wAwMI8AGBCvQCA/7wAAGS7AABMvQCAwTwAAGo8AIBPvABgHD0AIJW9AEC/vAAAT7wAgM68AMCtPABgQL0AgFi9AMBsvQCQs70AALw9AABoOwAgT70AAKi7AMDDPABgTD0A4BQ9AJCdvQCQnj0AAGa9AHCCPQDA1b0AgH48AAC1vACAAjwAANU8AID8vAAwvr0AgDe9AEBXvQDAnz0A4Dc9AMAgvQDApDwAgLU8AMDKPACADj0AAJS6ACB8PQBQDr4AAO48AMAPvQBwpr0AgBI8AACsuwCA3bwAAIU7AAAUvAAAl7wAwHC9AFDKvQBAY70A0JW9AIB8PACgFz0AQDS9AAAEPQAA8LwAIBc9AKBHPQDgFz0A4DU9AIB8vAAAmLwAoFc9AOAAPQAAt7wAIAE9APCNvQBAWD0AQFO9AAD9OwCAV7wAAKK8AIBoPACAKbwAgAy8AEAzPQDgmr0AAHA8AIC7vADQkr0AwMk8AAAlvAAAcjsAQLg8AAA5PAAgUL0AgGU8AABDvAAAprwAgFO8AKAJPQBgfT0AAEC8AMD3PACAsDwA4Ds9AMALvQAAprsA8KG9AABAOgAATLwAgKw8AACEugBAuDwAwAe9ACB3vQDghb0AAN48AIDuvACA3jwAoAc9AABDvQCgDT0A4D29AIB9PABAmTwAgLQ8AKBYvQBgKb0AAHM8AKBGPQBAvDwAsJ49AIBFPACggL0AACA7AMCWPAAAfbwAQOa8AEBxvQBQ2b0AgFY9AAAgOwAAqbwAQOW8AADbuwBwg70AIEq9AICkvAAAhzsAgBw8AMApPQAQr70AIKE9AABjvACgR70AwPI8AJCCvQAgoT0AgDQ9AGCcvQCAjbwAAOQ6AIC6PQCAZjwAwAu9AKBMPQCgY70AAEU9ALC2vQAwtb0AoHc9AIAAvADAhbwAAIC7AABgOgBgOb0AwLi8ALCtPQAAJD0AYJa9AAA9PABAyDwAwJi8AMC1vADwob0AYH09AMC7PAAAqLsAgKU9AAAHvACgMr0A4C29ACCGPQAAHjsAYGW9AACQOwCAkjwAgIW8AABBPQAAMrwAwE29AID4vADgDz0AoDm9AAAgvADgiD0AQBk9AADwuQAAvTwAgBs8AEB8PQAAUzwAAPY7ACBKPQAAwDsAgEa8AAB6PACwgj0AgNi8AAARPABgzr0AADc8AKBwPQAADj0AgN88AODTPQAA/7wAIA89AHCYPQDAmTwAAPw7AKABvQAAILsAAPU8AIAxPACAv7wAAAs8AACvPABwnT0AIBs9APDIvQCArTwAoFQ9AICqvAAAirwAwII8AKCWvQCARTwAgFe8AKABPQAgQ70AICA9AGCFvQAAsDkAYFq9AKAFvQAAjjwAgPg8AABCvAAA2TsA4HQ9AKAGvQAAGD0AwPq8AAAPvABggr0AICE9AABrvQCgtL0AIDQ9AADGuwAwqb0AwM48AIAmPACANzwAAGK7APCiPQAAqbwAADE9APCiPQBAj70AQFC9AADmOwCAk7wAoDk9ABDEPQBgxj0AIGk9AID3vABgGT0AAJs9ABCrvQCANbwAACq9ACAzvQBAtr0AQHS9AMCQPABAoDwAIC89ACApPQAAVDwAQJG8AIDOvAAAtrsAAJA7AAAQvAAAwLsAgHs8AADQvAAASDsAAJi6AAB0OwDAqjwAgIM8AAA+uwAAlzsAgK88AIBtPADA4rwAAAy9AMCEPADgKb0AANu8AIBvvACAlLwAoD69AECavACgCL0AgES9AAB8PACAYb0AIAA9AAC3uwAAXDwAgDe9ALADPgBgfz0AIDI9AECVvQAwqT0AYGS9ACBEvQAAAjwAQDm9AIAAPQCAMzwAwJa8AEAbPQDAw7wAIE49AECMPAAAvrsAAFw7AMAAPQDAmrwAsKo9AADhuwCA2zwAQKk8AMCmPABAVD0AQA69AIBYvADgJz0AYA0+AIBevQAAFbwAAC88AMAsPQAA8rsAgAw8ACALPQCAd7wAACE9AGBgvQBQrL0AABS9AACrOwCALLwAYGA9AAAPvAAANbwAIBm9AAA+uwCATb0AAPY8AIAsPACAA70AwCC9AECkvAAgtj0=","chunkHash":"3b07064386a7b655c7877e60c6870a353dcd404e2e357a2ff0311f429abe2d5f"},{"text":"File: `MorphoFeatures/morphofeatures/shape/network/deepgcn.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def forward(self, points, features):\n        # Ensure correct shape [B, C, N] without the extra dimension\n        if len(points.shape) == 4:  # If [B, 3, N, 1]\n            points = points.squeeze(-1)\n        if len(features.shape) == 4:  # If [B, C, N, 1]\n            features = features.squeeze(-1)\n        \n        # Don't unsqueeze again since we're ensuring the format is correct from our adapter\n        # points = points.unsqueeze(-1)\n        # features = features.unsqueeze(-1)\n        \n        feats = [self.head(features, self.knn(points))]\n        for i in range(self.n_blocks-1):\n            feats.append(self.backbone[i](feats[-1]))\n\n        feats = torch.cat(feats, dim=1)\n        fusion = self.fusion_block(feats)\n        # Only use global max pooling as per paper\n        #...\n```","range":{"startLineNumber":75,"startColumn":0,"endLineNumber":92,"endColumn":0},"embedding":"AMCFPABgS70AIG49AICZvAAAADoAICC9AADJOwAgTD0AYL69AKAmPQBAgTwAgIW8AEAlvQBA7bwAYC49AMCSPAAAxLsAAPU7AMAdPQCAzjwAAJS6AIDpPADAxTwAYBu9AIAPvQAATzwAAHo8AIDFPAAQhz0AAFw7AECgPQAANLsAEJ69AACsuwBgT70AAH88AAChvABAwD0AQHS9AOCNPQDQqD0AYOW9ACB+vQCAWbwAgDM8AIBxvQBAmTwAACq8AGA3PQDQqz0AwFa9AGCSPQAA7DsAgNE8APCWvQBAgD0A4Ew9AEDcvACgNb0AoIQ9AICrvABQrb0AAPG7AAAYvAAANrsAANW7AACDvQDAqjwAQJW8AICZvABAWb0AgNE8AADeOwAAZL0AAFq7AICpvACAP70AoIc9AMDIPACA9bwAgAc9AIAKPAAA4bwAAFi8AEAXvQBg0r0AgHq9AID3vABwp70AgEk8AIBKPQAAJzwAwJi9AMCyPAAAnTsAoIM9AGA+PQAAPDsAQGo9AECfvAAA8DkAgDI9AMB0vQDAoTwAACK8AOBfvQCwlr0AgCy8AADAvACAjz0AIFK9AACEuwCATT0AQOU8AEAOPQAAjr0AACC6AACtPABAvbwAYGA9AEAsvQDA2bwAAIe7AOAovQAAgLgAACE8ACArPQCAyDwAYJ29AICuvAAANjsAQLe8AACzPADA2LwAMI29AMA+vQAger0AIK49AACwOwCwlr0AABy8AOBWPQBgRD0AgG28AIBXvQBA2T0AELO9AIBWPQDAqb0AQEM9AIDovAAAtDsAwAs9AIBevQCQx70AwGy9AECTvQDAbz0AICY9AMDevABAszwAACK7AACwPABAaT0AgDE8AEBPPQBwEb4AwPA8AOCGvQAQpr0AgCa8AMBjvQCAIb0AgDA9AIB/PACA0LwAQIG9AJDVvQDACr0A0JK9AAD6uwCgHj0AwEC9AAA2OwAwkb0AAG49AMCXPAAADD0AgMM8AAA8uwCAGr0AILk9AMCSPAAAlrsAgOY8AOCbvQDgiT0AYGi9AIAdvAAAH7wAAGq8AECtPAAAOLoAgNi8AIB7PQDg0b0AAI+7AICivABAg70AQKU8AECpvAAAQLkAwBE9AIDQPAAgR70AAEE8AMD/vAAA7bsAwCm9AEALPQCgej0AAEC6AEC0PAAAiDoAQKw8AABvvQAASLwAgIe9AABkOwDAn7wAAGi8AABbvAAAajwA4A29AFCNvQBANL0AgKg8AKBmvQAA3zsAgGY8ACBOvQBgCz0AAP27AEDEPAAAnzsAgGI8AABEvQBACL0AgAg9AIC9PADAEz0AoEY9AACbuwBgRb0AQI48AABGOwDAED0AwGe9AICxvADgwr0AgGk9AACBOwCgSL0AQKi8AEC6vABAFb0AAJW8AADkuwAAgLkAAOC5AADsugCgPb0AAI89AIBxvAAgF70AQAQ9AABuvQDgej0A4Dk9AJDLvQBANb0AACI8ACC8PQAANTwAgIu8AAD6OwCAD70AoE89AED4vABgkr0AYIU9AACXuwCAt7wAgNg8AIBrPAAgTL0A4C+9AMDbPQDgqT0AELS9AACbuwBA1LwAAIM8AAC+OwDgcL0AIBY9AAAoOwAA7jsA8Ic9AICxvADgV70AYFK9AAB5PQDAkbwAAAS9AIBjPACAEz0AYB69AMAePQCAW7wAgAq9AIA3vQAAvTwAQK68AACvOwDAKj0AAKo8AIAIPAAA8bsAQIu8AKBcPQAAsDsAAKK7AMDAPACge70AADi6AABxPAAgQD0AgMK8AEARPQBAub0AAIE7AKA2PQAA8rsAQIg8APDzPQAARjwA4Bg9AHCJPQAAWLsAgGG8AADevAAAwjwAQDQ9ACBdPQAAebwAwOa8AMDePACAHT0AgNQ8ANDLvQAACDsAAIE9AICQvADA0LwAAKI7AGB+vQAAzzwAAAa7AOAfPQAgj70AQIk9AIAavQAAlLwAYFK9AIB6vACAxDwAgEE9AECHvAAAeLsAYCM9AMDRvAAA3DsAAMi8AAAAuwCAYLwAQAY9AIDjvAAg5L0AQOw8AMATvQCQkr0AgHk8AAB4uwAAoLkAQEG9AOCwPQAgSL0AQCU9AMB9PQDASL0A4FS9AMCOPADAcL0AwFU9AMCXPQBQ1T0AYGU9AMCVvACAQDwAgNI8AACxvQAADbwAgG69AADJuwAgRL0AQEq9AECiPAAASTwAIEM9AIDQPABgfj0AwPy8AMCvvACAIzwAQIy8AACRvAAAEDoAAOM8AABSOwAAXDsAAMg8AECtPACARjwAAA68AAAAAACAh7wA4Fc9AADhvACAH7wAgPi8AEDbvABAar0AAKq8AAChvAAAuLsAIAO9AAAUuwAA77wAwMi8AID9PABAI70A4FQ9AECNvABAo7wAYGK9ABgTPgCQiD0AAIQ9AMCXvQDwxz0AoD29AOBavQCAGDwAAD+8AMCvPAAAKDwAAES7AKB4PQDAtbwAwDA9AACxPAAAqjsAAD08AEAbPQAAi7wAIIQ9AACeuwBACj0AAHY8AAD2PABART0AIBe9AGA0vQBgOj0AYNc9AIB5vAAAoLwAACs8AIBsPQAAgTsAAHm8AIBvPACAerwAQPQ8AKBlvQAQpb0AYJa9AAAuvAAAr7wAIJU9AACqOwAAlrsAgEu8AACDPACARL0AwA89AAAkPABgCb0AgLq8AACUuwDAnj0=","chunkHash":"637538281d7b4c25533b30ba4fd79008aaddae3326c40c3264b380c697822c16"},{"text":"File: `MorphoFeatures/morphofeatures/shape/network/deepgcn.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def forward(self, points, features):\n        #...\n        x = F.adaptive_max_pool2d(fusion, 1)\n        out = self.prediction(x).squeeze(-1).squeeze(-1)\n        if self.projection_head:\n            return self.projection_head(out), out\n        else:\n            return out, out\n#...\n```","range":{"startLineNumber":92,"startColumn":0,"endLineNumber":97,"endColumn":27},"embedding":"AABpPAAAAL0AwFQ9AAAgvAAAmDoAACW9AIBqPAAwjD0AcL+9AAD1PAAAdzwA4Aq9AGAJvQCgUb0AALQ7AIADvAAAcDsAAGg8AED0PAAAGD0AAP67AMD3PACAUDwAIC+9AMCBvAAAo7sAgB08AIBUPQBAoD0AwIk8ALCWPQCAlLwAoJe9AABOvABAZ70AAEo7AADxuwDA1D0A0Ky9AMByPQDwpz0A8Nq9AID5vAAAFb0AAF47AGAuvQCAQjwAAAq8AIAaPQAQ0j0A8LS9AEALPQCAa7wAwPQ8AHCFvQAAID0AYGk9AABYvACgJL0A4Dw9AAD4uwAwr70AAJQ6AAAlPAAAUDsAgHy8AGBUvQCAZDwAAAC8AEDrvABAXb0AAKo7AMCFPABgXL0AwKq8AICuvAAgEr0AAFs9AACaOwAARb0AIAk9AACjOwAAA70AQM68AEDxvABwyb0AgHi9AMCKvQCAjr0AQNY8AMDnPAAAxjsAAGy9AEAvPQAAbrwAYJE9AMBEPQCAvLwAAEE9AAB2uwAAdLsAAAw9AOAlvQCAKzwAANG7AOA6vQBAlL0AACy8AIA8PADwtz0AYCe9AADMvADgej0AIAw9AKAPPQDgpb0AAEw7AAAqPAAA6LoAwFg9AOAavQBAuLwAgJi8AKAAvQAAKzwAQMA8AABqPADA0TwA0Lq9AADrvAAAzLwAwLC8AMDVPAAAxLwAgGO9AABzvQCgK70AcLk9AABIvADAd70AAPI7AIBIPAAAET0AAIo8AGCUvQBgwz0AwKS9AJCHPQBApr0AID09AMCtvABAqDwAACE8AECbvAAgyr0AgHK9AMBkvQCART0AgI48AIAYvQAAzDsAAKG7ACAWPQAQgj0AAKE8AOA0PQBQEr4AYCk9AOAnvQDAqL0AQIu8AIALvQAAF70AYI49AADSOwBA+bwAoI69AGDTvQDgEr0AELi9AACcvABgdT0AABe9AABSOwBgIb0AoCo9AAAGPQAgUz0AIC89AIATPACAFLwAYLQ9AMBQPQAAkLoAgAo8AHCivQAQgj0A4DG9AIB1vAAAT7wAgFu8AICiPAAAzLsAAAw7AOARPQBAqr0AYAE9AMDJvABQpb0AgOo8AIB3vAAA9DoAIDM9AABgugDAf70AgGQ8AABwvQAAoLsAYBO9AED7PACAKj0AgHs8AKAGPQAAYDoAAJE8AABRvQAAx7sA8I29AACmvABA07wAgA+8AAA8vACAlTwAwEW9AIAovQAAUL0AgCI9AAAyvQCAfTwAYAA9AADUvADArDwAwL+8AABRPAAAtzwAgHY8AMBdvQCAJbwAoDQ9AGAjPQCAuDwA4Hc9AABFvADgL70AAOc8AECkvACAiDwAABm9AIA9vQDgq70AgFU9AAAmOwBAGr0AAEa8AAAAuAAgb70AgAK9AICNvAAAm7sAANM7AACQuQAQhb0AcKU9AIAWvAAAPL0AwLI8AOBpvQAgkD0AQAQ9ACDMvQAABb0AQJK8AACmPQAArLsAgIG8AICOPAAgPr0AAPE8AIB5vQCQk70AYDw9AAACuwDA7LwAAE48AMDKPADAzLwAoEK9ADDVPQAwiz0AEJu9AEC6PAAADrsAAMQ6AECCvACg270AwIQ9AECyPADAyDwAYIE9AMD2vACAcL0AIEq9AHCpPQAANrwA0IW9AEChPACgDT0AAOW8AOAnPQDgFr0AAFC9AOAevQAAKj0AYCS9AAD9uwDAAD0AgK08AABzPACAMzwAACE8AAB4PQAAWDwAAAe8AEAfPQDAAL0AgCe8AACcOgCAGj0AQLO8AECpPABQ670AAI08AEDNPAAAwDoAQMY8ANDNPQAAnbsAwO88AGCCPQAAgbsAwB69AEC7vAAAzjsAIDo9AABTPQCA8rwAQKC8AABtPAAgID0AACc9ANDtvQAAr7sAYDQ9AMCBvACAIL0AgEs8ALCZvQCAhTwAAGE8AID/PAAAer0AoEA9AMBgvQDAhbwAQFa9AIC5vABAszwAACA9ACADvQAAATwAwBU9AIDMvAAAgDsAQL+8AABAuwBApbwAwLU8ACAwvQDw2b0AYDE9AIBtvACg1L0AAK07AIAAvACAZ7wAgBS8AIDEPQDA9rwAQNM8ANCQPQAwi70AwGy9AAAjPACAvLwAAME8AHCsPQCwuT0AADE9AADRvADAsDwAABo9ALCgvQAA6LsAUIC9AAAnvADAurwA4C29AACjOwAAQDwAACE9ACB9PQAAgj0AgGa8AAAdPADApDwAAEA5AIBgvAAAcTwAIAY9AAB8vACAjrwAAPI7AABgOwBAlDwAAO+7AICCvAAA7DsAwPU8AKAPvQAAZLwAwAq9ACAAvQAgP70A4BS9AABMvADA47wAwMm8AICCvABATL0AgOC8AICEPAAA/rwA4B49AADgOgAA0bwAwHO9AEgWPgAgmT0AwG49AMCCvQDAqz0AABW9AIB0vQAAJDsAgP68AAD5OwBA+jwAANg6AIBSPQCAVrwAAN08ACApPQAAArwAQP88AOBLPQAAADgAgLc9AAApvAAghT0AgOY8AAD8PABAPz0AgGO8ACA+vQAAFDwAwPg9AABWvAAAJ7wAAHg7AKBDPQAAvjwAAFC8AABoPQAAcrwAACE8AMBFvQDwlr0AwC+9AAD4OwAAlbsAAH89AACCuwCAb7wAAFu8AIAtPAAAjLwA4GE9AAAqOwCAYrwAIAG9AAAUOwBgrT0=","chunkHash":"06052b481078f1ecee636f2356c7a665a71bbf4f1f7f4eb4d53f4379be1aad43"},{"text":"File: `MorphoFeatures/morphofeatures/shape/network/deepgcn.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    \"\"\"\n    Implementation adapted from:\n    https://github.com/lightaime/deep_gcns_torch/blob/master/examples/modelnet_cls/architecture.py\n    Credits to DeepGCNs.org\n    \"\"\"\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n    def model_init(self):\n        #...\n    def forward(self, points, features):\n        #...\n```","range":{"startLineNumber":9,"startColumn":0,"endLineNumber":74,"endColumn":40},"embedding":"AACqOwAgC70AAPM8AICNvAAAfDwAgF+8AICGvABgSz0AMNy9AMArPQCAWDwAAEI7AAAzPAAAs7wAwHg9AADsOwCAZTwAAP08AICpPADA4zwAgLc8AKABPQCArzwAQL68AIAmvADAkLwAAB67AACBOwBgRj0AAI+7AOA8PQAA6bsAEJy9AAALvQDAk70AAKi7AEDFPACQxD0AQJW9AJC5PQCgMj0AuBe+AOBWvQBApDwAgDu8AID0vABA2TwAAPg7AKAmPQBgdD0AIA29AKAnPQAAxrsAAOy7AKBovQBgEj0AIDk9AAAOuwDAMb0AgGs9AMCvvABglb0AgEK8AMCevACAsLwAAFi7AOCavQDAtDwAwKi8AAAIugDAPb0AADi7AEDkvADAm70AAKC5AICdvACgZL0AEKU9AAAiOwCAfbwAQDA9AAB2OwDA8LwAALg6AOAavQBgtb0AAJG9AMBlvQDA5rwAAIS7AKBvPQCAizwAQJO9AEDwPAAAYzwAQGA9AOBIPQCAcLwA0Mc9AABsuwAgND0A4Bw9AIA/vQAA6zwAwJC8AOA8vQAgEb0AAG68AAB5vABQqj0AgDu9AACHvACwhj0AAKM7AEDkPADAiL0AABA8AOAAPQAA/7wAYEo9AIAhvQAAEL0AgEw8AOBivQCAwjwAwJs8AGA9PQCASTwAIIu9AAC0vABAwrwAwKu8AAAxPABAzLwAkIy9ACCLvQBgTb0AQKg9AAC3OwCAfr0AANC8AEDtPADAXj0AgDE8ABCsvQBQ3z0AMKe9ACBkPQDgy70AoDg9AECBvAAgDD0A4AI9AEB7vQDgjb0AQDa9AOAOvQDwjD0AIBs9ACABvQAggz0AgEY8AIBaPAAAlj0AAF67AIBJPQA4Fb4AAGY9AAAJvQCgfL0AgAA9AECYvAAA27sAYCM9AICUvABAjbwAYDq9AJDCvQDgCb0AMK+9AICzvAAA8DwAIEK9AICRPABgk70AgB49ACAWPQCAiDwAoBY9AAC9uwCAnLwAkJE9AACVPABA97wAgPI8AECjvQAQgj0A0IG9AAA1vAAAdrwAAKG8AEDkPACAn7wAwMW8AIBSPQAgvr0AAM67AACgvACAX70AgN08AAAxvACAjzwAYEs9AIBaPACAQb0AAPc8AADHuwBA6LwAAAa8AIAAPQBAdj0AAMU7AAAKvACAUzwAYBo9AIA7vABgCL0AQNO9AADqOwAAEr0AgHQ8AIBXvAAAXjsAAKu8ACBdvQAARr0AABQ8AIDyvAAAyjsAAOk8AGAovQCAXT0AAMW8AACxuwCA+jwAgNE8AEBIvQAgS70AABk8AOAnPQBAiDwA0IQ9AAAAOABglb0AAG47AECNPABA+zwAQGK9ACB4vQCgpb0AoDY9AADYuwAAhbwAgAO9AECgvAAgCL0AQBy9AADSuwAApzwAABW8AIDdPADQhb0AsL49AAA+vAAAZ70AgBg9AGBcvQDQiT0AgCc9AOB/vQDgAL0AgLI8AHC3PQBA5TwAoFG9AMBJPQAAEr0A4Ig9AAByvQAAob0AIDs9AEC8vADAR70AwIM8AAAyuwAAYr0AIBC9AADWPQAAZT0AIMm9AMCePABAAD0AAHi8AECxvADgjb0AoCo9AICyPAAAtzsAMMc9AACPvACA5bwAgNm8AOBaPQCAnLwAwL+8AADpPACgNT0AwNq8AEBcPQAAkDkA4F69AGBMvQBAkjwAgOa8AADAugBwnD0AQCk9AADEuwCAcDwAACK7ANCGPQAAdLsAAKU7AMCmPAAAvrsAgFA8AACeuwAgCT0AQIy8AADvOwDQyb0AADa7AECBPAAAHLwAAI48ALD3PQAADDwAwMI8ALDBPQDABT0AgN+8AIAbvQCAFzwAAD47AEAzPQBAiLwAANY7AICcPADAfj0AQEA9AGCrvQBgHT0AQF49AIBNvAAAULwAAFQ7AKBqvQCAvzwAQIu8AEC0PACgPr0AAEk9AHCavQCATjwAgHO9AMDfvAAgYD0AYFo9AABgvACAhrwAYEU9AAB9vAAAvzwAYAa9AMCQvADAIL0AADQ9AICLvQDwib0AgFA9AOAEvQDQqb0AQMo8AAAuOwBAhDwAgHq8ABCSPQBA57wAADo9AECePQDAZb0AQOK8AADQOwAAWbwAYDQ9AECLPQBAzj0AgHM9AABEOwAA2jsAAO88ANC2vQAAMLsAQEC9AAB2vACAir0AYEa9AABPPAAAojwAAFY9AMBEPQAAaLwAwOm8AIAAvQCAD7wAgFW8AIBivAAAlLsAgBo9AADUugCAQzwAAPK7AADzOwAAIDkAAKi7AACwuwDAkbwAwEg9AAAeuwAAnzsAQIy8AABFPACgRb0A4A69AIB1vAAAtDoAwI28AAAlvAAAubwAYD+9AABwOgDgLb0AAE88AMC1vAAAxbsAoGm9AMAdPgCguz0AwCQ9ADCfvQAQsj0AcJm9AIBfvQAAubsAQBG9AAAhPABAvDwAAIa7AGBkPQAAW7wAADc9AABYPACAR7wAAO47AAD3PACAUrwAUKQ9AACZPACgCT0AALg6AADDPABgNj0A4Aa9AAB6vABAwjwA0Mc9AIDnvACAyrwAwL88AACTPQCAELwAAJw6AIAUPACAW7wAIEY9AICYvQCAg70AYD69AADwuQAAU7wAMIw9AACKvAAA3DoAgMa8AEDEvADAF70AQKg8AMAHPQCAMr0AwMG8AMANvQAgmz0=","chunkHash":"9297bdb9f8006929fe7b8829498032d19c3ba1ce3905b2a915ce05c7aa4c8e92"},{"text":"File: `MorphoFeatures/morphofeatures/shape/network/deepgcn.py`\n```python\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom torch.nn import Sequential as Seq\nfrom .torch_nn import BasicConv\nfrom .torch_vertex import GraphConv2d, ResDynBlock2d, DilatedKnnGraph\n\n\nclass DeepGCN(nn.Module):\n    #...\nif __name__ == '__main__':\n    import argparse\n    import yaml\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--config', type=str, default='runs/Configurations/xyz-normals-contrastive-DeepGCN-NewAugment-cells/config.yaml')\n    args = parser.parse_args()\n\n    with open(args.config, 'r') as f:\n        net_params = yaml.load(f, Loader=yaml.FullLoader)['model']['kwargs']\n\n    feats = torch.rand((2, 6, 1024, 1), dtype=torch.float)\n    points = torch.rand((2, 3, 1024, 1), dtype=torch.float)   \n    num_neighbors = 20\n\n    print('Input size {}'.format(feats.size()))\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":115,"endColumn":0},"embedding":"AIC9vACAnLwA4F89ACBEvQAAhLsAAIu7AECKvABggT0AMJW9AACEOwAAsjsAAEO8AAAQvABA77wAgGI9AAB9PAAAeLwAoFA9AMDgPAAAizwAAKs7AICPPADA7jwAwAq9AABwOgAAArsAgEE8AACNPABAmj0AwKe8AED/PACA67wA8Ju9AMBlvQDAfL0AAMg6AADjOwBgSD0AwF+9ADCuPQCAST0A8LW9AEA8vQAAgjsAAEy7AEBwvQAABLsAAJg6AACdPAAgiD0AoDS9AID0PACAQbwAAMI8AABnvQAgBT0AoCw9AICovACAtLwAkIo9AAAuPADQoL0AABq8AACVuwDAhbwAADg7AAC9vQAADzwAQN+8AABuvAAgYb0AgKk8AACpOwDwyr0AgEM8AECFvADgR70AgJI9AACSuwDQmb0AYIs9AABAPAAAU7wAIGK9AAD4uwDwtL0AEMK9AEBLvQBgH70AAFg7AIBrPQAAXrsAQGS9AEAvPQAAwDkAsMg9ACBvPQCAi7wAQOs8AADMvAAAejwAYIM9AIAZvQBA+TwAABw7AABcvABgE70AAIy7AAAsuwBQnz0AIEi9AABqvACAkj0AwME8AKAWPQDgn70AAAA8AABwPACAe7wAwMA8AKA0vQCASb0AAJk8AKAovQAAKjsAgMw8AAAAPQBArjwAEJK9AACCvAAAirsAAAG9AIBYPAAAB70AoJC9ACAMvQBAAL4AYH09AIBuvACgUL0AAFG8AACTPABANz0AgJ88AMCevQDQvT0AwK+9AEB/PQBA0r0AkKg9AIBxvACAJzwAANM8AMAovQDgXr0AIIy9AIBKvQCgaj0AAOM8ACAkvQDgEj0AAOU7AADOuwDAWz0AAC08ANCCPQCAI74AwOo8AABhvQCgQr0AAEM8AMCsvAAA37wAAI07AAAgOwCAabwAIOK9AGCKvQAAQ70AYAO9AID2vABA/TwAYA+9AICKPAAAer0AACC7AMAdPQAA9jsAYBY9AAAAOACgEL0A4Aw9AMCsPAAgB70AwOk8ADCUvQCg3j0AwDK9AAAQvAAA+LsAAIG7AICsPACAnzwAAHK7AEDaPAAQtr0AgCW8AEDSvABgEb0AQOQ8AIBGvABgHT0AkI09AMC0PADgX70AgFE8AGA7vQAAgTsAgB28AEDDPABAUD0AAI+8AIAfPAAAUzwAADy7AIAsvQAATjsAsKq9AEDLPACANLwAQKC8AMCGvAAA9LwAwAi9AJCJvQCAi70AYA89AABUvAAAhLwAIFc9AGCAvQAArjsAAH88AACmPAAgTj0AQKk8AAD4vAAAP70AwGc9AIBMPQCA9zwAgG49AIBBPAAAwbwAgHw8AEANvQAA4LsA4Ia9AOBsvQBgi70A4Dg9AAABPQBgEL0AgJm8AMDtvABAzrwAwHK9AAAnvAAAgbwAgCK8AMBVPQBAqb0AkKo9AAACvADQhL0AAOs7AOBqvQCAbz0AoGQ9AMC5vQBAqbwAgBs8ALCJPQDA1DwAQBq9AAD3PACgVL0AAKE7AIDSvAAgUr0AgFM9AABzvABAn7wAAGk8AACwOwCAKr0AgIo8AMDKPQAQgz0AoK69AKARPQAADTwAgB+8AIAlvACgkr0AYDA9AACzOwAA6zwAYHY9AAArvQAAKb0AwJa8AMBnPQAAxLwAwEq9AACAuQAA2TwAIBW9AMBoPQAAT7wAgBu8AAB7vQBAxjwAQPS8AEDjvACgZD0AoFM9AICmPAAABLsAQMu8AKBqPQCA5LwAACs9AICFPABgFL0AgDg8AIC0vABgej0AgGq8AEDiPACg+L0AwPe8AEDtPABgGT0AQKc8AMgRPgDgDj0AAJ07ANC/PQDAqjwAADW8AACpOwAAW7wAoAU9AADeOwBgG70AALW8AEAnPQDgWD0AoDQ9APCZvQAA/rsAIGo9AABcOwAAiLwAAEY7AOBAvQDQgT0AgBA8AABlPADAL70AoCo9AEAXvQAAMrwAoIe9AEBlvQCgCD0A4BU9AACBOwAAUTwAAI09ABCBvQAAlTwAwOq8AAArvQAAhL0AwBU9AIB4vAAAlr0AIBg9AMCMPACQvL0AAMI7AADTOwAA8DoAAKk8AGDHPQDgIL0AQDY9ACChPQAAojsAIFm9AADpuwDggL0A4Bc9ABCjPQBQwz0AAH49AADFOwBAqzwA4JQ9ACCgvQCA0LwAsIq9AGAhvQAwlL0AwIC9AMD6PAAAwDsAAEI9AAChPAAAADsAQJm9AACLuwDAg7wAAEQ7AACsOwCAN7wAQOs8AAAkvACADzwAAKE7AADLPABgUD0AAMC7AACRuwAAYjsAAKU8AAB/PABgIr0AAO28AACgugAgPb0AAKu8AMCZvAAgBj0AQDi9AEDbvABAgLwA4Fy9AIBXPACAOL0AgOw8AIBYvADgAL0AQEq9AODwPQBAQD0AMJM9AIA2vQAgsz0A4FC9AIAIvQAAwbwAANe8ACAoPQBAxDwAAIy8AKBXPQAA5jsAwDs9AMDgPADA0bwAgCa8AIBCPADA9LwAQFQ9ACAIPQAAUDwAAOA8AAACPQAgHT0AAJa7AACtvABgXT0AuAg+AEAVvQCAdLwAABO8AGB4PQAABDsAALo7AOAjPQDAh7wAoBo9AEDuvADgnL0AII69AIAjvACgEb0A4GY9AIBHvACAVrwAAMi7AACIOwCAJ70AACY9AAD0OwAA+bwAwIu8AAAgOQBQnj0=","chunkHash":"c1f6a90dfa5b4ab65f006001e2a8b49605fa96857f26ff764dfa7c0cb9731663"},{"text":"File: `MorphoFeatures/morphofeatures/shape/network/deepgcn.py`\n```python\n#...\n    net = DeepGCN(net_params)\n    out, h = net(points, feats)\n\n    print('Output size {}'.format(out.size()))\n\n```","range":{"startLineNumber":115,"startColumn":0,"endLineNumber":119,"endColumn":0},"embedding":"AABNvABAi7wAgI89AIAEvQAAbLsAAFu8AICovADAnD0A4Jq9AAB6OwDAnDwAACq8AAB4uwAA+LwAgL08AMCVvAAAJbwAoBQ9AGAlPQBA5DwAAIu7AACpPACA0DwAAPA5AIDUPABAuDwAAFG8AAC+PACwwj0AQBg9AADOPABAtrwAUJi9AMC8vACACr0AACA6AIBrvAAwtT0AgDy9AKCpPQAAfT0A4Nu9AAC7vAAALb0AAAI9AMAovQDA5jwAALy6ACCKPQCgFz0AQHm9ANDEPQBA97wAACi6ADCIvQBA4TwA4Gc9AABzvAAA/7sAAKo8AIChPACAAr0AgFI8AAD1PABA/TwAADS7AFCJvQAAxDsAIA+9AOB5vQBgB70AgCk9AIBHvQBgx70AALA5AKA0vQDww70AAJY9AAB6uwAwm70AwAs9AIAwPAAAiTsAQEW9AADYuwAAib0AAE+9AJCavQCQi70AwDs9AAAgPQAAoTsAgNe8AECGPAAAvLwAwHU9AGBEPQAAO7wAQIE8AACcvABArjwAgPM8AHCRvQAALj0AgEK8AIBhvABAqLwAgOw8AEASPQDgeD0AUJe9AADOvAAALD0A4CA9AIAcPADAP70AQMw8AAAaOwCAdTwAII89AKBfvQAAiTsAAMC4AKA1vQAAETwAgGk9AMCXPAAAVjwAoC29AAD2PACgNr0AgJ+8AABZPABQlb0AoGS9AJCPvQDAgL0AoDw9AACtvABAGL0AACq7ACA3PQDgMD0AAIA8AOCcvQAQqT0AMKy9APCLPQCQ3b0AgNk8AADXOwAA7DwAgKu8AGA/vQBQrr0AYCu9AOATvQAA6TwAAJA6AEAhvQBAxDwAADw8AAD9uwAQtj0AYCM9AHCZPQBA0L0AIBk9AIAHvQDgHr0AwLw8AIAtvACAU7wAANe7AAAoPAAAOjwAwJe9AOBQvQBgkb0AYNG9AEDfvADAKz0AAMW7AADMOgAgJ70AoAU9ADCiPQCA6TwAoC49AIABPAAAo7sAYDE9AED6PAAgar0AgEU8ABC0vQBwgj0AYIS9AEANvQAAmbsAAOC6AMCXPAAA6jwAAIM7AAC5PADA5b0AgG28AOAPvQAACr0AgGw8AKBjvQCACz0AQLg8AAB6uwDgcr0AAPo7AIBJvQDAwjwAALe8AEDrPABAqjwAAPI7AAANPQAARzwAAAI8AIBBvQAAizsAgEy9AABLPABgb70AAEw8AACyOwCAQDwAgD28AMCKvQBgQb0AgCY9AMCPvAAAY7wAgEc8AICfvADAAr0AgA+8AIAsPQAA+zsAAKW7AAAavQBACL0AQOw8AEAuPQAAuzwAgPI8AOBoPQBgXL0AAKc8AACAuQAAxrwAADO8AMAuvQDg2L0AsIo9AEAZvQCQlb0AwAe9AIAFvACA+LwAwLO8AAA+vACgSr0AIAA9AADwPAAgdL0AAGA9AAAougCAh70AYAg9ACCUvQBAlzwAwOY8ABC8vQCA+rwAgIY8AMA8PQBgAz0AgLM8AECnPADAwbwAIAQ9AED5vADAXr0AAJc9AADougDAIb0AgLM8AADIOwAAS70AALs8ABCMPQDgGz0AYLu9AAAgugDAvrwAAH68AICWvACYH74AEIw9AOAbPQDA/DwAkI09AAC7OwBgJr0AAAq8ACCWPQBA2bwAYMK9AABiuwDAYT0AYCY9AEB+PQAAmLsAAJm7AEDxvACgQD0AQP+8AAANvABgNj0AAJu7AOAivQAAtjwAALk8AAB5PQCAJj0AwIS8AMA2PQAAaTwAQJo8AACpuwAABj0AwLS8AAACOwBAz70AAPg6AADAuAAAtDsAgHw8AJCbPQBA9jwAYF89APC6PQDAh7wAALU7AACKOwAAODoAwBE9AAAIPQAAXjsAgPy8ACAAvQAAJz0AYCw9ANgLvgAALjwAwCo9AMCBvACgL70AgHk8ADCbvQBgbj0AAAI7AADsPADgYb0AYEk9AOBwvQAAV7wAoDa9AOAYvQBADD0AoEE9AKAavQAATbwAgCE9AMDavAAAnTsAALm8AADIOgCAGb0AQJA9AABAuQBQ3b0AgOY8AADfuwBgw70AgBQ8AIBjvAAAMbwAAMI7AADSPQAARb0AQJ48AMB/PQBgAr0AAKK9AADdPABgUr0AANU8AMCKPQCgtj0AQOc8AADfuwAAwjsAAAM9ADCFvQAAJDsAEPK9AAAYvADQiL0AYMO9AAAtPQAARLsAgPA8AACYOwCAlrwAgHi8AEACPQCAVbwAgDA8AKAWvQCAmzwAwGc9AAAVvACALzwAAJA7AAB3PADAizwAgOg8AIA8vABA5TwAAAU9AIAgPACAOrwAAPs7AECLvAAAO7wAgO28AIDkvAAAiLsAAH88AACeuwBAmDwAEK29AACGPQCwgr0AAPS7AMDEvACA7bwAAOS8AADVPQBAZT0AwHs9ACBVvQCAhz0A4F29AOCTvQAAxDwAgAS9AAD3OwBgAD0AAJA6AKAmPQBAl7wA4Cs9AIAFvQCgIb0AgGI8AMB6PQDgCL0AoEE9AAAuOwCApzwAAKC5AEDjPADA2zwAAGC9AMCHvAAAXTwA4CA+AIBWvAAABr0AADU8AOAWPQAAuDoAAFE8ABCSPQAAkLwAQNU8AMDLvADwrb0AgIW9AOAOPQAAtLwA4KU9AECPvAAApTwAAHa8AADnOwCA1bwAwO88AECDPACAYLwAQNu8AACQugDgpT0=","chunkHash":"b032e5e313b03e6dd2e41b029ed76dfe2fcf0b85de26d64be1bebb5f77be03d1"}]},"file:///teamspace/studios/this_studio/.vscode-server/data/User/History/4ba8fda2/DRNV.py":{"hash":"2cfc9caf87277039a73ef6502e3598395d47b4302d88668327b000c88be43ec8","entries":[{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        super().__init__()\n        c_growth = channels\n        self.n_blocks = n_blocks\n\n        self.knn = DilatedKnnGraph(k, 1, stochastic, epsilon)\n        self.head = GraphConv2d(\n            in_channels, channels, conv, act, norm, bias=False\n        )\n\n        if use_dilation:\n            self.backbone = Seq(\n                #...\n```","range":{"startLineNumber":30,"startColumn":0,"endLineNumber":41,"endColumn":0},"embedding":"AACSuwBwlL0AANY8AADAuQAAwDkAADA7ACAUPQDAzzwAgFy9AECyPAAA7zsAAAC6AABbvABgTL0AAFg9AIDvvADA0bwAQDc9AIDFvACAQ7wAAOI7AACUuwAwrD0AAMW7AECFPACAF7wAALY8AAD2PAAAOrsA4EW9AEClPACAjbwAAJy9AMAtvQCAfL0AQC09AEDhPACADj0AANS8AADQPQAAcT0AWCW+AMCCvQBQyD0AgBa8AIBXvAAQrr0AAFQ9AADAOABAkzwA4Ci9AAASPAAAOjsAAJk8AMCsvQBAQD0A4HI9AADMugAA4LwAgNA8AGAvPQCQoL0AAAG8AIBsPAAAlTsAADA6AGB5vQAgbj0AQNW8AIAOvAAws70AAPu7AICxvABAIb0AAJU8AMD6PAAAgDgAQAk9AECavABQhb0AwOw8AABwvAAA8LoAALQ8AOBFvQCYDL4AwLG9AACcvAAA9bsAgPS8ANCFPQAAADwAYEy9AGBSPQDAXT0AgMM9AEB+PQAAb7wAgCQ9AIAXPABA/rwAYB49AMCWvAAAvDwAAHU8AMAyPQBAWb0AAOo7AIAmvQDA1DwAAHu8AAD2OwBA7LwAoCY9AKAlPQBghr0AgDC8AMDwvACAJL0AAAq8AEBpvQAgdL0AAGe8ANCYvQAAKzwAIFA9AMAMPQAApLsAAE67AABAvABAkLwAABC6AOCNPQBAsrwAYDe9AECRvADgsr0AAKk9AECwvACAjzwAAAW8AKB6PQBApDwAgHU8AIBDvAAwvD0AEOC9AIB0PQDgCr0AAG48AABwOgAQgD0AAG47AMDfvABwqb0AoAW9AOAVvQCgLT0AoB09AIAtvABAw7wAQAg9AICWPQAAqzwAkIi9AKB6PQBAtr0AQB49AOAYvQBA97wAACo9AACovADAD70AICc9AADfPAAA8rsAoA69AKCLvQDwnr0AcLG9AEBcvQDAnjwAIHK9AACcvAAgmr0AgCg8AKCWPQBAjTwAAOc7AADXOwAAjzwAAK48AOBmPQAALDsAMLs9AKDQvQCQmj0AAOm8AAACOwCAFr0AAPa8AABTPACAaLwAUJO9ACA6PQAIHL4AAGe8AADhPABAq7wAAOi6ACA2PQAArzsAAPA8AIAlvQDgRb0AwJq8AADCuwCAV7wAAOQ8AGAXPQCgID0AwMs8AKAkvQCART0A4DI9AADZvABA8DwAsMy9AAB6OwAAeDsAANC5AABdvAAA6LsAAP68AKAOvQAgYr0AQLO8AMDEvABgJT0AQLM8AIA8vQBAxT0AQKI8AGAYPQBA3jwAQPM8AED0vAAAdb0AAHW8ANCYPQAAN7wAIDY9AACFvADA7rwAAKK8AAB2vADAK70AAGa9AJCEvQDgU70A4Hw9AICovACAU7wAQPe8AOASvQCAuLwAAGe8AECFvAAA67sAQP68AIDZPACg170AwMk9AAByuwBAEL0AAJy7AIA9vACAQz0AoBo9AIAQvQBAP70AQDE9ACB0PQAgjD0AQJy8AIDJPACwhL0AQIs8AMCxvACQor0AYJc9AAD0OwAAALgAALC5AAAPPQDA97wAwB+9ALDFPQDAkj0AADi8AGBBPQAALzwAANA5ACAMPQBw1b0AkIc9AAC3OwAABTwAwG49AMARPQCAMrwAgFi8AEBzPQAgMT0AAPe7AKAWPQCArzwAwFG9AOBqPQAALLwAwIy8ACBDvQAASDwAgCc8AADjvAAA2LwAQAs9AEDgPABgIj0AgG48AEDbPAAAmDoAgHA8AIAavABAj7wAQIa8AOBivQCgkT0AAMW7AABCPAAwwr0AABI7AAA/PQBgML0AAOo8ANggPgCAcbwAgHE8APDCPQCAuDwAANQ8AKBWvQAAi7sAAIs8AKApPQDgX70AAPC7AMAxPQAgWj0AIEc9AABCvQCAs7wAgNc8AMAUvQAAADwAAHY7AMCBvQAAgTsAgAU9AADhPAAAojsAAJQ6ACB0vQCAXzwAwE29AFCJvQDQij0AgOQ8AOABvQAAtzwAIAC9AACMugAAMDsAQEK9AEDYvACAlrwAgEo8AIBivABQor0AoCA9AIDsPADQn70AAOq7AIDbPAAA6bsAgC29AGAMPQAAILkAAE09AJDxPQCAOrwAwI68AACWuwAAnTsAoE89AGAZPQDwxD0AQBo9AKBKPQAAmbsAgBg9AIB2vQAAlbsAQGC9AADrOwBASr0AAPa7AEAJPQBA2TwAwKI9AIBRPACgED0AEKa9ADCyvQAA2LoAgN08AAC9OwCA6rwAALE9AECkvAAAUDsAQJc8AIB3vADApTwAQO28AAB4PACASLwAQDk9AAAIPAAASLoAgGs8AMDOPABQrL0AgK28AICePADArTwAQIi8AEBSvQAA7LsAgMq8AICPPQCA9bwAADi7AIBtvACAgLwAELq9AGD3PQBAaz0AACA9AAAWuwBACD0AgHq8AMBXvQCAkDwAAOQ6AADkOgCAHT0AACw7AIDuPACAS7wAAPS6ACADPQAgE70AABy7AMCgPAAAYDkA4Hk9AMBkPQAgLb0AACQ7AICjPAAgET0AwK88AAA8vADAKD0A0Mw9AACVvQBAab0AAMY8AKCBPQBAuLwAgJE8AACBvACAm7wAICI9AMCRPABgrb0AAOm8AIDXvACAkrwA0Ik9AMCBPABgHb0AAPa8AACRPAAAP7wAAGI7AIBDvABAgbwAQKA8AMDxvAAQnz0=","chunkHash":"fe4426fee43fdcb1cf3999ad7dd4faf96bf1fb3d21710a0a5372f8ed0ca4b89a"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n                *[ResDynBlock2d(channels, k, i+1, conv, act, norm, bias, stochastic, epsilon, knn)\n                  for i in range(self.n_blocks - 1)]\n            )\n        else:\n            self.backbone = Seq(\n                *[ResDynBlock2d(channels, k, 1, conv, act, norm, bias, stochastic, epsilon, knn)\n                  #...\n```","range":{"startLineNumber":41,"startColumn":0,"endLineNumber":47,"endColumn":0},"embedding":"AAAAOgDgjr0AgGY8AACNuwAAbTwAACA6ACATPQCAuTwAAHW9AECoPACARzwAABg7AABHvACAI70AQEI9AEDlvAAAmrwAgAc9AADWvACAFLwAAIc7AMCHvACwnj0AAJC5AICRPAAAJDsAgKc8AADxPAAAVrwAgG69AADqPADAg7wAgHC9ACAuvQDQg70AoDE9AIABPQBAFz0AwMa8AGDSPQAQnj0AYB++AIB8vQBw2T0AAFC7AACVuwAQnr0A4DA9AABAOwCAUzwAANy8AABJPAAAmDoAALg8AKC8vQBALD0AwEw9AAAougBAIL0A4Bg9AAA1PQCAhr0AwKa8AECVPAAAMLwAgAc8AJCjvQCAcj0A4Aq9AIA4vABgwr0AACC7AIAtvAAgFb0AAGo8ACAEPQCAIDwAoE09AAA8vADgb70AwPg8AAB4ugAAwzsAgK88AIBevQBoAr4AMM29AICCvAAAsLoAgCe9AOBlPQAAsDkAwJi9AKBePQCgjD0AkME9AOAgPQCAT7wAIEA9AIBCPAAAGb0AwOg8AACUvAAAOTwAAM88AMD+PADAV70AAM07AIBovQAAiDwAgAO8AACGOwCAzbwAAO08AOBBPQBge70AAMa7AMCOvABANr0AANa7AMBvvQDAfL0AgI68ACChvQAAUDoAwBE9AIDnPADAlLwAgFi8AIBVvAAAsLkAgDc8APCBPQDAx7wAAEO9AMCQvADguL0AQKA9AECTvAAAmDsAACi7APCFPQAArTsAAMw6AIBqvABw1T0AoN+9AGBMPQCA0LwAgFA8AACWOwBQkD0AAFg7AEDJvAAwnb0AQPy8AIAZvQBgKD0AAE09AIB7vACAw7wAACE9AACiPQDAzTwAUIS9AKA+PQBgrL0AgCE9AMAbvQBA/bwAgDc9AADKuwBgT70AYDU9AADyPADAhLwAADO9ANCGvQDQnr0A4Ki9AAAqvQCAQzwA8IG9AIB7vABAfr0AQK08AKCtPQCALTwAgEg8AAADPADAqzwAYBQ9AEBkPQAAMjwAoL49ALC1vQBgez0AwJy8AABeOwBgX70A4CC9AABqOwAAB70AEJK9AGAwPQCADL4AgJq8AEAOPQAAcLwAACq7AAAgPQCADTwA4Ag9AAA0vQAgN70AwPG8AAC8uwAAa7wAgJY8AKAQPQAgST0AwKc8ACAkvQDgWj0AwPU8AAD7vAAA2zwAoL69AIBHPAAAibsAAPi6AADruwAAkTsAIB69AAC9vADAWb0AAM+8AMCtvABgHj0AgMY8AAAmvQAQzj0AQJY8AAAjPQBAxTwAAG88AADUvAAgVb0AAMq7ABCdPQAA0LoAIEI9AAAVvAAAnrwAAKm8AACNuwAACr0AgFi9AMCRvQAAUb0AwCI9AAA9vAAAv7sAgF+8AKAnvQCgAL0AAIc7AAAuuwAAsLsAAD+9AIDkPABg0r0AgL09AIAAvABAC70AADg7AADauwDgOT0A4Co9AICfvACgGr0AwA09APCKPQAAiz0AwMq8AICIPACQpr0AQCo9AEC+vABQpb0AAJQ9AICwPACAaLwAAJI7AED6PADA3bwAoEG9ADCrPQDQsD0AgH68AGBTPQAA2DoAAAE8AIAdPQDAt70AwC89AABcPAAA6TsAAIU9AOAXPQBAg7wAQJe8AMBePQAAAj0AAL67AAB7PADAsjwAYH29AKCEPQAAqLsA4Ce9AIA3vQCAQTwAgJA8AAC1vADAoLwAgMQ8AIDHPACAKD0AAKU8AACtPAAAtLsAgIA8AACruwDAo7wA4AG9AGCTvQCgmz0AgJy8AAA9PACQt70AAG48AMA9PQBAD70AgIY8AHgaPgAAfLwAgJI8AFCoPQAAQjsAoAA9AMBlvQBApLwAAPA6ACA4PQBgf70AgDW8AKBVPQBAMT0AIEo9AIBJvQCACLwAYBQ9AKAEvQAAKDwAAMw6AKBhvQAAYDoAwOs8AEDuPAAAGTwAAIi7ALChvQBAxDwAQHO9AICEvQCArz0AgAQ9AMDkvADAmzwAgO+8AADUOwDAlzwAsIW9AMDZvAAAOrwAAMA5AADjvACgqr0AgPw8AADXPACQpr0AAJi6AIDRPAAA1LoAADu9AADSPAAAkDsAwCU9AMDYPQAA+LsAgGq8AACFOwAA5bsAgE49AED6PADAqz0AQOs8AMBEPQBAiLwAwDU9AKB+vQAAi7sAYCq9AICKPABgc70AgB68AADMPACA/TwAsLQ9AAB1PADA5DwAgKy9AHCmvQAAITwAAA49AACcOgBgHL0AILE9AMDFvAAACLoAQM88AAAevADAtjwAQMa8AICuPABAvbwAoD49AABZPAAAfrsAwAk9AADoPAAgs70AwJ68AAA2PAAA7zsAQJW8AEBzvQAAmjsAACm8AJChPQAA67wAAIi7AIAjvAAA2bsAcMi9AIgGPgCAfz0AwO48AAB8OwDgMT0AQI68AMBpvQDAjjwAAKq7AAC3uwAAGD0AAMQ6AMAlPQCAMbwAAF67AEAAPQAApbwAgCK8AICqPAAAWDsAgF89AOBUPQBgVb0AgJU8AIAEPAAAtzwAgLc8AABpvABgBD0AYOQ9AGB7vQCgTb0AQIk8AABmPQBAprwAgHU8AIBRvAAAl7wAgDM9AABdPACQoL0AwCW9AGAJvQDAubwAIJM9AICRPABgG70AAPm8AICmPACAHbwAAE48AADfuwCATbwAgNw8AMDbvACQoT0=","chunkHash":"a40b80d5a178a30a9d3829364cb6f5eb3e85ce02ce9ed14b3668bff41408485e"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n                  for _ in range(self.n_blocks - 1)]\n            )\n        fusion_dims = int(channels + c_growth * (self.n_blocks - 1))\n\n        self.fusion_block = BasicConv(\n            [fusion_dims, emb_dims], 'leakyrelu', norm, bias=False\n        )\n        self.prediction = Seq(\n            #...\n```","range":{"startLineNumber":47,"startColumn":0,"endLineNumber":55,"endColumn":0},"embedding":"AABCuwAglr0AwKQ8AADguwCAPDwAADq7AAAVPQCAxjwA4Fu9AECQPAAAvDsAQJ68AAAuvACgRL0AYDU9AICnvADA1rwAoDw9AKAOvQAAjrsAAPG7AACXvADQjj0AgD68AAD6OwBAjLwAwK08ACAvPQAAXrwAID69AAD8PACAR7wAIHy9AIBKvQBQiL0AAA89AKA8PQAgWD0AQAe9AODdPQDAZj0AQCq+ACCNvQAA1T0AAFg6AIBWvAAwn70AgCU9AIBPvABAwjwAQOi8AACHOwAAqLsAYCQ9AFCsvQCgPT0AoGY9AAAeuwDAEL0AAJs8AEAlPQCAob0AADi6AAAuPAAAJzwAAAS8ACB0vQBAlT0AgEq8AIBAvACQ1b0AAE68AACQuwCA6bwAgE88AGAZPQAAkDoAAD89AMDKvADAY70AAOg8AIBrvAAA4LsAwM88AIAwvQBICb4A8LS9AACwvACARLwA4AO9AEBbPQAACDwAEIy9AAB1PQDAVD0AgMs9AGB3PQAARrwAoFU9AEC+PAAAML0AQNw8AIAwvAAAMzwAAKs7AEAEPQBASr0AALS6AABLvQAAyjwAAJg7AAAwOgCAC70AwPM8AAD8PACggr0AAI87AEDWvACgKL0AAK47AHCMvQCAiL0AgLO8AJCWvQAAlTwAAC49ACASPQBA0LwAANu7AMC5vAAACrsAAL27AJCePQBAjrwAADW9AMDwvAAAlr0AsLA9AAAAvQCAYzwAANC6AOB/PQDAlzwAAKQ7AAClvADAyT0AYOy9AABOPQCA8LwAgHo8AIAEPACgaT0AgBC8AEANvQAAn70AYAO9AIAPvQDAYj0AgB89AEAGvQAAsLwAgCc9AHCmPQCAHjwAQFC9ACBUPQDwvb0AQCA9AGBAvQCAzrwAYEQ9AAC7uwDgP70AoDQ9AMCwPABAtLwAwOu8AHCyvQBQmb0AQMS9AGB5vQBAwTwAgHK9AIBkvAAgl70AgKo8AOB5PQBAszwAAPA7AADAOgAAfzwAQOw8AOBePQAAojsAAME9APC1vQCApz0AAPa8AADxOwAALb0AgO+8AIClPABArrwAoKG9AIA0PQBgIr4AQKK8AAADPQAA+rwAAMQ7AGAdPQCAgDwAIBI9ACAPvQCAZb0AQJi8AIBEvAAAzrwAAG08AOAIPQCAIT0AQJc8AGAQvQAAID0AAHc8AMC6vAAgAj0AUMC9AACeuwCATjwAAM67AMCpvAAAPLsAYCu9AAAOvACAXr0AAD68AACkvADgGD0AgLI8ACArvQBQ1T0AgCQ8AIDLPADAojwAwNs8AMCJvABgUb0AADk8AJCXPQAAJDsAwC49AADwuwCA27wAQJ28AMCUvAAApLwA4Ey9AECMvQBAYL0AYFQ9AAD9vABAubwAYAy9AKAVvQDArLwAAGm8AABLvAAAAbwAYFu9AMCWPABw1b0AIL49AACpuwBgAb0AAOw6AAARvAAgQT0A4Aw9AAB0vADgOr0AIAM9ACBkPQCQlT0AgHy8AAC2PACwh70AAPo7AKAGvQDQm70AwHM9AACwugAAXbwAAIS6AIA3PQCAJrwAACq9ALC3PQDQlT0AAJa7ACBFPQCAETwAADw7AMAuPQBQyb0AwF09AIAhPACADDwAQGg9AMC5PACAorwAgGG8AEB3PQDgDD0AgD+8ACApPQAAVjsAIDu9ACB+PQAAKbwAAKG8AOBNvQBAkzwAgDU8AMCmvABAk7wAgNY8AADFPACAIj0AgGc8AKAJPQAACzwAAKg6AICSvAAA8bwAgOS8ACB0vQBAbT0AAA+8AIBIPAAQsL0AACo7AMAOPQDgVr0AAN08ANgWPgAAIrwAgGM8APDsPQCAgDwAAGk8AMAKvQAAEbwAAIw6AEA3PQDgcb0AADe8AEAzPQDAXj0A4HY9AOBwvQCAFLwAADU9AMABvQAA9TsAACI7AIBkvQAALDsAQPs8AIDwPAAAdLsAAAO8ALCBvQAA3jsA4Fy9ALCAvQBQhj0AIAc9AACcvADAmzwAwNO8AIANPAAAoLkAwCy9AADlvAAAursAgBO8AMCCvACQlr0AYB09AIC6PAAAq70AAOC7AABXPACATbwAAAi9AAApPQAAuDoAQEs9ALDbPQDA27wAAL68AAB8OwAAIrsA4EM9AAAgPQDQ2T0AwPU8ACBkPQCAYrwAQEE9AECMvQAA+7sAoFG9AAAKPACAT70AABO8AIDiPACAyDwA4J49AABhPABA7DwAcKS9ALCDvQAAbTwAgKc8AADXOwCA+LwAsLE9AMDsvAAA/LsAgFA8AAAXvACAZDwAwLG8ACACPQAAY7wAgC49AADCuwAAjDsAAI88AADJPADwmb0AwOG8AAC8ugCAEDwAANK7AEB8vQCAGzwAAFe8AFCfPQDA8LwAAMg6AICovABApLwA4Me9AID5PQCAZT0AoDk9AACQuwCAOj0AgFi8AMBtvQCAhTwAAC08AADGuwCA5TwAAAi7AKAZPQCAWrwAAKg6AMAXPQCAh7wAADE8AED5PAAAkrsAwGI9AKBOPQCgEb0AAAQ8AIDPPAAABz0AgMM8AICLvADAqzwAoN89APCDvQAgXL0AgIw8AMBWPQAA3DoAgDg8AAA/vAAAm7wAwA49AIAkPADQob0AIAO9AADTvACAJ7wAMKA9AEChPAAAPr0AYDi9AIArPAAAXDsAAGo8AADSuwDAt7wAwKU8AAC8vAAAnT0=","chunkHash":"feb11194c8e0c14334b2ec7b8ac592890dacc375606d689187d3607dfefee6fe"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n            *[BasicConv([emb_dims * 2, 512], 'leakyrelu', norm, drop=dropout),\n              BasicConv([512, 256], 'leakyrelu', norm, drop=dropout),\n              BasicConv([256, out_channels], None, None)]\n        )\n        if projection_head:\n            self.projection_head = nn.Linear(out_channels, 64)\n        else:\n            #...\n```","range":{"startLineNumber":55,"startColumn":0,"endLineNumber":62,"endColumn":0},"embedding":"AICgvADQqr0AwMI8AAB3vACABjwAAIw6AKANPQCA9jwAYGK9AICpPAAAqDoAAO27AADmuwBA5rwAQBU9AEApvQCAoLwAgEM9AIDVvAAAI7wAANc7AIALvACQjT0AAIA5AABvPACALbwAQLg8AMCyPAAA2rsAoBK9AEDKPABAqLwAMIe9AIBVvQCwk70A4B89AOBAPQAgKT0AQOu8ANDAPQDgkT0AKBm+AMCEvQCQtT0AAHy7AADMOgCwj70AgDI9AAAYugAAWDwAAAq9AAAiPAAAnDoAgOs8ALCXvQDATT0AgF09AIAAvAAACb0AANQ8AOAQPQBwmb0AAIi8AIBVPAAAYLkAgCi8AKB/vQAAiT0AQNK8AAD9uwDQtb0AADO8AAAYugAAEr0AwIw8AAD1PAAALDwAQA09AEDgvAAAb70AoAo9AIA6vAAAhTsAgLw8AGCEvQDoCb4AUMa9AIDDvAAArLsAQNu8AMAkPQCALbwAsIy9AIBWPQBgZj0AQLU9AMBTPQAABrwA4Fk9AACxPABAE70AQPQ8AECXvABApjwAAM08AAAqPQDgPb0AAKS6AIAnvQBA2TwAACA6AADJOwAAy7wAgDk9AMDXPABAUb0AAKe7AIAlvACAQL0AgAu8AKBPvQDwgL0AgBW8ANCqvQAA/TsAID09AEDIPAAA1LwAAAC5AIB7vAAA8DkAAK87ANCcPQCAsLwAQDm9AEC4vAAgq70AAJY9AIDqvAAA1DsAABy7AAB2PQBAgDwAAE88AAB9vADwxj0AoNu9AEA1PQCAtbwAgBY8AAAUOwAggj0AAB47AADxvAAgqr0AoCO9AGABvQAgYz0AQDk9AADuvAAAVLwAACo9AOCiPQBAwTwAoG69AGBMPQAAlL0AICc9AED0vACA07wAgAw9AIBYvADAFb0AICs9AICiPADArLwAgOe8ABCcvQCQoL0AYMm9AMBxvQAA3jwAoF+9AIAqvAAAmb0AgHw8ABClPQCAiTwAgEI8AADvOwAArDwAQNs8ANCSPQAAlLoA8L09ANC+vQDggz0AQPm8AAAQOgBwgb0AICe9AACuOwAAMLwAAGO9AGA4PQBoEb4AAAI7AMDKPABAjrwAAKC6AEAjPQCAVjwAoA09AAAlvQBAfb0AwJq8AADiuwCAW7wAAL08AAAlPQCARj0AgOQ8AOArvQAAJj0AwPg8AIDLvAAAAD0AUNm9AABWPAAADjsAAIA5AABWvAAAtDoAQCG9AMDdvABAf70AgM68AACRvABAQj0AAK48ACAgvQDg0D0AAOI7AEAZPQBAvjwAgLA8AECWvAAAP70AANO7AHCSPQAAyrsAYF49AIBevADA2rwAAHS8AIAKvADA+bwAwHC9ALCPvQDger0AAGs9AEDtvAAAiDoAAKq8AIDtvAAA6rwAAA28AAAcvACAfbwAADi9AADMPAAA470AwNg9AAD0OwAgI70AAAA6AADMuwCAOz0AgCU9AED9vACAIL0AYAQ9AEBMPQCApj0AgFm8AACoPADQkr0AwKs8AMD/vACgvb0AUI09AAB+OwAAvbsAAHa7AEARPQCAs7wAYBG9AEC+PQDgrz0AgIG8AMBpPQDAnjwAANw6AMAiPQDwyr0AAGU9AIB2PAAABTwAAJY9AIC1PABAyLwAAEe8ADCGPQCAJz0AALC5AIDJPAAAEDwAADi9AGBVPQAAQ7wAYAW9AABkvQBAhjwAAGU8AMDevAAAd7wAAJQ8AADbPADAOT0AgKM8AEAGPQAAubsAgDo8AIA2vACARLwAAOq8ACCjvQAQjz0AAOi7AADWOwAAwb0AAPU7AMBOPQDA/bwAAI08ADgoPgAAW7wAgCw8AKDRPQBAwTwAQIk8AGBXvQAAj7wAAFc8AIA1PQDgfL0AADC6AMA3PQDAVz0AgHY9AGBJvQAAG7wAANo8AADrvAAAlzsAAKw6AOBuvQAAA7wA4BA9AADoPACAlTwAAAy7AOCHvQAAzTwA4Ga9ACB7vQDAkD0AABk9AAADvQCAIzwAAM68AECIPACAEzwAAHe9AAC2vAAAWLwAAI07AMDLvABAlb0AwBI9AMDVPADQqL0AAES8AECLPAAABbwAYBy9AKAPPQAAzrsAAB49AMDQPQAAbbwAgIS8AAC4ugAA9bsAgCg9AMARPQBgxz0AYBA9AMBSPQCAFrwA4Cw9AMBpvQAAAbwAQES9AAAuOwCAb70AAJC6AKAEPQCA0jwAQLY9AIDhPAAADz0AIKO9AACDvQCAdDwAQOc8AIA4PACgKL0AoJw9AEDwvAAA7bsAgEM8AIB4vACAsjwAQOm8AECtPAAAfbwAQDY9AAA4ugAAKTwAwLQ8AMDWPACQtr0AQMm8AEDnPAAA3zsAQIy8AABbvQAA/LoAgDW8AKCJPQAgF70AAAC5AIA6vACAnrwAcNm9ANADPgDwjj0A4As9AABOuwBA/zwAwKi8AKBrvQCAejwAALs7AAAMuwAgAj0AACi7AGAWPQAAgDgAAJS7AIAaPQCAGbwAgEC8AIDNPAAA+TsAwF09AGBXPQBAPL0AAKQ6AEC5PACA8DwAwMA8AECnvAAA4DwAIM09AACWvQDgWL0AgFY8ACBgPQBAuLwAgD88AICivACAlbwAgB89AICAPACApb0AwP+8AACYvACAl7wAUIU9AACsOgBAH70AgOO8AEDhPAAA5LoAgJc8AMCVvAAAQbwAgEg8AEDjvADApT0=","chunkHash":"2ad7587e911100f349825d9480efed11b696ad2dc28b65942cf25f271f3d7757"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n            self.projection_head = None\n        self.model_init()\n    #...\n```","range":{"startLineNumber":62,"startColumn":0,"endLineNumber":63,"endColumn":25},"embedding":"AAB9vAAgjr0AAJg8AABmuwAAwDoAAJA6AAAZPQDArDwAAEW9AECgPAAA7DoAAKS6AADMOgAgEb0AAAw9AIAavQDArrwAoFs9AMADvQCAVLwAADC6AADwugBwiT0AALi6AABWPAAADrsAAOY8AICvPACAA7wA4B+9AIA2PAAAqrwAUJW9ACBDvQBwlL0A4AY9AAAZPQBgGT0AABu9AGC+PQBAeD0AOCK+AKCCvQDQ6D0AANA6AAAKuwAQjb0AoDM9AAArvAAAPTwAgPK8AAAIOgAAcjsAwPE8AOCavQDgOD0AYHY9AAD6uwDgFr0AQN88AMAcPQBwsL0AwIq8AICDPAAAiTsAwJC8AKB9vQDgcz0AoA29AIBcvAAgxL0AAPO7AABXvABA8LwAgGA8AMDmPAAAAAAAQFY9AAC4vACAQr0AgNc8AAAUvAAAajsAQLo8AIBsvQAICr4AkMK9AABmvAAARLwAQAi9AAAmPQCAE7wAYIK9AMBhPQDAiT0AYLY9AABHPQAApbwAQFw9AABuPACAFr0AABA9AMCUvACgDz0AQMc8AMAbPQBgKb0AABq8AGAdvQCgBz0AAOi7AACgOwDA27wAoAY9AECXPABAaL0AAEK8AICMvADgNL0AAF28AGBBvQBQhr0AgDm8AECovQAAujsAoCM9AADkPACAxLwAAB47AICBvAAAjLwAAJa7AICcPQCAwLwAoDW9AAD4vABwmL0A0KY9AGADvQAAETwAAJW7AIBzPQCALTwAgJQ8AIByvACgtz0AcOO9AMBTPQBAq7wAgGs8AACNOwBAbT0AAFM8AADAvABQq70AAN28AEDovABgOz0AQEA9AAD7vAAAWbwA4Co9AGCkPQAAozwAAG69AIBWPQCAtL0AwDk9AIDYvABgAL0AgAg9AADUugDgHr0AACo9AED1PAAAl7wAALS8ADCavQBApb0AIL+9AACDvQCAOzwAwHm9AIAXvADAg70AgIk8ADCcPQAAkDwAAEA8AAAmPAAA4DwAAM88ALCMPQAAfDsAEMs9ANC6vQDgcz0AIAa9AABgOQCgPb0A4C29AIAfPAAAsLwAYFm9AIA2PQB4Gb4AAIC5AOARPQBAyrwAAPA6AOAIPQAAPrsAgAw9AMBCvQBARL0AQLq8AAAPvAAAzbwAAPI8AGAFPQCgYj0AQLM8ACAhvQCgJT0AQOg8AACkvAAgCz0AUM29AIBrPAAAFDsAAEg7AAA6vAAA1zsAwAS9AECpvABwir0AwKO8AIDAvADAOT0AgKY8AIAmvQCgyj0AAIA7AMDOPABA0jwAwNI8AICPvAAATL0AAIO8ACClPQAADLsAIFw9AMCZvADAv7wAADi8AADuuwCgDr0AAFq9ABCPvQAggL0AwFE9AICzvAAAt7sAAIW8AOANvQCA4bwAAEy8AIByvAAAoLwAgD69AMD+PABg7r0A4OE9AACROwBAKb0AAFI8AABwuwCgPj0AYBQ9AMD4vADABb0AgNQ8AABePQCQrT0AQK68AIDcPACQiL0AoAA9AKABvQDQwL0AYIU9AADVOwAAWrwAgAO8AGAjPQBA5bwA4EC9AGC2PQCQlT0AwKe8AAB5PQAAWDwAAAC6AIAPPQCAz70AYHw9AMCsPAAALDsA0J89AOAAPQBAkbwAgC68ACBjPQDAFj0AABi6AIDxPAAA3zsAYBC9AEBYPQAA4DsAADS9AMBovQCABjwAANA7AIBavADAgrwAAI48AEDMPABAIj0AwM48AEDJPAAA/LsAAPU7AAATvAAAYDoAwN28AEClvQCwhD0AAOA5AACyOwAQur0AANi6ACAkPQCgBr0AAGo8AHgbPgBAyLwAAFw8ANDAPQBAkzwAwMY8AEBUvQCAMLwAACc8ACAjPQAAa70AANC6ACA+PQAgRT0AoG09AGBOvQAAMLsAQOc8AEDxvAAA7jsAAGK7AFCBvQCAR7wAQOY8AIDaPAAA+jsAAJC6AICPvQCAqTwA4F+9AHCNvQBgpz0AgC09AICrvAAAizsAAIy8AACxOwDAhzwAoIC9AMDCvABAjbwAAPQ6AADgvADggr0AYB89AIDmPADAm70AwIS8AMCjPAAAejsA4B69AEAWPQAAULsA4Bw9AMDdPQAAsbwAwKu8AABCOwCAGjwAgEY9AAAAPQDwvD0AwOQ8ACBSPQBAk7wAoDk9AKB/vQAAGrsA4AG9AAAGuwCwkL0AANA6AMDvPADA0jwAELo9AADZPAAACz0AUJS9ADCYvQAAxjsAAMw8AABmOwCAGL0AULE9AICQvAAAx7sAABM8AAB1vACAqjwAQJG8AIBjPABAkrwAABE9AADHOwCAbjwAgNc8AADjPAAQnr0A4Ai9AIDAPAAAtDsAAGW8AGA8vQAA6LoAgE28AJCOPQBgNr0AAHq7AAACvAAArrwAoM29AIgJPgCghT0AIDA9AACwOgCA9TwAAB+8AOBfvQCA7DwAABA6AADgOwBA/TwAADc8AEDnPAAAKDoAABy8AIDkPACAd7wAAKq7AMAFPQAAALoAIEk9AKBJPQDAOr0AAAC4AICoPADA1DwAwLQ8AADouwAA6DwAoOc9ADCbvQBAWb0AAAY8AIBuPQBAp7wAAAU8AIC8vACAlLwAgA49AIBlPABgoL0AQOW8AEDMvADAgbwAkIc9AIBZPABgKr0AwBS9AMCnPAAA+jsAAEY8AABauwBArrwAgNw8ACAgvQAgqT0=","chunkHash":"c0654c0010423a9937834d8cd46e49e970de048c10ae4d20a73464591db73229"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def model_init(self):\n        for m in self.modules():\n            if isinstance(m, torch.nn.Conv2d):\n                torch.nn.init.kaiming_normal_(m.weight)\n                m.weight.requires_grad = True\n                if m.bias is not None:\n                    m.bias.data.zero_()\n                    m.bias.requires_grad = True\n    #...\n```","range":{"startLineNumber":65,"startColumn":4,"endLineNumber":72,"endColumn":47},"embedding":"AEDQvADgPr0AAFg8AED8vADAlDwAACg6AEACPQCQlz0AQCa9AACsPAAAEjsAACc8AAAsvADAML0AQNE8AIDdvACAF70AgFI9AID6vADAizwAALi7AAAouwAAYj0AQME8AIB0PACACjwAAHs8AADiPAAAMrwAAFO9ACAvPQCA8rwAUJu9AABCPAAA07wAgLE8AJCMPQBAYD0AAMq8AIBpPQBAYT0AiCy+AACJvADQwT0AAFy8AIAavADgpr0AQKQ8AACkuwAApzsAADG9AIC4vABAsTwAAMo7AOCwvQAADj0AAHA9AACSOwAAGr0AQCs9AMD4PAAwnr0AAGI7AKAfPQAAXDwAgEy8AEBJvQAAID0AoBO9AGASvQBQ270AAGK8AAA0PADghb0AAIO7AMCMPACAtjwAAGQ9AADbuwCAFr0AQK48AAAaPAAAVTwAAIs7AIAqvQDYF74AIM+9AADoOwAAmLsAwOC8ACA4PQCAVbwAACC9AIBAPQAQhz0A0LY9AIAHPQCAPrwAICM9AIBcPACAPL0AAIw8AECfvACAGj0AgIs8AKBmPQDA4rwAAKq8ADCbvQAAGz0AACO9AACcugDAubwAYBU9AAAjvACgVL0AALC6AABouwDAwbwAgAa9AMA9vQCAPb0AgPe8ADC8vQDAgTwAABU9AADEOwDAr7wAAP87AAB7vAAA2bwAQMW8AGCqPQCAEL0AgLm8AACVvABwxr0AAKU9ACCBvQAAXTwAAOC6AIAzPQAAAAAAwEY9AACRvABwmj0AwLC9AEAXPQCgA70AgDu8AACUOgCA/TwAAD+8AAAJPACAqb0AQK68AECuvAAwkz0AwEk9AAAivQAAKb0AYE89AGBlPQAAmbwAEJW9AOA+PQCgm70AAMQ8AGAdvQCAU70AAHc8AAC+OwCgKb0AwMQ8AADdPACAW7wAAAq9AKBqvQCAsr0A0LW9AKAOvQAAILoAoIO9AIBKvADgKb0AgCk8AOBaPQCA1zwAAOg6AACtuwCA5zwAQJ88AIB6PQCAZDwAsIQ9AKBzvQAAHD0AwPy8AACBOwDgA70AADS9AEAkPQAAELoAQG+9ACB5PQB4Bb4AAPg6AABCPQAAyLwAAKi7AEAdPQAgFT0AwMI8AMBTvQDAI70AANC8AAD0OgBAubwAAFE9AIBFPADgJD0AwO08AAA3vQBADz0A4E89AIBZvADAPD0AsJW9AADfPABgIT0AAHg6AAAsvACAhjwAAFK9AMChvAAwp70AAGC8AEDUvAAgWT0AwJ48AGCIvQAwvj0AgIE8AADCPADAiTwAAM87AADQOgDANL0AAGm8ADC/PQBAkzwAoBE9AABwugCArLwAgEO8AAAEuwAAsb0AQBC9AIAqvQCwt70AABA9AGAFvQBAtLwAAIe8AKAfvQCgJ70AALQ7AAAPvQAANrwAAOi6ACB8PQBw0b0A8N49AACfPADA0LwAAGI7AIBkPAAQjT0AwBM9AICCvQAAm7wAgIE8ACCYPQBwhj0AwLi8AOAjPQAgh70AYFU9AMBFvQAw9L0AoDo9AICnPABAu7wAwPa8ACBGPQAA/LsAQNO8APCdPQBAhz0AAIA6AIBXPQBAmDwAAN+7AEAiPQAw4L0AQF89AAAoOwCAuLwAAJs9AKBPPQDA9rwAAPW8AEBVPQBgOj0AABi8AAAgPAAAQjsAQKO8AABbPQAAoDoAgMe8AID/vAAAejwAAGK7ACADvQBAgbwAIAs9AICkPAAAiD0AIBc9AEC+PADgBz0AAFq8AAB6PAAA/zsAAPW8ACCZvQCgnz0AABS7AIAtPADgu70AAGW8ACA7PQDgO70AAF48AIAJPgAgSr0AQIs8AMBhPQCAfDwAQIU9AOA+vQCAt7wAAFG8AAAuuwBAa70AABW8AMBePQBAlz0AYEo9APCMvQBAnDwAoAo9AEALvQAA0zsAAEA8AMCPvQAAYbwAwCU9AIBhPACAMDwAgJ68APCPvQAAgTwAgEy9AMBbvQCAND0AgFw8AIB5vACA6DwAgJe8AICRPABAyjwAQE69AMC+vAAAB70AAFg8AIARvQDQlb0AIAs9AIARPQAQzL0AAKu7AED+PAAAqrsAgJC8AADdPAAAlLwA4Ds9ABC9PQDAvLwAAC67AAAAugAAOLoAIEs9AOCAPQDQlD0A0IA9AABdPAAAeDwAwJk9AABNvQCAULwAwBu9AMCPvADAnL0AAEW8AMCZPACA/zwAUIw9AECFPAAA+jwA4Du9ACB6vQAAxTsAIBw9AACTOwBA7bwAAJo9AADovAAAcLwAACC5AICbvADghj0AACI7AAA0uwCAErwAgDE8AABNPADAzDwAAFo8AEC0PAAgrb0AQIe8AIBnPACgBL0AgBi9ACAuvQAA6DoAAE28AFDmPQBgU70AAIY7AAD4vABAhLwAMOC9AGDLPQAAOj0AoAY9AAAAuQCA0TwAAEi7AMCRvQDA8DwAgN08AADduwDAXz0AABw8AKAlPQAAALwAACA8AKADPQAABLwAIAC9AAA6PAAA4LkAIG09AAAjPQDgIb0AAG48AAAyuwBAST0AAIK7AAANvACgRj0AuBk+AGCevQBAybwAAIC6AOBUPQAAPb0AQJ88AACYvADAnLwAoAs9AECLPAAAfb0AgNC8AEAOvQAAkLwAoHE9AIBfPACgTb0AIFa9AAB+PAAAn7wAgB89AABQvAAAursAAIE7AMD6vAAAXT0=","chunkHash":"7ad4ffdb7434fe9ba8e4ae77d8ba37ea72cdec7c5bd24e58550601a52b7c8067"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def forward(self, points, features):\n        # Ensure correct shape [B, C, N] without the extra dimension\n        if len(points.shape) == 4:  # If [B, 3, N, 1]\n            points = points.squeeze(-1)\n        if len(features.shape) == 4:  # If [B, C, N, 1]\n            features = features.squeeze(-1)\n        \n        # Don't unsqueeze again since we're ensuring the format is correct from our adapter\n        # points = points.unsqueeze(-1)\n        # features = features.unsqueeze(-1)\n        \n        feats = [self.head(features, self.knn(points))]\n        for i in range(self.n_blocks-1):\n            feats.append(self.backbone[i](feats[-1]))\n\n        feats = torch.cat(feats, dim=1)\n        fusion = self.fusion_block(feats)\n        # Only use global max pooling as per paper\n        #...\n```","range":{"startLineNumber":75,"startColumn":0,"endLineNumber":92,"endColumn":0},"embedding":"AAAyOwCgmb0AQBo9ACACvQCAerwAQDG9AEAQPQDAFT0AoF29AAAZPQAATTwAwOK8AIAxvQAASr0AwA49AMDBvACApbwA4Ak9AACgOQAAmDsAgMa8AIAWvACwiz0AAFY7AACBuwAAfLsAANc8AIAHPQAAgTsAQBu9ANCGPQAAo7sAMIe9AICOvABAPb0AQDM9ACAhPQCwiz0AYD29ADC6PQBgrT0AqBK+AKBuvQAgej0AAFw7AEDovACgb70AwJc8AAAuPADAJj0AwBa9AKAVPQAA/jsA4Ak9ABC7vQDgZD0AgHY9AAC+uwAACr0AoD49AIA2PAAwv70AAI+7AACxPAAA8jsAALu7ACBXvQCAeT0AABS9AACqvAAAlL0AgGQ8AIDVPADAGL0AgF48AAAYOgCAADwAoF49AAD0uwDgQ70AAIM8AAAqOwAAgDgAAMo8AIBWvQBwCr4AgG+9AACQvACA+bwAwKq8AGBlPQAAgTsAEJu9AGAvPQBQgj0A8NU9AKACPQAAl7sAgGA9AABcuwAABL0AAL48AMAavQCAAzwAQLE8AADgOQBgar0AAAi8AEBovQDA6TwAwGK9AICkPABAzbwAAPw8AMCaPAAAiL0AAEa7AICCvAAAwbwAgJo8AEA5vQCAUL0AYDG9ADCGvQAAYrsAgLQ8AIBdPQAAWbwAAPe8AIAavAAAAzwAoAe9AECdPQAAiTsAAHi9AKACvQBAnr0AYLM9AAD0vADAvrwAAG67ABCOPQAAUjwAANC6AAAIPADAjT0AEPe9AOAkPQCAuLwAQL48AADwOgAADj0AwLg8AIC4vAAw0L0AwCK9ACBmvQDgXT0AoAY9AIDcvACAzbwAAHo7AKCJPQCAPDwAQEK9AOAEPQAgw70AAN48AGB7vQDwgL0AACM8AKBAvQBARL0A4FI9AEBPPQCA/LwAAPK8AOClvQCAUr0A8LC9AEBFvQAAoDkAIIW9AECmvACwob0A4D89AADSPACAMD0AAOA6AAAuPAAAdLsA4II9AAAiPQCAnzwAQJE9AACPvQCwgj0A4AC9AIA7vADA+rwAwDS9AECJPAAAzDoA4JW9AMCHPQCgF74AACK7AMAYPQBgU70AAMQ7AMDEPACA7TwAwAc9AEAkvQBgQL0AQJa8AACFuwCAPbwAAEM8AABtPAAgOj0AwP48AIAxvQAAxTwAgM08AKAvvQCA5TwA8J29AADTPAAAWDwAwNC8AMDgvACAjDwAgGu9AAD5vACAeb0AgAO8AABzvQCgCj0AwAY9ABCXvQAgpD0AALE8AMCaPAAA1zsAACg8AIC4vADgDb0AQLI8ADCIPQDAvjwAAAU9AIC9vACAaLwAAIW7AMCovADAyLwAYGO9AECpvADQrr0A4Ek9AICfvAAARL0AwMm8AEBivQCAoLwAALe7AMCNvAAAZbwAQL28AABWuwBgk70AILE9AADcOwCA8bwAAMY8AIAcvABAZj0AgFw9AGBzvQDgIL0AAMQ8AKCOPQCATT0AgB28AAC0ugCgbL0AYCM9AACMvAAwur0AwG89AIDyPAAAf7wAAAg8AKB7PQAAXrsAIHa9ABDmPQAwzj0AQNS8AIBMPQBAnrwAwLg8AKBcPQCgvb0AACU9AIAFvACA27wAgFQ9AMDSPABgDr0A4Di9AKBnPQCAHjwAgAO8AAAjPABA8jwAwCm9AMAlPQAAkbsAgJO8AMA2vQCANTwAgKk8AACHOwAA67wAAOU7AECtPADA0TwAAIU8AIAZPQCANDwAgGi8AAAgOgBAh70AgEC8AGB4vQBAej0AAMq7AKArPQCwxL0AgFi8AOAHPQBAUL0AQJI8ADgvPgAA8LsAQAE9AIB4PQCAerwAgKg8AEBJvQCATDwAgIU8AGAdPQBAdr0AQPi8AMBGPQDA9DwAQBg9AOCMvQAA1zsAYCk9AAD6vAAAHrsAADK8ADCMvQAAjDsAwBA9AMDjPADAHb0AQJM8AGB4vQAA2rsAIAu9AOAfvQCgTj0AwBQ9AMCavACAMDwAAGq8AAB4PAAAD7wAQC+9AICJvAAAKTwAAAU8AABkvADAzb0AAPI8AICGvACAmb0AALW8AICePACAe7wAACW9AMA+PQCAA70AwBw9AEC0PQCA/rwAgO68AABkuwDAE70AwGs9ACAjPQBAsD0A4D49AIDIPAAAGrsAAPw8ANCKvQAAHbwAgHe9AIA2PACgDr0AAK68AEDEPABAmTwA4JU9AICYPAAwjz0AIDu9AIBjvQDArDwAAF47AABougDAqrwA4KU9AAC4OgAAWLwAAJY8AIA8PACA+jwAgG68AABAPACAeLwAoGQ9AMCTvAAAsDwAAGY7AADFvAAAo70AgGm8AAAMPAAAU7wAAK28AMDHvACAITwAAAO8ANDXPQBA7rwAAMI8AIDFvADAKr0A4Oy9AND4PQBggD0AQEU9AAA1vABgcz0AgAC8AAB9vQCA5DwAoBM9AADWOwBgDz0AQJ08AMCKPQCAILwAAAA7AGADPQAAirsAADq7AMDKPAAAjrsAIGk9AKBkPQCAoLwAAJ88AECXPACgcz0AAJC7ACAgvQAgbj0A8OU9AKAlvQDAOL0AAAY8AGCFPQAAhbwAAB+8AIB/vADAkLwAAOo8AIBPvADwmb0AgFC9AECjvAAAebwAAKI9AMD6PACA2LwAQAO9AEDMPACAyLwAwCk9AIAlvADADL0AgEs8AICkvACAgT0=","chunkHash":"fe94643c66a42bdc0f57fe7b78d852e1e9a49e33a67a130458d3fe4c6b38616f"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def forward(self, points, features):\n        #...\n        x = F.adaptive_max_pool2d(fusion, 1)\n        out = self.prediction(x).squeeze(-1).squeeze(-1)\n        if self.projection_head:\n            return self.projection_head(out), out\n        else:\n            return out, out\n#...\n```","range":{"startLineNumber":92,"startColumn":0,"endLineNumber":97,"endColumn":27},"embedding":"AIARvAAAW70AoC09AADvvAAAKDsAYEq9AMDKPABghz0AoFO9AIDAPABAgDwAoBC9AAAjvQBgkL0AAHg6AMAgvQAAM7wA4Cc9AAB7vAAA4TwAAOq8AABUuwDQjT0AgAU8AECGPACAgrwAAEA8ABCIPQAAgDsAQAq9AMBOPQAAsLwAoHa9AADgOgAA+LwAYBw9ACBXPQBgmj0AAHi9AKCAPQCQoD0AKCe+AADavABAOj0AALG7AIAbvADwkL0AAHg8AIApPADgZz0AMIa9AADhuwAAiLsA4Bs9AECxvQDgDT0AgJQ9AACnOwBA5LwAgK08AEC/PADQxr0AAIc7AMA+PQAAgTwAADy8AKA/vQBAUT0AwKC8AMD5vABAtr0AANk7AMAZPQBgG70AAFg6AACougAA2TwAQOA8AIDuvABAXb0AAI08AABgOQAAWLwAAPU7AIBevQAwGL4A8Ie9AGADvQAASbwAAMm8AEAiPQAALLsA4F29AIA1PQDAOD0AwNM9AED2PABAz7wA4CU9AAAXPADAOr0AAOS6AMC+vAAAHzwAgNo8ACAVPQCAGb0AgD68AGApvQAA7DwAQCe9AAD/uwDAyLwA4DI9AABUPADgfb0AAAy7AMCjvAAArjsAAHY8AAA+vQDgML0AwHe9AFCIvQAAiDsAABs9AEDTPADgK70AQLm8AECPvAAA1LwAAMG8ALC7PQCAgrwAQDe9AIATvQDAdL0AkKw9AKBJvQAArLsAALI7ACAMPQCAG7wAgFY8AAAlvADwjD0AEN+9AEA0PQBAsbwAAJs8AAAEOwBgQD0AgAy8AABNPABQw70AAPm8AMDdvADAOT0AAJg6AKARvQDgYr0AAIs8AICJPQAA9TsAAAu9AIC4PABQrb0AQPU8AOBFvQDAir0AADA6AMC7vACAPr0A0KQ9ACA1PQBA87wAoAe9APCEvQDAhb0AkNy9AABnvQAAXzwAYHG9AOACvQCgQr0AQN88AAAYPQBgGz0AAMg7AMDNPAAA9DwAQE89AACVPQBA1DwAID89AHCcvQDAUT0AgPu8AACZvACAGL0A4EO9AAAQPQCAELwAIFO9AEAUPQDgD74AQM88AGAzPQAQg70AAFU8AADaPADAGz0A4BI9AGBxvQAgfr0AQJ28AAARvQCAJrwAAGY8AACcOgAA1jwAQDA9AAAYvQAApjwAIA89AMD2vAAAUD0A4H69AAAOOwBAsjwAAFW8AADUvABAoTwA4JG9AADBuwAgor0AgBg8ACA/vQDgHj0A4C09AKB0vQBAfD0AgFw8AADOPADA1jwAALk7AECEvACAJLwAgP08AICzPQCAETwAIBQ9AMDAvABAm7wAAKQ6AGADvQBgX70AoBK9ACAsvQBAoL0AICI9AGABvQAgOL0AAOC7AKANvQDAPb0AgC88AMD7vAAArbwAAIy8AIA5PABwob0AAME9AAAXPADgDb0AAIA8AAAAuADwjz0AQBc9AEBivQBAB70AADI7AIBVPQDgKj0AAAW8AAAYOwDAhb0AAMA8AKAyvQCwwb0A4B09AGAFPQCA9bwAAPq7AICTPQCANTwAYE69AHDSPQAAsT0AAL+8AGCSPQCAbrwAgB88AMAUPQA4DL4AEIk9AABwugAA5bsAAIM9AACgPAAgFb0AoA69ACCDPQDAzzwAAL+8AIBPPADACz0AAO+8AKBnPQDA27wAgNC8AGA+vQAA0TwAADY8AAAgvABAMb0AgJU8AEAJPQDgLD0AIDE9AID5PAAAFT0AAO+8AIBdPABgMb0AgNa8APCpvQAATz0AAI+7AEC9PABg5r0AADq8AMCRPABAhb0AgFc8ANgNPgAA5bwAQMU8AOBCPQAASbwAAFA8AIA7vQAAqLsAAHA8AIDyPABwob0AQOW8AMATPQDAzjwAQC89ACCXvQCABTwAQN48AAAAvQCAqbwAALQ6AMCjvQAAWLwAAHo9AMDZPACABbwAgEO8APCuvQAAbDsAgPO8AEA5vQDAMz0AgHg8AAD/vACgIz0AgMa8AEDtPAAAx7sAwDy9AECbvAAAZjsAABw8AACIvAAQwL0AoAc9AACUOwBg770AQJu8AIB3PACA9rwAgD68ACBRPQDAqLwA4AU9AFC+PQDAI70AYAq9AAAOvAAAtrsAgCo9AEBhPQAgmz0AICU9AIDAPACAejwAACc9AIBNvQAA8LsAIHa9AACoOwAA2LsAADC7AIAvPABAtzwA0J89AIAePQCglD0AICK9AAD2vAAAuzwAANQ8AACAOQAA7jsAcLY9AIAuvABACr0AAAq7AAASOwCAOz0AQIG8AACuuwAAfDsAwNw8AADlvAAA2zwAAJY7AEC8vAAQo70AQNi8AIB0PABAFL0AgI+8AEDovACAOLwAAK27ALDMPQAA3bwAAFg6AICsvACgPL0AQPe9AKDfPQAgWD0AQEo9AAAaPABAAz0AAFY8ANCNvQAAoDwAgKg8AICwvABAcj0AgLY8AEBnPQAAmbsAgKK8AOAjPQAASLsAAO27AMDgPABAiTwAAJg9AEA0PQAAlLoAwNQ8AAAgOwCgXz0AgCE8AAALvQBAEz0AIPg9AKAHvQBADb0AAA68AKBFPQAATbwAALu7AADsOgBAm7wAgB48AAATPACgab0A4BC9AIArvAAAaLwAIJA9AAB1PABgBL0AQNu8AMDVPAAADTwAcI49AACMvAAAT7wAAPi6AIBovACgbT0=","chunkHash":"78b38fd8ad29e777edbfde1a2175880a46e450f7b8ffaf420534281288288a96"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    \"\"\"\n    Implementation adapted from:\n    https://github.com/lightaime/deep_gcns_torch/blob/master/examples/modelnet_cls/architecture.py\n    Credits to DeepGCNs.org\n    \"\"\"\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n    def model_init(self):\n        #...\n    def forward(self, points, features):\n        #...\n```","range":{"startLineNumber":9,"startColumn":0,"endLineNumber":74,"endColumn":40},"embedding":"AAARvABgaL0AAKo8AECuvAAAEjsAgEC8AIBKPABA4DwAwGK9ACAHPQAAyjsAAEY7AAAaPACA97wAQFE9ACAEvQAACDsAgGs9AIBivAAA07sAAGg7AIAfPAAAaz0AQIg8AAA8OwAAXLwAgEw8AADfOwAAwLsAQNG8AICEPAAAgLwA0Iu9AAA3vQDgj70AgP48AFCiPQDQkz0AIFq9AMDJPQBgNz0AoC6+AOBXvQDgsj0AAGg6AABFvAAgN70AANo8AAD6OwBAozwAgJq8AIBvPAAASLoAAIO7AGCuvQBA/DwAYGU9AIAMPADAsLwAYAI9AIAcPABQw70AALi8AECPPAAAMrwAANy7AGBxvQAgdj0AoC+9AACduwCAob0AgEC8AEC/vABAX70AAFM8AAAqOwAAgLoAEJg9AAAovAAA6rwAABc9AACnuwCARDwAwBc9AABcvQBg5b0AAKq9AEDVvACAWzwAoB+9AOAsPQAAALkAQIe9AOCFPQBQhj0AsMM9AOAOPQAAGbwAgLg9AACBOwAALjsAgMY8AAClvACAujwAgCo8AEC3PADAg7wAAPg6AMA1vQBgFj0AwAW9AAAuOwAA1bsAQLQ8AIA3PAAQib0AACE8AADAuQDABr0AACM8AKA5vQAAbb0AACY7AHCmvQCAzTwAAAQ9AEBQPQBAmbwAACe8AIAmvADAybwAwAe9AKCLPQCAIbwAYHi9AIAfvQBwlb0AwKI9AABBvQBAr7wAALG8AOBHPQCAMTwAgMA8AMDKvADgtT0AYOu9AKA1PQAAPL0AIAo9AADhOwCAaj0AQIY8AKBDvQDAg70AoDG9AACfuwBAoD0AQDs9AMDqvAAAzTwAAOM8AFCKPQAA7TwAwG+9ACA5PQBgyL0AoDI9AIC2vAAARb0A4BY9AAAYugCAarwAQDo9AACIPACAjbwAYBS9AAB8vQAgWL0AANS9AIBovQAAxjsAEIS9AECnvADAnr0AgLU8AOBdPQAAczwAgDo8AACdOwAAKjwAQMA8AMBXPQAAhLsAQIU9AHCmvQCAaz0AgGa9AAAavACA4bwA4DC9AADGPACAk7wAIIW9AGB4PQBwEr4AgHm8AMAGPQAA8bwAAEY8AECZPAAAuTwAAC89AGArvQBgO70AAA+8AADkOwBAzLwAAPo8AAB/PACAST0AgDA9AOBtvQBgHT0AAPk8AAChuwAAWzwAUNq9AICSPAAAJzwAAOg7AIBavAAAYDoAoCK9AGAEvQDgib0AAKe8AMAMvQAAyDwAgKU8AJCJvQCwwz0AALA5AIAHvABA3jwAgGo8AMCQvACgeL0AAOm7AJCLPQAAuzsAoDU9AABKvABgMr0AQKG8AAC5uwDAlLwAYEm9ACBuvQBAnb0A4CE9AEDtvABAsrwAgAe9AKBIvQDAlLwAAIi8AACbvACAQjwAwLq8AAAePQDgz70AsNc9AIBWPABgJL0AgJI8AADwOQCgaT0AABo9AAAdvQAgHL0AIAc9ANC3PQAgsT0AgCC9ACAVPQBgb70AIE89ACAzvQBgsb0A4Dg9AAACOwBgab0AADa7AEAePQDgCr0AoAC9ANDXPQDwlj0AYDi9AMBuPQBgFj0AAKC7AMCUPACQzb0AoDM9AABOuwDAjLwA0M49AADjPAAASbwAAFa7ACBUPQCAE7wAgE88AIDBPADAojwAgM28AKB9PQCAdzwA4Ae9AEA2vQAAkLoAAOs7AAB8vAAArzwAwMA8AECJPADAXz0AgNk8AIAWPQCAUDwAgHE8AMCPvAAAvbsAACq7AHCHvQBAVT0AAMC4AACQOQDgv70AQOm8AABtPACAI70AgDQ8AKAhPgBAqbwAAI08AJDAPQBA6DwAgHI8ACBkvQAADrsAgM28ACAPPQCgJr0AADC6AIDtPAAgTz0AoE89AACTvQDgJD0AABE9AMDRvAAACDoAgHC8AOB/vQAAULsAgCY8AIBoPAAAzbsAAPA6AKCevQDA+TwAAGG9AKArvQCAsT0AIBc9AICvvAAAvLoAAIG7AAClPAAASzwAABK9AADbvACAf7wAADo8AEBxvQBgeb0AQFk9AACHOwAAsL0AwKa8AADVPAAANzwAwK68AIDcPADAsLwAoBs9ANDEPQDAwLwAADW8AADHuwAAA7wAoFs9AOAXPQCgoj0AYEc9AIAgPQAAFLwAYBM9AKCXvQAAzLoAgC29AAD0OgAQgb0AgIi8AEC/PAAgAj0AYH49ACAmPQAAk7sAgIC9AIBlvQAAJrwAALS6AIALvABAzrwAQLA9AACwuQAArTsAAM27AADCuwAApjwAgDa8AAAYPADA37wAYD09AADtOwCgHj0AwKI8AIBZPACwkL0AAAu9AAAwPAAAVrsAAM+7AAD6vAAAXTwAAO+8AECXPQCAJ70AACY7AOAEvQDgBL0A4MO9AMAOPgBAoz0AIAI9AABrvADAHT0AgPK8AKBqvQBAkzwAAEk8AADkugDAUz0AgJU8APCCPQAA4DsAgBo8AECLPACAw7wAgFe8AAAWPQAAAjsAUJU9AAB7PQDAmrwAAEg6AABiPAAAXT0AAKS6AICOvAAAzTwA0PU9AKAuvQBAWr0AQNQ8AECXPQCAKr0AANQ6AACsvABAgLwAQE09AACMvABgeb0AwAy9AICPvAAAjrsA8JA9AADKOwDA6bwAIBy9AIAivACAHrwAQJ88AEDUPABAG70AQIc8AEAxvQCAgj0=","chunkHash":"9b97eb76edaf797e8216c3e1f490cd11b0af96c770bb9523186b78e2499698bc"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom torch.nn import Sequential as Seq\nfrom .torch_nn import BasicConv\nfrom .torch_vertex import GraphConv2d, ResDynBlock2d, DilatedKnnGraph\n\n\nclass DeepGCN(nn.Module):\n    #...\nif __name__ == '__main__':\n    import argparse\n    import yaml\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--config', type=str, default='runs/Configurations/xyz-normals-contrastive-DeepGCN-NewAugment-cells/config.yaml')\n    args = parser.parse_args()\n\n    with open(args.config, 'r') as f:\n        net_params = yaml.load(f, Loader=yaml.FullLoader)['model']['kwargs']\n\n    feats = torch.rand((2, 6, 1024, 1), dtype=torch.float)\n    points = torch.rand((2, 3, 1024, 1), dtype=torch.float)   \n    num_neighbors = 20\n\n    print('Input size {}'.format(feats.size()))\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":115,"endColumn":0},"embedding":"AIDcvACAhb0AgCo9ACAXvQAAaDsAgDA8AADoOwDARj0A4Au9AAAGPAAAPDsAAFC8AACcvACAbr0AQGQ9AADwOwBgRL0AIE09AIAHvAAAfbwAgJG8AICPvACAtj0AAAo8AACkugCAEzwAQIs8AIBlPAAAijwA8IK9AABCuwCADL0AoIa9AOBovQDANL0AwDg9AKBUPQAATTwAgJi8AEDKPQDAij0AEPq9AEDQvACQgz0AAPy7AKAlvQBgpr0AwIM8AAAcuwDAKD0AAMW8AACquwAAUjsAwNk8ACCIvQCAfzwAQFY9AACQuQAAabwAoGE9AKBIPQBAq70AAIE7AADoPACALbwAgG08AICuvQBAZD0AYBK9AADCuwCQmb0AgBE8AAD0OwDAkb0AgFo8AACqOwAANjwA4HM9AIBsvABQmr0AQEg9AABEPAAAZjwAwJ+8AECWvABg870AcOa9AMAEvQAA3bsAABK9AGB4PQCAB7wAQDa9AKBUPQAgYD0AiAo+AEC8PAAAx7sAAB09AAAgOwDA47wAIBo9AIBevADAgjwAoBs9AIB/PQAAXbwAgBw8ACBPvQBA/zwA4C29AAAWOwCAKbwAwGY9AEAwPQBgc70AAFw8AIBlvAAAlLwAgIG8AKAmvQDwgr0AgBG8AOBsvQAAkLoAACw9ACAvPQAAO7wAAOK7AIA5vACAHzwAgA69ACCDPQCA9LwAEIa9AAAdPACg/b0A4EM9AECBvQCASjwAAOu7AADfPAAATrwAQNk8AECxvAAAij0AgPK9AFCIPQDABr0AAF89AAB9vABgCz0AANM7AIBGvABATr0AoCS9AMCDvAAwjz0AAAg8AICWvACAubwAQAI9AICTPACAAzwA8K29AKBjPQDw3L0AwN88AMBTvQAgF70AAOU8AADBuwBABL0AgDI8AKAhPQAAoLkAMLW9AMAgvQBAgr0AIGa9APCDvQAAPjsAQCy9AICLvADwkb0AQB+9AIBBPQAAgjwAABi7AABAOgAAGDsAABQ7AABNPQAAIDwAAEI9AOCEvQAQuT0AoAS9AACHuwCAHrwAQP28AID3PAAAqzsAYCu9AKAPPQBwAL4A4Am9AMDGPAAA0bsAAEq7AEAXPQBgcj0AoEw9AAAgvQAga70AACO9AMAlvQAAxLoAQOs8AADsOwCAAz0AwMI8AAArvQAA9zwAAGC6AEDPvADALD0AMKq9AEDvPAAA4DwAwBC9AOAFvQBARr0AQF+9AGA8vQCwoL0AAG67AIBwvAAACTwAAGQ9AMCpvQAgcT0AgGA9AAA+uwDgLj0AgEo8AABSvADgeb0AoBE9ACCkPQDA5jwAwOM8AIARvABAjzwAADA7AOBOvQAgfb0AAGe9AMBEvQAAJb0A4BM9AABjPAAgAr0AAFS7AOCYvQAAfrsAQP28AECKvACABb0AQLG8ANCEPQDAsL0AULQ9AIAlPAAgP70AgHa8AIAwPABghD0AAH89APCavQAA57sAAKA8AMA0PQDghD0AQNi8AMC3PACQhb0AAM87AAAouwDgXb0AYHY9AABSuwAAu7sAACy8AACtPADAszwAgJ88AHClPQCgnT0AwJu8AMBbPQAA5TsAAKS7AAAdPQDwvL0AQF49AAAmuwCATDwAgCM9AICLPABA0LwAAC68AOBcPQAAqLoAAA47AIAfPACApTwAQHW9APCBPQAAtTsAgBI8AHCcvQAAmjsAADE8ACBHvQBAiLwAoC09ACAjPQBAFj0AAB+8AIB8PADAA70AIDQ9AAA4OwAgEr0AAFS7ABDNvQCwqz0AAAA7AED8PACQ6L0AEIG9AACBPACA1LwAAG08AJAkPgCAhzwAAIQ7ANCNPQCAMTwAgNI8AAAAuQAAEL0AAFw7AABOOwDwmr0AgA69AOBqPQAA6DwAAFY9AAAzvQAAArwA4CQ9AAD0uwAA4zsAALs7ACArvQDgCD0AwNg8AAAmuwAAXrsAAOe7AOABvQAAPTwAsIO9AIBtvQDgcD0AwK08AIAJPACA6DwAAM87AEDvvAAAujsAADG9AMBxvQAgQL0AwKY8AADTOwCgWr0AoAE9AGBlPQCglr0AABg6AIC1PACAdbwAAKA8AEBDPQCANLwAoEQ9ACCwPQAA4DwAAOw6AIAXPADAVr0AYCY9AKA5PQDAmT0AAGE9AMBfPQAArbsAQIs9AJCBvQAgHb0AoEW9AACbuwAgc70AgOS8AACLPAAAxDsAcJk9AAAOvADAyTwAYOS9AMBvvQDAAL0AgDo8AIAzPAAgDb0AgJo9AABMuwAAADgAAEA6AACoOgDQvT0AgHa8AAADvACAObwAQNQ8AECbPAAAsLsAAIc8AAADPAAgkr0A4Ai9AAChuwAA3DsA4CW9ACBNvQAA8zsAQPm8AOCTPQDgN70AAMo7AICkvABgBr0AYO+9AHDPPQBgBz0AwA89AIBaPACAWD0AwO+8AAAGvQCAXTwAoCQ9AAAcPACgdT0AAFg7AEAvPQCAZTwAQI88AOAvPQCA8bwAgK+8AMCFvADADr0AwBw9APCLPQBgGr0AACg9AIA/PADA9jwAQAY9AAARvAAgHD0AyA0+AKBpvQAgYL0AACK7AMCRPQAgFb0AgIc8AABOvACAnrwAAMY8AEDUPAAwpb0AIEe9AOAUvQBgN70AgFM9AEDZPACAHb0AgFS8AADlOwBAs7wAQAU9AAAOuwAA4rwAAMA4AACIOwAwgD0=","chunkHash":"69b75b22a1807a6251ec0234272598315d01011dfe731189e4d88c1cb6fa30c1"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/DRNV.py`\n```python\n#...\n    net = DeepGCN(net_params)\n    out, h = net(points, feats)\n\n    print('Output size {}'.format(out.size()))\n\n```","range":{"startLineNumber":115,"startColumn":0,"endLineNumber":119,"endColumn":0},"embedding":"AEDNvACAQb0AoGs9AMBRvQAASDoAQKq8AAAgOQAgcz0AQCq9AMC/PABAlzwAgF68AICNvAAwh70AQAI9AIA+vQAAbLwAAEs9AACEvAAAITwAgKO8AIB+vAAgnz0AIB89AOBgPQAAITwAAAAAAOAsPQDA4zwAgCi8AACQuwBA5bwAoE29AECNvAAACbwAQP08AIA/PQAAdT0AYAO9AHCfPQBwmj0A4CO+AAC1vADgKz0AwJQ8AAAIOwCgUr0AwNs8AAAePQAAYjsAwD+9AGB9PQCAqbwAwJY8AICBvQCAtTwAcJQ9AACyOwAAbrsAgB28AGApPQBgO70AQLo8AABcPQAAvTwAALw6AHCMvQAATT0AwA29AEAfvQCAdr0AwL48AABUvADwiL0AgBE8AED2vABAprwAIEM9AIDQvAAAqL0AgHE8AABmPAAArjwAQIW8AADkvABw670A0Iu9AGAlvQDArLwAAPS7AKAhPQCAk7wA4AK9AIB3PACgGT0AYLg9AABLPABAirwAAJI8AACxOwDAnbwAABK7AGA8vQCAaDwAwIk8AJCXPQAAWzwAQAo9AICbvAAAUrsA4I+9AAAzvABgCr0AQPc8AAAoOgDgH70AoCI9AECovACgAT0AQNw8AAB6vQAAhbsAAPe8ANCSvQAA/zsAMJE9AMD3PADgGr0AQB89AMD6PABAKr0AgPC8ALDbPQBgcL0AwDK9AMDqvADwlb0AwG09AOCUvQCAfTwAAIm7AICQPQAAA7wAQLU8AECHvACQiD0AkOi9AEA3PQDgJr0AAIi7AICXPABgQz0AwPK8AACXuwBwhr0AAN28AACwugAAtjwAAJ67AOAIvQCAIL0AwK08AOApPQDA7TwAQOC8AIAoPQAABb0A4Bo9AKAovQDgD70AgAM9AADAugAAWbwAAIU8ACATPQAAvTsAQDq9AICDvABgsr0A+AK+AOBevQAAFDsAwM28AICnvADgfr0AgNM8AECjPQBgPD0AgLg8AMDMPAAAED0AgDI8AACaPQBgAL0AoEI9AJCjvQDgRz0A4EG9AOAKvQBA9LwAoBG9AEAuPQBADD0AAGi9AGAfPQCQI74AANe8AACzOwDAhbwAAKm7AADCuwBwij0AQPY8ABC0vQBgZL0A4Bu9AADMvABAND0AAHE8AABSvAAA0jsAIFM9AEADvQBABD0AAI88AMAIvQDglD0AgEm9AABsPAAADLwAAKU7AIAVvAAAlLoAYDy9AIBvvABgfb0AgD88AAClvAAA/DsAAEg8AABivQBAnTwAwBI9AAATPQAADzwAAAa8AIANvACAIr0AAJ08ACCsPQAAkjwAALM7AACVPABAt7wAALg6AACtvACArb0AAE+8AKAPvQDgqr0AoDo9AMB6vQBAmb0AwPu8AKA1vQDAhbwAYAw9AMDrvABAUr0AgIw8AKBFPQBAeb0AsJY9AIDtPACgOL0AAEA7AADfOwDA4DwAAMo8AMBlvQDAk7wAAD89AIBhPADwoD0AQNw8AAAfPABgM70AgOA8AACSOwDQm70AIC89AAD1PADgI70AAMA5AFCLPQAA3bsAAKQ7ABCBPQAgcT0AwKW8AKBgPQDA2LwAgFc8AAALPQBoPb4AkIo9AIB/PAAAx7wA4II9AIAvPQAAebwAAHA6ACBOPQCARjwAID+9AACVuwAgLD0AAM48ABCnPQAAHjsAAG48AAAwvQBA4DwAwKc8AMCHvACA67wAAJW8AIB6vABgdj0AgG09AGAUPQCAej0AYAy9AAAKOwAA5TsAAMC5ABDOvQAgQT0AADQ8AMCVPADg5L0AAP28AAAGvABgQ70AwJe8AAD2PQAANLwAAMM8ALCaPQBA4bwAwB49AKAYvQAAorsAgBa8AICWPAAgUb0AgCm9AAAcOwBAtTwAAOg8AGClvQBAxzwAALC6AEAgvQBAlrwAgCE8AKCgvQBAAj0AgDg9AAAGPAAAnjsAQNQ8APC+vQCAazwAgKa8AGBBvQBgXz0AoAc9AGAxvQDAvzwAgA29AECmPAAA2DsAoBO9AIDKvAAAl7sAwFU9AIBkPAAQ0L0AgMs8AEDoPADQy70AQKm8AACOOwCAfLwAACS7AFCKPQDA5rwAgME8ALC/PQAAKDwAgDW9AABauwBgFr0AIE49AIA4PQBwpj0AgEY8AMAkPQAAUzwAYCc9AED6vACAGTwAMOG9AABAPADAIr0AAAC9AMDyPADAmjwAoIw9AAAAuwAAhDsAwEG9AIBevADAjLwAYBo9AIDSvAAAoTsAYMU9AMC4vACAjLwAALA7AABRPABAPT0AALk7AIBvvAAAQzwAwOE8AACouwBAIT0AoDU9AIDfvAAAOr0AgCa8AACoOwAAJLwAAIg8AIAVvAAAdD0AQDa9AGAaPgBAUb0AICK9AKAKvQBgEr0AwNe9ALCyPQDATz0AIFE9ACALPQCAPjwAAAY7AKDAvQDANz0AwNY8AID+vAAgoz0AgDA9AAArPQAAcbwAAEO8AECmvACAFb0AgL28AMA+PQAAQ7wA4Ag9AOBjPQCA2bwAANI7AAChvACgBD0AQLC8AABnvAAA1DwAgCA+AIDCvABgTb0AAAe8AGAEPQDgTr0AgGM8AED0PADAsLwAwLM8AACtPAAAU70AQBC9AIADPADA6bwAsKk9AICMPAAAB7wAAPS8AACGPAAAtTsAoBs9AABIOwAArDoAQIA8AADquwAgNj0=","chunkHash":"742e93a7e085f08f2c31b6cb785bb626e67a8c498ef2998f90aadb659644fbb5"}]},"file:///teamspace/studios/this_studio/.vscode-server/data/User/History/4ba8fda2/J91M.py":{"hash":"de56eb36c8efcf96a4a73a180faab2e81f032ad4839db9500b12cbe7c8e79a92","entries":[{"text":"File: `.vscode-server/data/User/History/4ba8fda2/J91M.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        super().__init__()\n        c_growth = channels\n        self.n_blocks = n_blocks\n\n        self.knn = DilatedKnnGraph(k, 1, stochastic, epsilon)\n        self.head = GraphConv2d(\n            in_channels, channels, conv, act, norm, bias=False\n        )\n\n        if use_dilation:\n            self.backbone = Seq(\n                #...\n```","range":{"startLineNumber":30,"startColumn":0,"endLineNumber":41,"endColumn":0},"embedding":"AACwugBQib0AgNE8AAAiuwAAdDsAAGS7AOASPQAAtTwA4De9AIAcPACAfDwAQIS8AAAwuwDgTL0AQCI9AGAevQAAdrwA4A49AID5vACAp7wAAFQ8AAB+OwCAqD0AAJq7AIACPQCAQLwAAAC5AMAOPQCAG7wAYBa9AECNPAAARLwAMMG9AEAkvQAgl70AoBw9AMDbPADgAD0AgIS8AIDPPQAAYz0AYBy+AKBbvQAAzj0AAI27AABEuwCgvL0A0IA9AACiuwCA4jwAAAK9AADLOwAAsjsAgNE8AECevQCABz0AYF49AACQugBA27wA4EA9AOAnPQAQkL0AAFe8AAB2PACAAjwAAMa7AOB3vQAgZD0AQLK8AAAAuwDgrb0AwIy8AADrvADANL0AgLs8AGAAPQAAYrsA4DI9AAB6uwAgkL0AwP48AMCcvAAAB7wAQMc8AKAtvQCA8r0AcKW9AMCbvADAjLwAAAu8AMBvPQAAgjsA8IC9AEBgPQDggT0AAMA9AOBfPQAA8bwA4Dg9AIAZPACAMrwAID89AMCGvADgBz0AAIg7AAAnPQDAXL0AABE8ACAYvQCAejwAgJK8AADsugCAnLwAgEA9ACBVPQAgib0AgG+8AGACvQDgNb0AANi6AIA3vQCAWb0AAK+8ANCqvQAA7DsAgDA9AADtPAAA6LsAAAQ8AACNvAAAzbsAAGG8AOBwPQDgDL0AoFW9AECbvADQlr0AkLI9AAA/vABAzjwAAIw6AACYPQAAdDwAQMg8AAAuvADQ1z0AkMu9AABzPQAgIL0AwJ48AAAqPADAgj0AAGo7AIDjvADwjr0AoB+9AGAGvQCgJj0AwC89AAAQuwAAQbwA4AU9ANCBPQCA0jwAAGa9AGCWPQBQwb0AIDo9AAAqvQDANb0AgDM9AMAKvQCAH70AYDY9AKAWPQCAKrwAoFu9AJCTvQBAvb0AEJy9AAByvQCA0DwAcJe9AABcvAAgrL0AgEg8AHDAPQCgDD0AAJM8AABAPADAvTwAQJo8AGBCPQAAwTsAsLc9AFDcvQAgnT0AYCC9AIAxvACAyrwAQNW8AKADPQDgAr0A0IS9AKATPQAwDb4AgHC8AAC+PAAABL0AgDe8AOBGPQAAKbwA4BA9AEA3vQDgaL0AAIK8AAAmOwCATbwAAMk7ACALPQDABj0AgMg8AICtvACgXT0AIAM9AMDmvACAszwAsNK9AABYvAAA1zsAAJC5AABDvAAAwrsAwN+8AEAMvQBAG70AQJ28AMCjvADA+TwAQM88AEDgvACQqz0AAKQ8AEAoPQDA2DwAQMY8ACAHvQBAgb0AgDW8AECePQAAGLoAQGE9AMC/vAAAlbwAgFG8AICTvAAgbb0AICy9AFCNvQDgRL0AcIM9AAAbvACAObwAoCC9AIDJvACA9bwAgMO8AMCGvAAA2LsAAOS8AECDPABgtb0AINQ9AAAuPABgAL0AAAy7AICVvAAAXT0AQAA9AIDUvADgbr0A4AM9AOB7PQCQhz0AAGO8AADSPACgdb0AgH88AADFvADgh70AwIE9AMABPQAA5DoAAJc7AKAKPQDA8bwAgA29AHDUPQBAlj0AgF28AACAPQAAE7wAALi6AACbPADA1L0AcKw9AACtOwAAizwAYFg9AMAYPQDAhLwAQKe8AIBpPQDAQj0AgMe8AIDZPACABjwAoEm9AKBgPQAAeLsAgL+8AGBJvQBAjzwAgCA8AEAWvQBAmrwAoA49AEC2PABgIj0AAJ48AIAcPQAAYjsAgHY8AIBMvAAAirsAwJG8AIBbvQCgkT0AANe7AADgugBwzL0AAIi7AED4PADgD70AwJQ8APAEPgCAUzwAgPE8ABDQPQAAYzwA4Bg9ACBQvQAAmLsAAL08AIBzPQDwhL0AgGm8AEBSPQCAZj0AAEE9AGA/vQAAAL0AgOU8AMBJvQAAVzwAAF48AGB7vQAApjsA4CE9AGA0PQAA7rsAgDw8AOBRvQBAjrwAgBe9ANCbvQBgZT0A4AY9AMA2vQAgCj0AAIC8AAAAOgAABTwAABa9AEAGvQCA5bwAwOA8AABgvABQj70AAEQ9AOBBPQDwr70AgNu8AACXPAAA2jsAoDm9AMBPPQAAe7wAgFg9AODZPQAAvrwA4Ce9AAC4OgAAg7sAwC09AACTPABgxD0AACw9AABGPQAAnbsAAB89AIBkvQCAK7wAYGK9AIALvABgO70AgHC8AGApPQAAyDwA4Jg9AECzPACAUTwAQIy9AHCgvQAAHjsAAD08AAC/OwDgML0AULk9AMDWvACAaDwAgKU8AACGvACAdDwAAMu8AAB2OwAAKbwA8Ig9AIBnPAAAiLsAwIA8AID7PACgrb0AgEy8AEDhPAAARzwAwLC8AOBuvQAAA7wAAJe8AICbPQAAuLwAAK07AADAuAAAiLsAIKO9AADhPQDgMD0AYAI9AAACvACgCj0AAD28AEA2vQAAfzwAAN87AIAKPABgMj0AALm7AMCwPAAA17sAAJc7AEDOPACAHL0AAKS7AEDAPAAAnbsAEIQ9AOBWPQDgLr0AAHA7AADjPAAA7DwAgA89AAD2uwBA3jwAQLc9AMC0vQCQlr0AQAc9AAByPQCAy7wAAJA8AAAguwAAmbwAgFc9AADcugDAwb0AgDG9AGAEvQAAIbwAwF89AIBjPADgMr0AwNS8AIA1PABAn7wAAFC7AAAIuwAAXrwAANI8AECavABgqT0=","chunkHash":"5abd771c63f6a14facfa550ea9d889020bebadcf444e678b0eabad36eec4a5d2"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/J91M.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n                *[ResDynBlock2d(channels, k, i+1, conv, act, norm, bias, stochastic, epsilon, knn)\n                  for i in range(self.n_blocks - 1)]\n            )\n        else:\n            self.backbone = Seq(\n                *[ResDynBlock2d(channels, k, 1, conv, act, norm, bias, stochastic, epsilon, knn)\n                  #...\n```","range":{"startLineNumber":41,"startColumn":0,"endLineNumber":47,"endColumn":0},"embedding":"AACkOwBAf70AAFI8AACyuwAAjjwAAGi7AMAVPQAAnzwAIFK9AIAQPABAszwAAFu8AADYugAAI70AAAM9AGAYvQCAG7wAwLo8AKACvQBAp7wAABI8AAD6uwDwkz0AAIg6AAAEPQAAELoAABi6AKAQPQDAr7wA4EK9AEDRPACAMrwAcJ29AGArvQBwnb0AwB49AEABPQAgCT0AgGq8APDPPQCQmz0AqBW+AOBJvQCQ3z0AAKw6AADlOwDgqb0AAF89AABSuwAAwDwAAG68AABEPAAADjsAwPc8AKCpvQCA9zwAgDI9AACwuQDAHL0AQHc9AKAkPQCgZ70AAOO8AACsPACADrwAAEA6ALChvQCgYz0AIAO9AACkuwCwvL0AAC28AMCSvABgK70AwJM8AEACPQCABTwAIHY9AAAyOwAwhb0AIAg9AACHuwAAIDoAALc8AMBNvQBg3b0A4MO9AIBbvACAOrwAQKS8AKBIPQAAq7sA0Li9AEByPQAApD0AQLs9AMD4PABA37wAgEs9AAA5PADAk7wAQBA9AMCLvABAojwAQIE8AIDaPABgVb0AgAI8AIBfvQAAwjsAgCK8AACjuwCAhrwAYAc9AIBpPQAgeb0AADC8AACJvABARr0AAKg6AKBAvQDgbb0AAMi8AICzvQAAgbsAwOA8AECxPACAuLwAAJG7AECXvAAA9zsAAFS7AGBcPQCAEr0AgFu9AMCOvAAgnL0A4Kk9AIAFvACAMTwAAOg7AOCgPQAAYDkAgC48AIBUvACg8T0A8M+9AKBLPQBA8rwAwIw8AECCPABAlD0AAFQ7AMDRvABQgb0AQBi9AIASvQAgIz0AoGU9AAANvAAAK7wAQB09APCRPQAA8jwAIF+9AEBtPQBgtr0A4Eg9AOAhvQDAPb0AYDs9AACGvADgZb0AoEA9ACAiPQCAtbwAgIC9AECOvQBAvr0AYJO9AEA8vQAAhzwAkJ69AAAVvACAjb0AQNI8ANDXPQAA3jwAwL88AIB/PACA3zwAYBE9AKBEPQCAZzwAsLc9AJC9vQCAfT0AgPG8AAAGvABgOL0AYBm9AICpPABgVb0A4IG9AMAFPQBA+b0AwJe8ACAEPQAA1LwAAA68AOAoPQAA9LsAACU9AKBKvQCAU70AQNm8AAAQugAAcLwAAGC7AIAEPQCAOz0AgKs8AMCjvADgaT0AQIU8AOAFvQBAmDwAcMK9AAC0ugAAKrsAAAa7AADIuwAAjjsA4A69AECyvACAE70AQLa8AACPvADA/DwAQOQ8AACqvADQsz0AAJY8AKAwPQDAsjwAABM8AADfvABAX70AAPS6AJClPQCAEDwAAHA9AECAvAAA9rsAgHO8AADLuwCgSL0AYBy9AECZvQBgO70AgCY9AACYOgAAVrsAwLa8AID+vABAI70AAEa7AABAuwAAsLsAgDm9AACNPAAwsb0AAMQ9AAD7OwAAA70AAAA8AIBTvAAgTD0A4BE9AAAZvAAARr0AALs8AICSPQBQhz0AQKO8AMCEPABwnr0A4C09AADVvADAjb0AoII9ACBKPQAAQrwAgCQ8AMDuPADA27wAoDC9ABC2PQDwtD0AgKO8ANCMPQCApbwAANA7AEDAPADws70AYHA9AABNPAAAZjwAYG09AOAePQCAwLwAgNm8AGBXPQAgEj0AAK68AAAkOwCAAjwAwHW9AOB7PQAAJjsAQEa9AMA3vQCAmzwAwIc8AIDrvACATLwAQMQ8AACMPACgIz0AAMg8AOAEPQAAFLsAAJM8AADruwAAprsAYAq9AJCSvQAAmz0AQKW8AAC0ugAgxb0AAPI7AID9PABAzbwAANY7AOD/PQAALjwAwAk9ACC4PQCACLwAQDA9AOBmvQDAq7wAALk7AICCPQCwmb0AwJK8AKByPQBAOD0AwEc9AOBFvQAAg7wAIBk9AKA6vQBAgDwAAC08AGBUvQAAADsAQBg9AIA7PQAAgrsAAI87ALCVvQAAv7sAwDW9AGCVvQDQmz0AICM9AIAlvQDA7zwAgD28AIARPACAwDwAQGi9ACAFvQDAs7wAgFY8AIDivACAmL0AQCA9ACA0PQBgtr0AALG8AECZPAAALzwAYE+9AAA3PQAARbwA4Co9AHC/PQBApLwAoBa9AAAnPACAirwAYCo9AIAEPACgpz0AIAg9AABBPQAAlbwAwD89AGBuvQAARLwA4CC9AADgOgBAbb0AQI28AEDzPACA4jwAgKw9AIDHPAAA3DsAYI+9AKCTvQBAjjwAQLI8AABgOQAgXL0A8LY9AEDovAAAFjwAQN48AAAwvACAkDwAQJi8AIBCPACAp7wAsIw9AECWPAAA4rsAIBY9AAACPQDwsr0AgEe8AMChPAAASLsAAK68AHCEvQAAiTsAALy7ABCvPQDAqbwAAFQ7AACzOwAAujsA0LO9AGD5PQCASj0AAK48AADYugDAMD0AAGK8AOBMvQCAfDwAAMA6AAAQOwAANT0AAOu7AOAJPQAAWrsAAD47AMC/PAAAlbwAgF28AADMPAAACLsAYGw9AMBKPQBAV70AQK88AAB8PACAZzwAIBM9AIAivAAAjTwAgM49ACCcvQBgiL0AANw8AKBPPQCAvrwAAE48AABAugBAkrwAYG49AAC2uwAQr70AAGy9AMAjvQCAa7wAwG89AIBnPADAML0AgO+8AABePAAAhLwAAOw7AAA2OwAAQbwAYAw9AIB1vAAwqj0=","chunkHash":"d3c1fcc02a2d279b21f5faa73efa286c6cd41c3f8f74f4f48da662280461bc50"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/J91M.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n                  for _ in range(self.n_blocks - 1)]\n            )\n        fusion_dims = int(channels + c_growth * (self.n_blocks - 1))\n\n        self.fusion_block = BasicConv(\n            [fusion_dims, emb_dims], 'leakyrelu', norm, bias=False\n        )\n        # 2-layer MLP as per paper\n        self.prediction = Seq(\n            #...\n```","range":{"startLineNumber":47,"startColumn":0,"endLineNumber":56,"endColumn":0},"embedding":"AABCuwDAhb0AgC08AABQvAAAezwAgB68AAD/PABAxzwAoC29AIAsPAAA3LoAwB29AABIOwBA+7wAgG08AGAGvQCAD7wAgAw9AMAKvQAA0bwAAES8AADSuwBgiD0AAN27AEDKPAAAW7wAAHI7AAAUPQCArrwAgO28AMDrPAAAzLsAcLa9AAA8vQCgob0AABU9AKAyPQCgVj0AwL68AFDjPQDgWz0AMCe+AGCIvQDg5D0AAHA7AABSOwDAsb0AYFI9AABMvACgCT0AAJO8AAAIugAAxDoAYEs9ADCpvQDA+DwAIHg9AACRuwAgAr0AIDM9AIDrPADwjb0AANC7AABKOwAAmTwAwKO8ADCAvQBAjz0AgCO8AIAfPABAyr0AQN68AIB/vACAsbwAAKA8AMAgPQAAA7wAgGg9AABGvAAAdr0AQO88AMC0vACAb7wAAJg8AEAIvQBw4b0AMKe9AACjvAAA3LwAQIq8AIA7PQAA4TsAYKG9ALCLPQCwkD0AULI9AMAvPQAArrwAgF49AIDBPACArLwAYBI9AAA3vACAbTwAgCu8AIDCPAAAOb0AABg7AKA1vQCARDwAAJU7AADruwCAN7wAwDc9AMAYPQCAd70AANs7AECzvADgU70AAOc7AOBPvQAAZL0AwL28AGCivQBAmjwAYBE9AEANPQDA27wAgEo8AAC7vACANDwAgLi8AGCLPQCA7bwAQDm9AIADvQBAWr0AsLk9AACCvACAwjwAAMc7APCaPQAASzwAgHM8AICZvABA7D0A4NW9AMA3PQBgFL0AgBQ8AMDCPADAZT0AABy8AOAhvQAAjr0A4Eu9AMDNvACgej0AQFQ9AAAivQAAIDkAYEQ9APCfPQAAUDsAAC69AFCBPQBAvL0AgC49AGBGvQBAPb0AgBM9AACmvADgVb0A4A09AEDBPACA67wAgE+9ACC8vQBwuL0AEKG9AGBtvQCgED0AIJO9AAC0uwDgrb0AgLo8AICgPQAgPj0AQJQ8AIAIPABA2DwAAMs8AIAlPQAAlLoAALA9ANC6vQAArz0AADa9AADEuwAA1bwAQOu8AMAbPQDAEb0AYJO9AIAcPQDoDr4AwJS8AICuPACgHL0AAEC7ACAqPQAAnTsAgBs9AGAHvQCAjL0AAKi8AABMvAAAh7wAAOi7AGAIPQBANT0AQJE8AAC6vAAALz0AAFi6AED8vABA2DwAwNq9AACAvAAAajwAAL67AECwvAAARLsA4Cm9AADYuwAABL0AADG8AAAovABApDwAAIo8AIBpvADA0T0AAGY8AEAKPQBAtTwAwLM8AACovABAUb0AgGw8AECTPQAAGzwAgEo9AIBIvAAA/LsAQIK8AECIvAAABr0AwAu9AFCOvQDAHb0AoEM9AICMvACAabwAIAq9AKAJvQBA+LwAAN68AAAqvAAAsDkAgEa9AAAaOwBwtL0AsME9AABmPADAAb0AAPA5AMCivAAAaj0AAH08AAC3OwDAYb0AQMo8AOCLPQCgnT0AAGC8AADgPACAaL0AAFo7AAArvQBAeb0A4CY9AIDiPAAASbwAAOA5AEBIPQAAarsAQAG9ALDGPQAwnz0AAJG7AKCbPQAA3jsAACq7AABMPADww70AsJU9AAAPPAAApTwAAEA9AMDgPABgGL0AYAq9AFCIPQDADD0AQNC8AEDSPADAiLwAQEq9AMBSPQAAf7wAQMe8AIAsvQBAtDwAAPA6AIAEvQAAL7wAQK88AMCFPABA+zwAQJQ8AOBPPQAATjwAAIA6AABXvADAhrwAAPC8AKB+vQBwiz0AACC8AACFuwCww70AAIi7AIAnPADAGb0AgCE8AKD3PQCAoDwAIAU9AED3PQAAWzwAALk8AID3vAAA4rsAAMM7AAB+PQCAjb0AgGK8AIArPQDAgz0AYGg9AIB3vQDAsbwAgA89AGAnvQAAmTwAAFM8AOBgvQAAIjwAoCo9AMAhPQBAgbwAAPC5AGBJvQAAZ7wAACa9AMCQvQDgTD0AQBQ9AMD4vABAgDwAAFi7AIAuPAAAmjsAwAO9AGASvQCArrwAAEA8AACJvACAeL0AwGE9AEAhPQBAub0AQOe8AIBAPAAAbjsAgDu9AABdPQAAz7wAoFA9AKDMPQCAKb0AIEW9AACdOwCANLwAIBc9AABVPADA2j0AAAk9AEBePQAA/LsAgD09AKCKvQAAxrwAYDu9AADsuwAgQr0AgEO8AMA9PQCAmzwAAIc9AEDjPAAAdjsA0IG9AMBVvQCAvjwAAJS6AECjPAAgV70AwKI9AMDmvAAABLsAAJo7AIBfvAAA1DoAAJW8AEDRPADAoLwAEI89AAA4uwAAnLoAAKk8AIDePADApb0AwLe8AIBoPAAADDsAgC28ALCYvQAAbjsAAHa7AOCqPQCA47wAANI8AACgOgCAPbwAwLO9ACDtPQCgRT0AgCI9AACruwDAVD0AQIO8AAAzvQAATzwAACU8AACwuQDgCj0AgGS8AMDxPAAAOrsAgBI8AIC7PABAv7wAABU8AMDrPAAAtrsAwF09AIBBPQAADL0AADg7AAA6PQAgID0AYBk9AICtvAAAcTwAQMM9AACtvQAwh70AQK48AMBcPQAAjjsAgFE8AACiOwCAjbwAQC49AICpvAAQp70AoFS9AIDmvAAAaDoAAFg9AMCpPACAar0AwPO8AIAOPAAA+bsAANc7AAD/OwBAzLwAwO88AEDgvABwtD0=","chunkHash":"9e5feb54c055cf421721f50b53271654dc50d4d6b85bd0c2a41fa671f812e4c5"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/J91M.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n            *[BasicConv([emb_dims, 256], 'leakyrelu', norm, drop=dropout),\n              BasicConv([256, out_channels], None, None)]\n        )\n        if projection_head:\n            self.projection_head = nn.Linear(out_channels, 64)\n        else:\n            self.projection_head = None\n        self.model_init()\n    #...\n```","range":{"startLineNumber":56,"startColumn":0,"endLineNumber":63,"endColumn":25},"embedding":"AIBkvABAjL0AwLk8AABrvAAAkDoAAI27AAAEPQCA3zwA4C69AIAnPAAA2TsAAMe8AADcOwDA+LwAgHA8AGBivQAAULwAwBM9AED1vABAjbwAAFU8AADAOQAgdD0AAJA7AID0PAAASLwAAIa7AMDtPACAhrwAQLi8AICsPACAcrwA8Ly9AOA6vQDQqL0AQAE9AOBZPQCADT0AALW8AFDCPQDAgj0AKBC+AGBcvQDA1j0AAFo7AIA6PADAkL0AAFo9AIAevAAAwjwAALe8AADUOgAAEjwAoAY9AJCCvQAACz0AoEM9AAAZvADgG70AwFs9AMDyPACgk70AAMS8AABrPAAAxDsAQMe8AAByvQDAbz0AgNy8AAA6OwBQxL0AAMy8AIAbvADAK70AgHY8AEDaPAAAhzsAIGM9AIAPvABgXb0A4Bg9AIBHvAAAmzsAANA8AOBYvQBQ3r0AwMG9AAChvADAh7wAAMy7AAD2PACAgLwAYKe9ACBoPQDwoD0AoK49AIAVPQBA0rwAwHc9AICLPACAdLwAgBM9AABRvACAEz0AACI8AOAIPQCAQb0AAAC7AMAWvQAAlDwAAA67AABcuwAAJrwAYD09AEDBPACgYr0AgHy8AADAuwCAWr0AALW7AGAJvQDATr0AQJK8AFDCvQAAUjsAAO88AEDCPACA6LwAAAY8AAClvAAAzjsAAFO8ACCCPQCgEL0AoGa9AIDlvADQjr0A0KY9AIB+vACARzwAAOA7AECKPQAAqDsAwMs8AECFvAAw3z0AMLy9AMAzPQBA/7wAgD48AICJPABgbD0AAE88AMDdvADAib0AoDW9AED3vABgUj0AQFc9AADQvAAA7DoA4Dk9AFCIPQAAzTwAAEC9AHCCPQBgsr0AAFo9AAAGvQBASb0AQBY9AECYvACgLr0AoCk9AGAVPQAA67wAgFi9ABCtvQCgwr0AEKe9AACDvQCA0jwA0Jq9AADgOgAQoL0AALM8AKDOPQCAIj0AwMA8AAB9PACA3TwAALo8AACKPQAAPjsAwLc9APC2vQDAhz0AgB+9AIAAvACgOL0AQB29AIDhPACgBL0AwDq9ACAOPQBw870AAEI7AEDSPABgG70AAPO7ACARPQAAJLwAYCo9AEBSvQDwg70AwJC8AACLOwCAwrwAAIg6AIASPQAAPT0AALI8AECQvADAQD0AAKE8AADRvABAuTwAEN29AAASuwAAmjsAAKw6AIBlvAAAeDsAQAm9AACbvACgPr0AwKK8AMCTvADALj0AgOY8AACevABguD0AAHg6ACAcPQDAzDwAQIY8AACFvACAU70AACq7AGCbPQAAKTwAYIw9AECwvAAAO7wAAFS7AAADvACAVL0AYCK9AICkvQBAgL0AgEY9AACJvAAAjjsAAPW8AAC3vACgCr0AQL68AMCGvAAAb7wAAEK9AMCMPACgzL0AUOQ9AADFPACgA70AAAE8AMCWvAAgXz0AwAI9AIDKvABgOr0AgHQ8ACBpPQAwqj0AACq8AEDTPADQgb0AwK48AKAWvQDwpr0AwF89AIDmPAAACrwAAMu7AGAePQAApbwA4BW9AMDIPQCgqz0AwKq8ABCcPQAA4DkAACy7AECwPAAwyL0AEJo9AABrPAAAUzwAgJI9AEDcPABADL0AwKe8AIBkPQCgKj0AAF+8AABLPACACbwAIAK9AMBCPQCADjwAYDa9AOB0vQCAhTwAAFs8AIAKvQAAeLoAAMA8AICPPADgKD0AAPs8AKBCPQAAoLoAAGo8AIBwvACAazwAgOW8ABCevQAAij0AAKg6AABiuwCgz70AAOy6AKACPQAAX7wAAL47AMgIPgCAUjwAAOo8ABDaPQCADjwA4Ao9AOBXvQAAuLwAwKA8AKCHPQAQmr0AgAC8AOBfPQDAZj0AIGw9AKA8vQCAP7wAQPY8AOAkvQCAIjwAACg8AOBivQAAGrwAYCI9AIAyPQAACrsAABQ8AKCBvQAAzrsAoD29ABCZvQDgez0AoDo9AKAlvQCAkzwAABC6AIBhPAAAnTwAYGq9AECxvAAA67wAQJM8AMD4vADgcL0AwEc9AEBJPQAwuL0AQAO9AADLOwAALjwAICK9AIBUPQBAwbwA4Co9AGCzPQDA4LwAYB69AAD2OwAAcLwAwP88AADqOwAwyz0AwCY9AKBBPQAAHrwAAEY9AMBlvQCAT7wAYC29AMCSvAAAg70AALO7AIAWPQAA4zwAoKQ9AEAiPQAAKjsAAHG9ACBtvQCAbTwAgAo8AIBEPADgaL0AEKM9AIAVvQAA/DsAgDs8AECbvADAuTwAAIy8AIATPADAgrwAAIE9AAATPACABDwAwPI8AEAHPQDQqL0AQLm8AKAVPQAApLsAAMW8AABivQAA5bsAAKC6AACMPQCACL0AgA88AAB+OwAAeLsAoMS9AKD7PQAgZz0AAPw8AAAqvADgBj0AAAm8AOBGvQAAqzwAAN47AIAfPACAGz0AAOO7AIDTPAAA3TsAAIK7AADFPACAK7wAQKS8AEAaPQAAtLoAYFg9AABFPQAAM70AAFw7AAAAPQCAfTwAwBY9AABvvAAAIzwAEME9AFDHvQDwk70AwLI8AABePQBAsLwAAOU7AACXuwCAjrwAIGE9AABFvADAsr0A4DG9AIDnvAAA07sAgEY9AADnOwBgMb0AwKm8AIBoPACASLwAAPs7AABAOQAAMLwAQNQ8AMC8vADwuT0=","chunkHash":"0d847fb9baf3a1006f6f92907bfda4a1b1743ca9d372f5388c05b0f5e6b7f954"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/J91M.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def model_init(self):\n        for m in self.modules():\n            if isinstance(m, torch.nn.Conv2d):\n                torch.nn.init.kaiming_normal_(m.weight)\n                m.weight.requires_grad = True\n                if m.bias is not None:\n                    m.bias.data.zero_()\n                    m.bias.requires_grad = True\n    #...\n```","range":{"startLineNumber":65,"startColumn":4,"endLineNumber":72,"endColumn":47},"embedding":"AECsvABAHr0AAAw8AOAQvQAAZzwAAIe7AAD1PADgij0AQNa8AIASPACAPzwAAPi7AAAQugCgLL0AAOw6AOAZvQCA6rwAYBg9AKAhvQAAzDoAAPS6AABvPAAAJz0AwOA8AIAiPQAAmLsAwIS8AEADPQDArrwAgBS9AOA9PQAAsbwA0Ma9AAB9PAAgKL0AADA8APCEPQBANj0AAFq8AABVPQBgTT0AuB6+AAC8ugDwxT0AAGK8AAB4OwBwor0AYBo9AICgvABAsDwAwOC8AICovACArzwAwLE8APCPvQAAizwAQEU9AIBAPAAgBr0A0I49AMC/PACggr0AALO7AOAEPQCAZTwAwLG8AGAmvQDAIT0AwBO9AIDrvADg0b0AwAG9AAA4ugAQp70AAKA6AICTPACAsDwAQIM9AABvPADAQb0AwMk8AADkOwAA0DsAAME7AKARvQDw870A0MO9AIBYPADAprwAANo7AOAOPQAAlbwAAHS9AABxPQDgtT0AcKM9AACMPACA8bwAAE09AAA2PABAnrwAANU8AICfvAAAUj0AADA6AOBKPQAA3bwAQKa8ACCXvQAAtDwAAEm9AECFvABAhbwAoCc9AACVuwDgSr0AgCO8AAAWOwBA6LwAgK+8AAD/vADAQr0AQA29ABDevQCAJTwAQJk8AAARvACAybwAAFs8AIDnvAAAdLwAYEW9ANCRPQBgXL0AwAG9AIB9vAAglr0AQK09AIBBvQCAfjwAAFQ8AOB+PQAAJ7wAYHQ9AAB7vABQtj0AsJa9ACAcPQAgLb0AAFC7AICFPABA9DwAgEW8AACFOwDggb0AwMS8AAC7vADwjD0AgGw9AEAIvQAAsrwAIEo9AKA+PQAAK7wA4HC9AKCCPQAwpb0AQBo9AMAhvQBwnr0AQIM8AIA7vADgPL0AgNc8AKAiPQDAzbwAIHq9ABCDvQCQ6L0AIJW9AIAsvQAAjjsAEKu9AACQuQCgQ70AgJQ8AJCYPQAgTz0AgHc8AACvOwCgCj0AAIk8AOBLPQDAnjwAQIM9APCGvQAgIz0AoDi9AACIvAAAp7wAIDS9ALCBPQCA4bwAoD69AEAxPQDA2b0AALY7AKApPQDAKr0AAF+8AAAWPQAAkDsAwOY8AEBvvQAANb0AQJ68AAAhPACA1bwAAKA8AADEOgBAGT0AwPU8AICMvADAMT0AgA49AAAMvACgHT0A0I69AAA0PAAADD0AAGA7AAACvAAAdTwAIDu9AIChvAAAh70AAOi7AACxvADAPz0AQNc8AIAivQBQoD0AgIQ8AADiPAAARDwAgAG8AAA8vABgML0AAAW8ABDHPQCgAD0AADw9AAAKvAAAn7sAACi6AAChuwDA0r0AwIi8ACA9vQAAtL0AgBY9AACPvABApLwAoAC9AIDivADgVr0AAAa7AGAwvQAAxbsAAJK7AEArPQDgm70AYOU9AOAhPQBAvLwAAOg7AACAOQDQmT0AAJo8AOBdvQCgE70AAMs7AICmPQDwhj0AACq8AKAePQDAeL0AgFk9AGA/vQAA1r0AQAU9AIBuPQAAlLwAgJu8AABJPQAAs7sAwIq8ABC/PQDghT0AAJG7AJCcPQAArLsAQIW8AECOPACQ0r0AoKk9AAB0OwAAdrwAoIw9AOBsPQBAE70AgEm9AEA7PQDAWT0AIAe9AABWvACAerwAgBS8AKBpPQCALjwAIBC9AKANvQDAzjwAAA47AKBCvQAAnLsAAAk9AADWOwCwhT0AYEs9AAAzPQDgDz0AgFu8AIB0PACACT0AAO+8AKCNvQDgnz0AALK7AIAMvADww70AQL28AMDyPACA/bwAALw6AKDFPQAAm7wAYCM9AOCSPQAApLoAgKw9AABPvQCAy7wAgAO8AECjPADAo70AwJS8AKBzPQDQlT0AQEM9AMCMvQAAxDsA4Bg9ACBhvQCAqDwAgLQ8ACCNvQCAZLwAoFA9AKAsPQAAKLwAAMq7AIBzvQBA1bwAgOa8AEB5vQBA0DwAALI8AADAvACAPT0AAPQ7AIC0PAAABj0AwBC9AMD/vACgWL0AQPE8AKA1vQBAg70AwD49AOByPQBg3r0AwP28AIC9PAAA7TsAgOO8AIBfPQCAJ70AgDQ9AJCfPQDAJL0AwAu9AIA7PAAAj7wAwBw9AEDgPADgfD0AQJM9AAD9OwCAcTwAMKA9AAAtvQBAg7wAANm8AMAzvQAQo70AAMi8AAC+PADA5TwAAHM9AID+PAAAh7sAwLG8AOBCvQAAWDwAAJI8AAD1OwDAXL0A8Ko9AMAfvQAArDsAAFA6AIC2vACgbT0AgDo8AIB8vAAAHrwAwBk9AICVPACAmDwAAKs8AMD9PADAn70AAL27AIDNPACgWL0AoCi9ACBQvQAAYLsAAIi7ADD2PQDgL70AgKQ8AACmuwAAC7wAcLe9AECrPQBA0jwAwOA8AAArvACA1DwAAC47AJCCvQAgBT0AIBg9AAADPADwgj0AAAa7AGATPQAAADwAALM8AMCpPAAAKjsA4Cm9AIB2PAAA/bsAQIE9AMACPQDADb0AgII8AAAfPAAgDz0AgGA8AAD0uwCAwTwA2AA+AIDGvQDgQb0AQIQ8AIAuPQBAd70AgGw8AAC4ugDAkLwAQGk9AIAxvABgir0AwF69AGAzvQAAXLsAQBQ9AIBZPADAar0A4Dq9AAClOwBAAr0AQM48AADAugAAursAgDI8AIAuvAAgiD0=","chunkHash":"0bb3ef3dd9387e575ef1c4354686625dff640d8684d4029fc5d46e95b87b4939"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/J91M.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def forward(self, points, features):\n        # Ensure correct shape [B, C, N] without the extra dimension\n        if len(points.shape) == 4:  # If [B, 3, N, 1]\n            points = points.squeeze(-1)\n        if len(features.shape) == 4:  # If [B, C, N, 1]\n            features = features.squeeze(-1)\n        \n        # Don't unsqueeze again since we're ensuring the format is correct from our adapter\n        # points = points.unsqueeze(-1)\n        # features = features.unsqueeze(-1)\n        \n        feats = [self.head(features, self.knn(points))]\n        for i in range(self.n_blocks-1):\n            feats.append(self.backbone[i](feats[-1]))\n\n        feats = torch.cat(feats, dim=1)\n        fusion = self.fusion_block(feats)\n        # Only use global max pooling as per paper\n        #...\n```","range":{"startLineNumber":75,"startColumn":0,"endLineNumber":92,"endColumn":0},"embedding":"AADuOwDQib0AIBY9AGAXvQAAZbwAgFG9AEAVPQAgAz0A4Du9AMDuPABAojwAQDG9AKAbvQCAQ70AwIo8AKABvQCAQ7wAwMw8AAC2uwAA3rsAAK28AADAOQCgeT0AAIs7AIALPAAA/rsAAKU7AKAWPQAAxrsAQOu8ABCIPQAAELoAQKe9AIBivADgdL0AQB49ACAePQDwhD0AgBa9ANC4PQDwqz0AYAW+ACBDvQCgcz0AAKQ7AICJvABAf70AANk8AADVOwAgXD0AQOS8AMAVPQAAIDwAACU9AICqvQDgND0AAGM9AADluwDAAL0AkIo9AAB6OwDQr70AgBm8AMCxPACAATwAgHO8AAA4vQBAeD0AQBm9AMCNvADwi70AALY7AECXPABAJr0AwIw8AAACuwAAOjsAwIk9AAAKPAAAXL0AAJM8AAAQugAA8LsAgOU8ACBPvQCw670AgFK9AICIvACAHb0AAOC5AOBFPQAAgLgAYLa9AKA4PQAQmT0AQM89AIC/PACAl7wAcII9AADquwCAPbwAwPc8AEApvQCAdzwAgFU8AACauwBgcb0AgBW8AABmvQCAozwAQHa9AIBLPABAkrwAQAY9AIDfPABAg70AAMW7AECKvADA07wAgMg8AGAFvQDgOb0AADm9ANCUvQCAHrwAgEU8AKBAPQCAQbwAwMm8AACIvAAAmDwAIFG9AHCOPQAAnbsAQIm9AKAOvQBwhb0AAL09AICvvADAk7wAAFI7AICsPQAAATwAAIQ7AAA8PABAqj0A4Ou9AAAgPQDA1LwAQPQ8AAAgPADgCz0AgM88AEDcvAAgur0AoDq9AMBkvQAgWj0AICc9AICvvACAJ7wAAEC5ACBuPQCAoDwAIBu9AAA0PQCw0L0AgA49APCFvQBAnr0AACY8ACB2vQBASb0AAGE9AICBPQDAIL0AYDu9ANCuvQCAiL0AQJy9AOBXvQAAZDsAsJ29AABYvAAgsb0AgFM9AIAxPQAgcz0AADg8AIBzPAAAELoAIII9AEDVPAAAwDwAcIY9ADCSvQCghz0AgDq9AEC/vADAmLwAYCW9AKAJPQAAOLwAwIi9AKBxPQCYB74AAHK7AAANPQAQg70AAAC4AMDkPACAUzwAQB09AGAuvQAAWL0AAFG8AADkOgAAWLwAgBe8AIBtPADgKD0AwPU8AEC9vACAzzwAAAY8ACA4vQCAqTwAsJ29AABKPAAAYzwAgOS8AMDjvAAAizwAgFy9AMD4vAAgNL0AAJ+7AKBlvQAA0TwAwBU9AMBkvQAQiz0AwKo8AMCnPAAACjsAAJ47AIDUvABgFr0AwOo8AKCHPQBABz0A4Cg9AMD4vAAAQrsAAGA7AECuvAAgEL0AYC69AAC/vADQsL0AYEk9AAARvADgSr0AgA29AAA6vQCA4rwAgF68AIB2vACAM7wAwJW8AIBHvACAV70A8LU9AMCrPAAAwLwAQPw8AECLvAAAdz0AIEQ9AOBPvQAgUL0AAD48ANCSPQAgRD0AAIG7AACEuwDAUL0AQCc9AECUvABAo70AwEQ9AMBfPQAAUrwAwIU8AGCEPQAAjLoA4G69AAD7PQAg2z0AoAq9AECFPQBgJ70AwJw8AGAmPQCQtb0AwGM9AIAavABAl7wA4DQ9AADaPABgJ70AQF69AOBgPQCAZjwAgL28AACAuABAjjwAACG9AAAXPQAAnTsAAOu8AKAyvQCAjTwAAK48AAAkuwBAsrwAAMs7AAB8PADAxzwAwKU8AEBOPQCAbDwAgDy8AAB4OgCAWL0AAEO8ACBkvQAAbT0AgAW8ACADPQBA0r0AwKy8AICSPABAKb0AAAc8AGAZPgAAtjwA4Dc9AHCNPQBA3rwAIAg9AOBDvQCARTwAgMQ8AGBZPQBgj70AQB+9AEBgPQBgAj0AQBU9AGCKvQAALLsAgC49ACA2vQAArzsAAHK7AACEvQAA5jsAACY9AKA6PQCAV70AQP48AEBQvQCAGr0AAKy8AKA7vQCgHT0AIDs9AED5vADAoTwAAEo7AICbPAAAOLoAoAO9AACqvAAAlDsAwKs8AMCIvADwu70AIB49AADAOACApb0AYDC9AABbPAAAbrsAYD69AFCFPQAARb0AoBk9APCZPQBgN70AAEu9AADoOgCgPr0AQE49AECnPACwqj0AwFQ9AIC2PAAAp7sAgPw8ANCOvQAAZ7wAwHG9AAC1uwBA+7wAAOm8AED/PACAfjwAAIg9AID0PABASz0AQPO8AIA3vQAA5DwAgFi8AABSuwBAH70AsK09AAD8ugAAMDoAgJc8AABQPAAA0TwAABG8AAAwOwAATLwAIKI9AABFvACAuzwAAF47AAC4vAAgob0AAPm7AIB0PADAurwAwMG8AED/vACAAjwAAAA4ACDePQCAq7wAYBk9AADvuwDA/LwAcNy9AHDhPQAATD0AACo9AACCvABAej0AANu7AABqvQDA0jwAQCs9AABdPAAgIT0AgEI8ABCGPQAA4LoAAOM7AADMPAAAQrsAAOi7AEDcPAAAULwAAG49AIBUPQAAo7wAALY8AMDDPACAUj0AANQ7AGAdvQBgMT0AkMs9AEBcvQBgeL0AAIo8AOB/PQCApbwAAEy8AACwuQBAirwAoCE9AIAKvQAgqr0AkIm9AIDxvAAA77sAkIQ9AMD+PADA+rwAgO68AACSPABABL0AYBM9AABOuwCgCL0AQIk8AAAgvADQkz0=","chunkHash":"319b90ef22b1a524aa11ed65da1a820acd6e0ca1f70c62ca3b02d832ecc90ad8"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/J91M.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    #...\n    def forward(self, points, features):\n        #...\n        x = F.adaptive_max_pool2d(fusion, 1)\n        out = self.prediction(x).squeeze(-1).squeeze(-1)\n        if self.projection_head:\n            return self.projection_head(out), out\n        else:\n            return out, out\n#...\n```","range":{"startLineNumber":92,"startColumn":0,"endLineNumber":97,"endColumn":27},"embedding":"AACZuwBgOr0AACQ9AIAAvQAANLsAwHG9AMDRPAAAfD0AYBm9AIA3PADAwzwAwG+9ACAMvQDAjL0AwLG8AABEvQAAHLsAQOQ8AMCjvAAAGDwAQMu8AIBLPADgXz0AACc8AIASPQBA6bwAgIa8AMCSPQAA9LsAwK28AGBhPQDAiLwA4Ka9AAC1OwBgQr0AwPQ8AGA9PQAgkD0AgE69ACB2PQAwlD0AeBS+AAAEvADgOz0AAIG7AADAOQDgkr0A4AE9AADsOgBgmD0AQFC9AIAavAAA/bsAQEU9ABCRvQDAvDwAYIY9AIA3PABAuLwA4D49AIBPPABgrr0AAES7AKAgPQAAdzwAwLC8AGAPvQDATT0AAKu8AMDavABgrL0AgAm8AIDXPADAPb0AAGQ7AADAuACAtjwAQB09AAAuvADgfr0AAKs8AABouwCAm7wAAAE8AMBSvQAA9b0A4HO9AADsvABAzLwAAMo7AMDbPAAApbsAMJW9AEBbPQBwgD0AsMg9AMCEPABAL70AwEo9AIAQPACAtLwAAII7AADZvADApTwAgG88AMDjPAAgCb0AAF+8ACAdvQCAcDwAAEq9AACvvABAhLwAoEw9AACwPACgfL0AAAm8AMCbvAAAcDoAAMI8AKAAvQAgGb0AwIy9AGCjvQAAYLoAgMU8AABDPABgLr0AAHu8AMDWvABAlrwAQDi9AKCpPQAAAb0AgFq9ACAZvQAAE70AALM9AMAavQAAaLoAgIA8AGBPPQAAjLwAQLU8AABquwCwpT0A4Mu9AGBBPQCgBb0AwN08AICMPACAOT0AAPm7AAAkPADQor0AoBe9AIDZvACAJD0AgA48AAD6vACAE70AAD08AICDPQDAiDwAgJ68AEAXPQCwu70A4DM9AKBMvQAAvr0AAAY7AIArvQAAR70A0K49AOBpPQCAIr0AwHi9AICSvQAAs70AoMC9AEB9vQBAlzwAEJi9AICuvACgX70AYAc9AEB2PQDAdT0AAJ48AIAMPQCAFD0AYEw9AKB4PQAA2jwAwDg9ABCgvQCAYz0AADe9AEAcvQBAtrwAAEi9AEBuPQCA8rwAwC69AICtPABw9L0AQOE8AKAfPQDgqr0AgCY8AMDkPACADDwAwCc9AGCDvQDgh70AAGe8AIACvQCAJ7wAAJO8AADuuwBAsTwA4DU9AIBSvABA0jwAgIk8AEDbvACgNj0AoHi9AECJvACAjjwAgFO8AMDyvAAAhTwAQIS9AAC1uwDAdL0AgIk8AKA3vQBgAT0AYEY9AEAJvQDAPT0AACg8AMDGPACAyjwAAK67AECZvAAAH7wA4BY9AHC0PQCApDwAwD89AAAPvQAA7LoAACw8AAALvQAQgL0AQI68AABAvQCQnL0AICM9AACXvAAgSb0AAK+8AADDvABgZ70AACg6AIAPvQCAdrwAgI+8AACyuwDgWL0A0MU9AEDoPAAA5LwAgJY8AIAFvACgnj0AQKw8AEAxvQCATb0AgDO8ACBsPQCALT0AAEI7AACkugCgZ70AQKc8AIBDvQDwoL0AAOo8APCJPQDAyLwAAIQ6AKCWPQAATjwAoDe9ADDuPQBQtD0AQOu8ADDAPQCAKb0AABg6AIBaPACgCb4A0MQ9AABQOgAA9DoA4GY9AACgPADAKr0AYGO9AGB4PQCAAz0AgDy9AADUuwAAkjwAALa8AOBqPQBAo7wAAB69AGBMvQBgCz0AAIM8AMCzvACgH70AwIs8AADaPACgHj0AAFU9AIA+PQCAIT0AwOe8AIBRPAAAy7wAQNy8ABCivQDAQD0AAD68AIBBPACw9b0AQKG8AAAkuwBgYr0AACQ7AODWPQAAWDoAIDQ9AMB0PQCA57wAAOI8AGBCvQAA47sAwJw8AEA7PQDAyb0AYA69AGAtPQDAojwAYDA9ALCXvQAAILwAwOU8ACBHvQAARrwAgHU8AHCcvQCAgrwAQIk9AOBLPQDA07wAAHi7APCHvQAAGr0AgBu8AOBhvQAA5TwAwLw8AIAzvQDgZj0AAFC6AAD4PAAA0LkAIAC9AIDOvACAZrwAAKs8AECpvABgob0AAEc9AADLPADw/b0AgDq9AAAQPABAgLwAQIu8AACcPQBAI70AQAM9AACePQDgVL0AYHq9AAAquwDAsLwAAP88AICuPABgiz0AQDA9AMCrPACAVTwAoDM9AKA3vQAAOrwAoGO9AICnvAAAh7sAwI28AABCPAAAoDwAYIY9AMBWPQCgOD0AwI28AIBjvABABz0AAMM7AACJOwCALrwAYMU9AECKvADArLwAAPi6AAACOwBgJT0AAAS8AMCKvAAAlzsAQFM9AEDPvADA3TwAgAI8AICHvACAl70AQJK8AADSPABAU70AgJu8AMAEvQAAjrwAAKE7AIDYPQBAorwAgIQ8AAAGOwCAGr0AANS9ADDLPQCACj0AwCo9AAAAugAgAz0AwLA8AGB7vQBArzwAwNE8AIBUvADQiT0AAG48AMBYPQAA6jsAAEm8AAAFPQAAzTsAADe8AID7PACAEjwA8Jc9AIARPQAA0jsAAPE8AABPPAAgPD0AgOs8ACANvQCAMTwAINM9AKBIvQCAY70AAKI7AAAxPQDArrwAACW8AACkPADAkLwAwNk8AECHvAAQg70AwGm9AMChvAAARrsAgFE9AAB6PABgHr0AgH+8AAB3PAAA8LkAYHA9AADauwAAYbwAAMU7AABIOgAgjD0=","chunkHash":"a8c5c333b0fab86fd1690b191cc192e4b30d3f9809709e774e9467f1256037c3"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/J91M.py`\n```python\n#...\nclass DeepGCN(nn.Module):\n    \"\"\"\n    Implementation adapted from:\n    https://github.com/lightaime/deep_gcns_torch/blob/master/examples/modelnet_cls/architecture.py\n    Credits to DeepGCNs.org\n    \"\"\"\n    def __init__(self, act='relu',\n                 bias=True,\n                 in_channels=6,\n                 channels=64,\n                 out_channels=80,  # Changed to match paper's 80-D output\n                 dropout=0.0,\n                 k=12,\n                 norm='batch',\n                 knn='matrix',\n                 epsilon=0.2,\n                 stochastic=True,\n                 conv='edge',\n                 emb_dims=1024,\n                 n_blocks=3,  # Changed to match paper's 3 GENConv blocks\n                 projection_head=True,\n                 use_dilation=True):\n        #...\n    def model_init(self):\n        #...\n    def forward(self, points, features):\n        #...\n```","range":{"startLineNumber":9,"startColumn":0,"endLineNumber":74,"endColumn":40},"embedding":"AADPuwDALL0AAJI8AADUvAAAADkAwLK8AAAoPAAAnDwA4Du9AECXPAAAXjwAgEq8AACkPAAAAb0AYA09AAAivQCAYjwAAFY9AECpvABAjrwAgCs8AACaPACgVD0AwLM8AECmPADAs7wAANS7AIBFPAAAbrwAgBi8AECCPAAA+rsAIKq9AOArvQDgnb0AwKs8ALCiPQBAkT0AQDq9AMDIPQDALj0AICW+AAAwvQBwsD0AAPy6AACIugBgUr0AwBY9AABcOwBA8TwAgFa8AECMPAAApDoAAIa7AOCbvQBAoDwAoE09AIAEPADApbwAgGo9AACQOwDgsb0AQOO8AICTPACAD7wAAIW8AGBnvQDAbT0AYC69AAAEuwBwl70AgKO8AMDOvACggb0AAEI8AAAAOgAAaLoAsKM9AABSOwDgGb0AAB49AADauwAA9jsAQB09AABIvQBgtb0A0Jq9AMC9vAAAvDsAQJi8AAAGPQAAhbsAgKG9AECMPQAwlz0AIL49AIC/PADAp7wAMMI9AACwugAAxDwAIAQ9AMCivADgED0AAGw7AMCUPACAhrwAADI7ACBBvQAA7DwAQP+8AABgugAA4TsAALY8AECBPADQhb0AAM07AACAugCgG70AAIU8AAAJvQDgbr0AAIO7ADC5vQDAojwAQLY8AOBGPQCAtLwAAJG7AACHvACArrwA4GC9AJCDPQDApLwAkIS9ACA3vQBgeb0AYKg9ACAWvQAAibwAgBm8ABCHPQAAYDsAAPg8AEDTvADA1T0AoOG9AGArPQCAVb0AICE9AICHPACAdD0AQL48AKBBvQAAXL0A4Eu9AAAIOgDQnD0AQFA9AECuvACgIT0AwMk8AKByPQDgBj0AoEW9AIBjPQBg070AQEM9AECkvABwh70AQBY9AIArvACAmrwAAEo9AMDgPAAAkLwAgFi9AICEvQBgib0AQLq9AOB1vQAALjwAsJm9AICVvACAr70AQNw8AGCNPQAgAD0AALE8AIBEPAAAczwAwJ88AOAkPQAAxLoAwHs9ACClvQCAXj0AIIS9AADnvAAAaLwAoCy9AKAtPQDgFb0A4H29AIBHPQAYBb4AgGG8AMDwPAAAH70AALk7AAC5PAAA0DsAAFQ9AGAzvQDgSb0AAJC7AICDPABA07wAAEw8AACGPACgMT0AwDo9AGAnvQCgKT0AgKo8AACKuwAAGDwAgN69AADhOwCALjwAAP87AIAgvAAAjDoAwCi9AEDqvACgTL0AgGi8AOAMvQAAIjwAANw8AEBRvQAgoT0AACq7AADduwCAtjwAANA7AMCDvABAbr0AAEA6AFCVPQDAoTwAIGo9AECavACAD70AgG28AADtuwBAEL0AwAa9AKB7vQAwm70AYCk9AMCMvABAu7wAoBu9AMAuvQAA2rwAgN+8AACbvAAAKzwAAKi8AMDjPABgrL0AcOQ9AMD0PAAAI70AAME8AIA3vAAgdT0AoA09AID3vAAgSb0AwLw8ACDFPQCwuT0AgBC9ACARPQCAdb0AAFc9AOBAvQCwlb0AwPc8AED2PAAgc70AAEg7AKAYPQCAD70AYAC9AHDoPQAQmT0AAFe9AKCSPQCASTwAAI27AAAYPAAAzL0A4HA9AACquwCAR7wAMMg9ACACPQBAoLwAAGW8AKBLPQCAC7wAAAK7AAARPAAA1TsAgJi8AABpPQDAqjwAgC+9AKA7vQAA1zsAAIk7AIDJvABA1jwAQMw8AIAEPADAXD0AQAg9AIBIPQAAjDwAgE88AMCTvAAA5DsAANA5AGCNvQCAUD0AAPA5AICNvADQxb0AQA29AAAMOwAA57wAAJ47AGgKPgAAKDsAwOI8APDJPQDAmTwAQMk8AABjvQAAjLsAgK+8AEBJPQDAXL0AgEm8AAAlPQCARz0A4FQ9AJCXvQDgGD0AYB89AEAevQAA3TsAANe7AMB5vQAAFrsAgJQ8AED/PACAorwAgDc8ALCTvQAAwDkAgB+9AKBBvQBQoD0AgDA9AAAPvQAALDwAQIQ8AIDSPAAAtjwAwPm8AOAJvQDA17wAgMQ8AGCAvQCgUL0AQH89AICNPACAw70AoDO9AIB2PACAvjwAAMy8AKA+PQDAHb0AwCI9ABCrPQAABb0AQBK9AAAEuwCAkbwAIEI9AIBjPACAnz0AIGk9AGAePQCAQrwAYCo9ALCVvQAA3rsAABy9AMCEvADAar0AAMO8AMDyPACA/DwAIHs9AIBSPQAA5rwAYEy9AIA0vQAAq7sAAEm8AADJuwAAFL0AMLk9AAAquwAAvTwAACm8AAAGvACAWTwAAPG7AABIuwDA0rwAsIM9AIBaPABADz0AwKk8AABTPABgmL0AgAG9AMC2PACAdbwAgDm8ACAKvQAAQjwAwMe8AKCdPQDABr0AgEc8AECtvADA2LwAsLm9ADAAPgAQkD0AQKo8AICMvABAFD0AgLu8AKBJvQDAkzwAAHI8AIAEPACgaD0AgGc8AOBvPQCAizwAgFs8AIARPABAwLwAgJu8AAAsPQAAm7sAgJo9AOBgPQAArrwAAJ47AMCcPAAgQT0AACE8AIBnvABAjDwA4M89AMBUvQAwh70AIAo9AMCNPQDARr0AAFA6AABJvACAa7wAMIE9AOAVvQCggr0AwEe9AEC7vAAAyDoAYE89AADwOwDA/7wAYCi9AAB1vACAX7wAwJc8AOAMPQCAHb0AAMI8ACADvQDwjD0=","chunkHash":"714d6d3de1698adc5bc1ee830a903ea9b0bdb81098637f2564e65c8d30a016c6"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/J91M.py`\n```python\nimport torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nfrom torch.nn import Sequential as Seq\nfrom .torch_nn import BasicConv\nfrom .torch_vertex import GraphConv2d, ResDynBlock2d, DilatedKnnGraph\n\n\nclass DeepGCN(nn.Module):\n    #...\nif __name__ == '__main__':\n    import argparse\n    import yaml\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--config', type=str, default='runs/Configurations/xyz-normals-contrastive-DeepGCN-NewAugment-cells/config.yaml')\n    args = parser.parse_args()\n\n    with open(args.config, 'r') as f:\n        net_params = yaml.load(f, Loader=yaml.FullLoader)['model']['kwargs']\n\n    feats = torch.rand((2, 6, 1024, 1), dtype=torch.float)\n    points = torch.rand((2, 3, 1024, 1), dtype=torch.float)   \n    num_neighbors = 20\n\n    print('Input size {}'.format(feats.size()))\n    #...\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":115,"endColumn":0},"embedding":"AMDNvACgfL0AICw9AKAwvQAAjTsAAJo7AACQOwDANj0AQOi8AAAAuQAAnDsAIAC9AABBvABgYb0AYCk9AACQugCANL0AwDk9AIBCvADAsLwAgFi8AAAGvADwrT0AAD88AIA2PAAA5jsAAMu7AABXPAAANjwAIFa9AADJuwAAAr0AUKW9AAByvQAAW70AADw9AGBEPQAAxTsAgAy8ACDKPQBgez0AQN+9AICGvAAgfD0AAC68AOANvQAwsb0AwMw8AADCuwCgTT0AQI68AADguwAAZjsAoA49AABuvQAAbrsAgEM9AAAOOwAAVLwAEKY9AMBBPQAgnr0AACQ7AIDBPAAANrwAAC47ADCtvQDAYT0AYBS9AACYugBQib0AACY7AACZOwDQor0AAG08AABgOwCAATwA8Ik9AADYugCQo70A4Fw9AAAPPAAAxDsAAMi8AAAivACgzL0AkOC9ACAavQCAoLwAgE68AOBsPQCAYbwAAGq9AEBSPQAgiD0AQAk+AMCQPADAlrwAQCU9AABMOwAA8LsAYDw9AECSvADAzDwAYAM9AGBrPQCAfbwAAHY8AOA0vQDAjjwAgEi9AADUuwAAsLkAQII9AOBSPQBAbb0AgEk8AMCAvAAAlrwAgGq8AAAMvQBAhr0AAFq8APCFvQAA5rsA4AM9AKAXPQCAc7wAAL27AMCmvAAAnjwAgEu9AABhPQBgEL0AIJG9AAD2OwCw670AIEU9AABZvQAAJjwAANA6AOASPQDAjLwAYAc9AMCSvADAqD0AMOm9ANCEPQBAK70AAHI9AADSuwBgAz0AAKA7AMCbvAAAAL0AYDy9AIB2vACgej0AgCc8AMCTvAAAxrsAAPc8AADUOwCAcTwAwJy9AMB+PQCw9L0AYAs9AOBpvQCATr0AQN88AMClvACA97wAgHc8AIBBPQAARrsAYN69AEBAvQAAn70A4DS9AECPvQAAzTsAYGO9AIBLvAAQqb0AwBC9ACB/PQDA0TwAADA8AADGOwAAdjsAAIE7AAAkPQAAMjsAgC49ALCMvQCAvz0AADi9AECJvAAAPjsAQOG8AOAzPQCAR7wA4AK9AADQPAAQ570AoA69AABMPAAAmbwAANu7AIAZPQBAKD0AYHc9AEAsvQBgg70AwPi8AOAIvQAAwbsAABk8AADIOwBA2TwAwNU8AMDNvABgET0AACq8AIC1vADADT0A8Ka9AAC2PAAA8jwAwAu9AED/vAAAZb0A4Fa9AGAzvQDQiL0AAHY7AIApvAAAMrsAYHg9ABCMvQCgNj0A4G49AADAuABAMD0AAMc7AABHvABggb0AoCk9AKCuPQAgFT0AYCo9AIBYvAAA9jwAAFM8AGBKvQDglr0AoDW9AOBTvQBgK70AQAk9AEDpPACA8rwAAGC8AFCIvQAA+LsAQDi9AAB+vAAAB70AALm8ACBePQBAjL0AULU9AMDrPAAANL0AAFG8AACnOwDwjz0AAGM9AFCLvQDAkrwAgE88AEBEPQAQjj0AwLK8AAClPADgbL0AAKA6AADEuwBgIb0AQE49AACePAAAKrsAABA6AADNPADAxDwAQLI8APC2PQBQoD0AANC8AKCRPQCAFbwAAPK7AIC9PACAtr0A4JQ9AABAuQAAsjwAwAY9AICHPABgAL0AAJ68AMBUPQAAaDsAgCS8AABYuwCAXTwAwE69AGB0PQCAVjwAAOw6AOCXvQAAUjwAACI8AGBrvQCAEbwAADs9AKAEPQAADz0AAHi7AADzPAAgAb0AwDE9AAAFPAAA27wAAI67ANDAvQBgqj0AAAA6AIDDPADw770AwI69AAB4OgAAQLwAAHI7AKgMPgCAPj0AQJc8ABCiPQAAdrsAYAY9AAD4ugDAG70AgAc8AACoPABwtb0AgCK9AGBrPQCAzTwAQFo9ACA4vQAAZrwAYCc9AIDQvAAAETwAgBU8AAAgvQBgCz0AAAA9AABXPAAAk7wAAM47AAC+vAAAcLwAoFG9AHCKvQCgPj0AwLw8AACEOgDgCT0AAJo8AID0vAAA9TsAoBG9AACGvQBAZL0AgAc9AAD3OwAAOr0AQCc9AECRPQDwpb0AQJO8AAB3PAAABrsAQJA8APCBPQAA7rwA4Eo9AMCYPQBAnjwAAKC8AIBHPADQh70AwPc8AADDPABwmz0AoHM9AEBSPQAAhbsAwIw9AKB4vQBALL0AAEa9AMDavACAb70AQCO9AMCiPAAAsDsAUIg9AAAAOgAAEDoAkMG9AEBJvQDAwbwAAKS7AIBFPABgQL0AMJ09AAAIvAAA8zsAAKI7AACcOwAQuz0AAD68AIBcvAAAKrwAIEU9AMDePAAADbwAQKc8AIAwPACAjL0AQNO8AAC5OwAANrsAYDS9AGBnvQAAmzsAQNW8ACCOPQDgHr0AAI48AABIuwCAvLwAsNK9APDDPQBAyzwAQOk8AIAJPABAXD0AwOi8AED1vACAEzwAwEI9AECcPAAghT0AAJe7AKAIPQDApDwAQMk8AAAaPQCA8LwAgOO8AIBcvAAgM70A4Do9AMCLPQAAH70AwCs9AECvPADAvzwA4C09AAD3uwDAzjwACAI+AGCTvQBQir0AAGw7AICLPQAgCb0AgHI8AAA2OwAAm7wAICA9AADSOwBwrL0AIIe9AAAwvQDgFL0AQB89AMDKPACgOb0AgAK8AABwOwDA6LwAQOQ8AAARPACA47wAAEo7AICDPACwiD0=","chunkHash":"596953cf970c8888a989542fb5c9adc1a75f7e0641283f0f52f126cd699ea6ca"},{"text":"File: `.vscode-server/data/User/History/4ba8fda2/J91M.py`\n```python\n#...\n    net = DeepGCN(net_params)\n    out, h = net(points, feats)\n\n    print('Output size {}'.format(out.size()))\n\n```","range":{"startLineNumber":115,"startColumn":0,"endLineNumber":119,"endColumn":0},"embedding":"AMClvABAK70AQFg9AIBcvQAA+rsAAOu8AADgOQBgXD0AQMy8AAA4PABA1TwAgPe8AABdvAAgf70AgAg8ACBgvQAAqrsAQCE9AMDVvAAAiLsAAJW8AABsOwDghj0AQCo9AGCVPQAAm7sAAKO8AMAePQDAvTwAANA7AIAbvAAAybwA4IO9AACBvACAnLwAQOI8AEASPQAAaz0AQJq8AACkPQCgkz0AOBG+AADouwDgID0AgLU8AABhPAAAOr0A4Dc9AEDoPAAAhTwAQPC8APCHPQDA3bwAAMs8ACBAvQAAJDwAAIU9AAAmPAAANjsAgDE8AEAUPQAA8LwAQJk8AAA+PQDA0jwAgBK8ACB0vQDAPT0AIBO9AED7vACASr0AAOU7AADXvADgjb0AgBs8AIACvQBA7rwAwHI9AADsuwBQuL0AgIk8AIAMPACAkjwAgLS8AAClvAAgrr0AwHe9AMA9vQDgB70AQMs8AEAHPQCAr7wAoDi9AEDGPADAVj0AgKI9AAC4ugDAC70AwOI8AAAKOwAAyjsAAD47AEA3vQCAlDwAAOk7AFCOPQAAkTwA4CE9AIBWvABAobwA4Ja9AICtvABA47wAgBY9AAC8OwCAEL0AYBA9AMC/vAAgCT0AoA49AIBNvQAAgLkAwBO9AOCuvQAA0TsAoGY9AACWPAAAJL0AIEo9AACqPAAA+7wAoEu9AMDFPQCQnL0AQEu9AMDhvADgOr0AQGU9AECHvQAAljwAAJc7AHC4PQDAoLwAwOM8AABgvADAlz0AMNy9AABEPQAASL0AALA6AMALPQCgSD0AwPW8AAC0uwAgVr0AoAK9AACAuABAjzwAAJ67AMDIvAAAnLwAAH08AED/PADAGT0AAFm8AGBmPQBAEb0A4Ew9AKAsvQAgXr0AoBY9AECXvACAR7wAAKU8AOBAPQAA0LoAMIu9AMCwvACw5b0AsOS9AEBnvQAAUDsAACe9AAAGvABAh70AANc8ANDIPQDwjz0AIAo9AAAIPQCgFj0AgAE8AIB0PQCA+7wAAEM9AFCpvQAgSj0AAG69AKBlvQAAQLwAoA69ACB+PQDAizwAwEK9AMDNPADwE74AwOm8AAD4ugCAEb0AgCK8AIAEvABAKj0AoBk9AGC0vQDgbb0AIAe9AACOvAAgST0AgLe8AIC3vAAAMLsAgGE9AIAWvAAgLj0AAAAAAAADvQAwjj0AwDi9AAChuwAAfrwAAJY7AABMvAAAvLsAYCK9AABKvAAAOr0AgGU8AACBvAAAursAgEA8AAD7vAAAWrsAABk9AED+PAAArzsAwKy8AABFvAAADr0AwNs8AOCjPQAACD0AAEc8AIAcPAAA4DkAAFE8AEChvADgxL0AAII7ACAivQDAq70A4DI9ACBEvQDgpr0AQDW9AGAOvQCAzLwAALA8AED9vABAQ70AgLc8AEALPQDA6LwA4JE9ACBPPQCAOr0AANc7AAAGOwAAAD0AAOw7ACAtvQBgG70AIAs9AMCDPACAmz0AAB49AADyOwBAOb0AgJw8AAB2OwDga70AABU9AMB8PQCgIL0AADk8AMCHPQAAeLoAAIY8AFCUPQAAVj0AwM+8ALCbPQCgUb0AgAQ8AMCQPABQO74AUMU9AICePADAqLwAoHg9AOA2PQCAo7wAAFi8AAAuPQAAgTwAAJC9AACmvACA3TwA4BM9AMChPQAAMjwAAIc7AMBKvQAgGD0AwMQ8AMC9vAAA4LwAgNi8AADevACgaj0AMJA9AKBLPQBgfT0AYAm9AAA+uwCA4DwAAJS6AJDOvQAgTD0AANk7AACuOwBw770AACa9AEDwvADgH70AwOe8ACC4PQDAnzwAwDk9AAC4PQCAOL0AIGE9AIAWvQCAArwAAES8AEAKPQBQir0A4Fm9AACUOwAANjwAwOI8AKCfvQAAcTwAANW7AEBovQCATrwAQJ88AICbvQBAFT0AYEQ9AMDVPADAo7wAgBQ9AHChvQBApbwAAJQ7AMBhvQDAGj0AAB09AABtvQAAGj0AAHa8AMDMPACAhDwAAIu8AKARvQCAqbwAwIg9AIBFPAAwtr0AgCA9AIBDPQCwy70AYDa9AAAuuwAABLsAAJ+7AKDAPQCgRb0AAJg8ALCgPQAAUDoAsIy9AABwOgDAUr0AoBM9AIA1PAAAlz0AAGE8AEAqPQCAQjwAQDQ9AMCsvAAAzTsAYN29AIANvAAgIb0AwC69AMDVPAAAhzwAYHQ9AAATPABA07wAQOu8AACeOwAASLwAwJk8AADJvACAaLwAcNs9AIDqvAAADDwAgBA8AABkPAAgGD0AgD48AMDcvACAjzwAAFE9AACruwDAIT0AQC09AADCvAAgHr0AAIw6AACCPADAv7wAAGM8AIAYvAAAaD0AAPq8AEAjPgAgRb0AwK+8AIAAvAAArrwAoLS9AKCdPQCABj0A4DU9AMDiPAAAzzsAAPQ7ALCjvQAgVz0AYBQ9AICyvABAqD0A4A09ACAFPQAA57sAACA6AOAHvQCAt7wAwNy8AKA+PQAAvLwAAAw9AEBEPQBAlrwAAMA7AACduwDAsTwAAKC5AABnvAAAhLoAkA8+AOAIvQAglr0AALQ7AEDCPADwgL0AAAc8AEA/PQCAp7wAwCw9AAC6uwBAeb0AYGG9AAAeOwCAjrwAQHo9AMCbPAAAhLwAwJO8AABougAA1rsAQK48AIBAPAAA4LkAAKI8AIAuPADAWT0=","chunkHash":"7472f79d3b45bd7ef3f8400a9fe5e68acc920db7c1a4b4165fcb88298eac5949"}]},"file:///teamspace/studios/this_studio/.vscode-server/data/User/History/4ba8fda2/entries.json":{"hash":"6b8c25cab13fa9c9558f4b0134e61414a9ba9673d4111c6051ff594a9d736adf","entries":[{"text":"File: `.vscode-server/data/User/History/4ba8fda2/entries.json`\n```json\n{\"version\":1,\"resource\":\"vscode-remote://ssh-remote%2Bs_01jtz4dfc5tqsyqw0tv1w86v7n@ssh.lightning.ai/teamspace/studios/this_studio/MorphoFeatures/morphofeatures/shape/network/deepgcn.py\",\"entries\":[{\"id\":\"Zxv5.py\",\"source\":\"Chat Edit: 'MorphoFeatures/morphofeatures/shape/network/deepgcn.py\\ni have deep gcn here '\",\"timestamp\":1747563264746},{\"id\":\"DRNV.py\",\"source\":\"Chat Edit: 'MorphoFeatures/morphofeatures/shape/network/deepgcn.py\\ni have deep gcn here '\",\"timestamp\":1747563280094},{\"id\":\"J91M.py\",\"source\":\"Chat Edit: 'MorphoFeatures/morphofeatures/shape/network/deepgcn.py\\ni have deep gcn here '\",\"timestamp\":1747563296619}]}\n```","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":1,"endColumn":0},"embedding":"AADQOQAAvDoAIB09AEB3vQCQij0AADO8AIA7PAAAZDwAgFa9AICbPADgPT0AALM7AEBCPQCga70AwAq9AABpPQAAlDsAAGY8AIA0vQBA2DwAoDI9AACovABAIT0AID89AAACvAAAwLsAAJq9AGB2PQAA0zsAgBs8AABUvABAqrwAwLg8ACALPQAAFTwAwO08AMBsPQBAmbwAgFU8AIC7vAAAGrsAsMa9AGAoPQDAJT0AAKq8AIApvQCAIb0AANk7AIAePAAAKTwAIIq9AABrvACAQTwAAPe7AKCGvQCAbLwAQKA8AAC0PABAVL0AAIU8APCYPQAgj70AAOg8AMBtPQCAAjwAIBI9AKCpvQAgET0AACc9AAAKvACAS7wA4Fk9AMAEvQBAgjwAMLY9AIBwvAAAE7wAQFM9AAAPPAAgw70AgCq8AACfPQAgfb0AIBa9AACNvQAAUr0AINO9AECQPABAibwAwIq8AADNuwDAtLwAQOa8AOAKvQBQ8j0AgK08AKB0vQDAM70AABi6AIAMPAAAEDwAAOW8AIB5vQCAs7wAABk8ABC8PQBQ4j0AYDC9AMDSvABgcr0AwJK9AABHvAAgA70AAJy8AID0PAAAx7wAQLm8AADQOQBA4DwAgLw8AECtvAAAVjsAQOw8AAAEuwAAgjsAgJq8AKBPvQBAtLwAwNW8ACAavQCAe7wAAIS7AHDJPQDw1r0AAAG9AAChvAAgp70AgD48APCOvQAAFT0AAKi6AAAYOwAA6TwAwEo9AABavAAA5bsAID29AMDiPAAgZb0AAKw6AACkugBglT0AQKE8AABvPQCABDwAANA6AEAyPQAANjwAIHq9AID3PADAHL0AAAY7AMCQPADAsrwAgBu9AKAZPQBA1DwAAGQ7AMBbvQAQmL0AALE7AAB9vQBgXL0AoCU9AOCAPQCgH70AAOG7AEBlvQDArb0AoAG9ACB/vQAAIrsAAHS9AACTuwCQgL0AQO28AIByPADA1DwAAOE7AKAzvQBAiTwAAOu8AECVPQCAxzwAIHY9AIDgvQCARzwAgDi8AAAaOwAA8LsAgP+8AKDaPQDAqzwA4CG9AACNvQDgP70AQAi9ACAivQCAF70AAFS9AIDxPABAgT0A4BG9AADguwAAOzwAwF69AGAovQAAAT0AAPm8AIAlvQAAMrsA8KM9AABaPQDAkD0AwHI9AAD9PABwsz0AYJe9AAC7OwCgKD0AAKA7AADouwAAl7wAQIe9AICcPADAp7wAAPC8AIAHvQDgNj0AwC89AGCWvQCAPrwAMLA9AMDPPQAAdj0AgBA8ACAevQBguL0AgDS8ALCJPQDAMT0AoFo9AECWPACAGb0AAIM7AAAhvQAAAb4AYAk9AABzvADgc70A0Oo9AIAdvADQrr0AAFo9APCIvQCAzbwAYMw9AABUuwBAZb0AAAC7AKALPQAA7LsAQNU9AACfOwAAV70A4AY9AEDKvAAgpT0AQAY9AABLPADArrwAoAU9AMDtPAAA+zwAgMO8AMDmPABgML0AgKA8AADiPAAgIL0AAM27AMDBPAAAIz0AgKK8AAAIvAAAYDkAAGM9AOA7PQAAzDwAAAY7AHCRPQAQyr0AAH49AACsvAAAS70AEKA9AKALPQAAmb0AIMc9AAC0PACA8zwAELa9AABePABgAb0AoFS9AAC6uwCgTj0AAP07AIBEPQAA37sAAB28AGCFvQAALj0AQPc8ACAkvQBA2bwAoFA9AMDBPACgJz0AcJM9AGA/PQDACb0AALg7AABbPQCgVj0AAJ+9ALCevQBwgj0AwLC8AEBBvQAgu70AII+9AGA8vQCAWr0AgDy9AOASPQBASL0AACA5AID9vAAADDwAAOg7AIDVPADA87wAAOm8AOALvQAAcLoAwL68AECCPQDAxDwAoAo9AECDvAAAhTwAAKU8AADvOwBAOD0AQNw8AIBQvQDAmDwAULU9AMDqvAAAxDsAYJy9AIC5vAAAeLsAoD29AIBBPACADzwAYKI9AIBkPADQmT0AgBI9AEBEPQAAn7wAAJe8AIArvADAUb0AAMC4AICsPABwhb0AAIS7APCHPQBgkb0AQJQ8AAAkuwCATrwAIDk9AKChPQBAAr0AANY7AACyPADA8TwAQCm9AIA1vAAA0jwAACQ7AADRPADAozwA4AU9AECoPAAAxDwAAE89AABNPADAvLwAANS8AICKPADAm7wAgFk8AEAxPQDAAD0AYEU9AMD1PACAMLwAwPW8AID9vACAirwAwFU9AECqPACAtLwAYJY9AEDuvAAA0rsAgD+8AFCPPQBAuzwAIGk9AIDKvQAAN7wAAOS7AEDgvAAAJTwAgDq8AADyOwCA7LwAoBI9AACAOwBwsb0AAKS7AIDvvAAwpj0AgCw8ALCgPQCgmb0AwKu8AKAdvQCAT7wAIB69AMD6vAAAP7wA8Ig9AAAAvABglL0AALg8AEDwvAAAgTsAQCA9ANCivQCgJL0AAOe8AEDivADAmrwAgBA9AABrvACAPLwAAE67AABGOwAgGr0AgC49AMCwvADAJz0AgIs8AAAAvAAgED0AAMg6AABgugCAF70AAL89AEAtvQAA2DoAAIg6AFC1PQBAA70AAEw8ACAhvQBAs7wAgPk8AIAGPQBgkr0AAL+9AICzvAAAUr0AAI87AAD4uwBAqLwAgLI9AKAovQCAPLwAwO88AGBbvQDAFD0AAFS7APCPPQAAAz0=","chunkHash":"d0a2172d9fe11044d573dd1fa8fd81f8c783e67cba384ddbfac388b95a556a45"}]},"file:///teamspace/studios/this_studio/.vscode-server/data/User/workspaceStorage/78fc982b9b8fe2a6521e66493c91369d/GitHub.copilot-chat/workspace-chunks.json":{"hash":"31f563f2d23c8bb57ba652750cf2221026537609db29f000fd7d0bdc9973efc3","entries":[{"text":"File: `...r/data/User/workspaceStorage/78fc982b9b8fe2a6521e66493c91369d/GitHub.copilot-chat/workspace-chunks.json`\n`````json\n{\"version\":\"1.0.0\",\"entries\":{\"file:///teamspace/studios/this_studio/dataloader/lowres_image_dataloader.py\":{\"hash\":\"658d293bafe690b5ba9dea6f9df4dfb2f6ec7d06c4d15f3d8410ecd56e9a99ba\",\"entries\":[{\"text\":\"File: `dataloader/lowres_image_dataloader.py`\\n```python\\n#...\\ndef load_chromatin_classes(csv_path, ignore_unclassified=True):\\n    \\\"\\\"\\\"\\n    Load chromatin class information from CSV file.\\n    \\n    Args:\\n        csv_path (str): Path to the CSV file containing chromatin class information.\\n        ignore_unclassified (bool): Whether to ignore entries with class_name \\\"Unclassified\\\".\\n        \\n    Returns:\\n        dict: Dictionary mapping sample_id to class information (id and name).\\n    \\\"\\\"\\\"\\n    ...\n`````","range":{"startLineNumber":0,"startColumn":0,"endLineNumber":1,"endColumn":0},"embedding":"AIAEPACAljwAAPo8AHCZvQAgWD0AQGS9AIB5PADgB70AQFG9AADuuwBgNz0AgBQ9AIAXPQAgFb0A4DO9ACAnPQCAObwAgAi9ACBVvQBgNz0AABY9ACA/vQDgLD0AgFE8AOBhvQBApLwA8IC9AADsPAAAmDwAAAq7AMCCvQAARr0AwAg9AEDRPACgQb0AoC69AID3PACAzjwAAPS6AKCKvQAA/bwA0Iq9AMBUPQDQsT0AgFk8AIByvQAAP70AAK47AEB7PQCAp7wA0J+9AMCYPABgHD0AAGe8AFCPvQAAHDsAAK+8AAAAPQDgOr0AAJQ6AIBIPQDAh70AQIU8AMCRPAAAZrwA4IE9AHCEvQAAjLwAAKE7AADcugAgLD0AoGg9AGAvvQAACL0AYHM9AAAFvQCAc7wA8Ik9AADwvACghb0AgNq8AABwPQAAX7wA4D29AEBSvQAgAb0AoJe9AJCgvQCAojwAQP28ACACPQAAnTsA0NG9AECXPADAAj4AAHI8AMDcvAAgl70AoAA9AAAmPACArTwAIB09AID2vAAAursAALQ7AIAFPADgTT0AsI+9AAA7vQAwgb0A4JG9AIBGvADAPT0AAFs8AAACPABQgL0AoIS9AAApPQCgQr0AoDo9ACB/vQAAmbwAwF09ADCAvQAAnLwA8Ii9AMCxPAAAYLwAAAW8AAAgvQCA3zwAoAa9AMCrPQCQv70AgOq8AEDrvABgt70AANQ6AIA9vQDAij0AgOm8AACAuABA07wAAEm8AEDpvAAAqLoAMJW9AHDCPQBwj70AAIY7AAD0OgAgGT0AwP28AAAWPAAA4TsAwLq8AMCVPACwiT0A4E29AADbvAAAg7sAYFw9AMCEPAAAfLwAALq8AEACPQBApjwAICO9AMClvQDQmL0AAEq8AIBavABA7LwAkJA9AAAcuwAAXLwAYGq9AMChPAAAl70AQAa9AGBrvQCgJL0AICC9AMBcvQAAyr0A4F29AABVPACA8LwAAM+8AAAoOgAAczwAgBo9AIDaPAAAnzsAgLq8ABCKvQBgnD0AAFw8AABjPQCAHj0AYIu9ADgTPgBA2LwAwMS8AAAYvQAAsLwAIAK9AAB4vACgrr0AgP+8AEAyPQBAljwAAJK9AADQOQAARbwAIGS9AEDNvADgOD0AwLg8AMD+vAAgL70AAKY9AABIPABAoj0AAKO8AMCtPAAAqjwAMIO9AAA6PQDgdD0AAAQ9AMDOvABgV70AYEi9AACjPAAQhL0AgKw8AOBvvQDgCz0AoHE9ABD1vQAAwLgAUMA9AAAYPQDgrT0AgEw8AOA5vQAAu70AAAC6ACBXPQDAszwAwGE9AEDNPAAwnr0AgBO9AACkPACQjr0AACC7AADhOwBA87wAQFc9AAD9vACgq70AgJQ8AEDivACANTwA0Is9AABxPABAGL0AAC69AKAdPQCAjjwAoCE9AIBWvAAQmL0AYDw9AADqvAAgZD0AIGk9AED3PABAIr0AoGo9AEBHvQCgwz0AwOu8AEALPQCAv7wA4BQ9AIAgvACAE7wA4Jo9AGBAPQAAajsAAPy7AED1vACAOrwA0I89ACA8PQDgAT0AALO7AACMuwCgVr0AQGQ9AIAVvQDACL0AAFS8AICzPADgOr0AgBa8AEAqPQCA/LwAABk9AACivAAAk7wAACm9AAA+OwCARj0AIJs9AEA6PQCAvDwAAEu9ANCLvQDAYD0AgA08AAAlvQBgRj0AgK08AIANPAAA7zsAwNe8AMDGvABAPb0AwKI8AADnPACAtj0AEKe9AIB6PAAAOj0AAAq8AIBHvACQkr0A4FC9ADCjvQAAtbsAQIS8AIBlPACAQDwAgHw9AADQuQDgMr0AwOQ8AABrvADgUL0AQAK9AIAovACAPb0AwP28AEBNvQAAursAANQ6AIC4vAAAETwAIBs9AIBBPAAgKz0AgAE9AAAXvAAAODsAAIM9AEBmvQAARjwAgNC8AED3vAAA/7wAoJm9AMDOvAAgLT0AEOY9AIBBvABwlz0AYDI9AID8PAAAOrwAoCm9AAAZPAAAULoAYBW9ACAGPQDADL0AAFQ7AEDPPADAr7wAgBc9AABmPAAA7zsAcIM9AFDYPQCAkLwAAAA6ANCZvQBADj0AAHS9AAAGvAAA1zwAAIg8AIBtvAAAZrwAwG89AMC3PACAwLwA4CU9AEC9PAAAgLoAoFW9AAC0uwCAfL0AAHS8AACEugAAb7wAsOE9AIA+vQAAWDsAgMm8AADwugAA3bsAENM9AKA+PQAA07wAoAg9AGAzvQDAn7wAACC5ACAoPQAA0rsAAB09AMBsvQAAIDsAALU8AID3PACwg70AAJa7AMDtvADgJz0AwCE9AMAXvQCAnbwAgCY8AAA/vACgGT0AgA+9AKBPPQCQmL0AAAK8AECdvACAibwA8I29AACovACAUjwAsNk9AADIOwDAmLwAQIk9AABUPACAfD0AABY9AIDJvACgD70AACK9AABwOgDAxbwAwMk8AMDsPAAA0zwAAK27AECmPABwmL0A4Fw9AMDbvABgEL0AAI+7AOAcvQAAjbwAwJu9AMAhPQAA6TwAUAE+AEC/vABgQL0AwJI8AMCOvAAASr0AgBc8AECEvABApbwAgDK8AADluwAger0A8MC9AMDZvAAAZ70AAEE8AMCOvQBgJT0AwLU8ACAevQDAx7wAgGu9AABJvADAjLwAAFm8AIChPADA4Dw=","chunkHash":"e01ec37bfe02ca23743a7114290d14bec929748a8c35536a401b7f415c733ee0"}]}}}